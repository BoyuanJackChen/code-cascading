[
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution('[:||:]') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n[::]\n''') == '-1'\nassert solution('''\n[:||:]\n''') == '5'\nassert solution('''\n[:|||:]\n''') == '6'\nassert solution('''\n[::||:]\n''') == '7'\nassert solution('''\n[::||:||]\n''') == '8'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''[::]''') == ''\nassert solution('''[:||:]''') == '7'\nassert solution('''[:|||:]''') == '9'\nassert solution('''[:|||:|]]''') == '9'\nassert solution('''[:|||:|||:|||:||]''') == '8'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"[:||:]\") == \"||\"\nassert solution(\"[:|||:]\") == \"|||\"\nassert solution(\"[::]\") == \"||\"\nassert solution(\"[:::]\") == \"||:\"\nassert solution(\"[:||:]\") == \"||\"\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[:||:]\") == \"||:\"\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([]) == -1\nassert solution([::]) == -1\nassert solution([:|||:]) == -1\nassert solution([:||:]) == -1\nassert solution([:|||:||:||:]]) == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[::]') == '-1'\nassert solution('[:||:]') == '4'\nassert solution('[:|||:]') == '6'\nassert solution('[:|||:])') == '-1'\nassert solution('[:||:|])') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '[a:b:|]'\n    ) == '4', solution(\n    '[a:b:|]'\n    )\nassert solution(\n    ']:[|:'\n    ) == '-1', solution(\n    ']:[|:'\n    )\nassert solution(\n    '::'\n    ) == '2', solution(\n    '::'\n    )\nassert solution(\n    '|:|:|:'\n    ) == '3', solution(\n    '|:|:|:'\n    )\nassert solution(\n    '||:||:||:'\n    ) == '5', solution(\n    '||:||:||:'\n    )\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution(']:[|:]') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n  '[::',\n  'a:b:',\n  'c|d:',\n  'e:f::',\n  'g|h:',\n  'i|j:',\n  'k:l:',\n 'm|n:',\n  'o|p::',\n  'q:r:',\n 's|t:',\n  'u|v:',\n  'w|x:',\n  'y|z::',\n  ']::]'\n]) == '4'\nassert solution([\n  '[::',\n  'a:b:',\n  'c|d:',\n  'e:f::',\n  'g|h:',\n  'i|j:',\n  'k:l:',\n 'm|n:',\n  'o|p::',\n  'q:r:',\n 's|t:',\n  'u|v:',\n  'w|x:',\n  'y|z::',\n  ']::]',\n]) == '8'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('58') == '59'\nassert solution('8') == '8'\nassert solution('27') == '28'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('44') == '4'\nassert solution('4400') == '4'\nassert solution('101') == '1'\nassert solution('9') == '9'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(521) == \"499\""
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\""
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\""
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"6\"\nassert solution(\"12345\") == \"234\"\nassert solution(\"4321\") == \"432\"\nassert solution(\"54321\") == \"543\"\nassert solution(\"999999\") == \"9999\"\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\nprint(solution(input()))"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('101') == '1'\nassert solution('123') == '123'\nassert solution('12345') == '123'\nassert solution('321') == '321'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('123456789') == '3999'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n\nprint(solution(input()))"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('13') == '2'\nassert solution('15') == '2'\nassert solution('100') == '99'\nassert solution('200') == '1'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"100\") == \"99\"\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == \"1\"\nassert solution('201') == \"99\"\nassert solution('4000') == \"1000\"\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5\") == \"7\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\nassert solution(\"4 3\\n1 1\\n2 2\\n3 4\\n\") == \"3\"\nassert solution(\"4 4\\n1 1\\n2 2\\n3 4\\n\") == \"3\"\nassert solution(\"7 4\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"2\"\nassert solution(\"10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"9\""
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''4 3\n1 1\n2 2\n3 4\n\nOutput\n2''') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 4\") == \"3\""
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '7'\nassert solution('6 5') == '7'\nassert solution('6 6') == '5'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 6\n1 4\n4 5\n5 6\n6 7\n3 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4\n1 1\n2 2\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 5\") == \"7\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 4\") == \"3\""
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\nassert solution('''\n4 3\n1 1\n2 2\n3 4\n''') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5') == '7'\nassert solution('4 3') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([11, 23]) == '2'\nassert solution([1, 7]) == '0'\nassert solution([5, 1]) == '0'\nassert solution([1, 1]) == '0'\nassert solution([5, 1]) == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n13 23\n''') == '2'\nassert solution('''\n5 01\n''') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '0'"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n\nstdin = ''\nfor i in range(int(input())):\n    stdin += f'{int(input()) * int(input()):04d} '\nprint(solution(stdin))\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n11 23') == '2'\nassert solution('5\\n01 07') == '0'"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n\n\"\"\"\n\nstdin = input()\ntime = stdin.split()\nhour = int(time[0])\nminutes = int(time[1])"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n11 23\n\n''') == '1'\nassert solution('''\n5\n01 07\n\n''') == '0'\n'''\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    11 23\n''') == '2'\n\nassert solution('''\n    5\n    01 07\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3 2 4\n''') == '5'\nassert solution('''5 2 1 5\n''') == '1'\nassert solution('''5 2 1 5\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 3 2 4\n''') == '5'\nassert solution('''5 2 1 5\n''') == '0'\nassert solution('''6 3 1 3\n''') == '1'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution('6 3 2 4') == '5'\nassert solution('5 2 1 5') == '1'\nassert solution('6 3 1 3') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1 5\\n') == '1'\nassert solution('6 3 2 4\\n') == '5'\nassert solution('6 3 1 3\\n') == '1'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\""
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1 3') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('2 3 2 4') == '2'"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 3 2 4\n    3\n    5\n    4\n    ''') == '5'\n\nassert solution('''5 2 1 5\n    1\n    5\n    4\n    ''') == '0'\n\nassert solution('''5 2 1 5\n    4\n    ''') == '0'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''5\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''6\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\nassert solution('''7\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '4'\nassert solution('''8\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100') == '2'\nassert solution('3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\nassert solution('''\n7 10\n4 8\n9 2\n1 6\n8 3\n6 1\n3 7\n4 7\n1 3\n3 1\n6 3\n8 3\n''') == '7'\nassert solution('''\n7 10\n6 2\n8 2\n2 4\n1 4\n4 7\n4 3\n3 6\n2 4\n1 5\n4 2\n1 3\n4 2\n1 4\n3 4\n2 5\n3 2\n2 1\n3 3\n4 3\n2 4\n''') == '7'\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\nassert solution('''\n4 2\n6 2\n3 2\n2 1\n1 4\n4 5\n4 1\n''') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\n\nassert solution('''\n3 100\n1 100\n2 100\n''') == '-1'\n\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\n\nassert solution('''\n3 100\n1 100\n2 100\n''') == '3'\n\nassert solution('''\n3 100\n1 100\n2 100\n''') == '2'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '-1'\n\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2 10\n5 5\n3 2\n5 4\n5 2\n1 4\n4 6\n5 5\n4 3\n3 5\n2 3\n3 3\n3 5\n2 5\n2 1\n5 3\n4 5\n4 5\n5 5\n4 5\n4 5\n5 5\n5 5\n5 5\n5 5\n5 5\n''') == '1'\nassert solution('''\n1\n2 10\n5 5\n3 2\n5 4\n5 2\n1 4\n4 6\n5 5\n4 3\n3 5\n2 3\n3 3\n3 5\n2 5\n2 1\n5 3\n4 5\n4 5\n5 5\n4 5\n4 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n''') == '2'\nassert solution('''\n1\n2 10\n5 5\n3 2\n5 4\n5 2\n1 4\n4 6\n5 5\n4 3\n3 5\n2 3\n3 3\n3 5\n2 5\n2 1\n5 3\n4 5\n4 5\n5 5\n4 5\n4 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n''') == '3'\nassert solution('''\n1\n2 100\n3 9\n1 3\n3 5\n4 4\n2 1\n4 6\n4 2\n3 2\n4 2\n3 2\n4 2\n2 3\n1 2\n''') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10') == '2'\nassert solution('6 3') == '3'\nassert solution('8 2') == '1'\nassert solution('1 4') == '-1'\nassert solution('4 10') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''\n5 5\n4 4\n3 5\n2 3\n1 4\n4 1\n4 1\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3 5\n4 4\n3 5\n2 3\n1 4\n4 1\n4 1\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3 5\n4 4\n3 5\n2 3\n1 4\n4 1\n4 1\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3 5\n4 4\n3 5\n2 3\n1 4\n4 1\n4 1\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\""
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n''') == '4'\nassert solution('''8 1\n''') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"7 1\") == \"4\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n''') == '4'\nassert solution('''8 1\n''') == '5'\n\n--------------------------------------------------------------------------------------------------------------------------------\n\nSample Input 1\n\n2 4\n\nSample Output 1\n\n3\n\nSample Input 2\n\n8 1\n\nSample Output 2\n\n4\n\n--------------------------------------------------------------------------------------------------------------------------------\n\n1\n2\n3\n4\n\n2\n5\n8\n10\n13\n16\n19\n22\n25\n28\n31\n34\n37\n40\n43\n46\n49\n52\n55\n58\n61\n64\n67\n70\n73\n76\n79\n82\n85\n88\n91\n94\n97\n100\n103\n106\n109\n112\n115\n118\n121\n124\n127\n130\n133\n136\n139\n142\n145\n148\n151\n154\n157\n160\n163\n166\n169\n172\n175\n178\n181\n184\n187\n190\n193\n196\n199\n202\n205\n208\n211\n214\n217\n220\n223\n226\n229\n232\n235\n238\n241\n244\n247\n250\n253\n256\n259\n262\n265\n268\n271\n274\n277\n280\n283\n286\n289\n292\n295\n298\n301\n304\n307\n310\n313\n316\n319\n322\n325\n328\n331\n334\n337\n340\n343\n346\n349\n352\n355\n358\n361\n364\n367\n370\n373\n376\n379\n382\n385\n388\n391\n394\n397\n400\n403\n406\n409\n412\n415\n418\n421\n424\n427\n430\n433\n436\n439\n442\n445\n448\n451\n454\n457\n460\n463\n466\n469\n472\n475\n478\n481\n484\n487\n490\n493\n496\n499\n502\n505\n508\n511\n514\n517\n520\n523\n526\n529\n532\n535\n538\n541\n544\n547\n550\n553\n556\n559\n562\n565\n568\n571\n574\n577\n580\n583\n586\n589\n592\n595\n598\n601\n604\n607\n610\n613\n616\n619\n622\n625\n628\n631\n634\n637\n640\n643\n646\n649\n652\n655\n658\n661\n664\n667\n670\n673\n676\n679\n682\n685\n688\n691\n694\n697\n700\n703\n706\n709\n712\n715\n718\n721\n724\n727\n730\n733\n736\n739\n742\n745\n748\n751\n754\n757\n760\n763\n766\n769\n772\n775\n778\n781\n784\n787\n790\n793\n796\n799\n802\n805\n808\n811\n814\n817\n820\n823\n826\n829\n832\n835\n838\n841\n844\n847\n850\n853\n856\n859\n862\n865\n868\n871\n874\n877\n880\n883\n886\n889\n892\n895\n898\n901\n904\n907\n910\n913\n916\n919\n922\n925\n928\n931\n934\n937\n940\n943\n946\n949\n952\n955\n958\n961\n964\n967\n970\n973\n976\n979\n982\n985\n987\n990\n993\n996\n999\n1002\n1005\n1008\n1011\n1014\n1017\n1020\n1023\n1026\n1029\n1032\n1035\n1038\n1041\n1044\n1047\n1050\n1053\n1056\n1059\n1062\n1065\n1068\n1071\n1074\n1077\n1080\n1083\n1086\n1089\n1092\n1095\n1098\n1101\n1104\n1107\n1110\n1113\n1116\n1119\n1122\n1125\n1128\n1131\n1134\n1137\n1140\n1143\n1146\n1149\n1152\n1155\n1158\n1161\n1164\n1167\n1170\n1173\n1176\n1179\n1182\n1185\n1188\n1191\n1194\n1197\n1200\n1203\n1206\n1209\n1212\n1215\n1218\n1221\n1224\n1227\n1230\n1233\n1236\n1239\n1242\n1245\n1248\n1251\n1254\n1257\n1260\n1263\n1266\n1269\n1272\n1275\n1278\n1281\n1284\n1287\n1290\n1293\n1296\n1299\n1302\n1305\n1308\n1311\n1314\n1317\n1320\n1323\n1326\n1329\n1332\n1335\n1338\n1341\n1344\n1347\n1350\n1353\n1356\n1359\n1362\n1365\n1368\n1371\n1374\n1377\n1380\n1383\n1386\n1389\n1392\n1395\n1398\n1401\n1404\n1407\n1410\n1413\n1416\n1419\n1422\n1425\n1428\n1431\n1434\n1437\n1440\n1443\n1446\n1449\n1452\n1455\n1458\n1461\n1464\n1467\n1470\n1473\n1476\n1479\n1482\n1485\n1488\n1491\n1494\n1497\n1500"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\""
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n''') == '4'\nassert solution('''8 1\n''') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,2]) == \"4\"\nassert solution([8,1]) == \"5\"\nassert solution([50,1]) == \"49\"\nassert solution([10,1]) == \"9\"\nassert solution([5,3]) == \"4\"\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1s 2s 3s\n\"\"\") == \"0\"\nassert solution(\"\"\"\n9m 9m 9m\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3p 9m 2p\n\"\"\") == \"1\"\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''9m 9m 9m\n''') == '0'\nassert solution('''3p 9m 2p\n''') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1s 2s 3s\n1p 2p 3p''') == '0'\nassert solution('''3p 9m 2p\n3p 3p 3p''') == '1'\nassert solution('''3p 9m 2p\n1m 3m 3m''') == '1'\nassert solution('''9m 9m 9m\n9m 9m 9m''') == '0'\nassert solution('''9m 9m 9m\n1m 3m 3m''') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1s 2s 3s\n\n3p 9m 2p''') == '1'\nassert solution('''3p 9m 2p\n\n1s 2s 3s''') == '2'\nassert solution('''3p 9m 2p\n\n1s 2s 3s''') == '0'\nassert solution('''3p 9m 2p\n\n9m 9m 9m\n\n3p 9m 2p''') == '1'\nassert solution('''3p 9m 2p\n\n9m 9m 9m\n\n3p 9m 2p''') == '2'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1s 2s 3s\n9m 9m 9m''') == '0'\nassert solution('''3p 9m 2p''') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1s 2s 3s') == \"0\"\nassert solution('9m 9m 9m') == \"0\"\nassert solution('3p 9m 2p') == \"1\""
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n\n''') == '1'\nassert solution('''\n3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n\n''') == '2'\nassert solution('''\n2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n\n''') == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 2'\n    ) == '1'\n\nassert solution(\n    '10 10'\n    ) == '2'\n\nassert solution(\n    '5 5 6 5'\n    ) == '2'\n\nassert solution(\n    '2 2'\n    ) == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3 2\n    3 1 3 2\n    1 2 2 2\n    1 0 0 1\n    \"\"\") == \"1\"\nassert solution(\n    \"\"\"\n    3\n    10 10\n    1 2 1 1\n    5 5 6 5\n    6 4 5 4\n    2 1 2 0\n    \"\"\") == \"2\"\nassert solution(\n    \"\"\"\n    2\n    2 2\n    2 1 1 1\n    1 2 2 2\n    1 0 0 0\n    \"\"\") == \"-1\""
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 2') == '1'\nassert solution('2\\n2 2') == '2'\nassert solution('3\\n10 10') == '2'\nassert solution('2\\n10 10') == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('3 3') == '1'\nassert solution('1 2 1 1') == '1'\nassert solution('1 0 0 1') == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '1'\nassert solution(input_) == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"\") == -1"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\nassert solution('''\n3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\nassert solution('''\n2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n''')"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n''') == '0 0'\nassert solution('''\n5\n''') == '4 4'"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\\n\") == \"4 4\"\nassert solution(\"1\\n\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4 4'\nassert solution('4') == '4 4'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n\n''') == '4 4'\nassert solution('''5\n\n''') == '0 2'\nassert solution('''2\n\n''') == '0 2'"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4 4'\nassert solution(input()) == '0 2'"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"39\"\n\"\"\"\nimport math"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3 12 15\n6 2 3 15\n5 2 7\n6 2 3\n5 3 1\n6 3 15\n5 5 4\n6 5 3\n5 5 3\n6 5 3''') == '39'\nassert solution('''5 2 3 12 15\n6 2 3 15\n5 2 7\n6 2 3\n5 3 1\n6 3 15\n5 5 4\n6 5 3\n5 5 3\n6 5 3''') == '57'\nprint('all test cases passed')\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\""
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3 12 15') == \"39\"\nassert solution('20 2 3 3 5') == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(test_input_1) == \"12\"\nassert solution(test_input_2) == \"17\"\nassert solution(test_input_3) == \"70\"\nassert solution(test_input_4) == \"81\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\nassert solution('1') == '1'\n\"\"\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3 12 15') == \"39\""
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\""
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '4'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nGGG\n''') == '4'\nassert solution('''4\nGGS\n''') == '0'\nassert solution('''3\nSSS\n''') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\nGGGSGGGSGG') == '7'\nassert solution('4\\nGGGG') == '4'\nassert solution('3\\nSSS') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"8\") == \"4\"\nassert solution(\"1\") == \"1\"\n\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '4'\nassert solution('3') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\nGGGG\") == \"7\"\nassert solution(\"4\\nSSS\") == \"4\"\nassert solution(\"3\\nSSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"6 2\") == \"1 2 3 4 5\"\nassert solution(\"9 3\") == \"6\"\nassert solution(\"9 3\") == \"1 2 3 4 5 3\"\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n\") == \"5\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n\") == \"6\"\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '6'\n\nassert solution('6 2') == '5'\n\nassert solution('4 4') == '-1'\n\nassert solution('5 5') == '7'\n\nassert solution('10 10') == '-1'"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n5 3\") == \"5\"\nassert solution(\"9 3\\n3 9 5\") == \"6\"\nassert solution(\"3 3\\n1 2 3\") == \"-1\"\nassert solution(\"3 3\\n1 2\") == \"1 2\"\nassert solution(\"3 3\\n1 2 3 4 5\") == \"1 2 3 4 5\""
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n\n''') == '5'\nassert solution('''6 2\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n\n''') == '6'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n\n''') == '-1'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n\n''') == '3'\nassert solution('''6 3\n5 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n\n''') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6', \"Wierd\"\nassert solution('6 2') == '5', \"Wierd\"\nassert solution('7 5') == '-1', \"Wierd\"\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n') == '5\\n1 2 3 4 5 \nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n') == '6\\n1 2 9 4 5 3 \nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\\n') == '-1'"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"9 3\") == \"6\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 1 2 2\") == \"1 1 2 2\"\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n\n''') == '5'\nassert solution('''6 2\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n\n''') == '6'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n\n''') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n') == '5'\nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n') == '6'\nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\\n') == '-1'\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n\u0422\u0435\u0441\u0442 \u043d\u0430 \u0432\u0432\u043e\u0434 \u0438 \u0432\u044b\u0432\u043e\u0434:\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 6\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 5\n0\n0\n0\n2 2 1\n1 4\n1 5\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 3\n3 9 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 1\n1 2 3\n1 2\n1 3\n1 1\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 3\n1 2 3\n1 2\n1 3\n1 1\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 1\n1 2 3\n1 2\n1 3\n1 1\n\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432: 3\n1 2 3\n1 2\n1 3\n1 1\n0\n0\n-1\n'''\n\nfrom collections import deque"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"3 2 1 5 4\"\nassert solution(\"3 2 1 5 4\") == \"3 2 1 5 4\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"3 2 1 5 4\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"6 1\") == \"6 1\"\nassert solution(\"5 1\") == \"5 1\""
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n3 2 1\n''') == '3 2 1 5 4', f\"actual: {solution('''5 3\n3 2 1\n''')} expected: '3 2 1 5 4'\n\nassert solution('''\n5 3\n2 3 1\n''') == '-1', f\"actual: {solution('''5 3\n2 3 1\n''')} expected: '-1'\"\n\nassert solution('''\n5 1\n3\n''') == '3 2 1 5 4', f\"actual: {solution('''5 1\n3\n''')} expected: '3 2 1 5 4'\"\n\nassert solution('''\n5 2\n3 4\n''') == '-1', f\"actual: {solution('''5 2\n3 4\n''')} expected: '-1'\"\n\nassert solution('''\n10\n1 6 3 8 2 4 7 5 9 10 9 10\n''') == '-1', f\"actual: {solution('''10\n1 6 3 8 2 4 7 5 9 10 9 10\n''')} expected: '-1'\""
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n3 2 1\n''') == '3 2 1 5 4', 'p[i] > p[i-1] i>0'\nassert solution('''\n5 3\n2 3 1\n''') == '-1', 'i > 0'\n\nassert solution('''\n5 2\n3 4\n''') == '3 2 1 5 4', 'p[i] > p[i-1] i>0'\nassert solution('''\n5 2\n2 3 1\n''') == '-1', 'i > 0'\n\nassert solution('''\n5 1\n3\n''') == '3 2 1 5 4', 'p[i] > p[i-1] i>0'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"3 2 1 5 4\"\nassert solution(\"5 1\") == \"3 2 1 5 4\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"3 2 1 5 4\"\nassert solution(\"5 3\") == \"3 2 1 5 4\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"10 1\") == \"10 1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1') == '1 1'\nassert solution('4 3\\n3 4 1 2') == '4 3 4 3 1 2'\nassert solution('2 1\\n2') == '2 1'"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n3 2 1') == '3 2 1 5 4'\nassert solution('5 3\\n2 3 1') == '-1'\nassert solution('5 1\\n3') == '3 2 1 5 4'\nassert solution('5 1\\n3') == '-1'"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n3 2 1\n''') == \"3 2 1 5 4\"\nassert solution('''5 3\n2 3 1\n''') == \"2 3 1 5 4\"\n\nassert solution('''5 1\n3\n''') == \"3 2 1 5 4\"\nassert solution('''5 1\n3\n''') == \"3 2 1 5 4\""
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 7 3\n''') == 'YES'\nassert solution('''\n10 10 0\n''') == 'YES'\nassert solution('''\n1 -4 5\n''') == 'NO'\nassert solution('''\n0 60 50\n''') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"YES\"\nassert solution(\"-1 1 0\") == \"NO\""
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == 'YES'"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n\n\n\n-----Explanation-----\n\nInput\n\nThe first line contains a single integer: a.\n\nThe second line contains three integers: a, b and c (a - 10^9 \u2264 a, b, c \u2264 10^9).\n\nThe third line contains a single integer: b.\n\nOutput\n\nIn the first case, the answer is YES: the sequence starts from 1, 4, 7, so 7 is its element.\n\nIn the second case, the answer is YES: the favorite integer of Vasya is equal to the first element of the sequence.\n\nIn the third case, the answer is NO: all elements of the sequence are greater than Vasya's favorite integer.\n\nIn the fourth case, the answer is NO: the sequence starts from 0, 50, 100, and all the following elements are greater than Vasya's favorite integer.\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 7 3\\n') == 'YES\\n'\nassert solution('10 10 0\\n') == 'YES\\n'\nassert solution('1 -4 5\\n') == 'NO\\n'\nassert solution('0 60 50\\n') == 'NO\\n'"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'YES'\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 7 3\n1 -4 5''') == 'YES'\n\nassert solution('''0 60 50''') == 'NO'\n\nassert solution('''1 -4 5''') == 'NO'\n\nassert solution('''0 0 0''') == 'NO'\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 1\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 0\nassert solution('4') == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3''') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"0\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '0'\nassert solution(\"3\") == '0'\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n1\n4\n2''') == \"1\"\nassert solution('''4\n0\n0\n0\n0''') == \"0\"\nassert solution('''0\n0\n0\n0\n0''') == \"1\"\nassert solution('''4\n3\n3\n2\n3''') == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n4\n3\n''') == '1'\nassert solution('''0\n0\n0\n0\n''') == '1'\nassert solution('''1\n2\n3\n4\n''') == '0'\nassert solution('''1\n2\n3\n''') == '0'\n\nassert solution('''1\n3\n4\n''') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"1\\n2\\n3\") == \"1\"\nassert solution(r\"0\\n0\\n0\") == \"0\"\n"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\nprint('All test cases passed!')"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 5 3\"\n) == \"3\"\nassert solution(\n    \"5 5 7\"\n) == \"5\"\nassert solution(\n    \"10 5 7\"\n) == \"5\"\n"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 5 3\n''') == '3'\nassert solution('''\n10 5 7\n''') == '5'\nassert solution('''\n10 5 12\n''') == '3'"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\""
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\nassert solution(\"10000000000\") == \"10000000000\"\n"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\n\n'''"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n\n'''"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\""
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nprint(solution(input()))\n\n-------------------------------------------------------------\n\nclass Solution:\n    def solution(self, s: str) -> str:\n        s_list = list(s)\n        return ''.join(sorted(s_list))"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''cab\n''') == 'abc'\nassert solution('''acdb\n''') == 'abdc'\n'''\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'abdc'"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'abdc'\n\n\n\"\"\"\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\""
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ncab\n''') == 'abc'\nassert solution('''\nacdb\n''') == 'abdc'\n'''\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"abcd\""
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcd\nabcde\n''') == 'abcd'\nassert solution('''\nabcde\nabc\nabc\n''') == 'abc'\nassert solution('''\nabcdefghijklmnopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nabcd\nabcde\n''') == 'abcd'\nassert solution('''\nabcde\nabc\nabc\n''') == 'abc'\nassert solution('''\nabcde\nabcd\n''') == ''\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('acdb') == 'abdc'\nprint(solution(input()))\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\nassert solution('''\n6\n2\n5 1\n1 0\n0 0\n0 0\n0 0\n''') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n\"\n    \"0 0\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"1000 3\\n\"\n    \"4\\n\"\n    \"10 1\\n\"\n    \"15 2\\n\"\n    \"10 2\\n\"\n    \"15 2\\n\"\n    \"1\\n\"\n    \"765 432\"\n    ) == \"YES\"\nassert solution(\n    \"3\\n\"\n    \"0 0\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"1000 3\\n\"\n    \"4\\n\"\n    \"10 1\\n\"\n    \"15 2\\n\"\n    \"10 2\\n\"\n    \"15 2\\n\"\n    \"1\\n\"\n    \"765 432\"\n    ) == \"NO\"\nassert solution(\n    \"4\\n\"\n    \"0 0\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"1000 3\\n\"\n    \"4\\n\"\n    \"10 1\\n\"\n    \"15 2\\n\"\n    \"10 2\\n\"\n    \"15 2\\n\"\n    \"1\\n\"\n    \"765 432\"\n    ) == \"YES\"\nassert solution(\n    \"5\\n\"\n    \"0 0\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"1000 3\\n\"\n    \"4\\n\"\n    \"10 1\\n\"\n    \"15 2\\n\"\n    \"10 2\\n\"\n    \"15 2\\n\"\n    \"1\\n\"\n    \"765 432\"\n    ) == \"NO\"\nassert solution(\n    \"6\\n\"\n    \"0 0\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"2\\n\"\n    \"1 0\\n\"\n    \"1000 3\\n\"\n    \"4\\n\"\n    \"10 1\\n\"\n    \"15 2\\n\"\n    \"10 2\\n\"\n    \"15 2\\n\"\n    \"1\\n\"\n    \"765 432\"\n    ) == \"YES\"\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    0 0\n    1 1\n    1 2\n    ''') == 'NO'\nassert solution('''\n    4\n    10 1\n    15 2\n    10 2\n    15 2\n    1\n    ''') == 'YES'\nassert solution('''\n    6\n    0 0\n    1 1\n    1 2\n    2\n    1 0\n    1000 3\n    4\n    10 1\n    15 2\n    10 2\n    15 2\n    1\n    ''') == 'YES'\n\n'''\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n''') == \"NO\"\nassert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n''') == \"YES\"\nassert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n''') == \"YES\"\nassert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n''') == \"YES\"\nassert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n''') == \"YES\"\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n4\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\nassert solution('''\n5\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0''') == 'YES'\nprint(solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0'''))\nassert solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0''') == 'NO'\nprint(solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0'''))\nassert solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0''') == 'NO'\nassert solution('''6\n2\n0 0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('4') == 'NO'\nassert solution('3') == 'YES'\nassert solution('2') == 'YES'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\n1 0\n2\n1 0\n''') == 'NO'\nassert solution('''\n3\n2\n1 0\n2\n1 0\n''') == 'YES'\nassert solution('''\n3\n1\n1 0\n1\n2\n2\n''') == 'YES'\n\nassert solution('''\n4\n3\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n00:39\n''') == '11'\nassert solution('''\n13:31\n''') == '0'\nassert solution('''\n23:59\n''') == '1'\nprint('Almost done!')\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5:39') == '11'\nassert solution('13:31') == '1'\nassert solution('23:59') == '0'\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"1\"\nassert solution(\"23:59\") == \"0\"\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"05:39\n\n\"\"\"\n) == \"11\"\nassert solution(\n\"\"\"13:31\n\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"23:59\n\n\"\"\"\n) == \"1\""
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"1\"\nassert solution(\"23:59\") == \"0\""
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('''7\n1 6 5 3 4 7 2\n''') == '5'\nassert solution('''6\n6 5 4 3 2 1\n''') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == '1'\nassert solution(\"4\") == '0'\nassert solution(\"5\") == '0'\nassert solution(\"6\") == '1'\nassert solution(\"7\") == '4'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('6') == '5'"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '6'\nassert solution('6') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('6') == '5'\n\n'''\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"6\"\nassert solution() == \"5\"\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n') == '3'\nassert solution('7\\n1 6 5 3 4 7 2\\n') == '6'\nassert solution('6\\n6 5 4 3 2 1\\n') == '5'\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'NIE'\nassert solution('bod') == 'NIE'\nassert solution('xoxoXo') == 'TAK'\nassert solution('oXoxoXo') == 'TAK'\nassert solution('oXoxoxoXo') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oXoxoXo') == \"TAK\"\nassert solution('bod') == \"TAK\"\nassert solution('ER') == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\nprint(solution(input()))\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\""
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\""
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('oXoxoXo') == 'TAK', \"First\"\nassert solution('bod') == 'TAK', \"Second\"\nassert solution('ER') == 'NIE', \"Third\"\n\n'''"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1\n2\n\n\"\"\") == \"3\n1\n2\n\nassert solution(\"\"\"\n3\n4\n3\n\n\"\"\") == \"3\n4\n3\n\nassert solution(\"\"\"\n4\n5\n4\n3\n2\n\n\"\"\") == \"4\n5\n4\n3\n2\n\nassert solution(\"\"\"\n5\n4\n5\n4\n3\n2\n\n\"\"\") == \"5\n4\n5\n4\n3\n2\n\nassert solution(\"\"\"\n3\n4\n3\n\n\"\"\") == \"3\n4\n3"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == '213'\nassert solution('123') == '213'\nassert solution('3921') == '9321'\nassert solution('10000') == '4940'\nassert solution('123') == '213'\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == '213'\nassert solution('321') == '213'\nassert solution('1234') == '12321'"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n123\n222\n''') == '213'\nprint(solution('''\n3921\n10000\n'''))\nassert solution('''\n4940\n5000\n''') == '4940'\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123\\n222') == '213', '4940'\nassert solution('3921\\n10000') == '9321', '4940'\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123') == '213'\nassert solution('3921') == '9321'"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123') == '213'\nassert solution('222') == '213'\nassert solution('3921') == '9321'\nassert solution('10000') == '9321'\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"213\"\nassert solution(\"123456789\") == \"1234567890\"\nassert solution(\"987654321\") == \"9876543210\"\nassert solution(\"12987654321\") == \"12987654321\""
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''123\n222''') == '213'\nassert solution('''3921\n10000''') == '9321'"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == '213'\nassert solution('222') == '213'\nassert solution('3921') == '9321'\nassert solution('10000') == '9321'\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X') == 'YES'\nassert solution('XXOOX.....') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"XX.XX.....\") == \"YES\"\nassert solution(\"OO.O......\") == \"NO\"\n\n\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\".X..X.X..X.X.X.\") == \"YES\"\nassert solution(\".XO.X.X.O.X.\") == \"NO\"\nassert solution(\".X.O.X.O.X.\") == \"NO\"\nassert solution(\".X.X.O.X.\") == \"NO\"\nassert solution(\".X..X.O.X.\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('OO.O......') == 'NO'"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"XX.XX...\\nO.OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\", solution(\"XX.XX...\\nO.OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\")\nassert solution(\"X.XO.X.\\nOO.OOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\", solution(\"X.XO.X.\\nOO.OOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\")\nassert solution(\"X.XO.X.\\nOO.OOO.\\n.XOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\", solution(\"X.XO.X.\\nOO.OOO.\\n.XOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\")\nassert solution(\"X.XO.X.\\nOO.OOO.\\n.XOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\", solution(\"X.XO.X.\\nOO.OOO.\\n.XOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\")"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('OO.O......') == 'NO'\nassert solution('..........') == 'YES'\nassert solution('..........') == 'NO'\nassert solution('..........') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"XX.XX.....\") == \"YES\"\nassert solution(\"OO.O......\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('OO.O......') == 'YES'"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''XX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........''') == 'YES'\nassert solution('''XXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........''') == 'NO'\nprint(solution('''XX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........'''))"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 1\\n\"\n) == \"1 0\\n\"\n\nassert solution(\n    \"3 2\\n\"\n) == \"-1\"\n\nassert solution(\n    \"4 4\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n) == \"1 1 1 1\\n\"\n\nassert solution(\n    \"3 4\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n) == \"1 0 0 0\"\n\nassert solution(\n    \"4 4\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n) == \"1 0 0 0\""
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"1 0 0\"\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n\") == \"1 0\\n0 0\\n\", solution(\"2 1\\n\")\nassert solution(\"3 2\\n\") == \"1 0 0\\n0 1 0\\n0 0 0\\n\", solution(\"3 2\\n\")\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1 0\\n0 0\\n'\nassert solution('3 2') == '1 0 0 0\\n0 1 0 0\\n0 0 0 0\\n'\n\n\"\"\""
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1 0 0 \nassert solution(\"2 1\") == \"0 1 0 \nassert solution(\"3 2\") == \"0 0 0 \n\nassert solution(\"7 3\") == \"1 0 0 0 0 0 0\"\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '1 0 0'\nassert solution('3 2') == '1 0 0 0'\nassert solution('3 3') == '1 0 0 0'\nassert solution('3 3') == '1 0 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '1 0 \n0 1 0 \n0 0 0'\n\nassert solution('3 2') == '1 0 0 \n0 1 0 0 \n0 0 0 0'\n\nassert solution('5 2') == '1 0 0 0 0'"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('4 4') == '0 0 0 0'\nassert solution('3 3') == '1 0 0 0'\nassert solution('6 6') == '1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 1\\n'\n) == '1 0 \\n'\n\nassert solution(\n    '3 2\\n'\n) == '1 0 0 \\n'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"x^y^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1.1 3.4 2.5''') == 'z^y^x'\nassert solution('''2.0 2.0 2.0''') == 'x^y^z'\nassert solution('''1.9 1.8 1.7''') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.1 3.4 2.5') == \"z^y^x\"\nassert solution('2.0 2.0 2.0') == \"x^y^z\"\nassert solution('1.9 1.8 1.7') == \"(x^y)^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.1 3.4 2.5') == 'x^y^z', \"Wrong!\"\nassert solution('2.0 2.0 2.0') == 'x^y^z', \"Wrong!\"\nassert solution('1.9 1.8 1.7') == '(x^y)^z', \"Wrong!\"\nassert solution('2.1 2.2 2.5') == 'x^y^z', \"Wrong!\"\nassert solution('1.1 3.4 2.5') == 'x^y^z', \"Wrong!\""
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"(x^y)^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.1 3.4 2.5') == 'x^y^z'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == 'x^y^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"(x^y)^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.1 3.4 2.5') == 'x^y^z'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"x^y^z\"\n"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabcabca\n''') == '5'\nassert solution('''\nabcdefgh\n''') == '8'\n\ns = stdin.split()\ns = s[0]\ns = s.split(' ')"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abca\") == \"a\"\nassert solution(\"abcabca\") == \"a\""
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '8'\n\n----------------------------------------\n"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''abcabca''') == '5'\nassert solution('''abcdefgh''') == '8'"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n\nassert solution(input()) == \"7\""
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"7\""
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\nassert solution(input()) == '3'\nassert solution(input()) == '2'\n\n'''\n"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nabcdefgh\n\n''') == '5'\nassert solution('''9\nabcdefgh\n\n''') == '5'\nassert solution('''13\nabcdefghabcdefgh\n\n''') == '13'\nassert solution('''23\nabcdefghabcdefghabcdefgh\n\n''') == '14'\nassert solution('''50\nabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabcdefghabc"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''abcabca''') == '5'\nassert solution('''abcdefgh''') == '8'\nassert solution('''abcabca\nabcaa''') == '5'\nassert solution('''abcabca\nabcaa\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca\nabcabca''') == '10'\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == str(len(input()))\n\n\"\"\""
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 0\n2 1\n2extra 0\n3 1\n99 0\n\"\"\") == \"\"\"4\"\"\"\nassert solution(\"\"\"\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n\"\"\") == \"\"\"5\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\n\nassert solution(input()) == '5'"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '4'\nassert solution('5\\n1 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '3'\nassert solution('2\\n1 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '2'\nassert solution('5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n') == '5'\nprint('\u2705')\n\n'''\n\nimport sys\nimport re"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 0\n2 1\n2extra 0\n3 1\n99 0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 0\n2 1\n2extra 0\n3 1\n99 0\n\"\"\") == \"5\"\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 0\\n2 1\\n2 extra 0\\n3 1\\n99 0\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\"\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == \"4\"\nassert solution('''\n5\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == \"3\"\nassert solution('''\n2\n1 0\n2 1\n''') == \"2\"\nassert solution('''\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == \"5\"\n'''\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0') == '4'\nassert solution('2\\n1 0\\n2 1') == '3'\nassert solution('2\\n1 0') == '2'\nassert solution('5\\n1 0') == '4'\nassert solution('2\\n1 0') == '2'\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 0\n2 1\n2extra 1\n3 1\n99 0\n''') == '4'\nassert solution('''\n2\n1 0\n2 1\n''') == '3'\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '3'"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2 1\n2extra 0\n3 1\n99 0\n''') == '4'\n\nassert solution('''\n5\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '3'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n\n\n---------------------------------"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n\nstdin = input()\nprint(solution(stdin))"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\""
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123460') == '0'\nassert solution('111000') == '1'\nassert solution('123456') == '2'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == str(0)\nprint(solution(input))\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n''') == '3'\nassert solution('''5 2\n''') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('10 3') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\"\"\"\n\nimport math\nimport sys\nfrom functools import reduce\nfrom itertools import combinations_with_replacement"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\n\n'''\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3\n3\"\"\") == \"3\"\nassert solution(\"\"\"5 2\n2\"\"\") == \"2\""
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\n\nassert solution('''5 5''') == '1 1'\nassert solution('''4 2''') == '1 8'"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n''') == '1 8'\nassert solution('''\n1 3\n''') == '1 1'\nassert solution('''\n4 3\n''') == '23 128'"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1 8\"\nassert solution(\"3 3\") == \"23 128\"\n"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\""
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\""
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"1 8\"\nassert solution(\"\"\"\n1 3\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n4 3\n\"\"\") == \"23 128\""
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North''') == 'YES'\nassert solution('''2\n1000 North\n1000 South''') == 'NO'\nassert solution('''5\n20000 South\n10 East\n20000 North''') == 'YES'\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North''') == 'NO'"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\", \"First sample\"\nassert solution(\"1\") == \"YES\", \"Second sample\"\nassert solution(\"2\") == \"NO\", \"Third sample\"\nassert solution(\"3\") == \"YES\", \"Fourth sample\"\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n7500 South\\n10000 East') == 'YES'\nassert solution('5\\n20000 South\\n1000 North') == 'NO'\n"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n''') == 'YES', 'First sample'\n\nassert solution('''3\n20000 South\n10 East\n20000 North\n''') == 'NO', 'Second sample'\n\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North\n''') == 'YES', 'Third sample'\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\""
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"10\") == \"NO\"\n\n'''\n\nimport math"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\""
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n\n\n\"\"\"\n\nstdin = \"\"\"\n5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n\"\"\"\n\nn = int(input())\n\nfor _ in range(n):\n    t, d = input().split()\n    t = int(t)\n    if d == \"North\" and t <= 4000:\n        print(\"YES\")\n    elif d == \"South\" and t <= 2000:\n        print(\"YES\")\n    elif d == \"West\" and t <= 3500:\n        print(\"YES\")\n    elif d == \"East\" and t <= 5000:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\nprint(\"all tests passed\")"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 0 3 5\n''') == '3'\nassert solution('''\n2 4 3 0 6 17\n''') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"3\"\nassert solution(input) == \"2\"\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 0 3 3 5 21\n\"\"\") == \"3\"\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == '1'\nassert solution('''4 7 10''') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n''') == '1'\nassert solution('''4 7 10\n''') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\""
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\n\nstdin = '3 1 5'\nprint(solution(stdin))\n\nstdin = '2 1 3'\nprint(solution(stdin))\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('4 7 10') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 3\n''') == '1'\nassert solution('''4 7 10\n''') == '3'\nassert solution('''0 0 0\n''') == '0'\nassert solution('''10 9 5\n''') == '4'\nassert solution('''11 13 11\n''') == '0'"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n\n''') == 'YES', 'First example'\nassert solution('''\n4 3\nBRG\nBRG\nBRG\nBRG\n\n''') == 'YES', 'Second example'\nassert solution('''\n6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n\n''') == 'NO', 'Third example'\nassert solution('''\n4 4\nRRRR\nRRRR\nBBBB\nGGGG\n\n''') == 'NO', 'Fourth example'\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\\n') == \"YES\"\nassert solution('4 3\\nBRG\\nBRG\\nBRG\\nBRG\\n') == \"YES\"\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n') == \"NO\"\nassert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n') == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG') == \"YES\"\nassert solution('4 3\\nBRG\\nBRG\\nBRG\\nBRG') == \"YES\"\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB') == \"NO\"\nassert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG') == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''\n4 3\nBRG\nBRG\nBRG\nBRG\n\n''') == 'YES'\nassert solution('''\n6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n\n''') == 'NO'\nassert solution('''\n4 4\nRRRR\nRRRR\nBBBB\nGGGG\n\n''') == 'NO'"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG\n\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n\n''') == 'NO'\nassert solution('''5 4\nRRRR\nRRRR\nBBBB\nGGGG\n\n''') == 'NO'"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3 2\""
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '-2 0'\nassert solution('4') == '0 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()[:-1]\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 5\n-\n1 2\n2 3\n3 4\n4 5\n5 6''') == '-1 1'\nassert solution('''7\n4 3\n5 6\n1 2\n6 7\n3 4\n8 9\n2 5\n''') == '5 5'\nassert solution('''0\n2 0\n4 2\n3 5\n0 4\n4 0\n4 0\n0 0''') == '0 1'\nassert solution('''4\n2 2\n0 0\n0 2\n2 2\n''') == '3 3'\nassert solution('''4\n0 0\n0 0\n0 2\n2 0\n''') == '1 1'\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 2\"\n\nassert solution() == \"3 4\"\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1\n1\n''') == '-1 0'\nassert solution('''3\n2\n3\n''') == '2 2'\nassert solution('''8\n3\n4\n4\n5\n4\n4\n3\n4\n''') == '3 5'\nassert solution('''16\n1\n3\n4\n5\n6\n4\n5\n6\n7\n5\n6\n8\n8\n9\n7\n10\n9\n10\n8\n10\n11\n12\n10\n11\n11\n10\n9\n8\n''') == '12 11'\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"-2 0\", \"First\"\nassert solution(\"7\") == \"3 2\", \"Second\"\n\nstdin = \"\"\">=1\n>=4\n>=4\n>=6\n>=3\n>=8\n>=8\n>=4\n>=7\n>=4\n>=6\n>=6\n>=8\n>=5\n>=5\n>=8\n>=4\n>=3\n>=2\n>=6\n>=5\n>=2\n>=7\n>=6\n>=5\n>=8\n>=4\n>=7\n>=6\n>=8\n>=3\n>=8\n>=4\n>=8\n>=2\n>=6\n>=5\n>=6\n>=8\n>=3\n>=2\n>=4\n>=7\n>=5\n>=8\n>=6\n>=7\n>=4\n>=8\n>=2\n>=5\n>=3\n>=7\n>=6\n>=8\n>=4\n>=8\n>=2\n>=5\n>=4\n>=7\n>=6\n>=8\n>=3\n>=7\n>=2\n>=8\n>=3\n>=6\n>=8\n>=2\n>=5\n>=4\n>=7\n>=5\n>=8\n>=6\n>=7\n>=4\n>=8\n>=3\n>=2\n>=6\n>=5\n>=8\n>=7\n>=6\n>=4\n>=5\n>=4\n>=3\n>=2\n>=6\n>=5\n>=7\n>=4\n>=8\n>=3\n>=8\n>=2\n>=7\n>=6\n>=4\n>=5\n>=3\n>=2\n>=7\n>=6\n>=5\n>=8\n>=4\n>=7\n>=3\n>=2\n>=5\n>=6\n>=8\n>=4\n>=5\n>=4\n>=7\n>=6\n>=7\n>=6\n>=4\n>=8\n>=3\n>=7\n>=2\n>=8\n>=6\n>=8\n>=4\n>=6\n>=5\n>=3\n>=2\n>=7\n>=7\n>=4\n>=7\n>=6\n>=2\n>=8\n>=5\n>=7\n>=4\n>=2\n>=8\n>=6\n>=2\n>=3\n>=6\n>=4\n>=2\n>=7\n>=5\n>=8\n>=6\n>=3\n>=8\n>=5\n>=2\n>=7\n>=5\n>=8\n>=6\n>=4\n>=8\n>=7\n>=6\n>=3\n>=2\n>=7\n>=6\n>=5\n>=4\n>=7\n>=2\n>=8\n>=5\n>=5\n>=4\n>=8\n>=7\n>=2\n>=3\n>=8\n>=6\n>=6\n>=2\n>=7\n>=4\n>=3\n>=7\n>=5\n>=5\n>=4\n>=8\n>=7\n>=6\n>=2\n>=6\n>=8\n>=7\n>=3\n>=5\n>=8\n>=6\n>=4\n>=2\n>=5\n>=4\n>=7\n>=2\n>=6\n>=7\n>=2\n>=5\n>=8\n>=5\n>=5\n>=6\n>=4\n>=2\n>=6\n>=8\n>=6\n>=7\n>=6\n>=3\n>=7\n>=2\n>=2\n>=4\n>=8\n>=4\n>=5\n>=4\n>=7\n>=5\n>=3\n>=8\n>=5\n>=5\n>=4\n>=3\n>=2\n>=7\n>=6\n>=4\n>=5\n>=5\n>=4\n>=3\n>=6\n>=7\n>=2\n>=8\n>=3\n>=5\n>=3\n>=4\n>=7\n>=7\n>=5\n>=4\n>=3\n>=8\n>=8\n>=6\n>=2\n>=7\n>=5\n>=8\n>=6\n>=4\n>=5\n>=3\n>=2\n>=6\n>=7\n>=2\n>=6\n>=3\n>=4\n>=8\n>=3\n>=7\n>=5\n>=4\n>=2\n>=6\n>=4\n>=7\n>=6\n>=5\n>=2\n>=7\n>=2\n>=5\n>=3\n>=2\n>=6\n>=7\n>=3\n>=2\n>=5\n>=5\n>=8\n>=6\n>=3\n>=4\n>=2\n>=6\n>=4\n>=3\n>=2\n>=5\n>=2\n>=3\n>=6\n>=5\n>=3\n>=8\n>=5\n>=5\n>=6\n>=4\n>=2\n>=7\n>=6\n>=4\n>=5\n>=3\n>=8\n>=5\n>=5\n>=4\n>=4\n>=3\n>=2\n>=6\n>=7\n>=2\n>=4\n>=2\n>=7\n>=6\n>=6\n>=3\n>=6\n>=2\n>=4\n>=5\n>=3\n>=2\n>=7\n>=6\n>=5\n>=4\n>=6\n>=5\n>=6\n>=4\n>=3\n>=2\n>=7\n>=6\n>=5\n>=8\n>=7\n>=6\n>=2\n>=5\n>=4\n>=7\n>=4\n>=6\n>=2\n>=3\n>=7\n>=6\n>=3\n>=3\n>=3\n>=6\n>=4\n>=8\n>=5\n>=2\n>=6\n>=7\n>=4\n>=5\n>=7\n>=6\n>=5\n>=2\n>=5\n>=5\n>=4\n>=4\n>=3\n>=2\n>=7\n>=5\n>=4\n>=2\n>=4\n>=2\n>=6\n>=6\n>=5\n>=3\n>=8\n>=5\n>=5\n>=4\n>=2\n>=3\n>=4\n>=7\n>=4\n>=2\n>=3\n>=6\n>=5\n>=2\n>=3\n>=3\n>=3\n>=2\n>=6\n>=5\n>=5\n>=3\n>=4\n>=2\n>=6\n>=5\n>=3\n>=3\n>=2\n>=7\n>=6\n>=2\n>="
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0\n2 1\n3 2\n2 2\n1 3\n3 3\n1 3\n1 2\n3 2\n2 2\n3 1\n''') == '-2 0'\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 7') == 'No'\nassert solution('6 11 6') == 'Yes'"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 1\n''') == 'Yes'\nassert solution('''\n6 11 6\n''') == 'Yes'\nassert solution('''\n4 6 15\n''') == 'No'\nassert solution('''\n3 2 7\n''') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\""
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\""
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 8\n\n7''') == 'Yes'\nassert solution('''5 1 6\n\n2''') == 'No'\nassert solution('''4 3 6\n\n8''') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1, 1, 1') == 'Yes'\nassert solution('4, 6, 15') == 'No'\nassert solution('6, 11, 6') == 'Yes'\nassert solution('9, 11, 1') == 'No'\nassert solution('15, 1, 3') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 6 15') == 'Yes'\nassert solution('3 2 7') == 'No'\nassert solution('6 11 6') == 'Yes'"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6 7\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\nassert solution(\"1000000000\") == \"Yes\"\nassert solution(\"100000000\") == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Yes\""
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\n\n'''"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7\n''') == \"YES\"\n\nassert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == \"YES\"\n\nassert solution('''2 4\n1 3\n1 2\n''') == \"NO\""
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"YES\"\nassert solution(\"4 9\") == \"YES\"\nassert solution(\"2 4\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"1 3\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'YES'\nassert solution('4 9') == 'YES'\nassert solution('2 4') == 'NO'"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n') == 'YES'\nassert solution('3 8\\n') == 'YES'\nassert solution('2 4\\n1 3\\n1 2') == 'NO'\n\n\"\"\"\n\n\nimport math\nfrom math import sqrt"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"YES\"\nassert solution(\"4 9\") == \"YES\"\nassert solution(\"2 4\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n\n\nInput:\n5\n3\n2 4 5 6\n1 2 3\n3 4 1\n\nOutput:\nYES\n\nInput:\n5\n3\n1 2 3\n1 5\n\nOutput:\nYES\n\nInput:\n3\n2 4\n1 5\n\nOutput:\nNO\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"YES\", \"First\"\nassert solution(\"2 4\") == \"YES\", \"Second\"\nassert solution(\"3 8\") == \"YES\", \"Third\"\nassert solution(\"4 9\") == \"NO\", \"Fourth\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        track = int(stdin)\n        k = list(map(int, stdin.split()))\n        s = list(map(int, stdin.split()))\n        flag = True\n        for i in range(1, track + 1):\n            for j in range(1, track + 1):\n                if i!= j and s[i] - s[j] == k[i] - k[j]:\n                    pass\n                else:\n                    flag = False\n        if flag:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\na = Solution()\na.solution(input())\n"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n4\n5\n''') == 'NO'\n\nassert solution('''\n2\n3\n1\n''') == 'YES'"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('mew') == 3, 'Test 1 failed.'\nassert solution('wuffuw') == 5, 'Test 2 failed.'\nassert solution('qqqqqqqq') == 0, 'Test 3 failed.'\nprint('All tests passed.')\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('mew') == 3, \"Wrong answer\"\nassert solution('wuffuw') == 5, \"Wrong answer\"\nassert solution('qqqqqqqq') == 0, \"Wrong answer\"\nprint('Correct!')\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('mew') == '3'\nassert solution('wuffuw') == '5'\nassert solution('qqqqqqqq') == '0'\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('mew') == '3'\nassert solution('wuffuw') == '5'\nassert solution('qqqqqqqq') == '0'"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\""
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kek\") == \"kek\"\nassert solution(\"abacaba\") == \"bacaba\"\nassert solution(\"r\") == \"\"\nassert solution(\"papicipap\") == \"papipap\"\nassert solution(\"abb\") == \"\"\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"0\"\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('mew') == '3'\nassert solution('wuffuw') == '5'\nassert solution('qqqqqqqq') == '0'"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == \"rated\"\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == \"unrated\"\nassert solution('''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') == \"maybe\"\n\nassert solution('''\n3\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == \"rated\"\nassert solution('''\n2\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == \"unrated\"\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\") == \"rated\", \"First example\"\nassert solution(\"4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\") == \"unrated\", \"Second example\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\", \"Third example\""
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == \"rated\"\n\nimport sys\nsys.stdin = open('./input.txt')\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\") == \"rated\"\nassert solution(\"3\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"unrated\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\"\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == \"rated\"\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == \"unrated\"\nassert solution('''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') == \"maybe\"\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == 'unrated'\nassert solution('''3\n3\n5\n6''') == 'rated'\nassert solution('''6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'unrated'\nassert solution('''1\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'rated'"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\\n') == 'rated'\n\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\\n') == 'unrated'\n\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\\n') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'unrated'\nassert solution('5') =='maybe'\nassert solution('6') == 'rated'\nassert solution('7') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"unrated\"\nassert solution(\"4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\") == \"rated\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\""
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() in [\"rated\", \"unrated\", \"maybe\"]\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"2 1 0 1 0 0 1 2 3\"\nassert solution(\"5\") == \"0 1 2 3 4\"\nassert solution(\"7\") == \"2 1 0 1 2 3 4\""
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 1 2 3 4\n''') == '2 1 0 1 2 3 4'\nassert solution('''\n7\n5 6 0 1 -2 3 4\n''') == '2 1 0 1 2 3 4'\nassert solution('''\n9\n2 1 0 3 0 0 3 2 4\n''') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"2 1 0 1 0 0 3 2 4\"\nassert solution(\"5\") == \"0 1 2 3 4\"\nassert solution(\"7\") == \"2 1 0 1 2 3 4\"\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"2 1 0 1 0 0 1 2 3\"\nassert solution(\"5\") == \"0 1 2 3 4\"\nassert solution(\"7\") == \"2 1 0 1 2 3 4\"\nprint(solution(input()))\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 0 1 -2 3 4\") == \"2 1 0 1 2 3 4\"\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9') == '2 1 0 1 2 3 4'\nassert solution('5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\nassert solution('4') == '1 2 3'\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '2 1 0 1 0 0 3 2 4'\nassert solution('5') == '0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"2 1 0 1 0 0 3 2 4\"\nassert solution(\"5\") == \"0 1 2 3 4\"\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_case_0) == \"3\"\nassert solution(test_case_1) == \"2\"\nassert solution(test_case_2) == \"962\"\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0') == 3\nassert solution('1') == 2\nassert solution('10') == 1\nprint(solution(input()))\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0''') == '3'\nassert solution('''20\n10101010101010''') == '962'\nassert solution('''8\n11''') == '3'\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"962\"\nprint(solution(stdin))\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\n\nassert solution(input_) == \"962\"\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '2'"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0\n\n''') == '3'\nassert solution('''\n4\n1010\n\n''') == '2'\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('20') == '962'"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == 3\nassert solution('1') == 3\nassert solution('00') == 3\nassert solution('01') == 2\nassert solution('10') == 2\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"2\") == \"1 3\"\nassert solution(\"3\") == \"1 4\"\nassert solution(\"4\") == \"1 5\"\nassert solution(\"5\") == \"1 6\"\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n-1 0\n0 -1\n\n''') == '1 2'\nassert solution('''\n4\n-1 0\n0 -1\n1 0\n1 1\n\n''') == '3 4'\nassert solution('''\n6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6\n\n''') == '6 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\nassert solution(\"8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"7 6\"\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-1 0\\n0 -1\\n1 0\\n1 1\\n\") == \"3 4\"\nassert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\\n\") == \"6 5\"\nprint(solution(input()))\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1 3'\nassert solution('6') == '5 4'\nassert solution('6') == '6 5'"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n-1 0\\n0 -1\\n1 0\\n1 1') == '3 4'"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 4'"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 3 2\"\nassert solution(\"5\") == \"1 3 5\"\nassert solution(\"6\") == \"1 5 6\"\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 4'\nassert solution('5') == '1 3'\n"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 1 4 10\n''') == '14'\nassert solution('''\n5 2 1 4 5\n''') == '13'\n"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"14\"\nassert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 1 4 10\n''') == '14'\nassert solution('''\n5 2 1 4 5\n''') == '13'\nprint(solution(open(0)))\n"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == '13'"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 1 4 10\n\n''') == '14'\nassert solution('''5 2 1 4 5\n\n''') == '13'\n"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"./inputs/input.txt\") == \"3 2 1\"\nassert solution(\"./inputs/input1.txt\") == \"4 3 2\""
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n    1 2 3''') == '1 2 3'\nassert solution('''6 3\n    1 2 3''') == '1 2 3'\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n8 5''') == '1 2 3', \"Wrong\"\nassert solution('''4 9\n4 8''') == '1 2 3 4', \"Wrong\"\nassert solution('''6 3\n2 6''') == '1 2 3', \"Wrong\"\nassert solution('''10 3\n1 2\n2 4\n3 6\n4 8\n5 10\n6 12\n7 14\n8 16\n9 18\n10 20\n11 22\n12 24''') == '1 2 6', \"Wrong\"\n\n'''\n1 2 3\n\n2 6\n\n3 9\n\n4 8\n\n5 10\n\n6 12\n\n7 14\n\n8 16\n\n9 18\n\n10 20\n\n11 22\n\n12 24\n'''"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\nassert solution(\"5 3\") == \"-1\"\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    10 3\n    ''') == '3 5'\nassert solution('''\n    20 3\n    ''') == '3 5 9'\nassert solution('''\n    32 3\n    ''') == '3 5 9'\nassert solution('''\n    100 5\n    ''') == '5 1'\n\n''')\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3\n''') == '1 2 3'\n\nassert solution('''\n2 2 3\n''') == '2 3'\n\nassert solution('''\n1 1 2\n''') == '1 2'\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '-1'\n\nassert solution('1 3') == '1 2 3'\n\nassert solution('6 3') == '1 2 3'\n\nassert solution('8 2') == '2 6'\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"1 2 3\"\nassert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"4 5\") == \"1 2\""
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\n\n''') == '1 2 3'\nassert solution('''\n8 2\n\n''') == '2 6'\n\nassert solution('''\n5 3\n\n''') == '-1'"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == '1 2 3'\nassert solution('4 1') == '1 2 3 4'\nassert solution('5 4') == '1 2 3 4 5'\nassert solution('9 6') == '1 2 3 4 5 6'\nassert solution('10 1') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6 12\n''') == '14'\n\nassert solution(\n'''\n11 14\n''') == '31'\n\nassert solution(\n'''\n1 5\n''') == '1'\n\nassert solution(\n'''\n3 8\n''') == '5'\n\nassert solution(\n'''\n5 7\n''') == '7'"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(6,12) == '14'\nassert solution(11,14) == '31'\nassert solution(1,5) == '1'\nassert solution(3,8) == '5'\nassert solution(5,7) == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([6, 12]) == 14\nassert solution([11, 14]) == 31\nassert solution([1, 5]) == 1\nassert solution([3, 8]) == 5\nassert solution([5, 7]) == 7\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7\") == \"7\"\nassert solution(\"11 14\") == \"88\"\nassert solution(\"6 12\") == \"14\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '42'\nassert solution('12 -3') == '0'\nassert solution('5 10') == '22'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 -2') == '22'\nassert solution('12 -3') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == str(solution)"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 -2') == '22'\nassert solution('12 -3') == '0'\nassert solution('5 10') == '42'"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '22'\nassert solution(input) == '42'\nassert solution(input) == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6''') == '22'\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7''') == '42'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"42\"\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '22'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6''') == '22'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == \"42\"\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == \"0\"\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2 2\"\n    ) == \"2\"\n\nassert solution(\n    \"2 3 4\"\n    ) == \"4\"\n\nassert solution(\n    \"1 10 5\"\n    ) == \"5\"\n\n\n'''\n\nn, m, k = map(int, input().split())\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        print(i * j, end=\" \")\n    print()\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        print(i * j, end=\" \")\n    print()\n\nfor i in range(n):\n    for j in range(m):\n        print(i * j, end=\" \")\n    print()\n\nprint(min(n * m, k))\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 2') == '2'\nassert solution('1 10 5') == '5'\nassert solution('2 3 4') == '3'\nassert solution('2 4 6') == '6'\nassert solution('2 5 7') == '7'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('1 10 5') == '5'\nassert solution('2 3 4') == '3'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 3\n2 4 6\n1 2 3''') == '3'\nassert solution('''1 10 5\n2 20 15\n3 30 15''') == '30'\nassert solution('''1 2 3\n2 4 6\n1 2 3''') == '3'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 2''') == '2'\nassert solution('''2 3 4''') == '3'\nassert solution('''1 10 5''') == '5'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 2\n\n''') == '2'\nassert solution('''\n1 10 5\n\n''') == '5'\nassert solution('''\n1 100 100\n\n''') == '101'\n\"\"\"\n\nn, m, k = input().split()\nn = int(n)\nm = int(m)\nk = int(k)\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 2\n''') == '2'\n\nassert solution('''\n2 3 4\n''') == '3'\n\nassert solution('''\n1 10 5\n''') == '5'"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\n\"\"\""
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '5'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '4'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '7'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '5'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '3'"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '3'\nassert solution('12345678910111213141516171819202122232425262728293031323334353610') == '4'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '1'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '0'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '2'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '3'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '4'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('123456789') == '1'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '1'\nassert solution('12345678910111213141516171819202122232425262728293031323334353610') == '1'\nassert solution('1234567891011121314151617181920212223242526272829303132333435361012') == '1'\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n\"\"\""
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '3'\nassert solution('5\\n') == '5'\nassert solution('7\\n') == '7'\nassert solution('23\\n') == '2'\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"./examples/day2/sample.txt\") == \"2\"\nassert solution(\"./examples/day2/input.txt\") == \"6\"\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''123456789101112131415161718192021222324252627282930313233343536''') == \"6\"\nassert solution('''123456789101112131415161718192021222324252627282930313233343536''') == \"6\"\nassert solution('''123456789101112131415161718192021222324252627282930313233343536''') == \"6\"\nassert solution('''123456789101112131415161718192021222324252627282930313233343536''') == \"6\"\nassert solution('''123456789101112131415161718192021222324252627282930313233343536''') == \"6\"\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 11\n4 2 5\n4 4 5 4\n''') == '26'\nassert solution('''\n2 2 50\n5 7\n4 2\n''') == '50'\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 50\\n5 7\\n4 2\\n\") == \"50\"\n\n\"\"\""
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4 11\n4 2 5\n4 4 5 4\n''') == '26'\nassert solution('''\n2 2 50\n5 7\n4 2\n''') == '50'\nassert solution('''\n4 2 5\n4 4 5 4\n''') == '50'\n''')"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 11\n4 2 5\n4 4 5 4\n''') == \"26\"\nassert solution('''\n2 2 50\n5 7\n4 2\n''') == \"50\"\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2 50\\n\"\n    \"5 7\\n\"\n    \"4 2\") == \"50\"\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 11\") == \"26\"\nassert solution(\"2 2 50\") == \"50\"\nassert solution(\"2 2 100\") == \"100\""
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 50\") == \"50\"\nassert solution(\"2 2 50\") == \"50\"\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 50') == '50'\nassert solution('2 2 50') == '50'"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == '26'"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"1\",\"4\",\"11\"]) == \"26\"\nassert solution([\"2\",\"4\",\"11\"]) == \"26\"\nassert solution([\"2\",\"5\",\"11\"]) == \"52\"\nassert solution([\"1\",\"4\",\"11\"]) == \"26\"\n"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == \"3\"\nassert solution('10') == \"10\"\nassert solution('20') == \"20\"\nassert solution('25') == \"25\"\n"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"20\") == \"20\"\nassert solution(\"25\") == \"20\"\nassert solution(\"-1\") == \"-1\""
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n''') == '3'\nassert solution('''1\n2\n''') == '1'\nassert solution('''5\n6\n''') == '5'\nassert solution('''5\n1\n''') == '4'\n"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"25\") == \"20\"\nassert solution(\"3\") == \"3\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '9'\nassert solution('40') == '40'\n\nassert solution('10') == '10'"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('25') == '20'\nassert solution('3')!= '3'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\\nabacabac\\n1 1 1 1 1 1 1 1\") == \"8\"\nassert solution(\"8\\nabacabca\\n1 2 3 4 4 3 2 1\") == \"17\"\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"6\") == \"\"\nassert solution(\"8\") == \"\"\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '8'\nassert solution('abacabca') == '17'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\nabacabac\\n1 1 1 1 1 1 1 1\") == \"8\"\nassert solution(\"8\\nabaccaba\\n1 2 3 4 5 6 7 8\") == \"26\""
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '26'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == input()"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '8'\nassert solution('abacabca') == '17'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''\n8\nabaccaba\n1 2 3 4 5 6 7 8\n''') == '26'\nassert solution('''\n8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\nassert solution('''\n8\nabacabab\n1 2 3 4 5 6 7 8\n''') == '9'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"16\"\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '8'\nassert solution() == '26'\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7\\n') == 'YES'\nassert solution('100 99\\n') == 'YES'\nassert solution('100 50\\n') == 'NO'"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n''') == 'YES', solution.__doc__\nassert solution('''\n100 99\n''') == 'YES', solution.__doc__\nassert solution('''\n100 50\n''') == 'NO', solution.__doc__\n\n'''\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n'''"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 7\n''') == 'YES'\nassert solution('''\n100 99\n''') == 'YES'\nassert solution('''\n100 50\n''') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 7\n''') == 'YES'\nassert solution('''100 99\n''') == 'YES'\nassert solution('''100 50\n''') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('23 5') == \"Yes\"\nassert solution('13 2') == \"No\"\nassert solution('1 2') == \"Yes\""
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5\") == \"Yes 2 3 1 0\"\n\nassert solution(\"11 10\") == \"No\"\n\nassert solution(\"123 11\") == \"Yes 3 3 2 1 0\"\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == 'Yes'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('0 2') == 'No'\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"5 6\") == \"No\"\n\nprint(solution(input()))\n\n\n-----Explanation-----\n\nWe need to solve this problem. We have to find k integers such that their sum to n and the largest integer is as small as possible.\n\nLet's start with simple algorithm:\n\nWe start with two integers (a_1, a_2) and (b_1, b_2).\n\nWe start by generating all possible combinations of a_1, a_2, b_1, b_2.\n\nWe start by adding these numbers to n and then check if we can get k - 1 numbers that make the sum to n. If so, we move forward to the next combination.\n\nThis is not the fastest solution, but it is good enough."
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('23 5') == 'Yes'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'No'\nassert solution('1 2') == 'Yes'\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n9\n4\n\n\"\"\"\n    ) == \"Yes\"\n    assert solution(\n\"\"\"\n5\n5\n\n\"\"\"\n    ) == \"Yes\"\n    assert solution(\n\"\"\"\n3\n3\n\n\"\"\"\n    ) == \"No\"\n    assert solution(\n\"\"\"\n2\n2\n\n\"\"\"\n    ) == \"Yes\"\n    assert solution(\n\"\"\"\n0\n0\n\n\"\"\"\n    ) == \"Yes\"\n    "
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes\\n-1 -1'\nassert solution('0 0') == 'Yes\\n-1 -1'\nassert solution('0 -1') == 'Yes\\n-1 -1'\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"0 0\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n''') == '4'\nassert solution('''4 8\n''') == '6'\nassert solution('''3 10\n''') == '2'\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n\n''') == '4'\nassert solution('''\n4 8\n\n''') == '6'\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"4\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\n\"\"\"\nimport math"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,5]) == 4\nassert solution([4,8]) == 6\n\n'''\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 5\"\n) == \"4\"\nassert solution(\n    \"4 8\"\n) == \"6\"\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"4 6\") == \"5\"\nassert solution(\"5 5\") == \"4\"\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 5]) == 4\nassert solution([4, 8]) == 6\nassert solution([3, 3]) == 2\nassert solution([3, 4]) == 4\nassert solution([10, 10]) == 10\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\"\nassert solution(\"2\\n0 0\\n1 1\\n\") == \"1\"\nassert solution(\"3\\n1 1\\n0 0\\n1 1\\n\") == \"2\"\nassert solution(\"4\\n0 0\\n1 1\\n1 1\\n\") == \"2\"\nassert solution(\"5\\n0 0\\n1 1\\n1 1\\n1 1\\n\") == \"1\""
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0\\n1 1\\n') == '1'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n1 1\\n') == '1'\nassert solution('1\\n1 1\\n') == '-1'"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '-1'\n\nstdin = \"\"\"\n3\n0 0\n1 1\n2 2\n\n\"\"\"\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '1'\n\n>>>\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n0 0\n1 1\n''') == '1'\nassert solution('''\n2\n0 0\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '-1'\n'''\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n0 0\n1 1\n\n''') == '1'\nassert solution('''2\n0 0\n1 1\n\n''') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 1\n1 1\n2 2\n2 2\n3 3\n\n''') == '1'\nassert solution('''\n5\n1 2\n1 2\n1 3\n1 4\n2 5\n\n''') == '-1'\n'''\n\n\n\nfrom itertools import product"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '1'\nassert solution('5') == '6'\nassert solution('20') == '2'\n\"\"\"\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\\n2\\n\") == \"1\"\nassert solution(\"5\\n3\\n4\\n\") == \"6\"\nassert solution(\"20\\n5\\n6\\n\") == \"2\"\nassert solution(\"10\\n5\\n2\\n\") == \"5\"\n\n'''\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"20\") == \"2\"\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"20\") == \"2\""
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INP) == OUT\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1\n2\n''') == '1'\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\\n2\\n\") == \"1\"\nassert solution(\"5\\n3\\n4\\n\") == \"6\"\nassert solution(\"20\\n5\\n6\\n\") == \"2\"\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '1'\nassert solution('5') == '6'\nassert solution('6') == '4'\nassert solution('20') == '2'\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '1'\nassert solution('5') == '6'\nassert solution('6') == '4'\nassert solution('20') == '2'"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 5 3 4 6\\n01110\") == \"YES\"\nassert solution(\"6\\n1 2 5 3 4 6\\n01010\") == \"NO\"\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'YES'\nassert solution('7') == 'NO'\n\n\n'''"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(inp) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'YES'\nassert solution('6') == 'NO'\nassert solution('1') == 'NO'\nassert solution('6') == 'NO'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 5 3 4 6\\n01110') == 'YES'\nassert solution('6\\n1 2 5 3 4 6\\n01010') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''6\n1 2 5 3 4 6\n01110\n''') == 'YES'\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 5 3 4 6\\n01110\") == \"YES\"\nassert solution(\"6\\n1 2 5 3 4 6\\n01010\") == \"NO\"\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 5 3 4 6\\n01110\\n') == 'YES'\nassert solution('6\\n1 2 5 3 4 6\\n01010\\n') == 'NO'\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1f\"\n) == \"1\"\n\nassert solution(\n    \"2d\"\n) == \"10\"\n\nassert solution(\n    \"4a\"\n) == \"11\"\n\nassert solution(\n    \"5e\"\n) == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1f''') == '1'\nassert solution('''2d''') == '10'\nassert solution('''4a''') == '11'\nassert solution('''5e''') == '18'\n\nassert solution('''4c''') == '21'\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1f''') == '1'\nassert solution('''2d''') == '10'\nassert solution('''4a''') == '11'\nassert solution('''5e''') == '18'"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1f') == \"1\"\nassert solution('2d') == \"10\"\nassert solution('4a') == \"11\"\nassert solution('5e') == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1f''') == '1'\nassert solution('''2d''') == '10'\nassert solution('''4a''') == '11'\nassert solution('''5e''') == '18'"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6 2\\n'\n    '1 0 1 1 1 1\\n'\n    '2 10\\n'\n) == '<'\n\nassert solution(\n    '3 3\\n'\n    '1 0 2\\n'\n    '2 5\\n'\n) == '>'\n\nassert solution(\n    '7 16\\n'\n    '15 15 4 0 0 7 10\\n'\n    '7 9\\n'\n    '4 8 0 3 1 5 0\\n'\n) == '='\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\") == '<'\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\") == '>'\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\") == '='\nassert solution(\"9 9\\n2 5\\n2 4\") == '='\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n1 0 1 1 1 1\n2 10\n4 7\n\n''') == '<'\n\nassert solution('''\n7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n\n''') == '>'"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4 8 5\n1''') == '='\n\nassert solution('''7\n6 5\n1''') == '>'\n\nassert solution('''5\n2 7\n2''') == '<'\n\n\n\"\"\"\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"<\"\nassert solution(\"7 16\") == \">\"\nassert solution(\"6 2\") == \"=\"\nassert solution(\"1 0 1 1 1 1\") == \"=\"\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"<\"\nassert solution(\"3 3\") == \"<\"\nassert solution(\"1 0 1 1 1 1\") == \"<\"\nassert solution(\"2 10\") == \"=\"\nassert solution(\"4 7\") == \">\""
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"<\"\nassert solution(\"3 3\") == \"<\"\nassert solution(\"7 16\") == \"<\"\nassert solution(\"4 8 0 3 1 5 0\") == \">\"\nassert solution(\"15 15 4 0 0 7 10\") == \">\""
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '<'\nassert solution('''3 3\n1 0 2\n2 5\n2 4\n''') == '>'\nassert solution('''7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '='\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '=', 'X is smaller than Y'\nassert solution('''\n3 3\n1 0 2\n2 5\n2 4\n''') == '<', 'X is smaller than Y'\nassert solution('''\n7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '>', 'X is smaller than Y'"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \">\", \"incorrect solution\"\nassert solution(\"6 2\") == \">\", \"incorrect solution\"\nassert solution(\"9 2\") == \">\", \"incorrect solution\"\nassert solution(\"10 2\") == \"=\", \"incorrect solution\"\nassert solution(\"11 2\") == \"<\", \"incorrect solution\"\n\nstdin = \"\"\"\n4 2\n1 0 1 1 1 1\n2 10\n4 7\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'BitLGM'\nassert solution('2') == 'BitAryo'\nassert solution('3') == 'BitLGM'"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\") == \"BitLGM\"\nassert solution(\"2\\n1 2\") == \"BitAryo\"\nassert solution(\"3\\n1 2 1\") == \"BitLGM\"\nassert solution(\"3\\n1 2 1\") == \"BitAryo\"\nassert solution(\"3\\n1 1\\n1 2 1\") == \"BitAryo\"\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'BitAryo'\n\nassert solution() == 'BitLGM'"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1\\n') == 'BitLGM'\nassert solution('3\\n1 2 1\\n') == 'BitAryo'\nassert solution('3\\n1 2 1\\n') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1') == 'BitLGM'\nassert solution('2\\n1 2') == 'BitAryo'\nassert solution('3\\n1 2 1') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'BitLGM'\nassert solution('3') == 'BitAryo'\nassert solution('5') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'BitLGM'\nassert solution('1 2 1') == 'BitLGM'\nassert solution('2 1') == 'BitAryo'\nassert solution('2 2 1') == 'BitAryo'\nassert solution('3 1') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"BitLGM\"\nassert solution(\"\"\"\n2 1\n\"\"\") == \"BitAryo\"\nassert solution(\"\"\"\n3 1\n\"\"\") == \"BitLGM\"\n\n\"\"\""
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"BitLGM\", \"Wrong answer\"\nassert solution(\"2\") == \"BitLGM\", \"Wrong answer\"\nassert solution(\"3\") == \"BitAryo\", \"Wrong answer\"\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"BitLGM\"\nassert solution() == \"BitAryo\"\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n6 2 8''') == '4'\nassert solution('''3 6\n9 1 14''') == '1'"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n6 2 8\n''') == '4'\n\nassert solution('''3 6\n9 1 14\n''') == '1'\n\nassert solution('''3 10\n6 2 8\n''') == '2'\n\nassert solution('''3 100\n6 2 8\n''') == '0'\n\nassert solution('''3 1000\n6 2 8\n''') == '0'"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n6 2 8\n''') == '4'\nassert solution('''\n3 6\n9 1 14\n''') == '1'\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '1'\n\n\n\"\"\"\"\"\"\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '4'\nassert solution('3 6') == '1'\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n3 2 8\n''') == '4'\nassert solution('''3 6\n9 1 14\n''') == '1'\nassert solution('''5 2 1\n5 3 1\n6 3 2\n''') == '4'\nassert solution('''4 2 4\n9 3 4\n6 2 5\n''') == '2'\nassert solution('''6 4 6\n9 3 4\n6 2 5\n''') == '3'\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INP_TEST_1) == OUT_TEST_1\nassert solution(INP_TEST_2) == OUT_TEST_2\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n6 2 8\n''') == '4'\nassert solution('''\n3 6\n9 1 14\n''') == '1'\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\nassert solution('''3 4\n7 3 7 8\n''') == '1'\nassert solution('''3 6\n7 1 5 3\n''') == '0'\n'''"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n6 2 8\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3 6\n9 1 14\n\"\"\") == \"1\"\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\naabb\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\nassert solution(\"10 10\\nabcdecabcdeca\") == \"YES\"\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 2\naabb\n\n4 2\naacaab\n\n4 3\naacaab\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n7 2\naabb\n\n7 3\naacaab\n\n8 2\naabbbaaabaab\n\n\"\"\") == \"NO\""
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"YES\""
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\naabb\n''') == 'YES'\nassert solution('''\n6 3\naacaab\n''') == 'NO'\nassert solution('''\n1\n3\n''') == 'NO'\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\naabb\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\naabb\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == \"YES\""
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\naabb') == 'YES'\nassert solution('4 3\\naabb') == 'NO'\nassert solution('5 3\\naabb') == 'NO'\nassert solution('6 3\\naabb') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\naabb\n\n''') == 'YES'\nassert solution('''\n6\naacaab\n\n''') == 'NO'"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n5 6 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n9\n2 1 3 5 4 1 2 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"9\") == \"3\"\nassert solution(\"2 1 3 5 4 1 2 3 1\") == \"2\"\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1'\nassert solution('9') == '3'\nassert solution('5 6 5') == '2'\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('9') == '3'"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 2\n1 3\n5 6 5\n''') == '1'\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n3 3 4\n''') == \"2\"\nassert solution('''\n9\n1 2 3 4 5 6 7 8 9\n''') == \"2\"\nassert solution('''\n11\n3 1 2 3 1 2 3 1 2 3\n''') == \"3\"\nassert solution('''\n11\n2 2 2 2 1 1 2 1 1\n''') == \"1\"\nassert solution('''\n1\n1\n''') == \"1\"\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n') == '1'\nassert solution('9\\n2 1 3 5 4 1 2 3 1') == '3'"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('9') == '3'\nassert solution('5 6 5') == '2'\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 2\n1 3 2''') == '1/3'\nassert solution('''4 2 3\n1 2 3''') == '1/2'\nassert solution('''1 9 2\n1 2 3''') == '1/3'\n\n'''"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('5 4 3') == '4/5'\n\"\"\"\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 3 2') == '1/10'\nassert solution('7 1 2') == '1/7'"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 3\n''') == '1/3'\nassert solution('''\n5 3 3\n''') == '1/5'\nassert solution('''\n5 6 2\n''') == '2/5'\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nprint(solution(input()))"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 3\n''') == '1/3\n\nassert solution('''\n5 5 7\n''') == '1/5'''"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 3 2''') == \"3/10\"\nassert solution('''7 1 2''') == \"3/7\"\n\nimport math\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n\") == \"3/5\"\nassert solution(\"7 1 2\\n\") == \"3/7\""
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 4 5\n5''') == '1/4'\nassert solution('''6\n10 4 5\n5''') == '1/3'\nassert solution('''8\n10 4 5\n5''') == '1/4'\nassert solution('''12\n10 4 5\n5''') == '3/5'\nassert solution('''14\n10 4 5\n5''') == '3/5'\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7 0\") == \"-\", \"First test case\"\nassert solution(\"2 0 1\") == \"+\", \"Second test case\"\nassert solution(\"1 1 0\") == \"?\", \"Third test case\"\nassert solution(\"0 0 1\") == \"?\", \"Fourth test case\"\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 7 0\n1 1 0\n2 1 0\n3 1 0''') == \"0\"\nassert solution('''1 1 0\n2 1 0\n3 1 0''') == \"?\"\nassert solution('''0 0 1\n1 1 0\n2 1 0\n3 1 0''') == \"?\"\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 7 0\\n\") == \"-\"\nassert solution(\"2 0 1\\n\") == \"+\"\nassert solution(\"1 1 0\\n\") == \"0\"\nassert solution(\"0 0 1\\n\") == \"?\"\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 7 0\\n\") == \"-\"\nassert solution(\"2 0 1\\n\") == \"+\"\nassert solution(\"1 1 0\\n\") == \"0\"\nassert solution(\"0 0 1\\n\") == \"?\"\nassert solution(\"0 0 0\\n\") == \"?\"\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 7 0\") == '-'\nassert solution(\"2 0 1\") == '+'\nassert solution(\"1 1 0\") == '0'\nassert solution(\"0 0 1\") == '?'"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '+'\nassert solution('7') == '-'\nassert solution('5 0 1') == '-'\nassert solution('1 1 0') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nprint(solution(input()))\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"+\"\nassert solution(\"3 7 0\") == \"-\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_str) == '+'\n\ninput_str = \"\"\"3 7 0\n\n1 1 0\n\n2 1 1\n\n3 2 2\n\n2 2 2\n\n\"\"\"\n\nprint(solution(input_str))"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 7 0\n''') == '-', 'Test 1'\nassert solution('''\n1 1 0\n''') == '?', 'Test 2'\nassert solution('''\n0 0 1\n''') == '?', 'Test 3'\nassert solution('''\n2 0 1\n''') == '+', 'Test 4'\nassert solution('''\n1 2 3\n''') == '?', 'Test 5'\n\nprint('All tests passed!')"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nRURUU\n-2 3\n\n''') == '3'\nassert solution('''4\nRULR\n1 1\n\n''') == '0'\nassert solution('''3\nUUU\n100 100\n\n''') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '0'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\"\n) == \"3\"\nassert solution(\n    \"4\"\n) == \"0\"\nassert solution(\n    \"3\"\n) == \"-1\"\nassert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"1\"\n) == \"0\""
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"-1\"\n\n---"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '-1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nRURUU\n-2 3\n\n''') == '3'\nassert solution('''3\nUUU\n100 100\n\n''') == '0'\nassert solution('''5\nRURUU\n-2 3\n\n''') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"3\"\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == \"3\"\n\n'''\nsolution('''\n5 4\n0000100\n10101010\n10101010\n10101010\n10101010\n''')\n'''\n'0'\n'''\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n\n''') == '3'\nassert solution('''\n4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n\n''') == '0'\nassert solution('''\n4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n\n''') == '-1'\n\n'''\n<------------------SOLUTION--------------------->\n\nT = int(input())\nfor _ in range(T):\n    n, x = map(int, input().split())\n    s = input()\n    n_pref = [0] * n\n    for i in range(1, n):\n        if s[i - 1] == '1':\n            n_pref[i] = n_pref[i - 1] + 1\n        else:\n            n_pref[i] = n_pref[i - 1]\n    i = n - 1\n    while n_pref[i] < x:\n        if s[i] == '1':\n            n_pref[i] += 1\n        i -= 1\n    if s[i] == '1':\n        cnt = 0\n        i = n - 1\n        while cnt <= x:\n            if s[i] == '1':\n                cnt += 1\n            i -= 1\n        if i < 0:\n            print(cnt)\n        else:\n            print(-1)\n'''"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 10\\n010010\\n5 3\\n10101\\n1 0\\n0\\n2 0\\n01\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"-1\"\n\n\"\"\""
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0') == '3'\nassert solution('4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0') == '-1'\nassert solution('4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0') == '1'\nassert solution('4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0') == '0'\nassert solution('4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0') == '0'\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0\") == \"3\"\nassert solution(\"4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0\\n2 0\\n01\") == \"2\"\nassert solution(\"4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0\\n2 0\\n01\\n\") == \"-1\"\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == \"3\"\nassert solution('''4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == \"-1\"\n'''"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nT\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\n\nassert solution('''\nT\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '0'\n\nassert solution('''\nT\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '1'\n\nassert solution('''\nT\n10 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\n\nassert solution('''\nT\n10 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '2'"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(\"test.txt\").read()) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\""
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\"\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''30020 3''') == '1'\nassert solution('''100 9''') == '2'\nassert solution('''10203049 2''') == '3'"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n\n\n'''"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n0\n''') == '1'\nassert solution('''\n100\n0\n''') == '100'\nassert solution('''\n30020\n3\n''') == '1'\nassert solution('''\n10203049\n2\n''') == '0'\nassert solution('''\n10203049\n2\n''') == '3049'\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\""
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '30020 3') == '1'\n\nassert solution(\n    '100 9') == '2'\n\nassert solution(\n    '10203049 2') == '3'\n\nassert solution(\n    '10203049 3') == '0'\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n10''') == '1'\nassert solution('''2 5\n3''') == '2'\nassert solution('''5 3\n3''') == '0'\nassert solution('''5 7\n3''') == '3'\nassert solution('''17 9\n2''') == '2'\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 3 8 1 1\\n'\n    ) == '3 2 3\\n'\nassert solution(\n    '4 2 9 4 2\\n'\n    ) == '2 1 1\\n'\nassert solution(\n    '5 5 25 4 3\\n'\n    ) == '1 1 1\\n'\nassert solution(\n    '100 100 1000000000000000000 100 100\\n'\n    ) == '101010101010101 50505050505051 50505050505051\\n'\n\n'''"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 3 8 1 1\n''') == '3 2 3'\nassert solution('''4 2 9 4 2\n''') == '2 1 1'\nassert solution('''5 5 25 4 3\n''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100\n''') == '101010101010101 50505050505051 50505050505051'''\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3', 'Wrong answer for test 1'\nassert solution('4 2 9 4 2') == '2 1 1', 'Wrong answer for test 2'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101', 'Wrong answer for test 3'\nassert solution('5 5 25 4 3') == '1 1 1', 'Wrong answer for test 4'\nassert solution('5 5 2 4 3') == '2 1 1', 'Wrong answer for test 5'\n\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 8 1 1\\n\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\\n\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\\n\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\\n\") == \"101010101010101 50505050505051 50505050505051\"\n\n------Hints------\n\nKeep this problem simple.\n\nUsing enumerate() to iterate over a list\n\nUsing regular for loops\n\nUse enumerate()\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3', 'Test #1'\nassert solution('4 2 9 4 2') == '2 1 1', 'Test #2'\nassert solution('5 5 25 4 3') == '1 1 1', 'Test #3'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051', 'Test #4'\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\nassert solution(\"1000 1000 1000000000000000000 100 1000\") == \"101010101010101 101010101010101\""
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\""
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Kuro'\nassert solution('3') == 'Katie'\nassert solution('7') == 'Shiro'\nassert solution('15') == 'Draw'\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"Katie\"\nprint(solution())\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('7') == 'Shiro'\nassert solution('15') == 'Katie'\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\ntreasurehunt\nthreefriends\nhiCodeforces\n''') == \"Kuro\"\nassert solution('''\n7\ntreasurehunt\nthreefriends\nhiCodeforces\n''') == \"Shiro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4\\n\"\n    \"foPaErcvJ\"\n    \"mZaxowpbt\"\n    \"mkuOlaHRE\"\n) == \"Kuro\"\n\nassert solution(\n    \"1\\n\"\n    \"abcabc\"\n) == \"Kuro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('7') == 'Shiro'\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\\\n3\nKuroo\nShiro\nKatie\n''') == \"Kuro\"\nassert solution('''\\\n7\ntreasurehunt\nthreefriends\nhiCodeforces\n''') == \"Shiro\"\nassert solution('''\\\n1\nabcabc\ncbabac\nababca\n''') == \"Katie\"\n\n\n------Explaination-------\n\"\"\"\nIn the first example, after $3$ turns, Kuro can change his ribbon into ooooo, which has the beauty of $5$, while reaching such beauty for Shiro and Katie is impossible (both Shiro and Katie can reach the beauty of at most $4$, for example by changing Shiro's ribbon into SSiSS and changing Katie's ribbon into Kaaaa). Therefore, the winner is Kuro.\n\nIn the fourth example, since the length of each of the string is $9$ and the number of turn is $15$, everyone can change their ribbons in some way to reach the maximal beauty of $9$ by changing their strings into zzzzzzzzz after 9 turns, and repeatedly change their strings into azzzzzzzz and then into zzzzzzzzz thrice. Therefore, the game ends in a draw.\n\nIn the first example, $n=3$, thus, the maximum beauty of the ribbon after $3$ turns is $5=7$.\n\nIn the fourth example, since $15=9*3=45$, so, the maximum beauty of the ribbon after $15$ turns is $9$.\n\"\"\""
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('7') == 'Shiro'\nassert solution('1') == 'Katie'\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('7') == 'Shiro'\nassert solution('15') == 'Katie'\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nkatie\\nkatie\\nkatie') == 'Kuro'\nassert solution('4\\ntreasurehunt\\ntreasurehunt\\ntreasurehunt\\nthreefriends\\ntreasurehunt') == 'Shiro'\nassert solution('5\\nfoPaErcvJ\\nshiro\\nkatie\\nkatie\\nkatie\\nkatie') == 'Draw'\nassert solution('6\\nhiCodeforces\\nmuzko\\nakashima\\nakashima\\nakashima\\nakashima') == 'Katie'\nassert solution('7\\ntreasurehunt\\ntreasurehunt\\ntreasurehunt\\ntreasurehunt\\nthreefriends\\ntreasurehunt') == 'Kuro'"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\"\n"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5 5 4\") == \"3\"\nassert solution(\"12 4 12 4 1\") == \"15\"\nassert solution(\"15 1 100 0 0\") == \"15\""
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\""
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\""
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\"\n"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\""
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 10 5 4\\n') == '1'\nassert solution('12 4 12 4 1\\n') == '3'\nassert solution('15 1 100 0 0\\n') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('21') == '3'\nassert solution('3') == '1'\nassert solution('123456789') == '5'\nassert solution
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n''') == '3 5 11'\nassert solution('''\n3\n''') == '2 3 7'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('27') == '3'\nassert solution('100') == '3'\nassert solution('30') == '2'\nassert solution('100') == '4'\nassert solution('108') == '3'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('27') == '3 5 11 11'\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"18\") == \"2,3,4\"\nassert solution(\"90\") == \"2,3,5\"\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n11\n7''') == '3'\nassert solution('''\n8\n5\n7\n11\n7\n11\n7\n11\n''') == '2'\nassert solution('''\n9\n5\n7\n11\n7\n11\n7\n11\n''') == '0'\nassert solution('''\n20\n5\n7\n11\n7\n11\n7\n11\n''') == '1'\nassert solution('''\n24\n5\n7\n11\n7\n11\n7\n11\n''') == '3'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n3\n8\n9''') == '2 2 3'\nassert solution('''5\n10\n3\n2''') == '2 2 1'\nassert solution('''1\n2\n2\n1''') == '2 2 2'\nassert solution('''28\n18\n7\n16\n11\n7\n2\n10\n5''') == '4 5 4 1 2 1'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '3 5 7'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('13') == '5 7 13'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4\n.*..\n....\n.*..\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 3\n..*\n*..\n*..\n\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n.*..\n....\n.*..\n''') == \"YES\"\nassert solution('''\n3 3\n..*..\n..*..\n..*..\n''') == \"NO\""
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n.*..\n....\n.*..\n''') == 'YES'\nassert solution('''\n3 3\n.*.\n.*.\n.*.\n''') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n.\\n.*..\\n.\\n.*..\") == \"YES\"\nassert solution(\"3 3\\n.\\n*..\\n*..\\n*..\") == \"YES\"\nassert solution(\"6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n..*..\") == \"YES\"\nassert solution(\"7 7\\n*...\\n*...\\n*...\\n*...\\n*...\\n*...\\n*...\\n\") == \"NO\"\nassert solution(\"1 2\\n1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n\nOutput\nYES\n1 2\n''') == 'YES\\n1 2'\nassert solution('''3 3\n..*..\n..*..\n*..*\n\nOutput\nNO''') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == \"YES\"\nassert solution('3 3') == \"YES\"\nassert solution('6 5') == \"NO\"\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n.*..\n....\n.*..\n\n''') == 'YES'\nassert solution('''\n3 3\n..*\n.*.\n*..\n\n''') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n.*..\\n....\\n.*..\\n') == 'YES\\n1 2'\nassert solution('3 3\\n..*\\n.*.\\n*..\\n') == 'NO'\nassert solution('6 5\\n..*..\\n..*..\\n*..*\\n..*..\\n..*..\\n..*..\\n') == 'YES\\n3 3'"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n.*..\n....\n.*..\n\n''') == 'YES'\nassert solution('''\n3 3\n..*..\n..*..\n..*..\n\n''') == 'YES'\nassert solution('''\n6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n\n''') == 'NO'\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_str) == '15'\nprint('\ud1b5\uacfc\ud558\uc600\uc2b5\ub2c8\ub2e4.')"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n9 7 3 8\n\"\"\") == \"15\"\n\nassert solution(r\"\"\"\n2 7 3 7\n\"\"\") == \"14\"\n\nassert solution(r\"\"\"\n30 6 17 19\n\"\"\") == \"0\"\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 7 3 7''') == '14'\nassert solution('''30 6 17 19''') == '0'\nassert solution('''0''') == '0'\nassert solution('''20''') == '0'\nassert solution('''30''') == '0'"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"9 7 3 8\"\n) == \"15\"\n\nassert solution(\n    \"2 7 3 7\"\n) == \"14\"\n\nassert solution(\n    \"30 6 17 19\"\n) == \"0\"\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0\"\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9 7 3 8\n''') == '15'\nassert solution('''\n30 6 17 19\n''') == '0'"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''9 7 3 8\n''') == '15'\nassert solution('''2 7 3 7\n''') == '14'\nassert solution('''30 6 17 19\n''') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([9,7,3,8]) == '15'\nassert solution([30,6,17,19]) == '0'"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '3'"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '3'\n\n\"\"\"\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-2 2 -3 1\\n\") == '3'\nassert solution(\"3\\n-2 -5 -3\\n\") == '-1'\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n-2 2 -3 1''') == '3'\n'''\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 2 -3 1\\n\") == \"3\"\nassert solution(\"4\\n-2 5 -3 1\\n\") == \"-1\"\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 -5 -3') == '-1'\nassert solution('4\\n-2 -3 -1') == '3'"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 3\n\"\"\"\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 1\n1 2\n1 3\n''') == '6'\nassert solution('''\n3 3\n1 1\n1 1\n1 3\n''') == '2'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\n''')\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 1\n1 2\n1 3\n\n''') == '6'\nassert solution('''\n3 3\n1 1\n1 1\n1 3\n\n''') == '2'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n\n''') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 3') == '2'\nassert solution('4 10') == '10'\nassert solution('4 10') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 1\n1 2\n1 3\n2 1\n2 2''') == \"6\"\nassert solution('''5 3\n1 1\n1 2\n1 3\n2 1\n2 2''') == \"2\"\nassert solution('''5 3\n1 1\n1 2\n1 3\n2 1\n2 2''') == \"10\"\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == \"10\"\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 1\n1 2\n1 3\n\n''') == '6'\nassert solution('''\n3 3\n1 1\n1 1\n1 3\n\n''') == '2'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n\n''') == '10'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n\n''') == '10'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n\n''') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '6'\nassert solution('3 3') == '2'\nassert solution('4 10') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n) == \"6\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"4 10\\n\"\n    \"5 3\\n\"\n    \"2 1\\n\"\n    \"3 2\\n\"\n    \"5 1\\n\"\n) == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 10\") == \"10\"\nassert solution(\"4 10\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 1\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n) == \"6\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"4 10\\n\"\n    \"5 3\\n\"\n    \"2 1\\n\"\n    \"3 2\\n\"\n    \"5 1\\n\"\n) == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\nassert solution('''\n3 3\n1 1\n1 2\n1 3\n''') == '6'\nassert solution('''\n4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n''') == '1'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '1'\nassert solution('''\n4\n''') == '2'\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '333333338'"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"8\") == \"333333338\""
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('1000') == '1000'\nassert solution('100000000000000') == '100000000000000'\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '333333338'\nprint(solution(input()))"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '333333338'"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '333333338'"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '333333338'\nassert solution('5') == '1'\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '333333338'\nassert solution('0') == '1'\n"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('10 5 100 15') == '1'\nassert solution('5 5 5 5') == '5'\nprint('\"Run\" is the best way to get credit for your solutions, and it is accepted.')"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 2\") == '2'\nassert solution(\"1 12 1 12\") == '4'\nassert solution(\"50 100 3 30\") == '0'"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 2\") == 2\nassert solution(\"1 12 1 12\") == 4\nassert solution(\"50 100 3 30\") == 0"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == 2\nassert solution('1 12 1 12') == 4\nassert solution('50 100 3 30') == 0\n"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2') == 2\nassert solution('1 12 1 12') == 4\nassert solution('50 100 3 30') == 0"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\""
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\n\") == \"2\"\nassert solution(\"21 31\\n\") == \"9\"\nassert solution(\"5 10\\n\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3 4\"]) == \"1\"\nassert solution([\"15 4\"]) == \"0\"\nassert solution([\"10 4\"]) == \"0\"\nassert solution([\"1 2\"]) == \"3\"\nassert solution([\"21 31\"]) == \"9\"\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 10\n''') == '2'\nassert solution('''21 31\n''') == '9'\nassert solution('''5 10\n''') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string\n\n'''\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 10\\n\"\n    \"8 9\\n\"\n) == \"4\"\nassert solution(\n    \"3 5\\n\"\n    \"4 4 4\\n\"\n) == \"3\"\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"2 10\n8 9\n\"\"\") == \"4\"\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10') == '4'\nassert solution('3 5') == '3'"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10') == '4'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 5\n8 9''') == '4'\n\nassert solution('''\n3 5\n4 4 4''') == '3'\n\nassert solution('''\n1 10\n5 8''') == '5'\n\nassert solution('''\n3 1\n3 3\n3 2''') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"4\"\nassert solution(\"2 10\") == \"5\"\nassert solution(\"3 5\") == \"3\"\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n4 4 4\n''') == '3'\nassert solution('''10 10\n8 9\n''') == '4'\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10\") == \"4\"\nassert solution(\"3 5\") == \"3\"\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n0 0 1 -1 0 0 2\"\n    ) == \"0\"\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '0'\nassert solution('10 0 -7 2 6') == '4'\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n10 0 -7 2 6\n''') == '4'\nassert solution('''\n7\n0 0 1 -1 0 0 2\n''') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"4\"\nassert solution(input) == \"0\""
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution() == \"4\"\nassert solution() == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10 0 -7 2 6\n''') == '4'\nassert solution('''7\n0 0 1 -1 0 0 2\n''') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"3\"\nassert solution(\"12\") == \"2\"\nassert solution(\"25\") == \"2\"\nassert solution(\"50\") == \"1\""
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '2'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '3'\nassert solution('14') == '9'"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2\n1\n4\n3\n4\n4\n4\n5\n2\n1\n''') == '1'\nassert solution('''7\n1\n2\n3\n3\n4\n4\n5\n5\n6\n3\n3\n4\n4\n5\n5\n5\n''') == '3'\nassert solution('''50\n1\n8\n7\n6\n5\n4\n3\n2\n1\n49\n48\n47\n46\n45\n44\n43\n42\n41\n40\n39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n4\n3\n3\n3\n4\n4\n4\n5\n5\n5\n''') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '2'"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"2\"\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"2\""
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '2'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '3'\nassert solution('50') == '1'\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n10 4\n7 5''') == '1'\nassert solution('''5 4\n6 2\n4 5''') == '2'\nassert solution('''36 5\n10 16\n''') == '3'\nassert solution('''15 5\n20 8\n''') == '4'\nassert solution('''15 6\n20 8\n''') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    2 6\n    2 3\n''') == '1'\n\nassert solution('''\n    36 5\n    10 16\n''') == '3'"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"2 6\\n\", \"2 3\"]) == \"1\"\nassert solution([\"36 5\\n\", \"10 16\"]) == \"3\"\nassert solution([\"3 5\\n\", \"2 1\"]) == \"-1\""
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n\n\"\"\"\n\n\nimport unittest"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6') == '1 6'\nassert solution('10 16') == '2 1'\nassert solution('6 5') == '5 16'\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2\\n'\nassert solution() == '-1\\n'\n\n\"\"\"\n\nfrom sys import setrecursionlimit\nsetrecursionlimit(100000)\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5\n2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 6\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n100 10\n30 20\n\"\"\") == \"90\"\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution() == '1 6'\nassert solution() == '1 6 2 3'\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6') == '1'\nassert solution('2 3') == '1 6'\nassert solution('36 5') == '2 1'\nassert solution('3 5') == '-1'\nassert solution('10 16') == '1'\n\n\"\"\""
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('2 3') == '1 6'\nassert solution('36 5') == '16 5'\nassert solution('10 16') == '5 16'\nassert solution('1 2') == '-1'\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 2 2\n''') == 'Polycarp', '''Simple'''\nassert solution('''\n4 7 7 4\n''') == 'Vasiliy', '''Advanced'''\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 2 2') == \"Polycarp\"\nassert solution('4 7 7 4') == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\""
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 7 7 4\n''') == 'Vasiliy', ''''\n['/Users/mac/Work/Python/parse_solution/solution.py', '13', '3', '-4', '-4', '2', '-1', '2', '4', '5', '4', '4', '3', '1', '1', '1', '3', '5', '5', '5', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1 2 2''') == \"Polycarp\"\nassert solution('''4 7 7 4''') == \"Vasiliy\""
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\n\nassert solution('8 3 9 4') == 'Polycarp'\nassert solution('5 6 1 1') == 'Vasiliy'\n\nassert solution('6 5 7 9') == 'Polycarp'\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\n"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\""
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 7\n''') == '6'\nassert solution('''\n1 1\n''') == '5'\nassert solution('''\n11 6\n''') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 7\n''') == '6'\nassert solution('''\n1 1\n''') == '5'\nassert solution('''\n11 6\n''') == '5'\nassert solution('''\n1 1\n''') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'\n"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 7\n''') == '6'\nassert solution('''1 1\n''') == '5'\nassert solution('''11 6\n''') == '5'\n"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 7''') == '6'\nassert solution('''1 1''') == '5'\nassert solution('''11 6''') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '6'"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 7\n\"\"\") == \"6\"\nassert solution(\"\"\"1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"11 6\n\"\"\") == \"5\""
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5, 10]) == '2'\nassert solution([2015, 2015]) == '1'\nassert solution([72057594000000000, 72057595000000000]) == '26'"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 10\n''') == \"2\"\nassert solution('''\n2015 2015\n''') == \"1\"\nassert solution('''\n100 105\n''') == \"0\"\nassert solution('''\n72057594000000000 72057595000000000\n''') == \"26\"\nassert solution('''\n100 101\n''') == \"0\"\n"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n        \"\"\"\n5 10\n\"\"\"\n) == \"2\"\nassert solution(\n        \"\"\"\n100 105\n\"\"\"\n) == \"0\"\nassert solution(\n        \"\"\"\n72057594000000000 72057595000000000\n\"\"\"\n) == \"26\""
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"2015 2015\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"2 5\") == \"1\"\n"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_sample_01) == '2'\nassert solution(input_sample_02) == '0'\nassert solution(input_sample_03) == '26'\nassert solution(input_sample_04) == '0'\nassert solution(input_sample_05) == '0'\nprint('\"{}\" passed all tests'.format(input_name))"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 10\n''') == '2'\nassert solution('''\n2015 2015\n''') == '1'\nassert solution('''\n100 105\n''') == '0'\nassert solution('''\n72057594000000000 72057595000000000\n''') == '26'"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n\n\"\"\"\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n\"\"\""
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\n\nassert solution('4') == '6'"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '4'\nassert solution('''\n4\n''') == '6'\nassert solution('''\n10\n''') == '9'\n\n\"\"\""
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '8'"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n\n2\n\n1\n\n''') == \"4\"\nassert solution('''4\n\n2\n\n1\n\n''') == \"3\"\nassert solution('''5\n\n3\n\n2\n\n1\n\n''') == \"6\"\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n\n''') == '2'\nassert solution('''\n3\n\n''') == '4'\nassert solution('''\n4\n\n''') == '6'\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == stdout_\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '4'\nassert solution('''\n4\n''') == '6'\nassert solution('''\n5\n''') == '7'\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 1, 1]) == \"1\"\nassert solution([2, 2, 7]) == \"1\"\nassert solution([3, 1, 1]) == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\""
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\""
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\n\n'''\n\nimport math"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('3 1 1') == '6'\nassert solution('4 1 1') == '6'\n\ninput_ = '1 2 2'\nstdin = input_\ninput = stdin.split(' ')\nstdin = input[0]\nstdin = input[1]\nassert solution(stdin) == '6'"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('3 1 1') == '6'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == '1'\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 30\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 2 30\"\n) == \"1\"\nassert solution(\n    \"2 2 7\"\n) == \"1\"\nassert solution(\n    \"3 1 1\"\n) == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('3 1 1') == '6'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\", \"test 1 failed\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\", \"test 2 failed\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"NO\", \"test 3 failed\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\", \"test 4 failed\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"NO\", \"test 5 failed\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\"\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == \"YES\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\"\nassert solution(\"5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''\n5\n3 3\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution('''\n5\n3 3\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\n\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810') == 'YES'\nassert solution('5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810') == 'YES'\nassert solution('5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810') == 'YES'\nassert solution('5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810') == 'YES'\nassert solution('5\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810') == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"YES\"\nassert solution(\"\\n\") == \"YES\"\nassert solution(\"\\n1 2\\n3\\n\\n\") == \"YES\"\nassert solution(\"\\n4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\\n\") == \"NO\"\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\""
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nprint(solution.__doc__)\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\""
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 2, 2]) == 20\nassert solution([5, 6, 7]) == 1520\n\n'''"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\""
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"YES\""
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''AB\nXC\nXB\nAC''') == 'NO'\nassert solution('''AB\nXC\nAC\nBX''') == 'YES'\nassert solution('''AB\nXC\nAC\nBX''') == 'NO'\n"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\n\nassert solution(\"AB\\nXC\\nAC\") == \"YES\"\n\nassert solution(\"BX\\nXC\\nAC\") == \"NO\""
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"NO\"\nassert solution(\"XC\") == \"NO\"\nassert solution(\"XB\") == \"YES\"\nassert solution(\"AC\") == \"YES\"\n\n'''"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"YES\"\n"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nAB\nXC\nXB\nAC\n''') == 'NO'\nassert solution('''\nAB\nXC\nAC\nBX\n''') == 'YES'\nassert solution('''\nAA\nXX\nXX\n''') == 'YES'\nassert solution('''\nAA\nXX\nXX\n''') == 'NO'\n\n'''\n\nA puzzle is always solvable if there is at least one unique configuration of a tile on the board.\n\nSo if there is a sequence of moves that takes a puzzle to the same configuration, it is indeed a BFSL.\n\n'''"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AB\\nXC\\nXB') == 'NO'\nassert solution('AB\\nXC\\nAC') == 'YES'\n"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"YES\""
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"YES\"\n\nstdin = sys.stdin.read()\nprint(solution(stdin))\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '12'\nassert solution('16') == '11311'\nassert solution('17') == '594'\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"20\") == \"999\"\nassert solution(\"17\") == \"594\"\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"475\"\n\"\"\"\n\nimport re"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13\\n12\") == \"12\"\nassert solution(\"16\\n11311\") == \"475\"\nassert solution(\"20\\n999\") == \"3789\"\nassert solution(\"17\\n2016\") == \"594\""
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"12\"\nassert solution(\"16\") == \"11311\"\nassert solution(\"20\") == \"999\"\nassert solution(\"17\") == \"594\"\nassert solution(\"100\") == \"100\""
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '12'\nassert solution('16') == '11311'\nassert solution('17') == '594'\nassert solution('20') == '999'\nassert solution('100') == '100'"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '12'\nassert solution('12') == '12'\nassert solution('16') == '11311'\nassert solution('999') == '3789'\nassert solution('17') == '594'\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"12\"\nassert solution(\"16\") == \"11311\"\nassert solution(\"17\") == \"594\"\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"12\"\nassert solution(\"16\") == \"11311\"\nassert solution(\"17\") == \"594\""
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"12\"\n\nassert solution(input) == \"475\"\n\nassert solution(input) == \"3789\""
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''5\n10 20 30 20 10\n''') == 'YES'\nassert solution('''4\n1 2 1 2\n''') == 'NO'"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''5\n10 20 30 20 10\n''') == 'YES'\nassert solution('''4\n1 2 1 2\n''') == 'NO'\nassert solution('''7\n3 3 3 3 3 3 3\n''') == 'YES'"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"3 3 3 3 3 3 3\") == \"YES\"\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"YES\"\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"YES\"\nassert solution(\"4\\n10 20 30 20 10\") == \"YES\"\nassert solution(\"5\\n10 20 30 20 10\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n10 20 30 20 10\n''') == 'YES'\nassert solution('''\n5\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''\n4\n1 2 1 2\n''') == 'NO'\nassert solution('''\n7\n3 3 3 3 3 3 3\n''') == 'YES'\nassert solution('''\n8\n2 4 4 4 4 2 3 2\n''') == 'YES'\n'''\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 5 5 5 4 2''') == 'YES'\nassert solution('''3\n3 3 3 3 3 3''') == 'YES'\nassert solution('''4\n1 2 1 2''') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == 'YES'\nassert solution('''4\n1 2 1 2\n''') == 'YES'\nassert solution('''5\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''6\n10 20 30 20 10\n''') == 'NO'\nassert solution('''7\n3 3 3 3 3 3 3\n''') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'YES'\nassert solution('5') == 'YES'\nassert solution('4') == 'NO'\nassert solution('7') == 'YES'\nassert solution('3 3 3 3 3 3 3') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n10 20 30 20 10\n\n5\n10 20 30 20 10\n\n7\n3 3 3 3 3 3 3\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == str(output)\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''11 3\n''') == '5'\nassert solution('''11 6\n''') == '4'\nassert solution('''20 20\n''') == '1'\nassert solution('''14 5\n''') == '6'\nassert solution('''1000000 100\n''') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1\n2\n3''') == '3'\nassert solution('''4 4\n1\n2\n3\n4''') == '1'\nassert solution('''100 100\n1\n2\n3\n4''') == '10'\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"5\"\nassert solution(\"11 3\") == \"5\"\nassert solution(\"1000000 100\") == \"31248\"\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\""
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\""
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\"\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11 3\n''') == '5'\nassert solution('''11 6\n''') == '4'\nassert solution('''20 20\n''') == '1'\nassert solution('''14 5\n''') == '6'\nassert solution('''1000000 100\n''') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([int(i) for i in input().split()]) == '5'\n\nassert solution([int(i) for i in input().split()]) == '4'\n\nassert solution([int(i) for i in input().split()]) == '1'"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\""
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0 0'\nassert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('10 10 10 1 -1 0') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3 2 2 -1 1\n''') == '0 0'\nassert solution('''\n4 4 2 0 1 1\n''') == '-1'\nassert solution('''\n10 10 10 1 -1 0\n''') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 2 2 -1 1') == '0 0'\nassert solution('10 10 10 1 -1 0') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4 3 2 2 -1 1\n''') == '0 0', 'First sample'\nassert solution(\n'''\n4 4 2 0 1 1\n''') == '-1', 'Second sample'\nassert solution(\n'''\n10 10 10 1 -1 0\n''') == '-1', 'Third sample'"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\n\n\n-----Hint:-----\nIf you want to solve the problem one step at a time, try to solve it in more than one line. The line with the largest problem size will be faster."
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3 2 2 -1 1\n0 0\n4 4 2 0 1 1\n-1''') == '0 0'\nassert solution('''4 4 2 0 1 1\n-1''') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0 0\"\nassert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 3\n2 1\n''') == 'YES'\nassert solution('''\n5 5\n3 3\n3 3\n''') == 'NO'\n'''"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\n\"\"\"\n\nn = int(input())\n\nx, y = map(int, input().split())\n\nz = int(input())\n\nw, h = map(int, input().split())\n\np = int(input())\n\nq = int(input())\n\nz1 = z*z\nw1 = w*w\nh1 = h*h"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n''') == 'YES'\nassert solution('''\n5 5\n3 3\n3 3\n''') == 'NO'\nassert solution('''\n4 2\n2 3\n1 2\n''') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == 'YES'\n\nassert solution('3 2') == 'YES'\n\nassert solution('5 5') == 'NO'\n\nassert solution('4 2') == 'NO'\n'''"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open('example.txt').read()) == 'YES'\nassert solution(open('input.txt').read()) == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('5 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 3\n2 1\n''') == 'YES'\n\nassert solution('''5 5\n3 3\n3 3\n''') == 'NO'\n\nassert solution('''4 2\n2 3\n1 2\n''') == 'YES'''\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n''') == 'YES'\n\nassert solution('''\n5 5\n3 3\n3 3\n''') == 'NO'\n\nassert solution('''\n5 5\n3 3\n2 2\n''') == 'NO'\n\nassert solution('''\n5 5\n3 3\n1 2\n''') == 'YES'\n\n\n\n## That's how we can place the pictures in the first test:\n\n[Image]"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\n\n\"\"\"\nfrom math import gcd\nfrom itertools import product"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('4 2') == 'NO'\n\n'''"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2 30 4\n6 14 25 48\n''') == '3'\nassert solution('''123 1 2143435 4\n123 11 -5453 141245\n''') == '0'\nassert solution('''123 1 2143435 4\n54343 -13 6 124\n''') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"0\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5 8\n4''') == 'inf'\nassert solution('''\n12 8 -9\n14''') == 'inf'\nassert solution('''\n24 24 25\n-2''') == 'inf'\nassert solution('''\n24 24 25\n-2''') == 'inf'\nassert solution('''\n24 24 24\n-2''') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('123 1 2143435 4') == '0'\nassert solution('123 11 -5453 141245') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 2') == '3'\nassert solution('3 1 2') == 'inf'\nassert solution('3 1 2 4') == 'inf'\nassert solution('-10 10 9 8') == '0'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2, 30, 4]) == \"3\"\nassert solution([1, 1, 1, 1]) == \"inf\""
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 30 4\n            6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4\n            123 11 -5453 141245''') == '0'\nassert solution('''123 1 2143435 4\n            54343 -13 6 124''') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('6 14 25 48') == '3'\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5 6\n    w..w.w\n    ...w..\n    ..w...\n    ......\n    \n    ''') == '..w..\\n.w..\\n+.w.\\n..w..\\n......'\n\nassert solution('''\n    4 8\n    .w..w..\n    ........\n    ........\n    .w..w..\n    \n    ''') == '..w..\\n.w..\\n+.w.\\n..w..\\n......'\n\nassert solution('''\n    2 4\n    .w..\n    ....\n    \n    ''') == '-1'\n\nassert solution('''\n    2 6\n    .w..\n    ...w.\n    \n    ''') == '-1'\n''')\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"+w+...\\n.+...+\\n.+...+\\n++w+..\\n......\\n\"\nassert solution(\"4 8\") == \"++w+..\\n.+...+\\n..+..+\\n.+...+\\n+w+..\\n......\\n\"\nassert solution(\"2 4\") == \"......\\n.w....\\n......\\n\"\nassert solution(\"2 6\") == \"......\\n+w+...\\n.w....\\n......\\n\"\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4 8'\n    '..w..w..'\n    '........'\n    '..w..w..'\n) == '..w++w..'\n\nassert solution(\n    '5 6'\n    '......'\n    '.w....'\n    '......'\n) == '......'\n\n\n\nstdin = \"\"\"4 8\n.w..w..\n........\n........\n..w..w..\n\nOutput\n..w++w..\n..+..+..\n..+..+..\n..w++w..\"\"\""
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8\n.....\n.....\n.....\n.....\n\n4 6\n...w.\n...w.\n...w.\n...w.\n\n2 4\n...\n.w.\n''') == '..w+w..'\nprint(solution('''5 6\n......\n.w....\n......\n..w...\n......\n\n2 6\nw..w.w\n...w..\n'''))\nassert solution('''5 6\n......\n.w....\n......\n..w...\n......\n\n2 4\n...\n.w.\n''') == '-1'\nprint(solution('''2 6\nw..w.w\n...w..\n'''))\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '+w+...'\nassert solution('4 8') == '+w++w..'\nassert solution('2 4') == '-1'\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4') == '-1'\nassert solution('5 6') == '..w..'\nassert solution('2 6') == '..w..'\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"...w..\"\nassert solution(\"2 4\") == \"....\"\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\nw..w..\\nw....\\n..w..w..\") == \"...w++w..\"\nassert solution(\"2 4\\nw..w.w.w\\n...w..\") == \"....\"\nassert solution(\"2 6\\nw..w.w\\n...w..\") == \"w..w.w.\"\nassert solution(\"2 6\\nw..w.w\\n.....\") == \"w..w.w.\"\n\nstdin = \"\"\"4 8\n..w..w..\n........\n........\n..w..w..\n\n\"\"\"\nassert solution(stdin) == \"..w++w..\"\n\nstdin = \"\"\"5 6\n......\n.w....\n......\n..w...\n......\n\n\"\"\"\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 8\n..w..w..\n........\n........\n..w..w..\n\n''') == '..w++w..'\nassert solution('''5 6\n......\n.w....\n......\n..w...\n......\n\n''') == '......'\n\nassert solution('''2 4\n....\n.w..\n\n''') == '-1'\n\nassert solution('''2 6\nw..w.w\n...w..\n\n''') == '-1'"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"...w...\"\nassert solution(\"2 4\") == \"...w...\"\nassert solution(\"2 6\") == \"......\"\nassert solution(\"3 4\") == \"......\"\nassert solution(\"3 6\") == \"-1\""
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n3''') == 'YES'\nassert solution('''9960594\n2551\n2557''') == 'YES'\nassert solution('''7\n2\n3''') == 'NO'\nassert solution('''15\n4\n8''') == 'YES'\nassert solution('''9960594\n2551\n2557''') == 'YES'\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"YES\"\nassert solution(\"2\\n2\\n3\") == \"YES\"\nassert solution(\"100\\n2551\\n2557\") == \"YES\"\nassert solution(\"9960594\\n2551\\n2557\") == \"YES\"\nassert solution(\"3\\n2\\n3\") == \"NO\"\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'YES'\nassert solution('100') == 'YES'\nassert solution('15') == 'NO'\nassert solution('9960594') == 'YES'\nassert solution('2551') == 'YES'\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"YES\"\nassert solution(\"9960594\") == \"YES\"\nassert solution(\"9960594\") == \"YES\"\nassert solution(\"9960594\") == \"YES\"\nassert solution(\"15\") == \"NO\"\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n2\\n3\\n\") == \"YES\\n2 1\"\nassert solution(\"7\\n2\\n3\\n\") == \"YES\\n0 1\"\nassert solution(\"9960594\\n2551\\n2557\\n\") == \"YES\\n1951 1949\"\nassert solution(\"9960594\\n2\\n3\\n\") == \"NO\"\nassert solution(\"9960594\\n10\\n10\\n\") == \"NO\""
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n1\\n\") == \"YES\\n1 1\"\nassert solution(\"7\\n2\\n3\\n\") == \"YES\\n1 1\"\nassert solution(\"5\\n4\\n5\\n\") == \"NO\"\nassert solution(\"9960594\\n2551\\n2557\\n\") == \"YES\\n1951 1949\"\nassert solution(\"9960594\\n2551\\n2557\\n\") == \"YES\\n1951 1949\"\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == 'YES\\n1 1'\nassert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('10\\n0\\n0') == 'NO'"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"YES\"\nassert solution(\"100\") == \"YES\"\nassert solution(\"9960594\") == \"YES\"\nassert solution(\"15\") == \"NO\"\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == 'zero'\nassert solution('10') == 'ten'\nassert solution('100') == 'one hundred'\nassert solution('1000') == 'one thousand'\nassert solution('10000') == 'ten thousand'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n\n99\n\n20\n\n''') =='six-nine'\nassert solution('''\n20\n\n99\n\n6\n\n''') == 'twenty-nine'\nassert solution('''\n6\n\n6\n\n''') =='six'\nassert solution('''\n99\n\n6\n\n''') == 'ninety-six'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('0') == 'zero'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('99') == 'ninety-nine'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('-1') == '-'\nassert solution('-2') == '-'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['6']) =='six'\nassert solution(['99']) == 'ninety-nine'\nassert solution(['20']) == 'twenty'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\""
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\nprint(solution(input()))"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n\n''') == '2'\n\nassert solution('''6\n1 3 4 5 6 9\n\n''') == '2'\n\nassert solution('''5\n998 999 1000\n\n''') == '4'\n\nassert solution('''5\n1 2 3 4 5\n\n''') == '4'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2\") == '2'\nassert solution(\"1\") == '1'\nassert solution(\"5\") == '4'\nassert solution(\"1 2 3 4 5\") == '2'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4 5 6 9\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 3 4 5 6 9''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '4'\nassert solution('''4\n1 2 3 4''') == '0'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''4\n998 999 1000''') == '2'\nassert solution('''6\n1 3 4 5 6 9''') == '4'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n5 10 1 4 2 7 9 3\\n\"\n    ) == \"2\"\nassert solution(\n    \"3\\n20 30 40\\n\"\n    ) == \"0\"\nassert solution(\n    \"3\\n1 2 3\\n\"\n    ) == \"1\"\nassert solution(\n    \"5\\n1 2 3 4 5\\n\"\n    ) == \"4\"\nassert solution(\n    \"5\\n10 2 1 3 4\\n\"\n    ) == \"4\"\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n6\n1 2 3 4 5 6 9\n''') == '2'\nassert solution('''\n3\n998 999 1000\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n998 999 1000''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '4'\nassert solution('''10\n9 0 5 8 2 1''') == '3'\n\nassert solution('''20\n7 5 8 1 5 3 2''') == '3'"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '0'\n\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n3 2 2 1\n''') == '3'\nassert solution('''6\n2 2 2 2 2 2\n''') == '2'"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\n"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '3'"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3 2 1\n''') == '2'\nassert solution('''\n6\n2 2 2 2 2 2\n''') == '3'\nprint(solution('''\n5\n2 2 2 2 2\n'''))\nprint(solution('''\n20\n
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'\nassert solution('''12\n
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'\nassert solution('''5\n1 3 2 1\n''') == '4'\n"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('4') == '3'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n1 9 3\n8 6 7\n4 2 5\n''') == '12 1'\nassert solution('''3\n1 9 3\n8 6 7\n4 2 5\n''') == '14 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 9 3\n8 6 7\n4 2 5\n\n''') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '12 1'\nassert solution('4') == '2 1'\nassert solution('8') == '24 1'\nassert solution('6') == '15 1'\nassert solution('10') == '48 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"12 1\"\nassert solution(\"1\") == \"12 1\"\nassert solution(\"3\") == \"6 1\"\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"12 1\"\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"12 1\"\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 9 3\n8 6 7\n4 2 5\n''') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 9 3\n8 6 7\n4 2 5\n''') == '12 1'\nassert solution('''6\n1 5 2 3 4 5\n5 4 3 2 1 6\n3 2 1 5 6 4\n2 5 1 4 6 3\n1 4 6 3 2 5\n6 5 4 2 1 3\n''') == '11 11'\n"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n11\n101''') == 'yes'\nassert solution('''0\n1''') == 'no'\nassert solution('''0\n1''') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'no'\nassert solution('01') == 'yes'\nassert solution('10') == 'yes'\nassert solution('101') == 'no'\nassert solution('100101') == 'yes'\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"010110001\") == \"yes\"\nassert solution(\"11\") == \"no\"\nassert solution(\"101\") == \"yes\"\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\""
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\"\n\"\"\"\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"0\") == \"no\"\nassert solution(\"1\") == \"yes\"\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('0') == 'no'\n\n\n\"\"\""
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100000000000000000000000000001''') == 'yes'\nassert solution('''0000000000000001''') == 'no'\nassert solution('''0000011101011101011''') == 'yes'\nassert solution('''0''') == 'yes'\n"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"101\") == \"no\"\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n\n\"\"\""
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abcdefghijklmnopqrstuvwxyz\"\nprint(solution(input()))\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''aacceeggiikkmmooqqssuuwwyy''') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('''thereisnoanswer''') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"aacceeggiikkmmooqqssuuwwyy\"\n) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\n    \"thereisnoanswer\"\n) == \"-1\"\n\n\"\"\"\n\ns = input()\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 3\n''') == '2.0000000000'\nassert solution('''\n12 17 9 40\n''') == '32.8333333333'\nassert solution('''\n10 12 4 2\n''') == '2.0'\nassert solution('''\n10 20 5 6\n''') == '6.0'\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0000000000\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0000000000\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\nassert solution('1000000000 1000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000') == '1.0000000000'"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\n\n\n\"\"\"\n\nfrom math import ceil, floor\nfrom itertools import product"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 2 3''') == '2.0000000000'\nassert solution('''12 17 9 40''') == '32.8333333333'\nassert solution('''25 20 7''') == '6.66666666666'\nassert solution('''11 11 11''') == '11.0000000000'\nassert solution('''37 21 9''') == '39.2929292929'\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 2 3\n1 1 1''') == '2.0000000000'\nassert solution('''12 17 9 40\n2 2 2''') == '32.8333333333'\nprint('Check passed')"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2.0000000000'\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 17 9 40') == '32.8333333333'\nassert solution('16 1 4 30') == '31.0'\nassert solution('3 3 2 3') == '2.0000000000'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2 2') == '-3 -3 -3 -3', 'test 1'\nassert solution('1') == '0', 'test 2'\nprint(solution(input()))\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '-3 -3 -3'\nassert solution('2') == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 2') == '-3 -3 -3 -3'\nassert solution('1') == '0'\nassert solution('3') == '0'"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2 2') == '-3 -3 -3 -3'\nassert solution('1') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2 2 2 2\n\"\"\") == \"2 3 4 3\"\nassert solution(\"\"\"\n1\n0\n\"\"\") == \"0\"\nprint(solution(input()))"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2 2') == '-3 -3 -3 -3'\nassert solution('4') == '-4 -4 -4 -4'\nassert solution('0') == '0 0 0 0'"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2\\n') == '1 1\\n'\nassert solution('5\\n1 2 3 -4') == '-4 -3 -2 -1\\n'\nassert solution('6\\n-3 2 3 -4\\n') == '-4 -4 -3 -3\\n'\nassert solution('10\\n5 -3 -2 -1\\n') == '-1 -5 -2 -3\\n'\nassert solution('1000\\n0 -1 -2 -3\\n') == '0 -1 -2 -3\\n'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2 2') == '-3 -3 -3 -3'\nassert solution('3 2 -1') == '-3 -3 -1'"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '-3 -3 2'\nassert solution(input()) == '-3 -3 2'\nassert solution(input()) == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 3''') == '-1'\nassert solution('''12 5''') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"12 5\") == \"6\""
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"12 5\") == \"-1\"\nassert solution(\"10 5\") == \"5\"\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"12 5\") == \"6\""
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 3''') == '-1'\nassert solution('''12 5''') == '6'"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n\"\"\") == \"87\"\n\nassert solution(\"\"\"\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n\"\"\") == \"98\"\n\nassert solution(\"\"\"\n3\n7 5 6 3 1 4 2\n3 1 4 2 5 6 7\n1 2 5 6 7 3 4\n\"\"\") == \"95\"\n\nassert solution(\"\"\"\n3\n7 5 6 2 1 4 2\n3 1 4 2 5 6 7\n1 2 5 6 7 3 4\n\"\"\") == \"9\"\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '98'\nassert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '0'\nassert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '0'\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7 8') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9') == '98'\n\n\n\n\"\"\"\n\nn = int(input())\ncubes = input().split()\ncubes = [int(cube) for cube in cubes]\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n\"\"\") == \"87\"\nassert solution(\"\"\"\n2\n1 2 4 5 6 8\n2 3 4 6 7 9\n3 4 6 7 8 9\n\"\"\") == \"98\"\nassert solution(\"\"\"\n3\n1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n\"\"\") == \"0\"\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''\n3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''\n5\n0 1 3 5 6 8 9 0 1\n2 3 4 5 7 8 9 0 1\n2 3 4 6 7 9 0 1\n1 2 5 7 8 9 0 1\n0 1 3 5 6 7 8 9 1\n''') == '989'\nassert solution('''\n6\n0 1 3 5 6 8 9 0 1\n2 3 4 5 7 8 9 0 1\n2 3 4 6 7 9 0 1\n1 2 5 7 8 9 0 1\n0 1 3 5 6 7 8 9 1\n''') == '989'\nassert solution('''\n5\n0 1 3 5 6 8 9 0 1\n2 3 4 5 7 8 9 0 1\n2 3 4 6 7 9 0 1\n1 2 5 7 8 9 0 1\n0 1 3 5 6 7 8 9 1\n''') == '989'\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"87\"\nassert solution('4') == \"98\"\nassert solution('3') == \"0\"\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '87'\nassert solution('3') == '87'\nassert solution('3') == '87'\nassert solution('3') == '87'\nassert solution('3') == '87'\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '87'\nassert solution('3') == '98'\nassert solution('3') == '0'\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"87\"\nassert solution(\"3\") == \"98\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''\n3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 6 7 9\n''') == '98'\nassert solution('''\n3\n1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '0'\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"375 4\") == \"30000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"38101 0\") == \"38101\"\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('375 4\\n') == '30000'\nassert solution('10000 1\\n') == '10000'\nassert solution('38101 0\\n') == '38101'\nassert solution('123456789 8\\n') == '12345678900000000'"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101000000000000'\nassert solution('123456789 8') == '12345678900000000000000000'\nassert solution('12345678000000030000000') == '123456789000000000000000'"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"30000\"\nassert solution(\"375 4\") == \"30000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"38101 0\") == \"38101\"\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '3810100000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2') == '2'\nassert solution('123456789 4') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'\nprint(solution(input()))\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '3810100000000'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '3'"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '3'\nassert solution('3 2') == '-1'\nassert solution('3 1') == '2'\nassert solution('3 0') == '0'\nassert solution('3 2 1 1') == '2'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '3'\nassert solution('3 3') == '3'"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '3'\nassert solution('''\n3 3\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''\n2 2\n0 0\n0 0\n''') == '0'\nassert solution('''\n2 2\n0 0\n0 0\n''') == '0'\nassert solution('''\n3 3\n0 0\n0 0\n1 1\n''') == '3'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '3'\nassert solution('3 2') == '0'\nassert solution('3 0') == '-1'\nassert solution('3 1') == '1 1'\nassert solution('3 2') == '1 2'"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '-1'\nassert solution('''3 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == '-1'\nassert solution('''3 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '3'\nassert solution('''\n3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''\n3 3\n1 0 1\n1 0 1\n0 0 0\n''') == '-1'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n\n3 3\n1 0 1\n1 0 1\n0 0 0\n\n3 2\n0 0\n0 0\n0 0\n\n3 2\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n\n3 3\n1 0 1\n1 0 1\n0 0 0\n\n3 2\n0 0\n0 0\n0 0\n\n3 2\n0 0\n0 0\n0 0\n''') == '0'\nprint('You passed all test cases!')\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 1 1\n1 1 1\n0 1 1\n''') == \"3\"\nassert solution('''\n3 2\n0 0\n0 0\n''') == \"-1\"\nassert solution('''\n3 1\n0 0\n''') == \"0\"\nassert solution('''\n5 2\n0 0 0 0\n0 0 0 0\n''') == \"1\""
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 2\n''') == '0.333333333333 0.333333333333 0.333333333333'''\n\nassert solution('''2 1 2\n''') == '0.150000000000 0.300000000000 0.550000000000'''\n\nassert solution('''1 1 3\n''') == '0.057142857143 0.657142857143 0.285714285714'''"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution(\"2 2 2\") == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution(\"2 1 2\") == \"0.150000000000 0.300000000000 0.550000000000\"\nassert solution(\"1 1 3\") == \"0.057142857143 0.657142857143 0.285714285714\""
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('1 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_1) == example_1\nassert solution(example_2) == example_2\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10 9 20 1') == \"2\"\nassert solution('1 100 50 200 75') == \"50\""
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nprint(solution(''))"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nprint(solution('''1 10 9 20 1\n\n11\n1 20 10 10 7\n10\n10\n11\n1 2 3 4 5 6 7 8 9\n1\n3\n2\n2\n5\n4\n3\n2\n'''))\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 100 50 200 75\") == \"50\""
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"11\"\nassert solution(\"5 6\") == \"15\"\n\n\"\"\"\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n''') == '13'\nassert solution('''\n5 2\n1 2\n0 1\n0 2\n-2 3\n-1 0\n''') == 'INF'\nassert solution('''\n3 4\n0 1 0\n0 1 2\n2 0 2\n''') == '4'\nassert solution('''\n1 2\n0 1\n0 2\n''') == '0'\nassert solution('''\n5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n''') == '13'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Infinite\"\nassert solution(\"5 6\") == \"13\"\nassert solution(\"1 2 0\") == \"Infinite\"\nassert solution(\"0 1 1\") == \"5\"\nassert solution(\"0 2 2\") == \"8\"\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0') == 'INF'\nassert solution('0 1 1') == '1'\nassert solution('0 2 2') == '2'\nassert solution('-3 4 -1') == 'INF'\nassert solution('-2 6 3') == '4'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution('''5\n0 1\n0 2\n-3 4\n-2 6\n3 4\n1 2\n2 0''') == '10'\nassert solution('''2\n0 1\n0 2''') == '0'\nassert solution('''10\n2 1\n2 3\n4 5\n7 8\n7 9\n10 11\n13 14\n19 20\n''') == '20'\nassert solution('''5\n0 2\n-3 4\n-2 6\n3 4\n1 2\n0 1\n''') == '20'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '13'\nassert solution('5 5') == '15'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n''') == '13'\nassert solution('''\n5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n''') == 'INF'\nassert solution('''\n1 1\n0 1\n0 0\n''') == '0'\nassert solution('''\n3 1\n0 1\n2 2\n''') == '4'\nassert solution('''\n1 1\n0 0\n2 2\n''') == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '13'\n\n>>> \n================ RESTART: Shell =================\n>>> \n>>> solution()\n'13'\n>>> \n================ RESTART: Shell =================\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \n================ RESTART: Shell =================\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of the region the cow can reach is 13\\ \\mathrm{cm^2}.\n>>> \nThe area of"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('2 2\\n0 0\\n1 1\\n0 1\\n1 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1') == '0'\nassert solution('10 10\\n-10 -10\\n-10 -10\\n-10 -10\\n-10 -10\\n-10 -10\\n-10 -10\\n-10 -10\\n-10 -10') == '-1'"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 0\\n\"\n    \"0 1 1\\n\"\n    \"0 2 2\\n\"\n    \"-3 4 -1\\n\"\n    \"-2 6 3\\n\"\n    \"1 0 1\\n\"\n    \"0 1 2\\n\"\n    \"2 0 2\\n\"\n    \"-1 -4 5\\n\"\n    \"3 -2 4\\n\"\n    \"1 2 4\\n\"\n    ) == \"13\"\nassert solution(\n    \"1 2\\n\"\n    \"1 0\\n\"\n    \"0 0\\n\"\n    \"0 2\\n\"\n    \"0 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    \"1 1\\n\"\n    "
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'NO'"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\n\nprint(solution(input()))\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 10, 4]) == 'YES'\nassert solution([3, 10, 3]) == 'NO'\nassert solution([3, 8, 51]) == 'YES'\nassert solution([3, 8, 52]) == 'YES'\nassert solution([3, 8, 53]) == 'NO'\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == 'NO'\nassert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 10, 4]) == \"YES\"\nassert solution([3, 10, 3]) == \"YES\"\nassert solution([3, 8, 51]) == \"YES\"\nassert solution([3, 8, 52]) == \"NO\"\nassert solution([3, 8, 53]) == \"NO\"\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 10 3\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n\n----------------------------------\n\nExplanation\n\nFirst case, timestep 1 at time 3. The time 3 is in between timestep 3 and timestep 2. So it will not bark at timestep 3.\n\nSecond case, timestep 2 at time 3. The time 3 is in between timestep 3 and timestep 1. So it will not bark at timestep 2.\n\nThird and fourth cases, timestep 2 and timestep 3 at time 3. It will bark at both timesteps.\n\n-----------------------------------\n\nExplanation\n\nFirst case, timestep 3 at time 3. It's in between timestep 2 and timestep 3, so it will bark at timestep 3 only.\n\nSecond case, timestep 2 at time 3. It's in between timestep 2 and timestep 1, so it will bark at timestep 2 only.\n\nThird and fourth cases, timestep 2 and timestep 3 at time 3. It will bark at both timesteps.\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'NO'\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10\\n2 9\\n3 9\\n2 3\\n2 9') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20') == '-1 -1'\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20') == '-1 -1'"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2 1'"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\""
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == '-1 -1'\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == '2 1'\nassert solution(\"4\\n1 5\\n2 6\\n6 20\") == '-1 -1'\nassert solution(\"6\\n1 5\\n2 6\\n6 20\") == '2 1'\nassert solution(\"10\\n1 10\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 9\") == '-1 -1'\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 1'\nassert solution('3') == '-1 -1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 10\n2 9\n3 9\n2 3\n2 9\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n3\n1 5\n2 6\n6 20\n\"\"\") == \"-1 -1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('A?') == 'A'\nassert solution('AG??CT') == 'AGACGTCT'\nassert solution('AA??') == 'AAAC'\nassert solution('AGCAGTCA?') == 'AGCAGTAC'\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"AGACGTCT\"\nassert solution(\"4\") == \"AGACGTCT\"\nassert solution(\"6\") == \"==="
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"AGACGTCT\"\nassert solution(input()) == \"AGACGTCT\"\nassert solution(input()) == \"===\n\n\"\"\""
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"===\\n===\"\nassert solution(\"4\") == \"===\\n===\"\nassert solution(\"6\") == \"===\\n===\"\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\nAG?C??CT\n''') == 'AGACGTCT'\nassert solution(\n'''\n4\nAGCT\n''') == 'AGCT'\nassert solution(\n'''\n4\nAA??\n''') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nAG?C??CT\") == \"AGACGTCT\"\nassert solution(\"8\\nAG?C??CT\") == \"AGACGTCT\"\nassert solution(\"4\\nAA??\") == \"===\nassert solution(\"6\\n????????\") == \"===\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'ACGTCT'\nassert solution(input()) == 'ACGTCT'\nassert solution(input()) == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == stdout\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nAG?C??CT') == \"AGACGTCT\"\nassert solution('4\\nAGCT') == \"AGCT\"\nassert solution('6\\n????G?') == \"===\"\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nAG?C??CT') == 'AGACGTCT'\nassert solution('2\\nAGCT') == 'AGCT'\nassert solution('3\\nAGCT') == '==='\nassert solution('4\\nAA??') == '==='\nassert solution('5\\nAGCT') == '==='"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''xx..''') == 'YES'\nassert solution('''x.ox''') == 'YES'\nassert solution('''o.x.''') == 'NO'\nassert solution('''x..x''') == 'YES'\nassert solution('''o.x.x''') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nx.ox\no...\nx.xo\noo.x\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\nx.ox\nx.xo\nx.xo\nx.xo\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\noox.\noox.\noox.\noox.\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n.xo\n.xo\n.xo\n.xo\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n.xo\nx.x\nx.x\n.xo\n\"\"\") == \"YES\""
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('x.x.o.x.x') == 'YES'\nassert solution('x.o.x.x') == 'NO'\nassert solution('x.x.x.o') == 'NO'\nassert solution('o.x.x.o') == 'NO'\nassert solution('x.o.x.x') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nx.ox\no...\nx.o.\noo.x\n''') == 'YES'\nassert solution('''\nx.ox\no...\nx.o.\noo.x\n''') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"x.ox\") == \"NO\"\nassert solution(\"x.ox\") == \"NO\"\nassert solution(\"x.ox\") == \"NO\"\nassert solution(\"x.ox\") == \"NO\"\nassert solution(\"o.x.x\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''x.x.\nx...\n.x..\nxo.x''') == 'YES'\nassert solution('''x.ox\nx.oo\no..x\nox.x''') == 'YES'\nassert solution('''x.x.\n.xo.\nx...\nxox''') == 'NO'\nassert solution('''x.ox\nx.oo\nx.x.\nxox''') == 'NO'\nassert solution('''o.x.\nxo..\no.x.\nxox''') == 'YES'\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xx..\\n.oo.\\nx...\\noox.\\n') == 'YES'\nassert solution('x.ox\\nox..\\nx.o.\\noo.x\\n') == 'NO'\nassert solution('o.x.\\nx...\\nx..o\\nooxx\\n') == 'YES'"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''x.x.\n...ooo\nx.xx.\n.x.o.''') == 'YES'\nassert solution('''x.o.\n...ooo\nx.xx.\n.x.x.''') == 'NO'\nassert solution('''o.x.\n...ooo\nx.xx.\n.x.x.''') == 'YES'\nassert solution('''o.x.\n...ooo\nx.xx.\n.xx.x.''') == 'NO'\nassert solution('''x.o.\n...ooo\nx.xx.\n.x.x.''') == 'YES'\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n.ox..\n..oo\nx...\noox.\n''') == 'NO'\nassert solution(\n'''\nx.o.\no...\nx.ox\noo..\n''') == 'NO'\nassert solution(\n'''\nx..x\no...\nx.o.\noo..\n''') == 'YES'\nassert solution(\n'''\no.x.\no...\nx.ox\noo..\n''') == 'YES'\n'''\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"x.ox\") == 'YES'\nassert solution(\"o.x.\") == 'YES'\nassert solution(\"x.x.\") == 'NO'\nassert solution(\"x.xx.\") == 'NO'\nassert solution(\"o.xox\") == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n'\n\n\"\"\"\nimport unittest\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('4') == 'NO'\n\n'''"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n2 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n3 3 5 4 5\") == \"YES\""
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 2\n''') == 'YES'\nassert solution('''\n5\n2 2 3 4 5\n''') == 'NO'\n'''\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''10\n2 2 3 4 5 6 7 8 9 10\n''') == 'NO'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == 'YES'\nassert solution('''50\n
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n2 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 3 2\n''') == 'YES'\n\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\n\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"Yes\"\nassert solution(input_2) == \"No\""
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"Yes\"\nassert solution(\"6 1\") == \"No\""
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 1\n2 3 0 8 9 10\n5\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == 'Yes'\nassert solution('4 1') == 'No'\nassert solution('7 7') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n11 0 0 14\n5 4\n''') == 'Yes'\nassert solution('''\n6 1\n2 3 0 8 9 10\n5\n''') == 'No'\nassert solution('''\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"4 1\") == \"Yes\""
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n11 0 0 14\n5 4\n''') == 'Yes'\nassert solution('''\n4 1\n8 94 0 4\n89\n''') == 'No'\nassert solution('''\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n11 0 0 14\n5 4\n''') == \"Yes\"\nassert solution('''\n6 1\n2 3 0 8 9 10\n5\n''') == \"Yes\"\nassert solution('''\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == \"No\""
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 2, 0, 1, 2, 1, 0, 3]) == 'Yes'\nassert solution([6, 1, 2, 3, 4, 5]) == 'Yes'\nassert solution([7, 7, 0]) == 'Yes'"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 6 2\n4 3 3\n''') == 'YES'\nassert solution('''5 1 1\n4 3 2\n''') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 2') == \"YES\", 'Failed test'\nassert solution('5 1 1') == \"NO\""
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 6 2\n4 3 3\n''') == 'YES'\nassert solution('''5 1 1\n4 3 2\n''') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6 2\") == \"YES\"\nassert solution(\"5 1 1\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1 1\n4 3 2\n''') == \"NO\"\nassert solution('''\n1 6 2\n4 3 3\n''') == \"YES\"\nassert solution('''\n5 1 1\n4 3 2\n''') == \"YES\"\nassert solution('''\n1 5 1\n4 3 2\n''') == \"YES\"\nassert solution('''\n1 6 2\n4 3 3\n''') == \"YES\"\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 1\n4 3 2\n''') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1 6 2\\n'\n    '4 3 3\\n'\n    ) == 'YES'\nassert solution(\n    '5 1 1\\n'\n    '4 3 2\\n'\n    ) == 'NO'"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 6 2\n4 3 3\n''') == 'YES', solution('''\n1 6 2\n4 3 3\n''')\n\nassert solution('''\n5 1 1\n4 3 2\n''') == 'NO', solution('''\n5 1 1\n4 3 2\n''')"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 2') == \"YES\"\nassert solution('5 1 1') == \"NO\"\n\"\"\"\n\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\nx = a + b\ny = x + c\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6 2\") == \"YES\"\nassert solution(\"5 1 1\") == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"0 0 0 1\") == \"YES\"\nassert solution(\"1 0 1 0\") == \"NO\"\nassert solution(\"0 0 0 0\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 0 1') == 'YES'\nassert solution('0 1 0 0') == 'NO'\nassert solution('1 0 0 0') == 'NO'\nassert solution('0 0 0 1') == 'NO'"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n1 0 0 0\n1 0 0 0\n1 0 0 0\n0 1 0 0\n\"\"\") == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1\n\n''') == 'YES'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n\n''') == 'NO'\nassert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n1 0 0 0\n\n''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n\n''') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1') == 'YES'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0') == 'NO'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n0 0 0 0\\n1 0 0 0') == 'YES'\n\n'''"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"NO\"\nassert solution(\"1 0 0 0\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"NO\"\nassert solution(\"1 0 0 0\") == \"NO\"\nassert solution(\"0 0 0 1\") == \"NO\"\nassert solution(\"1 0 1 0\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1\"\"\") == \"YES\"\nassert solution(\"\"\"0 1 1 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\"\"\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"NO\"\nassert solution(\"1 0 0 0\") == \"NO\"\nassert solution(\"0 0 0 1\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1\n''') == 'YES'\nassert solution('''0 1 1 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n''') == 'NO'\nprint(solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n'''))"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'NO'\nassert solution('9') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n586') == 'NO'\nassert solution('2\\n09') == 'NO'\nassert solution('3\\n123456789') == 'YES'\nassert solution('4\\n111222') == 'YES'\nassert solution('5\\n45891') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('9') == 'YES'"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n838\n''') == 'NO'\nassert solution('''\n3\n586\n''') == 'NO'\nassert solution('''\n2\n09\n''') == 'NO'\nassert solution('''\n9\n123456789\n''') == 'YES'\n\nimport math"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\nInput:\n3\n586\n\nOutput:\nNO\n\nInput:\n2\n09\n\nOutput:\nNO\n\nInput:\n9\n123456789\n\nOutput:\nYES\n\nInput:\n3\n911\n\nOutput:\nYES\n\n''') == 'YES'\n\nassert solution('''\n\nInput:\n4\n5658\n\nOutput:\nNO\n\nInput:\n3\n6\n\nOutput:\nYES\n\nInput:\n4\n8955\n\nOutput:\nYES\n\n''') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n9\n''') == 'NO'\nassert solution('''3\n586\n''') == 'YES'\nassert solution('''4\n1\n''') == 'YES'\nassert solution('''5\n1\n''') == 'NO'\nassert solution('''6\n1\n''') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"0\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'NO'\nassert solution('9') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n586\n\nOutput\nNO\n\nInput\n2\n09\n\nOutput\nNO\n''') == \"NO\"\nassert solution('''9\n123456789\n\nOutput\nYES\n''') == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"11\") == \"YES\"\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"4 1\") == \"5\"\n\"\"\""
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n2 1\n3 5\n2 3\n1 5\n''') == '10'\nassert solution('''\n4 1\n0 2\n0 3\n3 5\n0 6\n''') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n2 1\n3 5\n2 3\n1 5\n''') == '10'\nassert solution('''\n4 1\n0 2\n0 3\n3 5\n0 6\n''') == '5'"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\n\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n0 2\n0 3\n3 5\n0 6\n''') == '10'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n2 1\n3 5\n2 3\n1 5\n''') == '10'\nassert solution('''\n4 1\n0 2\n0 3\n3 5\n0 6\n''') == '5'\nassert solution('''\n4 1\n0 2\n0 3\n3 5\n0 6\n''') == '8'\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n''') == '10'\nassert solution('''1 10\n''') == '0'\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n') == '10'\nassert solution('1 10\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"1 10\") == \"0\""
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"10\"\nassert solution(\"1 10\") == \"0\""
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"10\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10'\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '10'\nassert solution('1 10') == '0'"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\nassert solution('0') == '0'\nassert solution('0 0') == '0'"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10\\n') == '10'\nassert solution('5 2\\n') == '10'\nassert solution('1 10\\n') == '0'"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 15 2 3\\n\") == \"1\\n\"\nassert solution(\"10 11 2 4\\n\") == \"-1\\n\""
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 15 2 3\n''') == '1'\nassert solution('''10 11 2 4\n''') == '-1'\nassert solution('''5 10 5 3\n''') == '5'\nassert solution('''15 20 6 2\n''') == '-1'\nassert solution('''12 20 6 3\n''') == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 15 2 3\n''') == '1', solution.__doc__\nassert solution('''10 11 2 4\n''') == '-1', solution.__doc__"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\"\nassert solution(\"10 20 30 50\") == \"5\"\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 15 2 3\\n\") == \"1\"\nassert solution(\"10 11 2 4\\n\") == \"-1\"\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\""
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '20 15 2 3'\n    ) == '1'\n\nassert solution(\n    '10 11 2 4'\n    ) == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 15 2 3\\n\") == \"1\"\nassert solution(\"10 11 2 4\\n\") == \"-1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''3 3\nWWW\nWWW\nWWW\n\nOutput\n1''') == '1'\nassert solution('''1 2\nBB''') == '-1'\nassert solution('''1 1\nBB''') == '-1'\nassert solution('''2 3\nWW\nWW''') == '4'\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 3\nWWW\nWWW\nWWW\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\nassert solution() == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"1 2\\nBB\") == \"1\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('1 2\\nBB') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 2') == '-1'\nassert solution('5 4') == '5'\nassert solution('1 2') == '-1'\n\n'''\n\nn, m = map(int, input().split())"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"1 2\") == \"1\""
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 1, 2, 3, 4, 5]) == \"Yes\"\nassert solution([5, 1, 2, 3, 4, 5]) == \"Yes\"\nassert solution([3, 9, 2, 3, 9]) == \"No\""
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"Yes\"\nassert solution(\"3\\n2 3 9\\n1 7 9\\n\") == \"No\"\n"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'No'\nassert solution('1') == 'Yes'"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5\\n') == 'Yes'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'No'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('3') == 'No'"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1 1\\n1 0 1 0\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"No\"\n"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 1 4 3 5\n''') == 'Yes'\nassert solution('''\n5\n1 1 1 1 1\n1 0 1 0 1\n''') == 'Yes'"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string()) == \"Yes\"\nassert solution(input_string(\"\")) == \"No\"\nassert solution(input_string(\"\"\"3\n1 3 5\n2 4 5\n\"\"\"\")) == \"No\"\n\"\"\""
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2 1 2\n2 1 1\n''') == 'Yes'\nassert solution('''5\n2 3 4 5\n1 7 9\n''') == 'Yes'\nassert solution('''3\n2 3 9\n1 7 9\n''') == 'No'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"360\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '40'\nassert solution('1') == '360'\nassert solution('5') == '180'\n\n'''\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n90 90 90 90\n''') == '0'\nassert solution('''\n3\n100 100 160\n''') == '40'\nassert solution('''\n1\n360\n''') == '360'\nassert solution('''\n4\n170 30 150 10\n''') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '40'\nassert solution('1') == '360'\nassert solution('4') == '0'\nassert solution('3') == '40'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 90, 90, 90, 120]) == 0\nassert solution([3, 100, 100, 160]) == 40\nassert solution([1, 360]) == 360\nassert solution([4, 170, 30, 150, 10]) == 0\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '360'\nassert solution('4') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '0'\n\nThe idea is to find maximal difference between angles of segments of pizza that will go to Vasya and Petya. We know that the first piece can go to any of the angles of the second piece. The second piece can go to any angle of the first piece. Therefore we can define:\n\np1 = (a1, a2)\n\np2 = (a2, a3)\n\np3 = (a3, a4)\n\np4 = (a4, a1)\n\nWe know that p1 and p2 will go to each other and p1 and p3 will go to each other and p2 and p4 will go to each other and p3 and p4 will go to each other. We know that:\n\na1 + a2 = a3\n\na2 + a3 = a4\n\na1 + a3 = a4\n\nThus p1, p2, p3, p4 can be represented by:\n\np1 = { (a1, a2), (a2, a3), (a3, a4) }\n\np2 = { (a2, a3), (a3, a4), (a4, a1) }\n\np3 = { (a1, a2), (a2, a3), (a3, a4) }\n\np4 = { (a1, a2), (a2, a3), (a3, a4) }\n\nWe can use one-dimensional array or list as a stack. In the second example, the maximal difference is 0.\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '40'\nassert solution('1') == '360'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '360'\nassert solution('4') == '0'\nassert solution('2') == '40'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n90 90 90 90\\n') == '0'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('1\\n360\\n') == '360'\nassert solution('4\\n170 30 150 10\\n') == '0'"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"3 1\") == \"8\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"9\"\nassert solution(\"1 3\") == \"7\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n\n\"\"\"\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '7'\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n\n''') == '7'\nassert solution('''2 2\n\n''') == '9'\n"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n\n''') == '8 10'\n\nassert solution('''1\n\n''') == '-1'\n\nassert solution('''7\n\n''') == '2244 2245'"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == -1\nassert solution(\"2\") == 4\nassert solution(\"3\") == 5\nassert solution(\"4\") == -1\nassert solution(\"5\") == -1\n"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n3\n''') == '-1'\nassert solution('''\n5\n6\n''') == '-1'\nassert solution('''\n7\n8\n9\n''') == '-1'\nassert solution('''\n10\n9\n8\n''') == '-1'\nassert solution('''\n5\n4\n7\n''') == '4 5'\n"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2\n3''') == '4 5'\nassert solution('''67\n14''') == '2244 2245'\nassert solution('''1\n2\n3''') == '-1'\n\n\"\"\""
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('67') == '2244 2245'\nassert solution('17') == '144 145'\n'''\nimport math\nimport time"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n5\n10''') == '1 4'\nassert solution('''1\n2\n8''') == '1 2'\nassert solution('''17\n4\n5''') == '2244 2245'\nassert solution('''67\n''') == '2244 2244 2245'\nprint(solution('''67\n'''))"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '5 1'\nassert solution('8') == '9 10'\nassert solution('67') == '764 145'\n\n'''"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('4') == '4'\nassert solution('5') == '1'\n"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('6 3') == 'Yes'\n\nstdin = \"\"\"\n3 4\n\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n5 3\n\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n1 4\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\n\n\n\"\"\"\nfrom functools import reduce"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n\n''') == 'No'\n\nassert solution('''4 4\n\n''') == 'Yes'\n\nassert solution('''2 6\n\n''') == 'Yes'\n"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'No'\nassert solution('10 5') == 'Yes'\nassert solution('8 8') == 'Yes'\n\n\n'''"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"No\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"6 8\") == \"Yes\"\nassert solution(\"10 3\") == \"No\"\nassert solution(\"13 12\") == \"No\""
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"Yes\"\n\nassert solution(\"5 7\") == \"No\"\n\nassert solution(\"100 10\") == \"Yes\"\n\nassert solution(\"9 8\") == \"No\"\n\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4') == 'No'\nassert solution('2 4') == 'Yes'\n\n\"\"\"\n\nimport math\n\nn, k = map(int, stdin.readline().split())"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n''') == \"Yes\"\nassert solution('''4 4\n''') == \"No\"\n'''"
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"No\"\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == '<'\nassert solution(\"11\") == '>'\nassert solution(\"00012345\") == '=<'\nassert solution(\"11\") == '>'\nassert solution(\"111\") == '>'"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"<\"\nassert solution(\"11\") == \">\"\nassert solution(\"0\") == \"<\"\nassert solution(\"111\") == \">\"\nassert solution(\"1234567\") == \"=\"\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"<\"\nassert solution(input()) == \">\"\nassert solution(input()) == \"=\""
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9\n10\n''') == '<'\nassert solution('''\n11\n10\n''') == '>'\nassert solution('''\n0123\n9\n''') == '>'\nassert solution('''\n0123\n111\n''') == '>'\nassert solution('''\n12345\n12345\n''') == '<'\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"<\"\nassert solution(\"1000000000000\") == \">\"\nassert solution(\"0 1\") == \">\"\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n3\n''') == '<'\nassert solution('''\n1\n1\n''') == '<'\nassert solution('''\n1\n1\n''') == '='\nassert solution('''\n1\n2\n''') == '>'\nassert solution('''\n2\n2\n''') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n''') == '<'\nassert solution('''\n1\n3\n''') == '>'\nassert solution('''\n1\n1\n''') == '='\nassert solution('''\n10\n0\n''') == '<'\nassert solution('''\n2\n3\n''') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '<'\nassert solution('1\\n3') == '>'\nassert solution('1\\n4') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0123') == '>', \"First\"\nassert solution('00012345') == '<', \"Second\"\nassert solution('0123') == '=', \"Third\"\nassert solution('111') == '>', \"Fourth\""
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n11''') == '<'\nassert solution('''1\n1''') == '='\nassert solution('''10\n10''') == '>'\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1\\n-1 0 1\\n') == '6'\nassert solution('2 1\\n1 0\\n') == '1'\n\nassert solution('1 1\\n-1') == '2'\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n-1 0 1\\n\") == \"6\"\nassert solution(\"2 1\\n1 0\\n\") == \"1\"\nassert solution(\"1 1\\n-1\\n\") == \"2\"\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n-1 0 1\n''') == '6'\nassert solution('''2 1\n1 0\n''') == '1'\nassert solution('''1 1\n-1\n''') == '2'\nassert solution('''1 1\n-1\n''') == '1'\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n-1 0 1\n''') == '6'\n\nassert solution('''\n2 1\n1 0\n''') == '1'\n\nassert solution('''\n3 1\n-1 0 1\n''') == '6'\n\nassert solution('''\n3 1\n0 0 0\n''') == '4'\n\nassert solution('''\n3 1\n0 1 1\n''') == '5'"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"6\"\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\n\n[Reference]\nhttps://www.youtube.com/watch?v=hpXh2LmQDcU&feature=youtu.be\nhttps://www.youtube.com/watch?v=sX_9MFyZjAC&feature=youtu.be\nhttps://www.youtube.com/watch?v=WlxvSC0xrYU&feature=youtu.be\nhttps://www.youtube.com/watch?v=QrKjwDxqTdI&feature=youtu.be\nhttps://www.youtube.com/watch?v=dQw4w9WgXcQ&feature=youtu.be\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n\nInput\n3 1\n-1 0 1\n\nOutput\n6\nInput\n2 1\n1 0\n\nOutput\n1\nInput\n1 1\n-1\n\nOutput\n2\nInput\n1 1\n-1\n\nOutput\n1\n\"\"\"\n\nn, p = map(int, input().split())"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n-1 0 1\n''') == '6'\nassert solution('''2 1\n1 0\n''') == '1'\nassert solution('''1 1\n-1\n''') == '2'\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 3, 4]) == 3\nassert solution([6, 2, 1, 1]) == 1\nassert solution([999999999, 1000000000, 1000000000, 1000000000]) == 1000000000\nprint('All tests passed')\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    5 3 1 1\n    ''') == '3'\n\nassert solution('''\n    999999999 1000000000 1000000000 1000000000\n    ''') == '1000000000'"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 1, 3, 4]) == \"3\"\nassert solution([999999999, 1000000000, 1000000000, 1000000000]) == \"1000000000\"\nassert solution([1000000000, 1000000000, 1000000000, 1000000000]) == \"1000000000\"\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 3 4\n''') == '3'\n\nassert solution('''\n999999999 1000000000 1000000000 1000000000\n''') == '1000000000'\n\n'''\n    n, a, b, c = map(int, stdin.split())\n    if (n+a+b+c) % 4!= 0:\n        return '0'\n    a, b, c = a + (n + a) // 4, b + (n + b) // 4, c + (n + c) // 4\n    return str(min(a, b, c))\n'''\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 2\") == \"0\"\nassert solution(\"1 1 1 1\") == \"1000000000\"\nassert solution(\"4 4 4 4\") == \"1000000000\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == 'NO'\nassert solution('3 4') == 'YES'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == 'YES'\nassert solution('2 2') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'YES'\nassert solution('10 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 2\\n5 6\\n6 4\\n6 5\\n\\n5 3\\n6 1\\n6 2\\n') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n1 2\n2 3\n3 2\n3 1\n\n''') == 'YES'\nassert solution('''\n5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n\n''') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 6\") == \"NO\"\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n\") == \"YES\\n\", \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n4 5\\n\") == \"NO\\n\", \"NO\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n4 5\\n\") == \"NO\\n\", \"NO\"\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('5 6') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'NO'\nassert solution('3 4') == 'YES'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == 'YES'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 50\") == \"26\"\nassert solution(\"3 595\") == \"281\"\nassert solution(\"5 240\") == \"26\"\n\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 595\n43 2\n300 4\n554 10\n''') == '281'\nassert solution('''\n1 1\n1 1\n''') == '0'\nassert solution('''\n2 50\n20 0\n3 1\n''') == '30'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 595') == '281'\nassert solution('1 1') == '0'\nassert solution('2 50') == '30'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 50') == '26'\nassert solution('1 1') == '0'\nassert solution('3 595') == '281'\nassert solution('1 1') == '0'\nassert solution('2 50') == '26'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 595\n43 2\n300 4\n554 10\n\n1 1\n1 1\n\n2 50\n20 0\n3 1\n\n''') == '281'\nassert solution('''\n1 1\n1 1\n\n2 50\n20 0\n3 1\n\n''') == '30'\nassert solution('''\n5 240\n13 0\n50 25\n60 5\n155 70\n165 70\n\n1 1\n1 1\n\n2 50\n20 0\n3 1\n\n''') == '26'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 50\") == \"26\"\nassert solution(\"5 240\") == \"26\""
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 50\") == \"30\"\nassert solution(\"3 1\") == \"281\"\nassert solution(\"5 240\") == \"26\"\nassert solution(\"6 1\") == \"0\"\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"27\"\n\n'''\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 595\") == '281'\nassert solution(\"1 1\") == '0'\nassert solution(\"2 50\") == '30'"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 50') == '30'\nassert solution('3 1') == '1'\nassert solution('5 240') == '26'"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8\\n\") == \"10\"\nassert solution(\"0\\n0 0 0 0 0 0 0 0\\n\") == \"0\"\nassert solution(\"3\\n0 4 1 0 0 9 8 3\\n\") == \"3\"\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8\") == \"10\"\nassert solution(\"0\") == \"0\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('10') == '10'\nassert solution('10000000') == '10000000'"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('3') == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n''') == '0'\nassert solution('''\n0\n0 0 0 0 0 0 0 0\n''') == '0'\nassert solution('''\n3\n0 4 1 0 0 9 8 3\n''') == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == \"3\"\nassert solution('''\n0\n0 0 0 0 0 0 0 0\n''') == \"0\"\nassert solution('''\n3\n0 4 1 0 0 9 8 3\n''') == \"3\""
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3') == '3'"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('0') == '0'\nassert solution('0 0 0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0 0 0 0') == '0'\nassert solution('3') == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n1''') == '3'\nassert solution('''0\n0 0 0 0 0 0 0 0''') == '0'\nassert solution('''3\n0 4 1 0 0 9 8 3\n\nOutput\n3\n''') == '3'"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('0') == '0'\nassert solution('0 0 0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0 0 0 0') == '0'\nassert solution('3') == '3'\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 12') == '150'\nassert solution('4 3') == '10'\nassert solution('5 787787787') == '44981600785557577'\n\n'''\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 12\n20 30 70 90\n\n''') == \"150\"\nassert solution('''\n4 3\n10000 1000 100 10\n\n''') == \"30\"\nassert solution('''\n5 787787787\n123456789 234567890 345678901 456789012 987654321\n\n''') == \"44981600785557577\""
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 12\\n20 30 70 90') == '150'\nassert solution('4 3\\n10 100 1000 10000') == '30'\nassert solution('5 787787787') == '44981600785557577'"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n20 30 70 90') == '150'\nassert solution('4 3\\n10 100 1000 10000') == '30'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321') == '44981600785557577'"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''\n4 3\n10 100 1000 10000\n''') == '30'\n\nassert solution('''\n5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 10\n4 1 5\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3 3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 1\n1 2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 12\\n20 30 70 90\\n\") == \"150\"\nassert solution(\"4 3\\n10 100 1000 10000\\n\") == \"30\"\nassert solution(\"5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n\") == \"44981600785557577\"\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"10\"\nassert solution(\"4 3\") == \"12\"\nassert solution(\"4 5\") == \"20\"\nassert solution(\"5 5\") == \"40\"\nassert solution(\"5 5\") == \"40\"\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 12\\n\"\n    \"20 30 70 90\"\n) == \"150\"\nassert solution(\n    \"4 3\\n\"\n    \"10000 1000 100 10\"\n) == \"10\"\nassert solution(\n    \"5 787787787\\n\"\n    \"123456789 234567890 345678901 456789012 987654321\"\n) == \"44981600785557577\""
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''4 3\n10 100 1000 10000\n''') == '30'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n3\n3\n3\n6''') == '5'\n\nassert solution('''2\n2\n1''') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 3 3 6\n''') == '5'\nassert solution('''2\n2 1\n''') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 3 3 3 6\n''') == '5'\nassert solution('''\n2\n2 1\n''') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(\"5\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\"\nassert solution(\"3\\n2 1\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\""
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"5\\n2 5 1 3\\n\") == \"5\"\nassert solution(\"2\\n1\\n\") == \"2\""
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES', 'First'\nassert solution('4') == 'NO', 'Second'\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n73452\n\n''') == 'YES', 'First example'\nassert solution('''\n4\n1248\n\n''') == 'NO', 'Second example'"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    73452\n    ''') == 'YES'\nassert solution('''\n    4\n    1248\n    ''') == 'NO'\nassert solution('''\n    8\n    8499\n    ''') == 'YES'\n''')\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3578\") == \"YES\"\nassert solution(\"2\\n12\") == \"NO\"\nassert solution(\"3\\n1248\") == \"NO\"\nassert solution(\"4\\n12\") == \"YES\"\nassert solution(\"5\\n73452\") == \"YES\"\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n73452''') == 'YES'\nassert solution('''4\n1248''') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution('''1\n3\n7\n10\n15\n16\n2\n3\n6\n9''') == \"NO\"\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n73452''') == 'YES'\nassert solution('''4\n1248''') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n73452\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n1248\n\n\"\"\") == \"NO\""
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\nassert solution('sevenkplus') == 'CHAT WITH HER!'"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\""
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sevenkplus') == 'IGNORE HIM!'\nassert solution('xiaodao') == 'IGNORE HIM!'\nassert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('youremyfriend') == 'IGNORE HIM!'\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sevenkplus') == 'CHAT WITH HER!'\nassert solution('wjmzbmr') == 'CHAT WITH HER!'\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sevenkplus') == 'CHAT WITH HER!'\nassert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sevenkplus') == 'CHAT WITH HER!'\nassert solution('wjmzbmr') == 'CHAT WITH HER!'\n\n'''"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"CHAT WITH HER!\"\nassert solution(input()) == \"IGNORE HIM!\"\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n'''"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"14 3\") == \"9\"\nassert solution(\"1 1 -1 1\") == \"2\"\nassert solution(\"14 3\") == \"9\""
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"14 3\") == \"9\""
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 1 -1 1') == 2\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n') == 9"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 1 -1 1') == '2'\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == '9'\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('14 3') == '9'\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n-1 1 -1 1\") == \"2\"\nassert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\") == \"9\"\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('14 3') == '9'\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '2'\nassert solution('14 3') == '9'"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(\"14 3\") == '9'"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 2\n''') == '12'\nassert solution('''\n4 1 2\n5 1 2\n''') == '12'\nassert solution('''\n3 1 2\n''') == '3'\nassert solution('''\n3 1 2\n5 1 2\n''') == '5'\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"12\"\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 5, 6]) == \"12\"\nassert solution([2, 1, 4]) == \"8\""
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 1 3\") == \"24\"\nassert solution(\"5 1 7\") == \"56\"\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\") == \"12\"\nassert solution(\"3 1 2\") == \"13\"\nassert solution(\"4 2 2\") == \"20\""
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 2') == '6'\nassert solution('4 1 2') == '12'\nassert solution('6 1 2') == '36'\nassert solution('10 1 2') == '62'\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 2') == '12'\nassert solution('4 1 2') == '12'\nassert solution('4 1 2 0') == '10'\nassert solution('3 1 2') == '6'\nassert solution('5 1 2') == '10'\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 1, 2]) == \"12\"\nassert solution([8, 3, 4]) == \"24\"\nassert solution([100, 400, 40, 50, 30, 15]) == \"275\"\nassert solution([10, 4, 5, 6, 9, 3, 2, 1]) == \"14\"\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1') == '0 1'\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == '12'\nassert solution('4 1 2') == '12'"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\"\"\"\n\n\nfrom functools import reduce\nfrom collections import Counter\n"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\n\n>>> "
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\", \"Should return YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\", \"Should return NO\""
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\""
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\n"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\""
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\""
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 3, 1, 10]) == 1\nassert solution([3, 5, 10, 22]) == 8\nassert solution([2, 3, 3, 5]) == 0\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 5, 10, 22]) == 8\nassert solution([2, 3, 3, 5]) == 0\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n\n\n\"\"\""
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\""
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\""
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('6') == '3'\nassert solution('17') == '4'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '0'\nassert solution('6') == '1'\nassert solution('27') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n''') == '0'\nassert solution('''\n10\n''') == '3'\nassert solution('''\n15\n''') == '2'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('27') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nassert solution(input(': ')) == '3'"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"27\\n\") == \"3\\n\"\nassert solution(\"1000000\\n\") == \"1\\n\""
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n''') == '2'\nassert solution('''27\n''') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n\n25\n\n10\n\n''') == '3'\n\nassert solution('''1\n2\n\n1\n\n2\n\n''') == '1'\n\nassert solution('''1\n2\n\n3\n\n2\n\n''') == '3'\n\nassert solution('''2\n\n1\n\n1\n\n2\n\n''') == '2'\n\nassert solution('''3\n\n1\n\n2\n\n3\n\n''') == '4'"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('25') == '5'\nassert solution('3') == '1'\nassert solution('6') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"hellno\"\n) == \"hell no\"\n\nassert solution(\n    \"abacaba\"\n) == \"abacaba\"\n\nassert solution(\n    \"asdfasdf\"\n) == \"asdf asdf\"\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\nassert solution('abaca') == 'abacaba'\nassert solution('acasd') == 'ac asd'\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asdf fasd f\"\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\n\"\"\"\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"hellno\") == \"hell no\", \"First\"\nassert solution(\"abacaba\") == \"abacaba\", \"Second\"\nassert solution(\"asdfasdf\") == \"asd fasd f\", \"Third\""
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asdf asdf'\nassert solution('hellllllooooo') == 'hello'\nassert solution('tobeornottobe') == 'to be'\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asdf asdf'"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('hellno') == 'hell no'\nassert solution('hellllllooooo') == 'hellllllooooo'\nassert solution('helltttuuuubbbbbb') == 'helltttuuuubbbbbb'\nassert solution('backtothefutttture') == 'back to futtture'\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ne\n''') == \"e\"\nassert solution('''\naa\n''') == \"aa\"\nassert solution('''\naaa\n''') == \"aaa\"\nassert solution('''\nasdfa\n''') == \"asdfa\"\nassert solution('''\ne\n''') == \"e\""
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\n\n\"\"\"\n\nfrom re import findall\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 3 2\") == \"20\"\nassert solution(\"10 99\") == \"99\"\nassert solution(\"2 4 3\") == \"12\"\nassert solution(\"200 100 400\") == \"350\"\nassert solution(\"4 15\") == \"50\"\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n600 700 800') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n10 80\\n100 800') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n100 800') == '21'\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80\n''') == '200'\nassert solution('''\n20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n100 800\n''') == '20'\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80\n''') == '20'\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\"\n) == \"200\"\nprint(solution(\n    \"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\"\n))\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\""
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"20\"\nassert solution(\"10 99\") == \"20\"\nassert solution(\"20 10 40\") == \"200\"\nassert solution(\"4 15\") == \"20\"\nassert solution(\"100 800\") == \"200\"\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 3 2') == '20'\nassert solution('10 99') == '99'\nassert solution('2 4 3') == '20'\nassert solution('200 100 400') == '200'\nassert solution('4 15') == '20'\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 11\n1 2 3 4\n''') == '6'\n\nassert solution('''5 5 10\n1 2 4 8 16\n''') == '7'\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"7\""
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 10\n1 2 3 4\n''') == '7'\nassert solution('''\n5 5 10\n1 2 3 4\n5 1\n4 2\n1 3\n3 4\n''') == '7'\n\nassert solution('''\n5 5 10\n1 2 3 4\n5 2\n3 4\n5 1\n4 1\n1 3\n2 3\n1 4\n''') == '7'\n\nassert solution('''\n5 5 10\n1 2 3 4\n5 1\n4 2\n1 3\n3 4\n''') == '7'\n\nassert solution('''\n5 5 10\n1 2 3 4\n5 1\n4 2\n1 3\n3 4\n''') == '7'\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 11\\n1 2 3 4\") == \"6\"\nassert solution(\"5 5 10\\n1 2 4 8 16\") == \"7\""
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5 10\n1 2 4 8 16''') == '7'\nassert solution('''3 4 11\n1 2 3 4\n\n1 2 4 8 16\n1 3 4 7''') == '7'\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 0\") == \"0\"\nassert solution(\"3 3 10\") == \"7\"\nassert solution(\"5 5 10\") == \"7\"\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 10') == '7'\nassert solution('1 2 3 4') == '6'\n\n'''\n\n\nimport math\nn, k, m = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\nb = sorted(list(map(int, input().split())))\n\nres = 0\nfor i in range(k):\n    if a[i] <= m:\n        res += b[i]\n    else:\n        continue\n\nprint(res)"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 4 11\\n\"\n    \"1 2 3 4\\n\"\n    ) == \"6\"\n\nassert solution(\n    \"5 5 10\\n\"\n    \"1 2 4 8 16\\n\"\n    ) == \"7\"\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 11') == '6'\nassert solution('5 5 10') == '7'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('10') == '3'\n\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '0'\n\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('6') == '1'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"8\") == \"2\"\n\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\n\"\"\"\n\nclass Solution:\n    def solve(self, stdin):\n        n = int(stdin)\n        perfect = 1\n        for i in range(1, n+1):\n            perfect = perfect * i % 998244353\n        return perfect\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\"\"\"\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '1 1'\nassert solution('4 5 3') == '1 3'\nassert solution('10 20 30 40 50 60 70 80 90') == '8 8'\nassert solution('4 3 1') == '3 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1,1') == '1 1'\nassert solution('4,3,0') == '1 1'\nassert solution('4,3,7') == '3 2'\n\n'''\n\nn, m, k = map(int, input().split())\n\nfor i in range(k):\n    if i % 2 == 0:\n        if i == 0:\n            n -= 1\n            m -= 1\n        else:\n            if n % 2 == 0:\n                n -= 1\n            else:\n                m -= 1\n    else:\n        if n % 2 == 0:\n            n -= 1\n        else:\n            m -= 1\n\nprint(n, m)"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 0') == '1 1\\n'\nassert solution('4 3 11') == '1 2\\n'\nassert solution('4 3 7') == '3 2\\n'"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 0') == '1 1', 'Should print the starting cell'\nassert solution('4 3 11') == '1 2', 'Should print the ending cell'\nassert solution('4 3 7') == '3 2', 'Should print the ending cell'\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3 0\n    1 1''') == '1 1'\nassert solution('''4 3 11\n    1 2\n    3 2\n    2 2''') == '3 2'\nassert solution('''4 3 7\n    1 2\n    2 3\n    3 3\n    3 3''') == '2 3'\n\n''')"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4, 3, 0]) == \"1 1\"\nassert solution([4, 3, 7]) == \"3 2\"\nassert solution([4, 3, 11]) == \"1 2\"\nassert solution([4, 3, 13]) == \"1 4\"\nassert solution([2, 4, 0]) == \"1 2\"\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\n\"\"\"\n\nimport math\nimport functools\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m, k = map(int, stdin.split())\n        n_fact = math.factorial(n)\n        m_fact = math.factorial(m)\n        k_fact = math.factorial(k)\n        k_mul = functools.reduce(lambda x, y: x * y, range(1, k + 1))\n        return str(k_mul // (n_fact * m_fact))\n"
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\""
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3 0\n''') == '1 1'\nassert solution('''4 3 7\n''') == '3 2'\nassert solution('''4 3 11\n''') == '3 2'\nassert solution('''5 1 1\n''') == '1 1'\nassert solution('''6 1 1\n''') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"5\") == \"1 5\"\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"2147483647\") == \"1 4294967296\""
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"1 4\"\nassert solution(\"4\") == \"1 4\""
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3 2'\nassert solution('2') == '1 2'\nassert solution('1') == '1 1'"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"1 4\"\nassert solution(\"4\") == \"1 4\"\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1 2'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\"\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7'\nassert solution('4') == '21'\nassert solution('2') == '0'\nprint(solution(input()))"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '7'\nassert solution('3') == '21'\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"7\"\nassert solution(\"4\") == \"21\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n7\n''') == '7'\n\nassert solution('''4\n7\n13\n''') == '21'\n\nassert solution('''2\n3\n2\n''') == '0'"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"7\"\nassert solution(\"4\") == \"21\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '7'\nassert solution('4') == '21'\nassert solution('3') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"7\"\nassert solution(\"4\") == \"21\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n7\") == \"7\"\nassert solution(\"2\\n3\\n2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n7''') == '7'\nassert solution('''2\n3\n2''') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n7\\n\") == \"7\"\nassert solution(\"4\\n7\\n13\\n\") == \"21\"\nassert solution(\"2\\n3\\n2\\n\") == \"0\"\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1 2 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 3 2 4') == 'NO'\nassert solution('2\\n2 3 1 4') == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n\n\"\"\""
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n4 1 1\n\n2\n2 2\n\n1\n3\n\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n2 1 2\n\n1\n1\n\n1\n3\n\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n2\n1 3 1\n\n3\n1 2 1\n\n2\n2 3\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n1 3 1\n\n3\n2 2\n\n1\n2\n\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\n3\n2 1 1\n\n2\n3 1\n\n\"\"\") == \"NO\""
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n\nassert solution() == \"YES\"\n\nassert solution() == \"NO\""
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\""
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    2\n    7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n    3\n    2 7 28\n\"\"\") == \"1\"\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 7 28') == '1\\n2 7 9 28'\nassert solution('3\\n3 5 8') == '1\\n2 3 5 8'\nassert solution('4\\n6 8 10 20') == '1\\n2 3 5 6 8 10 20'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 3 4 5\n''') == '3'\n\nassert solution('''\n5\n3 2 5 4 6\n''') == '2'\n\nassert solution('''\n4\n6 5 8 7\n''') == '4'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2 4\n\"\"\") == \"\"\"\n1\n2 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n7 8 9\n\"\"\") == \"\"\"\n1\n8 9\n\"\"\".strip()"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n5 2\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 2 7 9 28\"\nassert solution(input(\"\")) == \"2 7 9 28\"\nassert solution(input(\"\\n\")) == \"1 2 7 9 28\"\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('4\\n3 2 4 5\\n') == '2'\nassert solution('1\\n2 3\\n') == '3'"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('2 7 28') == '2 7 9 28'\nassert solution('5 100 1') == '5 100 2'\nassert solution('6 100 1') == '5 100 3'\nassert solution('6 100 2') == '5 100 5'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution('3\\n2 7 28\\n') == '2 7 9 28'\nassert solution('3\\n0 7 28\\n') == '1'\nassert solution('3\\n1 2 2\\n') == '2'\nassert solution('3\\n1 2 4\\n') == '3'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n8 20') == '7'\nassert solution('3 4\\n8 20\\n') == '7'\n\"\"\""
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n5 -1 8 0 2\n''') == '5'\nassert solution('''\n5 1\n-1\n''') == '1'\n'''\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3\n8 20\"\"\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '7'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n100 100\\n') == '9'\nassert solution('5 2\\n17 19\\n') == '17'\nassert solution('1 2\\n2\\n') == '2'\nassert solution('5 2\\n-1 2\\n') == '-1'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6') == '7'\nassert solution('1 2 3 4 5 10') == '7'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n2 8\n''') == '7'\nassert solution('''5 3\n4 8\n''') == '7'\nassert solution('''5 3\n8 10\n''') == '5'\nassert solution('''5 3\n9 8\n''') == '7'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '7'\nassert solution('2 4') == '7'\nassert solution('10 20') == '19'\nassert solution('10 20') == '19'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '7'\nassert solution('7 2') == '7'\nassert solution('1 2') == '2'\nassert solution('7 2') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('7') == '0'\nassert solution('39') == '4'\nassert solution('2') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"39\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('39') == '4'\nassert solution('1') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"39\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''39''') == '4'\nassert solution('''1''') == '0'\nassert solution('''7''') == '0'\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\n\n'''"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('39') == '4'\nassert solution('1') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 7\n1 2 3 4 5 6\n''') == '7'\nassert solution('''\n6 7\n1 2 3 4 5 6\n''') == '7'\n"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\""
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 6\n2 3 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6 7\n1 2 3 4 5 6\n\"\"\") == \"7\"\n"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"7\"\nassert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\"\n\"\"\""
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 6\n2 3 5\n''') == '2'\nassert solution('''\n6 7\n1 2 3 4 5 6\n''') == '7'"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 6, 3, 2, 5, 6, 4]) == 7\nassert solution([6, 7, 1, 3, 1, 2, 5]) == 8\nassert solution([5, 6, 3, 2, 5, 6, 4]) == 7\n"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 6\n2 3 5\n''') == '2'\nassert solution('''\n6 7\n1 2 3 4 5 6\n''') == '7'\n"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n\"\"\""
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 2"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == '2'\nassert solution('6 7') == '7'\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"5 2\", \"#G#T#\"]) == \"YES\"\nassert solution([\"6 1\", \"T....G\"]) == \"YES\"\nassert solution([\"7 3\", \"T..#..G\"]) == \"NO\"\nassert solution([\"6 2\", \"..GT..\"]) == \"NO\"\nassert solution([\"7 2\", \"T...G#\"]) == \"YES\""
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'YES'\nassert solution('7 3') == 'NO'\nassert solution('6 2') == 'NO'\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n#G#T#') == 'YES'\nassert solution('6 1\\nT....G') == 'YES'\nassert solution('7 3\\nT..#..G') == 'NO'\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2\n..GT..\n''') == 'NO'\nassert solution('''6 1\nT....G\n''') == 'YES'\nassert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'YES'\nassert solution('7 3') == 'NO'\nassert solution('6 2') == 'NO'\nassert solution('8 2') == 'NO'"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 5 8 3 1\n''') == '4.3750000000'\nassert solution('''\n10 5 6 2 1\n''') == '-1'\nassert solution('''\n1 4 6 2 2 1\n''') == '11.3333333333'\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.3750000000\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"4 4 4 4 4 4\") == \"4.25\"\nassert solution(\"1 1 1 1 1 1\") == \"1.5\"\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '11.3333333333'\nassert solution('1 1 2') == '0.5'\nassert solution('1 0 0') == '0'\nassert solution('0 1 2') == '1'\nassert solution('0 0 2') == '0.5'\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\n\n\"\"\""
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 10 13 10 3 1\n\n''') == '4.3750000000'\nassert solution('''\n1 4 6 2 2 1\n\n''') == '-1'\nassert solution('''\n3 10 15 17 9 2\n\n''') == '11.3333333333'\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 10 13 10 3 1\nOutput\n4.3750000000\n\nInput\n1 4 6 2 2 1\n\nOutput\n-1\n\nInput\n3 10 15 17 9 2\n\nOutput\n11.3333333333''') == '4.3750000000'\nassert solution('''4 1 2 2 2 1\n\nOutput\n-1''') == '-1'\nassert solution('''0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311 311"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 10 13 10 3 1\n''') == '4.3750000000'\nassert solution('''1 4 6 2 2 1\n''') == '-1'\nassert solution('''3 10 15 17 9 2\n''') == '11.3333333333'\nassert solution('''4 7 2 8 6 8 2 7 7 8 2 7 7 8 8 2 8 8 2 2 2 7 7 8 8 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 8 8 2 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7 7 8 8 2 7"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 13 10 3 1') == '4.3750000000'\nassert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 4 6 2 2 1\") == \"11.3333333333\"\nassert solution(\"4 10 13 10 3 1\") == \"4.3750000000\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"1 1\") == \"1.0\""
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 10 13 10 3 1''') == '4.3750000000'\nassert solution('''1 4 6 2 2 1''') == '-1'\nassert solution('''3 10 15 17 9 2''') == '11.3333333333'\n\"\"\""
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    3 2 1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    1 0 0\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1000000000000000000 0 1000000000000000000\n    '''\n) == '999999999999999999'\n\nprint('All tests passed')\n"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('100000000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 1''') == '1'\nassert solution('''1 0 0''') == '0'\nassert solution('''1000000000000000000 0 1000000000000000000''') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1000000000000000000 0 1000000000000000000\") == \"999999999999999999\"\nprint(solution(input()))"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2, 1]) == \"1\"\nassert solution([1, 0, 0]) == \"0\"\nassert solution([1, 1, 1]) == \"0\"\nassert solution([1,000000000000000000, 1000000000000000000]) == \"999999999999999999\"\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'YES'\n\n\"\"\"\n\nx = int(input())\na = list(map(int, input().split()))"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'NO'\nassert solution('8') == 'YES'\nassert solution('2') == 'YES'\nassert solution('1 10') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 10\") == \"YES\\n4 9\"\nassert solution(\"6\\n1 2 1 2 5 3\") == \"NO\"\nassert solution(\"8\\n1 2 3 6 9 8 5 2\") == \"YES\\n3 3\""
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n1 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 2\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 10\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6\n1 2 3 6 9 8 5 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n1 2 1 2 5 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('8') == 'YES'\n\n'''\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 2 3 6 9 8 5 2\n\n''') == 'YES'\nassert solution('''\n6\n1 10\n\n''') == 'YES'\nassert solution('''\n2\n1 10\n\n''') == 'NO'\nassert solution('''\n2\n1 10\n\n''') == 'YES'\nassert solution('''\n4\n1 10\n\n''') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 10') == 'YES'\nassert solution('6\\n1 2 1 2 5 3') == 'NO'\nassert solution('8\\n1 2 3 6 9 8 5 2') == 'YES'\nassert solution('2\\n1 10') == 'YES'"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == 'YES'\nassert solution('6') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10') == 'YES'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3 6 9 8 5 2\n''') == 'YES'\nassert solution('''6\n1 2 1 2 5 3\n''') == 'NO'\nassert solution('''2\n1 10\n''') == 'YES'\nassert solution('''1\n1 10\n''') == 'YES'"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6 2 9 3 1 5 2 4 1 4\\n\") == \"YES\\n4 9\"\nassert solution(\"8 1 2 3 6 9 8 5 2\\n\") == \"YES\\n3 3\"\nassert solution(\"6 1 2 1 2 5 3\\n\") == \"NO\"\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input := 'hi\\nbob') == '-'\nassert solution(input := 'abca\\naccepted') == 'ac'\nassert solution(input := 'abacaba') == 'abcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"hi\") == \"-\"\nassert solution(\"bob\") == \"-\"\nassert solution(\"abca\") == \"abcba\"\nassert solution(\"abcdcba\") == \"abcba\"\nassert solution(\"abacaba\") == \"abcba\"\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input().strip()) == '-'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '-', \"Wrong result\"\nassert solution(input()) == stdin, \"Wrong result\""
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''hi\nbob''') == '-'\nassert solution('''abca\naccepted''') == 'ac'\nassert solution('''abacaba\nabcdcba''') == 'abcba'\nassert solution('''abacaba\nabcdcba''') == 'abcba'\nassert solution('''abacaba\nabcdcba''') == 'abcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''hi\nbob\n''') == '-'\nassert solution('''abca\naccepted\n''') == 'ac'\nassert solution('''abacaba\nabcdcba\n''') == 'abcba'\nprint(solution(input()))"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hi\\n' 'bob') == '-', 'First'\nassert solution('abca\\n' 'accepted') == 'ac', 'Second'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''hi\nbob''') == '-', solution\nassert solution('''abca\naccepted''') == 'ac', solution\nassert solution('''abacaba\nabcdcba''') == 'abcba', solution\nassert solution('''abacaba\nabcdcba''') == 'abcba', solution\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''hi\nbob''') == '-', 'The first example'\nassert solution('''abca\naccepted''') == 'ac', 'The second example'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"-\"\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n''') == '0'\nassert solution('''\n3\n+-\n''') == '3'\nassert solution('''\n2\n--\n''') == '1'\nassert solution('''\n5\n++-++\n''') == '3'\nassert solution('''\n2\n+-\n''') == '0'\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n---\n3\n+++\n2\n++-\n''') == '0'\nassert solution('''\n5\n++++\n''') == '4'\nassert solution('''\n2\n-+\n''') == '1'\nassert solution('''\n3\n++-++\n''') == '3'\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    ---\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n    4\n    ++++\n    \"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n    2\n    -+\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    5\n    ++-++\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n    1\n    +\n    \"\"\"\n) == \"1\"\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n---\n\n1\n+\n\n2\n++''') == '0'\n\nassert solution('''4\n++++\n\n3\n++\n\n2\n++''') == '4'\n\nassert solution('''5\n++-++\n\n4\n++-++\n\n3\n++''') == '4'\n\nassert solution('''5\n++-++\n\n4\n++-++\n\n3\n++''') == '3'"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n---\n\n''') == '0'\n\nassert solution('''\n4\n++++\n\n''') == '4'\n\nassert solution('''\n5\n++-++\n\n''') == '3'\n\nassert solution('''\n2\n-+\n\n''') == '1'\n\nassert solution('''\n1\n+\n\n''') == '2'"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '3'\nassert solution('2') == '1'\nassert solution('6') == '4'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n11\n9\n8\n''') == '2'\nassert solution('''10\n5\n6\n1\n''') == '2'\nassert solution('''10\n5\n6\n1\n''') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n11\n9\n8\n''') == '2'\nassert solution('''\n10\n5\n6\n1\n''') == '2'\nassert solution('''\n10\n1\n2\n''') == '0'\nassert solution('''\n10\n1\n2\n3\n''') == '1'\nassert solution('''\n10\n1\n2\n3\n4\n''') == '1'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\nassert solution('10\\n0\\n1') == '1'\nassert solution('10\\n10\\n0\\n1') == '1'\n\n\n'''\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n11\\n9\\n8\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"10\") == \"2\""
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n11\n9\n8\n''') == '2'\nassert solution('''\n10\n5\n6\n1\n''') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n6\n1\n2\n''') == '2'\nassert solution('''\n10\n11\n9\n8\n''') == '2'\nassert solution('''\n10\n5\n6\n1\n''') == '2'\nassert solution('''\n10\n5\n6\n2\n''') == '3'\nassert solution('''\n10\n5\n6\n3\n''') == '3'\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 2'\nassert solution('4') == '6 2'\nassert solution('5') == '2 2'\nassert solution('6') == '2 2'\nassert solution('7') == '3 3'"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 1 2\n3 4 2\n''') == '6 2', 'First'\nassert solution('''\n5\n3 1 2\n2 4 2\n''') == '6 2', 'Second'\n''')\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2\n1 2''') == '2 2'\nassert solution('''3\n1 1\n2 2\n3 3''') == '1 1 2 2'\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\"\nassert solution(stdin=\"1 2\") == \"2 1\"\nassert solution(stdin=\"3 4 5 6 7\") == \"2 2\"\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\""
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"./in/sample1.in\") == \"1 2\"\nassert solution(\"./in/sample2.in\") == \"-1\"\nassert solution(\"./in/sample3.in\") == \"6 2\"\nassert solution(\"./in/sample4.in\") == \"2 2\""
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n2 1 3\\n2 4 2'\n    ) == '6 2'\nassert solution(\n    '3\\n1 2\\n2 1 3'\n    ) == '-1'"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n3\\n3\") == \"1 3\"\nassert solution(\"4\\n1 3 2 4\\n3 2 1 4 3\\n\") == \"1 2\"\nassert solution(\"3\\n2 3\\n\") == \"1\"\nassert solution(\"4\\n1 1\\n1 1\\n\") == \"2\"\n\n\n\"\"\""
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\n1 2 3\\n2 4 2') == '6 2'\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n2 1 3\\n2 4 2\\n\") == \"6 2\"\n\nprint(solution(\"4\\n2 1 3\\n2 4 2\\n\"))\n\nassert solution(\n    \"3\\n1 2\\n2 1 3\\n\") == \"1 2\"\n\nprint(solution(\"3\\n1 2\\n2 1 3\\n\"))\n\nassert solution(\n    \"5\\n2 1 3\\n2 4 2\\n\") == \"3 2\"\n\nprint(solution(\"5\\n2 1 3\\n2 4 2\\n\"))\n\nassert solution(\n    \"2\\n1 2\\n2 1 3\\n\") == \"2 2\"\n\nprint(solution(\"2\\n1 2\\n2 1 3\\n\"))"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacaba') == \"Correct\"\nassert solution('X12345') == \"Too weak\"\nassert solution('CONTEST_is_STARTED!!11') == \"Correct\""
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Correct\"\nassert solution(input()) == \"Too weak\"\nassert solution(input()) == \"Correct\""
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"Too weak\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Correct'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\n\n\n'''"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Correct'\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Too weak'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Correct'\nassert solution('X12345') == 'Correct'\nassert solution('_!1') == 'Too weak'\nassert solution('T_!@') == 'Correct'\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Correct\"\nassert solution(input()) == \"Too weak\""
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Correct\"\nassert solution(input()) == \"Too weak\"\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacaba') == 'Correct'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('abcd') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Correct\"\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n5 4 4 4\\n5 5 4 5') == '1'\nassert solution('6\\n1 1 1 1 1 1\\n5 5 5 5 5 5') == '3'\nassert solution('9\\n3 2 5 5 2 3 3 3 2') == '4'"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '-1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 4 4 4\\n5 5 4 5') == '1'\nassert solution('6 1\\n5 5 5 5 5 5\\n') == '3'\nassert solution('4 1\\n3 4 3 4\\n') == '-1'\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '-1'\nassert solution('9') == '4'\nassert solution('5') == '3'\nassert solution('1') == '1'"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '3'"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '3'\nassert solution('1') == '-1'\nassert solution('9') == '4'"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"NO\"\n\"\"\""
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('4 6') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"4 6\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"NO\", \"Your code needs to return 'NO' when the given pattern meets the mayor's criteria.\"\nassert solution(\"4 6\") == \"YES\", \"Your code needs to return 'YES' when the given pattern meets the mayor's criteria.\"\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\\n>><\\n^v^v\"\n) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('4 6') == 'YES'\nassert solution('9 9') == 'YES'\nassert solution('8 8') == 'NO'\nassert solution('10 10') == 'NO'"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 \\n><>') == 'NO'\n\nassert solution('3 3 \\n><> \\n>v^v') == 'YES'\n\nassert solution('4 6 \\n<><> \\n>v^v^v^') == 'YES'\n\nassert solution('2 2 \\n<><> \\n>^v^') == 'YES'\n\nassert solution('3 3 \\n<><> \\n>^v^') == 'NO'"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n><>''') == 'NO'\nassert solution('''4 6\n<><>''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"1\\n0\") == \"YES\"\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 1 1 0''') == 'YES'\nassert solution('''1 1''') == 'NO'\nassert solution('''1 0''') == 'NO'\nassert solution('''0''') == 'NO'\nassert solution('''1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n0 1 1 0\n\n''') == 'YES'\nassert solution('''2\n1 1\n\n''') == 'NO'\nassert solution('''1\n0\n\n''') == 'YES'\nassert solution('''3\n0\n\n''') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n1 1''') == 'NO'\nassert solution('''0 1\n1 1''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 2 1') == 'NO'\nassert solution('4\\n0 1 1 0') == 'YES'\nassert solution('5\\n0 0 0 0 1') == 'NO'\nassert solution('5\\n0 0 0 0 1') == 'YES'\nassert solution('5\\n0 0 0 0 1') == 'YES'"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"NO\"\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 1 1 0\n''') == 'YES'\nassert solution('''\n2\n1\n''') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1\") == \"NO\"\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n\") == \"0 1\"\nassert solution(\"12 5\\n\") == \"0 1\"\nassert solution(\"31 12\\n\") == \"7 12\""
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\""
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n''') == '0 0'\nassert solution('''1 100\n''') == '1 100'\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12 5\n''') == '0 1'\nassert solution('''\n31 12\n''') == '7 12'\nprint('All test cases passed!')"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('10 10') == '0 0'\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 -4 4\n''') == '5'\nassert solution('''\n1 1 10\n''') == '10'\nassert solution('''\n1 -5 -5\n''') == '3'\n\nassert solution('''\n4 1 5\n''') == '4'\nassert solution('''\n6 -4 5\n''') == '4'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 10\\n') == '10'\nassert solution('2 -4 4\\n') == '5'"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"2 -4 4\") == \"5\""
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\n\"\"\"\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    4 1 3\n''') == '10'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 10\n''') == '10'\nassert solution('''2 -4 4\n''') == '5'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 -4\n''') == '5'\n\nassert solution('''\n7 5 -1\n''') == '7'"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"2 -4 4\") == \"5\"\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"7\"\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '3'\nassert solution('10') == '0'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '3'\nassert solution('12') == '2'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n10\n''') == '1'\nassert solution('''\n1000\n''') == '1'\nassert solution('''\n1234\n''') == '1'\nassert solution('''\n123456789101112131415161718192021222324252627282930313233343536\n''') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('21') == '5'\n\"\"\"\n\nn = int(input())\ns = str(123456789101112131415161718192021222324252627282930313233343536)[:n]\nprint(s[n - 1])\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"9\"\nassert solution(\"123456789101112131415161718192021222324252627282930313233343536\") == \"7\"\nassert solution(\"23456789101112131415161718192021222324252627282930313233343536\") == \"9\"\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('111') == '3'\nassert solution('112233') == '3'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"123456789101112131415161718192021222324252627282930313233343536\") == \"9\"\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'NO'\nassert solution('6') == 'YES'"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == 'YES'\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == 'YES'\nassert solution('15') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == 'YES'\nassert solution('15') == 'NO'"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(13, \"8380011223344\") == \"YES\"\nassert solution(15, \"807345619350641\") == \"NO\""
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == 'YES'\nassert solution('15') == 'NO'"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == 'NO'\nassert solution('13') == 'YES'"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"YES\"\nassert solution(\"13\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n8380011223344''') == 'YES'\nassert solution('''2\n8380011223344''') == 'NO'\nassert solution('''3\n8380011223344''') == 'NO'\nassert solution('''4\n8380011223344''') == 'NO'\nassert solution('''5\n8380011223344''') == 'NO'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 2\n''') == '6'\nassert solution('''\n123 42 24\n''') == '824071958'"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2') == '6'\nassert solution('123 42 24') == '824071958'"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 1 2\n''') == '6'\nassert solution('''\n123 42 24\n''') == '824071958'\nassert solution('''\n1 2 3\n''') == '1'\nassert solution('''\n1 2 3 4\n''') == '10'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '6'\nassert solution('3 42 24\\n') == '824071958'\nassert solution('5 2 3 4 1\\n') == '142857'\nassert solution('10000000000 2 4 3 1\\n') == '13441696704'\nassert solution('100000000000 2 3 4 1\\n') == '214748364800'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"6\"\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4,1,2]) == 6\nassert solution([123,42,24]) == 824071958"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 1 2\n''') == '6'\nassert solution('''123 42 24\n''') == '824071958'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 2') == '6'\nassert solution('123 42 24') == '824071958'"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\\n\") == \"6\"\nassert solution(\"123 4 24\\n\") == \"824071958\"\nprint(solution(input()))\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aba'\nassert solution('ab?a') == 'Impossible'\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'Impossible'\nassert solution('?') == '?'\nassert solution('h?') == 'h'\nassert solution('h?') == 'h'\nassert solution('h?') == 'h'\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"Impossible\"\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"Impossible\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aba'\nassert solution('ababb') == 'ababb'\nassert solution('ab?a') == 'Impossible'\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Hello, Andrey!\") == \"Andrey received a postcard from Irina. It contained only the words \\\"Hello, Andrey!\\\", and a strange string consisting of lowercase Latin letters, snowflakes and candy canes.\"\nassert solution(\"happynewyear\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ababb\") == \"aba\"\nassert solution(\"ab?a\") == \"Impossible\"\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''h?w?h?a*n?e*w?a*y*n*\nh?w?h?a*n?e*w?a*y*n*\nh?w?h?a*n?e*w?a*y*n*''') == \"happynewyear\"\n\nassert solution('''a?a\na?a\na?a\na?a''') == \"aa\"\n\nassert solution('''a?a\na?a\na?a\na?a''') == \"aba\"\nassert solution('''a?a\na?a\na?a\na?a''') == \"aba\"\nassert solution('''a?a\na?a\na?a\na?a''') == \"impossible\""
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"happynewyear\""
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"h?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"Impossible\"\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-60\") == \"3\"\nassert solution(\"60\") == \"1\"\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nprint('AoC 2020 Day 20 - Part 1 - Clockwise rotated image')\nprint(solution(input))\nprint('')"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n\"\"\"\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-60') == '3'\nassert solution('60') == '1'\nassert solution('10') == '2'\nassert solution('-10') == '1'\nassert solution('-10.0') == '1'\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('60') == '3'\nassert solution('-60') == '1'"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('-180') == '0'\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-60') == '3'\nassert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"60\") == \"3\"\nassert solution(\"-60\") == \"1\"\n\n'''\nfrom math import pi"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"3\"\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 0\n2 1 2\n''') == \"Yes\"\nassert solution('''\n5 6 1\n2 7 2\n''') == \"No\"\nassert solution('''\n3 3 3\n2 2 2\n''') == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0\\n2 1 2\\n\") == \"Yes\"\nassert solution(\"5 6 1\\n2 7 2\\n\") == \"No\"\nassert solution(\"3 3 3\\n2 2 2\\n\") == \"Yes\"\nassert solution(\"1 0 1\\n2 0 2\\n\") == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\""
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4 0\n2 1 2\n''') == 'Yes'\nassert solution('''5 6 1\n2 7 2\n''') == 'No'\nassert solution('''3 3 3\n2 2 2\n''') == 'Yes'"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 0') == \"Yes\"\nassert solution('5 6 1') == \"No\""
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 2') == 'Yes'\nassert solution('4 4 0') == 'Yes'\nassert solution('3 3 3') == 'No'\nassert solution('5 6 1') == 'No'\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4 0\n2 1 2\n''') == 'Yes'\nassert solution('''5 6 1\n2 7 2\n''') == 'No'\nassert solution('''3 3 3\n2 2 2\n''') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"Yes\"\nassert solution(\"2 3 2\") == \"No\"\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1000\\n\") == \"4\"\nassert solution(\"2 2 1000\\n\") == \"45\"\nassert solution(\"5 3 1103\\n\") == \"590\"\nprint(solution(input()))\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\""
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\nInput\n2 2 1000\n\nOutput\n45\n\nInput\n5 3 1103\n\nOutput\n590\n''') == '4'\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 1000\n''') == '4'\nassert solution('''\n5 3 1103\n''') == '590'\nassert solution('''\n1 2 1000\n3\n''') == '2'\n\"\"\"\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1000\") == \"4\"\nassert solution(\"5 3 1103\") == \"590\"\n\n\"\"\"\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1000') == \"4\"\nassert solution('2 2 1000') == \"45\"\nassert solution('5 3 1103') == \"590\"\n\n'''\n\n'''\namr:\nwhile True:\n    N, K, M = map(int, input().split())\n    if (N, K, M) == (-1, -1, -1):\n        break\n    else:\n        n = N\n        k = K\n        m = M\n        # k = 2\n        # m = 3\n        d = 10**9 + 7\n\n        # checking number of digits required\n        n = 1\n        k = 1\n        m = 1\n        while (n!= 0) or (k!= 0):\n            k, n = divmod(k, n)\n            m = m * 10\n            m = m % M\n\n        # checking if remainder mod m is equal to zero\n        res = 0\n        while n > 0:\n            tmp = n % 10\n            tmp = tmp % k\n            n = n // 10\n            n = n // 10\n            res += tmp\n        res = res % M\n        print(res)\n\n\n'''\n\n'''\nclass Solution:\n    # @param A : integer\n    # @param B : integer\n    # @param C : integer\n    # @return an integer\n    def solve(self, A, B, C):\n        if A<B:\n            A,B=B,A\n        if B<C:\n            B,C=C,B\n        s=0\n        for i in range(A,0,-1):\n            if i>=B:\n                s=s+(C//i)*(B//i)\n                C%=i\n            if C==0:\n                break\n        return s\n\n'''"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"1\", \"simple case\"\nassert solution(\"2 3 1\") == \"2\", \"numbers\"\nassert solution(\"4 1 2 2\") == \"2\", \"more than two\"\nassert solution(\"1 100 1\") == \"1\", \"too small\"\nassert solution(\"5 5 5\") == \"14\", \"too many\""
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 4, 2]) == '6'\nassert solution([5, 5, 5]) == '14'\nassert solution([0, 2, 0]) == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 2') == '6'\nassert solution('0 2 0') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 4 2\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n5 5 5\n\"\"\"\n) == \"14\"\n\nassert solution(\n\"\"\"\n0 2 0\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 4 2\n    ''') == '6'\nassert solution('''\n    5 5 5\n    ''') == '14'\nassert solution('''\n    0 2 0\n    ''') == '0'"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_value) == output_value, \"Your function has error\"\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"6\"\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\n'''"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n\n''') == '6'\nassert solution('''4 2\n\n''') == '13'\nassert solution('''5 1\n\n''') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '6'\n\nassert solution('2 2') == '6'\n\nassert solution('4 2') == '13'\n\nassert solution('5 1') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\n\n\"\"\""
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n\") == \"9\"\nassert solution(\"3 2\\n\") == \"8\"\nassert solution(\"5 0\\n\") == \"10\"\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n\") == \"9\\n\"\nassert solution(\"3 2\\n\") == \"8\\n\"\nassert solution(\"5 0\\n\") == \"10\\n\"\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == '9'\nassert solution(\"3 2\") == '8'\nassert solution(\"5 0\") == '10'\nprint(solution(input()))\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == '9'\nassert solution(\"3 2\\n\") == '8'\nassert solution(\"5 0\\n\") == '10'"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\""
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 0\n    3 2\n    5 0''') == '10'\nassert solution('''5 2\n    1 2\n    1 3\n    2 4\n    2 3\n    2 5\n    3 6\n    3 7\n    4 8\n    4 9\n    5 0''') == '10'\nassert solution('''3 2\n    1 2\n    1 3\n    2 4\n    2 3\n    2 5\n    3 6\n    3 7\n    4 8\n    4 9\n    5 0''') == '9'\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n10\n20\n30\n20\n10\n20''') == 'YES'\nassert solution('''5\n2\n6\n5\n4\n3''') == 'NO'\nassert solution('''5\n6\n5\n4\n3\n2''') == 'NO'\nassert solution('''4\n1\n1\n2\n2''') == 'YES'\nassert solution('''4\n1\n1\n2\n2''') == 'YES'\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n11\n27\n27\n11\n\n''') == 'YES'\nassert solution('''\n2\n6\n6\n\n''') == 'NO'\nassert solution('''\n6\n1\n1\n2\n2\n3\n3\n\n''') == 'YES'\nassert solution('''\n6\n10\n20\n30\n20\n10\n20\n\n''') == 'NO'\nassert solution('''\n6\n1\n1\n2\n2\n3\n3\n\n''') == 'YES'"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n'\n    '11\\n'\n    '27\\n'\n    '27\\n'\n    '11\\n') == 'NO'\n\nassert solution(\n    '6\\n'\n    '1\\n'\n    '1\\n'\n    '2\\n'\n    '2\\n'\n    '3\\n'\n    '3\\n'\n    ) == 'NO'"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1\n1\n2\n2\n3\n3\n''') == 'NO'\nassert solution('''\n6\n1\n1\n2\n2\n3\n3\n''') == 'YES'\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n11\n27\n27\n11\n''') == \"NO\"\nassert solution('''4\n10\n20\n30\n20\n10\n20\n''') == \"YES\"\nassert solution('''6\n1\n1\n2\n2\n3\n3\n''') == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'NO'\nassert solution('4') == 'YES'\nassert solution('6') == 'YES'\nassert solution('10') == 'YES'\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"20\") == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n\nstdin = \"\"\"\n5\n1\n2\n3\n4\n5\n\"\"\"\nassert solution(stdin) == \"YES\"\n\nstdin = \"\"\"\n4\n1\n1\n2\n2\n\"\"\"\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"NO\""
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n1\n1\n2\n2\n3\n3''') == 'YES'\nassert solution('''2\n5\n1\n5\n2\n1\n3''') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n5 8\n''') == 'YES'\nassert solution('''1 2\n7 1\n''') == 'NO'\nassert solution('''1 4\n2 2 1 2\n''') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n5 8\n''') == 'YES'\nassert solution('''1 2\n7 1\n''') == 'NO'\nassert solution('''1 4\n2 2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('1 4') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 4') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n5 8\n\n''') == 'YES'\nassert solution('''\n1 2\n7 1\n\n''') == 'NO'\nassert solution('''\n1 4\n2 2 1 2\n\n''') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2') == 'NO'"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == 'YES'\nassert solution(\"1 2\") == 'NO'\nassert solution(\"1 4\") == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nprint(solution())\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n5 8''') == \"YES\"\nassert solution('''1 2\n7 1''') == \"NO\"\nassert solution('''1 4\n2 2 1 2''') == \"YES\"\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 4') == 'YES'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 2 2 3\") == \"2 0\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2 0\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2 0\""
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('5\\n1 1 2 2 3') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n10 1 4\n''') == '''3 7\n'''\n\nassert solution('''5\n1 1 2 2 3\n''') == '''2 0\n'''"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 7'\nassert solution('5') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10 1 4') == '3 7'\nassert solution('5\\n1 1 2 2 3') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2 0\"\nassert solution(\"5\") == \"2 0\"\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 7'\nassert solution('5') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3 7\"\nassert solution(\"5\") == \"2 0\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"7 7\"\nassert solution(\"5\") == \"2 0\"\nassert solution(\"10\") == \"3 7\"\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"3\"\n\n'''"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n....\n..*.\n...*\n..**\n\n''') == '3'\n\n\nassert solution('''\n1 3\n.\n*\n\n''') == '1'"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"4 4\n....\n..*.\n...*\"\"\") == '3'\n\nassert solution(\"\"\"1 3\n.\n*\"\"\") == '1'\n\"\"\"\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n*') == '1'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 4\n*.*\n''') == '3'\n\nassert solution('''\n2 1\n.\n*\n''') == '1'\n\"\"\""
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1', solution('1 1')\nassert solution('2 1') == '1', solution('2 1')\n\n\"\"\"\n\nn, m = map(int, input().split())\n\nmatrix = [['.'] * (m+2) for _ in range(n+2)]\n\nstars = []\n\nfor i in range(1, n+1):\n    stars.append(list(input()))\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        matrix[i][j] = stars[i-1][j-1]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if matrix[i][j] == '*':\n            for k in range(i, i+3):\n                for l in range(j, j+3):\n                    matrix[k][l] = '*'\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if matrix[i][j] == '.':\n            for k in range(i, i+3):\n                for l in range(j, j+3):\n                    if k!= i or l!= j:\n                        matrix[k][l] = '*'\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if matrix[i][j] == '*':\n            print('*', end='')\n        else:\n            print(matrix[i][j], end='')\n    print()\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '3', '\u041e\u0448\u0438\u0431\u043a\u0430!'\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n....\n..*.\n...*\n\n''') == '3'\n\n'''\n----------------------------------------------------------------------\n\u0417\u0430\u0434\u0430\u0447\u0430 50. \u041a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f\n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u0432\u043e\u0434\u0438\u0442 \u043b\u0438 \u043e\u043d \u043d\u043e\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. \u0415\u0441\u043b\u0438 \u043e\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u043a\u043e\u043d\u0435\u0446 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430, \u0442\u043e \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0435 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u0440\u043e\u0441\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u0432\u0435\u0441\u0442\u0438 \u0442\u0435\u043a\u0441\u0442, \u0447\u0442\u043e \u043e\u043d \u0445\u043e\u0447\u0435\u0442 \u043e\u0431\u043e\u0439\u0442\u0438. \u0415\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u0442 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0445\u043e\u0447\u0435\u0442 \u043e\u0431\u043e\u0439\u0442\u0438, \u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0435\u0433\u043e \u0441\u0430\u043c\u0438\u043c \u043f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0421\u043f\u0438\u0441\u043e\u043a \ufffd"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 2, 1, 0, 0]) == '333333336'\nassert solution([5, 1, 1, 1, 0, 0]) == '968493834'"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n0 1 0\n''') == '333333336'\nassert solution('''5 1\n1 1 1 0 0\n''') == '968493834'"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '333333336'\nassert solution('5 1') == '0'\nassert solution('6 4') == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n0 1 0\n\n''') == '333333336'\nassert solution('''5 1\n1 1 1 0 0\n\n''') == '0'"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 2, 1]) == '333333336'\nassert solution([5, 1, 1, 0, 0, 0]) == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_sample_1) == \"0\"\nassert solution(input_sample_2) == \"33333\"\n"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n0 1 0\n''') == '333333336'\nassert solution('''\n5 1\n1 1 1 0 0\n''') == '968493834'"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n0 1\n''') == '0'\n\nassert solution('''\n1 2\n0 1\n''') == '333333336'"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '0'\nassert solution('5 1') == '0'\nassert solution('6 4') == '968493834'\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nprint(solution(*['12 2', '8 8', '5 9', '12 3']))"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3\n''') == '4'\nassert solution('''8 5\n''') == '3'\nassert solution('''22 4\n''') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n''') == '4'\nassert solution('''\n8 5\n''') == '3'\nassert solution('''\n22 4\n''') == '6'\nprint(\"\u2705  Test passed.\")\nassert solution('''\n7 4\n''') == '7'\nprint(\"\u2705  Test passed.\")"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 3\n''') == '4'\nassert solution('''8 5\n''') == '3'\nassert solution('''22 4\n''') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 6\n''') == '4'\nassert solution('''\n8 5\n''') == '3'\nassert solution('''\n22 4\n''') == '6'\nassert solution('''\n7 4\n''') == '4'\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 3\n''') == \"4\"\nassert solution('''8 5\n''') == \"3\"\nassert solution('''22 4\n''') == \"6\""
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"0.2000000000\"\nassert solution(\"1 0\") == \"0.5000000000\""
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n3 4\n''') == \"0.2000000000\"\nassert solution('''\n1 0\n0 1\n''') == \"0.5000000000\"\nprint('A')\nassert solution('''\n1 2\n3 4\n''') == \"0.2000000000\"\nassert solution('''\n1 0\n0 1\n''') == \"0.5000000000\"\nprint('B')\nassert solution('''\n1 2\n3 4\n''') == \"0.2000000000\"\n"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 4') == '0.2000000000'\nassert solution('1 0\\n0 1') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n3 4\n''') == '0.2000000000'\nassert solution('''\n1 0\n0 1\n''') == '0.5000000000'\nassert solution('''\n1 0\n0 1\n''') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n3 4') == '0.2000000000'\nassert solution('1 0\\n0 1') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 4''') == '0.2000000000'\nassert solution('''1 0\n0 1''') == '0.5000000000'\nassert solution('''4 2\n3 4''') == '0.0'\n"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0.2000000000'\nassert solution('1 0') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 0\n0 1\n\"\"\") == \"0.5000000000\"\n"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 2], [3, 4]) == \"0.2000000000\"\nassert solution([1, 0], [0, 1]) == \"0.5000000000\""
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.2000000000\"\nassert solution(\"1 0\") == \"0.5000000000\""
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\nassert solution('4 1 1 1') == '4'\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"0\"\nassert solution(\"4 1 1\") == \"2\""
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1 1\") == \"2\"\nassert solution(\"4 1 2\") == \"0\"\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"0\"\nassert solution(\"4 1 1\") == \"2\""
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 2\n1 2 1 1\n''') == '0'\nassert solution('''\n4 1 1\n1 1 2 1\n''') == '2'"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 1 2\n1 2 1 1\n''') == '0'\nassert solution('''\n4 1 1\n1 1 2 1\n''') == '2'\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\\n1 1 2 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1 2\\n1 2 1 1') == '0'\nassert solution('4 1 1\\n1 1 2 1') == '2'"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n'''\n\nimport math"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\""
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == '-1'\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 0 4\") == \"5\"\nassert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 2 1\") == \"-1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 0 4\") == \"5\"\nassert solution(\"2 2 2 1\") == \"-1\""
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"5\"\nassert solution(\"2 2 1 1\") == \"-1\"\nassert solution(\"5 3 4 2\") == \"0\"\nassert solution(\"1 1 1 2\") == \"1\"\nassert solution(\"2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\""
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 0\n\n2 1\n\n3 2''') == '7'\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\""
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\""
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0\n''') == '4'\nassert solution('''\n2 1\n''') == '7'\nassert solution('''\n3 2\n''') == '21'\nassert solution('''\n100 0\n''') == '10'\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0\") == \"4\"\nassert solution(\"3 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 0]) == 4\nassert solution([2, 1]) == 7\nassert solution([3, 2]) == 21\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n1 2\n\"\"\") == \"499122177\"\nassert solution(\"\"\"\n3\n1 2\n1 2\n1 2\n\"\"\") == \"578894053\"\nassert solution(\"\"\"\n2\n42 1337\n13 420\n\"\"\") == \"578894053\"\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(io.StringIO('''\n3\n1 2\n1 2\n1 2\n\n''')) == '499122177'\n\nassert solution(io.StringIO('''\n2\n42 1337\n13 420\n\n''')) == '578894053'\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n1 2') == '499122177'\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 2\n1 2\n1 2\n\n\"\"\") == \"499122177\"\nassert solution(\"\"\"\n2\n42 1337\n13 420\n\n\"\"\") == \"578894053\"\nassert solution(\"\"\"\n2\n1 1\n1 1\n\n\"\"\") == \"1\""
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2\n1 2\n1 2\n\n''') == '499122177'\nassert solution('''\n2\n42 1337\n13 420\n\n''') == '578894053'\nassert solution('''\n2\n1 1\n1 1\n\n''') == '1'\nassert solution('''\n1\n0 0\n\n''') == '1'\nassert solution('''\n3\n1 1\n1 2\n1 3\n\n''') == '0'\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n1 2\n1 2\n''') == '499122177'\n\nassert solution('''\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n2 4\n1 3\n1 2\n''') == '578894053'\n\nprint('All tests passed!')"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '499122177'\nassert solution('1 1') == '1'\nassert solution('0 0') == '1'"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '499122177'\nassert solution('''\n1 1\n1 1\n''') == '1'\nassert solution('''\n2 1\n1 1\n''') == '1'"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"499122177\"\nassert solution(\"2\") == \"578894053\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('20') == '4'\n"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('20') == '4'\nassert solution('6') == '1'"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('20') == '4'"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n20\n''') == '4'\n"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"1\"\nassert solution(\"20\\n\") == \"4\""
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n\n''') == '1'\nassert solution('''20\n\n''') == '4'"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10\n10''') == '2'\n"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"20\") == \"4\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n''') == '1'\nassert solution('''20\n''') == '4'"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('3 3') == '3'\nassert solution('3 4') == '2'\nassert solution('3 7') == '-1'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n4 3 5\\n\") == \"3\"\nassert solution(\"3 4\\n5 3 4\\n\") == \"2\"\nassert solution(\"3 7\\n1 2 3\\n\") == \"-\"\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n4 3 5\n\n''') == '3', \"First\"\nassert solution('''3 4\n5 3 4\n\n''') == '2', \"Second\"\nassert solution('''3 7\n1 2 3\n\n''') == '-1', \"Third\"\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 3], [4, 3, 5]) == \"3\"\nassert solution([3, 7], [1, 2, 3]) == \"2\"\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 7\") == \"-1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"3 10\") == \"2\"\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n4 3 5\n''') == '3'\nassert solution('''\n3 4\n5 3 4\n''') == '2'\nassert solution('''\n3 7\n1 2 3\n''') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution() == '2'\nassert solution() == '-1'"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n4 3 5\n''') == '3'\nassert solution('''3 7\n1 2 3\n''') == '-1'\nassert solution('''3 9\n1 2 3\n''') == '-1'\nassert solution('''4 6\n1 2 3 4 5\n''') == '4'\nassert solution('''5 9\n1 2 3 4 5 6 7\n''') == '5'"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n4 3 5\n''') == '3'\nassert solution('''\n3 4\n5 3 4\n''') == '2'\nassert solution('''\n3 7\n1 2 3\n''') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 3]) == \"3\"\nassert solution([3, 4]) == \"2\"\nassert solution([3, 7]) == \"-1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"1 50\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"1 50\") == \"1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"10 19\") == \"1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30\\n2 1') == '1'\nassert solution('10 13\\n1 1') == '0'\nassert solution('10 19\\n5 4') == '1'\nassert solution('1 50\\n5 4') == '1'"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 30') == \"1\"\nassert solution('10 13') == \"0\"\nassert solution('10 19') == \"-1\""
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"1 50\") == \"1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 30\\n1 1') == '1'\nassert solution('10 13\\n1 1') == '-1'\nassert solution('10 19\\n1 2') == '1'\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 30\n2 1\n''') == '1'\nassert solution('''10 13\n1 1\n''') == '0'\nassert solution('''1 50\n5 4\n''') == '1'"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"1 50\") == \"1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"\n\"\"\"\nfrom math import ceil\nh_1, h_2 = int(input()), int(input())\na, b = int(input()), int(input())\n\nh = h_2 - h_1"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\nassert solution(\"1000000 3 9000000 2 9000000 1\") == \"1000000\"\nassert solution(\"1000000 3 9000000 2 9000000 1 2\") == \"1000000\"\n\n\"\"\"\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2\n3\n3\n3''') == '2'\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\nassert solution(\"100 3 5 2 3\") == \"204\"\nassert solution(\"10 50 20 2 2\") == \"210\"\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 3 5 2 3') == '16'\nassert solution('5 4 3 2 1') == '7'\nassert solution('8 7 5 4 3') == '18'\nassert solution('5 5 2 2 2 3 2 3 4 4') == '8'\nassert solution('10 3 5 2 3') == '16'\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 3, 5, 2, 3]) == '16'\n\na = 10\nb = 3"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3 5 2 3') == '16'\nassert solution('50 50 50 50') == '25'\nassert solution('10 50 10 50') == '50'\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 3 5 2 3\n''') == '16'\n\nassert solution('''\n10 5 7 4 4\n''') == '16'\n\nassert solution('''\n10 0 10 2 3\n''') == '10'\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 5 2 3') == '16'\nassert solution('4 3 5 2 3') == '10'"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 3 5 2 3''') == '16'\nassert solution('''1 1 0 2 1''') == '2'\nassert solution('''1 2 3 4 5''') == '10'\nassert solution('''1 2 3 4 5''') == '6'\nassert solution('''1 1 0 2 1''') == '0'\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"5\"\nassert solution(\"3 4\") == \"3\""
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1', 'First example'\nassert solution('3 4') == '3', 'Second example'\n\"\"\"\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4') == '2'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\""
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0') == '5'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0\\n4 5\\n') == '5'\nassert solution('3 4\\n6 1\\n') == '3'"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0\") == \"5\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"D\"\nassert solution(\"6\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"D\"\nassert solution(\"4\") == \"R\"\nassert solution(\"6\") == \"R\""
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nDDRRR''') == 'D'\nassert solution('''6\nDDRRRR''') == 'R'"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\nDDRRR\n\"\"\") == 'D'\nassert solution(\n\"\"\"\n6\nDDRRRR\n\"\"\") == 'R'\nassert solution(\n\"\"\"\n7\nRRRDRDRR\n\"\"\") == 'R'\nassert solution(\n\"\"\"\n7\nDRRDRDRR\n\"\"\") == 'R'\nassert solution(\n\"\"\"\n1\nDDDDD\n\"\"\") == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"D\"\nassert solution(\"2\") == \"R\"\nassert solution(\"3\") == \"D\"\nassert solution(\"4\") == \"R\"\nassert solution(\"5\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'D'\nassert solution('6') == 'R'"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'D'\nassert solution('6') == 'R'"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"D\"\nassert solution(\"6\") == \"R\""
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nDDRRR\n''') == 'D'\nassert solution('''6\nDDRRRR\n''') == 'R'"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nDRRRDDR\") == \"R\"\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n17 15 5 3\n''') == '3'\nassert solution('''\n14 16 7 22\n''') == '0'\nassert solution('''\n1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''17 15 5 3\n14 16 7 22\n''') == '3'\nassert solution('''4 2 6 4\n1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\nassert solution('''1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '0'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('17 15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\nassert solution('5 5 1 1') == '0'"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''17 15 5 3\n''') == '3'\nassert solution('''14 16 7 22\n''') == '0'\nassert solution('''1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"4 2 6 4\") == \"1\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''17 15 5 3\n''') == '3'\nassert solution('''14 16 7 22\n''') == '0'\nassert solution('''4 2 6 4\n''') == '1'\nassert solution('''1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''17 15 5 3''') == '3'\nassert solution('''14 16 7 22''') == '0'\nassert solution('''1000000000000000000 1000000000000000000 999999866000004473 999999822000007597''') == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n16 17 5 3\n''') == '3'\nassert solution('''\n14 16 7 22\n''') == '0'\nassert solution('''\n4 2 6 4\n''') == '1'\nassert solution('''\n1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('5 100') == '1'"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 9\n''') == '1'\nassert solution('''38 11\n''') == '3'\nassert solution('''5 2\n''') == '3'\nassert solution('''5 10\n''') == '1'"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 9\n''') == '1'\n\nassert solution('''\n38 11\n''') == '3'\n\nassert solution('''\n5 2\n''') == '3'\n\nassert solution('''\n5 10\n''') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 9\") == \"1\"\nassert solution(\"6 9\") == \"1\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\""
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 9\\n') == '1\\n'\n\nassert solution('38 11\\n') == '3\\n'\n\nassert solution('5 2\\n') == '3\\n'\n\nassert solution('5 10\\n') == '1\\n'\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 3\n2\n1 4\n1 5''') == 19\nassert solution('''6 4 5\n1\n1\n2\n1\n3\n''') == 10\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 5 3\"\n) == \"19\"\nassert solution(\n    \"1000000000 1 2019\"\n) == \"500000001500000001\"\nassert solution(\n    \"100 100000 1\"\n) == \"101\"\nassert solution(\n    \"6 4 5\"\n) == \"10\"\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n6\\n4') == '10'\nassert solution('6\\n5\\n4') == '11'\nassert solution('10\\n6\\n5') == '9'\nassert solution('100\\n100000\\n1') == '101'"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\""
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\"\nprint(solution(input()))\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"101\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\"\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\""
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 5 3\n''') == '19'\nassert solution('''1000000000 1 2019\n''') == '500000001500000001'\nassert solution('''6 4 5\n''') == '10'"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n5\") == \"Yes\"\nassert solution(\"5\\n1 0 1 5 1\") == \"Yes\"\nassert solution(\"3\\n4 3 1\") == \"No\"\nassert solution(\"4\\n3 9 9 3\") == \"No\""
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"Yes\"\nassert solution('5') == \"No\"\nassert solution('4') == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == 'Yes'\n\"\"\"\nn = int(input())\nsequence = list(map(int, input().split()))\n\nsequence = sorted(sequence)\n\nmid = len(sequence) // 2\nstart = sequence[0]\nend = sequence[mid]"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'Yes'\nassert solution(stdin=\"\") == 'No'\nassert solution(stdin=\"1 0 1 5 1\") == 'Yes'\nassert solution(stdin=\"3 9 9 3\") == 'No'\nassert solution(stdin=\"4 3 1\") == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 3 5\n''') == 'Yes'\nassert solution('''\n5\n1 0 1 5 1\n''') == 'Yes'\nassert solution('''\n4\n3 9 9 3\n''') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('5') == 'No'\nassert solution('4') == 'No'\nassert solution('1 4 3 2') == 'Yes'\nassert solution('5 1 0 1 5 1') == 'Yes'"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Yes'\nassert solution('5') == 'No'\nassert solution('4') == 'No'"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 4 5\") == \"Yes\"\nassert solution(\"3\\n4 5 3\") == \"No\"\nassert solution(\"4\\n3 1 1 3\") == \"No\"\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 1\") == \"1 0 1 0\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"-1\""
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '1 0 1 0'\nassert solution('0 0 1 1') == '1 0 1 0'\nassert solution('0 0 1 2') == '-1'\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1', 'First'\nassert solution('0 0 1 1') == '0 1 1 0', 'Second'\nassert solution('0 0 1 2') == '-1', 'Third'"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"-1\") == \"-1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '-1'"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0 1\n''') == '1 0 1 0'\nassert solution('''\n0 0 1 1\n''') == '0 1 1 1'\nassert solution('''\n0 0 1 2\n''') == '-1'\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 2\") == \"1 0 1 0\"\nprint(\"You're a smart cookie!\")"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\""
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 0 0 1\n\n0 0 1 1''') == '1 0 1 1'\nassert solution('''0 0 1 1\n\n0 0 1 2''') == '-1'\n"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == \"1\"\nassert solution('-1 -1') == \"1000000006\"\nprint(solution(input()))\n"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 -1\n2''') == '1000000006'"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\n\n\"\"\"\nfrom functools import reduce\nfrom itertools import chain"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n3\") == \"1\"\nassert solution(\"0 -1\\n2\") == \"1000000006\""
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\""
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\""
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n3\\n') == '1'\nassert solution('0 -1\\n2\\n') == '1000000006'\n"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n3\n\n''') == \"1\"\nassert solution('''0 -1\n2\n\n''') == \"1000000006\"\n"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\"\nassert solution(\"1000000006\") == \"0\"\nassert solution(\"2 1\") == \"1\""
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\""
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('3') == 'YES'\nassert solution('8') == 'YES'\nassert solution('4') == 'NO'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n-1\n''') == 'NO'\nassert solution('''\n2\n4\n-2\n-3\n''') == 'YES'\nassert solution('''\n3\n-2\n-1\n''') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 -3\n''') == 'YES'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''1\n0\n''') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1 2 -3\n''') == 'YES'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''3\n1 2 -3\n''') == 'NO'\nassert solution('''5\n1 2 -3\n4 3 4 4 5\n''') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n3 3\n''') == 'YES'\nassert solution('''\n3\n1 2 -3\n''') == 'YES'\nassert solution('''\n1\n2\n2\n''') == 'NO'"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 -3\n\n''') == 'YES'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n\n''') == 'YES'\nassert solution('''1\n0\n\n''') == 'NO'\nassert solution('''4\n1 2 3 -5\n\n''') == 'YES'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"YES\""
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3'\n    ) == 'YES'\n\nassert solution(\n    '8'\n    ) == 'YES'\n\nassert solution(\n    '1'\n    ) == 'NO'\n\nassert solution(\n    '4'\n    ) == 'YES'\n\nassert solution(\n    '2'\n    ) == 'NO'"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-1 -2 -3\") == \"YES\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\"\nassert solution(\"1\\n0\") == \"NO\"\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 2''') == '3'\nassert solution('''5 4 2''') == '6'\nassert solution('''5 5 2''') == '6'\nassert solution('''5 5 6''') == '6'\nassert solution('''5 10 2''') == '10'\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\""
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 2\n''') == '3'\nassert solution('''5 4 2\n''') == '6'\nassert solution('''5 5 2\n''') == '4'\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\""
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3454\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"111111\") == \"NO\""
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '0'\nassert solution('123456') == '12345'\nassert solution('101010101010') == '100100101010101'\nassert solution('0123456789') == '012345678'\nassert solution('11111') == '10011'\n"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3454') == 'YES', '1st solution'\nassert solution('10') == '0', '2nd solution'\nassert solution('111111') == 'NO', '3rd solution'"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3454') == 'YES'\nassert solution('10') == '0'\nassert solution('111111') == 'NO'"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n8\n8\n''') == 'NO'\nassert solution('''\n5\n3\n7\n8\n''') == 'YES'\nassert solution('''\n5\n3\n5\n3\n''') == 'NO'\nassert solution('''\n5\n3\n4\n4\n''') == 'NO'\nassert solution('''\n5\n3\n4\n4\n''') == 'YES'\n"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n10\n''') == 'YES'\nassert solution('''5\n10\n''') == 'YES'\nassert solution('''0\n0\n''') == 'NO'\nassert solution('''23\n23\n''') == 'NO'\nassert solution('''0\n1\n''') == 'YES'"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"111111\") == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1234\") == \"YES\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"22\") == \"YES\"\n"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234') == 'YES'\nassert solution('111111') == 'NO'\nassert solution
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0\n''') == 'NO', 'YES'\nassert solution('''\n1\n''') == 'YES', 'YES'\nassert solution('''\n123\n''') == 'NO', 'YES'\nassert solution('''\n1000001000101\n''') == 'YES', 'YES'\nassert solution('''\n1010\n''') == 'NO', 'YES'\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 4\\n3 1\\n6 2\\n5 2\\n2 1') == '-1'\nassert solution('5 4\\n3 1\\n6 2\\n5 2\\n2 1') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-1\""
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 3') == '4'\nassert solution('8 4') == '-1'"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 3') == '4'\nassert solution('8 4') == '-1'"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"4\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"8 4\") == \"-1\"\nassert solution(\"10 3\") == \"4\"\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3') == '4'\nassert solution('8 4') == '-1'\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 3\\n6 2\\n2 1') == '4'\nassert solution('8 4\\n3 1\\n6 2\\n5 2\\n2 1') == '-1'\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 3\n6 2\n2 1\n7 3\n''') == '4'\nassert solution('''\n8 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\nassert solution('''\n10 2\n2 1\n''') == '2'\nassert solution('''\n10 3\n6 2\n2 1\n7 3\n''') == '4'\nassert solution('''\n10 3\n3 1\n6 2\n2 1\n7 3\n''') == '-1'"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3') == \"4\"\nassert solution('8 4') == \"-1\"\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '4'\nprint(solution(input_string))"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00\\n00\\n') == 1\nassert solution('00X00X0XXX0\\n0XXX0X00X00\\n') == 4\nassert solution('0X0X0') == 0\nassert solution('0X0X0\\n0X0X0\\n') == 0\nassert solution('0X0X0\\n0X0X0\\n') == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00') == '1'\nassert solution('00X00X0XXX0') == '4'\nassert solution('0XXX0X00X00') == '2'\nassert solution('0X0X0') == '0'\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0X0X0\") == \"0\"\nassert solution(\"0XXX0\") == \"4\""
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00\\n\") == \"1\"\nassert solution(\"00X00X0XXX0\\n\") == \"4\"\nassert solution(\"0X0X0\\n0X0X0\") == \"0\"\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"4\"\nassert solution(\"0XXX0X00X00\") == \"2\"\nassert solution(\"00X0X0\") == \"0\"\nassert solution(\"0X0X0\") == \"0\"\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"00\\n00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"4\"\nassert solution(\"0X0X0\") == \"0\"\nassert solution(\"0XXX0\") == \"2\"\nassert solution(\"0XXX00\") == \"0\""
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00\\n00') == '1'\nassert solution('00X00X0XXX0\\n0XXX0X00X00') == '4'\nassert solution('0X0X0') == '0'\nassert solution('0XXX0') == '2'"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"4\"\nassert solution(\"0XXX0X00X00\") == \"2\"\nassert solution(\"0X0X0\") == \"0\"\nassert solution(\"0XXX0\") == \"0\"\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"4\"\nassert solution(\"0XXX0X00X00\") == \"2\""
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '0'\nassert solution('11') == '2'\nassert solution('3') == '0'"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == str(len(set(map(lambda i: i[0], enumerate(sorted(stdin))))))\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\nA\"\n) == \"1\"\nassert solution(\n    \"2\\nAA\"\n) == \"2\"\nassert solution(\n    \"3\\nAAAAA\"\n) == \"3\"\nassert solution(\n    \"4\\nAAAB\"\n) == \"1\"\nassert solution(\n    \"5\\nABABA\"\n) == \"2\"\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '0'"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('3') == '0'\n"
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('12') == '3'\nassert solution('11') == '2'\n"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n16 23 16 15 42 8\\n') == '120'\nassert solution('2\\n1 -2 0\\n') == '3'\nassert solution('5\\n1 -2 3 -4 5\\n') == '4'\n\n'''"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 -2 0') == '3'\nassert solution('6 16 23 16 15 42 8') == '120'"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '120'\nassert solution('''\n3\n1 -2 0\n''') == '3'\nassert solution('''\n6\n16 23 16 15 42 8\n''') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '120'"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n-1 2 3 4\\n') == '5'\nassert solution('6\\n-1 2 3 4 -5 6\\n') == '5'"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '120'\nassert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('4') == '0'"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '120'\nassert solution('16 23 16 15 42 8') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 -2 0\n''') == '3'\nassert solution('''6\n16 23 16 15 42 8\n''') == '120'"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"120\"\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 9 2 4\n            ''') == '4'\nassert solution('''6 10 2 4\n            ''') == '2'\nassert solution('''6 5 4 3\n            ''') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([6, 9, 2, 4]) == \"4\"\nassert solution([6, 10, 2, 4]) == \"2\"\nassert solution([6, 5, 4, 3]) == \"-1\"\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\n\n\"\"\""
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 9 2 4\n\nOutput\n4\n\n6 10 2 4\n\nOutput\n2\n''') == '4'\nassert solution('''5 5 4 3\n\nOutput\n-1\n''') == '-1'"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 9 2 4''') == '4'\nassert solution('''6 10 2 4''') == '2'\nassert solution('''6 5 4 3''') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('10 9 5') == '2'\nassert solution('6 4 5') == '-1'\nassert solution('8 1 1') == '8'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 2 3\"\n    ) == \"2\"\n\nassert solution(\n    \"10 9 5\"\n    ) == \"2\"\n\nassert solution(\n    \"6 4 5\"\n    ) == \"8\"\n\nassert solution(\n    \"8 1 1\"\n    ) == \"8\"\n\nassert solution(\n    \"7 4 8\"\n    ) == \"6\""
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 1\\nH') == 'H\\nh\\n'\nassert solution('4 3 2\\nCcodeforces') == 'CCodef\\nCforsce'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aab\") == \"aab\"\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\nHello\n\n4 3 2\nCODeforces\n\n10 9 5\nCodeforces''') == '2'\nassert solution('''10 9 5\nPrivet\n\n4 3 2\nCODeforces\n\n8 1 1\nabacabac\n\n6 4 5\nPrivet''') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2\") == \"2\\nHe\\nllo\\n\"\nassert solution(\"8 1 1\") == \"8\\nP\\nivet\\n\"\nassert solution(\"2 5 2\") == \"2\\nHe\\nllo\\n\"\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 4 5\nPrivet''') == '2'\nassert solution('''10 9 5\nCodeforces''') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 3\nHello\n\nOutput\n2\nHe\nllo\n\nInput\n10 9 5\nCodeforces\n\nOutput\n2\nCodef\norces\n''') == \"2\"\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '2'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '-1'\nassert solution(\"5\") == '2'\nassert solution(\"6\") == '1'\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 1 1') == '8'\nassert solution('5 2 3') == '2'\nassert solution('10 9 5') == '2'\nassert solution('5 2 3') == '-1'\nassert solution('5 2 3') == '-1'\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 1 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\\n\"\n\nassert solution(\"2 9 2 3\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10 1 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\\n', \"simple\"\nassert solution('5 10 1 2\\n4 5 1 2 3 4 5 3') == 'RUN 1\\nJUMP 2\\nRUN 2\\nRUN 3\\nRUN 1\\nJUMP 2\\nRUN 2\\nRUN 3\\nRUN 1\\n', \"some\"\nassert solution('5 10 1 2\\n6 5 1 2 3 4 5 3') == 'RUN 1\\nJUMP 2\\nRUN 2\\nRUN 3\\nRUN 1\\nJUMP 2\\nRUN 2\\nRUN 3\\nRUN 1\\n', \"all\""
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10 1 3') == 'RUN 2'\nassert solution('3 4 7') == 'JUMP 3'\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"RUN 1\"\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 4\n3 4 7\n\"\"\") == \"RUN 2\"\n\nassert solution(\"\"\"\n2 9 2 3\n6 4\n\"\"\") == \"RUN 1\"\n\nassert solution(\"\"\"\n3 4 7\n\"\"\") == \"RUN 2\"\n\nassert solution(\"\"\"\n2 1\n4 5\n\"\"\") == \"RUN 1\""
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 9 2 3\") == \"IMPOSSIBLE\"\n\n\"\"\"\n\nn, m, s, d = list(map(int, input().split()))\nobstacles = list(map(int, input().split()))\n\nobstacles.sort()\n\nstart = 0\nfinish = m\n\nfor i in range(n):\n    \n    for j in range(start, finish):\n        \n        if obstacles[i] > j:\n            continue\n        \n        if start < j <= finish:\n            finish = j\n            break\n        \n    \n    if obstacles[i] == m:\n        print(\"RUN\", start)\n        start = start + 1\n    \n    \n    \n    if finish == 0:\n        break\n    \n    if start < finish:\n        if obstacles[i] < start:\n            print(\"JUMP\", finish)\n            start = start + 1\n        else:\n            print(\"RUN\", start)\n            start = start + 1\n    \n    \n    \n    \n    \n    \n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10 1 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\\n'\nassert solution('2 9 2 3') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'''\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 10 1 3\n3 4 7\n\"\"\") == \"RUN 2\"\n\nassert solution(\"\"\"\n2 9 2 3\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n2 5 1 4\n1 2 3 4\n\"\"\") == \"RUN 2\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 2\\n\"\"\n\nassert solution(\"\"\"\n4 8 2 3\n1 2 4 5\n\"\"\") == \"RUN 1\\nRUN 1\\nRUN 2\\nRUN 2\\nRUN 1\\nRUN 2\\nRUN 2\\nRUN 2\\n\"\"\n\nassert solution(\"\"\"\n5 7 3 1\n1 2 4 5\n\"\"\") == \"RUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\nRUN 1\\n\"\"\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 10 1 3\n3 4 7\n\"\"\") == \"RUN 2\"\n\nassert solution(\"\"\"\n1 2 3\n4 2\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n''') == '0'\nassert solution('''9 5\n''') == '4'\nassert solution('''3 3\n''') == '2'\nassert solution('''5 2\n''') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"9 5\") == \"4\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '4'\n\"\"\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 3') == '2'\n\n\nimport math"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '0'\nassert solution('3 3') == '2'\nassert solution('9 5') == '4'\nassert solution('5 2') == '0'\nassert solution('7 4') == '2'\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"4\"\n\nfor t in range(int(input())):\n    a, b, s, x = map(int, input().split())\n    count = 0\n    for i in range(1 << b):\n        if not i:\n            continue\n        a1 = a ^ i\n        b1 = b ^ i\n        if a1 + b1 == s and a1 + b1 ^ x == s:\n            count += 1\n    print(count)\n    "
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '2 1 4 6 7'\nassert solution('6 1') == '2 1 4 5 6 7'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'\nassert solution('10 3') == '1 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n\") == \"2\\n1 4\"\nassert solution(\"7 2\\n\") == \"2\\n1 6\"\nassert solution(\"5 1\\n\") == \"2\\n1 4\"\nassert solution(\"5 1\\n\") == \"2\\n1 4\"\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1 1\"\nassert solution(\"5 1\") == \"1 4\"\nassert solution(\"6 1\") == \"1 3\"\nassert solution(\"7 1\") == \"1 2\"\nassert solution(\"8 1\") == \"1 1\"\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n\") == \"2\\n1 6\\n\"\nassert solution(\"5 1\\n\") == \"2\\n1 4\\n\"\nassert solution(\"1 2 3 4 5\\n\") == \"2\\n1 3\\n4\\n5\\n\"\nassert solution(\"3 4 5\\n\") == \"3\\n1 2\\n\"\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n') == '2\\n1 6 \\n'\nassert solution('5 1\\n') == '2\\n1 4 \\n'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8314''') == '2'\nassert solution('''625''') == '0'\nassert solution('''333''') == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\""
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8314''') == '2'\nassert solution('''625''') == '0'\nassert solution('''333''') == '-1'\nassert solution('''0''') == '0'"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input().strip()) == \"2\"\nassert solution(input().strip()) == \"0\"\nassert solution(input().strip()) == \"-1\"\n"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8383\n625''') == '0'\nassert solution('''333''') == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8314''') == '2'\nassert solution('''625''') == '0'\nassert solution('''333''') == '-1'\nprint('You are all set!')\n"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('6') == '120'"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('6') == '120'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '2'\nassert solution(\"5\") == '4'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '1'\nassert solution('''3\n''') == '2'\nassert solution('''6\n''') == '120'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('6') == '120'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n''') == \"2\"\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('10') == '4'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '120'"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('6') == '120'"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == '1'"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(ABABBBACFEYUKOTT) == \"4\"\nassert solution(AAA) == \"1\"\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\n\"\"\""
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"AA\") == \"1\"\nassert solution(\"AAABBB\") == \"2\"\nassert solution(\"ABAB\") == \"1\"\nassert solution(\"ABABBAB\") == \"2\"\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AAABBBACA\") == \"1\"\nassert solution(\"AAABCBBBCC\") == \"3\"\nassert solution(\"AAABBBACA\") == \"1\"\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == \"4\"\nassert solution(\"AAAAAAABB\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '1'\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(ABABBBACFEYUKOTT) == 4\nassert solution(AAA) == 1"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AAYKTTMM') == '2'\nassert solution('ABABBBACFEYUKOTT') == '4'\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 7 11 5\\n\") == \"YES\"\nassert solution(\"7 3 2 5\\n\") == \"NO\"\n\"\"\"\n\na, b, c, d = map(int, input().split())\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 7 11 5\\n') == \"YES\"\nassert solution('7 3 2 5\\n') == \"NO\"\n\"\"\""
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input(\"\")) == \"NO\"\nprint(solution(*input().split()))\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['1 7 11 5', '7 3 2 5', '8 5 9 9']) == 'YES'\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1 2\n''') == 'YES', 'First sample'\nassert solution('''\n4 5 7\n''') == 'NO', 'Second sample'\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 7 11 5\\n\") == \"YES\\n\"\nassert solution(\"7 3 2 5\\n\") == \"NO\\n\""
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 7 11 5\n''') == 'YES'\nassert solution('''\n7 3 2 5\n''') == 'NO'\nassert solution('''\n7 9 10 11\n''') == 'NO'\n'''\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 7 11 5\\n\") == \"YES\", \"First\"\nassert solution(\"7 3 2 5\\n\") == \"NO\", \"Second\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 21 10 21 10\\n') == '31 41'\nassert solution('3\\n141 592 653\\n') == '653 733'\n\n\"\"\""
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"653 733\"\nassert solution(\"5\") == \"31 41\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"653 733\"\nassert solution(\"5\") == \"31 41\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '31 41'\nassert solution('3') == '653 733'"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n141 592 653\") == \"653 733\"\nassert solution(\"3\\n10 21 10 21 10\") == \"31 41\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n141 592 653\n''') == '653 733'\nassert solution('''\n5\n10 21 10 21 10\n''') == '31 41'\n'''"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n141 592 653\\n\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\\n\") == \"31 41\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n141 592 653\\n\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\\n\") == \"31 41\"\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n10 21 10 21 10\n\n''') == '31 41'\nassert solution('''\n3\n141 592 653\n\n''') == '653 733'\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == \"2\"\nassert solution(\"3\\n3 6 5\") == \"-1\"\nassert solution(\"6\\n2 4 8 6 10 18\") == \"3\"\nassert solution(\"8\\n2 4 8 6 10 18\") == \"3\"\nassert solution(\"5\\n2 4 8 6 10 18\") == \"3\"\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"-1\"\n\"\"\""
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '-1'\nassert solution('6') == '3'\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '-1'\nassert solution('6') == '3'"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\n3 6 5'\n) == '3', 'First'\nassert solution(\n    '6\\n2 4 8 6 10 18'\n) == '3', 'Second'"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '-1'\nassert solution('6') == '3'\n\"\"\""
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Alice\"\nassert solution(\"4 4\") == \"Bob\"\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n8 8') == 'Bob'\nassert solution('4\\n3 1 4 1') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Bob'\nassert solution('4') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Alice'\nassert solution('4') == 'Bob'\nassert solution('1') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n8 8') == 'Alice'\nassert solution('4\\n3 1 4 1') == 'Bob'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n8 8\n\n''') == 'Alice'\nassert solution('''\n4\n3 1 4 1\n\n''') == 'Bob'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n8 8') == 'Bob'\nassert solution('4\\n3 1 4 1') == 'Alice'"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Alice\"\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"Alice\"\nassert solution(input_) == \"Bob\"\nassert solution(input_) == \"Bob\""
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n8 8\n\n4\n3 1 4 1''') == 'Alice'\nassert solution('''4\n3 1 4 1''') == 'Bob'\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 3 3 2 1\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\n'''\n\nimport sys\nimport os\nimport heapq\nfrom collections import Counter\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 3 2 1') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n1 2 3 4 5\\n') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\n1 3 3 2 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"10\n1 1 1 2 2 3 3 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 3 2 1') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3 2 1') == 'YES'\nassert solution('5 1 2 3 4 5') == 'NO'\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\", \"Test failed\"\nassert solution(\"1 2 3 4 5\") == \"NO\", \"Test failed\"\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n\n\"\"\""
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"5 7 5 6 5\") == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\""
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 3 2 1\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nababa') == '2'\nassert solution('20\\nabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nababa\n''') == '2'\nassert solution('''\n5\nababa\n''') == '0'\nassert solution('''\n5\nabcde\n''') == '0'\nassert solution('''\n5\nababa\n''') == '0'\nassert solution('''\n5\nabcde\n''') == '0'\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nababa') == '2'\n\n---------------------------------------------------------\n\n973. Flip Binary Tree To Match Preorder Traversal\n\nFind if a binary tree T is a mirror of a binary tree G, i.e., a binary tree G is a mirror of a binary tree T if T is mirror of a binary tree G, i.e., if the nodes of the trees are the same, and the left subtree and right subtree are mirrors of each other.\n\nWe can solve this problem using recursion. This problem can be solved using a recursive function which takes two trees as arguments, root1 and root2. Then we want to solve the problem recursively. The solution we have is:"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0', \"Wrong answer!\"\nassert solution('7') == '1', \"Wrong answer!\"\nassert solution('17') == '2', \"Wrong answer!\""
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nababa\n''') == '2'\nassert solution('''5\nabc\n''') == '0'\nassert solution('''10\nabacaba\n''') == '2'\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nababa') == '2'\nassert solution('2\\nababa') == '2'\nassert solution('3\\nababa') == '0'\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nababa\") == \"2\"\nassert solution(\"10\\nababaa\") == \"1\"\nassert solution(\"3\\nba\") == \"0\"\nassert solution(\"0\\n\") == \"0\"\nassert solution(\"0\\n\") == \"0\"\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nababa\") == \"2\"\nassert solution(\"5\\naba\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nababa\") == \"2\"\nassert solution(\"10\\nababa\") == \"0\"\nassert solution(\"4\\nababa\") == \"0\"\nassert solution(\"5\\nababa\") == \"2\"\nassert solution(\"10\\nababa\") == \"2\"\n"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\n'''\n\nn, a = list(map(int, input().split()))"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"8 5\") == \"3\""
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('8 5') == '3'"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('8 5') == '1'\n"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    8 5\n    \"\"\"\n) == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('8 5') == '3'"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"6 4\") == \"2\""
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n') == 2\nassert solution('8 5\\n') == 3\n"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 5') == '2'\nassert solution('4 2') == '2'\nassert solution('10 10') == '10'\n\n'''\n\nn,a = map(int,input().split())"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 2 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2') == 'YES'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n3 3 3') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n3 3 3\\n4 4 4') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n3 3 3\\n4 4 4\\n5 5 5') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n''') == 'YES', 'First'\nassert solution('''\n5\n1 1 2 2 1\n1 2\n''') == 'NO', 'Second'\n''')\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\") == \"YES\"\nassert solution(\"5 2\\n1 2\") == \"NO\""
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(f\"{__name__}.input_test\") == \"YES\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\") == \"YES\"\nassert solution(\"5 2\\n1 2\") == \"NO\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"YES\"\nassert solution(\"5 2\\n1 1 2 2\") == \"NO\"\nassert solution(\"5 2\\n1 1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2') == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 2 1 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\") == \"YES\"\nassert solution(\"3 4\\n1 1 1 1\") == \"NO\"\nassert solution(\"2 2\\n2 2\") == \"YES\"\nassert solution(\"2 1\\n3 1\") == \"YES\"\nassert solution(\"2 1\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n\nprint(solution())\n\n\"\"\""
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Mishka'\nassert solution('2') == 'Chris'\nassert solution('3') == 'Friendship is magic!'\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Chris'\nassert solution('3') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Mishka\"\nassert solution(\"2\") == \"Chris\"\nassert solution(\"3\") == \"Friendship is magic!\"\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Chris\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"Mishka\"\n\nassert solution() == \"Chris\"\n\nassert solution() == \"Friendship is magic!^^\""
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 5\n2 1\n4 2\n\n''') == \"Mishka\"\n\nassert solution('''\n2\n6 1\n1 6\n\n''') == \"Friendship is magic!^^\"\n\nassert solution('''\n3\n1 5\n3 3\n2 2\n\n''') == \"Chris\"\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Mishka\"\nassert solution(\"2\") == \"Chris\"\nassert solution(\"3\") == \"Friendship is magic!^^\"\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2\n''') == 'Mishka'\nassert solution('''2\n6 1\n1 6\n''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2\n''') == 'Friendship is magic!'"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Mishka'\nassert solution('2') == 'Chris'\nassert solution('3') == 'Friendship is magic!^^'\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 5\n2 1\n4 2\n''') == \"Mishka\"\n\nassert solution('''\n2\n6 1\n1 6\n''') == \"Chris\"\n\nassert solution('''\n3\n1 5\n3 3\n2 2\n''') == \"Friendship is magic!^^\""
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 4\n*.*.\n1211''') == 'NO'\nassert solution('''2 4\n1*1\n1211''') == 'YES'\nassert solution('''1 10\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1''') == 'YES'\nassert solution('''2 4\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1\n1*1''') == 'YES'\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n111\n1*1\n111\n\n''') == \"YES\"\nassert solution('''2 4\n*.*.\n1211\n\n''') == \"NO\""
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"*\") == \"YES\"\nassert solution(\"*.*\") == \"YES\"\nassert solution(\"1*1\") == \"YES\"\nassert solution(\"1*1*\") == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution('''\n*.*.\n111\n''') == \"YES\"\nassert solution('''\n*.*.\n1112\n''') == \"NO\"\nassert solution('''\n*.*.\n*1*1\n''') == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == 'YES'\nassert solution(input_) == 'NO'\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n1*1\\n1*1\\n\") == \"YES\"\nassert solution(\"2 3 3\\n*.*\\n1*1\\n\") == \"NO\"\nassert solution(\"4 5\\n**.*\\n1*1\\n1*1\\n\") == \"NO\"\nassert solution(\"10 10\\n**.*\\n1*1\\n1*1\\n1*1\\n1*1\\n1*1\\n\") == \"YES\""
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"YES\", \"Small\"\nassert solution(\"5 5\") == \"YES\", \"Medium\"\nassert solution(\"8 8\") == \"YES\", \"Large\"\n\"\"\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"2 4\") == \"NO\"\nassert solution(\"10 10\") == \"YES\""
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"1\"\nassert solution(\"70\\n\") == \"2\"\nassert solution(\"97\\n\") == \"3\"\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''68''') == '3'\nassert solution('''73''') == '3'\nassert solution('''74''') == '4'\nassert solution('''75''') == '4'\nassert solution('''76''') == '4'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''68''') == '3'\nassert solution('''68''') == '3'\nassert solution('''68''') == '3'\nassert solution('''68''') == '3'\nassert solution('''68''') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''68\n\n''') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"123\") == \"1\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"12345\") == \"2\"\nassert solution(\"123456\") == \"2\"\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"5\"\nassert solution(\"10\") == \"6\"\nassert solution(\"10\") == \"3\"\nassert solution(\"10\") == \"2\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"18\") == \"3\"\nassert solution(\"68\") == \"3\"\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n''') == '3'\n\nassert solution('''50\n10\n''') == '5'\n\nassert solution('''20\n5\n''') == '5'\n\nassert solution('''100\n10\n''') == '50'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n68\n''') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('o-o-o--') == 'YES'\nassert solution('o---') == 'NO'\nassert solution('ooo') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''o-o-o-\n-o-o-o\n-o-o--''') == 'YES'\nassert solution('''-o-o-o-\n-o-o-o\n-o-o--''') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"NO\"\nassert solution(\"-o---o-\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"ooo---\") == \"NO\""
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"ooo\") == \"YES\"\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"ooo\") == \"YES\"\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''o-o--''') == 'YES'\nassert solution('''o---''') == 'YES'\nassert solution('''o---o-''') == 'NO'\nassert solution('''ooo''') == 'YES'"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('o-o--') == 'YES'\nassert solution('o---') == 'YES'\nassert solution('o---o-') == 'NO'\nassert solution('ooo') == 'YES'"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-o-o--') == 'YES', solution('-o-o--')\nassert solution('-o---') == 'YES', solution('-o---')\nassert solution('o---o-') == 'NO', solution('o---o-')\nassert solution('ooo') == 'YES', solution('ooo')"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '2'\nassert solution(input2) == '3'\nassert solution(input3) == '4'\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"4\", \"6\", \"2\"]) == \"2\"\nassert solution([\"3\", \"10\", \"3\"]) == \"4\"\nassert solution([\"3\", \"6\", \"1\"]) == \"3\"\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 6 2\n''') == '2'\nassert solution('''3 10 3\n''') == '4'\nassert solution('''3 6 1\n''') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 6 2\") == \"2\"\nassert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\""
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 6, 2]) == 2\nassert solution([3, 10, 3]) == 4\nassert solution([3, 6, 1]) == 3\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6 2\") == \"2\"\nassert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\"\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4,6,2]) == '2'\nassert solution([3,10,3]) == '4'\nassert solution([3,6,1]) == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\"\nassert solution(\"10 1 3\") == \"1\""
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(4, 6, 2) == 2\nassert solution(3, 10, 3) == 4\nassert solution(3, 6, 1) == 3\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3 10\") == \"7\"\nassert solution(\"5 2 1000\") == \"0\"\nassert solution(\"8 4\") == \"4\"\nassert solution(\"2 -4 15 -3 4 8 3\") == \"7\"\nassert solution(\"-13 -4 -9 -20 -11\") == \"0\""
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3 10') == '7'\nassert solution('5 2 1000') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution('7 3 10') == '7'\nassert solution('5 2 1000') == '0'"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3 10\") == \"7\"\nassert solution(\"5 2 1000\") == \"0\""
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 3 10\n2 -4 15 -3 4 8 3\n''') == '7'\n\nassert solution(\n'''\n5 2 1000\n-13 -4 -9 -20 -11\n''') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 10') == '7'\nassert solution('5 2 1000') == '0'"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 1000\n-13 -4 -9 -20 -11\n''') == '0'\nassert solution('''\n7 3 10\n2 -4 15 -3 4 8 3\n''') == '7'\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 10\") == \"7\"\nassert solution(\"5 2 1000\") == \"0\"\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\nassert solution(\"7 3 10\") == \"7\"\nassert solution(\"5 2 1000\") == \"0\""
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == '1 1'\nassert solution('''0 10\n''') == '0 1'\nassert solution('''0 0\n1 0\n0 1\n0 10\n''') == '0 0 1 0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 0\\n1 0\\n0 1') == '0 1'\nassert solution('0 10\\n0 0\\n1 0\\n0 1') == '0 1 0'\nassert solution('1 1\\n0 0\\n1 0\\n0 1') == '0 0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0 0\\n1 0\\n0 1\\n0 10'\n\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9'\n\nassert solution('3 2') == '1 1\\n0 0\\n1 0\\n0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1 1\"\nassert solution(\"0 10\\n\") == \"0 1\\n0 10\\n0 0\\n0 9\"\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('0 10\\n') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1 1\"\nassert solution(\"2 3\") == \"1 3\"\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n') == '1 1'\nassert solution('0 10\\n') == '0 1\\n0 10\\n0 0\\n0 9'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1'\n\nimport math\n\nn, m = map(int, stdin.split())\n\np1 = (0,0)\np2 = (0,m)\np3 = (n,0)\np4 = (n,m)\n\np1_, p2_, p3_, p4_ = p1, p2, p3, p4"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('003512') == '30021'\nassert solution('021') == '30021'\nassert solution('199966633300') == '3036366999'"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"55\"\nassert solution(\"45\") == \"555\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"21\") == \"21\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"21\") == \"30021\"\nassert solution(\"63\") == \"3036366999\"\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"021\") == \"30021\"\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3036366999\"\nassert solution(input()) == \"30021\""
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"021\") == \"3011\""
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"021\") == \"301\"\nassert solution(\"199966633300\") == \"3036366999\""
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"22\") == \"22\", \"First example\"\nassert solution(\"003512\") == \"30021\", \"Second example\"\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('003512') == '30021'\nassert solution('021') == '30021'\n\nassert solution('199966633300') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"021\") == \"3036366999\"\nassert solution(\"99999\") == \"999999\""
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 2\") == \"Correct\"\nassert solution(\"3 1 1 3\") == \"Incorrect\""
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 1 2\n1\n\n''') == 'Correct'\n\nassert solution('''\n2 1 1 3\n2\n\n''') == 'Incorrect'\n\nassert solution('''\n3 1 1 3\n2\n\n''') == 'Incorrect'\n\nassert solution('''\n3 3 3\n4\n\n''') == 'Correct'\n\nassert solution('''\n5 3 4\n3\n\n''') == 'Correct'"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1 2\n1\n''') == 'Correct'\nassert solution('''\n2 1 1 3\n2\n''') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"2 1 1 2\n1\n\nOutput\nCorrect\n\nInput\n2 1 1 3\n2\n\nOutput\nIncorrect\"\"\"\n) == \"Correct\"\nassert solution(\n    \"\"\"3 1 1 3\n2\n\nOutput\nIncorrect\"\"\"\n) == \"Incorrect\"\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1 2\n1\n\nOutput\nCorrect''') == 'Correct'\nassert solution('''3 1 1 3\n2\n\nOutput\nIncorrect''') == 'Incorrect'"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1 3\") == \"Correct\"\nassert solution(\"2 1 1 3\") == \"Incorrect\""
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '0'\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '0'\nassert solution('10') == '10'\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '5'\nassert solution('5') == '0'"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"5 6 7 8 9\"\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5 6 7 8 9'"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5 6 7 8 9\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5 6 7 8 9'\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1''') == '5\\n5 6 7 8 9\\n'\nassert solution('''5''') == '0\\n'\nassert solution('''5\\n''') == '5\\n'\nassert solution('''100\\n''') == '0\\n'\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5 6 7 8 9'\nassert solution('5') == '0'"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\") == \"2 2 \nassert solution(\"4 5 3\") == \"3 3 3 \n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"2 2 3\"\nassert solution(\"4 5 3\") == \"3 3 3\"\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3 3 3\"\nprint(solution(input_))\n\n\"\"\"\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1''') == '2 2 3'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\nprint('All tests passed!')"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == \"3 3 3\"\nassert solution('''5 3 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == \"3 3 3\"\nassert solution('''2 5 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == \"2 2 2\""
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\") == \"2 2\"\nassert solution(\"4 5 3\") == \"3 3 3\"\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3 3 3\"\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 2\\n2 1\\n1 2 3\\n1 2 5\\n2 2 1') == '3 3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n\n''') == \"2 2 "
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 2') == '2 2', \"Simple test\"\nassert solution('4 5 3') == '3 3 3', \"Simple test\"\nassert solution('2 2 1') == '2 1 1', \"Simple test\"\n\nassert solution('4 5 3') == '3 3 3', \"Test 2\"\nassert solution('2 2 1') == '2 1 1', \"Test 2\""
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2\n''') == '1'\n\nassert solution('''1\n1\n''') == '0'\n\nassert solution('''2\n0\n''') == '2'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1\n\n''') == '1'\nassert solution('''\n6\n1\n\n''') == '0'\nassert solution('''\n4\n2\n\n''') == '1'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1\n\n''') == '0'\nassert solution('''\n3\n1\n\n''') == '1'\nassert solution('''\n4\n1\n\n''') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\n\nstdin = \"\"\"\n6\n1\n\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(4) == 1"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2\n''') == '1'\n\nassert solution('''\n1\n1\n''') == '0'\n\nassert solution('''\n7\n4\n''') == '2'"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'YES'\nassert solution('2') == 'NO'"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 2 3 3\\n2 2 5 5\") == \"YES\"\nassert solution(\"1\\n0 2 3\\n0 3 4\\n1 2 3\\n1 2 4\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\""
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\", \"YES test\"\nassert solution(\"4\") == \"NO\", \"NO test\""
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"0 0 2 3\\n\"\n    \"0 3 3 5\\n\"\n    \"2 0 5 2\\n\"\n    \"3 2 5 5\\n\"\n) == \"YES\"\nassert solution(\n    \"5\\n\"\n    \"0 0 2 3\\n\"\n    \"0 3 3 5\\n\"\n    \"2 0 5 2\\n\"\n    \"3 2 5 5\\n\"\n) == \"NO\""
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n\"\"\""
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 9') == '1'\nassert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([12,1]) == '3'\nassert solution([25,20]) == '0'\nassert solution([10,9]) == '1'"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(0).read().strip()) == '3'\n"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data='''5 1\n4 2\n3 1\n12 3\n20 4\n''') == '3'\n\nassert solution(input_data='''25 20\n10 9\n''') == '1'"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 0\n1 0\n2 1\n1 1\n2 3\n''') == 'YES'\nassert solution('''\n5\n0 0\n1 0\n2 1\n1 1\n2 3\n''') == 'NO'\n'''\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 1\n1 -1\n2 2\n\n''') == 'YES'\n'''\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"YES\"\nassert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"NO\"\nassert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"NO\"\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"YES\"\nassert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 2\") == \"NO\""
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n1 0\\n2 1') == 'YES'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n3 1\\n4 1') == 'NO'\nassert solution('3\\n0 0\\n0 1\\n2 1') == 'YES'"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 1\n1 -1\n2 2\n''') == \"YES\"\nassert solution('''\n5\n0 0\n1 0\n2 1\n1 1\n2 3\n''') == \"NO\""
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n0 0\n1 0\n2 1\n1 1\n2 3\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\", \"Should return YES for n=5\"\nassert solution(\"4\") == \"NO\", \"Should return NO for n=4\"\n\n\n\"\"\""
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\n\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\"\nprint('tests done')\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1\\n') == '6'\nassert solution('1 1 1 2\\n') == '31'\nassert solution('2 12 3 1\\n') == '0'\nassert solution('2 13 1 2\\n') == '0'\nassert solution('1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 2 1\n''') == '6'\nassert solution('''\n1 1 1 2\n''') == '31'\nassert solution('''\n2 12 3 1\n''') == '0'\nprint(solution('''\n3 12 3 1\n'''))\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\"\nassert solution(\"3 3 4 5\") == \"8\"\nassert solution(\"2 12 3 1\") == \"2\"\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\""
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 2 1''') == '6'\nassert solution('''1 1 1 2''') == '31'\nassert solution('''2 12 3 1''') == '0'"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\""
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 1\\n\") == '6'\nassert solution(\"1 1 1 2\\n\") == '31'\nassert solution(\"2 12 3 1\\n\") == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 250 185 230\") == \"1\"\nassert solution(\"4 250 185 230\") == \"0\"\nassert solution(\"2 300 185 230\") == \"2\"\nassert solution(\"2 400 185 250\") == \"2\"\nassert solution(\"1 0 0\") == \"1\"\n\n\n\"\"\"\n\nn, l, x, y = list(map(int, input().split()))\n\nmarks = list(map(int, input().split()))\nmarks.sort()\n\nx_diff = [x - marks[0]]\ny_diff = [y - marks[0]]\n\nfor i in range(1, n):\n    x_diff.append(x_diff[i - 1] + x - marks[i])\n    y_diff.append(y_diff[i - 1] + y - marks[i])\n\nresult = []\n\nfor i in range(len(x_diff)):\n    if (x_diff[i] <= 0) and (y_diff[i] <= 0):\n        result.append(0)\n    else:\n        result.append(min(x_diff[i], y_diff[i]))\n\nprint(len(result))\nfor i in result:\n    print(i, end=' ')\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_sample_01) == \"1\"\nassert solution(input_sample_02) == \"0\"\nassert solution(input_sample_03) == \"2\"\n\nprint(solution(input))\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 250 185 230\") == \"1\"\nassert solution(\"4 250 185 230\") == \"0\"\nassert solution(\"2 300 185 230\") == \"2\""
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 250 185 230\n0 20 185 250\n\n''') == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\n\nassert solution(input()) == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 300 185 230') == '0'\nassert solution('3 250 185 230') == '1'\nassert solution('4 250 185 230') == '0'\nassert solution('2 300 185 230') == '0'\nassert solution('3 250 185 230') == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 200 250\n0 2 2\n''') == '1'\n\nassert solution('''2 3 200 250\n0 2\n''') == '1'\n\nassert solution('''4 2 100 50\n2 50\n''') == '1'\n\nassert solution('''2 3 100 50\n1 100\n''') == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 250 185 230\") == \"1\"\nassert solution(\"2 300 185 230\") == \"0\"\nassert solution(\"4 250 185 230\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"5\"\nassert solution(\"1 3 5 7\") == \"3\"\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 250 185 230\n0 185 250\n''') == \"1\"\n\nassert solution('''2 300 185 230\n0 300\n''') == \"2\"\n\nassert solution('''2 250 185 230\n0 250\n''') == \"1\""
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 250 185 230\n0 185 250\n''') == '1'\nassert solution('''\n2 300 185 230\n0 300\n''') == '2'\nassert solution('''\n3 2 5 1\n1 2 4 3\n''') == '0'"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '942477.796077000'\nassert solution('4') == '3983.539484752'"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n100 30\n40 10\n''') == '942477.796077000', \"First\"\nassert solution('''\n4 1\n100 30\n40 10\n10 7\n10 7\n''') == '3983.539484752', \"Second\"\n\n'''\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"942477.796077000\"\nassert solution(\"4\") == \"3983.539484752\"\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"942477.796077000\"\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 30\\n40 10\") == \"942477.796077000\"\nassert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\n\n\n\n\n\n'''\n\nimport math\nfrom itertools import combinations"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n100 30\n40 10''') == '942477.796077000'\nassert solution('''4\n1 1\n9 7\n1 4\n10 7''') == '3983.539484752'''"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '942477.796077000'\nassert solution('4') == '3983.539484752'\n\n\"\"\""
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n100 30\\n40 10') == '942477.796077000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '942477.796077000'\nassert solution('4') == '3983.539484752'\nprint(solution(input()))\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100 30\\n40 10\\n\") == \"942477.796077000\"\nassert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\\n\") == \"3983.539484752\"\nassert solution(\"\") == \"\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"5\\n\") == \"\"\n\"\"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 5\") == \"2\""
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\\n\") == \"2\"\nassert solution(\"4 5\\n2 3 4 5\\n\") == \"2\"\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"2\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '2'\nassert solution('4 5') == '2'\nassert solution('1 1') == '1'"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n3 1 2 2 4\\n') == '2'\nassert solution('4 5\\n2 3 4 5\\n') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n3 1 2 2 4\n''') == '2'\nassert solution('''4 5\n2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 5\\n3 1 2 2 4\\n') == '2'\nassert solution(\n    '4 5\\n2 3 4 5\\n') == '2'\nassert solution(\n    '5 5\\n3 1 1 2 2 4\\n') == '3'\nassert solution(\n    '10 5\\n5 6 4 5 4 8 5 5 4\\n') == '4'\nassert solution(\n    '10 4\\n5 6 4 5 4 8 5 5 4\\n') == '3'\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '2'\nassert solution('4 5') == '2'"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '6'\nassert solution('8') == '10'\nassert solution('3') == '0'"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"10\"\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"6\"\nassert solution(input_2) == \"10\"\nassert solution(input_3) == \"0\""
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '6'\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 -2 10 -1 4\\n\") == \"6\"\nassert solution(\"8\\n5 2 5 3 -30 -30 6 9\\n\") == \"10\"\nassert solution(\"3\\n-10 6 -15\\n\") == \"0\"\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n5 -2 10 -1 4\n''') == '6'\nassert solution(\n'''\n8\n5 2 5 3 -30 -30 6 9\n''') == '10'\nassert solution(\n'''\n3\n-10 6 -15\n''') == '0'"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n5 -2 10 -1 4\\n') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9\\n') == '10'\nassert solution('3\\n-10 6 -15\\n') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n5 -2 10 -1 4\\n\") == \"6\"\nassert solution(\n    \"8\\n5 2 5 3 -30 -30 6 9\\n\") == \"10\"\nassert solution(\n    \"3\\n-10 6 -15\\n\") == \"0\"\nassert solution(\n    \"7\\n1 2 3 4 5 6\\n\") == \"6\"\nassert solution(\n    \"7\\n1 2 3 4 5 6\\n\") == \"5\"\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 -2 10 -1 4\\n\") == \"6\"\nassert solution(\"8\\n5 2 5 3 -30 -30 6 9\\n\") == \"10\"\nassert solution(\"3\\n-10 6 -15\\n\") == \"0\""
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,2,3]) == 'YES'\nassert solution([4,2,3]) == 'NO'\nassert solution([5,4,3]) == 'YES'\nassert solution([5,5,5]) == 'YES'\nassert solution([5,5,5,5]) == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 3\\n') == 'YES'\nassert solution('4 2 3\\n') == 'NO'\nassert solution('8 2 3\\n') == 'YES'\nassert solution('8 2 0\\n') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\""
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n'''\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\""
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 2"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nabaca\") == \"a3ca\"\nassert solution(\"10\\nabaca\") == \"b2a\"\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    abaca\n    \n    ''') == '3'\nassert solution('''\n    8\n    abcddcba\n    \n    ''') == '4'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abaca\") == \"a2c1a1\"\nassert solution(\"abcddcba\") == \"abcddcba\""
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('8') == '4'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nabaca\n''') == '3'\nassert solution('''8\nabcddcba\n''') == '4'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nabaca\n''') == '3'\nassert solution('''8\nabcddcba\n''') == '4'\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 6 2') == '3'\nassert solution('5 5 1 2') == '2'"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 4 6 2\n5\n5 1 5 7 9\n\n''') == '3'\nassert solution('''4\n1 4 6 2\n5\n5 1 5 7 9\n\n''') == '2'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n\n''') == '4'\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '3'\nassert solution('5') == '2'\nassert solution('6') == '0'\n\nstdin = \"\"\"2\n5 1 5 7 9\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 4 6 2\n5\n5 1 5 7 9\n''') == '3'\nassert solution('''4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '1'\nassert solution('''5\n1 4 6 2\n5\n5 1 5 7 9\n''') == '2'\nassert solution('''5\n1 4 6 2\n3\n1 2 3\n''') == '0'"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3', 'Should return the required maximum possible number of pairs!'\nassert solution('5') == '0', 'Should return 0 if no pairs can be formed!'\nassert solution('6') == '3', 'Should return the required maximum possible number of pairs!'\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./inputs/input_test_01.txt\") == \"2\"\nassert solution(\"./inputs/input_test_02.txt\") == \"0\"\nassert solution(\"./inputs/input_test_03.txt\") == \"0\"\nassert solution(\"./inputs/input_test_04.txt\") == \"2\"\nassert solution(\"./inputs/input_test_05.txt\") == \"0\"\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '3'\nassert solution('''\n4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '0'\nassert solution('''\n5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 1\n3\n1 2 3\n''') == '1'"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '2'\nassert solution('''4\n1 4 6 2''') == '3'\nassert solution('''5\n1 5 5 7 9''') == '0'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Team 2'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Draw'\n''')"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 100\\n100 1\\n99 99') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 2'\n\n'''"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\nassert solution('5 7\\n10 2\\n8 1\\n6 5\\n4 2') == 'Team 2'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'Draw'\nassert solution('3 3\\n2 2\\n3 3\\n2 2') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 100\n100 1\n99 99\n99 99\n''') == 'Team 1'\nassert solution('''\n3 3\n2 2\n1 1\n2 2\n''') == 'Draw'\nassert solution('''\n3 3\n2 2\n1 1\n2 2\n''') == 'Team 2'"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Team 2\"\n\nstdin = \"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\"\nprint(solution(stdin))\n\nstdin = \"3 3\\n2 2\\n1 1\\n2 2\\n1 1\\n2 2\"\nprint(solution(stdin))\n\nstdin = \"3 3\\n2 2\\n1 1\\n2 2\\n1 1\\n2 2\"\nprint(solution(stdin))\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 100\n100 1\n99 99\n99 99\n\n''') == 'Team 1'\nassert solution('''\n3 3\n2 2\n1 1\n2 2\n\n''') == 'Draw'\nassert solution('''\n3 3\n2 2\n1 1\n2 2\n\n''') == 'Team 2'\n\n\"\"\"\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99\\n') == 'Team 1'\nassert solution('3 3\\n2 2\\n1 1\\n2 2\\n') == 'Team 2'\nassert solution('2 2\\n1 1\\n3 3\\n2 2\\n') == 'Draw'\n\n\"\"\"\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99\\n') == 'Team 1'\nassert solution('3 3\\n2 2\\n1 1\\n2 2\\n') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\nassert solution(\"2 1\\n1 100\\n1 100\") == \"Team 2\"\nassert solution(\"2 1\\n1 100\\n2 100\") == \"Draw\"\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2.4'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n''') == '2.4'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '2.4'\nassert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '4.2'\nassert solution('''6 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n1 2 50\n1 3 60''') == '4.6'\nassert solution('''5 2\n-1 0\n1 1\n1 0''') == '1.3'\nassert solution('''9 2\n-1 0\n1 1\n1 0\n1 1\n1 0\n1 1\n1 0\n1 1\n1 0''') == '2.1'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2.4'\nassert solution('10 20') == '10.2'\nassert solution('10 10') == '0.2'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2.4'\nassert solution('3 3') == '2.2'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2.4'\nassert solution('2 3') == '1.2'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2.4\"\nassert solution(\"10 10\") == \"1.0\"\nassert solution(\"100 100\") == \"1.0\"\nassert solution(\"1000000000 1\") == \"0.1\"\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2.4\"\nassert solution(\"1 1 1\") == \"1.0000\"\nassert solution(\"0 0 3\") == \"1.0000\"\nassert solution(\"-1 0 3\") == \"0.0000\"\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '2.4'\nassert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '3.3'\nassert solution('''4 6\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n2 1 20\n1 2 40''') == '2.23'\nassert solution('''5 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n1 2 40''') == '1.9'\nassert solution('''6 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n1 2 40\n1 3 50''') == '2.1'\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '4 3\\n'\n    '-1 0 3\\n'\n    '0 0 3\\n'\n    '1 0 2\\n'\n    '1 1 40\\n'\n) == '2.4'"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Bicarp'\nassert solution('8') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0523\n''') == \"Monocarp\"\n\nassert solution('''2\n??\n''') == \"Bicarp\"\n\nassert solution('''8\n?054??0?\n''') == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Bicarp\"\nassert solution(\"8\") == \"Bicarp\"\nassert solution(\"6\") == \"Monocarp\""
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Bicarp'\nassert solution('8') == 'Bicarp'\nassert solution('6') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Bicarp'\nassert solution('8') == 'Bicarp'\nassert solution('6') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n0523\n\nOutput\nBicarp\n\nInput\n2\n??\n\nOutput\nBicarp\n\nInput\n8\n?054??0?\n\nOutput\nBicarp\n\nInput\n6\n???00?\n\nOutput\nMonocarp\n\"\"\") == \"Monocarp\"\nassert solution(\"\"\"\n4\n0523\n\nOutput\nBicarp\n\nInput\n2\n??\n\nOutput\nBicarp\n\nInput\n8\n?054??0?\n\nOutput\nBicarp\n\nInput\n6\n???00?\n\nOutput\nMonocarp\n\"\"\") == \"Bicarp\"\nassert solution(\"\"\"\n4\n0523\n\nOutput\nMonocarp\n\nInput\n2\n??\n\nOutput\nMonocarp\n\nInput\n8\n?054??0?\n\nOutput\nBicarp\n\nInput\n6\n???00?\n\nOutput\nBicarp\n\"\"\") == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Monocarp'\nassert solution('8') == 'Bicarp'\nassert solution('6') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Bicarp\"\nassert solution(\"2\") == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Bicarp'\nassert solution('8') == 'Bicarp'\nassert solution('6') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"Bicarp\"\nassert solution('2') == \"Bicarp\"\nassert solution('8') == \"Bicarp\"\nassert solution('6') == \"Monocarp\"\nassert solution('5') == \"Monocarp\"\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n6 4\n9 5\n''') == '1'\n\nassert solution('''5 5\n3 3\n2 5\n5 6\n4 9\n6 1\n''') == '3'\n\nassert solution('''3 7\n2 2\n2 3\n2 4\n''') == '1'\n\nprint(solution('''3 7\n2 2\n2 3\n2 4\n'''))\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 7\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"6 4\\n\"\n) == \"1\"\n\nassert solution(\n    \"5 5\\n\"\n    \"3 3\\n\"\n) == \"3\"\n\nassert solution(\n    \"3 7\\n\"\n    \"2 2\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n) == \"1\"\n\nassert solution(\n    \"3 6\\n\"\n    \"2 2\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n) == \"1\""
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n6 4') == '1'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9') == '3'\nassert solution('3 7\\n2 2\\n2 3\\n2 4') == '1'"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"1\""
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n6 4\\n') == '1'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n') == '3'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\\n') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 5') == '3'\nassert solution('3 7') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n6 4\\n') == '1'\nassert solution('5 5\\n3 3\\n2 5\\n') == '3'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n') == '1'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 7\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 7\") == \"1\"\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''3 2''') == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('10 2') == '1'\nassert solution('30 2') == '2'\nassert solution('100 2') == '10'\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\""
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('3 2\\n') == '5\\n'"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1, 1) == 1\nassert solution(1, 2) == 1\nassert solution(3, 2) == 5\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"3 2\") == \"5\"\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('1 2') == '3'\nprint('\"DONE\"')\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n12\n.**.*..*.***.**.\n''') == \"no\"\nassert solution(\n'''\n11\n.*.*...*.*.\n''') == \"yes\"\nassert solution(\n'''\n8\n.*.*...*.*.\n''') == \"yes\"\nassert solution(\n'''\n11\n.*.*...*.*.\n''') == \"yes\"\nassert solution(\n'''\n8\n.*.*...*.*.\n''') == \"yes\"\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\".*.*...*.*.?\") == \"yes\"\nassert solution(\".*.*..*.***.**.?\") == \"yes\"\nassert solution(\".**.*.**.**.*.**.?\") == \"no\"\nassert solution(\".**.*.**.**.*.**.?\") == \"no\"\nassert solution(\"....*.**.*.**.**.?\") == \"no\"\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"no\"\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n.**.*..*.***.**.\n''') == 'yes'\nassert solution('''10\n.**.*.*...*.*.\n''') == 'no'\nassert solution('''13\n.**.*.*...**.*.\n''') == 'no'\nassert solution('''3\n.*.*...**.*.\n''') == 'no'\nassert solution('''16\n.**.*..*.***.**.\n''') == 'no'"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"16\\n.**.*..*.***.**.\\n\") == \"yes\"\nassert solution(\"11\\n.*.*...*.*.\\n\") == \"no\"\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'no'\nassert solution('*') == 'yes'\nassert solution('*..') == 'no'\nassert solution('*.*.***') == 'yes'\nassert solution('*..*') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16\\n.**.*..*.***.**.\\n') == 'yes'\nassert solution('11\\n.***...***.**\\n') == 'no'\nassert solution('6\\n..*****.*****\\n') == 'yes'\nassert solution('4\\n.*.***.***\\n') == 'yes'\nassert solution('1\\n.***\\n') == 'no'\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n''') == 'no'\nassert solution('''\n.**.*..*.***.**.\n''') == 'yes'"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == 'yes'\nassert solution('11') == 'no'\n\n\n\"\"\"\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''16\n.**.*..*.***.**.\n''') == 'yes'\nassert solution('''11\n.*.*...*.*.\n''') == 'no'\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '1'\nassert solution('4') == '-1'"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3\n4 0 2\n3 5 7\n8 1 6\n    \"\"\") == \"9\"\nassert solution(\n    \"\"\"\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n    \"\"\") == \"1\"\nassert solution(\n    \"\"\"\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n    \"\"\") == \"-1\"\nassert solution(\n    \"\"\"\n5\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n1 1 1 1\n    \"\"\") == \"1\"\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '1'\nassert solution('6') == '1'\nassert solution('1') == '-1'\nassert solution('1') == '-1'"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '1'\nassert solution('1') == '1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\n\"\"\") == \"1\", \"First\"\n\nassert solution(\"\"\"\n4\n0 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\n\"\"\") == \"-1\", \"Second\"\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"9\"\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"1\"\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"-1\"\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"1\"\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"1\"\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 0 2\n3 5 7\n8 1 6\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == \"-\"\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1\\n') == '3 7'\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"3 7\"\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3 7'\nassert solution('2') == '7 12'\n\nfrom itertools import combinations"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"4\", \"6\", \"1\", \"1\", \"1\", \"1\"]) == \"3 7\"\nassert solution([\"1\", \"10\", \"5\", \"6\", \"5\", \"\"]) == \"15 15\"\nassert solution([\"3\", \"7\", \"1\", \"6\", \"5\", \"\"]) == \"6 12\"\nassert solution([\"3\", \"7\", \"1\", \"6\", \"5\", \"\"]) == \"6 12\"\nassert solution([\"1\", \"1\", \"1\", \"1\", \"1\", \"1\"]) == \"3 7\"\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1') == '3 7\\n'\nassert solution('1\\n10\\n5\\n') == '15 15\\n'\nassert solution('3\\n7\\n1\\n6\\n5\\n') == '7 13\\n'\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n6\\n1\\n1\\n1\\n1\\n'\n) == '3 7'\n\nassert solution(\n    '3\\n7\\n1\\n6\\n5\\n'\n) == '6 13'"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n6\\n1\\n1\\n1\\n1\\n\"\n) == \"3 7\"\n\nassert solution(\n    \"3\\n6\\n1\\n6\\n5\\n\"\n) == \"7 13\"\n\nassert solution(\n    \"3\\n7\\n1\\n6\\n5\\n\"\n) == \"7 13\"\n\nassert solution(\n    \"3\\n8\\n1\\n8\\n5\\n\"\n) == \"7 13\"\n\nassert solution(\n    \"3\\n9\\n1\\n9\\n5\\n\"\n) == \"7 13\"\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n1\\n1\\n1\\n') == '3 7'\nassert solution('1\\n10\\n5\\n') == '15 15'\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0 0'\nassert solution('1') == '0 0'\nassert solution('3') == '0 3'\nassert solution('4') == '1 1 1 1'\nassert solution('5') == '2 3 2 3'\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1\\n') == '3 7'\nassert solution('1\\n10\\n5\\n') == '15 15'\nassert solution('3\\n6\\n1\\n6\\n5\\n') == '7 13'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3 3\n    ''') == '128'\nassert solution('''\n    4 4\n    ''') == '512'\nassert solution('''\n    5 5\n    ''') == '1024'\nassert solution('''\n    6 6\n    ''') == '1024'\n\n''')\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '128'\nassert solution('3 4') == '243'\nassert solution('10 10') == '532'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n\"\"\") == \"128\"\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '128'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"7 7\") == \"515\"\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n''') == '128'\nassert solution('''4 1\n''') == '0'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"128\"\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n') == '128'\nassert solution('3 5\\n') == '1568'\nassert solution('10 10\\n') == '1568'\nassert solution('10 1\\n') == '1'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '128'\nassert solution('2 2') == '2'\nassert solution('2 0') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"128\"\nassert solution(\"3 3\") == \"128\"\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4\\n2 6 7\\n4 2 3 9 5\\n3 2 3 9\") == \"2 3\"\nassert solution(\n    \"3 4\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\") == \"1 2\"\nassert solution(\n    \"4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\") == \"1 2\"\nassert solution(\n    \"1 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\") == \"2 4\"\nassert solution(\n    \"1 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\") == \"2 4\"\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 2\"\nassert solution(\"4 3\") == \"1 2\"\nassert solution(\"1 5\") == \"1 2\"\nassert solution(\"9 9 8 7 6 5 4 3 2 1\") == \"1 2\"\nassert solution(\"3 4\") == \"1 2\"\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n''') == '2 3'\nassert solution('''\n3 5\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\nOutput\n1 2\n''') == '1 2'\nassert solution('''\n1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\nOutput\n2 4\n''') == '2 4'\nassert solution('''\n2 5\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\nOutput\n1 2\n''') == '1 2'"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1 2'\nassert solution('4 3') == '1 2'\nassert solution('3 2') == '1 2'\nassert solution('4 4') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2 7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 6\n6 7\n6 8\n6 9\n6 10\n7 7\n7 8\n7 9\n7 10\n8 8\n8 9\n8 10\n9 9\n9 10\n10 10\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n    '''\n    ) == '2 4'\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '2 3'\nassert solution('5 4') == '1 2'\nassert solution('5 5') == '1 2'\nassert solution('10 10') == '1 2'\nassert solution('3 5') == '2 3'\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4''') == '1 2'\nassert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9''') == '2 3'\n\nassert solution('''5 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n1 4 2 4 6 8\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8''') == '1 4'\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n\n''') == '2 4'\nassert solution('''\n4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\n''') == '1 2'\nassert solution('''\n1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\n''') == '2 4'\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n\"\"\") == \"2 4\"\n\nassert solution(\"\"\"\n5 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 0\") == \"-1 -1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 0\") == \"-1 -1\"\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '1 5'\nassert solution('3 0') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 0\") == \"-1 -1\"\nassert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 1\") == \"-1 -1\"\nassert solution(\"4 1\") == \"0 0\"\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 0\n''') == '-1 -1'\nassert solution('''\n5 0\n''') == '69 96'\n'''\n\ninput = '''\n5 0\n'''"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('4 1') == '2 1'\n\n\n\"\"\"\n\nm, s = map(int, input().split())"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 0') == '-1 -1'\nassert solution('5 2') == '6 6'\nassert solution('2 4') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"-1 -1\"\nassert solution(\"10\") == \"2 9\"\nassert solution(\"15\") == \"69 96\"\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"69 96\"\nassert solution(\"1 10\") == \"69 96\"\nassert solution(\"2 3\") == \"69 -1\"\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2345 10') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n1 2345 10\n\"\"\"\n) == \"2750685\"\n\nassert solution(\n    \"\"\"\n101 154 2\n\"\"\"\n) == \"2189\""
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == stdout\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == '1230'\nprint(solution(open(\"input.txt\", \"r\").read()))\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n10 16 22\") == \"YES\"\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == \"NO\""
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''\n6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''\n3 2 5\n10 16 22\n''') == 'NO'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 10\\n7 2 7 7 4 2') == 'YES\\n'\nassert solution('6 2 3\\n4 5 3 13 4 10') == 'NO\\n'\nassert solution('3 2 5\\n10 16 22') == 'YES\\n'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 10') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('3 2 5') == 'YES'\nassert solution('3 2 3') == 'NO'\nassert solution('1 2 1') == 'YES'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 10') == 'YES'\nassert solution('6 2 3') == 'NO'"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 10\\n7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == \"NO\"\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''\n6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''\n3 2 5\n10 16 22\n''') == 'NO'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == 'YES'\nassert solution(example_input_2) == 'YES'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_input_1) == \"0 0 0 0\"\nassert solution(test_input_2) == \"1 1 1 1\"\nassert solution(test_input_3) == \"2 1 1 0\"\nassert solution(test_input_4) == \"2 1 0 1\"\nassert solution(test_input_5) == \"1 1 1 0\"\nprint(\"All tests passed.\")\n\"\"\"\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nRYBGRYBGR\n''') == '0 0 0 0'\nassert solution('''\n!RGYB\n''') == '0 1 0 0'\nassert solution('''\n!!!!YGRB\n''') == '1 1 1 1'\nassert solution('''\n!GB!RG!Y!\n''') == '2 1 1 0'\nassert solution('''\n!GGB!YYB!YB!YB!\n''') == '3 1 1 0 0'\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RYBGRYBGR') == '0 0 0 0'\nassert solution('!RGYB') == '0 1 0 0'\nassert solution('!!!!YGRB') == '1 1 1 1'\nassert solution('!GB!RG!Y!') == '2 1 1 0'"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RYBGRYBGR') == '0 0 0 0'\nassert solution('!RGYB') == '0 1 0 0'\nassert solution('!!!!YGRB') == '1 1 1 1'\nassert solution('!GB!RG!Y!') == '2 1 1 0'\nprint('Done')\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0 0 0 0\"\nassert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"YBGRYBGR\") == \"0 0 1 0\"\nassert solution(\"BGRYBGR\") == \"1 1 1 1\"\nassert solution(\"!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"YBGRYBGR\") == \"1 1 1 1\"\nassert solution(\"GB!RG!Y!\") == \"2 1 1 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n''') == '0 0 0 0'\nassert solution('''\n!RGYB\n''') == '0 1 0 0'\nassert solution('''\n!!!!YGRB\n''') == '1 1 1 1'\nassert solution('''\n!GB!RG!Y!\n''') == '2 1 1 0'\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''RYBGRYBGRY''') == '0 0 0 0'\nassert solution('''!RGYB''') == '0 1 0 0'\nassert solution('''!!!!YGRB''') == '1 1 1 1'\nassert solution('''!GB!RG!Y!''') == '2 1 1 0'"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"1.5000000000\"\n\"\"\"\nimport math"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 6') == '1.5000000000'\n"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"1.5000000000\"\nassert solution(\"6 5\") == \"2.0\""
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 6\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4\n''') == '1.5000000000'\n\n'''\n\nfrom math import factorial\nfrom random import random\nfrom random import sample\n\nn, m = map(int, stdin.readline().strip().split())\nc = list(map(int, stdin.readline().strip().split()))\nb = list(map(int, stdin.readline().strip().split()))\n\nc.sort(reverse=True)\nb.sort(reverse=True)"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4') == '1.5000000000'\nassert solution('20 20\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4') == '3.600000000000001'"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 6\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4''') == \"1.5\"\nassert solution('''3 4\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4''') == \"1.5\"\n"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0.5\"\nassert solution(\"4 6\") == \"1.5\""
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 6\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4''') == '1.5000000000'\n"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == \"1.5000000000\"\nassert solution(\"1 2\") == \"1.0\""
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"1.5000000000\"\nassert solution(\"3 3\") == \"1.0\"\nassert solution(\"10 10\") == \"1.1\"\nassert solution(\"10 10\") == \"1.0\"\nassert solution(\"20 10\") == \"1.1\"\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\nassert solution('113') == '110'\nassert solution('4722') == '4720'\nassert solution('0') == '0'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n''') == '0'\nassert solution('''113''') == '110'\nassert solution('''1000000000''') == '1000000000'\nassert solution('''5432359''') == '5432360'\nassert solution('''1000000000''') == '1000000000'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(5) == '0'\nassert solution(113) == '110'\nassert solution(1000000000) == '1000000000'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"113\") == \"110\"\nassert solution(\"100000000\") == \"100000000\"\nassert solution(\"10000000000\") == \"10000000000\"\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\nassert solution('-3') == '-3'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '0'\nassert solution('''\n113\n''') == '110'\nassert solution('''\n1000000000\n''') == '1000000000'\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"111\") == \"111\"\nassert solution(\"-5\") == \"-5\"\nassert solution(\"-1000000000\") == \"-1000000000\"\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"helloworld\") == \"ehoolwlroz\"\nassert solution(\"hastalavistababy\") == \"0\"\nassert solution(\"merrychristmas\") == \"-1\""
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('helloworld') == 'ehoolwlroz'\nassert solution('christmasmerry') == '-1'\nassert solution('holmes') == '-1'\nassert solution('hastalavistababy') == 'h e l o d z'\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('abcd') == '-1'\nassert solution('abcdabcd') == '1'\nassert solution('chrischristmas') == '2'\nassert solution('madamimadam') == '3'"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"salt\") == \"slts\"\nassert solution(\"elephant\") == \"eleplz\"\nassert solution(\"salt\") == \"slts\"\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '-1'\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hello') == 'h e'\nassert solution('world') == 'e w'\nassert solution('lo world') == 'o l'\nassert solution('he is the king') == 'e h i'\nassert solution('he is the king') == 'e h i'\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('helloworld') == 'ehoolwlroz'\nassert solution('hastalavistababy') == '-1'"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"helloworld\") == \"h e\\nl o\\nd z\"\nassert solution(\"hastalavistababy\") == \"h e\\nast\\nl a\\nb y\"\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '-1'\nassert solution(input()) == '3'"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"harry potter\"\n) == \"hap\"\nassert solution(\n    \"tom riddle\"\n) == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('harry potter') == 'ap'\nassert solution('tom riddle') == 'tomr'\nassert solution('scrooge McDuck') =='scopd'\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"harry potter\") == \"ap\""
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('harry potter') == 'harry'\nassert solution('tom riddle') == 'tomr'\nassert solution('tomm riddle') == 'tomr'\nassert solution('tom riddle tom riddle') == 'tomr'\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\""
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"harry potter\") == \"hap\"\nassert solution(\n    \"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('tom riddle') == 'tomr'\nassert solution('harry potter') == 'hap'\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '+-        -++- -+'\nassert solution('6') == '+-        -++- -+||'\nassert solution('8') == '+-        -++- -+|||'\nassert solution('9') == '+-        -++- -+|||'\nassert solution('10') == '+-        -++- -+|||'\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    []\n''') == '+- -+'\nassert solution('''\n    3\n    [][]\n''') == '+- -++- -+'\nassert solution('''\n    4\n    []][][]\n''') == '+- -++- -+|||'\nassert solution('''\n    5\n    [][][][]\n''') == '+- -+- -+- -+- -+- -+-'\nassert solution('''\n    6\n    [[][]][]\n''') == '+- -+- -+- -+- -+- -+-'\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\"\n    \"[[][]][]\") == \"+-     -+\"\n\nassert solution(\n    \"6\"\n    \"[[[]]]\") == \"+-     -+\"\n\n\nassert solution(\n    \"7\"\n    \"[[][]][]\") == \"+-     -+\"\n\n\n\nassert solution(\n    \"8\"\n    \"[[][]][]\") == \"+-     -+\"\n\n\nassert solution(\n    \"11\"\n    \"[[][]][]\") == \"+-     -+\""
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n[[]]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n''')\n\n'''\n[[][]][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\n'''\n\n'''\n[[][]][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[[][]]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[[][]]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[[[]]]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[[][]]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\n'''\n[][]\n\n+-        -++- -+\n|+- -++- -+||   |\n||   ||"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\n\n'''\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"++++++\"\nassert solution() == \"++++++\"\nassert solution() == \"++++++\"\nassert solution() == \"++++++\"\nassert solution() == \"++++++\"\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '+-     -+\\n|+- -++- -+|\\n||   ||   ||\\n|+- -++- -+|\\n+-        -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"+- -++- -+\"\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"+- -+\"\nassert solution(\"5\") == \"+- -+    -++- -+    -++- -+    +- -+\"\nassert solution(\"10\") == \"+- -+    -++- -+    -++- -+    -++- -+    +- -+    -++- -+    -++- -+    +- -+\"\nassert solution(\"12\") == \"+- -+    -++- -+    +- -+    +- -+    +- -+    -++- -+    -++- -+    +- -+    +- -+\"\nassert solution(\"16\") == \"+- -+    -++- -+    +- -+    +- -+    +- -+    +- -+    -++- -+    -++- -+    +- -+    +- -+\"\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000') == '<'\nassert solution('11') == '>'\nassert solution('00100') == '='\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \"<\", \"Expected `<`, found `{}`\".format(solution(\"1000\"))\nassert solution(\"111\") == \"=\", \"Expected `=`, found `{}`\".format(solution(\"111\"))\nassert solution(\"100\") == \">\", \"Expected `>`, found `{}`\".format(solution(\"100\"))\nassert solution(\"101\") == \"<\", \"Expected `<`, found `{}`\".format(solution(\"101\"))\nassert solution(\"11\") == \"=\", \"Expected `=`, found `{}`\".format(solution(\"11\"))\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000\\n111') == '<', \"Wrong!\"\nassert solution('110\\n101') == '>', \"Wrong!\""
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000\\n111\") == \"<\"\nassert solution(\"100\\n11\") == \">\"\nassert solution(\"10\\n1\") == \"=\"\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000\n111''') == '<'\nassert solution('''110\n101''') == '>'\nprint(solution('''2000\n21000'''))\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"<\"\nassert solution(\"111\") == \"<\"\nassert solution(\"11\") == \">\"\nassert solution(\"110\") == \"=\"\nassert solution(\"101\") == \">\"\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1000\n111\n''') == '<'\nassert solution('''\n110\n101\n''') == '>'\nassert solution('''\n10\n10\n''') == '='\nassert solution('''\n11\n10\n''') == '>'"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1000\n111\n''') == '<'\nassert solution('''\n110\n101\n''') == '>'\nassert solution('''\n0\n1\n''') == '='\nassert solution('''\n3\n5\n''') == '>'\nassert solution('''\n0\n0\n''') == '='"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000\\n110\") == \"<\"\nassert solution(\"111\\n000\") == \">\"\nassert solution(\"001\\n11\") == \"=\"\n"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n111\n''') == '<'\n\nassert solution('''\n00100\n11\n''') == '=<'\n\nassert solution('''\n110\n101\n''') == '>'"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nred\\ngreen\\nblue\\norange') == '2\\ntime\\nsoul'\nassert solution('0\\n') == '6\\ntime\\nmind\\npower\\nreality\\nsoul'\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Time'\nassert solution('1') == 'Soul'\nassert solution('0') == 'Space'\nassert solution('6') == 'Time'\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Time'\nassert solution('0') == '6'\nassert solution('2') == 'Space'\nassert solution('4') == '6'"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"6\"\nassert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nred\\ngreen\\nblue\\norange\\n') == '6\\nTime\\nSpace'"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('0') == '6'"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '6'\nassert solution('4') == '2'\nassert solution('2') == '6'\nassert solution('5') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == '2\\nSpace'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\n\n\"\"\""
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '6'\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 1 2\\n') == 'Final!'\nassert solution('8 2 6\\n') == '2'\nassert solution('8 7 5\\n') == 'Final!'\nassert solution('8 5 7\\n') == '2'\n\n---\n\nThe game ends when a team with id = 1 and id = 2 wins.\n\nThe game ends when a team with id = 3 and id = 6 wins.\n\nThe game ends when a team with id = 7 and id = 5 wins.\n\nIf there are no teams left, the game ends, and the winner is determined according to the following rule:"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2\") == \"1\"\nassert solution(\"3 3 1\") == \"2\"\nassert solution(\"10 1 2\") == \"Final!\"\nassert solution(\"4 1 2\") == \"1\"\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 1 2\n8 2 6''') == 'Final!'\nassert solution('''8 7 5\n7 5 8''') == '2'\nassert solution('''8 4 2\n7 8 2''') == '1'\nassert solution('''8 5 6\n5 6 3''') == 'Final!'\nassert solution('''8 1 2\n7 4 6''') == 'Final!'"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Final!\"\nassert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"2\"\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 2') == \"1\"\nassert solution('8 2 6') == \"2\"\nassert solution('8 7 5') == \"2\"\n\n\n\"\"\"\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\") == \"Final!\"\nassert solution(\"8 2 6\") == \"2\"\nassert solution(\"8 7 5\") == \"Final!\"\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == '2'"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1 2') == 'Final!'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == 'Final!'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 2 1\n0 1 1 1''') == '2'\nassert solution('''3 4 1 2\n0 1 0 0''') == '1'\nassert solution('''3 4 1 2\n0 0 0 0''') == '0'\nassert solution('''4 4 1 2\n0 1 0 0''') == '1'\nassert solution('''5 5 1 2 3\n0 0 0 0 1''') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 2 1') == '2'\nassert solution('3 4 1 1') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,3,2,1]) == 2\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\n\n--------------------------------------------------------------\n\n\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0438\u0437 N \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (1 \u2264 N \u2264 100). \n\n\u0412 \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u043e \u043c\u0435\u0441\u0442\u0430\u043c, \n\n\u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432. \u041f\u0440\u0438\u043c\u0435\u0440: \n\n4 3 2 1\n0 1 1 1\n\n\u0412\u044b\u0432\u043e\u0434: \n\n2\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \n\u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e N \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 1, \u0442\u043e \u043e\u043d\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0438\u0437 N \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \n\u0412\u044b\u0432\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0441\u043f\u0438\u0441\u043e\u043a.\n\n----\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430---\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (1 \u2264 N \u2264 100). \n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 N \u0447\u0438\u0441\u0435\u043b \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 \u043f\u0430\u0440\u0430 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445, \n\n\u043f\u0435\u0440\u0432\u043e\u0435 \u0438 \u0432\u0442\u043e\u0440\u043e\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u0441 1 \u043f\u043e N.\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n4 3 2 1\n0 1 1 1\n\n\u0412\u044b\u0432\u043e\u0434: \n\n2\n\n---------------------------------\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (1 \u2264 N \u2264 100). \n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 N \u0447\u0438\u0441\u0435\u043b \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 \u043f\u0430\u0440\u0430 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445, \n\n\u043f\u0435\u0440\u0432\u043e\u0435 \u0438 \u0432\u0442\u043e\u0440\u043e\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u0441 1 \u043f\u043e N.\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n4 3 2 1\n0 1 1 1\n\n\u0412\u044b\u0432\u043e\u0434: \n\n1\n\n-------------------\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (1 \u2264 N \u2264 100). \n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 N \u0447\u0438\u0441\u0435\u043b \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\u0434\u0435\u0442 \u043f\u0430\u0440\u0430 \u0438\u0437 \u0434\u0432\u0443\u0445 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445, \n\n\u043f\u0435\u0440\u0432\u043e\u0435 \u0438 \u0432\u0442\u043e\u0440\u043e\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u0441 1 \u043f\u043e N.\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n4 3 2 1\n0 1 1 1\n\n\u0412\u044b\u0432\u043e\u0434: \n\n2\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \n\u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e N \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 1, \u0442\u043e \u043e\u043d\u043e \u043e\u0442\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432.\n\u0412\u044b\u0432\u043e\u0434 \u0438\u0441"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '1'\nassert solution('4 3 2 1') == '2'\nassert solution('3 3 2 1') == '1'\n\n'''\n\n'''\nclass Solution:\n    def solution(self, n: str) -> str:\n        pass\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution() == '2'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 1\n0 0 0''') == '1'\nassert solution('''3 4 1\n0 1 0''') == '2'\nassert solution('''1 2 3\n0 0 1''') == '0'\nassert solution('''3 3 3\n0 0 0''') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2 1\") == \"2\"\nassert solution(\"3 2 1\") == \"1\"\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '26'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n4 2\n''') == '26'\nassert solution('''10 10\n10 0\n''') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"26\"\nassert solution(\"10 10\") == \"100\""
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 6\n4 2\n\"\"\") == \"26\"\nassert solution(\"\"\"\n10 10\n10 0\n\"\"\") == \"100\""
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 2]) == 26\nassert solution([10, 10]) == 100\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '26'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n4 2\\n\") == \"26\"\nassert solution(\"10 10\\n10 0\\n\") == \"100\""
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"26\"\nassert solution(input) == \"100\"\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"26\"\nassert solution(\"10 10\") == \"100\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '10'\nassert solution('4 1 3 5 7') == '-1'\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 4\") == \"10\"\nassert solution(\"4 2\") == \"10\"\nassert solution(\"5 2\") == \"10\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"4 4\") == \"10\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 4 2\\n10 4\\n2 6') == '10'\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 3\") == \"-1\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '10'\nassert solution('5 2') == '-1'\nassert solution('4 5') == '-1'\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"20 3\") == \"19\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"5 2\") == \"10\"\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"10\"\n\n\"\"\"\n\nn, m = list(map(int, input().split()))\nweights = list(map(int, input().split()))\nl = list(map(int, input().split()))\nv = list(map(int, input().split()))\n\ndist = []\nfor i in range(len(l)):\n    dist.append(l[i])\n    dist.append(v[i])\ndist.sort(reverse=True)\n\ntot = 0\nfor i in range(len(l)):\n    tot += weights[i]\n    if tot > v[i]:\n        print(-1)\n        exit(0)\n\ncnt = 0\nleft = 0\nfor i in range(len(dist)):\n    left += dist[i]\n    if left > v[i]:\n        cnt += 1\n        left -= v[i]\n    if cnt == n:\n        print(left)\n        exit(0)\n\n\n\"\"\""
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"107 109\") == \"2\"\n\n\n\"\"\"\n\n\na, b = list(map(int, input().split()))\nprint(int(((a ** (1 / b)) - 1) * (b ** (1 / a)) * (1 - b ** a) / ((1 - b) ** 2)))\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 10\n''') == '0'\nassert solution('''107 109\n''') == '2'\nassert solution('''\n''') == ''\nassert solution('''\n5 6\n''') == '5'\nassert solution('''\n0 1\n''') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\nassert solution(\"1000000000\") == \"9\""
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 10\n''') == '0'\nassert solution('''\n0 10\n''') == '0'\nassert solution('''\n107 109\n''') == '2'"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\nassert solution(input) == \"4\"\nassert solution(input) == \"3\"\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 4') == '2'\nassert solution('4 2') == '-1'\nassert solution('12 3') == '4'\n\nstdin = input()\n\nprint(solution(stdin))\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 4\\n10010101') == '2'\nassert solution('4 2\\n1001') == '-1'\nassert solution('12 3\\n101111100101') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"4 2\") == \"3\"\nassert solution(r\"12 3\") == \"4\"\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 4\n10010101\n''') == '2'\nassert solution('''4 2\n1001\n''') == '-1'\nassert solution('''12 3\n101111100101\n''') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4\\n10010101') == '2'\nassert solution('4 2\\n1001') == '-1'\nassert solution('12 3\\n101111100101') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 4\n10010101\n''') == '2'\nassert solution('''4 2\n1001\n''') == '-1'\nassert solution('''12 3\n101111100101\n''') == '4'"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n\nassert solution() == '-1'\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '2'"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n\nprint(solution())\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES', 'First example'\nassert solution('2') == 'NO', 'Second example'\nassert solution('3') == 'YES', 'Third example'\nassert solution('4') == 'NO', 'Fourth example'\nassert solution('5') == 'NO', 'Fifth example'\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\""
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\"\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\""
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'NO'\nassert solution('3\\n1 2') == 'YES'\nassert solution('4\\n1 2\\n1 0\\n0 1') == 'YES'\nassert solution('4\\n1 2\\n1 0\\n0 3') == 'NO'\nassert solution('4\\n1 2\\n1 0\\n0 3\\n-1 3\\n-1 0') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\n\"\"\""
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('4') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'No'\nassert solution('2') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('5') == 'No'\n\n\n\"\"\""
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 2\n\nOutput\nYES\nInput\n2\n1 3\n1 0\n0 2\n\nOutput\nYES''') == 'YES'\n\n\n'''"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\\n') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n-1 3\\n') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''\n2\n1 3\n1 0\n0 2\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 3\n''') == 'NO'"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n1 2\n1 0\n0 1\n0 2\n\n''') == 'NO'\nassert solution('''\n2\n1 3\n1 0\n-1 3\n\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 2\n\n''') == 'YES'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '3'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n''') == '4'\nassert solution('''8\n''') == '5'\nassert solution('''9\n''') == '5'\nassert solution('''6\n''') == '1'\nassert solution('''7\n''') == '4'"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\n'''"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n''') == '4'\nassert solution('''8\n''') == '5'\nassert solution('''9\n''') == '5'\nassert solution('''10\n''') == '1'"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\""
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == '5'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n''') == '4'\nassert solution('''8\n''') == '5'\nassert solution('''9\n''') == '5'\n\n'''"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n''') == '4'\nassert solution('''9\n''') == '5'\nassert solution('''10\n''') == '5'\nassert solution('''12\n''') == '4'\nassert solution('''1\n''') == '1'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n''') == '4'\nassert solution('''8\n''') == '5'\nassert solution('''9\n''') == '5'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '1 3'\nassert solution('6 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1 3\"\nassert solution(\"4 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 3\"\nassert solution(\"6 3\") == \"1 3\"\nassert solution(\"10 20\") == \"4 5 6 7 8 9 10 11 12 13 14\""
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1 3'\nassert solution('6 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('10 20 3') == '4 5'\nassert solution('1 5 3') == '2 4'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"1 3\"\nassert solution(\"10 2\") == \"4 6\"\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 3\"\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1 3'\nassert solution('6 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1 2\"\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '4'"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n3\n''') == '2'\nassert solution('''\n4\n''') == '2'\nassert solution('''\n10\n''') == '4'\nassert solution('''\n100\n''') == '50'\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('10') == '4'"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2]) == \"1\"\nassert solution([3]) == \"2\"\nassert solution([10]) == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '2'"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT\n\n\n\"\"\"\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''VV\n''') == '1'\nassert solution('''V\n''') == '0'\nassert solution('''VKKKKKKKKKVVVVVVVVK''') == '3'\nassert solution('''KVKV''') == '1'\nassert solution('''K''') == '0'\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''VV\n\nInput\nVV\n\nOutput\n1\n\nInput\nV\n\nOutput\n0\n\nInput\nVKKKKKKKKKVVVVVVVVK\n\nOutput\n3''') == '3'\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"VV\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == \"3\""
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('V') == '1'\nassert solution('VV') == '1'\nassert solution('VVVVVVVVVV') == '6'\nassert solution('VVVVVVVVVV') == '3'\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('VV') == '1'\nassert solution('VVV') == '1'\nassert solution('V') == '0'\nassert solution('VKKKKKKKKKVVVVVVVVK') == '3'\nassert solution('KVKV') == '1'"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"VV\") == \"1\"\nassert solution(\"VVV\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"KVK\") == \"1\"\nassert solution(\"KVKV\") == \"3\"\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'VK'\n) == '1'\n\nassert solution(\n    'VV'\n) == '1'\n\nassert solution(\n    'V'\n) == '0'\n\nassert solution(\n    'VKKKKKKKKKVVVVVVVVK'\n) == '3'\n\nassert solution(\n    'KVKV'\n) == '1'"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"VV\") == 1\nassert solution(\"VVV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\""
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(input) == \"3\"\nassert solution(input) == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n\n\"\"\") == \"2\"\nassert solution(\"\"\"2\n\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == \"2\"\nassert solution('2') == \"2\"\nassert solution('4') == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '4'"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('123456789') == '33'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 9\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 7\n''') == '2'\nassert solution('''4 9\n''') == '3'\nassert solution('''1 1\n''') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('4 9') == '3'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nprint('\"Run\" is good. Time to check.')\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\nstdin = '''\n4 7\n'''\nimport sys\nimport io\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\n\n'''\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == '2'\nassert solution(\"2 3\") == '5'\nassert solution(\"3 6\") == '10'\nassert solution(\"10 1024\") == '2046'"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 1024\") == \"2046\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\n\n\n\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 6\") == \"5\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"10 1024\") == \"2046\""
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\\n1 2\\n2 1\"\nassert solution(\"2\") == \"2\\n1 2\\n2 1\"\nassert solution(\"2\") == \"2\\n1 2\\n2 1\""
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"26\\n\") == \"6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\\n\"\nassert solution(\"2\\n\") == \"2\\n1 2\\n2 1\\n\"\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2 1\\n1 2\"\nassert solution(\"4\") == \"4 1\\n1 4\"\nassert solution(\"8\") == \"4 1\\n1 8\"\nassert solution(\"26\") == \"6 1\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\""
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2\\n1 2\\n2 1\\n'\nassert solution('8') == '4\\n1 8\\n2 3\\n3 2\\n8 1\\n'\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '2\n1 2\n2 1\n\nassert solution('''\n8\n''') == '4\n1 8\n2 3\n3 2\n8 1\n26 1\n''') == '6\n1 26\n2 9\n3 5\n5 3\n9 2\n26 1\n'''\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1\n2\n3''') == '6'\nassert solution('''2\n2\n3''') == '2'\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\\n1 2\\n2 1\\n\"\nassert solution(\"8\") == \"4\\n1 8\\n2 3\\n3 2\\n8 1\\n\"\nassert solution(\"26\") == \"6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\\n\"\nassert solution(\"0\") == \"0\\n\""
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '4'\nassert solution('26') == '6'\n\n\"\"\""
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n31 31 30 31\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'Yes'\n\nassert solution('''\n5\n29 31 30 31 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'Yes'\n\nassert solution('''\n4\n31 31 30 31\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'No'"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n31 31 30 31\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'YES'\n\nassert solution('''5\n29 31 30 31 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'YES'\n\nassert solution('''4\n31 31 30 31\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'NO'\n\nassert solution('''5\n29 31 30 31 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\n''') == 'NO'\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n31\\n30\\n31\") == \"Yes\"\nassert solution(\"2\\n30\\n30\") == \"No\"\nassert solution(\"3\\n31\\n30\\n31\\n28\") == \"Yes\"\nassert solution(\"4\\n31\\n31\\n28\\n31\") == \"Yes\"\nassert solution(\"5\\n31\\n31\\n28\\n31\\n28\") == \"No\"\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    \"5\",\n    \"30 31 30 31 30\",\n    \"29 31 30 31 31 30\",\n    \"31 31 28\",\n    \"31 31 28\",\n    \"31 31 28\",\n    \"31 31 28\",\n    \"31 31 28\",\n    \"31 31 28\",\n]) == \"Yes\""
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"4\n31 31 30 31\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"5\n29 31 30 31 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"4\n31 31 28 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\"\"\") == \"No\"\nassert solution(\n\"\"\"5\n29 31 30 31 30\n\n2\n30 30\n\n3\n31 28 30\n\n3\n31 31 28\n\"\"\") == \"No\"\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n30 30 31 31 30\\n') == 'YES'\nassert solution('3\\n31 31 28\\n') == 'NO'\nassert solution('4\\n31 31 30 31\\n') == 'YES'\nassert solution('5\\n29 31 30 31 30\\n') == 'YES'\nassert solution('3\\n31 31 28\\n') == 'YES'\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n31 31 30 31\n''') == 'Yes'\nassert solution('''\n30 31 30 31\n''') == 'No'\nassert solution('''\n31 31 28\n''') == 'Yes'\nassert solution('''\n31 31 28 30\n''') == 'Yes'\nassert solution('''\n31 31 28 29 30\n''') == 'No'\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4]) == \"YES\"\nassert solution([2]) == \"NO\"\nassert solution([3]) == \"YES\"\nassert solution([3]) == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) in [\"YES\", \"NO\"]\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n''') == 'NO'\nassert solution('''3\n''') == 'YES'\nassert solution('''6\n''') == 'YES'\nassert solution('''10\n''') == 'NO'\nassert solution('''100\n''') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n2\n3\n4\n''') == 'YES'\nassert solution('''\n1\n1\n1\n''') == 'YES'\nassert solution('''\n1\n2\n2\n''') == 'NO'\nassert solution('''\n1\n2\n3\n''') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4''') == 'NO'\nassert solution('''2''') == 'YES'\nassert solution('''6''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''5''') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('1') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n7\n3 3 4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n2 3\n1 3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n7\n3 3 4 1\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == '2'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2 3\n1 3 1''') == '2'\nassert solution('''1\n2 3\n1 3 1''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution(input_string='''\n4\n5 7\n3 3 4 1\n''') == \"3\"\nassert solution(input_string='''\n3\n2 3\n1 3 1\n''') == \"2\"\nassert solution(input_string='''\n3\n3 3\n2 2 2\n''') == \"-1\"\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n5 7\\n3 3 4 1\\n') == '3'\nassert solution('3\\n2 3\\n1 3 1\\n') == '2'\nassert solution('3\\n5 7\\n3 3 4 1\\n') == '2'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"-1\") == \"-1\""
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\n\nassert solution(\"4 4 4\") == \"NO\"\n"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1\\n'\nassert solution('4 4 7') == 'NO\\n'\n"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\n"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\""
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 4 7\") == \"NO\"\n"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 4 7') == 'NO'\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 3\\n\") == \"YES\\n1 0\\n2 3\\n4 1\\n\"\nassert solution(\"4 4 7\\n\") == \"NO\\n\""
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 4\\n') == 'YES\\n1 0\\n2 3'\n\nassert solution('4 4 7\\n') == 'NO'"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3 3\n''') == 'YES\n1 0\n2 3\n4 1\n''')\nassert solution('''4 4 7\n''') == 'NO'\nassert solution('''4 4 7\n''') == 'YES\n1 0\n2 3\n4 1\n''')\nassert solution('''3 2 3\n''') == 'NO'\nassert solution('''4 4 7\n''') == 'YES\n1 0\n2 3\n4 1\n''')"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 4') == 'YES 1 0\\nYES 2 3'\nassert solution('4 4 7') == 'NO'\nassert solution('4 4 6') == 'YES 1 2'\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\""
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\""
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\""
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'chest'\nassert solution('3') == 'back'\nassert solution('7') == 'chest'\nassert solution('7') == 'back'\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1 10\n2 3 7 9 6 8''') == 'biceps'\nassert solution('''7 3 2 7 9 6 8\n5 2 1 3''') == 'back'\nassert solution('''8 2 10\n7 4 8''') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'chest'\nassert solution('3') == 'back'\nassert solution('7') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n8\") == \"biceps\"\nassert solution(\"3\\n3 2 7 9 6 8\") == \"back\"\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"biceps\"\nassert solution(\"3\") == \"back\"\nassert solution(\"7\") == \"chest\"\nassert solution(\"12\") == \"biceps\"\nassert solution(\"18\") == \"back\"\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'back'\nassert solution('2') == 'chest'\nassert solution('7') == 'back'\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 8]) == \"biceps\"\nassert solution([3, 3, 2, 7, 9, 6, 8]) == \"back\"\nassert solution([7, 5, 3, 3, 2, 1, 7]) == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"chest\"\nassert solution(\"2\") == \"back\"\nassert solution(\"3\") == \"chest\"\nassert solution(\"4\") == \"back\"\nassert solution(\"5\") == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    2 8\n    ''') == 'biceps'\n\nassert solution('''\n    3 3 2 7 9 6 8\n    ''') == 'back'\n\nassert solution('''\n    7\n    5 1 10\n    ''') == 'chest'"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n4 4 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n5 4 5 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n5 3 3 5\n\"\"\") == \"1\"\n\n\n\"\"\"\n\nExample\n\nInput:\n\n5\n4 4 4\n\nOutput:\n\n2\n\nInput:\n\n5\n5 3 3 5\n\nOutput:\n\n1\n\nInput:\n\n4\n5 4 5 5\n\nOutput:\n\n0\n\"\"\""
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n4 4 4\n''') == '2'\n\nassert solution('''4\n5 4 5 5\n''') == '1'\n\nassert solution('''4\n5 3 3 5\n''') == '0'\n\nassert solution('''\n''') == '0'\n\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\n\nimport math"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution() == '0'\nassert solution() == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 4 4\") == \"2\"\nassert solution(\"1\\n5 4 5\") == \"0\"\nassert solution(\"2\\n5 4 5\") == \"1\"\nassert solution(\"3\\n5 4 5\") == \"0\"\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n4 4 4\n''') == '2'\nassert solution('''4\n5 4 5 5\n''') == '1'\nassert solution('''4\n5 3 3 5\n''') == '0'\nassert solution('''5\n5 4 5 5\n''') == '1'"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,4]) == \"2\"\nassert solution([1,3]) == \"3 1\"\nassert solution([0,0]) == \"0\""
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3 1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3 1'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"1 3\") == \"3 1\"\nassert solution(\"8 5\") == \"3 1 1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-1 -1\") == \"1\"\n"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 3]) == '3 1'\nassert solution([1, 3, 2]) == '2'\nassert solution([4, 3, 4, 4, 2, 4]) == '-1'\nassert solution([8, 5]) == '0'"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 4\"\n) == \"2\"\nassert solution(\n    \"1 3\"\n) == \"3 1\"\nassert solution(\n    \"8 5\"\n) == \"0\"\nassert solution(\n    \"0 0\"\n) == \"0\"\n"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '3 1'\nassert solution('1 3') == '-1'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4\n''') == '2'\nassert solution('''1 3\n''') == '3 1'\nassert solution('''8 5\n''') == '-1'\nassert solution('''0 0\n''') == '0'"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n''') == '2'\nassert solution('''1 3\n''') == '3 1'\nassert solution('''8 5\n''') == '-1'\nassert solution('''0 0\n''') == '0'"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3 1'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('121') == '6'\nassert solution('10') == '1'\nassert solution('9') == '1'\nassert solution('-8') == '1'\nassert solution('-7') == '1'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('121') == '6'"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('121') == '6'\nassert solution('-121') == '6'\nassert solution('9') == '1'\nassert solution('9012') == '2'\nassert solution('9012') == '2'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '6'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12345678910') == '4'\nassert solution('1234') == '4'\nassert solution('1') == '1'\nassert solution('111') == '2'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"121\") == \"6\"\nassert solution(\"12\") == \"1\"\nassert solution(\"1221\") == \"3\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"12345\") == \"4\"\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"121\") == \"6\"\nassert solution(\"-121\") == \"6\"\nassert solution(\"11\") == \"1\"\nassert solution(\"-11\") == \"1\"\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''121''') == '6'\nassert solution('''1313''') == '3'\nassert solution('''15''') == '1'\n\n\n'''\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 1 \u0438\u0437 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 1, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u044c\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u0442\u0440\u043e\u043a\u0438. \u0415\u0441\u043b\u0438 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u043a\u043e\u0432 1, \u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 0.\n\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u0430\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n.\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 1.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0432\u043e\u0434\u0430\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0443.\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u043c\u043d\u043e\u0436\u0438\u0442\u0435\u043b\u044c, \u0432\u044b\u0432\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0442\u0430\u043a\u0438\u043c:\n1\n\u041a\u0430\u0436\u0434\u043e\u0435 \u0441\u043b\u043e\u0432\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437. \u041d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0434\u043b\u044f \u0442\u0435\u0445 \u0441\u043b\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 n.\n\n\n'''"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('121') == '6'\n\n\nInput\n817\n\nOutput\n3"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('121') == '6'\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0 0 0 6\n2 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 0 6\n2 3\n''') == 'YES', \"First example\"\nassert solution('''\n1 1 3 6\n1 5\n''') == 'NO', \"Second example\"\nassert solution('''\n0 0 0 6\n2 3\n''') == 'YES', \"Third example\"\nassert solution('''\n0 0 0 6\n1 2\n''') == 'YES', \"Fourth example\"\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 3 6') == 'NO'\nassert solution('0 0 0 6') == 'YES'"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"YES\"\nassert solution(input_string_2) == \"NO\""
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0 6\n2 3\n''') == 'YES'\nassert solution('''\n1 1 3 6\n1 5\n''') == 'NO'"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\""
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3 6\") == \"YES\"\nassert solution(\"0 0 0 6\") == \"NO\"\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0 0 6\n2 3\n''') == 'YES'\nassert solution('''\n1 1 3 6\n1 5\n''') == 'NO'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''97''') == '2'\nassert solution('''2028''') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''97\n2028\n''') == '13'\nassert solution('''\n208\n280\n802\n820\n2028\n2082\n2208\n2280\n2802\n2820\n8022\n8202\n8220\n''') == '15'"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"97\") == \"2\"\nassert solution(\"2028\") == \"13\"\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"97\\n\") == \"2\"\nassert solution(\"2028\\n\") == \"13\"\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n3\n2\n4\n2''') == '3'"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '6'\nassert solution('12') == '102'\nassert solution('17') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5\n6\n3\n1\n2\n''') == '6'\nassert solution('''\n12\n11\n13\n20\n4\n6\n''') == '100'\nassert solution('''\n17\n14\n5\n21\n15\n17\n''') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    5\n    6\n    3\n    1\n    2\n    ''') == '6'\nassert solution('''\n    12\n    11\n    13\n    20\n    4\n    6\n    ''') == '325'"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5\n6\n3\n1\n2\n''') == '6'\nassert solution('''\n12\n11\n13\n20\n4\n6\n''') == '325'\nassert solution('''\n17\n14\n5\n21\n15\n17\n''') == '345'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n1\\n2\\n3\\n\") == \"6\"\nassert solution(\"5\\n6\\n3\\n1\\n2\\n3\\n\") == \"9\"\nassert solution(\"15\\n13\\n5\\n21\\n15\\n17\\n\") == \"325\"\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '6'\nassert solution('5') == '6'\nassert solution('12') == '6'\nassert solution('17') == '325'\nassert solution('11') == '17'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nassert solution_tests() == \"102\"\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\") == \"325\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == \"325\"\nassert solution(\"13\") == \"132\"\nassert solution(\"5\") == \"51\"\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 5 8') == 2\nassert solution('4 6 7 13') == 1\nassert solution('233 233 10007 1') == 1\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 5 8\") == 2\nassert solution(\"4 6 7 13\") == 1\nassert solution(\"233 233 10007 1\") == 1"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 5 8''') == '2'\nassert solution('''4 6 7 13''') == '1'\nassert solution('''233 233 10007 1''') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 1\n\n\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 8\") == \"2\"\nassert solution(\"4 6 7 13\") == \"1\"\nassert solution(\"233 233 10007 1\") == \"1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 5 8\") == 2\nassert solution(\"4 6 7 13\") == 1\nassert solution(\"233 233 10007 1\") == 1"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3 5 8\n3 5 7''') == '2'\nassert solution('''4 6 7 13\n4 7 11''') == '1'\nassert solution('''233 233 10007 1\n''') == '1'"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 3 4\n1 1 1 1''') == '800'\nassert solution('''1 1 1 1\n1 1 1 1''') == '256'\nassert solution('''5 1 2 3 4\n1 1 2 1''') == '256'\nassert solution('''5 1 3 4\n2 2 3 1''') == '256'\nassert solution('''5 1 3 4\n4 4 5 5''') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 800\n\"\"\"\n\nfrom math import prod"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"5 1 3 4\") == \"800\"\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 1 1''') == '256'\nassert solution('''5 1 3 4''') == '800'\nassert solution('''1 1 1 1''') == '256'\nprint('\"Run\" is good. How is \"Check\"?')\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1 3 4''') == '800'\nassert solution('''1 1 1 1''') == '256'\nassert solution('''1 1 1 1''') == '256'"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1 3 4''') == '800'\nassert solution('''1 1 1 1''') == '256'\nprint('ALL TEST CASES PASSED')\n\n\"\"\""
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\nprint('All tests passed')\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 4 3 1\n''') == '0'\nassert solution('''\n9 3 8 10\n''') == '2'\n'''\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n\n'''"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5 2 4\n''') == '2'\nassert solution('''\n10 5 8 4\n''') == '2'\nassert solution('''\n1000 100000 1000 1000\n''') == '1'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nassert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\nassert solution('2 3 5 2') == '3'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2''') == '3'\nassert solution('''8 16''') == '31'\nassert solution('''1 1''') == '0'\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution('1 1') == '0'\nassert solution('8 16') == '31'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n3 7\n5 4''') == \"1\"\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '3'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('3 4') == '3'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0\"\n\na,b = [int(i) for i in stdin.split()]\nprint(a ^ b)"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"8 16\") == \"31\"\nassert solution(\"1 1\") == \"0\""
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('8 16') == '31'\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\n\n\n'''\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_case_0) == '1'\nassert solution(test_case_1) == '3'\nassert solution(test_case_2) == '3'\nassert solution(test_case_3) == '1'\nassert solution(test_case_4) == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"12 10\") == \"3\"\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('1') == '1'\nassert solution('1000000000000') == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"999999999999999999 999999999999999986\") == \"3\"\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"999999999999999999 999999999999999986\") == \"3\"\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 1 4 4 2 1'\n) == 'YES', 'First'\nassert solution(\n    '1 6 6 2 1 1'\n) == 'NO', 'Second'\nassert solution(\n    '4 1 7 4 1 2'\n) == 'YES', 'Third'\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_) == \"NO\""
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1 4 4 2 1\n''') == 'YES'\nassert solution('''\n1 6 6 2 1 1\n''') == 'NO'\nassert solution('''\n4 1 7 4 1 2\n''') == 'YES'\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 4 4 2 1\\n') == 'YES'\nassert solution('1 6 6 2 1 1\\n') == 'NO'\nassert solution('4 1 7 4 1 2\\n') == 'YES'\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == 'YES'"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n\"\nassert solution() == \"NO\\n\""
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 3\\n2 4 4 5 5\") == \"YES\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"3 1 1 4 1 2\") == \"NO\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example) == 'YES'\nassert solution(second) == 'NO'\nassert solution(third) == 'YES'\nprint(solution(input))\n"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 4 4 2 1\n''') == 'YES'\n\nassert solution('''1 1 6 6 2 1\n''') == 'NO'\n\nassert solution('''4 1 7 4 1 2\n''') == 'YES'\n\nassert solution('''5 1 6 6 2 1 1\n''') == 'YES'"
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == 'YES'\nassert solution('''\n1 1 1 1 1 2\n''') == 'NO'\nassert solution('''\n3 1 3 2 1 1\n''') == 'NO'\n\nassert solution('''\n1 2 2 2 2 2\n''') == 'YES'\n\nassert solution('''\n1 2 3 2 2 2\n''') == 'NO'"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n\"\"\"\n\nfrom random import randint"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1\n1''') == '2'\nassert solution('''4 3\n1\n2''') == '1'\nassert solution('''3 3\n1\n1''') == '1'\nassert solution('''3 3\n3\n1''') == '2'\nassert solution('''8 4\n1\n2\n3\n4\n5\n6\n7\n8''') == '4'\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 3') == '2'"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1''') == '2'\nassert solution('''4 3''') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 3') == '2'\n\n---Output---\n\n2\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\n2''') == '2'\nassert solution('''4 3\n3''') == '2'\nprint(solution('''3 3\n3'''))\nprint(solution('''4 4\n4'''))\nprint(solution('''1 1\n1'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''3 3\n2'''))\nprint(solution('''4 4\n3'''))\nprint(solution('''4 3\n3'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''2 2\n1'''))\nprint(solution('''2 2\n2'''))\nprint(solution('''1 1\n2'''))\nprint(solution('''1 1\n2'''))\nprint(s"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '2'\nassert solution('4 3') == '2'\n\n'''\nimport math\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1\\n') == '1'\nassert solution('3 1\\n') == '2'\nassert solution('4 3\\n') == '2'\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6\n    0 1 0 1 1 1\n    \"\"\"\n    ) == \"4\"\nassert solution(\n    \"\"\"\n    2\n    0 1\n    \"\"\"\n    ) == \"0\"\nassert solution(\n    \"\"\"\n    1\n    0\n    \"\"\"\n    ) == \"0\"\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n0 1 0 1 1') == '4'\nassert solution('7\\n1 0 1 0 0 1 0') == '4'\nassert solution('1\\n0') == '0'\nassert solution('7\\n0') == '0'"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('1') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 1 0 1 1\n''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '0'\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('1') == '0'\n\n\n\n'''"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n0 1 0 1 1\n''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '0'\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 0 1 1') == '4'\nassert solution('7\\n1 0 1 0 0 1 0') == '4'\nassert solution('1\\n0') == '0'\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('1') == '0'"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 1 0 1 1\n''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '0'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n') == '2'\nassert solution('3 17\\n') == '3'\nassert solution('1 9\\n') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 17') == '3'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 3\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 17\n10 10 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 9\n10\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 10') == '3'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\nassert solution('4 1') == '4'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"1 2\") == '2'\nassert solution(\"1 9\") == '3'\nassert solution(\"2 3\") == '2'"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2\n''') == '2'\nassert solution('''3 17\n10 10 10\n''') == '3'\nassert solution('''1 9\n10\n''') == '-1'"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 3\n1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 17\n10 10 10\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 9\n10\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6') == '0'\nassert solution('3 5') == '2 3 2'\nassert solution('3 1') == '0 1 0'"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '4'\nassert solution('3 1') == '0'\nassert solution('4 1') == '1'\nassert solution('4 6') == '2 4 3 5'"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"3 1\") == \"1\""
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"3 5\") == \"2 3 2\"\nassert solution(\"3 1\") == \"0 1 0\"\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"4\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 1') == '1'\nassert solution('4 6') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"1 4 5\") == \"2\"\nassert solution(\"2 1 2 2\") == \"3\"\nassert solution(\"3 0 1\") == \"4\"\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 0 1\n''') == '4'\nassert solution('''\n3 1\n0 0 0\n''') == '1'\nassert solution('''\n4 6\n2 4 3 5\n''') == '0 2 4 3 5'\nprint(solution(*(input().split())))\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 1') == '1'\nassert solution('4 6') == '0'"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 1') == '0'\nassert solution('4 6') == '2 4 3 5'\nassert solution('10 10') == '0'"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\""
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\""
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\""
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '5\\n'\nassert solution('3\\n') == '13\\n'\n"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '5'\nassert solution('''\n3\n''') == '13'\nassert solution('''\n4\n''') == '21'\n"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\n"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '13'"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '5\\n'\nassert solution('3\\n') == '13\\n'"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\"\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nthequickbrownfoxjumpsoverthelazydog''') == 'YES'\nassert solution('''50\nthequickbrownfoxjumpsoverthelazydog''') == 'NO'\nassert solution('''51\nthequickbrownfoxjumpsoverthelazydog''') == 'YES'\nassert solution('''101\nthequickbrownfoxjumpsoverthelazydog''') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"NO\"\nassert solution(\"35\") == \"YES\"\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"NO\"\nassert solution(\"35\") == \"YES\"\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"TheQuickBrownFoxJumpsOverTheLazyDog\"\n) == \"YES\"\n\nassert solution(\n    \"toosmallword\"\n) == \"NO\"\n\nassert solution(\n    \"ThisIsATest\"\n) == \"NO\"\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('9') == 'YES'\nassert solution('5') == 'NO'\nassert solution('10') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\nA\"\"\") == \"NO\"\nassert solution(\"\"\"8\nthequickbrownfoxjumpsoverthelazydog\"\"\") == \"YES\"\nassert solution(\"\"\"35\nTheQuickBrownFoxJumpsOverTheLazyDog\"\"\") == \"NO\""
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\""
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1:23\n0''') == '00:23'\nassert solution('''8:05\n21''') == '08:05'\nassert solution('''10:12\n3''') == '10:12'\nassert solution('''17:56\n5''') == '17:56'\nassert solution('''20:00\n0''') == '20:00'\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\n\"\"\"\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"00:00\"\nassert solution(\"10:00\") == \"10:00\"\nassert solution(\"1:1\") == \"1:1\""
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10:10\") == \"10:10\"\nassert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"00:00\"\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''13:09''') == \"13:00\"\nassert solution('''04:01''') == \"04:10\"\nassert solution('''23:59''') == \"00:00\"\nassert solution('''20:20''') == \"22:10\"\nassert solution('''0:10''') == \"00:10\""
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"23:59\\n10\") == \"00:09\"\nassert solution(\"20:20\\n121\") == \"22:21\"\nassert solution(\"10:10\\n0\") == \"10:10\"\nprint(solution(input()))\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\") == \"YES\"\nassert solution(\"4 5\\n10100\\n01000\\n00110\\n00101\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n101\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"3 5\\n10011\\n11000\\n11000\\n11000\\n11000\") == \"YES\"\nassert solution(\"3 5\\n10011\\n11000\\n11000\\n11000\\n11000\\n11000\\n11000\\n11000\") == \"NO\""
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'YES', 'Error'\nassert solution('4 5') == 'NO', 'Error'\n\nassert solution('6 5') == 'YES', 'Error'\nassert solution('6 5') == 'NO', 'Error'\n\nassert solution('9 5') == 'YES', 'Error'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n10101\n01000\n00111\n10000\n''') == 'YES'\nassert solution('''\n4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''\n1 2\n2 1\n1 1\n''') == 'NO'\nassert solution('''\n1 2\n2 1\n1 1\n''') == 'YES'\nassert solution('''\n1 2\n2 1\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('4 5') == 'NO'"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\") == \"YES\"\nassert solution(\"4 5\\n10100\\n01000\\n00110\\n00101\") == \"NO\"\nassert solution(\"2 1\\n1 0\\n0 1\\n\") == \"NO\""
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('4 5') == 'NO'\nassert solution('5 1') == 'NO'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"YES\"\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4 2\n6 4\n''') == '0'\nassert solution('''\n3\n1 4\n2 3\n4 4\n''') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n4 3\n5 6\n6 5\n3 4\n4 3\n4 2\n2 4\n2 3\n3 4''') == '0'\nassert solution('''5\n2 4\n3 5\n1 2\n4 1\n2 3\n3 4\n5 6''') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 2 3\\n1 4\\n4 5\\n2 4\\n1 5\\n2 6\\n2 3\\n3 4') == '1'\nassert solution('3\\n5 2 3\\n1 4\\n4 5\\n2 4\\n1 5\\n2 6\\n2 3\\n3 4') == '0'\nassert solution('6\\n3 2 4 5 2 1\\n4 2 2 5 4 4\\n1 2 3 3 4\\n4 2 3 4 2\\n5 3 3 2 2\\n4 4 2 2 1') == '1'\nassert solution('6\\n3 4 5 2 1\\n4 2 2 5 4\\n5 3 3 2 2\\n4 4 2 2 1') == '0'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n6 4\n''') == '0'\nassert solution('''\n1 2\n3 4\n5 6\n''') == '1'\nassert solution('''\n2 3\n3 5\n4 6\n''') == '1'\nassert solution('''\n2 3\n4 6\n3 5\n''') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 2\n6 4\n''') == '0'\nassert solution('''\n1\n2 3\n''') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n4 2\n6 4\n''') == '0'\nassert solution('''\n1\n2 3\n4 4\n''') == '1'\nassert solution('''\n3\n1 4\n2 3\n4 4\n''') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 2\") == \"1\"\nassert solution(\"3\\n1 4\") == \"-1\"\nassert solution(\"2\\n3 4\") == \"1\"\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '0'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\"\nassert solution(\"3\\n5 6\\n24 7\\n61690850361 24777622630\") == \"NO\"\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n6 5\n16 13\n61690850361 24777622630\n34 33\n\"\"\") == \"YES\"\nassert solution(\"\"\"2\n6 5\n16 13\n61690850361 24777622630\n123433\n\"\"\") == \"NO\"\nassert solution(\"\"\"3\n6 5\n16 13\n61690850361 24777622630\n3191830435068605713421\n\"\"\") == \"NO\"\nassert solution(\"\"\"4\n6 5\n16 13\n61690850361 24777622630\n34 33\n\"\"\") == \"YES\""
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n7 6\n61690850361 24777622630\n61690850361 24777622630\n34 33\n''') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n10 10\\n5 5\\n') == 'YES\\n'\nassert solution('3\\n10 10\\n5 5\\n') == 'NO\\n'\nassert solution('4\\n5 5\\n12 8\\n10 10\\n8 8\\n') == 'YES\\n'\nassert solution('5\\n6 6\\n12 8\\n8 8\\n') == 'NO\\n'\nassert solution('6\\n7 7\\n12 8\\n8 8\\n') == 'NO\\n'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n6 5\n16 13\n61690850361 24777622630\n34 33\n''') == 'YES'\nassert solution('''5\n17 1\n3 4\n5 6\n9 12\n''') == 'NO'\nassert solution('''5\n11 3\n7 3\n9 5\n2 1\n''') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n6 5\\n16 13') == 'YES\\n'\nassert solution('2\\n6 1690850361 24777622630\\n34 33') == 'NO\\n'\nassert solution('2\\n61690850361 24777622630\\n34 33') == 'YES\\n'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n6 5\n16 13\n61690850361 24777622630\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n6 5\n16 13\n61690850361 24777622630\n34 33\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4\n6 5\n16 13\n61690850361 24777622630\n34 33\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4\n6 5\n16 13\n61690850361 24777622630\n34 33\n\"\"\") == \"YES\""
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n\n\n\"\"\"\n\nt = int(input())\n\nwhile t:\n    a,b = map(int,input().split())\n    a,b = int(a),int(b)\n    c = a*a - b*b\n    if isPrime(c):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n6 5') == 'YES\\n', 'First example'\nassert solution('2\\n6 5') == 'NO\\n', 'Second example'\nassert solution('3\\n6 5') == 'YES\\n', 'Third example'\nassert solution('4\\n6 5') == 'YES\\n', 'Fourth example'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\") == \"YES\"\nassert solution(\"4\\n6 5\\n61690850361 24777622630\") == \"YES\"\nassert solution(\"4\\n6 5\\n61690850361 24777622630\\n34 33\") == \"NO\"\nassert solution(\"4\\n6 5\\n61690850361 24777622630\\n34 33\\n16 13\") == \"NO\"\nassert solution(\"2\\n7\") == \"NO\"\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"1 1\\n-1 -1\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1\n-1 -1\n2 -1\n''') == 'Yes'\nassert solution('''4\n1 1\n2 2\n-1 1\n-2 2\n''') == 'No'\nassert solution('''3\n1 2\n2 1\n4 60\n''') == 'Yes'\nassert solution('''3\n1 1\n2 1\n4 60\n''') == 'No'\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Yes', \"1st example\"\nassert solution('4') == 'No', \"2nd example\"\nassert solution('5') == 'No', \"3rd example\"\n'''"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2\n1 1\n-1 -1\n2 -1\n\n''') == \"Yes\", \"First example\"\nassert solution(\n'''\n4\n1 2\n2 1\n-1 1\n-2 2\n\n''') == \"No\", \"Second example\"\nassert solution(\n'''\n3\n1 2\n2 1\n4 60\n\n''') == \"Yes\", \"Third example\"\n\n\n'''\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('4') == 'No'"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1\\n-1 -1\\n2 -1') == 'Yes'\nassert solution('3\\n1 1\\n-1 -1\\n2 -1') == 'No'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'Yes'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 'No'\n\n\n'''\nimport math"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 4\\n1 -1\\n2 3\") == \"Yes\"\nassert solution(\"5\\n1 1\\n2 -1\\n3 3\\n4 -1\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Yes'\nassert solution('3\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'No'\nassert solution('4\\n1 2\\n2 1\\n4 60\\n') == 'Yes'\n\"\"\""
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"100 300\") == \"10000000000\"\nassert solution(\"1000 1000\") == \"1\"\nassert solution(\"1000000 1000000\") == \"1000000\"\nassert solution(\"1000000 1000000\") == \"1000000\"\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '6'\nassert solution('12 13') == '0'\nassert solution('7 8') == '2'\nassert solution('100 9') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '6'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n''') == '6'\nprint('all test cases passed')\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n2 4\n''') == '6'\nassert solution('''\n4 3\n1 2\n''') == '1'"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '6'\nassert solution('2 2') == '1'\nassert solution('1 2') == '2'"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 3') == '6'\nassert solution('4 4') == '1'\nassert solution('16 10') == '1'\nassert solution('16 10') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n\n''') == '6'\n\nassert solution('''1 2\n\n''') == '2'\n\nassert solution('''7 8\n\n''') == '1'\n\nassert solution('''7 8\n\n''') == '7'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9 8\"\nassert solution(\"512\") == \"4608 4096\"\nassert solution(\"123\") == \"4608 4096\"\nassert solution(\"256\") == \"4608 4096\"\nassert solution(\"1234\") == \"4608 4096\"\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2 4'\nassert solution('512') == '2 4 8'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n7 8\n''') == '9 8'\nassert solution('''512\n4608 4096\n''') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9 8'\nassert solution('512') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9 8'\nassert solution('512') == '4608 4096'"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5''') == '9 8'\nassert solution('''512''') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n''') == '1776 8448'\nassert solution('''\n13\n''') == '512 840'\nassert solution('''\n4096\n''') == '4096 4096'\nassert solution('''\n5\n''') == '1024 4'\nassert solution('''\n3\n''') == '1024 4'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9 8'\nassert solution('512') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '8 8'\nassert solution('1') == '9 8'\nassert solution('512') == '4608 4096'"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\") == \"35\"\nassert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 4 10\") == \"35\"\nassert solution(\"3 5 10\") == \"35\"\nassert solution(\"3 6 10\") == \"35\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 10\n1 2 20\n2 3 30\n1 3 45\n\n''') == '35'\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"5 4 2\") == \"14\"\nassert solution(\"5 5 4\") == \"18\"\nassert solution(\"7 5 7\") == \"14\"\nassert solution(\"15 5 15\") == \"18\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"2 3 10\") == \"50\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n\nassert solution(\"3 5 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"-1\"\n\nassert solution(\"2 5 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"20\"\n\"\"\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 10\") == \"35\""
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 3 10\\n\"\n    \"1 2 20\\n\"\n    \"2 3 30\\n\"\n    \"1 3 45\"\n) == \"35\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 5\") == \"0\"\nassert solution(\"4 4 10\") == \"0\"\nassert solution(\"4 4 5\") == \"5\""
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\") == \"35\"\nassert solution(\"5 3 10\") == \"35\"\nassert solution(\"3 2 10\") == \"-1\"\nassert solution(\"5 1 10\") == \"-1\"\nassert solution(\"5 3 10\") == \"35\"\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 50\") == \"35\"\nassert solution(\"10 2 10\") == \"15\"\nassert solution(\"10 2 30\") == \"15\"\nassert solution(\"10 2 45\") == \"15\"\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '9'\nassert solution('5') == '-1'\nassert solution('3') == '7'"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nba 3\nabc 4\ncbaa 5''') == '7'\nassert solution('''4\nba 4\nabc 1\ncbaa 1''') == '9'\nassert solution('''8\nba 4\nabc 1\ncbaa 1''') == '-1'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nab\ncba\n''') == '7'\nassert solution('''\n2\nba\nabc\ncbaa\n''') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"9\"\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"3\") == \"7\""
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '7'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nba 3\nabc 4\ncbaa 5\n''') == '7'\nassert solution('''\n1\nba 1\nabc 2\ncbaa 3\n''') == '9'\nassert solution('''\n3\nabc 3\nba 4\ncbaa 5\n''') == '7'\nassert solution('''\n3\nabc 4\nba 5\ncbaa 6\n''') == '7'\nassert solution('''\n3\nba 3\nabc 4\ncbaa 5\n''') == '9'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '7'\nassert solution('5') == '14'\nassert solution('20') == '-1'\nassert solution('50') == '-1'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3\n    ba 3\n    abc 4\n    cbaa 5\n    \"\"\") == \"7\"\nassert solution(\"\"\"\n    5\n    abcb 3\n    aabb 2\n    aba 2\n    aacb 1\n    aabbb 1\n    \"\"\") == \"9\"\nassert solution(\"\"\"\n    6\n    ba 3\n    abc 4\n    cbaa 5\n    cba 9\n    aab 5\n    cbaa 6\n    \"\"\") == \"10\"\nassert solution(\"\"\"\n    10\n    ba 3\n    abc 4\n    cbaa 5\n    cba 9\n    aab 5\n    cbaa 6\n    aacb 1\n    aabb 2\n    aba 2\n    aacb 3\n    aabbb 1\n    aabbb 2\n    aabbb 3\n    \"\"\") == \"15\"\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nprint(solution(''))"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\n\n\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n2 3\n2 4\n2 5''') == '7'\nassert solution('''4 6\n1 2\n2 3\n2 4\n2 5''') == '7'\nassert solution('''6 6\n1 2\n2 3\n2 4\n2 5''') == '7'\n\n'''\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n''') == '7'\nassert solution('''6 6\n''') == '7'\nassert solution('''4 4\n''') == '0'\nassert solution('''4 5\n''') == '1'\nassert solution('''4 5\n''') == '0'\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '7'\nassert solution('6 6') == '7'\nassert solution('10 10') == '5'\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '7'\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1 2\\n2 1\") == \"3\"\nassert solution(\"4 1\\n1 2\\n2 1\\n2 2\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1\n1 2\n2 1\n2 2\n2 3\n''') == '4', 'Wrong result'\nassert solution('''10\n1 1\n1 2\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n4 1\n4 2\n4 3\n4 4\n''') == '2', 'Wrong result'\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 1\\n1 2') == '3'\nassert solution('3\\n1 1\\n1 2\\n2 1') == '4'"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2\\n2 1') == '3'\nassert solution('4 1\\n1 2\\n2 1\\n2 2') == '4'\n\n\n'''"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n4\n1 1\n1 2\n2 1\n2 2\n''') == '3'\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1\n1 2\n2 1\n''') == '3'\nassert solution('''4\n1 1\n1 2\n2 1\n2 2\n''') == '4'''\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\", \"Wrong result\"\nassert solution(\"3\") == \"4\", \"Wrong result\"\nassert solution(\"4\") == \"2\", \"Wrong result\"\n\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, n: int) -> str:\n        if n < 2:\n            return 0\n        a = 0\n        b = n-1\n        c = 1\n        max_ = n\n        while a <= b:\n            if a + c <= b + c:\n                a = a + 1\n                c = c + 1\n                max_ = c\n            else:\n                a = a + 1\n                c = c + 1\n        return max_"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 1\n2 2\n''') == '4'\nassert solution('''\n4\n1 1\n1 2\n2 1\n2 2\n''') == '2'\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1 2\n2 1\n''') == '3'\n\nassert solution('''\n4\n1 1\n1 2\n2 1\n2 2\n''') == '4'\n\nassert solution('''\n5\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n''') == '5'\n\nassert solution('''\n5\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2\n''') == '5'\n\n\"\"\""
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"nniinneetteeeenn\") == \"2\"\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == \"2\"\nassert solution(\"nineteenineteen\") == \"2\"\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\nassert solution(\"\") == 0\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\nassert solution('peppermintwister') == '2'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6\n3 4''') == '5'\n\nassert solution('''2 2\n3 4''') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('10 20') == '-1'"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 6]) == \"5\"\nassert solution([3, 4]) == \"-1\"\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '5'\nassert solution('3 4') == '-1'\nassert solution('10 10') == '-1'\nassert solution('4 5') == '5'\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 6\n    ''') == '5'\nassert solution('''\n    3 4\n    ''') == '-1'"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"40\"\nassert solution(\"7 3 50\\n62 0 0 0 99 33 22\") == \"30\"\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\") == \"20\""
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '40'\n\n\"\"\""
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1 20\n0 27 32 21 19\n''') == '40'\nassert solution('''7 3 50\n62 0 0 0 0 99 33 22\n''') == '30'\nassert solution('''10 5 100\n1 0 1 0 0 0 0 0 1 1\n''') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 1 20\n0 27 32 21 19\n\"\"\") == \"40\"\nassert solution(\"\"\"\n7 3 50\n62 0 0 0 99 33 22\n\"\"\") == \"30\"\nassert solution(\"\"\"\n10 5 100\n1 0 1 0 0 0 0 0 1 1\n\"\"\") == \"20\"\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 20\") == \"40\"\nassert solution(\"5 1 20\") == \"40\"\nassert solution(\"7 3 50\") == \"30\""
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10 100\") == \"40\"\nassert solution(\"7 3 50\") == \"30\"\nassert solution(\"10 5 100\") == \"20\"\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3 20\n0 27 32 21 19\n''') == '40'\nassert solution('''\n7 3 50\n62 0 0 0 99 33 22\n''') == '30'\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"40\"\nassert solution(input) == \"30\"\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\\n\") == \"40\"\nassert solution(\"7 3 50\\n62 0 0 0 99 33 22\\n\") == \"30\"\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 20') == '40'\nassert solution('7 3 50') == '30'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nprint(solution(input()))\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 3') == 'NO'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 1\n6 1\n1 6\n1 1\n''') == 'YES'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'NO'\n\n\"\"\""
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n6 1\n1 6\n1 1\n\n2 2\n4 4\n4 5\n5 4\n4 4\n''') == 'YES'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'NO'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 1\\n6 1\\n1 6\\n1 1\\n') == 'YES'\nassert solution('2 2\\n4 4\\n4 5\\n5 4\\n4 4\\n') == 'YES'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'YES', solution.__doc__\nassert solution('''\n2 2\n6 1\n1 6\n1 1\n''') == 'YES', solution.__doc__"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"YES\""
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 1\n6 1\n1 6\n1 1\n''') == 'YES'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'YES'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'NO'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abcd\\ndefgh') == '5'\nassert solution('a\\na') == '-1'\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abcd\") == \"5\"\nassert solution(\"a\") == \"-1\"\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abcd') == '5'\nassert solution('defgh') == '-1'\nassert solution('a') == '-1'\n\"\"\""
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abcd\") == 5\nassert solution(\"a\") == -1\nassert solution(\"\") == -1"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abcd\") == \"5\"\nassert solution(\"a\") == \"-1\""
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''abcd\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abcd') == '5'\nassert solution('defgh') == '-1'\n\n\"\"\""
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abcd') == '5'\nassert solution('a') == '-1'\nassert solution('ab') == '-1'\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abcd') == '5'\nassert solution('defgh') == '-1'\nassert solution('a') == '-1'\nassert solution('a') == '-1'"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abcd\") == \"5\"\nassert solution(\"a\") == \"-1\"\nassert solution(\"\") == \"-\"\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n9 19\n''') == '82'\nassert solution('''\n2 1\n15 18\n''') == '-1'\nassert solution('''\n3 1\n10 5\n''') == '-1'\nassert solution('''\n4 1\n2 2\n''') == '-1'\nassert solution('''\n8 1\n4 2\n''') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n20 19\\n\") == \"82\"\nassert solution(\"2 1\\n16 12\\n\") == \"-1\"\nassert solution(\"3 4\\n8 9\\n\") == \"-1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 2\n9 19\n\n''') == '82'\nassert solution('''2 1\n16 12\n\n''') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == \"82\"\nassert solution('2 1') == \"-1\"\nassert solution('3 4') == \"0\"\nassert solution('4 5') == \"1\"\nassert solution('5 6') == \"1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n10 10\n10 12\n4 9''') == '1'\nassert solution('''4 1\n10 10\n10 12\n4 9''') == '82'\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == '-1'\nassert solution(\"20 2\") == '82'\nassert solution(\"2 1\") == '82'\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 2') == \"82\"\nassert solution('2 1') == \"-\"\nassert solution('8 12') == \"1\""
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '-1'\nassert solution('20 2') == '82'\nassert solution('2 1') == '-1'\nassert solution('20 1') == '-1'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        a,b = list(map(int,stdin.split()))\n        c,d = list(map(int,stdin.split()))\n        if a<=c:\n            if a<=d:\n                if b<=c:\n                    if b<=d:\n                        return '-1'\n                    else:\n                        return str(d-(c-b))\n                else:\n                    return str((d+b)-(c-b))\n            else:\n                return str((d+c)-(c-b))\n        else:\n            if b<=d:\n                if a<=d:\n                    return str(d-(b-c))\n                else:\n                    return str((d+c)-(b-c))\n            else:\n                return str((d+c)-(b-c))"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 2') == '82'\nassert solution('2 1') == '-1'"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('233') == '77 77 79'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"1 1 1\"\nassert solution(\"233\\n\") == \"77 77 79\"\nassert solution(\"1\\n\") == \"1 1 1\"\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('1000000000') == '1000000000 1000000000 1000000000'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2''') == '1 2'\nassert solution('''4\n3\n3\n2\n2''') == '1 2 3 1'\nassert solution('''12\n6\n6\n5\n4\n4\n4\n4''') == '1 2 3 4 1 4 5'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\nassert solution(\"12345\") == \"1 1 1 1 1 1\"\nassert solution(\"12345678\") == \"1 1 1 1 1 1 1\"\nassert solution(\"123456789\") == \"1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1 1 1'\nassert solution('3') == '1 1 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('4') == '2 2 2'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\nassert solution(\"222\") == \"2 2 2\"\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('12 1 1 3 2') == '0'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 1 1 2\n''') == '2'\nassert solution('''\n3 3 1 2 3\n''') == '6'\nassert solution('''\n3 5 1 1 2\n''') == '0'\nassert solution('''\n3 1 1 1 2\n''') == '2'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2 3') == '6'\nassert solution('2 1 1 1 2') == '2'\nassert solution('4 3 1 2 3') == '0'\nassert solution('5 5 1 2 3') == '12'\nassert solution('3 6 1 2 3') == '0'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1 1 1 2\n''') == '2'\nassert solution('''\n3 3 1 2 3\n''') == '6'\nassert solution('''\n1 5 7 5 1\n''') == '1'\nassert solution('''\n3 3 1 2 3\n''') == '6'\nassert solution('''\n4 4 1 2 3\n''') == '0'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2 3\") == \"6\"\nassert solution(\"3 3 1 1 2\") == \"2\"\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2 3\") == \"6\"\nassert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"2 1 1 1 1\") == \"1\""
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 1 1 2\n''') == '2'\nassert solution('''\n3 3 1 2 3\n''') == '6'\n\n\"\"\"\n\n\n\n\n\n\"\"\"\n1152. [Medium] Calculate the minimum number of coins needed to make change\n\nYou are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\n\nExample 1:\n\nInput: coins = [1, 2, 5], amount = 11\nOutput: 3\nExplanation: 11 = 5 + 5 + 1\nExample 2:\n\nInput: coins = [2], amount = 3\nOutput: -1\nExample 3:\n\nInput: coins = [1], amount = 0\nOutput: 0\nExample 4:\n\nInput: coins = [1], amount = 1\nOutput: 1\nExample 5:\n\nInput: coins = [1], amount = 2\nOutput: 2\n\n\n---\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '8'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 1\n1 2''') == '8'\nassert solution('''5 3\n1 2\n1 2''') == '9'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\\n\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\\n\") == \"1\""
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '8'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 1\n1 2\n''') == '8'\nassert solution('''4 3\n9 2\n0 1\n''') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n') == '8'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 1\n1 2''') == '8'\n\nassert solution('''4 3\n9 2\n0 1\n\n''') == '1'"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '8'\nassert solution('9 2') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 1\\n1 2\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"0\"\nassert solution(\"1 1\\n1 2\") == \"1\""
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == output_string, \"Should be %s, but was %s\" % (output_string, solution(input_string))\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 4 3 2\n6 8''') == '4'\nassert solution('''5\n0 3 3 4 2\n3 10''') == '4'\nassert solution('''2\n2 5\n3 6''') == '0'\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 4 3 2') == '3'\nassert solution('5\\n0 3 3 4 2') == '0'"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 4 3 2\n6 8''') == '4'\nassert solution('''5\n0 3 3 4 2\n3 10''') == '0'\nassert solution('''3\n2 5\n3 6''') == '4'\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"0 3 3 4 2\") == \"4\"\nassert solution(\"6 8\") == \"0\""
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"4\"\nassert solution(input_3) == \"0\""
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"4\"\nassert solution(input_) == \"4\"\nassert solution(input_) == \"4\"\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 4 3 2\n6 8\n\n''') == '4'\nassert solution('''\n5\n0 3 3 4 2\n3 10\n\n''') == '0'\n\nassert solution('''\n2\n2 5\n3 6\n\n''') == '0'\nassert solution('''\n3\n0 3 3 4 2\n3 10\n\n''') == '2'\n\nassert solution('''\n3\n1 4 3 2\n6 8\n\n''') == '0'"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"5\n4 4 3 2 1\n6 8\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"5\n3 4 3 2 1\n10 15\n\"\"\") == \"3\"\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 4 3 2\\n6 8\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\") == \"4\""
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3 4 3 2\n6 8''') == '4'\nassert solution('''5\n0 3 3 4 2\n3 10''') == '4'\nassert solution('''2\n2 5\n3 6''') == '0'"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'\n\n'''\n\nstdin = input()\nn, k, A, B = map(int, stdin.split())"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"8\"\nassert solution(\"5\") == \"4\"\nassert solution(\"19\") == \"12\"\n\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '8'\nassert solution('5') == '4'\nassert solution('19') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9\n2\n3\n1''') == '6'\nassert solution('''5\n5\n2\n20''') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('5\\n5\\n2\\n20\\n') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"8\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"12\"\nassert solution(\"19\\n3\\n4\\n2\\n\") == \"12\""
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '6'\nassert solution('5') == '8'\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"8\"\nassert solution(\"5\") == \"4\"\nassert solution(\"19\") == \"12\"\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\\n2\\n3\\n1\") == \"6\"\nassert solution(\"5\\n5\\n2\\n20\") == \"12\"\n\n\n\"\"\"\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"6 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"10\") == \"10 2\"\nassert solution(\"1\") == \"1 2\"\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT_20) == OUTPUT_20\nassert solution(INPUT_5184) == OUTPUT_6_4\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2 2\"\nassert solution(\"200\") == \"6 4\"\nassert solution(\"100000000\") == \"6 4\"\nassert solution(\"0\") == \"2 2\"\nassert solution(\"4\") == \"2 1\"\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '2 2'\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\""
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\n8\n''') == '5 2'\nassert solution('''40\n70\n''') == '6 4'\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5184\n    ''') == '10 2'\nassert solution('''5\n    ''') == '6 4'\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '10 2'\nassert solution('100') == '100 2'\nassert solution('1296') == '6 4'\nassert solution('2147') == '22 7'\n\n\"\"\"\n\n\nfrom math import sqrt\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"1 2\"\nassert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"36\") == \"8 6\"\nassert solution(\"8\") == \"8\"\n\n'''"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n8 7 6\\nrsrpr\") == \"27\"\nassert solution(\"5 2\\n1 1 1 1\\nrsrpr\") == \"1\"\nassert solution(\"5 2\\n5 7 6\\nrsrpr\") == \"27\"\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '6'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1\") == \"27\"\n\nassert solution(\"5 2 1\") == \"27\"\nassert solution(\"5 2 1 2 3\") == \"19\"\nassert solution(\"5 2 1 2 3 4\") == \"21\"\n\n################################################################################################\n\"\"\"\nimport sys\n\nsys.stdin = open('input.txt')\n\nfrom collections import deque\n\nN, K = map(int, input().split())\nt = input()\n\nmax_score = 0\n\nfor i in range(N):\n    t_sum = 0\n    t_len = len(t)\n    if t[i] == 'r':\n        t_sum += 3\n    if t[i] == 'p':\n        t_sum += 2\n    if t[i] =='s':\n        t_sum += 1\n\n    if t_sum > max_score:\n        max_score = t_sum\n\n    t_len -= 1\n    if i == t_len:\n        break\n    \n    t_sum = 0\n    if t[i] == 'r':\n        t_sum += 1\n    if t[i] == 'p':\n        t_sum += 2\n    if t[i] =='s':\n        t_sum += 3\n    if t_sum > max_score:\n        max_score = t_sum"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\npsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrsrs''') == '36'\nassert solution('''5 2\n8 7 6\nrspr''') == '24'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == \"27\"\nassert solution(\"5 2\") == \"27\"\nassert solution(\"4 2\") == \"27\"\n\nprint(solution(input()))"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\npsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrpspr''') == '27'\nassert solution('''5 2\n8 7 6\npprr''') == '27'\nassert solution('''5 2\n8 7 6\nrps''') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5 2\") == \"27\"\nassert solution(\"1\\n5 2\\nssrpr\") == \"27\"\nassert solution(\"1\\n5 2\\nrsrpr\") == \"27\"\nassert solution(\"1\\n5 2\\npppsr\") == \"27\"\nassert solution(\"1\\n5 2\\nrrrpr\") == \"27\"\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '27'\nassert solution('') == '0'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n8 7 6\\nrsrpr') == '27'\nassert solution('5 2\\n8 7 6\\nsss') == '28'\nassert solution('1000000 1\\n3 1 2\\n1 2\\n1 1') == '4999999'\nassert solution('10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n10 1\\n
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\""
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\""
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''2 1 2''') == '7'\nassert solution('''3 5 2''') == '11'\nassert solution('''1000000000 1000000000 1000000000''') == '4000000000'\n"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 1, 1]) == 4\nassert solution([2, 1, 2]) == 7\nassert solution([3, 5, 2]) == 11\nassert solution([1000000000, 1000000000, 1000000000]) == 4000000000\n"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 4\nassert solution('2 1 2') == 7\nassert solution('3 5 2') == 11\nassert solution('1000000000 1000000000 1000000000') == 4000000000\n"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == 4\nassert solution('2 1 2') == 7\nassert solution('3 5 2') == 11\nassert solution('1000000000 1000000000 1000000000') == 4000000000\n"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '4000000000'"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''2 1 2''') == '7'\nassert solution('''3 5 2''') == '11'\nassert solution('''2 20000001 20000001 20000001''') == '4000000000'"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 1 1\"\n) == \"4\"\n\nassert solution(\n    \"2 1 2\"\n) == \"7\"\n\nassert solution(\n    \"3 5 2\"\n) == \"11\"\n\nassert solution(\n    \"1000000000 1000000000 1000000000\"\n) == \"4000000000\""
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"4\", \"One string\"\nassert solution(\"2 1 2\") == \"7\", \"Two strings\"\nassert solution(\"3 5 2\") == \"11\", \"Three strings\"\nassert solution(\"2 2 1\") == \"6\", \"Two strings\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\", \"One billion strings\""
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 5 18 4') == '4 1'\nassert solution('5 3 5 16 4') == '-1'\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 3 5 18 4\n3 5 4\n\"\"\") == \"4 1\"\n\nassert solution(\"\"\"\n5 3 5 16 4\n5 5 5\n\"\"\") == \"-1\""
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 5 18 4') == '4 1'\nassert solution('5 3 5 16 4') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 5 18 4\\n3 5 4') == '4 1'\nassert solution('5 3 5 16 4\\n5 5 5') == '-1'\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 n \u0447\u0438\u0441\u0435\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0434\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432. \u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0435\u0442 n-1 \u0447\u0438\u0441\u0435\u043b \u0437\u0430\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0442\u0435\u0441\u0442\u043e\u0432.\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e k, \u0440\u0430\u0432\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u0430 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0437\u0430\u0434\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430.\n\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e x, \u0440\u0430\u0432\u043d\u043e\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u0435 \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0415\u0441\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442 x, \u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0447\u0438\u0441\u043b\u0430 \u0437\u0430\u0434\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0415\u0441\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0440\u0430\u0432\u043d\u0430 x, \u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0447\u0438\u0441\u043b\u0430 \u0437\u0430\u0434\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430.\n\n\u0412 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e y, \u0440\u0430\u0432\u043d\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u0438 \u043c\u0435\u0434\u0438\u0430\u043d \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0439 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0415\u0441\u043b\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0440\u0435\u0434\u0438 \u043c\u0435\u0434\u0438\u0430\u043d \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0442\u0435\u0441\u0442\u043e\u0432, \u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u0447\u0438\u0441\u043b\u0430 \u0437\u0430\u0434\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430. \u0415\u0441\u043b\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0440\u0435\u0434\u0438 \u043c\u0435\u0434\u0438\u0430\u043d \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 5 18 4\n3 5 4\n''') == '4 1'\nassert solution('''\n5 3 5 16 4\n5 5 5\n''') == '-1'\nassert solution('''\n5 3 5 16 4\n5 6 5\n''') == '5\u00a03'\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4 1'\nassert solution('5 3 5 18 4') == '4 1'\nassert solution('5 3 5 16 4') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\nprint(solution(*[*map(int, input().split())]))\n\n\nhttps://app.codility.com/programmers/lessons/3-time_complexity/median_of_medians_4/\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 5 18 4\n3 5 4\n''') == '4 1'\nassert solution('''\n5 3 5 16 4\n5 5 5\n''') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 5 16 4\\n3 5 4\\n\") == \"4 1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 3 5 18 4\\n\"\n    \"3 5 4\\n\"\n) == \"4 1\"\n\nassert solution(\n    \"5 3 5 16 4\\n\"\n    \"5 5 5\"\n) == \"-1\""
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\""
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\n\"\"\""
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('sumimasen') == \"YES\"\nassert solution('ninja') == \"YES\"\nassert solution('codeforces') == \"NO\"\n\n\n\n'''\n\ns = input()\ns = s.lower()\n"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\n'''\n\nimport re"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('3 1') == '1'\n\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '4'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '4'\nassert solution('4 5') == '2'\nassert solution('12 13') == '2'\nassert solution('1 2') == '1'\nassert solution('12 13') == '2'\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"7 0\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"7 21\") == \"16\""
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '4'\nassert solution('7 0') == '0'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n1 3\n1 4''') == '3'\nassert solution('''7 0\n''') == '0'\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\n\nassert solution('''1 2\n2 3\n3 4''') == '1'\nassert solution('''1 1\n2 2\n2 2\n2 2\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"7 0\") == \"0\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 0\") == \"0\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2\n2 3\n3 4\n4 1\n\n''') == '4'\n\nassert solution('''\n7 0\n\n''') == '0'\n\nassert solution('''\n3 1\n1 3\n\n''') == '1'"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3\\n\") == \"1\"\nassert solution(\"3 1\\n2 3\\n\") == \"1\"\nassert solution(\"4 1\\n1 3\\n3 4\\n1 4\\n2 3\\n\") == \"4\"\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"40\""
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"18\"\nprint(solution())"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '40'\nassert solution('4 1') == '18'\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"400\"\nassert solution(\"4 1\") == \"18\"\nassert solution(\"3 2\") == \"40\""
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 3 7 5\") == \"18\"\nassert solution(\"3 2\") == \"400\"\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 1\n1 3 7 5\n3\n\n\"\"\") == \"18\"\nassert solution(\"\"\"\n3 2\n10 3 8\n2 3\n\n\"\"\") == \"40\"\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '40'\nassert solution('4 1') == '18'\nassert solution('5 6') == '400'\nassert solution('6 7') == '500'\nassert solution('7 8') == '600'\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 1\n1 3 7 5\n3\n\"\"\") == \"18\"\nassert solution(\"\"\"\n3 2\n10 3 8\n2 3\n\"\"\") == \"40\"\nassert solution(\"\"\"\n10 10\n1 3 7 5\n3\n\"\"\") == \"40\"\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"40\"\nassert solution(\"4 1\") == \"18\"\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '40'\nassert solution('4 1') == '18'\nassert solution('2 2') == '400'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n\") == \"4930\""
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    '19',\n    '40',\n    '60',\n    '80',\n    '100'\n]) == '4900'"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n') == '4900'\nassert solution('119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n') == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 40 60 80 100') == '4900'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('0 0 0 0 0') == '0'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20 40 60 80 100\n0 1 2 3 4\n1 0\n''') == '4900'\nassert solution('''119 119 119 119 119\n0 0 0 0 0\n10 0\n''') == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([20, 40, 60, 80, 100]) == '4900'\nassert solution([119, 119, 119, 119, 119]) == '4930'\nassert solution([119, 119, 119, 119, 119]) == '4930'\nassert solution([119, 119, 119, 119, 119]) == '4930'\nassert solution([119, 119, 119, 119, 119]) == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2 3 4\\n20 0 0 0 0\\n1 0\") == \"4900\"\nassert solution(\"20 40 60 80 100\\n0 0 0 0 0\\n1 0\\n2 3 4\\n1 2\\n0 0\\n0 0\") == \"4910\"\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\") == \"4930\"\nassert solution(\"1 1 1 1 1\\n0 0 0 0\") == \"1\"\nassert solution(\"1 1 1 1 1\\n10 0\") == \"1\"\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 40 60 80 100\n0 1 2 3 4\n1 0\n''') == '4900'\nassert solution('''\n119 119 119 119 119\n0 0 0 0 0\n10 0\n''') == '4930'\nassert solution('''\n3 0 0 0 0\n1 1 2\n''') == '1'\nassert solution('''\n20 40 60 80 100\n0 1 2 3 4\n1 0\n''') == '50'\nassert solution('''\n119 119 119 119 119\n0 0 0 0 0\n10 0\n''') == '118'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 40 60 80 100\") == \"4900\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"10 0\") == \"10\"\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1 1\n''') == '1'\n\nassert solution('''\n1 2 1 2\n''') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 1 1\n''') == '1'\nassert solution('''1 2 1 2\n''') == '2'\nassert solution('''3 2 1 2\n''') == '2'"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nprint(solution('''3 3 1 1\n2\n3 2 1 1\n1 2 1 1\n3 1 1 1\n1 2 1 1\n2 3 1 1\n3 2 1 1\n1 1 1 1\n3 3 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n3 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n3 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n3 2 1 1\n1 1 1 1\n1 2 1 1\n3 2 1 1\n1 2 1 1\n1 1 1 1\n3 1 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n2 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n2 2 1 1\n1 1 1 1\n2 2 1 1\n3 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n3 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n3 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n2 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n2 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n1 2 1 1\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 1\\n\") == \"1\"\nassert solution(\"1 2 1 2\\n\") == \"2\"\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 1 1\n2\n''') == '1'\nassert solution('''1 2 1 2\n2\n''') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 1\n''') == '1'\nassert solution('''1 2 1 2\n''') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2 1 1\n''') == '1'\nassert solution('''\n1 2 1 2\n''') == '2'\nprint('Congratulations! Your submission is CORRECT.')\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\""
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n2 10\n11 5\n9 4\n3 12\n''') == 'Impossible'\nassert solution('''\n2 3\n2 4 5\n4 5 6\n3 6 7\n8 10 11\n''') == 'Possible'\nassert solution('''\n3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\n''') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\") == \"Impossible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Possible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12') == 'Impossible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"Impossible\"\nassert solution(\"2 2\") == \"Possible\"\nassert solution(\"3 2\") == \"Possible\"\nassert solution(\"2 3\") == \"Possible\"\nassert solution(\"3 2\") == \"Impossible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"Possible\""
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12') == 'Impossible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8') == 'Possible'\nassert solution('3 3\\n1 2\\n2 1\\n3 2\\n3 3\\n3 4\\n4 1') == 'Impossible'\n\nstdin = '2 2\\n2 10\\n11 5\\n9 4\\n3 12'\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Impossible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Impossible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12') == 'Impossible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == 'Possible'\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 5 5\n\"\"\") == \"11\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n\"\"\") == \"0\"\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5 5\") == \"11\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"3\"\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 5 5\n''') == '11'\nassert solution('''3\n1 1 2\n''') == '3'\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == 11\nassert solution(\"3\") == 3\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 11\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 5 5') == '11'\nassert solution('3\\n1 1 2') == '3'"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"abcd\") == 1\nassert solution(\"aabcbcbcbcb\") == 4\nassert solution(\"abcccaabbccbb\") == 6\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '11'\nassert solution('3') == '10'\nassert solution('3') == '9'\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 5 5\n''') == \"11\"\nassert solution('''3\n1 1 2\n''') == \"3\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\nassert solution('''\n3 3\n2 1 9\n''') == '1'\n\nassert solution('''\n4 20\n10 3 6 3\n''') == '0'\n\nassert solution('''\n10 30\n10 3 6 3\n''') == '1'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 20') == '0'\n\n'''"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 20\") == \"0\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == '0'\n\n\"\"\""
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 20') == '0'\n\"\"\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n2 1 9\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 20\n10 3 6 3\n\"\"\") == \"0\"\n\nprint(solution('''\n3 3\n2 1 9\n'''))\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2 9\n''') == '1'\n\nassert solution('''\n4 20\n10 3 6 3\n''') == '0'"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1'\nassert solution('4 20') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 9\") == \"1\"\n\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == \"1 2 3\\n\"\nassert solution('10') == \"2 3 5\\n\"\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '1 3'\nassert solution('1 2') == '1 2'\nassert solution('2 3') == '2 3'\n\nassert solution('''\n6\n1 2\n1 3\n1 5\n\n''') == '1 2 3'\nassert solution('''\n3\n1 2\n1 3\n1 5\n\n''') == '1 3 2'\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n1 3\n''') == '1 2 1'\nassert solution('''\n6\n1 5\n2 6\n3 7\n''') == '1 2 3'\nassert solution('''\n10\n1 2\n1 3\n1 5\n''') == '2 3 5 1 2 2'\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2 2 2'\nassert solution('10') == '2 3 5'"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 2'\nassert solution('10') == '2 3 5'\nassert solution('6') == '2 3 5'\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10\n1 5\n2 6\n3 7\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"1 2 3\"\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"1 2\"\nassert solution(\"2 6\") == \"2 3\"\nassert solution(\"3 7\") == \"3 5\"\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2 3'\nassert solution('10') == '2 3 5'"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\\n\") == \"1 2\"\nassert solution(\"1\\n2\\n3\\n\") == \"1 2 3\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1 2 3 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 5\n2 6\n3 7\n''') == '1 2 3'\n\nassert solution('''\n10 1\n1 2\n1 3\n1 5\n''') == '2 3 5'\n\nassert solution('''\n6 1\n2 2\n2 2\n\n''') == '2 2 2'\n\nassert solution('''\n6 10\n1 2\n1 3\n1 5\n\n''') == '2 3 5'"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'UP'\nassert solution('7') == 'DOWN'\nassert solution('1') == '-1'"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 4 5 6 7\n''') == 'UP'\nassert solution('''7\n12 13 14 15 14 13 12\n''') == 'DOWN'\nassert solution('''1\n8\n''') == '-1'"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5], \"3 4 5 6 7\") == \"DOWN\"\nassert solution([7], \"12 13 14 15 14 13 12\") == \"UP\"\nassert solution([1], \"8\") == \"-1\"\n"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'UP'\nassert solution('7') == 'DOWN'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\"\n    ) == \"UP\"\nassert solution(\n    \"7\"\n    ) == \"DOWN\"\nassert solution(\n    \"1\"\n    ) == \"-1\""
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 4 5 6 7\n''') == 'UP'\nassert solution('''7\n12 13 14 15 14 13 12\n''') == 'DOWN'\nassert solution('''1\n8\n''') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == \"UP\"\nassert solution('2') == \"DOWN\"\nassert solution('3') == \"DOWN\"\nassert solution('4') == \"UP\"\nassert solution('5') == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"UP\"\nassert solution(\"7\") == \"DOWN\"\nassert solution(\"1\") == -1"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'UP', 'Sample #1'\nassert solution('7') == '-1', 'Sample #2'\nassert solution('1') == '-1', 'Sample #3'"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"DOWN\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"UP\"\nassert solution(\"1\\n8\") == \"-1\"\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''a\nu''') == 'Yes'\nassert solution('''abc\nukm''') == 'Yes'\nassert solution('''akm\nua''') == 'No'"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('ua') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"ua\") == \"No\"\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\", \"u\") == \"Yes\"\nassert solution(\"abc\", \"ukm\") == \"Yes\"\nassert solution(\"akm\", \"ua\") == \"No\""
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('ua') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\", \"u\") == \"Yes\"\nassert solution(\"akm\", \"ua\") == \"No\"\nassert solution(\"akm\", \"k\") == \"No\""
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"ab\") == \"No\"\nassert solution(\"a1\") == \"No\"\nassert solution(\"a1b\") == \"No\"\nassert solution(\"abcd\") == \"Yes\"\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\".B....B.\") == \"A\"\nassert solution(\".B....W.\") == \"B\"\nassert solution(\".W.....\") == \"A\"\nassert solution(\".W......\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nA''') == 'A'\nassert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nB''') == 'B'\nassert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nA''') == 'B'\nassert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nB''') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nB.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"A\"\n\nassert solution(\"\"\"\nW.W..B\n....B\n.W.....\n........\n........\n\"\"\") == \"B\"\n\nassert solution(\"\"\"\n...B.\n....W\n...W..\n........\n........\n\"\"\") == \"B\"\n\nassert solution(\"\"\"\n........\n...W..\n...W.....\n...W.....\n........\n\"\"\") == \"A\"\n\nassert solution(\"\"\"\n........\n..B.W.\n...W..\n...W..\n........\n\"\"\") == \"A\""
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nA''') == 'A'\n\nassert solution('''........\n........\n.W....B.\n....W...\n........\n..W.....\n........\n........\n\nOutput\nB''') == 'B'"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('...B....B.\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'A'\nassert solution('..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\nassert solution('...B....B.\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'A'\nassert solution('...B....B.\\n...W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join(['..B.....', '..W.....', '......B.', '........', '.....W..', '......B.', '........', '........'])) == 'A'\nassert solution('\\n'.join(['...W....', '...W....', '......W.', '........', '.....W..', '......W.', '........', '........'])) == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\"\"\") == \"A\", \"A\"\nassert solution(\"\"\"........\n........\n........\n........\n........\n........\n........\n........\"\"\") == \"B\", \"B\"\nassert solution(\"\"\"\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........\n........"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"........\") == \"A\"\nassert solution(\"..B.....\") == \"B\"\nassert solution(\"....W...\") == \"B\"\nassert solution(\"....W.....\") == \"B\"\nassert solution(\"........\") == \"A\"\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\\n\") == \"B\"\nassert solution(\"........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n\") == \"B\"\nassert solution(\"........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n\") == \"A\"\nassert solution(\"........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n\") == \"A\"\nassert solution(\"........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n\") == \"A\"\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''........\n.B....B.\n....W...\n........\n..W.....\n........\n........''') == 'A'\n\nassert solution('''......\n......B.\n...W....\n........\n........\n........''') == 'B'\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n    11 2 3 5 7\n    4\n    11 7 3 7\n    ''') == '3'\n\nassert solution('''2\n    1 2\n    1\n    100\n    ''') == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nprint(solution())"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\nassert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n11\\n2') == '3'\nassert solution('2\\n1 2') == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\\n5\\n1 2 3 4\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n5\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('2\\n2\\n2\\n2\\n2') == '4'\nassert solution('3\\n1\\n1\\n1\\n1') == '3'\nassert solution('4\\n1\\n1\\n1\\n1') == '2'\nassert solution('5\\n1\\n1\\n1\\n1') == '5'"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''\n2\n1 2\n1\n100\n\n''') == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"2\\n1 2\") == \"3\"\nassert solution(\"3\\n1 2 3\") == \"3\"\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('4') == '3'\nassert solution('10') == '9'"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Olya_and_Slava') == 'YES'\nassert solution('Olya_and_Slava') == 'NO'\nassert solution('Nikita_and_Slava') == 'YES'\nassert solution('Nikita_and_Slava') == 'NO'\nassert solution('Nikita_and_Slava') == 'NO'\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"YES\""
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n\n\n## Other solutions\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('NikitaAndString') == 'YES'\nassert solution('AlexAndBrokenContest') == 'NO'\nassert solution('NikitaAndDanil') == 'YES'\n\n\n'''"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_string\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"YES\"\n\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'YES'\n\nstdin = 'Alex_and_broken_contest'\nprint(solution(stdin))\n\nstdin = 'NikitaAndString'\nprint(solution(stdin))\n\nstdin = 'Danil_and_Olya'\nprint(solution(stdin))\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"6 4 3\") == \"4\"\nassert solution(\"5 2 3\") == \"4\"\nassert solution(\"4 4 3\") == \"-1\"\nassert solution(\"10 8 3\") == \"-1\""
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    4 3\n    1 4 2\n    ''') == '4'\nassert solution('''\n    6 13 1\n    ''') == '4'\nassert solution('''\n    6 9 3\n    5 8 5\n    ''') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\nassert solution(\"1 4 3\") == \"-1\""
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\nassert solution('1 2 4') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 4 3\") == \"4\"\nassert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\nassert solution(\"1 5 3\") == \"-1\"\nassert solution(\"4 6 3\") == \"4\"\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3\") == \"0\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n\n5 10 5\n''') == '0.5'\n\nassert solution('''\n\n10 11 9\n''') == '0'\n\nassert solution('''\n\n10 10 10\n''') == '-1'\n\nassert solution('''\n\n10 11 8\n''') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0.5'\nassert solution() == '0'\nassert solution() == -1\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 4') == '0.5'\nassert solution('2 18 13') == '0'\nassert solution('3 4 3') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 3\n''') == '0.5'\nassert solution('''\n4 4 4\n''') == '0'\nassert solution('''\n3 4 3\n''') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'\nassert solution('10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\\n') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1 3') == '3'\nassert solution('4 7') == '2'\nassert solution('8 11') == '2'\nassert solution('2') == '1'"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9''') == '2'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''\n3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''\n1\n1 7\n4\n''') == '1'\nassert solution('''\n1\n1 7\n4\n''') == '0'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''1\n1 7\n4\n''') == '1'"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == '3'\nassert solution(\"\"\"\n10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == '2'\nassert solution(\"\"\"\n10\n1 4\n2 5\n3 6\n4 7\n5 8\n6 9\n7 10\n8 11\n9 12\n\"\"\") == '1'\nassert solution(\"\"\"\n10\n1 5\n2 6\n3 7\n4 8\n5 9\n6 10\n7 11\n8 12\n9 13\n\"\"\") == '1'\nassert solution(\"\"\"\n10\n1 4\n2 5\n3 6\n4 7\n5 8\n6 9\n7 10\n8 11\n9 12\n\"\"\") == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''\n1\n1 7\n4\n''') == '1'\nassert solution('''\n1\n1 4\n5 9\n10 12\n9\n''') == '2'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3\\n4 7\\n8 11\\n2\\n\") == \"3\"\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\\n\") == \"2\"\nassert solution(\"1\\n1 7\\n4\\n\") == \"1\"\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    1 3\n    4 7\n    8 11\n    2\n    '''\n    ) == '3'\nassert solution(\n    '''\n    1\n    1 7\n    4\n    '''\n    ) == '1'\nprint(solution('''\n    4\n    4\n    3\n    1\n    '''))\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 3\n4 7\n8 11\n2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n1 7\n4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1 7\n4\n\"\"\") == \"2\""
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''1\n1 7\n4\n''') == '1'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\""
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('GARLICFORCES') == 'NO'\nassert solution('GARLICFORCES') == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DOGEFORCES\") == \"NO\""
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'NO'\nassert solution('DOGEFORCES') == 'NO'\n\"\"\""
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''CODEWAITFORITFORCES''') == 'YES'\nassert solution('''BOTTOMCODER''') == 'NO'\nassert solution('''DECODEFORCES''') == 'YES'\nassert solution('''DOGEFORCES''') == 'NO'\nprint(solution('''CODEWAITFORITFORCES'''))"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''DECODEFORCES''') == 'NO'\nassert solution('''CODEWAITFORITFORCES''') == 'YES'\nassert solution('''BOTTOMCODER''') == 'NO'\nassert solution('''DECODEFORCES''') == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''CODEWAITFORITFORCES''') == 'YES'\nassert solution('''BOTTOMCODER''') == 'NO'\nassert solution('''DECODEFORCES''') == 'YES'\nassert solution('''DOGEFORCES''') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\""
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('4') == '18'\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2\n2\n2\n2\n''') == '18'\nassert solution('''4\n3\n2\n2\n2\n''') == '6'"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"10\") == \"21\"\nassert solution(\"100\") == \"52000\"\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n''') == '6'\nassert solution('''\n4\n''') == '18'\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '18'"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3]) == \"6\"\nassert solution([4]) == \"18\"\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2,3]) == 6\nassert solution([4,5]) == 18\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '6'\nassert solution('2\\n') == '18'\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n4\n1\n3\n1''') == '6'\nassert solution('''4\n2\n3\n1\n2\n3''') == '18'"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\"\"\"\n\nimport itertools\nimport math"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '17'"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n5\n''') == '7'\nassert solution('''8\n5\n6\n''') == '8'\nassert solution('''4\n5\n6\n''') == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\nassert solution(\"9\") == \"9\""
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('13') == '17'\nassert solution('1234') == '1234'\nassert solution('1234567') == '1234567'\nassert solution('1234567890') == '123456789'\n"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\n\n'''\n\nn = int(input())\nn = ''.join([str(i) for i in range(1,n+1)])\nprint(len(n))\n"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n2 1 4 2\n''') == '2'\nassert solution('''5 2\n1 2 3\n''') == '4'\nassert solution('''3 10\n1 2 3\n''') == '-1'"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"4\"\nassert solution(\"2 1 4 2\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"2\"\nassert solution(\"3 10\") == \"-1\"\nassert solution(\"1 2 3\") == \"4\"\n\nassert solution('''\n4 1\n2 1 4 2\n''') == \"2\"\nassert solution('''\n3 10\n1 2 3\n''') == \"-1\"\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '2'\nassert solution('5 2') == '4'"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 10\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 10\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 10\n2 2 4 5 3\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '4'\nassert solution('5 10') == '-1'"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1\\n2 1 4 2') == \"2\"\nassert solution('3 10\\n1 2 3') == \"4\""
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 2 4 2') == '2'\nassert solution('2 1\\n2 1 4 2') == '4'\nassert solution('3 1\\n1 2 3') == '-1'"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 1\n2 1 4 2\n''') == '2'\n\nassert solution('''5 2\n2 2 4 5 3\n''') == '4'\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '2'\nassert solution('5 10') == '-1'\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"NO\"\nassert solution(\"3 10\") == \"YES\"\n\n\nstdin = input()\nprint(solution(stdin))"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 3\n\n''') == 'NO'\n\nassert solution('''3 10\n3 3 2\n\n''') == 'YES'\n\nassert solution('''2 10\n1 2\n\n''') == 'NO'"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"NO\"\nassert solution(\"3 10\") == \"YES\"\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('1 1') == 'NO'"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"NO\"\nassert solution(\"3 10\") == \"YES\""
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'NO'\nassert solution('1 3') == 'YES'"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 11\n''') == '3'\nassert solution('''\n6 16\n''') == '3'\nassert solution('''\n100 100\n''') == '3'\nassert solution('''\n5 10\n''') == '4'\nassert solution('''\n100 6\n''') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 11\n''') == '3'\nassert solution('''6 16\n''') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 11\\n') == '3\\n'\nassert solution('6 16\\n') == '3\\n'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 11\\n\") == \"3\"\nassert solution(\"6 16\\n\") == \"3\""
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 11\n''') == '3'\nassert solution('''6 16\n''') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 11\n''') == '3'\nassert solution('''\n6 16\n''') == '3'"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"aac\") == \"a\"\nassert solution(\"acd\") == \"acd\"\nassert solution(\"abcd\") == \"acdb\"\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"abb\"\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n            \"\"\") == \"\"\nassert solution(r\"\"\"\n            abb\n            \"\"\") == \"abba\"\nassert solution(r\"\"\"\n            aaa\n            \"\"\") == \"aaaa\"\nassert solution(r\"\"\"\n            abcd\n            \"\"\") == \"abcdabcd\"\nassert solution(r\"\"\"\n            aabc\n            \"\"\") == \"abba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aabc') == 'aabc'\nassert solution('aabbcd') == 'aba'\nassert solution('abbbccddd') == 'aba'\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('QK..') == 'White'\nassert solution('rkkq') == 'Black'\nassert solution('pppppppp') == 'Draw'\nassert solution('rnbqkbnr') == 'White'\nassert solution('RNBAQKBNR') == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('QK') == 'White'\nassert solution('rk') == 'Black'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rppppppr') == 'Black'\nassert solution('rkpppqqk') == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''QK\n........\n........\n........\n........\n........\n........\n...rk''') == 'White'\nassert solution('''rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR\n\n''') == 'Black'\nassert solution('''rppppppr\n...k....\n........\n........\n........\n........\nK...Q...\n........\n''') == 'Draw'"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('QK') == 'White'\nassert solution('rnbqkbnr') == 'Black'\nassert solution('rppppppr') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"QK\\n........\\n........\\n........\\n........\\n........\\n...rk...\\n\") == \"White\"\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nK...Q...\\n........\\n\") == \"Black\""
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('QK') == 'White'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rppppppr') == 'Black'"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n.Q........\n........r\n........r\n........r\n.Q........\n........r\n........r\n........r\n........r\n.Q........\n.K........\n''') == \"Black\"\nassert solution('''\nQQQ.Q...\nQQ.Q.Q...\nQQQQ.Q...\n.QQQQQ...\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQQQQ\nQQQQQ"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"QK...\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"RK...\\n\"\n) == \"White\"\n\nassert solution(\n    \"rppppppr\\n\"\n    \"p....p\\n\"\n    \"p....p\\n\"\n    \"p....p\\n\"\n    \"p....p\\n\"\n    \"p....p\\n\"\n    \"pppppppp\\n\"\n) == \"Black\"\n\nassert solution(\n    \"rnbqkbnr\\n\"\n    \"pppppppp\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"........\\n\"\n    \"pppppppp\\n\"\n) == \"Draw\"\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"rnbqkbnr\") == \"White\"\nassert solution(\"rpqrpppp\") == \"Draw\"\nassert solution(\"........\") == \"Black\"\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"qk...\\npppppppp\\n........\\n........\\n........\\n........\\nK...Q...\\n........\\n\") == \"White\"\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nK...Q...\\n........\\n\") == \"Black\"\nassert solution(\"rppppppr\\n...k....\\n........\\n........\\n........\\n........\\nK...Q...\\n........\\n\") == \"Draw\"\nprint(\"All Tests Passed\")\n\"\"\"\nimport re\nimport math"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"3 3\") == \"1 3 2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 1\") == \"1 1 1\"\nassert solution(\"10 10\") == \"1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"1 2 3 4\", \"Wrong solution\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n00110000\") == \"2 3 1 1\"\nassert solution(\"5 4\\n00010001\") == \"3 3 2 3\"\nassert solution(\"5 4\\n00010001\") == \"3 3 2 3\"\nassert solution(\"5 4\\n00110000\") == \"2 3 1 1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 3 2 3\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3\n0 0 0\n\"\"\"\n) == \"1 3 2 3\""
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4 5\\n'\n    '0 0 1 1 0\\n'\n) == '1 2 3 4\\n'\n\nassert solution(\n    '3 5\\n'\n    '0 1 1 0\\n'\n) == '1 2 3\\n'\n\nassert solution(\n    '3 5\\n'\n    '1 0 0\\n'\n) == '0 1 2\\n'\n\nassert solution(\n    '3 5\\n'\n    '0 1 0\\n'\n) == '0 1 2\\n'\n\nassert solution(\n    '3 5\\n'\n    '1 0 1\\n'\n) == '0 1 2\\n'"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10\\n111111\") == \"1 10 2 11 3 11 4 10 5 6 7 8 9\"\nassert solution(\"3 2\\n000\") == \"-1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n010101\") == \"1 3 2 3\"\nassert solution(\"10 10\\n11111 0 1 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 1 0 1 1\") == \"5 3 2 2 1 1 1 3 1 1 3 2 1 1 2 1 3 3 2 1 1 1 2 2 1 1 2 1 1 3 2 1 1 1 2 2 1 1 2 2 1 1 1 1 1 3 2 2 1 2 1 1 2 1 1 2 1 1 1 3 2 1 1 3 2 1 1 1 1 1 1 1 3 2 1 1 3 2 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 2 1 1 1 1 2 2 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 2 1 1 1 1 2 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5 1\n    01\n    ''') == '1 2 3 4 5'\nassert solution('''\n    5 1\n    01\n    ''') == '0 1 2 3 4'\nassert solution('''\n    5 1\n    11\n    ''') == '-1'\n''')\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2 3') == '1 3 2 3'\nassert solution('9 3') == '1 3 2 3'\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11\n-1 2\n''') == '3'\nassert solution('''10\n-1 2\n''') == '-1'\nassert solution('''-10\n-1 2\n''') == '-1'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '3'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '3'\nassert solution('10') == '7 4'\nassert solution('-1 2') == '7 4'\nassert solution('-1 2 3') == '-1 2 3'\nassert solution('-1 2 3 4') == '-1 2 3 4'\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"-1\"\nassert solution(\"-1\") == \"3\"\nassert solution(\"3\") == \"7 4\"\nassert solution(\"7\") == \"2 10\"\nassert solution(\"2\") == \"-1 2\"\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13\\n1 2\") == \"3\\n7 4\"\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11\n-1 2\n''') == \"3\"\n\nassert solution('''\n4\n-1 2\n''') == \"2\"\n\nassert solution('''\n5\n-1 2\n''') == \"1\"\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '3'\nassert solution(input()) == '7 4'\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('10\\n-1 2') == '-1 2'"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n-1 2\n''') == '3\nassert solution('''11\n-1 2\n''') == '-1 2'\nassert solution('''0\n-1 2\n''') == '-1 2'\nassert solution('''0\n0 0\n''') == '-1 2'\nassert solution('''12\n0 1\n''') == '-1 2'\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution) == \"12\"\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '-1'\nassert solution('10') == '54'\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == '8'\nassert solution(\"8\") == '54'\nassert solution(\"10\") == '-1'\nprint(solution(\"10\"))\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1]) == \"8\"\nassert solution([8]) == \"54\"\nassert solution([10]) == \"-1\"\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"8\") == \"54\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n8''') == \"8\"\nassert solution('''10\n''') == \"-1\"\n\nassert solution('''1\n7''') == \"54\"\nassert solution('''8\n''') == \"8\"\n\nassert solution('''10\n''') == \"54\"\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1]) == '8'\nassert solution([8]) == '54'\nassert solution([10]) == '-1'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 4') == '7.25298806364175601379'\nassert solution('0 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 4') == '7.25298806364175601379'\nassert solution('0 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 2') == '0.4000000000000004'\nassert solution('3 3 3') == '0'\nassert solution('-1 -1 2') == '-0.8'\nassert solution('-1 1 2') == '0.8'\nassert solution('0 -1 2') == '-0.8'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 4\n6 0 4\n''') == '7.25298806364175601379'\nassert solution('''\n0 0 5\n11 0 5\n''') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"0.00000000000000000000\"\nassert solution(\"0 0 2\") == \"1.000000000000\"\nassert solution(\"1 1 2\") == \"1.000000000000\"\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 4') == '7.25298806364175601379'\nassert solution('0 0 5') == '0.00000000000000000000'"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7.25298806364175601379'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"1.000000000000\"\nassert solution(\"1 2 4\") == \"1.000000000000\"\nassert solution(\"2 3 4\") == \"0.333333333333\"\nassert solution(\"2 1 3\") == \"0.666666666667\"\nassert solution(\"2 2 3\") == \"0.333333333333\"\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1\n0 0 3\n''') == '0.0'\nassert solution('''\n1 1 1\n0 0 5\n''') == '0.00000000000000000000'\nassert solution('''\n1 1 2\n3 1 5\n''') == '1.0'\nassert solution('''\n1 1 3\n3 1 5\n''') == '1.0'\nassert solution('''\n1 1 2\n3 1 5\n''') == '1.0'\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n''') == '1'\nassert solution('''1\n''') == '1'\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '1'\n\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '1'\n'''\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '1'"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '1'\n\n\"\"\""
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"8\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8''') == '1'\nassert solution('''1''') == '1'\n\n''')\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 1\n3 1 3\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n\n'''\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1\n3 1 3\n''') == '4'\nassert solution('''\n3\n1 1\n3 1 2\n''') == '3'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('3') == '4'\nassert solution('4') == '2'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1\n3 1 3\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n1 1\\n3 1 3') == '4'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n3 1 3\n''') == '4'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 1\n3 1 3\n\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1\n1 1\n3 1 3\n\n\"\"\") == \"3\"\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 1\nassert solution(input()) == 0\nassert solution(input()) == 2\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == 1, \"1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0\"\nassert solution('5') == 0, \"1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0\"\nassert solution('3') == 2, \"1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0\"\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\nreading\ntrading\n''') == '0'\nassert solution('''5\nsweet\nsheep\n''') == '1'\nassert solution('''3\ntoy\ntry\n''') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1\""
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0'\nassert solution('7') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\"\n) == \"0\"\nassert solution(\n    \"7\"\n) == \"1\"\nassert solution(\n    \"3\"\n) == \"2\"\nassert solution(\n    \"6\"\n) == \"0\"\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nreading\ntrading\n''') == '1'\n\nassert solution('''5\nsweet\nsheep\n''') == '0'\n\nassert solution('''3\ntoy\ntry\n''') == '2'\n\"\"\"\n\u0414\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (>1), \u043d\u0430\u0439\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043d\u044b\u0445 \u0446\u0438\u0444\u0440 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f (1-9 \u0438\u043b\u0438 0-9).\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043d\u044b\u0445 \u0446\u0438\u0444\u0440 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0447\u0438\u0441\u043b\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435, \u0432\u044b\u0432\u0435\u0441\u0442\u0438 0.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0438 0 \u0438 1, \u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043d\u044b\u0445 \u0446\u0438\u0444\u0440 \u0432 \u0447\u0438\u0441\u043b\u0435 \u043d\u0435 \u0440\u0430\u0432\u043d\u043e 0.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u041d\u0430 \u044f\u0437\u044b\u043a\u0435 \u043d\u0435 \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u0435\u043c\u0438 \u0432\u0435\u043b\u0438\u0447\u0430\u0439\u0448\u0438\u0445 \u0446\u0438\u0444\u0440 \u0432 \u0447\u0438\u0441\u043b\u0435.\n\"\"\"\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nreading\\ntreading\\n\") == \"0\"\nassert solution(\"3\\ntoy\\ntry\\n\") == \"2\"\nassert solution(\"5\\nsweet\\nsheep\\n\") == \"0\"\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 1\nassert solution('5') == 0\nassert solution('3') == 2\n\n\"\"\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\nassert solution('5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2') == '5'\nassert solution('5\\n1 2 7 6 7\\n1 5') == '93'"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"93\""
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\n''') == \"93\"\n\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\n''') == \"8\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == '93'\n\nassert solution('''\n5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\n'''\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"5\"\nassert solution(\"5\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n\") == \"93\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"93\"\nassert solution(\"3\") == \"8\"\nassert solution(\"5\") == \"8\"\nassert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(inp_str_1) == \"93\"\nassert solution(inp_str_2) == \"8\"\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == \"93\"\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0\\n') == '1'\nassert solution('7 4\\n') == '3'\nassert solution('6 2\\n') == '2'\nassert solution('3 0\\n') == '1'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 4\n''') == '3'\nassert solution('''\n6 2\n''') == '2'\nassert solution('''\n3 0\n''') == '1'\nassert solution('''\n2 2\n''') == '0'\n\n''' == '1'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n''' == '0'\n'''"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 4\n''') == '3'\nassert solution('''6 2\n''') == '2'\nassert solution('''3 0\n''') == '1'\nassert solution('''2 2\n''') == '0'\nassert solution('''5 0\n''') == '1'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 4\n''') == '3'\nassert solution('''6 2\n''') == '2'\nassert solution('''3 0\n''') == '1'\nassert solution('''2 2\n''') == '0'\n\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\""
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2'\nassert solution('7 4') == '3'\nassert solution('6 2') == '0'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 4\n''') == '3'\nassert solution('''6 2\n''') == '2'\nassert solution('''3 0\n''') == '1'\nassert solution('''2 2\n''') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n\"\"\""
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\n"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\""
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n\nassert solution(input()) == \"1\"\n\nassert solution(input()) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\n\n\n'''\nimport math"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"0\") == \"0\"\nprint('all tests passed')\n"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '117 3\\n'\n) == '9\\n'\nassert solution(\n    '237 7\\n'\n) == '1\\n'\nassert solution(\n    '15 2\\n'\n) == '2\\n'\n"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('5 5') == 'NO'\nassert solution('5 5') == 'NO'\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\nXXX\nXXX\n''') == 'NO'\n\nassert solution('''\n2 2\n.X\nXX\n''') == 'YES'\n\nassert solution('''\n5 5\n.....\n.X..\n.....\n.....\n.....\n''') == 'YES'\n\nassert solution('''\n3 3\n.X.\nX.X\nX.X\n''') == 'YES'\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nXX\\n\") == \"NO\"\nassert solution(\"5 5\\nX.X\\n.X.X\\nX.X.X\\nX.X.X\\nX.X.X\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\""
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\", 'Should be able to form a rectangle'\nassert solution(\"5 5\") == \"NO\", 'Should not be able to form a rectangle'\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('8 8') == 'NO'\nprint(\"You passed all the tests!\")\n\n\n'''\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == \"YES\"\nassert solution('5 5') == \"YES\"\nassert solution('4 4') == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"YES\", \"Test #1 fail\"\nassert solution(\"2 2\") == \"NO\", \"Test #2 fail\"\nassert solution(\"5 5\") == \"YES\", \"Test #3 fail\"\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"-1 -1\") == \"1\"\nassert solution(\"-1 -1\") == \"1\"\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 -1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 -1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"-1 1\") == \"1\"\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 -1\n1 1''') == '1'\nassert solution('''-1 -1\n-1 3\n4 3''') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 -1') == '1'"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\") == '1'\nassert solution(\"-1 -1\\n-1 3\\n4 3\\n\") == '2'"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 -1\n1 1''') == '1'\nassert solution('''-1 -1\n-1 3\n4 3''') == '2'\nassert solution('''1 1\n2 3\n3 2''') == '3'\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution('''\n1 -1\n1 1\n1 2\n''') == '1'\nassert solution('''\n-1 -1\n-1 3\n4 3\n''') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\") == \"1\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\\n\") == \"2\"\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('-1 -1') == '1'\nassert solution('-1 3') == '2'\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 1 2\") == \"YES\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"2 3 2\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == 'YES'\n\"\"\"\n\n\nfrom collections import deque\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('2 1 2') == 'YES'"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == 'YES', 'First'\nassert solution('''\n2\n1 2\n''') == 'YES', 'Second'\n''')\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1') == 'YES'\nassert solution('1\\n1 2') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('2 1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('2 2 1') == 'YES'\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('2 1 2') == 'YES'\nassert solution('2 2') == 'NO'\nassert solution('2 3') == 'NO'\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"3\"\nassert solution() == \"0\""
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7\n''') == '0'\n\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14\n''') == '4'\n\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1\n''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 2 3\",\n    \"abacaba\",\n    \"ba\",\n) == \"0\", \"Test 1 failed\"\nassert solution(\n    \"3 5 2\",\n    \"aba\",\n    \"abacaba\",\n) == \"0\", \"Test 2 failed\"\nassert solution(\n    \"15 2 3\",\n    \"abacaba\",\n    \"baaab\",\n) == \"4\", \"Test 3 failed\"\n\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4 2\") == \"0\"\nassert solution(\"10 3 4\") == \"1\"\nassert solution(\"15 2 3\") == \"4\"\nassert solution(\"6 5 2\") == \"3\"\nassert solution(\"3 5 2\") == \"0\"\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7\n\n\"\"\") == \"0\n\nassert solution(\"\"\"\n15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14\n\n\"\"\") == \"4\n\nassert solution(\"\"\"\n3 5 2\naaa\nbaaab\n1 3\n1 1\n\n\"\"\") == \"0\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10 2\nacdefor\nac\n''') == '0'\nassert solution('''3 10 2\nacdefor\nac\n''') == '1'\nassert solution('''10 3 4\nabacabadabacaba\nba\n1 15\n3 4\n2 14\n''') == '4'\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 3 4\") == \"0\"\nassert solution(\"15 2 3\") == \"4\"\nassert solution(\"3 5 2\") == \"0\""
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '10 3 4'\n    'codeforces'\n    'for'\n    '1 3'\n    '3 10'\n    '5 6'\n    '5 7'\n    ) == '0'\n\nassert solution(\n    '15 2 3'\n    'abacabadabacaba'\n    'ba'\n    '1 15'\n    '3 4'\n    '2 14'\n    ) == '4'\n\nassert solution(\n    '3 5 2'\n    'aaa'\n    'baaab'\n    '1 3'\n    '1 1'\n    ) == '0'"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('5 5 2') == '1'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n\n\"\"\"\n\n\n\n\n\nimport math\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3 2''') == '1'\nassert solution('''4 3 3''') == '2'\nassert solution('''10 10 10''') == '1'\nassert solution('''10 10 10''') == '2'\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n\n'''\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"1\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"4 5 2\") == \"7\""
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('4') == '0'\nassert solution('13') == '3'\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nBBW\n''') == '1'\nassert solution('''5\nBWBWB\n''') == '3'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '4'\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\nBBW\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\nBWBWB\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\nWWWW\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n13\nWBBBBWWBWBBBW\n\n\"\"\") == \"3\""
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nW') == '1'\nassert solution('3\\nBBW') == '1'\nassert solution('4\\nWWWW') == '0'\nassert solution('13\\nWBBBBWWBWBBBW') == '3'\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nBWBWB\n''') == '1'\nassert solution('''4\nBBBB\n''') == '0'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3'\nassert solution('''13\nBBBWBWBWBWB\n''') == '0'\nassert solution('''13\nBBBBBWBWWB\n''') == '0'\n''') == '1'"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '4'\nassert solution(input()) == '3'"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nBWBWB''') == '1 1 1'\nassert solution('''4\nWWWW''') == '0'\nassert solution('''13\nWBBBBWWBWBBBW''') == '3 4 1 3'\n\nprint(solution('''5\nBWBWB'''))"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"13\") == \"3\"\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\"\n) == \"1\"\nassert solution(\n    \"5\"\n) == \"2\"\nassert solution(\n    \"13\"\n) == \"3\"\nassert solution(\n    \"4\"\n) == \"1\"\nassert solution(\n    \"4\"\n) == \"4\"\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nBBBB\n\nOutput\n3\n4 1 3 \n\n''') == '1'\n\nassert solution('''\n6\nWWWW\n\nOutput\n0\n\n''') == '0'\n\nassert solution('''\n5\nBWBWB\n\nOutput\n1\n2 \n\n''') == '1'\n\nassert solution('''\n13\nWBBBBWWBWBBBW\n\nOutput\n3\n4 1 3 \n\n''') == '3'\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRRDLD\") == \"()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"()()\"\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\") == \"()\"\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '()'\n\"\"\"\nimport collections\n\nclass Solution:\n    def solution(self, stdin):\n        cursor = 0\n        n, m, p = map(int, stdin.split())\n        brackets = collections.deque([])\n        for i in range(n):\n            brackets.append(('(' if i % 2 == 0 else ')'))\n        for _ in range(m):\n            command = stdin.split()[2]\n            if command == 'R':\n                cursor += 1\n            elif command == 'D':\n                if cursor > 0:\n                    brackets.popleft()\n                    cursor -= 1\n            elif command == 'L':\n                if cursor < n:\n                    brackets.pop()\n                    cursor += 1\n            else:\n                pass\n        return ''.join(brackets)\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 4 5\") == \"()\"\nassert solution(\"12 5 3\") == \"()(())\"\nassert solution(\"8 8 8\") == \"()()\"\nassert solution(\"3 4 3\") == \"\"\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 4 5\\n(())()()\\nRDLD') == '(())('\n\nassert solution('12 5 3\\n((()())(()))\\nRRDLD') == '()()'\n\nassert solution('8 8 8\\n(())()()\\nLLLLLLDD\\n') == ''\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 4 5') == '(()())()'\nassert solution
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 4 5\\n((()())(()))\\nRRDLD\\n\") == \"()\"\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 4 5\\n((()())(()))\\nRRDLD\\n') == '()'\nassert solution('12 5 3\\n((()())(()))\\nRRDLD\\n') == '()()'"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '()'\n\n\n\nfrom collections import deque\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n8 4 5\n((()())(()))\nRDLD\n\n\"\"\") == \"()\"\nassert solution(\n\"\"\"\n12 5 3\n((()())(()))\nRRDLD\n\n\"\"\") == \"()()\"\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 4 5') == '()'\nassert solution('12 5 3') == '()()'\nassert solution('8 8 8') == '()()'"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == 'Impossible', 'First'\nassert solution('''>= 3 Y\n< 4 N\n<= -1 N\n> 1 Y\n''') == '3', 'Second'"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('>= 1 Y') == '17'\nassert solution('< 3 N') == '3'\nassert solution('<= -3 N') == '-3'\nassert solution('> 55 N') == 'Impossible'\n"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''>= 1 Y\n< 3 N\n<= -3 N\n> 55 N''') == '17'\n\nprint(solution('''>= 1 Y\n< 3 N\n<= -3 N\n> 55 N'''))\n\nassert solution('''>= 1 Y\n< 3 N\n<= -3 N\n> 55 N''') == 'Impossible'"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n\"\"\") == \"17\"\nassert solution(\n\"\"\"\n>= 1 Y\n< 3 N\n<= -3 N\n> 100 Y\n\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"\n> 100 Y\n< -100 Y\n\"\"\") == \"Impossible\"\nassert solution(\n\"\"\"\n>= -10 Y\n< 100 Y\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n>= -10 Y\n< 100 Y\n\"\"\") == \"10\"\n"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\\n') == '17'\nassert solution('1\\n> 100 Y\\n< -100 Y\\n') == 'Impossible'\nassert solution('1\\n> 100 Y\\n< -100 Y\\n') == 'Impossible'\nassert solution('1\\n> 100 Y\\n< -100 Y\\n') == 'Impossible'"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\\n') == '17'"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Impossible\"\nassert solution(\"5\") == \"Impossible\"\nassert solution(\"6\") == \"Impossible\"\nassert solution(\"7\") == \"Impossible\"\nassert solution(\"8\") == \"Impossible\"\n"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n>= 1 Y\\n< 3 N\") == \"2\"\nassert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == \"17\"\nassert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == \"17\""
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N') == '17'\n"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('>= 1 Y') == '2'\nassert solution('< 3 N') == '4'\nassert solution('<= -3 N') == '6'\nassert solution('> 55 N') == '0'\nassert solution('< 55 N') == '6'\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == \"4\"\nassert solution('5 3') == \"5\"\n\n'''"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\""
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\""
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n\") == \"3\"\nassert solution(\"2 3\\n\") == \"2\"\nassert solution(\"1 1\\n\") == \"1\"\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n''') == '4'\nassert solution('''5 3\n''') == '5'\nassert solution('''5 1\n''') == '1'\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\""
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Na Na Na\"\nassert solution(\"8 3\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\""
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO\n''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('''3 2\nNO NO\n''') == 'Na Na Na'"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('9 8') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\n"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"5 6\\nNO NO NO NO NO NO NO\\nNO NO NO NO NO NO NO NO\") == \"R R R R R R R R R R R R R R R R R R R R R R\"\n"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"8 3\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"3 2\") == \"Na Na Na\""
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO\n''') == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution('''9 8\nYES NO\n''') == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution('''3 2\nNO NO\n''') == \"Na Na Na\""
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3\nNO NO YES YES YES NO\n\n''') == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution('''\n9 8\nYES NO\n\n''') == \"R Q Cccccccc Ccocc Ccc So Strong Samples Ccc\"\n"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nNO NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"1 1\\nNO\") == \"Na Na Na\"\nassert solution(\"8 3\\nNO NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\nYES NO NO YES NO NO\\n\") == [\"Adam\", \"Bob\", \"Bob\", \"Cpqepqwer\", \"Limak\", \"Adam\"]\nassert solution(\"10 1\\nYES NO NO NO NO\\n\") == [\"R\", \"Q\", \"Cccccccc\", \"Ccocc\", \"So\", \"Strong\", \"Samples\", \"Ccc\", \"Ccc\"]"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"6 3\nNO NO\n\n5 2\nYES NO\n\n4 1\nYES\n\n3 2\nNO NO\n\n3 1\nYES\n\n2 1\nYES\n\n1 1\nYES\n\n9 7\nYES YES YES NO\n\n8 3\nNO NO YES YES\n\n\"\"\"\n) == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam Adam\"\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 9') == '0'\nassert solution('1 2') == '-1'\nassert solution('1 10') == '-1'\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('3 5') == '2'\nassert solution('4 6') == '-1'\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('4 6') == '0'\nassert solution('10 7') == '2'"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '0'\nassert solution('1 2') == '-1'\nassert solution('14 8') == '3'\nassert solution('15 20') == '3'"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\nassert solution('0 0') == '0'"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n\"\"\""
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''15 20\n''') == '3'\nassert solution('''14 8\n''') == '-1'"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"15 20\") == \"3\"\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 100 1\\n0 1 2 1 2\") == \"101\"\nassert solution(\"3 10 12\\n1 2 0\\n\") == \"0\"\nassert solution(\"3 12 1\\n0 1 0\\n\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == str(solution2(input()))\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(input) == output\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 100 1') == '101'\nassert solution('3 10 12') == '0'\nassert solution('3 12 1') == '-1'\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 100 1\") == \"101\", \"First\"\nassert solution(\"3 10 12\") == \"0\", \"Second\"\nassert solution(\"3 12 1\") == \"0\", \"Third\"\n\n\"\"\"\n\nfrom typing import List\nfrom itertools import permutations, combinations"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 10 12\") == \"0\"\nassert solution(\"3 12 1\") == \"0\""
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 100 1\n0 1 2 1 2\n''') == '101'\nassert solution('''\n3 10 12\n1 2 0\n''') == '-1'\nassert solution('''\n3 12 1\n0 1 0\n''') == '0'"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 100 1\\n0 1 2 1 2\\n') == '101'\nassert solution('3 10 12\\n1 2 0\\n') == '0'\nassert solution('3 12 1\\n0 1 0\\n') == '0'"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 100 1\n0 1 2 1 2''') == '101'\nassert solution('''3 10 12\n1 2 0\n''') == '-1'\nassert solution('''3 12 1\n0 1 0\n''') == '0'\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 10 1\n1 2 0\n2 1 0\n2 0 1''') == '101'\nassert solution('''3 10 1\n1 2 0\n2 1 0\n2 0 1''') == '0'\nassert solution('''3 10 1\n1 2 0\n2 1 0\n1 0 2''') == '-1'\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'bb\\nww\\n'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"bb\\nw\\nw\\nw\"\nprint(solution())\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"wwwwwwwwww\"\nassert solution(\"5\") == \"wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\"\nassert solution(\"10\") == \"wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\nbb\nww\n''') == 'bbw'\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5''') == '-1'\nassert solution('''2''') == 'bb'\nassert solution('''4''') == 'ww'\nassert solution('''1''') == '-1'\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"bb\\nww\\n\"\nassert solution(\"4\") == \"bb\\nww\\nbb\\nww\\n\"\nassert solution(\"5\") == \"bb\\nww\\nbb\\nww\\nbb\\n\"\nassert solution(\"6\") == \"bb\\nww\\nbb\\nww\\nbb\\nbb\\n\"\nassert solution(\"7\") == \"bb\\nww\\nbb\\nww\\nbb\\nbb\\nbb\\n\"\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == 'bb\\nww\\nbb\\nww\\n'"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"bb\\nww\\n\"\nprint(solution(input()))"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == '-1'\nassert solution('''\n2\n''') == 'bb'\nassert solution('''\n3\n''') == 'ww'\nassert solution('''\n4\n''') == 'bb'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('15') == '6'"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\nprint(solution(input()))\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n101\n\nOutput\nYes\n\nInput\n4\n1011\n\nOutput\nNo\n\nInput\n5\n10001\n\nOutput\nNo\n''') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"5\") == \"No\"\n\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n11\n''') == 'Yes'\nassert solution('''\n5\n0011\n''') == 'No'\nassert solution('''\n5\n001\n''') == 'No'\nassert solution('''\n4\n1000\n''') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n101\n\nOutput\nYes\"\"\") == \"Yes\"\nassert solution(\"\"\"4\n1011\n\nOutput\nNo\"\"\") == \"No\"\nassert solution(\"\"\"5\n10001\n\nOutput\nNo\"\"\") == \"No\"\nassert solution(\"\"\"6\n100101\n\nOutput\nYes\"\"\") == \"Yes\"\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"Yes\"\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"Yes\"\nassert solution(\"4\\n\") == \"No\"\nassert solution(\"5\\n\") == \"No\"\n\"\"\""
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10000') == 'Yes'"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3\n1 5 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 5 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('5') == '1 2 3 4 5'\nassert solution('1 3 5 6 8') == '2 3 5 6 8'\nassert solution('3') == '1 2 3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\"\nassert solution(\"3\\n1 5 3\\n\") == \"3\\n3 5\"\nassert solution(\"4\\n1 5 3\\n\") == \"3\\n2\"\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2\\n3\""
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4 5\n''') == '5'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\nassert solution('''4\n1 3 5 6 8\n''') == '3'\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n4\n2\n1\n2\n1\n''') == '2'\n\nassert solution('''2\n4\n1\n1\n2\n1\n''') == '2'\n\nassert solution('''3\n4\n1\n1\n2\n1\n''') == '3'\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n3\n1 5 3\n''') == '2'"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('') == '5'\nassert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('5\\n1 2 3 4 5') == '5'\nassert solution('3\\n1 5 3') == '2'\nassert solution('3\\n1 5 3\\n') == '3'\nassert solution('2\\n-1\\n') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\nassert solution(\"3\\n1 5 3\") == \"2\\n3\"\nassert solution(\"3\\n1 5 3 2\") == \"2\"\nassert solution(\"3\\n1 5 3 5\") == \"3\"\nassert solution(\"3\\n1 5 3 5 5\") == \"2\"\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 2 1 2 1\n1 1 1 1 1 99''') == 'YES'\nassert solution('''1 1 1 1 1 99''') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input(stdin.read().split())) == 'NO'\nprint(solution(input()))"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 1, 2, 1, 2]) == \"YES\"\nassert solution([1, 1, 1, 1, 1, 99]) == \"NO\"\n\"\"\""
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES', '1st example'\nassert solution('1 1 1 1 1 99') == 'NO', '2nd example'\nprint('all tests are passed')"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 2 1 2 1\n''') == 'YES'\nassert solution('''\n1 1 1 1 1 99\n''') == 'NO'\nassert solution('''\n1 3 2 1 2 1\n5 7 9 5 4 3\n''') == 'NO'\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == 7\nassert solution('100 200') == 5\nassert solution('1 2000000000') == 326\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"1 2000000000\") == \"326\""
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10') == 7\nassert solution('100 200') == 5\nassert solution('1 2000000000') == 326"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 10\n''') == '7'\n\nassert solution('''\n1 2000000000\n''') == '326'\n\nassert solution('''\n''') == '0'\n\nimport math"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 10\n''') == '7'\nassert solution('''\n100 200\n''') == '5'\nassert solution('''\n1 2000000000\n''') == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10') == '7'\nassert solution('1 2000000000') == '326'"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n''') == '0'\nassert solution('''\n9 11\n''') == '4'\nassert solution('''\n5 0\n''') == '3'\nassert solution('''\n3 2\n''') == '1'"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3 5 3 2\n''') == 'YES'\n\nassert solution('''\n3\n3 2 2\n''') == 'NO'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 5 3 2 4\n\n''') == 'YES', 'First example'\nassert solution('''\n2\n4 1 2\n\n''') == 'NO', 'Second example'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n1\\n3\\n3') == 'YES'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(input_data=\"5\\n1 5 3 2 4\\n\") == \"YES\"\nassert solution(input_data=\"3\\n4 1 2\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 5 3 2 4') == 'YES'\nassert solution('3\\n4 1 2') == 'NO'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Yes\", \"First example\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n\n''') == 'Yes'\nassert solution('''\n4 2\n\n''') == 'No'"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\n'''\n\nimport sys"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 1001') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('3 1') == 'No'\n'''\nfrom typing import List\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 'Yes'\nassert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1000, 1001]) == 'Yes'\nassert solution([3, 5]) == 'No'\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([6,3]) == \"Yes\"\nassert solution([4,2]) == \"No\"\nassert solution([1000, 1001]) == \"Yes\"\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2,4]) == \"2\"\nassert solution([3,8]) == \"5\"\nassert solution([3,9]) == \"6\""
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 8') == '5'\nassert solution('2 2') == '20'"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"2 2\") == \"20\""
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '5'\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n7 9') == '2'\nassert solution('3 8\\n17 15 19') == '5'\nassert solution('2 2\\n99 100') == '20'"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n7 9\n''') == '2'\n\nassert solution('''3 8\n17 15 19\n''') == '5'\n\nassert solution('''2 2\n99 100\n''') == '20'\n\nassert solution('''5 5\n13 14 5 10 5\n''') == '14'"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('2 3') == '4'\nassert solution('3 3') == '3'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"2 2\") == \"20\"\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n7 9\n''') == '2'\nassert solution('''3 8\n17 15 19\n''') == '5'\nassert solution('''2 2\n99 100\n''') == '20'\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 8') == '5'\nassert solution('2 2') == '20'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4\\n2 8\\n3 8\\n2 9\\n') == '1'\nassert solution('1 2 3\\n7 6 5\\n8 7 6\\n') == '8'"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == \"1\"\nassert solution('8 8') == \"1\"\nassert solution('7 8') == \"25\"\n\nprint(solution(input()))"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '25'\nassert solution('8 8') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '25'\nassert solution('8 8') == '1'"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"25\"\nassert solution(\"8 8\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '25'\nassert solution('8 8') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '25'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4,2],[5,7,6]) == \"25\"\nassert solution([8,8],[1,2,3,4,5,6,7,8]) == \"1\"\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 222]) == '2'\nassert solution([4, 190]) == '4'\nassert solution([7, 1]) == '7'"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 222\n''') == '2'\n\nassert solution('''4 190\n''') == '4'\n\nassert solution('''7 1\n''') == '7'\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 222]) == \"2\"\nassert solution([4, 190]) == \"4\"\nassert solution([7, 1]) == \"7\"\n\n\n\"\"\"\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\n\n\n\"\"\""
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\n\n'''\n\n\nimport math\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 222\n\n''') == '2'\nassert solution('''4 190\n\n''') == '4'\nassert solution('''7 1\n\n''') == '7'\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n\n'''\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 222\n''') == '2'\n\nassert solution('''4 190\n''') == '4'\n\nassert solution('''7 1\n''') == '7'\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 222\n''') == '2'\nassert solution('''4 190\n''') == '4'\nassert solution('''7 1\n''') == '7'\n"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n4\n''') == '4'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n\n''') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n5\n''') == '10'\nassert solution('''\n4\n''') == '8'"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '2'\nassert solution('''\n10\n''') == '5'\n"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '2'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n<<><\") == \"2\"\nassert solution(\"5\\n>><\") == \"5\"\nassert solution(\"4\\n<<<\") == \"0\"\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n>><<''') == '2'\nassert solution('''4\n<<>>''') == '1'\nassert solution('''5\n>>><''') == '0'\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input('4\\n<<><\\n')) == '2'\n\n\"\"\"\nimport math\n\nfrom typing import List\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '4'\n) == '2'\nassert solution(\n    '5'\n) == '5'\nassert solution(\n    '4'\n) == '0'\nassert solution(\n    '5'\n) == '0'"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n<<><\") == \"2\"\nassert solution(\"5\\n>>><\") == \"5\"\nassert solution(\"6\\n<<>>\") == \"0\"\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n<<><\") == \"2\"\nassert solution(\"5\\n>><\") == \"5\"\nassert solution(\"4\\n<<<<\") == \"0\""
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('10') == '1'\nassert solution('0') == '0'"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 2') == '8'\nassert solution('4\\n2 4 4 2') == '0'\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 4 4 2\") == \"8\"\nassert solution(\"4\\n2 4 4 2\") == \"0\"\nassert solution(\"4\\n3 4 4 2\") == \"0\"\nassert solution(\"4\\n3 2 4 2\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '8'\nassert solution('3') == '22'\nassert solution('4') == '10800015'"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 2\") == \"8\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4 2\") == \"8\"\nassert solution(\"3 4 4 2\") == \"1\"\nassert solution(\"2 2 5\") == \"0\""
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"2 4 4 2\") == \"8\"\nassert solution(r\"4 5 6 5\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 3 5\n4\n2\n''') == '16'\nassert solution('''\n4\n1 2 3 4\n3\n1 2 3 4\n4\n1 2 3 4\n3\n1 2 3 4\n''') == '16'\nassert solution('''\n5\n3 2 4 2 4\n1\n3\n2\n1\n3\n''') == '12'\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 4 4 2') == '8'\nassert solution('4\\n2 2 3 5') == '0'"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '47'\nassert solution('5') == '136542'"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\nab\nde\naj\n''') == '47'\nassert solution('''\n5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542'\nassert solution('''\n3\naa\njj\naa\n''') == '44'"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\naa\nbb\ncc\ndd\n''') == '44'\nassert solution('''\n3\nab\nac\n\n''') == '44'\nassert solution('''\n5\nacb\nb\nc\na\n\n''') == '136542'\n"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"47\"\nassert solution('5') == \"136542\"\n"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nab\nde\naj\n''') == '47', \"First example\"\nassert solution('''\n5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542', \"Second example\"\n"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nab\nde\naj\n\n''') == '47', 'First example'\nassert solution('''\n5\nabcdef\nghij\nbdef\naccbd\ng\n\n''') == '136542', 'Second example'\n\n'''\n"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '47'\nassert solution('5') == '136542'"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nab\nde\naj\n''') == '47'\nassert solution('''\n5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542'"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"47\"\nassert solution(\"5\") == \"136542\""
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nab\\nde\\naj') == '47'\nassert solution('5\\nabcdef\\nghi\\nab\\nacb\\nde') == '136542'\nassert solution('3\\naa\\njj\\naa') == '44'\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\"\"\""
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\""
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\n\n\"\"\",\n\"\"\"\nMaximizing Subset Sum\n\nIn this problem, a binary tree is defined as an inorder traversal sequence of nodes that contains neither N nor M distinct values.\n\nA binary tree has an inorder traversal sequence if the left subtree of a node contains all the nodes to the left of this node, and all the nodes to the right of this node.\n\nNote that the root node has no left or right child. The root node also has no inorder traversal sequence.\n\nThe inorder traversal sequence for the following tree is (4, 2, 1, 3):\n\n            4\n        2       1\n      3\n    Example 1:\n\n    Input: [4,2,1,3]\n    Output: 7\n    Explanation: The inorder traversal sequence of the tree is (4, 2, 1, 3)\n    (Recall that the tree is a BT).\n    An inorder traversal sequence of a tree is a list of integers ordered from smallest to largest,\n    where each integer is the smallest possible value in the tree,\n    and the integers in the list form a complete inorder traversal sequence of the tree.\n\n    Example 2:\n    Input: [-10,9,20,null,null,15,7]\n    Output: 42\n    Explanation: The inorder traversal sequence of the tree is [-10, 9, 20, null, null, 15, 7]\n    (Recall that the tree is a BT).\n    A inorder traversal sequence of a tree is a list of integers ordered from smallest to largest,\n    where each integer is the smallest possible value in the tree,\n    and the integers in the list form a complete inorder traversal sequence of the tree.\n\n    Example 3:\n    Input: [-10,-3,0,5,9]\n    Output: 22\n    Explanation: The inorder traversal sequence of the tree is [-10,-3,0,5,9]\n    (Recall that the tree is a BT).\n    A inorder traversal sequence of a tree is a list of integers ordered from smallest to largest,\n    where each integer is the smallest possible value in the tree,\n    and the integers in the list form a complete inorder traversal sequence of the tree.\n\n    Example 4:\n    Input: [2,1]\n    Output: 2\n\nConstraints:\n\n    1 <= tree.length <= 4 * 10^4\n    tree[i].value is either -INT_MAX, 0, or INT_MAX.\n\n\"\"\"\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 6\\n\") == \"2\\n\"\nassert solution(\"4 5\\n\") == \"3\\n\"\n\"\"\"\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 6\n''') == '2'\nassert solution('''\n4 5\n''') == '3'\nprint('All test cases passed.')"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"6 3\") == \"4\"\n\n\n\n\n'''\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AB\") == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NO\""
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AXBYBXA\") == \"YES\"\nassert solution(\"BACFAB\") == \"NO\"\n\"\"\"\nimport re"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n'''\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AXBYBXA') == 'YES'\nassert solution('BACFAB') == 'NO'\nassert solution('ABCDDABD') == 'NO'\nassert solution('ABCDDABD') == 'NO'\nassert solution('ABCDDABD') == 'NO'\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(ABA) == \"YES\"\nassert solution(BACFAB) == \"NO\"\nassert solution(AXBYBXA) == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(ABA) == 'NO'\nassert solution(BACFAB) == 'YES'\nassert solution(AXBYBXA) == 'NO'\n\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nABA\n''') == 'NO'\nassert solution('''\nBACFAB\n''') == 'YES'\nassert solution('''\nAXBYBXA\n''') == 'NO'\n''')\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"6\", \"1 2 2 2 1 2\", \"2\", \"5 5\"]) == \"YES\"\nassert solution([\"5\", \"1 1 1 3 3\", \"3\", \"2 1 6\"]) == \"YES\"\nassert solution([\"4\", \"1 1 1 1 1\", \"1\"]) == \"NO\""
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 1 2 2 1\\n2\\n4 5\\n\") == \"YES\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\\n\") == \"NO\"\nassert solution(\"3\\n1 1 1 3 3\\n3\\n2 1 6\\n\") == \"YES\"\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == \"NO\"\nassert solution(\"5\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\"\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 2 2 1 2') == 'YES'\nassert solution('1 1 1 3 3') == 'YES'\nassert solution('5 5') == 'NO'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n\nassert solution('''5\n1 2 2 2 1 2\n3\n2 1 6\n''') == 'NO'\n\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'YES'\n\nassert solution('''5\n1 1 1 3 3\n4\n2 1 6\n''') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n1 2 2 2 1 2\\n2\\n5 5\\n\") == \"YES\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\\n\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 2 2 1 2') == 'YES'\nassert solution('5\\n1 2 3 4 5\\n1\\n15\\n') == 'YES'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'YES'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'YES'\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\\n1\\n15\") == \"YES\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\\n4\\n3\\n2\\n1\") == \"YES\"\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 2 2 1 2') == 'YES'\nassert solution('5\\n1 1 1 3 3') == 'NO'\nassert solution('6\\n1 2 2 2 1 2') == 'YES'\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'Yes'\nassert solution([\n    '2',\n    '1',\n    '2',\n    '3',\n]) == 'Yes'\n\n\"\"\""
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(f) == 'No'"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\n\"\"\""
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 0\n2 2\n3 1\n''') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes', \"base/spaceship connected\"\nassert solution('2 1') == 'No', \"no perfect matching\"\n\n\"\"\"\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n0 0\n2 0\n3 1\n-2 1\n0 3\n2 2''') == 'Yes', \"First\"\nassert solution('''2 1\n1 0\n2 2''') == 'No', \"Second\""
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('2 1') == 'No'\n"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3', 'wrong answer'\nassert solution('4\\n21 5 3 33') == '1 4', 'wrong answer'"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '16 3'\nprint(\"Congratulations! All tests passed!\")"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"16 3\""
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\"\n) == \"16 3\"\nassert solution(\n    \"4\"\n) == \"1 4\""
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '16'\nassert solution('4') == '1'\nassert solution('5') == '16'\n"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '16 3'\nassert solution('4') == '1 4'\n\n\"\"\"\n"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n80 7 16 4 48\n''') == '16 3'\nassert solution('''\n4\n21 5 3 33\n''') == '1 4'\n\n\u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u043a\u0430\u043c \u0434\u043b\u0438\u043d\u044b \u043e\u0442 1 \u0434\u043e 100 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \n\n\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n80 7 16 4 48\\n') == '16 3\\n'\n\n\n\n\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n80 7 16 4 48''') == '16 3'\nassert solution('''4\n21 5 3 33''') == '1 4'\nassert solution('''6\n4 2''') == '1 4'\n'''\n"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '16 3'\nassert solution('4') == '1 4'"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"9\"\n'''"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 1\n''') == '9'\nassert solution('''4 6\n''') == '2'\nprint(solution('''10 1\n'''))"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '9'\nassert solution(input()) == '4'\n\"\"\""
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('9 8') == '8'\nassert solution('5 2') == '1'\nassert solution('9 4') == '4'\n"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n\n--OR--"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"2 7\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8\\n') == 'YES'\nassert solution('5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n') == 'NO'\nassert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([6,9,12,2,11,3,1,6,10,5,7,8,10,4,8,5,7,6,10]) == 'YES', \"test_0\"\nassert solution([5,8,10,1,4,9,6,2,3,5]) == 'NO', \"test_1\"\nassert solution([1,3,2,4]) == 'NO', \"test_2\""
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'YES'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5\\n'\n    '1 3\\n'\n    '2 4\\n'\n    '5 9\\n'\n    '6 8\\n'\n    '7 10\\n'\n) == 'YES'\nassert solution(\n    '5\\n'\n    '3 6\\n'\n    '2 9\\n'\n    '7 10\\n'\n    '1 4\\n'\n) == 'NO'\nassert solution(\n    '5\\n'\n    '5 8\\n'\n    '3 6\\n'\n    '2 9\\n'\n    '7 10\\n'\n) == 'NO'\n\n\n'''\n\n\nimport math\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    6\n    9 12\n    2 11\n    1 3\n    6 10\n    5 7\n    4 8\n''') == \"YES\"\n\nassert solution('''\n    5\n    1 3\n    2 4\n    5 9\n    6 8\n    7 10\n''') == \"NO\"\n\nassert solution('''\n    5\n    5 8\n    3 6\n    2 9\n    7 10\n    1 4\n''') == \"NO\""
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n9 12\n2 11\n1 3\n6 10\n5 7\n4 8\n\n''') == 'YES'\nassert solution('''\n5\n1 3\n2 4\n5 9\n6 8\n7 10\n\n''') == 'NO'\nassert solution('''\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n\n''') == 'NO'\n\n\"\"\""
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3\n2 4\n5 9\n6 8\n7 10\n''') == 'YES'\nassert solution('''\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''\n5\n5 7\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''\n5\n1 3\n2 4\n5 9\n6 8\n7 10\n''') == 'YES'\nassert solution('''\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'YES'\n'''\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        ans = 'YES'\n        lst = stdin.split()\n        for i in range(len(lst)):\n            lst[i] = tuple(map(int, lst[i].split()))\n\n        for i in range(len(lst) - 1):\n            if lst[i][0] < lst[i + 1][0]:\n                for j in range(lst[i][0], lst[i + 1][1]):\n                    if (j, lst[i][1]) in lst[i + 1:]:\n                        ans = 'NO'\n                        break\n            else:\n                for j in range(lst[i + 1][0], lst[i][1]):\n                    if (lst[i][0], j) in lst[i + 1:]:\n                        ans = 'NO'\n                        break\n        return ans\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n100 200 1 1 1\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n''') == '0'\nassert solution('''2\n1 2\n''') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '0'"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('2') == '0'\nassert solution('10') == '1'\nassert solution('0') == '0'"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\"\n    \"100 200 1 1 1\"\n) == \"3\"\n\nassert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\"\n) == \"0\"\n\nassert solution(\n    \"2\\n\"\n    \"101 99\"\n) == \"1\"\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '0'\nassert solution('2') == '1'"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n100 200 1 1 1\n\n''') == \"3\", \"First example\"\nassert solution('''5\n1 2 3 4 5\n\n''') == \"0\", \"Second example\"\nassert solution('''2\n101 99\n\n''') == \"1\", \"Third example\""
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution(stdin=\"5\") == \"3\"\nassert solution(stdin=\"1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n100 200 1 1 1') == '3'\nassert solution('5\\n1 2 3 4 5') == '0'\nassert solution('2\\n101 99') == '1'"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\nNYNNY''') == 'YES'\nassert solution('''6 1\n????NN''') == 'NO'\nassert solution('''6 2\n???NN''') == 'YES'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\nNYNNY''') == 'YES'\nassert solution('''6 1\n????????''') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\nNYNNY\n\n''') == 'YES'\nassert solution('''6 1\n????NN\n\n''') == 'NO'"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    5 2\n    NYNNY\n    '''\n    ) == 'YES'\nassert solution(\n    '''\n    6 1\n    ????NN\n    '''\n    ) == 'NO'"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == 'YES'\nassert solution('2\\n') == 'NO'\nassert solution('3\\n') == 'YES'\nassert solution('4\\n') == 'NO'\nassert solution('5\\n') == 'YES'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\nNYNNY') == 'YES'\nassert solution('6 1\\n????NN') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"5 1\") == \"NO\"\nassert solution(\"5 1\") == \"NO\"\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 2], 'NYNNY') == 'YES'\nassert solution([6, 1], '????NN') == 'NO'"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 2\n4 5 2''') == '8'\nassert solution('''10 20 30 40\n20 30 40 50 60 70 80 90 100''') == '126'\nassert solution('''15 25 35\n50 25 35''') == '16'\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 2') == '8'\nassert solution('5 1 -1') == '1'\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\") == \"8\"\nassert solution(\"3 5 7\") == \"8\"\nassert solution(\"5 3 8\") == \"13\"\nassert solution(\"10 5 20\") == \"50\"\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 2') == '8'"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4 2\") == \"8\"\nassert solution(\"2 2 1\") == \"1\"\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4 2\") == \"8\"\nassert solution(\"8 5 1\") == \"27\"\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n5 4 6''') == '8'\nassert solution('''2 5 6\n8 4 10''') == '12'\nassert solution('''1 100 1\n1 1 100''') == '50'\n\nimport sys\nfrom io import StringIO\nimport unittest\nimport math\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"8\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\") == \"8\"\nassert solution(\"9 3 2\") == \"18\"\nassert solution(\"6 3 2\") == \"12\""
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"YES\""
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'NO'\nassert solution('''\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'YES'"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\") == \"YES\"\nassert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n\") == \"NO\""
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'YES'\nassert solution('''\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n') == 'YES'\n\nassert solution('3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n') == 'NO'\n\nassert solution('1\\nsubscriber 2833 2749\\n') == 'NO'"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\n\n----------------------------------------\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u00abYES\u00bb, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e, \u0438\u043b\u0438 \u00abNO\u00bb \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435. \u0414\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043a\u043e\u0434\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e.\n\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434\u044b \u0446\u0438\u043a\u043b\u043e\u0432, \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 if \u0438 \u0442.\u0434.\n\nSample Input 1\n5\nsubscriber 2833 2749\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\nApplejack 2400 2400\nBudAlNik 2084 2214\n\nSample Output 1\nNO\n\nSample Input 2\n6\nOrange_Bread -2400 -2400\nBudAlNik -2200 -2400\nBudAlNik -2000 -2400\nBudAlNik -2400 -2300\nBudAlNik -2400 -2400\n\nSample Output 2\nYES\n'''"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'YES'\nassert solution('''\n2\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'NO'\nassert solution('''\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'YES'"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"123456789\") == \"YES\"\nassert solution(\"AABB\") == \"NO\"\n"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'NO'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'YES'\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\n\"\"\""
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''100000000_2''') == '4'\nassert solution('''101_2''') == '5'\nassert solution('''10100_2''') == '3'\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '4'\n\"\"\"\n\nfrom functools import reduce\nfrom math import log2"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10100\") == \"3\"\n\n\n\n\"\"\""
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000_2') == '256_10'\nassert solution('101_2') == '5_10'\n\"\"\"\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100000000_2') == '256_10'\nassert solution('101_2') == '5_10'\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100000000_2\") == \"256_10\"\nassert solution(\"101_2\") == \"5_10\"\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100000000''') == '4'\nassert solution('''101''') == '2'\nassert solution('''10100''') == '3'\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100000000\n''') == '4'\nassert solution('''101\n''') == '2'\nassert solution('''10100\n''') == '3'\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n\n''') == '2'\n\nassert solution('''\n8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\n''') == '3'"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\n\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n\n''') == '3'"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == \"2\"\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == \"3\"\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\nOutput\n2''') == \"2\""
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == \"2\"\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == \"3\"\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\nOutput\n2''') == \"3\"\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2'\nassert solution('8 1') == '3'\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\n\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\n\nassert solution('''\n8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\n''') == '2'"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n\nassert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\n\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\n\n'''\n\nfrom collections import deque\nimport unittest\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''\n8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\n''') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n7 11\n4 7\n''') == '1'\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"2\",\n    \"7 11\",\n    \"4 7\",\n]) == \"1\"\nassert solution([\n    \"5\",\n    \"1 2\",\n    \"2 3\",\n    \"3 4\",\n    \"4 5\",\n    \"5 6\",\n]) == \"3\"\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n7 11\n4 7\n''') == '1', \"First\"\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3', \"Second\"\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4') == '1'\nassert solution('5 6\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1'\nassert solution('''\n2\n3 4\n4 7\n''') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '3', 'First'\nassert solution('10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '10', 'Second'\nassert solution('1\\n2\\n1\\n2\\n1\\n2') == '2', 'Third'\nassert solution('5\\n4\\n2\\n1\\n3\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1', 'Fourth'\nassert solution('100\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '100', 'Fifth'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == \"1\"\nassert solution('2') == \"1\"\nassert solution('6') == \"3\"\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '3'"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '3'"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''\n3\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '2'\nassert solution('''\n2\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '0'\n''')"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == 'NO'\nassert solution('''2 2\n5 6\n2 2''') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3 1\n3 1 10 1\n3 2 10 1\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('2 2') == 'NO'\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 2]) == \"YES\"\nassert solution([2, 2]) == \"NO\"\nassert solution([4, 1]) == \"YES\"\nassert solution([4, 1]) == \"NO\"\nassert solution([1, 1]) == \"YES\"\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n5 5\n2 2\n''') == 'YES'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n''') == 'NO'\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n5 5\n2 2\n\n''') == 'YES'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n\n''') == 'NO'"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_) == \"NO\""
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n5 5\n2 2\n\n''') == 'NO'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n\n''') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('5 5') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('4 1') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n-1\n?\n\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 2\n-1\n?\n\n\"\"\") == \"Yes\"\nassert solution(\"\"\"4 5\n?\n1\n?\n1\n?\n\n\"\"\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n-1\n?''') == 'Yes'\nassert solution('''2 100\n-10000\n0\n1\n\n''') == 'No'\nassert solution('''4 5\n?\n1\n?\n1\n?\n\n''') == 'Yes'"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n-10000\\n1\") == \"Yes\"\nassert solution(\"4 5\\n?\\n?\\n1\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == 'Yes'\nassert solution(\"2 100\") == 'Yes'\nassert solution(\"4 5\") == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == \"Yes\"\nassert solution('2 100') == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n?\n?\n?''') == 'Yes'\n\nassert solution('''\n2 100\n?\n?\n?''') == 'Yes'\nassert solution('''\n4 5\n?\n1\n?\n1\n?''') == 'No'"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 100\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 100') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 100\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20\n8192''') == '15'\nassert solution('''14\n8192''') == '8191'\nassert solution('''20\n8192''') == '15'\nassert solution('''14\n8192''') == '8191'\nassert solution('''20\n8192''') == '15'\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20') == '15'\nassert solution('8192') == '8191'\nassert solution('14') == '6'\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\""
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n\"\"\""
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('14\\n') == '6'\nassert solution('20\\n') == '15'\nassert solution('8192\\n') == '8191'"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\""
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 -1') == '-1'\nassert solution('1 -1 -1') == '-1'\nassert solution('-1 1') == '-1'\nassert solution('-1 -1') == '1'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"-\"\nassert solution(\"1 1 1\") == \"-\"\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '-1'\nassert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 1') == '2'\nassert solution('1 1') == '-1'\nassert solution('8 8') == '-1'\nassert solution('4 7') == '2'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n24 0\n''') == '2'\nassert solution('''\n24 1\n''') == '3'\nassert solution('''\n24 -1\n''') == '4'\nassert solution('''\n1 1\n''') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('0') == '0'\nassert solution('10') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n102''') == '100'\nassert solution('''5 3\n51528''') == '10028'\nassert solution('''1 1\n1''') == '0'"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n51528') == '10028'\nassert solution('3 2\\n102') == '100'\nassert solution('1 1\\n1') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('1 0') == '0'\n\nprint('all tests passed')"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n101\"\"\") == \"100\"\nassert solution(\"\"\"1 1\n1\"\"\") == \"0\"\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('1 1 1') == '0'"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n51528\") == \"10028\"\nassert solution(\"3 2\\n102\") == \"100\"\nassert solution(\"1 1\\n1\") == \"0\"\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"10028\"\nassert solution(\"3 2\") == \"100\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3\n''') == \"5\"\nassert solution('''\n1 3 2 3\n''') == \"4\"\nassert solution('''\n1 2 1 3\n''') == \"4\"\n'''"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\""
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\""
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"2 4 3\") == \"3\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"2 3 1 4\") == \"6\"\nassert solution(\"1 3 3 2\") == \"5\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 1 2 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 3 2 3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\n\nstdin = ''\nwith open('input.txt', 'r') as fin:\n    for line in fin:\n        stdin += line\n\nprint(solution(stdin))"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\""
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2 0 1 2\\n\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\\n\") == \"1 1\""
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2 0 1 2\\n\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\\n\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\""
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2 0 1 2\\n\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\\n\") == \"1 1\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"1 1\"\nassert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''ABC??FGHIJK???OPQR?TUVWXY?''') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('''WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO''') == '-1'\nassert solution('''AABCDEFGHIJKLMNOPQRSTUVW??M''') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"??????????????????????????\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '-1'\nassert solution(input) == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\", ) == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\", ) == -1\nassert solution(\"??????????????????????\", ) == -1\n\nstdin = \"AABCDEFGHIJKLMNOPQRSTUVW??M\"\nprint(solution(stdin))\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\\n\""
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"-1\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVW??M\") == \"-1\"\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"ABC??FGHIJK???OPQR?TUVWXY?\\n\"\n) == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\n    \"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\"\n) == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\\n\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n100 200 100\n\n''') == 'YES'\nassert solution('''4\n100 100 100 200\n\n''') == 'NO'\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n100 200 100\\n') == 'YES'\nassert solution('4\\n100 100 100 200\\n') == 'NO'\n\n\"\"\""
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n100 200 100\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n100 100 100 200\n\"\"\") == \"NO\""
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n100 200 100\\n') == 'YES'\nassert solution('3\\n100 200 100\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n100 200 100') == 'YES', solution('3\\n100 200 100')\nassert solution('4\\n100 100 100 200') == 'NO', solution('4\\n100 100 100 200')\nassert solution('5\\n100 100 100 100 200') == 'NO', solution('5\\n100 100 100 100 200')"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0010\n0100\n''') == '5'\nassert solution('''3 4\n001000\n000010\n000010\n''') == '18'\nassert solution('''4 3\n01110\n01110\n01110\n01110\n''') == '15'\nassert solution('''4 6\n111111\n111111\n111111\n111111\n111111\n111111\n111111\n111111\n111111\n''') == '36'\nassert solution('''5 8\n11110\n11110\n11110\n11110\n11110\n11110\n11110\n11110\n11110\n''') == '32'\n"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '5'\nassert solution('3 4') == '12'"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"5\"\nassert solution(input_2) == \"12\"\n"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 2\n0010\n0100\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n3 4\n001000\n000010\n000010\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n4 3\n01110\n01110\n01110\n01110\n\"\"\") == \"18\"\n"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 4\") == \"18\"\nassert solution(\"4 3\") == \"12\""
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n0010\n0100''') == '5'\nassert solution('''3 4\n001000\n000010\n000010''') == '18'\nassert solution('''4 3\n01110\n01110\n01110\n01110''') == '12'\n"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n001000\n000010\n000010\n''') == '18'\nassert solution('''\n3 3\n01110\n01110\n01110\n''') == '18'\nassert solution('''\n5 5\n00110011100000\n0000111111111\n0000010101010\n000011111111\n0000010101010\n0000010101010\n''') == '8'\n\n'''\n\nimport math"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 3') == '18'\nassert solution('5 5') == '11'\nprint(\"The code is correct.\")"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n0010\n0100\n\n''') == '5'\n\nassert solution('''\n3 4\n001000\n000010\n000010\n\n''') == '18'\n\nassert solution('''\n4 3\n01110\n01110\n01110\n01110\n\n''') == '21'"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 4\") == \"12\"\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n1 2 3 2 10\\n1 3 4 3 3\\n') == '3'\nassert solution(\n    '7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\\n') == '2'\nassert solution(\n    '4\\n1 10 2 10\\n2 4 2 2\\n') == '10'\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 2 10\") == \"3\"\nassert solution(\"4 2 2 2\") == \"10\"\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 2 10\\n1 3 4 3 3\\n\") == \"3\"\nassert solution(\"4\\n1 10 2 10\\n2 4 2 2\\n\") == \"10\"\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 2 10\\n1 3 4 3 3\\n') == '3'\nassert solution('4\\n1 10 2 10\\n2 4 2 2\\n') == '10'\nassert solution('7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\\n') == '2'\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"3\"\nassert solution('4') == \"10\"\nassert solution('7') == \"2\""
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"3\"\nassert solution(input_) == \"10\""
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 2 10\\n1 3 4 3 3\") == \"3\"\nassert solution(\"4\\n1 10 2 10\\n2 4 2 2\") == \"10\"\nassert solution(\"7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\") == \"2\"\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n1 2 3 2 10\n1 3 4 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 10 2 10\n2 4 2 2\n\"\"\") == \"10\"\nassert solution(\"\"\"7\n1 1 1 1 1 1 1\n2 2 2 3 6 7 6\n\"\"\") == \"2\""
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,1,2,2,10]) == 3\nassert solution([4,2,2,2,2,2]) == 10\nassert solution([7,6,5,4,3,2,1,1,1]) == 2\nprint(\"All tests passed\")"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 -5\\n') == '3'\nassert solution('5 1 3\\n') == '4'\nassert solution('3 2 7\\n') == '3'\n\n'''"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 3') == '4'\nassert solution('6 2 -5') == '3'\nassert solution('3 2 7') == '4'\nassert solution('10 5 4') == '2'\nassert solution('-8 2 -2') == '-7'\n\n\"\"\"\n\nn, a, b = map(int, input().split())\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\n\"\"\""
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_from_stream()) == output\nassert solution(input_from_file()) == output\n\n\n\"\"\""
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2 -5\") == \"3\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"3 2 7\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 -5\") == \"3\"\nassert solution(\"3 1 3\") == \"4\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"6 2 -5\") == \"3\"\nassert solution(\"6 1 3\") == \"3\"\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2 -5\n\n''') == '3'\nassert solution('''5 1 3\n\n''') == '4'\nassert solution('''3 2 7\n\n''') == '3'\nassert solution('''1 1 1\n\n''') == '1'\nassert solution('''2 3 2\n\n''') == '2'\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 -5\") == \"3\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"3 2 7\") == \"3\"\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"1\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n-1 -1 -1 -1 -1\n''') == '1'\nassert solution('''5\n-1 -1 -1 -1 -1\n''') == '1'\nassert solution('''9\n-1 6 4 2 1 4 7 10 2\n''') == '3'\nassert solution('''9\n-1 6 4 2 1 4 7 10 2\n''') == '3'\nassert solution('''5\n-1 -1 -1 -1 -1\n''') == '1'\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(\"1\\n3\") == \"2\"\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n-1 -1 -1 -1 -1\n''') == '2'\nassert solution('''7\n-1 -1 4 5 1 2 3\n''') == '1'\nassert solution('''9\n8 6 4 2 1 4 7 10 2\n''') == '3'"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n9\n8 6 4 2 1 4 7 10 2\n''') == '3'\n\nassert solution('''\n5\n-1 -1 -1 -1 -1\n''') == '1'\nassert solution('''\n7\n-1 -1 4 5 1 2 3\n''') == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n8 6 4 2 1 4 7 10 2\\n') == '3'\nassert solution('5\\n-1 -1 -1 -1 -1\\n') == '1'\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6 4 2 1 4 7 10 2') == \"3\"\nassert solution('-1 6 -1 2 -1 4 7 -1 2') == \"3\"\nassert solution('1') == \"1\"\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n-1 -1 4 5 1 2 3''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\nprint(solution('''9\n8 6 4 2 1 4 7 10 2'''))\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '3'\nassert solution('8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9') == '1'\nassert solution('-1 6 -1 2 -1 4 7 -1 2') == '1'\nassert solution('8 6 4 2 1 4 7 10 2') == '2'\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"8 1\") == \"5\""
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 4\naaaaaaaaa''') == 4\nassert solution('''2 5\naaaaaaaaa\n''') == 5\nassert solution('''3 5\naaaaaaaaa\n''') == 4\nassert solution('''6 6\naaaaaaaaa\naaaaaaaaa''') == 4\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 4\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\nabba\n\n''') == \"4\"\nassert solution('''\n8 1\naabaabaa\n\n''') == \"5\"\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"aab\") == 2\nassert solution(\"abab\") == 3\nassert solution(\"abababab\") == 4\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\nabba\n''') == '4'\nassert solution('''8 1\naabaabaa\n''') == '5'\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 4\n\n\n'''\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 4\nassert solution(input()) == 5\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 1\naaa\n''') == '4'\nassert solution('''\n8 2\naabaabaa\n''') == '5'"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n100 50 50\n\n''') == '0'\nassert solution('''\n2\n6 5\n\n''') == '1 2'\nassert solution('''\n4\n51 25 99 25\n\n''') == '3 1 2 4'\n\nassert solution('''\n10\n25 95 95 99 25 95 95 50 75 75 95 95 99 25 95 95 50 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 25 95 95 99 50 75 75 75 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95 99 50 75 75 75 95 95 99 25 95 95"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1 2'\nassert solution('4') == '3 1'\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 3'\nassert solution(\"5\\n8 5 3\") == '1 2 4'\nassert solution(\"5\\n8 5 3\\n\") == '2 3'"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n100 50 50\n''') == '2'\n\nassert solution('''\n3\n80 60 60\n''') == '1'\n\nassert solution('''\n4\n51 25 99 25\n''') == '3'\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\\n1 2\"\nassert solution(\"4\") == \"3\\n1 2 3\"\nassert solution(\"5\") == \"0\\n\"\nassert solution(\"6\") == \"1\\n1\\n\"\nassert solution(\"7\") == \"2\\n1 2\\n3\\n\"\n\n'''\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2 3'\nassert solution('5') == '1 2 3 4'\nassert solution('6') == '1 2 3 4 5'\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n100 50 50\n''') == '0'\n\nassert solution('''\n3\n80 60 60\n''') == '1 2'\n\nassert solution('''\n4\n51 25 99 25\n''') == '3 1 2 4'\n\nassert solution('''\n2\n6 5\n''') == '1 2'\n\nassert solution('''\n4\n51 25 99 25\n''') == '3 1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n51 25 99 25\n\n''') == '3\\n1 2 4'\nassert solution('''\n6\n6 5\n\n''') == '3\\n1 2 4'\nassert solution('''\n3\n100 50 50\n\n''') == '0'\nassert solution('''\n4\n51 25 99 25\n\n''') == '3\\n1 2 4'\nassert solution('''\n3\n100 50 50\n\n''') == '3\\n1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2 1\"\nassert solution(\"3\\n60 50 50\\n\") == \"3 1\"\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == \"1.000000000000\"\nassert solution('''\n2\n''') == \"1.500000000000\"\n\n'''\nFirst we read input and set some initial variables.\nNow we read input line by line.\n'''\n\nimport sys"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n\n''') == '1.500000000000'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5''') == '1.500000000000'\nassert solution('''2''') == '1.500000000000'\nassert solution('''3''') == '1.500000000000'\nassert solution('''4''') == '1.500000000000'\nassert solution('''5''') == '1.500000000000'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1.500000000000'"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1''') == \"1.000000000000\"\nassert solution('''2\n1\n1''') == \"1.500000000000\"\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '1.5'\nassert solution('4\\n') == '2'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == '1.500000000000'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1.500000000000'\nassert solution('3') == '1.500000000000'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n\"\"\") == \"1.500000000000\"\n\nassert solution(\"\"\"\n4\n\"\"\") == \"2.500000000000\"\n\nassert solution(\"\"\"\n10\n\"\"\") == \"10.000000000000\"\n\nassert solution(\"\"\"\n100\n\"\"\") == \"100.00000000000\"\n\nassert solution(\"\"\"\n10\n\"\"\") == \"100.00000000000\""
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '3 5 1'"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '3 5 1'\nassert solution('2') == '1'"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\\n2\") == \"0\"\n"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"6\"\n"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n\") == \"2\\n3\\n1\"\nassert solution(\"9\\n\") == \"3\\n5 1\"\n\nstdin = input()"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n\nOutput\n2''') == '2 3'\n\nassert solution('''9\n\nOutput\n3 5 1''') == '3 5 1'\n"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2 3'\nassert solution('9') == '3 5 1'\nassert solution('2') == '1'"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '3 5 1'\nassert solution('2') == '1'"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"9\") == \"3 5 1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2 3'\nassert solution('9') == '3 5 1'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0', \"First Example\"\nassert solution('4') == '10', \"Second Example\"\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()[:-1]\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('42') == '10'\nassert solution('98765432') == '23456789'\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    42\n''') == '10'\nassert solution('''\n    1\n    58\n''') == '0'\nassert solution('''\n    98765432\n    23456789\n''') == '23456789'"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n42\n''') == '10'\nassert solution('''\n1\n58\n''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n42\n\"\"\") == \"10\"\nassert solution(\"\"\"\n1\n58\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1\n98765432\n\"\"\") == \"23456789\"\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n42\") == \"10\"\nassert solution(\"1\\n58\") == \"0\"\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '10'\nassert solution('98765432') == '23456789'"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"10\"\n\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"10\"\n\nassert solution(\"17\") == \"0\"\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"werd\"\nassert solution(\"4\") == \"word\"\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nweird') == 'werd'\nassert solution('4\\nword') == 'word'"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nweird') == 'werd'\nassert solution('4\\nword') == 'word'\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nweird\") == \"werd\"\nassert solution(\"5\\nword\") == \"word\""
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nweird\n''') == 'werd'\n\nassert solution('''5\nword\n''') == 'word'\n\nassert solution('''5\naaeaa\n''') == 'aaeaa'\n\nassert solution('''5\nabababab\n''') == 'abababab'\n\nassert solution('''5\nthebeebreeee\n''') == 'thebeebreeee'\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nweird\") == \"werd\"\nassert solution(\"4\\nword\") == \"word\"\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5', 'word') == 'word'\nassert solution('4', 'word') == 'word'\nassert solution('3', 'word') == 'word'\nassert solution('5', 'aaeaa') == 'aaeaa'\nassert solution('5', 'aaeaa') == 'aaeaa'\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"werd\"\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nweird') == 'werd'\nassert solution('4\\nword') == 'word'"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'werd'\nassert solution('4') == 'word'"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('3 2 3') == '0'\n\n'''\nfrom typing import List"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\") == \"2\"\nassert solution(\"6 2 3\") == \"4\"\nassert solution(\"11 3 10\") == \"7\"\nassert solution(\"3 2 3\") == \"0\"\nassert solution(\"8 1 1\") == \"0\"\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\"\n\"\"\"\nn, a, b = int(input()), int(input()), int(input())\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('6 2 3') == '0'\nassert solution('3 2 3') == '0'\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\") == \"2\"\nassert solution(\"6 2 3\") == \"4\"\nassert solution(\"11 3 10\") == \"7\"\nassert solution(\"3 2 3\") == \"0\"\nassert solution(\"3 3 3\") == \"0\"\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('3 2 3') == '0'\nassert solution('3 2 3') == '0'\n\"\"\"\n\n\"\"\"\nfrom itertools import count"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1 1\n*...*''') == '2'\n\nassert solution('''6 2 3\n*...*.\n''') == '4'\n\nassert solution('''11 3 10\n.*....**.*.\n''') == '7'\n\nassert solution('''3 2 3\n***\n''') == '0'\n\nprint(solution('''1 2 1\n*.*\n'''))\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('3 2 3') == '0'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 4'\nassert solution('9') == '1 9'\nassert solution('14') == '1 8'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '2 4'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 8\"\nassert solution(stdin='''\n20\n\n''') == \"NO\"\nassert solution(stdin='''\n15\n\n''') == \"NO\"\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n3 4\n''') == '2 1'\nassert solution('''\n3 4\n1 2\n''') == 'NO'\nassert solution('''\n8 2\n1 2\n''') == '2 1'\nassert solution('''\n12 3\n1 2\n''') == 'NO'\nassert solution('''\n2 8\n1 2\n''') == '1 4'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''19\n1 8\n''') == '1 8'\nassert solution('''16\n''') == 'NO'\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2\"\nassert solution(\"1 2 3 4\") == \"1 2\"\nassert solution(\"1 2 3 4 5\") == \"1 2\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2\"\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1,2\") == \"1,2\"\nassert solution(\"2,3\") == \"1,3\"\nassert solution(\"1,2,3\") == \"1,2\"\nassert solution(\"4,5,6\") == \"2,6\"\nassert solution(\"3,4,5,6\") == \"2,4\"\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 1\\n\"\n    ) == \"2 1\"\nassert solution(\n    \"2\\n\"\n    \"5 5\\n\"\n    ) == \"-1\"\nassert solution(\n    \"1\\n\"\n    \"10\\n\"\n    ) == \"-1\"\n\nimport itertools"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 1\n''') == '2 1'\nassert solution('''\n2\n5 5\n''') == '-1'\nassert solution('''\n1\n10\n''') == '-1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n''') == '2'\n\nassert solution('''\n3\n1 2 1\n''') == '2'\n\nassert solution('''\n2\n5 5\n''') == '-1'\n\nassert solution('''\n1\n10\n''') == '-1'"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\""
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"-1\""
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 1\n''') == '2'\n\nassert solution('''\n2\n5 5\n''') == '-1'\n\nassert solution('''\n1\n10\n''') == '-1'\n\n''')\n\nn = int(input())\narr = list(map(int,input().split()))"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 1\n''') == '2 1'\nassert solution('''\n2\n5 5\n''') == '-1'\nassert solution('''\n1\n10\n''') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 1\n''') == '2'\nassert solution('''\n1\n''') == '-1'\nassert solution('''\n2\n''') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 1\n''') == '2'\nassert solution('''2\n5 5\n''') == '-1'\nassert solution('''1\n10\n''') == '-1'\nassert solution('''2\n2 2\n''') == '1 2'\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '-1'\nassert solution() == '2 2'\nassert solution() == '1 1'\n\n\n\"\"\""
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"9 9 9\"\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('27') == '3'"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '2'\nassert solution('27') == '3'\nassert solution('123') == '3'\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('27') == '3'\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''4\n''') == '2'\nassert solution('''27\n''') == '3'"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"3\""
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n4\n''') == '2'\nassert solution('''\n27\n''') == '3'"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('13') == '3'\nassert solution('26') == '2'\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '1 2'\nassert solution(\"4\") == '1 1 1 1'\nassert solution(\"27\") == '1 1 1 1 1 1 1 1 1 1'\nassert solution(\"123\") == '2 1 1 2'\nassert solution(\"12345\") == '2 1 1 1 2 3 4 5'\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"3\"\nassert solution(\"11\") == \"2\"\nassert solution(\"101\") == \"2\"\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n2 3\n2 3\n\nInput\n2\n2 2\n\nOutput\n1\n2\n\nInput\n3\n2 1 1\n\nOutput\n3\n1 1 2\n    '''\n) == '2 2'\n\nassert solution(\n    '''\n3\n2 2 1\n\nOutput\n3\n1 1 2\n    '''\n) == '2 2'\n\nassert solution(\n    '''\n4\n2 1 2 3\n\nOutput\n4\n1 2 3 2\n    '''\n) == '2 1 3'\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 3\n''') == '2'\nassert solution('''\n2\n2 2\n''') == '1'\nassert solution('''\n3\n2 1 1\n''') == '3'\nassert solution('''\n3\n2 1 1\n''') == '2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n2 2\n''') == '2'\nassert solution('''\n3 2\n2 2\n''') == '1'\nassert solution('''\n2\n2 2\n''') == '1'\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('1 2') == '1 2'"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"1 2\"\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3 2\") == \"1 2\"\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"2 3 2 3\"\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution() == '1'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''5\n6\n7''') == '7'\nassert solution('''5\n8\n9''') == '5'\nassert solution('''10\n20\n30''') == '10'\nassert solution('''1_100\n2_100\n3_100''') == '100'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('1_2') == '110_2'\nassert solution('110_2') == '6_10'\nassert solution('1111000_2') == '120_10'\nassert solution('111110000_2') == '496_10'"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"9981\") == \"496\"\nassert solution(\"99999999999\") == \"500000000\"\nassert solution(\"111110000\") == \"100000000\"\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('1010') == '10'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2_2') == '1_2'\nassert solution('110_2') == '6_10'\nassert solution('1111000_2') == '120_10'\nassert solution('111110000_2') == '496_10'\n\n\n'''\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('1_2') == '10'\nassert solution('110_2') == '10'\nassert solution('1111000_2') == '496'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"992\") == \"496\"\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1_2\n110_2\n1111000_2\n111110000_2''') == '496'\nassert solution('''1\n9\n101_10\n101_10''') == '10'\nassert solution('''1\n99\n99_100\n99_100''') == '99'\nassert solution('''1\n9_1\n101_10\n101_10''') == '1'\nassert solution('''1\n9_1\n100_10\n100_10''') == '1'\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"19 7\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == '8'\nassert solution('2 0') == '4'\nassert solution('19 7') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 6\n10\n99\n''') == '8'\nassert solution('''\n2 0\n1\n9\n''') == '4'\nassert solution('''\n19 7\n1000\n9999\n''') == '6'"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"19 7\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"19 7\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"0 0\") == \"4\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"19 7\") == \"6\"\nassert solution(\"19 9\") == \"0\"\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == \"1\"\nassert solution('0 1') == \"0\"\nassert solution('1 0') == \"0\"\nassert solution('1 1') == \"0\"\nassert solution('1 0') == \"0\""
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6\\n10') == '8'\nassert solution('2 0\\n1') == '4'\nassert solution('19 7\\n1000') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"6 4\") == \"6\""
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 3 1 4 2\\n\") == \"4\"\nassert solution(\"6 4\\n1 1 2 2 3 3\\n\") == \"6\"\nassert solution(\"10000000 10000000\\n\") == \"0\"\nassert solution(\"2 1 2\\n\") == \"1\"\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 5\") == \"4\"\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"6 4\") == \"6\"\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '4'\nassert solution('6 4') == '6'\n\nimport math\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 3 1 4 2') == '4'\nassert solution('6 4\\n1 1 2 2 3 3') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '4'\nassert solution('6 4') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '4'\nassert solution('6 4') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '4'\nassert solution('6 4') == '6'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '125'\n) == '3'\n\nassert solution(\n    '43'\n) == '5'\n\nassert solution(\n    '1000000000'\n) == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('100000000') == '10000000'\nassert solution('2') == '0'\nassert solution('4') == '0'\nassert solution('11') == '2'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '3'\nassert solution('''\n40\n''') == '4'\nassert solution('''\n10000000\n''') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\nassert solution(input) == \"5\"\nassert solution(input) == \"5\"\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''125\n\n''') == '3'\nassert solution('''43\n\n''') == '5'\nassert solution('''1000000000\n\n''') == '10000000'"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '3'\nassert solution('3\\n') == '5'\nassert solution('4\\n') == '7'\nassert solution('10\\n') == '10'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\n30''') == '3'\nassert solution('''20\n100''') == '10000000'\nassert solution('''20\n20''') == '20'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12345\") == \"3\"\nassert solution(\"10000001\") == \"10000000\"\nassert solution(\"12345678\") == \"6\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\n\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\n\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 0\n1 2\n5 2\n7 1''') == '6'\nassert solution('''3 2\n5 1\n7 0''') == '1'\nassert solution('''4 1\n5 1\n7 2\n3 2''') == '9'\nassert solution('''7 4\n5 1\n7 2\n3 2''') == '835'\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == '0'\nassert solution(\"2 1\") == '0'\nassert solution(\"3 2\") == '4'\nassert solution(\"4 1\") == '6'\nassert solution(\"7 4\") == '328'\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n4 3 4 1 6') == '11'\nassert solution('5 2\\n10 20 14 20 11') == '28'\nassert solution('11 5\\n5 6 3 2 3 4 7 5 4 5 6') == '-1'\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\n4 3 4 1 6') == '11'\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"11\"\nassert solution(\"5 2\") == -1"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == \"28\"\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '11'\nassert solution('2 2') == '-1'\nassert solution('1 5') == '28'\nassert solution('5 7') == '28'\nassert solution('12 5') == '-1'\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '11'\nassert solution('5 2') == '-1'\nassert solution('11 5') == '28'"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"11\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"11 5\") == \"28\"\nassert solution(\"10 20 14 20 11\") == \"28\""
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"28\""
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s1) == \"11\"\nassert solution(s2) == \"28\""
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '28'\nassert solution(input()) == '-1'"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('9 4') == 'NO'\nassert solution('9 4') == 'NO'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('9 4') == 'NO'"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''9 4\n2\n2 4''') == 'YES'\nassert solution('''9 4\n3\n2 3 1''') == 'YES'\nassert solution('''9 4\n3\n1 2 4''') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n2 3 1''') == 'YES'\nassert solution('''9 4\n3\n2 3 1''') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n2 3 1\") == \"YES\"\nassert solution(\"9 4\\n3\\n2 3 1\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 4\") == \"NO\""
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'NO'"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'YES'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'YES'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\n\n\n'''\n\n\nimport re"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|||||+||=|||||||\") == \"||||||||||\"\nassert solution(\"||||||||||=|||||||\") == \"||||||||||\"\nassert solution(\"||||||||||||=|||||||\") == \"||||||||||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('||+|=|||||') == '|||+|=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('|||||+||=||') == '||||+||=||'\nassert solution('|||||+||=||||||') == '||||+||=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'\nassert solution('|||||+||=||||||') == '||||+||=||||||'\nassert solution('|+|=|||||') == '|+|=|||||'\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('||+|=|||||') == '|||+|=||||||'\nassert solution('|||||+||=||||||') == '||||+||=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||+|=||||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"|||||||+|=||||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||\"\nassert solution(\"|+|=||||||\") == \"|+|=||||\"\nassert solution(\"|||||||+||=||||||\") == \"|||||||+||\"\nassert solution(\"|||||||||+||=||||||\") == \"|||||||||+\"\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+||||=||') == '|||||=||'\nassert solution('||||||=||||||') == '||||+||=||||||'\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|+|=||||||\") == \"|+|=||||||\""
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|+|=|||||||\") == \"||+|=||||||\"\nassert solution(\"|||||||+||=||||||\") == \"|||||||+||=||||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n|||||+||=||||||\n\n|||||+||=||||||\n\n||||+||=|||||||\n\n||||+||=|||||||\n''') == '|||||+||=||||||'\nassert solution('''\n|||||+||=|||||||\n\n|||||+||=|||||||\n\n||||+||=|||||||\n\n||||+||=|||||||\n''') == '|||||+||=|||||||'\nassert solution('''\n|||+|=||||||\n\n|||||+||=||||\n\n||||+||=|||||\n\n||||+||=|||||\n''') == '|||+|=||||||'\nassert solution('''\n|||||+||=||||||\n\n|||||+||=||||||\n\n||||+||=|||||||\n\n||||+||=|||||||\n''') == '|||||+||=||||||'\nassert solution('''\n|||||+||=|||||||\n\n|||||+||=|||||||\n\n||||+||=|||||||\n\n||||+||=|||||||\n''') == '|||||+||=|||||||'\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\""
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 2') == '1'\nassert solution('2 3') == '0'\nassert solution('3 4') == '2'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == 2\nassert solution(\"3 4\") == 7\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"3 3\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '1'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 5\") == \"2\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2 5''') == '2'\nassert solution('''5 3\n5 2''') == '1'\nassert solution('''7 7\n7 4''') == '0'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 1 2\\nRL\\nUU\\nDR\\n'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('2') == '1 2'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2 1 2\"\nassert solution(\"4\") == \"2 1 2\"\nassert solution(\"5\") == \"2 1 2\"\nassert solution(\"6\") == \"2 1 2\"\nassert solution(\"7\") == \"2 1 2\"\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"25\") == \"2\"\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2 1 2\\nRUD\\nUDD\\nRDD\\nRDD'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"-1 0\") == \"1 2\"\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1 2'\nassert solution('-1 0') == '1 2'\nassert solution('0 3') == '2'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2\\n1 2\\nRL\\nUU'\nassert solution('6') == '-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n'\nassert solution('0') == '-1'\nassert solution('1') == '0\\n'\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2\\n1 2\\nRL'\nassert solution('6') == '-1\\n0\\n2\\n1 2\\nLR'\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'a***b'\nassert solution('13') == '***gmg***'\nassert solution('9') == '*********'\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s1) == s2\nassert solution(s2) == s1"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == 'a*b*c*d'\nassert solution(\"1\") == '*'\n\nprint(solution(input()))\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"d\"\nassert solution(\"5\") == \"e\"\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"a***b\"\nassert solution(\"13\") == \"***gmg***\"\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\""
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n' + 'aogogob\\n') == 'a***b'\nassert solution('13\\n' + 'ogoogoogo\\n') == '***gmg***'\nassert solution('9\\n' + 'ogoogoogo\\n') == '*********'"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogogo\") == \"***gmg***\"\nassert solution(\"ogoogoogo\") == \"***********\""
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open('sample1.in')) == 'a***b'\nassert solution(open('sample2.in')) == '***gmg***'\nprint(solution(open('input.in')))\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'a***b'\nassert solution('13') == '***gmg***'\nassert solution('9') == '*********'\nprint(solution(input()))\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'\n\n\n\"\"\"\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"20190929 1605\") == \"363165664\"\nassert solution(\"947 987654321987654321\") == \"593574252\"\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n\") == '2'\nassert solution(\"20190929 1605\\n\") == '363165664'\nassert solution(\"947 987654321987654321\\n\") == '593574252'\n\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2\\n') == '2'\nassert solution('20190929 1605\\n') == '363165664'\nassert solution('947 987654321987654321\\n') == '593574252'\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"20190929 1605\") == \"363165664\"\nassert solution(\"947 987654321987654321\") == \"593574252\"\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"593574252\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"947 987654321987654321\") == \"593574252\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"20190929 1605\") == \"363165664\""
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '10 2\\n'\n    '') == '2'\n\nassert solution(\n    '20190929 1605\\n'\n    '') == '363165664'\n\nassert solution(\n    '947 987654321987654321\\n'\n    '') == '593574252'\n\n\n\"\"\""
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 8\") == \"3\\n10 2008 13726\\n\"\nassert solution(\"1 2 -18\") == \"0\\n\"\nassert solution(\"2 2 -1\") == \"4\\n1 31 337 967\\n\""
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 -18') == '0', \"Wrong\"\nassert solution('3 2 8') == '3', \"Wrong\"\nassert solution('1 2 -18') == '1', \"Wrong\"\nassert solution('3 2 -8') == '4', \"Wrong\"\nassert solution('1 -1') == '0', \"Wrong\"\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 -18\") == \"0\"\nassert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"4\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"3 2 1\") == \"0\"\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 -18') == '0'\nassert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 8') == '10 2008 13726'\nassert solution('1 2 -18') == '0'\n\nassert solution('2 2 -1') == '4'"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\nassert solution('3 2 8') == '3'\nassert solution('1 2 1') == '2'\nassert solution('1 2 -1') == '1'"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == 'NO'\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'YES'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\n''') == 'NO'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == 'NO'\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'YES'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == 'NO'\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == 'YES'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == 'YES'\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'NO'"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'NO'\nassert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'YES'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'NO'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'YES'\nassert solution('''1 2 3 4 5 6 7 8''') == 'NO'\nassert solution('''3 1 6 5''') == 'NO'\n'''"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '24'\nassert solution(input()) == '6'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([39, 10880, 9889]) == '0'\nassert solution([26, 7258, 6123]) == '2'\nassert solution([493, 8000, 8000]) == '24'\nassert solution([329, 19913, 19900]) == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''239 10880 9889''') == '0'\nassert solution('''26 7258 6123''') == '2'\nassert solution('''493 8000 8000''') == '24'\nassert solution('''329 19913 19900''') == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''26 7258 6123''') == '0'\nassert solution('''493 8000 8000''') == '0'\nassert solution('''329 19913 19900''') == '8'\nassert solution('''101 6800 6500''') == '0'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '8'\nassert solution('329 19913 19900') == '0'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''239 10880 9889\n26 7258 6123\n493 8000 8000\n101 6800 6500\n329 19913 19900\n''') == '0'\nassert solution('''26 7258 6123\n493 8000 8000\n101 6800 6500\n329 19913 19900\n''') == '8'\nassert solution('''26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n''') == '1'\nassert solution('''26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n''') == '1'\nassert solution('''26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n26 7258 6123\n''') == '1'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '24'\n\n\"\"\"\n\nn, x, y = map(int, input().split())"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    239 10880 9889\n    ''') == \"0\"\nassert solution('''\n    26 7258 6123\n    ''') == \"2\"\nassert solution('''\n    493 8000 8000\n    ''') == \"24\"\nassert solution('''\n    101 6800 6500\n    ''') == \"8\"\n\n'''\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"1\\n\")) == \"0\"\nassert solution(input(\"3\\n\")) == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"24\"\nassert solution(\"101 6800 6500\") == \"8\"\nassert solution(\"329 19913 19900\") == \"0\"\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '2'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n1\n1\n\n''') == '0'\n\nassert solution('''2\n3\n3\n2\n\n''') == '3'\n\nassert solution('''1\n2\n3\n3\n\n''') == '5'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(\"1\\n2\\n3\\n1\") == \"0\"\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '0'\nassert solution('3') == '5'"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n5''') == '0'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n3\\n1\") == \"3\"\n\nassert solution(\"1\\n2\\n3\\n5\") == \"0\"\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3',\n    '2',\n    '3',\n    '1'\n) == '3'\nassert solution(\n    '1',\n    '2',\n    '3',\n    '5'\n) == '0'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('1') == '0'"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n1''') == '0'\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 1 4\\n\") == \"6\"\nassert solution(\"30 20 10\\n\") == \"20\""
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 1 4\") == '6'\nassert solution(\"30 20 10\") == '20'\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 1 4') == '6'\nassert solution('30 20 10') == '20'"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 1 4\n''') == '6'\nassert solution('''30 20 10\n''') == '20'\nassert solution('''0 0 0\n''') == '0'\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 1 4\\n') == '6'\nassert solution('30 20 10\\n') == '20'\n\n\"\"\"\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\""
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 1 4\"\n    ) == \"6\"\nassert solution(\n    \"30 20 10\"\n    ) == \"20\"\nassert solution(\n    \"3 10 20\"\n    ) == \"5\"\nassert solution(\n    \"1 10\"\n    ) == \"1\"\nassert solution(\n    \"1 5\"\n    ) == \"0\"\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '7 1 4'\n) == '6'\nassert solution(\n    '30 20 10'\n) == '20'"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 1 4\") == '6'\nassert solution(\"30 20 10\") == '20'\nassert solution(\"30 0 0\") == '30'\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 1 4') == '6'\nassert solution('30 20 10') == '20'\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1'\nassert solution('2 228') == '0'\nassert solution('3 7') == '-1'\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 3') == '1'\nassert solution('3 7\\n1 1') == '0'\nassert solution('4 7\\n1 1') == '-1'\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 7\") == \"-1\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"2 228\") == \"0\"\nassert solution(\"3 7\") == \"-1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 7\") == \"1\"\nassert solution(\"2 228\\n1 1\") == \"0\"\nassert solution(\"3 7\\n1 2 3\") == \"-1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 3\n4 5 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 228\n1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 7\n1 2 3\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 7\") == \"1\"\nassert solution(\"2 228\") == \"0\"\nassert solution(\"3 7\") == \"-\"\n\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')\n\nfrom problems.problem_018_solution_approximate import solution"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"100000 5\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"7 1\") == \"1\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\n\nheight, width = [int(x) for x in input().split()]\npicture = [[x for x in input()] for _ in range(height)]\nis_valid = True\n\nfor row in picture:\n    print(row)\n    if row[0]!= '.':\n        is_valid = False\n        break\n\nis_valid = True"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"7 7\") == \"NO\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n....*..\n*....*\n....*..\n\n''') == 'NO'\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n......\n..*...\n.****.\n..*...\n..*...\n\n''') == 'YES'\nassert solution('''\n3 5\n..*..\n****.\n.*...\n\n''') == 'NO'\nassert solution('''\n5 10\n..........\n..*.......\n.*.******.\n..*.......\n..........\n\n''') == 'YES'\nassert solution('''\n5 6\n......\n..*...\n.****.\n..*...\n..*...\n\n''') == 'NO'\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"7 7\") == \"NO\"\nassert solution(\"5 10\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n\") == \"YES\"\nassert solution(\"3 5\\n\") == \"NO\"\nassert solution(\"7 7\\n\") == \"NO\"\nassert solution(\"5 6\\n\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"7 7\") == \"NO\"\nassert solution(\"5 10\") == \"NO\"\nassert solution(\"5 20\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n......\n..*...\n.****.\n..*...\n..*...\n''') == \"YES\", \"First Example\"\n\nassert solution('''\n3 5\n..*..\n****.\n.*...\n\n''') == \"NO\", \"Second Example\"\n\nassert solution('''\n5 10\n..........\n..*.......\n.*.******.\n..*.......\n..........\n\n''') == \"NO\", \"Third Example\"\n\nassert solution('''\n5 6\n......\n..*...\n.****.\n..*...\n..*...\n''') == \"YES\", \"Fourth Example\"\n\nassert solution('''\n5 7\n.*...*.\n***.***\n.*...*.\n\n''') == \"NO\", \"Fifth Example\""
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 6\n......\n..*...\n.****.\n..*...\n..*...\n\nOutput\nYES\n''') == \"YES\"\n\nassert solution('''3 5\n..*..\n****.\n.*...\n\nOutput\nNO\n\nInput\n7 7\n.......\n...*...\n..****.\n...*...\n...*...\n.......\n.*.....\n\nOutput\nNO\n\nInput\n5 10\n..........\n..*.......\n.*.******.\n..*.......\n..........\n\nOutput\nNO''') == \"NO\""
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1 2\n''') == \"NO\"\nassert solution('''\n3 1 2\n''') == \"YES\"\nassert solution('''\n3 3 3\n''') == \"YES\"\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == 'YES'\nassert solution('3 3 3') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"3 3 0\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\n\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 2') == 'YES'\nassert solution('3 3 3') == 'NO'\nassert solution('3 1 1') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2') == 'YES'\nassert solution('3 3 3') == 'NO'\nprint(solution(input()))"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\n\n\"\"\"\nimport itertools\n\nn, a, b = map(int, stdin.split())\n\nadjacency_matrix = [[0] * n for _ in range(n)]\nfor i, j in itertools.product(range(n), range(n)):\n    if i!= j:\n        adjacency_matrix[i][j] = adjacency_matrix[j][i] = 1\n\nvisited_matrix = [[0] * n for _ in range(n)]\nadjacent_components = 0"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 2') == 'YES'\nassert solution('3 3 3') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2') == 'YES'\nassert solution('3 1 2') == 'NO'"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\") == \"YES\", \"a\"\nassert solution(\"3 3 3\") == \"NO\", \"b\"\nassert solution(\"3 3 3\") == \"NO\", \"c\""
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '2'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10\\n7 2\\n1') == '2'\nassert solution('2 2\\n2 1\\n2') == '0'\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 10\n7 2\n1\n''') == '2'\nassert solution('''\n2 2\n2 1\n2\n''') == '0'\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 10\n3 5\n2\n''') == '2'\nassert solution('''\n1 10\n2 4\n2\n''') == '2'\nassert solution('''\n1 10\n4 2\n2\n''') == '4'\nassert solution('''\n2 2\n3 2\n1\n''') == '0'\nassert solution('''\n2 2\n3 1\n2\n''') == '0'\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"7 2\") == \"1\"\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == '2'\nassert solution(\"2 2\") == '0'"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10\\n7 2\\n1') == \"2\"\nassert solution('2 2\\n2 1\\n2') == \"0\"\nprint(solution(input()))\n\n---Input---\n4 5\n5 3\n1\n\n---Output---\n3\n\n---Input---\n4 2\n4 1\n4\n\n---Output---\n1\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == \"2\"\nassert solution('2 2') == \"0\"\nassert solution('2 1') == \"1\"\nassert solution('2') == \"1\"\nassert solution('3 1') == \"0\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"ABCDEFGKLMNOPQRSTUVWXYZ\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''ABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'YXWVUTGHIJKLM'\nassert solution('''BUVTYZFQSNRIWOXXGJLKACEMDH''') == 'Impossible'"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == \"Impossible\"\nassert solution(''.join(sorted(set(stdin)))) == \"ABCDEFGHIJKLM\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YXWVUTGHIJKLM\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSGTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'Impossible'\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSGTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'Impossible'\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \">\", \"TEST ERROR\"\nassert solution(\"10 3\") == \"<\", \"TEST ERROR\"\nassert solution(\"6 6\") == \"=\", \"TEST ERROR\"\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '>'\nassert solution('1 3') == '<'\nassert solution('2 3') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '=',"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \">\"\nassert solution(\"10 3\") == \"<\"\nassert solution(\"6 6\") == \"=\"\nassert solution(\"3 2\") == \"<\"\nassert solution(\"9 9\") == \">\"\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '<'\nassert solution('10 3') == '>'\nassert solution('6 6') == '='\n\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8') == '<'\nassert solution('10 3') == '>'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\") == \"<\"\nassert solution(\"10 3\") == \"<\"\nassert solution(\"6 6\") == \"=\""
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"2\""
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '3'\nassert solution(input) == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\nprint(solution(*[input() for _ in range(int(input()))]))"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3 7 3 20''') == '26'\nassert solution('''7 9 3 1 8''') == '28'\nassert solution('''10 10 10 10 10''') == '20'\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 3 7 3 20''') == '26'\nassert solution('''7 9 3 1 8''') == '28'\nassert solution('''10 10 10 10 10''') == '20'"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"26\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\""
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\""
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([7, 3, 7, 3, 20]) == \"26\"\nassert solution([7, 9, 3, 1, 8]) == \"28\"\nassert solution([10, 10, 10, 10, 10]) == \"20\""
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"7 3 7 3 20\n\"\"\") == \"26\"\nassert solution(\n\"\"\"7 9 3 1 8\n\"\"\") == \"28\"\nassert solution(\n\"\"\"10 10 10 10 10\n\"\"\") == \"20\"\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n1 7 12\") == \"7\"\nassert solution(\"2 0\\n11 -10\") == \"0\""
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 0\\n\"\n    \"0 0 1000 0 0\"\n) == \"0\"\nassert solution(\n    \"2 0\\n\"\n    \"11 -10\"\n) == \"10\"\nassert solution(\n    \"5 0\\n\"\n    \"0 0 1000 0 0\"\n) == \"0\"\nassert solution(\n    \"5 0\\n\"\n    \"0 0 1000 0 0\"\n) == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7\"\nprint(solution())\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 0') == '0'\nassert solution('5 0') == '0'\nassert solution('4 0') == '0'\nassert solution('4 1') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"7\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"5 0\") == \"0\""
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '7'\nassert solution('2 0') == '0'\nassert solution('5 0') == '0'"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10\\n1 7 12') == '7'\nassert solution('2 0\\n11 -10') == '10'\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 10\n1 7 12\n''') == '7'\nassert solution('''\n2 0\n11 -10\n''') == '10'\nassert solution('''\n5 0\n0 0 1000 0 0\n''') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10') == '7'\nassert solution('2 0') == '0'\nassert solution('5 0') == '0'\nassert solution('7 0') == '0'"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '7'\nassert solution('2 0') == '10'\nassert solution('5 0') == '0'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"110\") == '10'\nassert solution(\"4\") == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n\n\n'''"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '-1'\nassert solution('110') == '10'\n\"\"\"\nn = int(input())\nfor i in range(1, 10):\n    if n == i ** 2 + i * 10 - n:\n        print(i)\n        break\nelse:\n    print(-1)\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '1'\nassert solution(\"4\") == '-1'\nassert solution(\"110\") == '10'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n''') == '-1'\nassert solution('''\n4\n''') == '-1'\n\nassert solution('''\n2\n''') == '1'\nassert solution('''\n110\n''') == '10'\n\nassert solution('''\n4\n''') == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"110\") == \"10\""
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '-1'\nassert solution('110') == '10'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"00:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('01:00') == '23:00'"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '00:06'\nassert solution(input()) == '23:00'\nassert solution(input()) == '0:00'\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\nassert solution('00:01') == '00:01'\nassert solution('00:00') == '00:00'\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''00:00\n00:00''') == '00:00'\nassert solution('''00:01\n00:00''') == '00:01'\nassert solution('''00:00\n00:01''') == '00:00'\nassert solution('''00:00\n00:00''') == '00:00'\nassert solution('''00:01\n00:00''') == '00:00'\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '23:00'\nassert solution('00:01') == '23:01'\nassert solution('00:00') == '23:00'\nassert solution('01:00') == '23:01'"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\n\nassert solution('00:00') == '23:00'\nassert solution('01:00') == '00:01'\nassert solution('00:01') == '00:01'\n\"\"\""
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00:00') == '00:00'\nassert solution('00:00') == '00:00'\nassert solution('00:00') == '00:00'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '3'\nassert solution('1 2 3 4 5 6 7 8') == '3'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n6 1 6 6 0\\n') == '2'\nassert solution('5\\n2 2 3 3 0\\n') == '3'\nassert solution('5\\n3 3 5 6 0\\n') == '5'\nassert solution('5\\n2 4 3 0\\n') == '2'\nassert solution('5\\n6 6 4 4 0\\n') == '3'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n6 1 6 6 0\\n') == '2'\nassert solution('1\\n2 1\\n') == '1'\nassert solution('1\\n2 3\\n') == '2'\nassert solution('1\\n2 2\\n') == '1'\nassert solution('1\\n2 3\\n') == '2'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n6 1 6 6 0') == '2'"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n6 1 6 6 0') == '2'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 6 6 0\") == \"2\"\nassert solution(\"3 3 1 6 0\") == \"1\"\nassert solution(\"4 4 4 4 4\") == \"1\"\nassert solution(\"2 2 2 2 2\") == \"1\"\nassert solution(\"3 3 1 2 2\") == \"2\"\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 1 6 6 0') == '2'\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n6 1 6 6 0''') == '2'"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 0') == '3'\nassert solution('3 2 1') == '4'\nassert solution('5 6 6 1') == '8'\n\"\"\"\n\nn, m, k = map(int, input().split())"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n''') == 4\nassert solution('''\n3 3 0\n''') == 3\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 0\") == 3\nassert solution(\"3 2 1\") == 4\n\"\"\"\n\nn, m, k = map(int, input().split())\nfrom math import factorial, pow\n\ndp = [[0 for _ in range(k+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(k+1):\n        if j == 0:\n            dp[i][j] = 1\n        elif i == 1:\n            dp[i][j] = j\n        else:\n            dp[i][j] = dp[i-1][j] + dp[i-1][j-1]\n\nprint(dp[n][k] % pow(10,9) + 1)\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 1') == '4'\nassert solution('3 3 0') == '3'\n\n\n\n'''\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"1 3 1\") == \"6\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"2 3 2\") == \"2\"\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 3 0\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n3 2 1\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n2 2 0\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n1 1 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1 1 1\n\"\"\") == \"1\""
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 0\n''') == '4'\nassert solution('''\n3 2 1\n''') == '4'\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 0\\n') == '3\\n'\nassert solution('3 2 1\\n') == '4\\n'\n\"\"\""
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 0\n\n''') == '3'\nassert solution('''\n3 2 1\n\n''') == '4'\n'''"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NO'\nassert solution('11') == 'YES'\nassert solution('441231') == 'YES'\nassert solution
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\""
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\n"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(3) == \"YES\"\nassert solution(8) == \"NO\""
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"113114\"\n) == \"YES\"\nassert solution(\n    \"11112\"\n) == \"YES\"\nassert solution(\n    \"1114142\"\n) == \"YES\"\nassert solution(\n    \"11141514\"\n) == \"NO\"\nassert solution(\n    \"11214144\"\n) == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\nassert solution('55555555') == 'NO'\nassert solution('1111') == 'YES'\n"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1131414\") == \"YES\"\nassert solution(\"141414\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\nassert solution(\"11111\") == \"YES\"\n\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('141414') == 'YES'\nassert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\n"
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111414') == 'YES'\nassert solution('1') == 'NO'\nassert solution('141231') == 'NO'\nassert solution('1412411') == 'YES'\nassert solution('1411') == 'NO'\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\n\n'''\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 7 1 3 2 2\n''') == '2'\nassert solution('''5 5 2 3 1 1\n''') == 'Poor Inna and pony!'\nprint(solution('''5 5 2 3 1 1\n'''))"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\n\n\"\"\"\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\" + \"bacabcab\") == \"4\"\nassert solution(\"8\\n\" + \"bacabcab\") == \"4\"\nassert solution(\"6\\n\" + \"abbbbb\") == \"5\"\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '5'\nassert solution('4') == '3'\nassert solution('8') == '4'\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '5'\nassert solution('4') == '3'\nassert solution('8') == '4'\nassert solution('10') == '3'\nassert solution('12') == '3'\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\nbacabcab\n\n''') == '4'\n\nassert solution('''\n4\nbcda\n\n''') == '3'\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n4\nbacabcab\n''') == '4'\nassert solution('''\n\n6\nabbbbb\n''') == '5'\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INP1) == EXP1\nassert solution(INP2) == EXP2\nassert solution(INP3) == EXP3\nassert solution(INP4) == EXP4\nassert solution(INP5) == EXP5\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('6') == '5'"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nbacabcab\n''') == '4'\nassert solution('''4\nbcda\n''') == '5'\nassert solution('''6\nabbbbb\n''') == '5'"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\nbacabcab''') == '4'\nassert solution('''4\nbcda''') == '3'\nassert solution('''6\nabbbbb''') == '5'"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\nprint('Congratulations! All test cases passed :)')\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6', solution('6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n'\n\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1\n1\n1\n1\n2\n2\n2\n2\n-1\n\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '2\n2\n2\n2\n-1\n\nassert solution('''6 5\n1 2 3 4 5\n3\n4\n2\n3\n4\n5\n''') == '-1'\n'''\n\nn, k = list(map(int, input().split()))\nd = list(map(int, input().split()))\nq = int(input())"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\nassert solution('''0 1\n1 2\n3\n5\n7\n9\n13\n''') == '0'\nassert solution('''0 0\n1\n''') == '0'\nassert solution('''0 1\n1\n''') == '0'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '2'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\nassert solution('''\n6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '2'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution() == '20'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('''4\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15''') == '1'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\nassert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '2'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 4') == '8'\nassert solution('5 4 0') == '7'"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\nassert solution('''5 4 1\n1 2\n3 1\n''') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '8'\nassert solution() == '7'"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 4\n1 2\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 4') == '8'\nassert solution('5 4 0') == '7'"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\n\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 4') == '8'\nassert solution('5 4 0') == '7'\nassert solution('10 10 0') == '3700'\nassert solution('20 10 0') == '3700'"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 0\n1 2\n3 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n-1 -1\n''') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2 4') == '8'\nassert solution('5 4 0') == '7'\nassert solution('10 10 0') == '20'\nassert solution('10 10 1') == '10'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''\n5 4 0\n1 2\n3 1\n''') == '7'"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\n\n\n\"\"\""
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 13') == '0'\nassert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"4 3\\n\") == \"2\"\nassert solution(\"5 4\\n\") == \"2\"\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n\") == \"2\\n\"\nassert solution(\"6 12\\n\") == \"4\\n\"\nassert solution(\"5 13\\n\") == \"0\\n\""
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 5\n12''') == '2'\nassert solution('''6 12\n13''') == '4'\nassert solution('''5 13\n12''') == '0'\n\nsolution('0')\nsolution('5 13')\nsolution('6 12')\nsolution('10 5')\n\nsolution('10 6')"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 5\") == \"2\"\nassert solution(\"6 12\") == \"4\"\nassert solution(\"5 13\") == \"0\""
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\n\n\u0414\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435.\n\n\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043e \u043d\u0430\u0431\u043e\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445: \n\n\u041f\u0435\u0440\u0432\u044b\u0439 \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b n \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0438\u0449\u0435\u043c \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 (\u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e). \n\u0412\u0442\u043e\u0440\u043e\u0439 \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b m \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0438\u0449\u0435\u043c \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 (\u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e).\n\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438\nSample Input 1\n\n10 5\n\nSample Output 1\n\n2\n\nSample Input 2\n\n6 12\n\nSample Output 2\n\n4\n\nSample Input 3\n\n5 13\n\nSample Output 3\n\n0\n\n\n\"\"\"\n\nn, x = map(int, input().split())\n\na = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    for j in range(n):\n        if a[i] * a[j] == x:\n            cnt += 1\n\nprint(cnt)\n\n\n\"\"\"\nSample Input\n10 5\n\nSample Output\n2\n\"\"\"\n\n\n\"\"\"\nSample Input\n6 12\n\nSample Output\n4\n\"\"\"\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\n\n'''\n\nn, x = list(map(int, input().split()))\ncount = 0\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if i * j == x:\n            count += 1\nprint(count)\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n    10 5\n''') == '2'\n\nassert solution(\n'''\n    6 12\n''') == '4'\n\nassert solution(\n'''\n    5 13\n''') == '0'\n'''\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 12') == '1'\nassert solution('6 12') == '1'\nassert solution('5 13') == '0'"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\njava\npython\nphp\n''') == 'java'\nassert solution('''6 6\njava\npython\nphp\n''') == 'python'\nassert solution('''5 2\njava\nphp\n''') == 'phphp'"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"phphp\"\nassert solution(\"4 3\") == \"java\""
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"java\"\nassert solution(\"6 6\") == \"python\"\nassert solution(\"5 2\") == \"phphp\"\n"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'java', \"First\"\nassert solution() == 'python', \"Second\"\nassert solution() == 'phphp', \"Third\"\n"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"java\"\nassert solution(\"6 6\\n\") == \"python\"\nassert solution(\"5 2\\n\") == \"phphp\""
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n\n''') == 'java'\nassert solution('''6 6\n\n''') == 'python'\nassert solution('''5 2\n\n''') == 'phphp'\nassert solution('''5 3\n\n''') == 'phphp'\n"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n\n''') == 'java'\nassert solution('''6 6\n\n''') == 'python'\nassert solution('''5 2\n\n''') == 'phphp'\n"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n''') == 'abcdef'\nassert solution('''4 6\n''') == 'ghijkl'\nassert solution('''5 2\n''') =='mnopq'"
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"java\"\nassert solution(\"5 2\") == \"phphp\"\nassert solution(\"4 2\") == \"python\""
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n\n''') == 'java'\n\nassert solution('''6 6\n\n''') == 'python'\n\nassert solution('''5 2\n\n''') == 'phphp'"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\nRLRL\n2 4 6 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\nLLR\n40 50 60\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5\nRLLLLLLRLLR\n5 5 5 5 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nRLRL\n4 6 10\n''') == '1'\nassert solution('''3\nLLR\n40 50 60\n''') == '-1'\nassert solution('''4\nRRLL\n40 50 60\n''') == '2'\nassert solution('''2\nLLR\n40 50 60\n''') == '-1'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3\\nRLRL\\n2 4 6 10\\n\") == \"1\\n\"\nassert solution(\"3\\nLLR\\n40 50 60\\n\") == \"-1\\n\""
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nRLR\n10 4 6 10\n''') == '-1', f'''Solution\n    str\n'''\nassert solution('''1\nLLL\n100 100 100 100\n''') == '-1', f'''Solution\n    str\n'''\nassert solution('''5\nRLR\n10 5 12 12 13\n''') == '3', f'''Solution\n    int\n'''"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nRRR\\nRRR\\nRRR') == '-1'\nassert solution('5\\nRLLRLLL\\nRRRRRLLR\\nRRLRRLLR\\nRRRLRRRLR') == '1'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('3 2') == '0'\nassert solution('4') == '1'\nassert solution('4 1 2 3') == '3'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\nprint(solution(input()))\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '4\\nRLRL\\n2 4 6 10\\n') == '1'\nassert solution(\n    '3\\nLLR\\n40 50 60\\n') == '-1'\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10 9') == '56'\nassert solution('3 10 10') == '0'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 2 2\\n'\n    '1 2\\n'\n    '2 1\\n') == '4'\n\n\nassert solution(\n    '3 10 10\\n'\n    '6 6\\n'\n    '7 7\\n'\n    '20 5\\n') == '0'\n\n\nassert solution(\n    '3 10 10\\n'\n    '2 3\\n'\n    '1 1\\n') == '56'\n\n\nassert solution(\n    '4 10 9\\n'\n    '2 3\\n'\n    '1 1\\n'\n    '5 10\\n'\n    '9 11\\n') == '56'\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10 9') == '56'\nassert solution('3 10 10') == '0'\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin) == \"4\""
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('4 10 9') == '56'\nassert solution('3 10 10') == '0'\n\n'''\n\nimport sys\nsys.setrecursionlimit(1000000)\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"4 10 9\") == \"56\"\nassert solution(\"3 10 10\") == \"0\"\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\\n\") == \"4\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\\n\") == \"0\"\nassert solution(\"4 10 10\\n6 6\\n7 7\\n20 5\\n\") == \"56\"\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 2\") == \"4\"\nassert solution(\"4 10 9\") == \"56\"\nassert solution(\"3 10 10\") == \"0\"\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"0 3\"\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 1\"\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '1 1'\nassert solution('''\n3\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '0 2'\nassert solution('''\n4\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '1 2'\n'''\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2') == '1 1'\nassert solution('3\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2') == '0 2'\nassert solution('10\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2') == '0 1'\n'''\n\nstdin = input()"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '1 1'\nassert solution(\"4\") == '0 3'\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '2 2'\n'''"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '0 1'\nassert solution('4') == '0 3'"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"2\") == \"0 3\""
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"2\") == \"0 3\"\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0\n0 1\n0 2\n\n2\n0 0\n1 0\n2 0\n\n4\n0 0\n0 1\n0 2\n1 0\n2 0\n2 1\n2 2\n''') == \"1 1\"\nassert solution('''\n5\n0 0\n0 1\n0 2\n1 0\n2 0\n\n6\n0 0\n0 1\n0 2\n1 0\n2 0\n2 1\n2 2\n''') == \"0 2\"\n'''\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n<link rel=\"stylesheet\" href=\"https://unpkg.com/vue@1.0.0/dist/css/vue.css\">\n<script src=\"https://unpkg.com/vue@1.0.0/dist/js/vue.js\"></script>\n</head>\n<body>\n\n<v-component v-if=\"'print' in request\" v-else=\"console.log('You need to login to view this page')\" v-call=\"elem.snapshot('print')\">\n  <div class=\"header\">\n    <v-component v-if=\"'print' in request\" v-else=\"console.log('You need to login to view this page')\" v-call=\"elem.snapshot('print')\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col s1\">\n            <h1>Hello!</h1>\n          </div>\n          <div class=\"col s2\">\n            <h2>TESTING</h2>\n          </div>\n        </div>\n      </div>\n    </v-component>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col s1\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"button button--danger\">\n                <span class=\"fas fa-trash-alt\"></span>\n                <span class=\"text\">Delete</span>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"button button--primary\">\n                <span class=\"fas fa-cog\"></span>\n                <span class=\"text\">Test</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col s2\">\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"button button--secondary\">\n                      <span class=\"fas fa-google\"></span>\n                      <span class=\"text\">Google</span>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"button button--danger\">\n                        <span class=\"fas fa-download\"></span>\n                        <span class=\"text\">Download</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col\">\n                    <div class=\"button button--danger\">\n                      <span class=\"fas fa-trash-alt\"></span>\n                      <span class=\"text\">Delete</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <div class=\"button button--primary\">\n                    <span class=\"fas fa-user\"></span>\n                    <span class=\"text\">User</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col s1\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"button button--danger\">\n                <span class=\"fas fa-trash-alt\"></span>\n                <span class=\"text\">Delete</span>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"button button--primary\">\n                <span class=\"fas fa-cog\"></span>\n                <span class=\"text\">Test</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col s2\">\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"button button--secondary\">\n                      <span class=\"fas fa-google\"></span>\n                      <span class=\"text\">Google</span>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"button button--danger\">\n                        <span class=\"fas fa-download\"></span>\n                        <span class=\"text\">Download</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col\">\n                    <div class=\"button button--danger\">\n                      <span class=\"fas fa-trash-alt\"></span>\n                      <span class=\"text\">Delete</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <div class=\"button button--primary\">\n                    <span class=\"fas fa-user\"></span>\n                    <span class=\"text\">User</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col s1\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"button button--danger\">\n                <span class=\"fas fa-trash-alt\"></span>\n                <span class=\"text\">Delete</span>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"button button--primary\">\n                <span class=\"fas fa-cog\"></span>\n                <span class=\"text\">Test</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col s2\">\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"button button--secondary\">\n                      <span class=\"fas fa-google\"></span>\n                      <span class=\"text\">Google</span>\n                    </div>\n                    "
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('42') == '42'\nassert solution('105') == '108'\nassert solution('20') == '20'\nassert solution('999999999') == '10^9'\n\n\"\"\"\n"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"216\"\n\"\"\"\nn = int(stdin)\n\nprint(max([int(i) for i in str(n)]))\n"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n''') == '2', 'Just for fun, for the challenge, it should be 2'\n\nassert solution('''\n8\n''') == '8', 'Just for fun, for the challenge, it should be 8'\n\nassert solution('''\n1000000000\n''') == '387420489', 'Just for fun, for the challenge, it should be 387420489'"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\n\n\"\"\""
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"24\"\nassert solution(\"5\") == \"120\"\n"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('1000000000') == '387420489'"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('389') == '216'\nassert solution('7') == '7'\nassert solution('999999999') == '387420489'"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\n\"\"\""
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\", \"smallest\"\nassert solution(\"389\") == \"389\", \"smallest\"\nassert solution(\"7\") == \"7\", \"smallest\"\nassert solution(\"999999999\") == \"387420489\", \"smallest\"\nassert solution(\"100\") == \"100\", \"biggest\"\n"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"216\"\nassert solution(input) == \"7\"\nassert solution(input) == \"387420489\"\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"5 1 1 1 5 1\") == \"5\"\nassert solution(\"5 2 2 3 2 2\") == \"5\"\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1 1 5 1') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 1 1 5 1\n\n''') == \"5\"\nassert solution('''5\n2 2 3 2 2\n\n''') == \"5\"\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 5 1') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"11\"\nassert solution(\"15\") == \"13\"\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 1 5 1\") == \"5\"\nassert solution(\"5\\n2 2 3 2 2\") == \"5\"\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 1 5 1') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5\n1 1 1 5 1\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n5\n2 2 3 2 2\n\"\"\"\n) == \"5\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 1 5 1') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'\n\nstdin = '5\\n1 1 1 5 1'\nprint(solution(stdin))\nstdin = '5\\n2 2 3 2 2'\nprint(solution(stdin))\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aabb\") == \"2\"\nassert solution(\"aabcaa\") == \"1\""
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aabb\n    aabcaa\n    ''') == '1'\nassert solution('''aabcaa\n    babbb\n    ''') == '1'\n\n'''"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aabb\") == \"2\"\nassert solution(\"aabcaa\") == \"1\""
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aabb\n    a\n    bbb\n    a\n    bbb\n    a\n    b''') == '2'\nassert solution('''aabcaa\n    a\n    bbb\n    a\n    bbb\n    a\n    bbb\n    a\n    bbb''') == '1'\n"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''aabcaa''') == '1'\nassert solution('''aabcaa\n''') == '2'\n"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\n"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\n"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 3 2 3 4\") == \"2\"\nassert solution(\"6\\n1 3 3 1 3 2\") == \"1\"\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '2'\nassert solution('6') == '1'"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution() == '1'\nassert solution() == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == input_2\n\"\"\"\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1') == '4'\nassert solution('5 1 3 2 3 4') == '2'\nassert solution('6 1 3 3 1 3 2') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 3 2 3 4\n''') == '2'\nassert solution('''\n6\n1 3 3 1 3 2\n''') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 1 1\\n') == '4'\nassert solution('5\\n1 3 2 3 4\\n') == '2'\nassert solution('6\\n1 3 3 1 3 2\\n') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1 1 1\\n') == '4'\nassert solution('5\\n1 3 2 3 4\\n') == '2'\nassert solution('6\\n1 3 3 1 3 2\\n') == '1'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == '2'\nassert solution(\"4\") == '5'"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('6') == '3'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '4'\nassert solution('5') == '3'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n''') == '2'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n\n''') == '2'\nassert solution('''4\n\n''') == '5'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''4''') == '3'\nassert solution('''10''') == '4'"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5\n''') == '2'\nassert solution('''4\n4\n''') == '5'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n''') == '2'\nassert solution('''3\n''') == '2'\nassert solution('''8\n''') == '3'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n\n''') == '2'\nassert solution('''4\n\n''') == '5'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 2\n\n\"\"\""
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2230') == '2230'\nassert solution('-10') == '0'\nassert solution('-100003') == '-10000'\nassert solution('0') == '0'\nassert solution('-100') == '0'\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2230') == '2230'\nassert solution('-10') == '0'\nassert solution('-100003') == '-10000'"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == input()"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n-10\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n2230\n\"\"\"\n) == \"2230\"\nassert solution(\n\"\"\"\n-100003\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''19\n4\n8\n3\n12\n17\n22\n19\n22\n19\n18\n15\n17\n15\n15\n15\n14\n16\n14\n16\n15\n15\n15\n16\n15\n16\n16\n15\n15\n15\n16\n16\n15\n16\n16\n16\n15\n15\n15\n15\n15\n16\n16\n15\n15\n16\n16\n15\n16\n16\n15\n16\n16\n15\n16\n16\n15\n15\n15\n15\n15\n15\n15\n15\n16\n15\n15\n15\n16\n16\n15\n16\n15\n15\n15\n15\n15\n16\n16\n15\n16\n16\n15\n15\n15\n16\n15\n15\n16\n15\n15\n16\n15\n16\n15\n16\n16\n15\n16\n16\n15\n15\n16\n16\n15\n16\n16\n15\n15\n16\n15\n15\n16\n15\n16\n15\n15\n15\n15\n15\n16\n15\n15\n16\n15\n16\n15\n15\n15\n16\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n16\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(2230) == 2230\nassert solution(-10) == 0\nassert solution(-100003) == -10000\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2230''') == '2230'\nassert solution('''-10''') == '0'\nassert solution('''-100003''') == '-10000'\n\n'''\n\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"-10\") == \"0\"\nassert solution(\"2230\") == \"2230\"\nassert solution(\"-100003\") == \"0\"\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20\n20\n100\n0\n100\n100\n100\n100\n100\n100''') == '100'\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2230') == '2230'\nassert solution('-10') == '0'\nassert solution('-100003') == '-10000'\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"< ^\") == \"ccw\"\nassert solution(\"^ >\") == \"cw\"\nassert solution(\"^ v\") == \"undefined\""
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"^ >\") == \"cw\"\nassert solution(\"< ^\") == \"ccw\"\nassert solution(\"v >\") == \"cw\"\nassert solution(\"v <\") == \"ccw\"\nassert solution(\"^ ^\") == \"ccw\"\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''^ >\n1\n''') == 'cw'\n\nassert solution('''< ^\n3\n''') == 'ccw'\n\nassert solution('''^ v\n6\n''') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"^ >\") == \"cw\"\nassert solution(\"^ ^\") == \"ccw\"\nassert solution(\"< ^\") == \"undefined\"\n\nassert solution(\"^ v\") == \"ccw\"\nassert solution(\"< ^\") == \"undefined\""
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_01) == example_output_01\nassert solution(example_input_02) == example_output_02"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\".v\") == \"cw\"\nassert solution(\".^\") == \"ccw\"\nassert solution(\".v 1\") == \"cw\"\nassert solution(\".v 1^\") == \"ccw\"\nassert solution(\".^ 1\") == \"cw\"\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\nassert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"^ >\") == \"cw\"\nassert solution(\"< ^\") == \"ccw\"\nassert solution(\"^ v\") == \"undefined\""
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14') == '4'\nassert solution('5') == '0'\nassert solution('1') == '1'\n\nassert solution('R.R.R.R.R.L.R.R.R.R.R') == '10'\n\nassert solution('RR.R.R.R.R.R.L.R.R.R.R') == '2'"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nR..L\n.L..R\n.R..L\nL.R.\n.R.L''') == '4'\nassert solution('''1\n.''') == '1'\nassert solution('''3\nLLLL\n.LLL\n.L.L''') == '0'\nassert solution('''5\nRR.L\nRR.R\nRR.L\n.LL.L\n.LL.R''') == '3'"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('14\\n.L.R...LR..L..') == '4'\nassert solution('5\\nR....') == '0'\nassert solution('1\\n.\\n') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('14') == '4'\nassert solution('5') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('14\\n.L.R...LR..L..') == '4'\nassert solution('5\\nR....') == '0'\nassert solution('1\\n.') == '1'"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == str(4)\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('14') == '4'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('10') == '9'\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('14') == '4'\nassert solution('5') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nR....\n''') == '0'\nassert solution('''1\n.\n''') == '1'\nassert solution('''14\n.LL.LL.LL\nLLLLLLLLL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL\n''') == '5'\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('14') == '4'\nassert solution('5') == '0'\nassert solution('1') == '1'"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"3 1 2 4 4\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"4 4\") == \"5 4 5 4\"\nassert solution(\"4 5\") == \"5 4 5 4\"\n"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 1 2''') == '3 1 2'\nassert solution('''5 5\n2 3 1 4 4''') == '3 1 2 4 4'\nassert solution('''3 3\n1 3 2''') == '-1'"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3 1 2'\nassert solution('3 3') == '-1'"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n3 1 2\\n') == '3 1 2 4\\n'\nassert solution('3 3\\n3 1 2\\n') == '-1\\n'\n"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"3 1 2\"\nassert solution(\"3 3\") == \"3 1 2\"\nassert solution(\"1 3\\n\") == \"1 2 3\"\nassert solution(\"3 2\") == \"-1\""
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\n3 1 2 4 4''') == '3 1 2 4'\nassert solution('''3 3\n3 1 2''') == '-1'\nprint(solution('''3 4\n5 2 4'''))\n"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5\\n2 3 1 4 4\\n') == '3 1 2 4', solution('4 5\\n2 3 1 4 4\\n')\nassert solution('3 3\\n3 1 2\\n') == '-1', solution('3 3\\n3 1 2\\n')"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '3 1 2 4', 'Testing Failed'\nassert solution('3 3') == '-1', 'Testing Failed'\nassert solution('5 5') == '5 4 3 2 1', 'Testing Failed'\nprint('All tests passed!')"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"-1\"\nassert solution(\"4 4\") == \"3 1 2 4\""
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '3 1 2 4 4'\n\nassert solution('3 3') == '-1'"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1990 1\") == \"9190\"\nassert solution(\"300 0\") == \"300\"\nassert solution(\"1034 2\") == \"3104\"\nassert solution(\"9090000078001234 6\") == \"9907000008001234\""
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1990 1\n\"\"\") == \"9190\"\nassert solution(\n\"\"\"\n300 0\n\"\"\") == \"300\"\nassert solution(\n\"\"\"\n1034 2\n\"\"\") == \"3104\"\nassert solution(\n\"\"\"\n9090000078001234 6\n\"\"\") == \"9907000008001234\"\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"91905001234\"\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1990 1\") == \"9190\"\nassert solution(\"300 0\") == \"300\"\nassert solution(\"1034 2\") == \"3104\"\nassert solution(\"9090000078001234 6\") == \"9907000008001234\""
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1990 1\") == \"9190\"\nassert solution(\"300 0\") == \"300\"\nassert solution(\"1034 2\") == \"3104\"\nassert solution(\"9090000078001234 6\") == \"9907000008001234\""
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 334 667 1000\") == \"1333\"\nassert solution(\"5 826 966 900 100\") == \"933\"\nassert solution(\"10 11 10 10 10 10 10 10\") == \"42\"\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"42\"\nassert solution(input()) == \"1333\"\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('4321 8775 6543 21') == '2424'\nassert solution('4 9 2 3 1 2 2') == '10'\nassert solution('1 3 2 4 5') == '10'\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('836 624 412 200') == -12\nassert solution('1 334 667 1000') == 1333\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\n\n'''\n\n\nn1,n2,n3,n4 = map(int, stdin.split())"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\"\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 1000 2 3\"\n) == \"1333\"\n\nassert solution(\n    \"1 1 2 3\"\n) == \"1\"\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('123 16 493 912') == '-42'\nassert solution('1 6 6 16') == '-42'\nassert solution('6 6') == '-42'\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"42\"\nassert solution(input()) == \"42\""
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('836 624 412 200') == -12\nassert solution('1 334 667 1000') == 1333"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('3') == '1'\nprint('OK')\n"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 2 3') == '4'\nassert solution('7\\n1 1 3 1 1 1 1') == '4'\nassert solution('10\\n1 1 3 1 1 1 1 1 1 1 1') == '5'"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3 2 3\n''') == '4'\nassert solution('''7\n1 1 3 1 1 1 1\n''') == '4'\nassert solution('''5\n1 2 3 2 3\n''') == '4'\n\n\n\"\"\"\n"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('7') == '4'\nassert solution('5') == '4'"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2\n''') == '4'\nassert solution('''\n3\n1 2 1\n''') == '1'\nassert solution('''\n7\n1 1 3 1 1 1 1\n''') == '4'\n\n''') == '4'"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 2 3\n''') == '4'\nassert solution('''\n3\n1 2 1\n''') == '1'\nassert solution('''\n7\n1 1 3 1 1 1 1\n''') == '4'\nassert solution('''\n13\n
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 2 3\") == \"4\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '1'\nassert solution('7') == '4'\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 9\\n\") == \"2 2 L\"\nassert solution(\"4 3 24\\n\") == \"4 3 R\"\nassert solution(\"2 4 4\\n\") == \"1 2 R\"\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3 9\") == \"2 2 L\"\nassert solution(\"4 3 24\") == \"4 3 R\"\nassert solution(\"2 4 4\") == \"1 2 R\""
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3 9\n''') == '2 2 L'\nassert solution('''4 3 24\n''') == '4 3 R'\nassert solution('''2 4 4\n''') == '1 2 R'"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 9') == '2 2 L', \"first\"\nassert solution('4 3 24') == '4 3 R', \"second\"\nassert solution('2 4 4') == '1 2 R', \"third\"\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 9\") == \"2 2 L\"\nassert solution(\"4 3 24\") == \"4 3 R\"\nassert solution(\"2 4 4\") == \"1 2 R\"\n\n'''\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 9\") == \"2 2 L\"\nassert solution(\"1 3 24\") == \"4 3 R\"\nassert solution(\"2 4 4\") == \"1 2 R\"\n\n\"\"\"\n"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'G'\nassert solution(input()) == 'B'\nassert solution(input()) == 'R'\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"B\"\nassert solution(input()) == \"GR\"\nassert solution(input()) == \"BR\"\n"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"BR\"\nassert solution(\"5\") == \"B\"\nassert solution(\"10\") == \"BG\"\n\n\"\"\""
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'G'\nassert solution('3') == 'B'\nassert solution('5') == 'BR'"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\nRB\n''') == 'B'\nassert solution('''3\nGRG\n''') == 'B'\nassert solution('''5\nBBBBB\n''') == 'B'\n"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'G'\nassert solution('5') == 'B'\n"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'G'\nassert solution('3') == 'BR'\nassert solution('5') == 'B'\n\nprint(solution(input()))"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'G'\nassert solution(input()) == 'B'\nassert solution(input()) == 'B'"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) == 'B'\nassert solution(3) == 'BR'\nassert solution(2) == 'GB'"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"G\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == 'YES'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == 'YES'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == 'YES'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2') == 'YES'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n2 5\\n2 6') == 'YES'"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"YES\"\nassert solution(\"4\\n1 2\\n2 3\\n2 4\\n2 5\") == \"NO\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\") == \"YES\"\n\nassert solution(\"3\\n4 2\\n2 1\\n3 4\\n4 3\") == \"YES\"\nassert solution(\"3\\n4 2\\n2 4\\n3 2\\n4 4\") == \"NO\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n1 3\n2 4\n2 5\n3 6\n''') == 'YES', 'YES'\nassert solution('''\n1 2\n1 3\n2 4\n2 5\n3 6\n''') == 'NO', 'NO'\nassert solution('''\n3 2\n3 1\n1 2\n2 1\n2 3\n3 2\n''') == 'YES', 'YES'\nassert solution('''\n1 2\n2 3\n1 3\n2 4\n3 5\n''') == 'NO', 'NO'\nassert solution('''\n1 2\n2 3\n2 4\n2 5\n3 6\n3 7\n''') == 'NO', 'NO'\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"2 5\") == \"YES\"\nassert solution(\"2 6\") == \"YES\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == \"YES\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n1 3\n2 4\n2 5''') == 'YES'\n\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6''') == 'NO'\n\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == 'NO'\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == 'YES'\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == 'NO'"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n\n''') == 'YES'\nassert solution('''\n3\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n\n''') == 'YES'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n\n''') == 'NO'\nassert solution('''\n7\n1 2\n2 3\n3 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n\n''') == 'NO'\n'''\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n\n'''"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == 'YES'\nassert solution('4\\n1 2\\n2 3\\n3 4\\nOutput\\nNO') == 'NO'\nassert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'NO'\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '761141116'"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3\n''') == '7'\nassert solution('''\n5 14\n''') == '761141116'\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"5 14\") == \"761141116\"\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '761141116'"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '761141116'\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '106'\nassert solution('88005553535 99999999999') == '761141116'"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '761141116'\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1 3\n\n\"\"\") == \"7\"\nassert solution(\"\"\"5 14\n\n\"\"\") == \"761141116\"\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '761141116'\n"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '7'\nassert solution(input()) == '761141116'\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 1 1 1 0\n''') == 'Yes'\nassert solution('''\n1 1 0 0 1000 1000\n''') == 'No'\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 1 1 1 0') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 1 1 1 0\\n') == 'Yes'\nassert solution('1 1 0 0 1000 1000\\n') == 'No'\n\n\n\"\"\"\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\""
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 1 1 1 1 0\n''') == 'Yes'\nassert solution('''\n1 1 0 0 1000 1000\n''') == 'No'\n\n'''\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 1 1 0\\n\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\\n\") == \"No\"\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\"\n\n'''\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 1 1 1 1 0\n''') == 'Yes'\nassert solution('''\n1 1 0 0 1000 1000\n''') == 'No'\nassert solution('''\n-1 1 0 0 1000 1000\n''') == 'No'\nassert solution('''\n1 0 0 0 1 1\n''') == 'Yes'\nassert solution('''\n1 0 0 0 1 1\n''') == 'Yes'\n''') == 'Yes'"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 0 0 1 0\n''') == \"Yes\"\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\"\nprint(solution(input()))\n\"\"\"\n\na,b,c = map(int, input().split())"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 2 4') == \"4\"\nassert solution('3 1') == \"1\"\nassert solution('10 3') == \"6\"\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''3 1\n1 1 1\n''') == '1'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('3 1') == '1'\nassert solution('10 3') == '6'"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 1 2 2 4\n\n''') == '4'\nassert solution('''3 1\n1 1 1\n\n''') == '1'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n\n''') == '6'\n\nprint(solution(input()))\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 1 2 2 4\\n') == '4'\nassert solution('3 1\\n1 1 1\\n') == '1'\nassert solution('10 3\\n1 2 6 2 3 6 9 18 3 9\\n') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''\n3 1\n1 1 1\n''') == '1'\nassert solution('''\n10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('3 1') == '1'\nassert solution('10 3') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 2\") == \"4\"\n\nassert solution(\"3 1\") == \"1\"\nassert solution(\"10 3\") == \"6\""
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''\n3 1\n1 1 1\n''') == '1'\nassert solution('''\n10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"10 3\") == \"6\"\n\n\nsolution(\"10 3\")\n"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n10 15\n6 1\n''') == '27'\n\nassert solution('''\n3 0 3\n10 8\n7 11\n5 2\n''') == '26'\n\nassert solution('''\n3 1 1\n10 3\n7 11\n5 2\n''') == '26'\n\nassert solution('''\n10 5 1\n4 4\n5 1\n7 4\n5 2\n''') == '10'\n\nassert solution('''\n1 2 2\n1 5\n1 2\n''') == '2'"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '27'\nassert solution('3 0 3') == '26'"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string, \"Solution is wrong!\"\nprint(\"The local tests are done. Great job!\")"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1, 1]) == \"27\"\nassert solution([3, 0, 3]) == \"26\"\n\n\"\"\"\n\nstdin = \"\"\nwith open(\"input.txt\", \"r\") as f:\n    stdin = f.read().splitlines()"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1\\n10 15\\n6 1') == '27'\nassert solution('2 0 3\\n10 8\\n7 11\\n5 2') == '26'"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '27'\nassert solution('2 1 1') == '27'\nassert solution('3 0 3') == '26'\nassert solution('10 8') == '27'\nassert solution('7 11') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\\n10 15\") == \"27\"\nassert solution(\"3 0 3\\n10 8\\n7 11\\n5 2\") == \"26\""
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 0 3\n10 8\n7 11\n5 2''') == '26'\nassert solution('''3 1 1\n10 15\n6 1\n\n''') == '27'\nassert solution('''2 1 1\n10 15\n6 1\n\n''') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '27'\nassert solution('3 0 3') == '26'\nprint(solution(input()))"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 1\n10 15\n6 1\n''') == '27'\nassert solution('''\n3 0 3\n10 8\n7 11\n5 2\n''') == '26'\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\") == \"RL\"\nassert solution(\"5 6 14\") == \"DLDDLLLRRRUURU\"\nassert solution(\"3 3 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 3 2\\n.\"\n    \"X..\\n\"\n) == \"RL\"\n\nassert solution(\n    \"5 6 14\\n..***.\\n*...X.\\n..*...\\n..*.**\\n....*.\\n\"\n) == \"DLDDLLLRRRUURU\"\nassert solution(\n    \"3 3 4\\n***\\n*X*\\n***\\n\"\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 2') == 'RL'\nassert solution('5 6 14') == 'DLDDLLLRRRUURU'\nassert solution('1 1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 3 2\n.**\nX..\n\n\"\"\") == \"RL\"\n\nassert solution(\"\"\"\n5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n\n\"\"\") == \"DLDDLLLRRRUURU\"\n\nassert solution(\"\"\"\n3 3 4\n***\n*X*\n***\n\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"RL\"\nassert solution(input()) == \"IMPOSSIBLE\"\nassert solution(input()) == \"DLDDLLLRRRUURU\"\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2') == \"RL\"\nassert solution('5 6 14') == \"DLDDLLLRRRUURU\"\nassert solution('3 3 4') == \"IMPOSSIBLE\""
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 2') == 'DLDDLLLRRRUURU'\nassert solution('3 3 4') == 'IMPOSSIBLE'\nassert solution('5 5 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 2') == 'RL'\nassert solution('5 6 14') == 'DLDDLLLRRRUURU'\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\") == \"RL\"\nassert solution(\"5 6 14\") == \"DLDDLLLRRRUURU\"\nassert solution(\"3 3 4\") == \"IMPOSSIBLE\""
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6 14\") == \"DLDDLLLRRRUURU\"\nassert solution(\"3 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"10 10 5\") == \"RLUDLLURURDRRLLDDRDDLLDLLRLURRRUUDDLLUDRURDDDDD\"\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 100\n1 100''') == '1'\nassert solution('''2 1\n1 100\n1 100''') == '2'\nassert solution('''10 7\n1 100\n1 100''') == '6'\nassert solution('''1000000000000 1\n1000000000000 1''') == '1000000000000'\nassert solution('''100 100\n1 100\n1 100''') == '1'\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\nassert solution('1000000000000') == '1000000000000'\n\n\n\"\"\""
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2', 'Sample Test 1'\nassert solution(stdin) == '6', 'Sample Test 2'\nassert solution(stdin) == '1000000000000', 'Sample Test 3'"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n\n''') == \"6\"\nassert solution('''\n10 7\n\n''') == \"6\"\nassert solution('''\n1000000000000 1\n\n''') == \"1000000000000\"\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution() == '10'\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n''') == '2'\nassert solution('''\n10 7\n''') == '6'\nassert solution('''\n1000000000000 1\n''') == '1000000000000'\n''')"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n') == '2'\nassert solution('10 7\\n') == '6'\nassert solution('1000000000000 1\\n') == '1000000000000'"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1\n''') == '1', \"One\"\nassert solution('''\n1 1000000000\n1\n''') == '1', \"One\"\nassert solution('''\n1 1000000000\n1\n''') == '2', \"Two\"\nassert solution('''\n3 5\n0\n''') == '3', \"Three\"\nassert solution('''\n3 4\n1\n''') == '2', \"Two\"\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 3\n1 2 5 4 5\n''') == '1 2 5 4 3'\nassert solution('''4\n4 4 2 3 1\n5 4 5 3 1\n''') == '4 2 3 1 5 4'\nassert solution('''3\n3 3 4 1\n1 2 3 4\n''') == '3 3 4 1 2 3 4'\nassert solution('''2\n5 4 2 3 1\n4 5 3 1 2\n''') == '5 4 2 3 1 4 5 3 2'\nassert solution('''1\n4 4 2 3 1\n5 4 5 3 1\n''') == '4 4 2 3 1 5 4 5 3 2'\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n4 4 2 3 1\\n5 4 5 3 1') == '1 2 3 4 5'\nassert solution('5\\n2 2 5 3 1\\n5 4 5 3 1') == '5 2 3 4 1'\nassert solution('4\\n3 3 1 2 1\\n4 3 1 2 1') == '3 1 2 3 4'\n\n\n\"\"\"\n\nimport itertools\nfrom typing import List"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    1 2 3 4 3\n    1 2 5 4 5\n    ''') == '1 2 5 4 3'\nassert solution('''\n    4\n    4 4 2 3 1\n    5 4 5 3 1\n    ''') == '5 4 2 3 1'\nassert solution('''\n    6\n    1 1 3 4 1 2\n    1 2 3 4 1 5\n    ''') == '1 2 3 4 1 5'\n''')"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 2 3 4 3'\nassert solution('4') == '1 2 3 4'\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1 2 3 4 3\"\nassert solution(\"5\") == \"1 2 5 4 3\"\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 4 2 3 1\\n\"\n    \"5 4 5 3 1\"\n) == \"5 4 2 3 1\"\nassert solution(\n    \"4\\n\"\n    \"4 4 2 3 1\\n\"\n    \"5 4 5 3 1\"\n) == \"5 4 2 3 1\""
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 3\n1 2 5 4 5\n''') == '1 2 5 4 3'\nassert solution('''4\n4 4 2 3 1\n5 4 5 3 1\n''') == '4 4 2 3 1'\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 3 5 2\\n1 4 3 5 2\") == \"5 4 2 3 1\"\nassert solution(\"5\\n4 4 2 3 1\\n1 4 3 5 2\") == \"5 4 2 3 1\"\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n5 4 3 2 1\"\"\") == \"1 2 3 4 5\"\nassert solution(\"\"\"5\n4 4 2 3 1\"\"\") == \"5 4 3 2 1\"\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 2 3\"\nassert solution(\"4 67\") == \"2 1 3\"\nassert solution(\"4 68\") == \"4 1 2\""
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 15\") == \"1 2 3\"\nassert solution(\"4 67\") == \"2 1 3\"\nassert solution(\"4 68\") == \"4 1 2\"\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'\nassert solution('5 6') == '4 1 2'\nassert solution('6 8') == '3 1 2'\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 16\\n') == '1 2 3'\nassert solution('10 10\\n') == '2 1 3'\nassert solution('4 67\\n') == '2 1 3'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 15\") == \"1 2 3\"\nassert solution(\"4 67\") == \"2 1 3\"\nassert solution(\"4 68\") == \"4 1 2\""
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n10\\n20\\n30\\n') == 'YES\\n'\nassert solution('3\\n120\\n120\\n120\\n') == 'NO\\n'\nassert solution('3\\n10\\n20\\n30\\n') == 'YES\\n'\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10\n20\n30\n''') == 'YES', 'First example'\nassert solution('''\n3\n10\n10\n10\n''') == 'NO', 'Second example'\nassert solution('''\n3\n120\n120\n120\n''') == 'YES', 'Third example'\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10\\n20\\n') == 'YES'\nassert solution('3\\n10\\n10\\n10\\n') == 'NO'\nassert solution('3\\n120\\n120\\n120\\n') == 'YES'\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n10\\n20\\n30') == 'YES'\nassert solution('3\\n20\\n10\\n30') == 'NO'\nassert solution('3\\n120\\n120\\n120') == 'YES'"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n10\n20\n30\n\n''') == \"YES\"\nassert solution('''\n3\n10\n10\n10\n\n''') == \"NO\"\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n180\n120\n180\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n90\n180\n\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n180\n90\n180\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    10\n    20\n    30\n    ''') == 'YES'\nassert solution('''\n    3\n    10\n    10\n    10\n    ''') == 'NO'\nassert solution('''\n    3\n    120\n    120\n    120\n    ''') == 'YES'\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == str(2)\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '2'\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '3'\nassert solution('2 3 10 4') == '3'"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == print_\n\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 6 3\") == \"2\"\nassert solution(\"3 1 5 6\") == \"8\"\nassert solution(\"8 3 3 2\") == \"3\"\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\nassert solution('4 1 1 2') == '3'"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 6 3\n''') == '2'\nassert solution('''3 1 5 6\n''') == '8'\nassert solution('''8 3 3 2\n''') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''5 2 6 3\n''') == '2'\nassert solution(\n'''3 1 5 6\n''') == '8'\nassert solution(\n'''8 3 3 2\n''') == '2'\nassert solution(\n'''2 3 10 4\n''') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5,2,6,3]) == \"2\"\nassert solution([3,1,5,6]) == \"8\"\nassert solution([2,3,10,4]) == \"3\"\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1'\nassert solution('5 3') == '1'\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 3'\n    ) == '1'\nassert solution(\n    '2 3'\n    ) == '1'\nassert solution(\n    '10 8'\n    ) == '9'\n\nInput\n5 8\n\nOutput\n1\n\nInput\n10 8\n\nOutput\n1\n\nInput\n10 9\n\nOutput\n2\n\nInput\n10 9\n\nOutput\n0\n\nInput\n3 4\n\nOutput\n1\n\nInput\n7 9\n\nOutput\n1\n\nInput\n8 9\n\nOutput\n1\n\nInput\n8 9\n\nOutput\n2\n\nInput\n10 1\n\nOutput\n10\n\nInput\n10 9\n\nOutput\n0\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '3'\nassert solution('6 3') == '1'"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3 5\n    ''') == '3'\nassert solution('''\n    6 3\n    ''') == '1'\n''')"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(3, 5) == 3\nassert solution(6, 3) == 1"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"6 3\") == \"1\"\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\n\n''') == '3'\n\nassert solution('''\n6 3\n\n''') == '1'\n\nassert solution('''\n5 5\n\n''') == '5'\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n\") == \"3\"\nassert solution(\"6 3\\n\") == \"1\""
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"6 3\") == \"1\""
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"6 3\") == \"1\""
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Yes'\nassert solution('2') == 'No'\n\"\"\"\nimport itertools"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"No\"\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'Yes'\nassert solution('''5\n-1 4\n1 2\n-1 5\n-1 8\n1 9\n''') == 'No'\nassert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'Yes'\nassert solution('''5\n-1 4\n1 2\n-1 5\n-1 8\n1 9\n''') == 'No'\nassert solution('''5\n-1 4\n1 2\n-1 5\n-1 8\n1 9\n''') == 'No'"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"5 6\") == \"Yes\"\nassert solution(\"4 6\") == \"No\"\nassert solution(\"3 3\") == \"No\""
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'Yes'\nassert solution('''4\n1 -1\n-1 4\n-1 6\n-1 9\n''') == 'Yes'\nassert solution('''5\n1 -1\n-1 4\n-1 6\n-1 9\n-1 12\n''') == 'No'\nassert solution('''5\n1 -1\n-1 4\n-1 6\n-1 9\n-1 12\n''') == 'Yes'\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Yes'\nassert solution('6') == 'No'"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'Yes'\nassert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'No'\nassert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Yes'\nassert solution('10') == 'No'\nassert solution('100') == 'Yes'\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes'\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"respectable\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\") == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n\") == \"respectable\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n\") == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n') == \"respectable\"\nassert solution('1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n') == \"ugly\""
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0\\n0 1\\n0 2') =='respectable'\nassert solution('1 1\\n1 2\\n1 3') == 'ugly'"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"respectable\"\nassert solution(\n    \"1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"ugly\"\nassert solution(\n    \"2 2\\n3 2\\n5 2\\n7 2\\n9 2\\n\") == \"ugly\"\nassert solution(\n    \"4 2\\n7 2\\n9 2\\n\") == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n') =='respectable'\nassert solution('0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n') == 'ugly'\nassert solution('1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n') == 'ugly'\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2\n''') =='respectable'\nassert solution('''\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n''') == 'ugly'\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n''') =='respectable', 'First'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n''') == 'ugly', 'Second'\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2\n''') == \"respectable\"\nassert solution('''\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n''') == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n\") == \"respectable\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n\") == \"ugly\""
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n4 5\n5 11\n''') == \"YES\"\nassert solution('''\n1 1\n2 2\n3 3\n''') == \"NO\"\nassert solution('''\n1 1\n2 2\n3 3\n''') == \"NO\"\nassert solution('''\n1 1\n3 3\n4 4\n''') == \"YES\"\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == \"YES\"\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 1') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 1\n4 5\n5 11\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n3 2\n6 7\n13 15\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('5 11') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'YES\\n'\nassert solution('4 5') == 'YES\\n'\nassert solution('5 11') == 'NO\\n'\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"2 5\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"YES\", \"1st example\"\nassert solution(\"2 2\") == \"YES\", \"2nd example\"\nassert solution(\"3 3\") == \"NO\", \"3rd example\"\n\n\n\"\"\"\n\nfrom sys import stdin\n\nn, d = [int(i) for i in stdin.readline().split()]"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"5 11\") == \"NO\"\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"5 11\") == \"NO\"\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    ''') == \"8080\"\nassert solution('''\n    1\n    ''') == \"1\"\nassert solution('''\n    4\n    ''') == \"462\"\nassert solution('''\n    5\n    ''') == \"8080\"\n\nprint(solution('''\n5\n'''))"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '20'\nassert solution('7') == '10'\nassert solution('12') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"462\"\nassert solution(\"6\") == \"8080\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"12\"\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n\n''') == '462'\nassert solution('''\n100\n\n''') == '8080'\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n1\n2\n1\n2\n2\n2''') == '-1'\nassert solution('''2\n1\n2\n3\n1\n2\n3\n2''') == '55'\nassert solution('''6\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '55'\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '8080'\nassert solution('2') == '462'\nprint('You are not the judge')\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"5\"\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '8080'\nassert solution('3') == '4'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('1000') == '9999'\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"462\"\nassert solution(\"6\") == \"8080\"\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '4'\n\nassert solution('''\n5\n''') == '5'\n\nassert solution('''\n7\n''') == '7'\n\nassert solution('''\n13\n''') == '-1'\n\nassert solution('''\n19\n''') == '-1'"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\nabc\\nebce\\nabceabz') == '2 3'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\nabc\nxaybz\n''') == '2'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"xaybz\") == \"3\"\nassert solution(\"abce\") == \"2\"\nassert solution(\"ebcea\") == \"2\"\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '2'\nassert solution('4 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 5\\n'\n    'abc\\n'\n    'xaybz'\n) == '2'\nassert solution(\n    '4 10\\n'\n    'abcd\\n'\n    'ebceabazcd'\n) == '1'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5\\nabc\\nxaybz\\n') == '2 3'\nassert solution('4 10\\nabcd\\nebceabazcd\\n') == '1'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"xaybz\") == \"2 3\"\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\nabc\\nxaybz') == '2 3'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '1'\nassert solution('3 5') == '2'\nassert solution('10 10') == '1'\nassert solution('3 10') == '2'\nassert solution('100 100') == '1'\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n\") == \"1 2\"\nassert solution(\"8 5 2\\n\") == \"4 8\"\nassert solution(\"5 2 3\\n\") == \"5 7\"\nassert solution(\"5 3 2\\n\") == \"3 4\"\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 3 2\n\"\"\"\n) == \"1 2\\n1 3\\n3 4\\n3 5\\n\"\n\nassert solution(\n\"\"\"\n8 5 2\n\"\"\"\n) == \"-1\\n\"\n\nassert solution(\n\"\"\"\n8 4 2\n\"\"\"\n) == \"4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\""
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3 2\n\n1 2\n1 3\n3 4\n3 5\n\n8 5 2\n\nOutput\n1 2\n1 3\n3 4\n3 5\n\nInput\n8 4 2\n\nOutput\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5''') == '1 2\\n1 3\\n3 4\\n3 5\\n'\nassert solution('''5 3 2\n\n1 2\n1 3\n3 4\n3 5\n\n8 5 2\n\nOutput\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5''') == '4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5'\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"1 2\"\nassert solution(\"8 5 2\") == \"-1\"\nassert solution(\"8 4 2\") == \"4 8\""
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 2\n\n''') == '1 2\n1 3\n3 4\n3 5\nInput\n8 5 2\n\nOutput\n-1\n\nInput\n8 4 2\n\nOutput\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\\n\") == \"1 2\\n1 3\\n3 4\\n3 5\\n\"\nassert solution(\"8 5 2\\n\") == \"-1\"\nassert solution(\"8 4 2\\n\") == \"4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\"\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"1 2\"\nassert solution(\"8 5 2\") == \"4 8\"\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 2\n''') == '1 2\n1 3\n3 4\n3 5\nInput\n8 5 2\n\nOutput\n-1\n\nInput\n8 4 2\n\nOutput\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5\n''')\n\nassert solution('''\n7 5 2\n''') == '1 2\n3 4\n3 5\n6 7\n6 8\n5 7\n2 4\n2 3\n1 1\n1 2\n''')\n\n\n\n\n\n\n\n'''\n9 4 2\n\n12 7\n\n'''\n\n\n\n'''\n5 3 2\n\n5 3 2\n\n'''"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"1 2\"\nassert solution(\"8 5 2\") == \"-1\"\n\nstdin = \"\"\"\n5 3 2\n\"\"\"\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(stdin)\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == '1 2'\nassert solution(\"8 5 2\") == '-1'\nassert solution(\"8 4 2\") == '4 8'\nassert solution(\"5 5 2\") == '4 9'\nassert solution(\"10 10 2\") == '5 6'\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.0000000'\nassert solution('3 1') == '6.4641016'\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10') == '1.0000000'\nassert solution('100 100') == '3.2429391'\n\n---------------------------------------------------"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"6.4641016\"\nassert solution(\"6 1\") == \"1.0000000\"\nassert solution(\"100 100\") == \"3.2429391\"\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n''') == '6.4641016'\nassert solution('''\n6 1\n''') == '1.0000000'\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"6.4641016\"\nassert solution(\"6 1\") == \"1.0000000\"\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '6.4641016'\nassert solution('3 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\nassert solution('5 5') == '1.0000000'\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '6.4641016'\nassert solution('3 1') == '1.0000000'\nassert solution('4 4') == '3.8235294'"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n''') == '6.4641016'\nassert solution('''\n100 100\n''') == '3.2429391'"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '6.4641016'\nassert solution('3 1') == '1.0000000'\nassert solution('4 1') == '1.0000000'\nassert solution('6 1') == '3.2429391'\nassert solution('10 10') == '3.9194444'\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == '50'\nassert solution('199') == '119.4'\n\n\nimport math\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100\\n50\\n50') == '50'\nassert solution('199\\n60\\n40') == '119.4'\nprint(solution(input()))"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"50.0\"\nassert abs(50.0 - solution(input_string)) <= 10**(-4)\nassert abs(50.0 - solution(input_string)) <= 10**(-4)"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"119.4\"\n\"\"\"\n\nl = int(input())\np = int(input())\nq = int(input())\n\nimport math\n\nfirst = p * math.cos(math.pi / 2)\nsecond = q * math.sin(math.pi / 2)\n\nfirst = first * l\nsecond = second * l\n\nres = first + second\n\nprint(res)"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n50\n50\n50\n''') == '50.000000'\n\nassert solution('''\n100\n50\n50\n''') == '100.000000'\n\nassert solution('''\n100\n60\n40\n''') == '119.4999998'\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''50\n50\n50\n''') == '50'\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100\\n50\\n50\") == \"50\"\nassert solution(\"199\\n60\\n40\") == \"119.4\"\n\"\"\"\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100\\n50\\n50\\n') == '50'\nassert solution('199\\n60\\n40\\n') == '119.4'"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100\n50\n50''') == '50'\nassert solution('''199\n60\n40''') == '119.4'\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"50.0\"\nassert solution(\"1\") == \"50.0\"\nassert solution(\"10\") == \"50.0\"\nassert solution(\"99\") == \"50.0\""
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '2050'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '2050'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2014 2016 2015''') == '2015'\nassert solution('''1\n2050''') == '2050'"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2014 2016 2015\n\n''') == '2015'\nassert solution('''\n1\n2050\n\n''') == '2050'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '2050'\nassert solution('3') == '2015'\nassert solution('4') == '2015'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2014 2016 2015') == '2015'\nassert solution('2\\n2050') == '2050'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2014 2016 2015\n''') == '2015'\nassert solution('''1\n2050\n''') == '2050'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2014 2016 2015') == '2015'\nassert solution('2\\n2050') == '2050'"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2015\"\nassert solution(\"2\") == \"2050\"\nassert solution(\"3\") == \"2015\"\nassert solution(\"4\") == \"2050\"\nassert solution(\"5\") == \"2015\"\n\ninput data:\n3\n2014 2016 2015\noutput:\n2015\n\ninput data:\n1\n2050\noutput:\n2050\n\ninput data:\n4\n2014 2016 2015 2018\noutput:\n2015\n\ninput data:\n2\n2018 2020 2040\noutput:\n2020\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '2050'\nassert solution('3') == '2050'\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"5\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nCY??Y\") == \"Yes\"\nassert solution(\"5\\nC?C?Y\") == \"Yes\"\nassert solution(\"5\\n?CYC?\") == \"Yes\"\nassert solution(\"5\\nC??MM\") == \"No\"\nassert solution(\"3\\nMMY\") == \"No\"\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solution
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(5) == '72900'\nassert solution(17) == '317451037'\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 1, 2, 5, 3]) == \"72900\"\nassert solution([17, 97, 41, 37, 11]) == \"317451037\"\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 5 3\") == \"72900\"\nassert solution(\"17 97 41 37 11\") == \"317451037\"\nassert solution(\"9 5 3 9 4\") == \"8\"\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1 2 5 3\n''') == '72900'\nassert solution('''\n17 97 41 37 11\n''') == '317451037'"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1 2 5 3\n''') == '72900'\nassert solution('''\n17 97 41 37 11\n''') == '317451037'"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"72900\"\nassert solution(input()) == \"317451037\"\nprint(\"Congratulations, solutions are correct.\")\n\n\"\"\"\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1 2 5 3\n''') == '72900'\nassert solution('''\n17 97 41 37 11\n''') == '317451037'\nassert solution('''\n10\n11\n10\n8\n5\n''') == '11'\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5,1,2,5,3]) == \"72900\"\nassert solution([17,97,41,37,11]) == \"317451037\"\nassert solution([1,1,1,1,1]) == \"3\"\nassert solution([1,2,3,4,5]) == \"5\"\nassert solution([1,2,3,4,5]) == \"5\"\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string()) == '72900'\n\nassert solution(input_string(\"\"\"\n4 1 2 5 3\n\"\"\")) == '317451037'\n\nassert solution(input_string(\"\"\"\n17 97 41 37 11\n\"\"\")) == '317451037'\n\nassert solution(input_string(\"\"\"\n0\n\"\"\")) == '0'\n\nassert solution(input_string(\"\"\"\n1\n\"\"\")) == '1'"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n') == '15\\n'\nassert solution('6 4\\n') == '6\\n'\nassert solution('3 2\\n') == '1\\n'\nassert solution('3 5\\n') == '7\\n'\nassert solution('2 2\\n') == '0\\n'\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"3 5\") == \"6\""
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('x') == 1\nassert solution('ab') == 1\nassert solution('abab') == 2\nassert solution('ababab') == 2\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"3 5\") == \"6\"\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''3 3\n    tab\n    one\n    bat'''\n) == '6'\n\nassert solution(\n    '''4 2\n    oo\n    ox\n    xo\n    xx'''\n) == '6'\n\nassert solution(\n    '''3 5\n    hello\n    codef\n    orces'''\n) == '20'\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 2') == '6'\nassert solution('3 5') == '6'\nassert solution('9 4') == '20'\nassert solution('8 4') == '8'\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"20\"\nassert solution(input) == \"ababwxyzijjizyxwbaba\"\nassert solution(input) == \"\""
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\nabab\nbaba\nabcd\nbcde''') == '6'\nassert solution('''3 3\ntab\none\nbat''') == '6'\nassert solution('''3 5\nhello\ncodef\norces''') == '0'\nassert solution('''9 4\nabab\nbaba\nabcd\nbcde\ncdef\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\ntab\none\nbat\n''') == '6'\n\nassert solution('''4 2\noo\nox\nxo\nxx\n''') == '6'\n\nassert solution('''3 5\nhello\ncodef\norces\n''') == '0'\n\n\nassert solution('''9 4\nabab\nbaba\nabcd\nbcde\ncdef\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 2') == '1'\nassert solution('3\\n1000000000 1000000000 1000000000') == '1999982505'\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == \"1\"\nassert solution(open(1).read()) == \"1\"\nassert solution(open(2).read()) == \"1\"\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '4'\n\nassert solution('''3\n1 2 3\n''') == '2'"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1000000000 1000000000 1000000000\n''') == '1999982505'\nassert solution('''\n3\n1 3 2\n''') == '1'\nassert solution('''\n3\n100000003000000030000000\n''') == '199996313091'\nassert solution('''\n5\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '199996313091'\nassert solution('''\n5\n100000003000000030000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '199996313091'\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '3'\nassert solution('''3\n1 2 3\n''') == '3'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '20'\nassert solution('''5\n1 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '1999982505'"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 2\n''') == '1'\nassert solution('''3\n1000000000 1000000000 1000000000\n''') == '1999982505'\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\\n\") == \"1\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == \"1999982505\""
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\n\"\"\"\nfrom typing import List\nfrom unittest import main"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n') == '1'\nassert solution('3\\n1000000000 1000000000 1000000000\\n') == '1999982505'\n\n'''"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '1'\nassert solution('''\n4\n2 1 3 1\n1\n420 420\n''') == '2'\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"2\\n4\\n3\\n1\") == \"2\"\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == \"2\"\n\nassert solution('''\n5\n3 1 6 2 5\n3\n330 332 323 343 333\n''') == \"3\"\n\nassert solution('''\n6\n3 1 3 6 4 1\n3\n3333 3333 3333 3333\n''') == \"2\""
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n\n'''\n\nfrom collections import deque\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n4\\n2 1 3 1\\n2\\n420 420\\n') == '1'\nassert solution('3\\n1 1 1\\n3\\n') == '2'\nassert solution('4\\n3 4 3 3\\n4\\n') == '5'"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n1 1\n''') == '1'\nassert solution('''\n4\n1 2 3 1\n''') == '3'\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n2 1 3 1\n2\n420 420\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n2 1 3 1\n4\n420 420\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n2 1 3 1\n5\n420 420 420 420\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 1 1 1\n1\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n2 1 3 1\n6\n420 420\n\"\"\") == \"2\"\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"NIE\", \"3 2\"\nassert solution(\"2 3\") == \"TAK\", \"2 3\"\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NIE\"\nassert solution() == \"TAK\""
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''3 2\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''5 4\n1 2 3 4 5\n6 7 8 9 10''') == 'TAK'"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3\n7 7 7\n7 7 10\"\"\") == \"TAK\"\n\nassert solution(\"\"\"4 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\"\"\") == \"NIE\""
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'NIE', 'Wrong answer'\nassert solution('2 3') == 'TAK', 'Wrong answer'\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"NIE\"\nassert solution(\"3 2\") == \"NIE\"\nassert solution(\"2 3\") == \"TAK\"\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n7 7 7\\n\") == \"TAK\"\nassert solution(\"3 2\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"NIE\"\nassert solution(\"3 3\\n7 7 7\\n7 7 10\\n\") == \"TAK\"\nassert solution(\"4 3\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"NIE\"\n\nassert solution(\"1 2 3\\n10 10 10\\n10 10 10\\n\") == \"TAK\"\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"NIE\", \"First\"\nassert solution(\"2 3\") == \"TAK\", \"Second\""
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 0\\n0 0') == 'NIE'\nassert solution('2 3\\n7 7 7\\n7 7 10') == 'TAK'"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n0 0\n0 0\n0 0\n''') == 'NIE'\nassert solution('''2 3\n7 7 7\n7 7 10\n''') == 'TAK'"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('c') == '-1'\nassert solution('cont') == '-1'"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"contest\") == \"10\"\nassert solution(\"son\") == \"10\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''contest\nson''') == '10'\nassert solution('''contest\nnet''') == '-1'\nassert solution('''contest\nc''') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '10'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('game') == '-1'"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('hello') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '10'"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('t') == '10'\nassert solution('co') == '9'\nassert solution('co') == '9'\n\"\"\""
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n'''"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 3\\n3 4\\n1 4\") == \"YES\"\nassert solution(\"10 4\\n4 3\\n5 10\\n8 9\\n1 2\\n\") == \"NO\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"NO\""
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('4 4') == 'NO'\nassert solution('3 1') == 'NO'\nassert solution('10 4') == 'YES'\nassert solution('3 2') == 'NO'"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1\\n3 4\\n1 2\\n\") == \"YES\"\nassert solution(\"4 4\\n3 1\\n2 3\\n3 4\\n1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n3 1\n2 3\n3 4\n1 2\n\n''') == 'YES'\nassert solution('''\n4 4\n3 1\n2 3\n3 4\n1 2\n\n''') == 'NO'\nassert solution('''\n10 4\n4 3\n5 10\n8 9\n1 2\n\n''') == 'YES'\n'''"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 3\\n3 4\\n1 4') == \"YES\"\nassert solution('4 4\\n3 1\\n2 3\\n3 4\\n1 2\\n') == \"NO\""
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([10, 4, 3, 2, 1]) == 'YES'\nassert solution([4, 3, 2, 1]) == 'NO'\n"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"4 1\") == \"NO\"\n"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 4, 2, 3, 1]) == \"YES\"\nassert solution([10, 4, 2, 3, 1]) == \"NO\"\nassert solution([3, 1, 2, 3, 1]) == \"NO\"\nassert solution([2, 1, 2, 3, 1]) == \"YES\"\nassert solution([2, 1, 2, 4, 1]) == \"YES\""
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AprilFool') == 'AprILFooL'\nassert solution('x') == 'x'\n\"\"\"\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AprilFool') == \"AprILFooL\"\nassert solution('WeAwcAiNYYG') == \"weawcyang\"\nassert solution('NowWWhYOdCe') == \"nowwhyeoc\"\nassert solution('IWRoWCkUdY') == \"iwrowcy\"\nassert solution('WeWRoWCdY') == \"weo\"\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"AprilFool\"\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AprilFool\") == \"AprILFooL\"\nassert solution(\"DecemberFool\") == \"DecEdeCYrEtFool\"\n\n\n'''"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AprilFool') == \"AprILFooL\", \"Your solution is not correct.\"\n\n'''\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abc') == 'aBc', 'First'\nassert solution('ABC') == 'ABc', 'Second'\nassert solution('ABCD') == 'ABCD', 'Third'\nassert solution('ABCDEF') == 'ABCDEF', 'Fourth'\nassert solution('ABCABCDEFGHIJK') == 'ABCABCDEFGHIJK', 'Fifth'\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"AprILFooL\"\n\n\n'''\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Janis Joplin\") == \"JanJoplin\"\nassert solution(\"Jane Nieuwpoont\") == \"JanNieuwpoont\"\nassert solution(\"Cindy Man\") == \"CindyMana\"\nassert solution(\"Cindy Man\") == \"CindyMana\"\nassert solution(\"Edgar Allen Poe\") == \"EdgarAllenPoe\"\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"APRILFOOL\") == \"AprilFool\"\nassert solution(\"APRILFOOL\") == \"AprilFool\"\n\n\n\n'''"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"AprILFooL\"\nassert solution(open(\"input.txt\").read()) == \"AprILFooL\"\n'''"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n0111\n0001\"\"\") == \"First\"\n\nassert solution(\"\"\"3\n110110\n001001\"\"\") == \"First\"\n\nassert solution(\"\"\"3\n111000\n000111\"\"\") == \"Draw\"\n\nassert solution(\"\"\"4\n01010110\n00101101\"\"\") == \"Second\"\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0111\n0001\n''') == \"First\"\nassert solution('''3\n110110\n001001\n''') == \"First\"\nassert solution('''4\n01100000\n10010011\n''') == \"Second\"\nassert solution('''5\n11101111\n10110111\n''') == \"Draw\"\nassert solution('''6\n11111101\n00110111\n''') == \"Draw\"\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"First\"\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'First'\nassert solution('3') == 'First'\nassert solution('4') == 'Draw'\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'First'\nassert solution('3') == 'First'\nassert solution('4') == 'Draw'"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n110110\\n00101101') == 'First'\nassert solution('3\\n110110\\n000111') == 'First'\nassert solution('3\\n111000\\n000111') == 'Second'\nassert solution('4\\n01010110\\n10010011') == 'Draw'\nprint('Done! Looks like it is fine! Go check it!')\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'First'\nassert solution('3') == 'Draw'\nassert solution('4') == 'Second'\n\nprint(solution(input()))\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"First\" or solution() == \"Second\" or solution() == \"Draw\"\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"First\"\nassert solution(input()) == \"Second\"\nassert solution(input()) == \"Draw\"\n"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n110110\\n000111\\n\") == \"First\"\nassert solution(\"3\\n111000\\n000111\\n\") == \"Draw\"\nassert solution(\"3\\n110110\\n10010011\\n\") == \"Second\"\nassert solution(\"4\\n01010110\\n00101101\\n\") == \"Second\""
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n-1 1 1 0 0 -1\n''') == '2'\n\nassert solution('''\n3\n100 100 101\n''') == '0 0 0 0 0 0'\n\nassert solution('''\n7\n-10 -9 -10 -8 -10 -9 -9\n''') == '5 -10 -9 -9 -9 -9 -9'\n\nassert solution('''\n4\n-1 1 1 1 -1 -1\n''') == '0'\n\nassert solution('''\n1\n0 0\n''') == '0'\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '3'\nassert solution('''\n10\n5 6 2 7 3 1 1 1 1 1\n''') == '2'\nassert solution('''\n5\n-10 -9 -10 -8 -10 -9 -9\n''') == '5'\nassert solution('''\n20\n
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0 0 0 0 0 0'\n\"\"\"\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0 0 0 0 0 0\"\nassert solution(\"6\") == \"2 2 2 2 2 2\"\nassert solution(\"7\") == \"10 10 10 10 10 10\"\nassert solution(\"3\") == \"0 0 0 0 0 0\"\nassert solution(\"4\") == \"0 0 0 0 0 0\"\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('3') == '1'\nassert solution('7') == '5'\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"0 0 0 0\"\nassert solution(\"4\") == \"0 0 0 0\"\nassert solution(\"5\") == \"1 1 1 1\"\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0 0 0 0 0 0\"\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('3') == '1'\nassert solution('7') == '5'"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('zera') == '0'\nassert solution('zep') == '1'\nassert solution('zep') == '1'\nassert solution('zep') == '2'\nassert solution('zep') == '4'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"zeus\") == \"18\"\nassert solution(\"map\") == \"35\"\nassert solution(\"ares\") == \"34\"\nprint(solution.__doc__)\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"ab\") == 2\nassert solution(\"z\") == 1\nassert solution(\"abc\") == 2\nassert solution(\"map\") == 34\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('zaq') == '18'\nassert solution('map') == '35'\nassert solution('are') == '34'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('zeus') == '18'\nassert solution('map') == '35'\nassert solution('ares') == '34'"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '18'\nassert solution(input()) == '35'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '18'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"18\"\n\n'''"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"zeus\") == \"18\"\nassert solution(\"map\") == \"35\"\nassert solution(\"ares\") == \"34\"\n\n\"\"\"\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"zeus\") == \"18\"\nassert solution(\"map\") == \"35\"\nassert solution(\"ares\") == \"34\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0 4\"\nassert solution(\"3\") == \"4 4\"\nassert solution(\"6\") == \"5 9\"\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0 4'\nassert solution('3') == '4 4'\nassert solution('6') == '5 9'"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2\n10\n\n''') == '0 4'\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3\n5\n7\n25\n''') == '0 4'\nassert solution('''\n6\n4\n9\n10\n89\n''') == '5 9'\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0 4'\nprint(solution())"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4 4'\nassert solution('6') == '5 9'\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n8\n''') == '0 4'\nassert solution('''\n6\n4\n9\n10\n89\n''') == '5 9'\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3\n5\n1\n8''') == '0 4'\nassert solution('''3\n1\n6\n7\n25''') == '4 9'\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '0 4'\nassert solution(\"3\") == '4 4'\nassert solution(\"6\") == '5 9'\n\nprint(solution(input()))\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n5\n1\n8\n''') == '0 4'\nassert solution('''\n3\n1\n6\n7\n25\n''') == '4 4'\nassert solution('''\n6\n4\n9\n10\n89\n''') == '5 9'\n"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"GBGGB\"\nassert solution(\"5 2\") == \"GGBGB\"\nassert solution(\"4 1\") == \"GGGB\"\n"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"B\"\nassert solution(\"2\") == \"G\"\nassert solution(\"3\") == \"G\"\nassert solution(\"4\") == \"G\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"B\"\nassert solution(\"2\") == \"G\"\nassert solution(\"3\") == \"GB\"\nassert solution(\"4\") == \"GG\""
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"GBGGB\"\nassert solution(\"4 1\") == \"GGGB\"\n\n---Submission---\nhttps://codeforces.com/contest/1232/submission/82551222\n\npython solution.py < input\n\"\"\"\n\nn, t = map(int, input().split())\narr = input()"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == 'GBGGB'\nassert solution('4 1') == 'GGGB'"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == 'GBGGB'\nassert solution('5 2') == 'GGBGB'\nassert solution('4 1') == 'GGGB'\n"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"GBGB\"\nassert solution(\"3 3\") == \"GBGB\"\nassert solution(\"4 1\") == \"GBGB\""
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == \"GBGB\"\nassert solution('5 2') == \"GGBGB\"\nassert solution('4 1') == \"GGGB\"\n"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'GBGGB'"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"GBGGB\"\nassert solution(\"5 2\") == \"GGBGB\"\nassert solution(\"4 1\") == \"GGGB\"\nprint(solution(input()))\n\n-------solution-------------\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6 1\\n') == '3\\n'\nassert solution(\n    '6 2\\n') == '875000008\\n'\nassert solution(\n    '60 5\\n') == '237178099\\n'\nassert solution(\n    '12 32\\n') == '1821\\n'\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"3\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"60 5\") == \"237178099\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"6 2\") == \"875000008\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"237178099\"\nassert solution_fast() == \"3\""
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1\\n') == '3'\nassert solution('6 2\\n') == '875000008'\nassert solution('60 5\\n') == '237178099'"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3\"\nassert solution(\"6 2\") == \"875000008\"\nassert solution(\"60 5\") == \"237178099\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 1\n''') == '3'\nassert solution('''60 5\n''') == '237178099'\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\n\n\"\"\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"60 5\") == \"237178099\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 1''') == '3'\nassert solution('''60 5\n6 5''') == '237178099'\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"1 2\", \"\"]) == \"101\"\nassert solution([\"4 8\", \"\"]) == \"110110110101\"\nassert solution([\"4 10\", \"\"]) == \"11011011011011\"\nassert solution([\"1 5\", \"\"]) == \"-1\"\nassert solution([\"1 1\", \"\"]) == \"11\"\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '101'\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('4 10') == '11011011011011'"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8\n2 4 1 3''') == '1123'\n\nassert solution('''4 10\n1 2 3 4 5 6''') == '10111'\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '101', 'Example Test Case 2'\nassert solution('4 8') == '110110110101', 'Example Test Case 3'\nassert solution('1 5') == '-1', 'Example Test Case 4'"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('4 10') == '11011011011011'\nassert solution('1 5') == '-1'\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2\n        ''') == '101'\nassert solution('''4 8\n        ''') == '110110110101'\nassert solution('''4 10\n        ''') == '11011011011011'\nassert solution('''1 5\n        ''') == -1"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"11111010111011101\"\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"11011011011011\"\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3 6 9\"\nassert solution(\"9 10\") == \"3 6 9\"\nassert solution(\"1000000000000 5\") == \"83333333333 416666666665 500000000002\"\nassert solution(\"1000000000000 499999999999\") == \"1 499999999999 500000000000\"\nprint(solution(input()))"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n18 2\n''') == '3 6 9'\nassert solution('''\n9 10\n''') == '0 0 9'\nassert solution('''\n1000000000000 5\n''') == '83333333333 416666666665 500000000002'\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('18 2') == '3 6 9', solution('18 2')\nassert solution('9 10') == '0 0 9', solution('9 10')\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002', solution('1000000000000 5')\n\nstdin = '''\n1000000000000 499999999999\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('9 10') == '0 0 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\nassert solution('1000000000000 499999999999') == '1 499999999999 500000000000'\nassert solution('1000000000000 0') == '1 0 0'\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"18 2\") == \"3 6 9\"\nassert solution(\"9 10\") == \"0 0 9\"\nassert solution(\"1000000000000 5\") == \"83333333333 416666666665 500000000002\"\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\nassert solution('1000000000000 499999999999') == '1 499999999999 500000000000'\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"18 2\") == \"3 6 9\"\nassert solution(\"1000000000000 5\") == \"83333333333 416666666665 500000000002\""
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '3 6 9'\nassert solution('18 2') == '3 6 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('9 10') == '0 0 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"131\") == \"YES\"\nassert solution(\"320\") == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"131\") == \"YES\"\nassert solution(\"320\") == \"NO\"\nassert solution(\"2010200\") == \"YES\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"131\") == \"YES\"\nassert solution(\"320\") == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''131\n\n''') == \"YES\"\nassert solution('''320\n\n''') == \"NO\"\nassert solution('''2010200\n\n''') == \"YES\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == 'YES'\nassert solution('2020') == 'YES'\nassert solution('100') == 'NO'\nassert solution('30') == 'NO'\nassert solution('20202010') == 'YES'\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('131') == 'YES'\nassert solution('320') == 'NO'\nassert solution('2010200') == 'YES'"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n131\n''') == 'YES'\nassert solution('''\n320\n''') == 'NO'\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"131\") == \"YES\"\nassert solution(\"320\") == \"NO\"\nassert solution(\"2010200\") == \"YES\"\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == 'YES'\n\nassert solution('''\n2\n''') == 'NO'\n\nassert solution('''\n3\n''') == 'NO'\n\nassert solution('''\n4\n''') == 'NO'\n\nassert solution('''\n5\n''') == 'NO'"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 2\nassert solution(\"6\") == 2\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\n\nassert solution('10') == '2'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    ''') == '1'\nassert solution('''\n    10\n    ''') == '2'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('1000000000') == '9998'\nassert solution('1000000001') == '10'\nassert solution('10000001') == '1'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1', 'Wrong answer'\nassert solution('2') == '0', 'Wrong answer'\nassert solution('8') == '2', 'Wrong answer'\nassert solution('10') == '3', 'Wrong answer'\nassert solution('6') == '2', 'Wrong answer'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '2'\nassert solution('12') == '2'\nassert solution('20') == '2'\nassert solution('22') == '2'\nassert solution('21') == '3'"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '2'"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 4\\n'\n    '...X.\\n'\n    'X.X.\\n'\n    '....\\n'\n    '......\\n'\n    '1 6'\n    ) == 'YES'\nassert solution(\n    '5 4\\n'\n    '.X..\\n'\n    '...X\\n'\n    'X.X.\\n'\n    '....\\n'\n    '..X.\\n'\n    '......\\n'\n    '1 6'\n    ) == 'YES'"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == 'YES', 'First'\nassert solution('4 7') == 'NO', 'Second'\n\"\"\"\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES', \"First sample\""
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 6\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1\n''') == 'YES'\n\n\nassert solution('''\n5 4\n.X..\n...XX\nX.X.\n....\n.XX.\n5 3\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 6\n.X..X.\n...X.X\nX.X.X\n....\n.XX.\n5 3\n1 1\n''') == 'YES'\nassert solution('''5 4\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1\n''') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 6\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"5 7\") == \"YES\"\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6\") == 'YES'\nassert solution(\"5 4\") == 'NO'\nassert solution(\"4 7\") == 'YES'\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 6\n.X..X.\n...XX.\nX.X.X.\n....\n.XX.X.''') == 'YES'\nassert solution('''5 4\n.X..\n...X\nX.X.\n....\n.XX.''') == 'NO'\nassert solution('''4 7\n..X.XX.\n.XX..X.\nX...X..\nX......\n2 2\n1 6''') == 'YES'\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == 'YES'\nassert solution(\"5 4\") == 'NO'\n\"\"\"\n\nfrom collections import defaultdict\nfrom collections import deque\nimport sys"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == 'YES'\nassert solution(\"4 7\") == 'NO'\nassert solution(\"2 2\") == 'YES'"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 4\\n2 5\\n\") == \"1\"\nassert solution(\"5 5\\n1 2\\n3 4\\n4 5\\n5 3\\n\") == \"1\"\nassert solution(\"6 8\\n1 2\\n5 3\\n3 4\\n5 6\\n6 4\\n\") == \"1\"\nassert solution(\"1 1\\n2 1\\n\") == \"0\"\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 2') == '3'\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1'\nassert solution('8 7') == '2'\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 4\\n2 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n\") == \"2\""
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1'\nassert solution('2 2') == '1'\nassert solution('10 5') == '2'\nassert solution('6 4') == '3'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n\") == \"1\"\nassert solution(\"2\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '1'\nassert solution('10 2') == '1'\nassert solution('20 2') == '1'\nassert solution('20 2') == '2'\nassert solution('100 20') == '3'\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"second\"\nassert solution(\"3\") == \"first\"\nassert solution(\"2\") == \"second\"\n'''"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n2\n-3\n-4\n3''') =='second'\nassert solution('''3\n-1\n-2\n3''') == 'first'"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"first\"\nassert solution(\"3\") == \"second\"\nassert solution(\"2\") == \"second\"\nassert solution(\"3\") == \"first\"\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n2\\n-3\\n-4\\n3\\n\") == \"first\"\nassert solution(\"3\\n-1\\n-2\\n3\\n\") == \"second\"\nassert solution(\"2\\n4\\n-4\\n\") == \"first\"\n\n\"\"\""
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'first'\nassert solution('3') =='second'\nassert solution('2') == 'first'"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"second\"\nassert solution(\"3\") == \"first\"\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5\n1\n2\n-3\n-4\n3\n\"\"\"\n) == \"second\"\nassert solution(\n\"\"\"3\n-1\n-2\n3\n\"\"\"\n) == \"first\"\nassert solution(\n\"\"\"2\n4\n-4\n\"\"\"\n) == \"second\"\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') =='second', \"First\"\nassert solution('3') == 'first', \"Second\"\nassert solution('2') =='second', \"Third\"\nassert solution('4') == 'first', \"Fourth\""
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n2\n-3\n-4\n3\n''') =='second'\nassert solution('''3\n-1\n-2\n3\n''') == 'first'\nassert solution('''2\n4\n-4\n''') =='second'\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'first'\nassert solution('3') =='second'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 1 2\\n') == 'YES'\nassert solution('3\\n1 0 1\\n') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == 'YES'\nassert solution('''3\n1 0 1\n''') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'YES', \"First\"\nassert solution('2') == 'NO', \"Second\""
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n1 2\n''') == 'YES'\nassert solution('''3\n1 2 1\n''') == 'NO'"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 1 2\\n') == \"YES\"\nassert solution('3\\n1 0 1\\n') == \"NO\""
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 1 2\") == \"YES\"\nassert solution(\"3\\n1 0 1\") == \"NO\""
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('1 2 1 2') == 'YES'\nassert solution('3 1 1 1') == 'NO'\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n\nassert solution() == 'NO'\n\n\"\"\"\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t']\n    b = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t']\n    c = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t']\n    for j in range(len(s)):\n        if s[j] in a:\n            if a.index(s[j])+1 == a.index(s[j+1]):\n                a[a.index(s[j])+1] = s[j]\n            else:\n                a[a.index(s[j])+1] = s[j+1]\n        if s[j] in b:\n            if b.index(s[j])+1 == b.index(s[j+1]):\n                b[b.index(s[j])+1] = s[j]\n            else:\n                b[b.index(s[j])+1] = s[j+1]\n        if s[j] in c:\n            if c.index(s[j])+1 == c.index(s[j+1]):\n                c[c.index(s[j])+1] = s[j]\n            else:\n                c[c.index(s[j])+1] = s[j+1]\n    if a == b == c:\n        print('YES')\n    else:\n        print('NO')\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == 'YES'\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"abccba\") == \"YES\"\nassert solution(\"cf\") == \"NO\"\nassert solution(\"ml\") == \"NO\"\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\n\nassert solution('''\n5\naabccb\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'NO'\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"c\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"ababa\") == \"YES\"\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES\\nNO\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nad\") == \"NO\"\nassert solution(\"4\\neb\") == \"YES\"\nassert solution(\"4\\nad\") == \"NO\"\nassert solution(\"5\\nad\") == \"YES\"\nassert solution(\"5\\nad\") == \"NO\"\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\", \"Input was empty\"\nassert solution(\"1\") == \"YES\", \"Input was one\"\nassert solution(\"2\") == \"YES\", \"Input was two\"\nassert solution(\"3\") == \"NO\", \"Input was three\"\nassert solution(\"4\") == \"YES\", \"Input was four\"\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '-1'\nassert solution('1 0') == '-1'\nassert solution('0 0') == '-1'"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'ayd'\nassert solution('') == '-1'"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0') == '-1'\nassert solution('3 2') == 'ayd'"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('0 0') == '-1'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0') == '-1'\nassert solution('3 2') == 'ayd'\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0') == '-'\n\n\n'''\n\n\nn, t = map(int, input().split())\ns1 = input()\ns2 = input()\ns3 = ''\nl = s1 + s2\n\nfor i in range(n):\n    if l[i]!= s1[i] and l[i]!= s2[i]:\n        s3 += l[i]"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == 'ayd'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 0\nc\nb\"\"\") == \"-1\"\nassert solution(\"\"\"\n10 0\njimmy\nkitty\n\"\"\") == \"jimmy\"\nprint(\"\\033[32m\" + \"Test passed!\" + \"\\033[0m\")"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Input') == 'ayd'\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0') == '-'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"a?a?a*\") == \"YES\"\nassert solution(\"a?a?a*a\") == \"YES\"\nassert solution(\"*a?*a?\") == \"YES\"\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ab') == 'YES'\nassert solution('a?a?') == 'YES'\nassert solution('a?a?a*') == 'YES'\nassert solution('aab') == 'NO'\nassert solution('abacaba') == 'NO'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nab\na?a\n2\naaa\naab\n\n''') == 'NO\\nYES\\nNO\\nYES\\n'\nassert solution('''\nabc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n\n''') == 'YES\\nYES\\nNO\\nNO\\n'''\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a?a?a*\") == \"YES\"\nassert solution(\"ab\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"a?a?a?a*\") == \"YES\"\nassert solution(\"aa\") == \"NO\"\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abc') == 'NO'\nassert solution('abc?') == 'YES'\nassert solution('ab?*') == 'YES'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"YES\""
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ab\\na?a\\n2\") == \"YES\\nNO\"\nassert solution(\"abc\\na?a?a*\\n4\") == \"NO\\nYES\\nYES\\nYES\""
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ab') == 'YES'\nassert solution('abc') == 'YES'\nassert solution('aaa') == 'YES'\nassert solution('aaaaax') == 'NO'\nassert solution('aaaaaxabacaba') == 'NO'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ab') == 'YES'\nassert solution('abc') == 'YES'\nassert solution('a?a?a*') == 'YES'\nassert solution('abacaba') == 'NO'\nassert solution('abaca') == 'NO'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nab\na?a\n2\naaa\naab\n''') == 'NO'\nassert solution('''\nabc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO'\n\nassert solution('''\nxyz\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == 'YES'"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 100\\n22\\n1\\n2\\n22\") == \"3 4\"\nassert solution(\"5 2\\ncba\\nabc\\nbb1\\nabC\\nABC\\nabc\") == \"1 15\"\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"5 2\") == \"15\"\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n\n''') == '1 15'\nassert solution('''\n4 100\n11\n22\n1\n2\n22\n\n''') == '3 4'"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\ncba\\nabc\\nbb1\\nabC\\nABC\\nabc\") == \"1 15\"\nassert solution(\"4 100\\n11\\n22\\n1\\n2\\n22\\n\") == \"3 4\"\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1 15\"\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n\"\n                 \"cba\\n\"\n                 \"abc\\n\"\n                 \"bb1\\n\"\n                 \"abC\\n\"\n                 \"ABC\\n\"\n                 \"abc\") == \"1 15\\n\"\n\nassert solution(\"4 100\\n\"\n                 \"11\\n\"\n                 \"22\\n\"\n                 \"1\\n\"\n                 \"2\\n\"\n                 \"22\\n\") == \"3 4\\n\""
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n\n''') == '1 15'\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1 15'\nassert solution('4 100') == '3 4'"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 100\n11\n22\n1\n2\n22\n\n''') == '3 4'\n\nassert solution('''\n5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n\n''') == '1 15'\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\nab\") == \"1\"\nassert solution(\"2 3\\na1\") == \"3\"\nassert solution(\"1 3\\n1a\") == \"2\""
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 2 3\n    ''') == 'First'\nassert solution('''2 2\n    ''') == 'Second'\n\n\u0420\u0430\u0441\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 input.py \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043a\u043e\u0434 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c.\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 3 2 3\n\"\"\") == \"First\"\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"Second\""
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 2 3\\n') == 'First'\nassert solution('2\\n2 2\\n') == 'Second'\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 3') == 'First'\nassert solution('2\\n2 2') == 'Second'"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'First'\nassert solution('4') == 'Second'\nassert solution('2') == 'Second'\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2') == 'Second'\nassert solution('1\\n1') == 'First'\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'First'\nassert solution('2') == 'Second'"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 2 3\n\n''') == 'First'\nassert solution('''2\n2 2\n\n''') == 'Second'\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'First'\nassert solution('2') == 'Second'\nassert solution('8') == 'First'"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 3') == 'First'\nassert solution('2\\n2 2') == 'Second'"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"2 4\"\nassert solution(\"64\") == \"8 8\"\nassert solution(\"5\") == \"1 5\"\nassert solution(\"999999\") == \"999 1001\""
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 3'\nassert solution('4') == '2 2'\nassert solution('5') == '2 5'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1 1'\nassert solution('9') == '2 2'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 5'\nassert solution('8') == '2 4'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8''') == '2 4'\nassert solution('''64''') == '8 8'\nassert solution('''5''') == '1 5'\nassert solution('''999999''') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"_i_\") == 'No'\nassert solution(\"abc\") == 'No'\nassert solution(\"0Lil\") == 'Yes'\nassert solution(\"0RLi\") == 'No'\n\n\n\nfrom itertools import combinations"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"Yes\"\nassert solution(s_in) == \"No\""
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1_wat\") == \"Yes\"\nassert solution(\"2_wat\") == \"No\"\nassert solution(\"wat_1\") == \"Yes\"\nassert solution(\"2_wat_1\") == \"No\"\nassert solution(\"wat__1\") == \"No\""
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''_i_''') == 'No'\nassert solution('''') == 'No'\nassert solution('_0_') == 'No'\nassert solution('0_0') == 'No'\nassert solution('_0_0') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1_wat\") == \"Yes\"\nassert solution(\"000\") == \"No\"\nassert solution(\"2_wat\") == \"No\"\nassert solution(\"_i_\") == \"No\"\nassert solution(\"0Lil\") == \"Yes\""
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0Lil') == 'Yes', \"solution needs to be improved to not raise an error\"\nassert solution('11Lil') == 'No'\nassert solution('01Lil') == 'Yes'\nassert solution('1Lil') == 'No'\nassert solution('01lol') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'Yes'\nassert solution('0Lil') == 'No'\nassert solution('1L') == 'Yes'"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n\nassert solution(input()) == 'No'"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'Yes'\nassert solution('ooA') == 'No'\nassert solution('oOo') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('wat0_1') == 'No'\nassert solution('wat0_1') == 'No'\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n7 5 8 6 9\n''') == 'Yes'\n\nassert solution('''\n5\n-1 -2 0 0 -5\n''') == 'No'\n\nassert solution('''\n5\n1000000000 0 0 0 0\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n7 5 8 6 9') == 'Yes'\nassert solution('5\\n-1 -2 0 0 -5') == 'No'\nassert solution('5\\n1000000000 0 0 0 0') == 'Yes'"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n7 5 8 6 9\n''') == 'Yes'\nassert solution('''5\n-1 -2 0 0 -5\n''') == 'No'\nassert solution('''5\n1000000000 0 0 0 0\n''') == 'Yes'\n\n\n\n------solution------\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n'''\n\n'''\nfrom math import sqrt\nfrom itertools import combinations, product\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Yes\""
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\""
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n7 5 8 6 9\\n') == 'Yes'\nassert solution('5\\n1000000000 0 0 0 0\\n') == 'No'\n\"\"\"\n\nn = int(input())\n\npoints = input()\npoints_list = points.split()\nx_min, x_max = int(points_list[0]), int(points_list[-1])\n\ny_min = int(points_list[1])\ny_max = int(points_list[-2])"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n7 5 8 6 9\n''') == 'Yes'\n\nassert solution('''5\n1000000000 0 0 0 0\n''') == 'No'\n\nassert solution('''5\n0 0 0 0 0\n''') == 'No'\n\n'''\n1. x,y \uc88c\ud45c \uc124\uc815\n2. \ub2e4\uc74c x,y \uc88c\ud45c\uac00 \ub098\uc624\ub294\uac00?\n3. \ub098\uc624\ub294 \uac12\uc774 \uc791\uc740\uac00?\n4. \ub9cc\uc57d \ub098\uc624\ub294\uac12\uc774 \ud074\ub54c -> \uac12\uc774 \ud06c\ub2e4\uba74 \uc0dd\ub7b5\n5. \uac12\uc774 \ud06c\ub2e4\uba74 \uc0dd\ub7b5\n\nex) 4,3 \uc774\uba74 4\uac00 \ud074\ub54c \uc815\ub2f5\n'''\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n7 5 8 6 9\n''') == \"Yes\"\nassert solution('''\n5\n-1 -2 0 0 -5\n''') == \"No\"\nassert solution('''\n5\n1000000000 0 0 0 0\n''') == \"Yes\"\nassert solution('''\n5\n1000000000 0 0 0 0\n''') == \"No\"\nassert solution('''\n5\n3 4\n''') == \"No\"\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\naabbaa\nbaaaab\naaaaa\n\n''') == '4', \"First\"\nassert solution('''\n5 4\nazaza\nzazaz\nazaz\n\n''') == '11', \"Second\"\nassert solution('''\n9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n\n''') == '2', \"Third\""
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5') == '4'\nassert solution('5 4') == '11'\nassert solution('9 12') == '2'"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\naabbaa\nbaaaab\naaaaa\n\n''') == '4'\n\nassert solution('''\n5 4\nazaza\nzazaz\nazaz\n\n''') == '11'\n\nassert solution('''\n9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n\n''') == '2'"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\n\nassert solution(input()) == \"11\"\n\n\"\"\""
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\") == \"4\"\nassert solution(\"9 12\") == \"11\"\nassert solution(\"aabbaa\") == \"2\"\nassert solution(\"zazaz\") == \"2\"\n\n\n\"\"\"\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([6, 5], 'aabbaa') == '4'\nassert solution([5, 4], 'azaza') == '11'\nassert solution([9, 12], 'abcabcabc') == '2'\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\nazaza\nzazaz\nazaz\n\n9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz''') == \"4\"\n\nassert solution('''6 5\naabbaa\nbaaaab\naaaaa\n\n5 4\nazaza\nzazaz\nazaz\n\n9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz''') == \"11\"\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_input_1) == \"2\"\nassert solution(test_input_2) == \"11\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\nababba\\nbaaaab\\naaaaa\\n\") == \"4\"\n\nassert solution(\"5 4\\nazaza\\nzazaz\\nazaz\\n\") == \"11\"\n\"\"\"\n\nimport sys\nfrom collections import Counter, defaultdict\nfrom itertools import combinations\nfrom bisect import bisect_left, bisect_right\ninput = lambda: sys.stdin.readline().rstrip() "
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5\\nabaa\\nbaaaab\\naaaaa') == '4'\nassert solution('5 4\\nazaza\\nzazaz\\nazaz') == '11'\nassert solution('9 12\\nabcabcabc\\nxyzxyzxyz') == '2'\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"0\"\n\nprint(solution(input()))"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"0\"\n\n\"\"\"\nfrom collections import Counter\n\nn = int(input())\n\npromo_codes = Counter()\n\nfor _ in range(n):\n    promo_codes[input()] += 1"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n0\n1\n''') == '1'\nassert solution('''\n\n4\n001100\n001100\n001101\n001100\n\n''') == '0'\nassert solution('''\n\n8\n112111\n121111\n222211\n111111\n111211\n111211\n221111\n222211\n''') == '0'\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_line()) == \"0\"\n\n'''"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n000000\\n999999') == '2'\nassert solution('6\\n211111\\n212111\\n222111\\n111111\\n112111\\n121111') == '0'\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '0'\nassert solution('11') == '0'"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"16\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '7'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\nassert solution('''5 3\n1 2 3 4\n1 3\n2 4\n1 2\n''') == '16'\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n\nOutput\n16\n''') == '0'\nprint(solution('''2 2\n-1 -2\n1 1\n1 2\n\nOutput\n0'''))"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\n\n'''\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 -2 1 3 -4') == '7'\nassert solution('4 3\\n1 2 3 4') == '16'\nassert solution('2 2\\n-1 -2') == '0'\n\n\n'''"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n    \"\"\"\n) == \"7\"\nassert solution(\n    \"\"\"\n5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n    \"\"\"\n) == \"16\"\nassert solution(\n    \"\"\"\n2 2\n-1 -2\n1 1\n1 2\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1''') == '16'\nassert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4''') == '7'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n\n''') == '0'\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"7 5\") == \"7\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n1 -2 1 3 -4\\n1 2\\n4 5\\n3 4') == '7'\nassert solution('2 2\\n-1 -2\\n1 1\\n1 2\\n') == '0'\n\n'''"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n7\n8\n''') == '22'\nassert solution('''\n0\n''') == '0'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n-1\n''') == '-1'\nassert solution('''\n-0\n''') == '0'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"21\\n\"\nassert solution(\"4545\") == \"4444\\n\"\nassert solution(\"-1\") == \"-11\""
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('345') == '345'\nassert solution('234') == '1234'\nassert solution('2') == '21'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('13') == '31'\nassert solution('4545') == '4444'\nassert solution('32729') == '32243'"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '1'\nassert solution('46') == '6'\nassert solution('90') == '9'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '22'\nassert solution('4545') == '4444'\nassert solution('1111') == '1222'\nassert solution('9079') == '9079'\nassert solution('977') == '77'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"27\") == \"22\"\nassert solution(\"4545\") == \"4444\"\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5\n''') == '123'\nassert solution('''\n9\n9\n''') == '999'\nassert solution('''\n5\n100000\n''') == '1000000'\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 2, 4, 5]) == \"-1\"\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 10 2\n''') == '1 2 4 8', 'Sample test 1'\nassert solution('''\n2 4 5\n''') == '-1', 'Sample test 2'"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-\""
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 10 2\n''') == '1 2 4 8'\nassert solution('''2 4 5\n''') == '-1'\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10 2') == '1 2 4 8', 'Sample #1 fail'\nassert solution('2 4 5') == '-1', 'Sample #2 fail'\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\nassert solution(\"3 5 6\") == \"-1\""
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 7\") == \"NO\""
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n0 2\\n2 4\\n3 5\\n') == 'YES'\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 7\") == \"NO\"\n\n\n'''"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5\n0 2\n2 4\n3 5\n''') == 'NO'\nassert solution('''\n1\n5\n0 2\n2 4\n3 5\n''') == 'YES'\nassert solution('''\n1\n5\n0 3\n4 6\n7 8\n''') == 'YES'\n''')\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == 'YES'\nassert solution('3 7') == 'NO'\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,5]) == \"YES\"\nassert solution([3,7]) == \"NO\"\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('2 3') == 'NO'\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 5]) == \"YES\"\nassert solution([3, 7]) == \"NO\"\nassert solution([3, 11]) == \"NO\"\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 7\") == \"NO\""
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 7\") == \"NO\""
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n112 121 122 211 212 221''') == '6'\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('4 1 2') == '6'\nassert solution('3 4 4') == '0'\nassert solution('6 1 2') == '6'\nassert solution('10 5 3') == '63'\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"6\"\nassert solution(\"3 3 2\") == \"0\"\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('3 2 1') == '8'\nassert solution('5 2 3') == '26'\nassert solution('100000 000 000') == '1'\nassert solution('5 3 2') == '6'\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    10 20 10\n    \"\"\") == \"4\"\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('5 2 1') == '18'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"3 2 1\") == \"6\"\nassert solution(\"6 6 6\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 4 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin):\n        N, M, K = list(map(int, stdin.split()))\n        dp = [[0 for _ in range(M)] for _ in range(N + 1)]\n        dp[0][0] = 1\n        for i in range(N):\n            for j in range(M):\n                for k in range(min(K, i + 1)):\n                    dp[i + 1][j] += dp[i][j]\n                    if k == 0 or j == 0:\n                        continue\n                    if i > k:\n                        dp[i + 1][j] += dp[i][j] * (k + 1) * (M - j)\n                    else:\n                        dp[i + 1][j] += dp[i][j] * k * (M - j)\n        return str(dp[N][0])\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1') == '6'\nassert solution('3 2 1') == '6'\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 1\", \"Test 1 failed\"\nassert solution(\"1\") == \"0 1\", \"Test 2 failed\"\nassert solution(\"0\") == \"1 1\", \"Test 3 failed\"\nassert solution(\"3\") == \"1 0 1\", \"Test 4 failed\"\nassert solution(\"6\") == \"1 1 1 1 1 1\", \"Test 5 failed\"\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 0\\n') == '1 1'\nassert solution('2\\n1 0\\n') == '1 1'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1 1\"\n\"\"\"\n\nimport re\nimport math\nimport itertools\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 1\"\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 0\") == \"1 1\"\nassert solution(\"2\\n1 1\") == \"0 1\"\nprint(solution(input()))\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 0\\n\") == \"1 1\"\n\"\"\"\n\nimport sys\nimport os"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '0 1'"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 1', solution('2')\nassert solution('1') == '0 1', solution('1')\nassert solution('3') == '0 0 0', solution('3')\nassert solution('10') == '0 0 0 0 0 0 1 1 0', solution('10')\nassert solution('4') == '1 1 1 1', solution('4')\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 1\"\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0\") == \"1 1\", \"Wrong answer\"\nassert solution(\"2\") == \"1 1\", \"Wrong answer\"\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n.S.\n...''') == '8'\nassert solution('''3 3\n.S.\n...\n...''') == '5'\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3 4\n    S...\n    ....\n    ..S.\n    ''') == \"8\"\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n.S.\n.S.\n..S.''') == 8\nassert solution('''5 4\n.S.\n.S.\n.S.\n..S.\n..S''') == 3\nassert solution('''20 4\n.S.\n.S.\n.S.\n.S.\n..S.\n..S.\n.S.\n.S.\n.S.\n.S.\n.S.\n..S.\n..S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S.\n.S."
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\nS...\n....\n..S.''') == '8'\nassert solution('''\n3 4\nS...\n....\n..S.''') == '8'\nassert solution('''\n3 4\nS...\n....\n..S.''') == '0'\nassert solution('''\n3 4\nS...\n....\n..S.''') == '0'\nassert solution('''\n3 4\nS...\n....\n..S.''') == '0'\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\n.S...\\n...S.\\nS') == '8'\nassert solution('4 4\\n.S...\\n...S.\\n.S...\\n.S') == '8'\n\n\"\"\"\nfrom math import prod"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\nS...\\n....\\n..S.\\n\") == \"8\"\nassert solution(\"3 2\\n.S.\\n.S.\\n\") == \"2\"\nassert solution(\"3 3\\nSSS.\\nSSS.\\n\") == \"4\""
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3 4\\nS.S..\\n.S..'\n) == '8'\nassert solution(\n    '3 4\\n..S.\\n..S.'\n) == '4'\nassert solution(\n    '1\\n'\n) == '1'\nassert solution(\n    '1\\n'\n    ) == '0'\nassert solution(\n    '1\\n'\n    ) == '0'\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n.S.\n...\n.S.''') == '8'"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\nS...\\n....\\n..S.') == \"8\"\nprint(\"All test cases passed\")\n\n\"\"\"\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 8, solution.__doc__\n\"\"\"\n\nr, c = map(int, input().split())\ns = 'S' * r + '.' * c + 'S' * r"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('4') == '0'\nassert solution('1') == '-1'\nassert solution('4') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 5\n\n''') == '2'\nassert solution('''1\n10\n\n''') == '-1'\nassert solution('''4\n4 3 4 5\n\n''') == '0'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 5 9') == '1'\nassert solution('1\\n10') == '-1'\nassert solution('4\\n4 3 4 5') == '0'\nassert solution('4\\n3 4 5') == '3'\nassert solution('2\\n2 4') == '3'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('1') == '-1'\nassert solution('10') == '-1'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7\") == \"1\"\nassert solution(\"1\\n10\") == \"-1\"\nassert solution(\"4\\n4 3 5 9\") == \"1\"\nassert solution(\"4\\n4 3 4 5\") == \"0\"\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '-1'\nassert solution('4') == '0'\nassert solution('1') == '-1'\nassert solution('4') == '3'\nassert solution('4') == '0'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-2 10'\nassert solution('4') == '-1'\nassert solution('2') == '3'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '-1'\nassert solution(\"4\\n\") == '-1'\nassert solution(\"2\\n\") == '0'\nassert solution(\"3\\n\") == '1'\nassert solution(\"4\\n\") == '2'"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('4 5') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\""
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4 5\\n') == 'YES'\nassert solution('4\\n1 2\\n2 3\\n2 3\\n1 2\\n') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 2\n2 3\n4 5\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n2 3\n1 2\n\n\"\"\") == \"NO\""
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\\n1 2\\n2 3\") == \"YES\"\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n2 3''') == 'YES'\nassert solution('''4\n1 2\n2 3\n2 3\n1 2''') == 'NO'"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2') == 'YES'\nassert solution('4\\n1 2\\n2 3\\n2 3') == 'NO'\nprint(solution('''\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n5 6\n'''))"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n''') == '2 3 4'\n\nassert solution('''\n10 11\n''') == '-1'\n\nassert solution('''\n900000000000000009 900000000000000021\n''') == '900000000000000009 900000000000000022'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000021') == '900000000000000009 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '900000000000000009 900000000000000021'\nassert solution('1000000000000000000000000000009') == '1000000000000000000000000000010'"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000021') == '900000000000000009 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000021') == '900000000000000009 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '900000000000000009 900000000000000021'"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000021') == '900000000000000009 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '900000000000000009 900000000000000021'"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '900000000000000009 900000000000000021'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n1 4\n2 3\n3 4\n4 5''') == 'YES'\nassert solution('''2 7\n1 2\n1 4\n2 5\n2 3\n2 5\n3 6\n4 5\n4 5''') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('5 6') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 1 1\n''') == 'YES'\nassert solution('''3 4\n1 1 2\n''') == 'NO'\nassert solution('''3 4\n1 3 2\n''') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n1 1 1\n''') == 'YES'\nassert solution('''\n3 4\n3 1 3\n''') == 'YES'\nassert solution('''\n1\n1\n''') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 1 3') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('1 1 2') == 'NO'"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 1 1\\n') == 'YES'\nassert solution('3 4\\n3 1 3\\n') == 'YES'\nassert solution('3 4\\n4 4 4\\n') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 1 1') == 'YES'\nassert solution('3 4\\n3 1 3') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 1 1\n''') == 'YES'\nassert solution('''3 4\n3 1 3\n''') == 'NO'\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 13 9\n''') == '24', solution('''8 13 9\n''')\nassert solution('''13 3 6\n''') == '9', solution('''13 3 6\n''')"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 13 9\") == \"24\"\nassert solution(\"13 3 6\") == \"9\"\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([8, 13, 9]) == \"24\"\nassert solution([13, 3, 6]) == \"9\"\nassert solution([0,0,0]) == \"0\"\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3, 4, 4') == '6'\nassert solution('3, 4, 7') == '7'\nassert solution('6, 5, 9') == '7'\nassert solution('5, 3, 2') == '4'\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([8, 13, 9]) == \"24\"\nassert solution([13, 3, 6]) == \"9\""
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 13 9\n''') == '24'\nassert solution('''13 3 6\n''') == '9'\nassert solution('''''') == ''\nassert solution('''''') == ''\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 13 9\") == \"24\"\nassert solution(\"13 3 6\") == \"9\""
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 13 9\\n\") == \"24\"\nassert solution(\"13 3 6\\n\") == \"9\"\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 4 3\") == \"4\"\nassert solution(\"2 3 3\") == \"2\"\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\"\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5, 4, 3]) == '4'\nassert solution([1, 1, 1]) == '1'\nassert solution([2, 3, 3]) == '2'\nassert solution([2, 3, 4]) == '2'\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\""
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\nassert solution('5 4 3') == '4'\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\"\nassert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\n\"\"\""
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4 3\n1 1 1\n''') == '4'\nassert solution('''2 3 3\n1 1 1\n''') == '2'\nassert solution('''1 1 1\n''') == '1'\n\n\n\n\"\"\""
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, \"Expected output {}, got {}\".format(output_string, solution(input_string))\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution(\"\"\"\n3\n2 3 9\n\"\"\") == \"8\"\nassert solution(\"\"\"\n2\n2 999995\n\"\"\") == \"5\""
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"8\"\nassert solution_solution() == \"5\""
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n2 3 9\\n\") == \"8\"\nassert solution(\n    \"1\\n2 3 9\\n\") == \"5\"\nassert solution(\n    \"1\\n2 999995\\n\") == \"5\"\n\n\n---\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('2') == '5'\nassert solution('3') == '8'\n\n'''\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8'\nassert solution(input_data=\"\"\"2\n2 999995\"\"\") == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '8'\nassert solution('2') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 3 9\n\n''') == '8'\nassert solution('''\n2\n2 999995\n\n''') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"5\"\n\nimport os\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print(out)\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3\n2 3 9\"\"\"\n        output = \"\"\"8\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"2\n2 999995\"\"\"\n        output = \"\"\"5\"\"\"\n        self.assertIO(input, output)\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '680'\nassert solution('1') == '20'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1''') == '20'\nassert solution('''2''') == '680'\nprint(solution('''{}'''.format(input())))\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\nassert solution('3') == '1110'\n\nassert solution('4') == '720'\nassert solution('5') == '13840'\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n\n''') == \"20\"\nassert solution('''2\n\n''') == \"680\""
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n''') == '680'\n\nassert solution('''1\n''') == '20'\n\nassert solution('''3\n''') == '0'\n\n\n\"\"\"\n\nfrom math import factorial\n\nn = int(input())\n\nprint((factorial(3*n) - factorial(n) - 2**n) % 1000000007)\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n''') == '20'\nassert solution('''1\n''') == '20'\nassert solution('''3\n''') == '680'\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ab') == '1'\nassert solution('koko') == '2'\nassert solution('murat') == '0'\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\n'''\n\n\n\n\nimport math\n\n\nstdin = input()\n\nn = int(stdin)\n\ns = input()"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '0'"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('8') == '-1'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == -1\nassert solution('2') == 1\nassert solution('3') == 0\nassert solution('4') == 1\nassert solution('5') == 0"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Valera\"\n\n[Image]"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\n\"\"\""
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Vladik\u2019\u2019\"\nassert solution(input()) == \"Valera\u2019\u2019\"\n'''"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n''') == 'Valera'\nassert solution('''\n7 6\n''') == 'Vladik'\n''')"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Vladik\"\nassert solution(\"7 6\") == \"Valera\"\n\n\"\"\""
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 1]) == \"Valera\"\nassert solution([7, 6]) == \"Vladik\"\n\n\"\"\""
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5 4\n    ''') == 'Valera'\nassert solution('''\n    5 3\n    ''') == 'Vladik'\n\"\"\""
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n''') == 'Vladik', 'First test case'\nassert solution('''\n7 6\n''') == 'Valera', 'Second test case'\n''')"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n''') == 'Vladik'\nassert solution('''\n7 6\n''') == 'Valera'\n'''\n\nfrom itertools import combinations"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"Vladik\"\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(((??(??(((??\n''') == '(((((((\n''')),\n'''\n    (((??(??(((??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(((??(??((??\n''') == '(((((?))\n''')),\n'''\n    (((??(??(((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??((??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?)))\n''')),\n'''\n    (((??(??(??(??((??\n''') == '(((((?"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('(()())') == '((()())'\nassert solution('(())') == '((()))'\nassert solution('()())') == '(((()))'\nassert solution('(((())))') == '((((()))))'\nassert solution('(((())))') == '((((()))))'\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"(((())))\") == \"(()())\", \"The second sample fails\"\nassert solution(\"(((()))))\") == \":((\", \"The third sample fails\""
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('(????)' == '(()())')\nprint(solution('(????)'))\nassert solution('(???)' == ':(')\nprint(solution('(???)'))"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n(????)\n''') == \":(\"\n\nassert solution('''\n(??(??(?)\n''') == \":(\"\n\nassert solution('''\n(??(?(??(??(())))\n''') == \":(\"\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"(()())\"\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(??(??))') == '(()())'\nassert solution('((??(??)))') == '((()())'\nassert solution('(()))') == '((())'\nassert solution('((())))') == '((()(()))'\nassert solution('(()))') == '((()))'\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \":(\"\n\nfor i in range(int(input())):\n    print(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('(()(()()()?(()))?()))') == ':('\nassert solution('(()()(())()()?(()))?()') == ':('\nassert solution('(()(()()()?(()))?()))') == ':('\nassert solution('(()(()()()?(()))?()))') == ':('\nassert solution('(()()(())()()?(()))?()') == ':('\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \":(\", f\"actual: {solution(input)}\"\nassert solution(input) == \":(\", f\"actual: {solution(input)}\"\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1000000000\n10 -9 -3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 12\n10 -9 -3 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 20\n14 -7 19\n\"\"\") == \"0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5\\n') == '3'\nassert solution('3 12\\n10 -9 -3 5\\n') == '2'\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1000000000') == '3'\nassert solution('3 12') == '2'\n\n\n'''\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 20\") == \"0\"\nassert solution(\"3 12\") == \"2\""
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 10\n10 -9 -3 5''') == '3'\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1000000000\") == \"3\"\nassert solution(\"3 12\") == \"2\"\nassert solution(\"2 20\") == \"0\"\n\n\n\"\"\"\n\n\nfrom math import factorial\n\nn, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1000000000\\n10 -9 -3 5\\n\") == \"3\"\nassert solution(\"3 12\\n10 -9 -3 5\\n\") == \"2\"\nassert solution(\"2 20\\n14 -7 19\\n\") == \"0\"\nassert solution(\"2 12\\n10 -9 -3 5\\n\") == \"1\""
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n\nassert solution() == \"2\"\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000000\\n10 -9 -3 5\") == \"3\"\nassert solution(\"3 12\\n10 -9 -3 5\") == \"2\"\n"
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 20\\n12 -7 19') == '2'\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 2 1\\n') == '1'\nassert solution('2\\n2 2\\n') == '0'\nassert solution('7\\n2 2 2 1 1 1 1\\n') == '3'\nprint(solution(''))\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 2\\n1 1 1') == '1'\nassert solution('3\\n2 2') == '0'\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('2') == '0'\nassert solution('7') == '3'\nassert solution('3') == '1'\n\n'''\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"3\""
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1 2 1\n''') == '1'\n\nassert solution('''3\n2 2\n''') == '0'\n\nassert solution('''7\n2 2 2 1 1 1 1\n''') == '3'"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 2\") == \"1\"\nassert solution(\"4\\n1 1 2 1\") == \"1\"\nassert solution(\"7\\n2 2 2 1 1 1 1\") == \"3\"\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '3'\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"1\"\nprint(solution(input_string))\n\n\"\"\""
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 5 5''') == '13'\nassert solution('''0 0 0 0''') == '0'\nprint('All tests passed.')\n"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n-5 -6 -6\n-4 -3 -3\n-3 -2 -1\n0 1 1 1\n1 3 3 3\n2 4 2 2\n-5 -5 -6\n-4 -4 -4\n-3 -3 -3\n0 2 2 2\n1 2 2 2\n2 3 2 2\n-5 -5 -6\n-4 -4 -4\n-3 -3 -3\n''') == '31'\nassert solution('''\n-5 -6 -6\n-4 -3 -3\n-3 -2 -1\n0 1 1 1\n1 3 3 3\n2 4 2 2\n-5 -5 -6\n-4 -4 -4\n-3 -3 -3\n0 2 2 2\n1 2 2 2\n2 3 2 2\n-5 -5 -6\n-4 -4 -4\n-3 -3 -3\n''') == '16'\n"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 5 5\") == \"13\""
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 5 5''') == '13'\n\nassert solution('''1 1 1 1''') == '8'\n\nassert solution('''2 2 2 2''') == '18'\n\nassert solution('''2 1 1 1''') == '6'\n\nassert solution('''5 5 5 5''') == '16'"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 5 5\") == \"13\"\nassert solution(\"3 2 4\") == \"0\""
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 5 5') == '13'\nassert solution('-10 8 9 10') == '10'\nassert solution('-10 -8 9 10') == '12'"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"13\""
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 5 5') == '13'\n\nassert solution('1 1 5 1') == '7'\n\nassert solution('1 1 3 4') == '4'\n"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5 1 1\n''') == '13'\nassert solution('''\n5 4 3 2\n''') == '11'\nassert solution('''\n2 3 4 1\n''') == '12'\nassert solution('''\n4 5 2 4\n''') == '12'\nassert solution('''\n4 4 5 5\n''') == '5'\n"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 5 5') == '13'"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('8 4') == 'NO'\nassert solution('8 7') == 'NO'\nassert solution('3 5') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\\n4 4\\n1 3\\n3 1\") == \"YES\"\nassert solution(\"8\\n4 4\\n2 3\\n1 6\") == \"NO\"\nassert solution(\"8\\n3 5\\n1 2\\n6 1\") == \"NO\""
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution([''] * 10) == 'NO'\nassert solution(['1', '2', '3', '4']) == 'YES'\nassert solution(['8', '4', '5', '6']) == 'NO'\nassert solution(['8', '4', '4', '4']) == 'NO'\n\n\"\"\"\nimport re\nimport math"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 5\\n2 3\\n1 6\\n\") == \"NO\"\nassert solution(\"8 5\\n3 3\\n1 6\\n\") == \"YES\"\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n4 4\n1 3\n3 1\n\n''') == 'YES'\nassert solution('''8\n4 4\n2 3\n1 6\n\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n\n''') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n4 4\n1 3\n3 1\n\n''') == 'YES'\n\nassert solution('''8\n4 4\n2 3\n1 6\n\n''') == 'NO'\n\nassert solution('''8\n3 5\n1 2\n6 1\n\n''') == 'NO'\n\nassert solution('''8\n3 5\n1 2\n6 1\n\n''') == 'NO'"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == 'YES'\nassert solution('8 4') == 'NO'\nassert solution('3 5') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_str) == \"YES\"\nprint(solution(input_str))\n\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 3\\n3 1\") == \"YES\"\nassert solution(\"4 4\\n2 3\\n1 6\") == \"NO\"\nassert solution(\"3 5\\n1 2\\n6 1\") == \"NO\"\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(t) == \"1001\"\nassert solution(t_2) == \"32\"\n\nassert solution(inp) == \"1001\"\nassert solution(inp_2) == \"32\"\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n13 35 77\n''') == '1001'\nassert solution('''\n6\n1 2 4 8 16 32\n''') == '32'\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '10'\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1001'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nm = []\nfor i in range(len(a)):\n    for j in range(i+1, len(a)):\n        if a[i]!= 0 and a[j]!= 0:\n            m.append(a[i] * a[j])\nm.sort()\nprint(m[0])"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1001'\nassert solution('6') == '32'"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n3 4 5 2 1\n''') == '1001'\nassert solution(\n'''\n4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n13 35 77\n\n4\n1 2 3 4 5\n\n5\n1 2 3 4 5''') == '1001'\nassert solution('''4\n1 2 3 4\n\n5\n1 2 3 4\n\n6\n1 2 3 4 5\n\n7\n1 2 3 4 5''') == '32'\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1001\"\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n13 35 77\n\nOutput\n1001\n''') == '1001'\nassert solution('''\n6\n1 2 4 8 16 32\n\nOutput\n32\n''') == '32'\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n13 35 77\n\n''') == '1001'\nassert solution('''\n6\n1 2 4 8 16 32\n\n''') == '32'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n5 2\n2 1\n''') == '2'\n\nassert solution('''\n1 5\n2 3\n''') == '0'\n\nassert solution('''\n1 2\n1000000000 1\n''') == '500000000'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n5 2\\n2 1\") == \"2\"\nassert solution(\"1 5\\n2 3\\n1 3\") == \"1\"\nassert solution(\"1 2\\n1000000000 1\") == \"500000000\"\nassert solution(\"1 2\\n1000000000 1\") == \"500000000\"\nassert solution(\"1 2\\n1000000000 1\") == \"500000000\"\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5\\n2 3') == '1'\nassert solution('2 5\\n2 1') == '1'\nassert solution('1 2\\n1000000000 1') == '500000000'\nassert solution('2 2\\n1000000000 1') == '1'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4\n5 2\n2 1\n''') == '2'\n\nassert solution('''\n1 5\n2 3\n''') == '0'\n\nassert solution('''\n1 2\n1000000000 1\n''') == '500000000'"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n2 3\") == \"1\"\nassert solution(\"1 1\\n3 3\") == \"1\"\nassert solution(\"1 2\\n3 3\") == \"0\"\nassert solution(\"1 4\\n2 3\") == \"2\"\nassert solution(\"1 5\\n2 3\") == \"0\"\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n2 3\") == \"1\"\nassert solution(\"1 5\\n2 1\") == \"1\"\nassert solution(\"1 2\\n1000000000 1\") == \"500000000\""
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5\\n5 2\\n2 1\\n') == '2'\nassert solution('1 5\\n5 2\\n2 1\\n') == '1'\nassert solution('1 5\\n5 2\\n2 1\\n') == '0'\nassert solution('1 5\\n5 2\\n2 1\\n') == '500000000'"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4\n5 2\n2 1\n1 3\n\n1 2\n1000000000 1\n\n2 5\n2 1\n1 3\n\n1 2\n1000000000 1\n\n1 2\n1000000000 1''') == '500000000'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n5 2\n2 1\n''') == '2'\nassert solution('''1 5\n2 3\n''') == '0'\nassert solution('''1 2\n1000000000 1\n''') == '500000000'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5\\n2 3') == '1'\nassert solution('2 5\\n2 1') == '1'\nassert solution('1 2\\n1000000000 1') == '500000000'\nassert solution('2 5\\n2 1') == '0'"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8.549e2') == '85.49'\nassert solution('8.549e3') == '85.5'\nassert solution('0.33e0') == '0.33'\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1.5e1\n        1.5e3\n        1.5e5\n        1.5e7\n        1.5e9\n        1.5e10\n        1.5e100''') == \"1020000.0\"\n\nassert solution('''1.5e10\n        1.5e11\n        1.5e12\n        1.5e13\n        1.5e14\n        1.5e15\n        1.5e16\n        1.5e17\n        1.5e18\n        1.5e19\n        1.5e20\n        1.5e21\n        1.5e22\n        1.5e23\n        1.5e24\n        1.5e25\n        1.5e26\n        1.5e27\n        1.5e28\n        1.5e29\n        1.5e30\n        1.5e31\n        1.5e32\n        1.5e33\n        1.5e34\n        1.5e35\n        1.5e36\n        1.5e37\n        1.5e38\n        1.5e39\n        1.5e40\n        1.5e41\n        1.5e42\n        1.5e43\n        1.5e44\n        1.5e45\n        1.5e46\n        1.5e47\n        1.5e48\n        1.5e49\n        1.5e50\n        1.5e51\n        1.5e52\n        1.5e53\n        1.5e54\n        1.5e55\n        1.5e56\n        1.5e57\n        1.5e58\n        1.5e59\n        1.5e60\n        1.5e61\n        1.5e62\n        1.5e63\n        1.5e64\n        1.5e65\n        1.5e66\n        1.5e67\n        1.5e68\n        1.5e69\n        1.5e70\n        1.5e71\n        1.5e72\n        1.5e73\n        1.5e74\n        1.5e75\n        1.5e76\n        1.5e77\n        1.5e78\n        1.5e79\n        1.5e80\n        1.5e81\n        1.5e82\n        1.5e83\n        1.5e84\n        1.5e85\n        1.5e86\n        1.5e87\n        1.5e88\n        1.5e89\n        1.5e90\n        1.5e91\n        1.5e92\n        1.5e93\n        1.5e94\n        1.5e95\n        1.5e96\n        1.5e97\n        1.5e98\n        1.5e99\n        1.5e100''') == \"1.5e99\"\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0.3333e2') == '0.333'\nassert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\nassert solution('8.549e-2') == '8.55'\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8.549e2\") == \"8549.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\"\nassert solution(\"0.33e1\") == \"0.33\"\nassert solution(\"0.33e2\") == \"0.33\"\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8.549e2\") == \"854.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\"\nassert solution(\"-8.547e-4\") == \"-8.547\"\nassert solution(\"0.1e-4\") == \"0.1\"\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8.549e2\") == \"854.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\""
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8.549e2''') == '854.9'\nassert solution('''8.549e3''') == '8549'\nassert solution('''0.33e0''') == '0.33'\nassert solution('''8.549e-2''') == '854.9'\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8.549e2\") == \"854.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\"\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8.549e2') == '8549'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\nassert solution('8.549e1') == '854.9'\nassert solution('8.549e8') == '8549'\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"8\"\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 5 1 3\") == \"8\"\nassert solution(\"100 5\\n2 4 5 1 3\") == \"3\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"10 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"2\"\nassert solution(\"3 4\\n2 4 -10 -8 8\\n3 4 -10 -8 8\") == \"0\""
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 2') == '-2'\nassert solution('5 2') == '-4'\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '8'\nassert solution('10 10') == '-5'\nassert solution('5 9') == '-3'"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2\"\n    \"2 4 5 1 3\"\n    \"3 4 -10 -8 8\"\n    ) == \"8\"\n\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"2 4 5 1 3\") == \"6\"\nassert solution(\"5 2\") == \"10\"\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '8'\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n5 4 6 1 3\\n2 4 -10 -8 8\\n\") == \"8\"\nassert solution(\"5 1\\n3 4 5 1 3\\n2 4 -10 -8 8\\n\") == \"6\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\\n\") == \"6\"\nassert solution(\"5 3\\n1 2 3 4 5\\n5 4 -10 -8 8\\n\") == \"6\"\n\n'''\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\n\"\"\"\nn, k = list(map(int, stdin.split(\" \")))\np = list(map(int, stdin.split(\" \")))\nc = list(map(int, stdin.split(\" \")))\ndp = [[0]*(k+1) for _ in range(n+1)]\ndp[1][p[0]] = c[0]\n\nfor i in range(1, n):\n    for j in range(1, k+1):\n        dp[i+1][j] = max(dp[i][j], dp[i+1][j-p[i]]+c[i])\n\nprint(dp[-1][-1])"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 7 1 6') == 'YES'\nassert solution('3 3 1 3') == 'YES'\nassert solution('2 2 1 2') == 'YES'"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 1 2') == \"YES\"\nassert solution('3 3 1 3') == \"YES\"\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 7 1 6') == 'YES\\nCAN 2'\nassert solution('3 3 1 3') == 'YES\\nCAN 81'"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 7 1 6') == 'YES\\nCAN 2'\nassert solution('3 3 1 3') == 'YES\\nCAN 81'\nassert solution('2 2 1 2') == 'YES\\nNO'\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 7 1 6') == 'YES'\nassert solution('3 3 1 3') == 'YES'\nassert solution('2 2 1 2') == 'YES'\nassert solution('1 2 1') == 'NO'\nassert solution('5 6 1') == 'NO'"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 7 1 6\n1 2 2\n1 3 10\n2 3 7\n2 4 8\n3 5 3\n4 5 2\n5 6 1\n''') == 'YES\\nCAN 2\\nCAN 1\\nCAN 1\\nCAN 1\\nCAN 1'\n\nassert solution('''\n3 3 1 3\n1 2 10\n2 3 10\n1 3 100\n''') == 'YES\\nYES\\nCAN 81'\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 7 1 6') == 'YES\\nCAN 2\\nCAN 1\\nCAN 1\\nCAN 1\\nYES'\nassert solution('3 3 1 3') == 'YES\\nYES\\nCAN 81'\nassert solution('2 2 1 2') == 'YES\\nNO'\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"CAN\"\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == [\"YES\", \"CAN\", \"CAN\"]\nassert solution() == [\"YES\", \"NO\"]"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 7 1 6\n1 2 2\n1 3 10\n2 3 7\n2 4 8\n3 5 3\n4 5 2\n5 6 1\n\n''') == 'YES\\nCAN 2\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\\n'\n\nassert solution('''3 3 1 3\n1 2 10\n2 3 10\n1 3 100\n\n''') == 'YES\\nYES\\nCAN 81\\n\n\nassert solution('''2 2 1 2\n1 2 1\n1 2 2\n\n''') == 'YES\\nNO\\n\n\nassert solution('''5 5 1 5\n1 2 100\n2 3 100\n3 4 100\n4 5 100\n5 6 100\n\n''') == 'YES\\nNO\\nNO\\nYES\\nNO\\nYES\\n'''"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '3\n2\n3\n3\n1 2 1\n2 3 3\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''')\nassert solution('''\n5\n1 2\n1 3\n2 4\n2 5\n''') == '9\n3\n5 5 5\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''' == '9\n1\n3\n5\n4\n4 3 3\n4 1 1\n4 2 2\n''"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '9'\nassert solution('2') == '2'\nassert solution('1 2') == '2 3'\nassert solution('1 3') == '2 3 3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n''') == '3'\nassert solution('''\n1\n2\n''') == '3'\nassert solution('''\n2\n4\n5\n''') == '6'\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\") == \"3\\n2 3\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n2 5\") == \"9\\n3 5 5\"\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '9'\nassert solution('1') == '3'\nassert solution('2') == '4'\nassert solution('3') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '3\n2\n3\n4\n5\n6\n''')"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '9', solution()\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2\n1 3\n2 4''') == '9'\nassert solution('''1 2\n1 3\n2 4''') == '3 5 5'"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 5 5'\nassert solution('2') == '2 1 1'\n"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '9'\nassert solution('10') == '9'\nassert solution('12') == '10'\nassert solution('100') == '10'\nassert solution('1000') == '9'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 5 3 5\\n5 2 5 7 5') == '6'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '6'\nassert solution('4') == '5'\nassert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"6\""
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '0'"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"6\"\nassert solution(input_) == \"0\"\n\n\n'''\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 7 9 7 8\n5 2 5 7 5''') == '6'\nassert solution('''5\n3 2 3 4 5\n1 1 1 1 1''') == '0'''\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 7 9 7 8\n5 2 5 7 5''') == '6'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3 7 9 7 8\n5 2 5 7 5\n\n''') == '6'\nassert solution('''\n5\n1 2 3 4 5\n1 1 1 1 1\n\n''') == '0'"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 7 9 7 8\") == \"6\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"()()()\") == \"5 10\"\nassert solution(\"(())()()\") == \"4 5 10\"\nassert solution(\")(()())\") == \"0 8 7\"\nassert solution(\")(()())\") == \"0 8 7 10\"\n\n\n'''"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"5 10\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5 10\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n)()()())(()\n''') == \"5 10\"\n\nassert solution('''\n12\n)))(()\n''') == \"4 5 10\"\n\nassert solution('''\n6\n)))(()\n''') == \"0 1 2\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"4\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"4\"\nassert solution(\"6\") == \"0\"\n\n\"\"\"\nimport sys\nimport re"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n(()())\") == \"1\"\nassert solution(\"5\\n((()))\") == \"3\"\nassert solution(\"6\\n(()())\") == \"0\"\nassert solution(\"6\\n(((())))\") == \"2\"\nassert solution(\"5\\n(()())\") == \"1\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5 10\"\nassert solution(\"12\") == \"4 5 10\"\nassert solution(\"6\") == \"0 1 2\""
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n\") == \"5\"\nassert solution(\"12\\n\") == \"4\"\nassert solution(\"6\\n\") == \"0\"\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n()()()()()''') == '5'\nassert solution('''12\n())()(()())()''') == '4'\nassert solution('''6\n)))(()''') == '0'\nassert solution('''12\n(()())()()''') == '5'\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__') == '2 6'\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('(LoooonG)__shOrt__(LoooonG)') == '5 2'\nassert solution('5') == '0 0'\nassert solution('5\\n5') == '0 0'"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"2 6\"\nassert solution(\"5\") == \"0 0\""
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2 6\"\nassert solution(\"27\") == \"2 6\"\nassert solution(\"5\") == \"0 0\"\nassert solution(\"27\") == \"0 0\"\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n(a)\") == \"2 0\"\nassert solution(\"1\\n(b)\") == \"2 1\"\nassert solution(\"1\\n(c)\") == \"2 2\"\nassert solution(\"1\\n(d)\") == \"2 3\"\nassert solution(\"1\\n(e)\") == \"2 4\"\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''_Hello_Vasya(and_Petya)__bye_(and_OK)''') == '5 4'\nassert solution('''_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__''') == '2 6'\nassert solution('''(LoooonG)__shOrt__(LoooonG)''') == '5 2'\nassert solution('''5''') == '0 0'\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"5 2\"\nassert solution(\"27\") == \"0 0\"\nassert solution(\"5\") == \"0 0\"\nassert solution(\"5\") == \"0 0\"\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"5 2\"\nassert solution(\"(___)\") == \"0 0\"\nassert solution(\"5\") == \"0 0\"\nassert solution(\"\") == \"0 0\"\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '5 2'\nassert solution('3') == '5 2'\nassert solution('4') == '5 2'\nassert solution('5') == '5 2'\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('(LoooonG)__shOrt__(LoooonG)') == '5 2'\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 3 4\n5 6 7\n''') == '4', solution('''\n4 3\n1 2 3 4\n5 6 7\n''')\nassert solution('''\n4 2\n1 2 3 4\n''') == '0', solution('''\n4 2\n1 2 3 4\n''')\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3\n12 10 20 20 25 30\n10 20 30''') == '2'\nassert solution('''4 2\n1 3 3 7\n3 7''') == '0'"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3') == '2'\nassert solution('4 2') == '0'\nassert solution('8 2') == '7'\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution(stdin='''\n6 3\n12 10 20 20 25 30\n10 20 30\n''') == '2'\nassert solution(stdin='''\n4 2\n1 3 3 7\n3 7\n''') == '0'\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 3\n12 10 20 20 25 30\n10 20 30\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 2\n1 3 3 7\n3 7\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n8 2\n1 2 2 2 2 2 2 2\n1 2\n\"\"\") == \"7\"\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2 2 2 2 2 2') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '2'\nassert solution
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '2'\nassert solution('4 2') == '0'\nassert solution('5 5') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"2\", \"Wrong answer\"\nassert solution(\"6 2\") == \"0\", \"Wrong answer\"\nassert solution(\"6 2\") == \"1\", \"Wrong answer\"\nassert solution(\"5 2\") == \"0\", \"Wrong answer\"\nassert solution(\"4 2\") == \"0\", \"Wrong answer\"\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3') == '2'\nassert solution('4 2') == '0'\nassert solution('8 2') == '7'\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2 3 4 5\n3 7''') == '2'\nassert solution('''4 2\n1 2 1 3''') == '1'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n\n\n\n\"\"\"\n\n\nfrom math import sqrt\n\nn, k = map(int, input().split())"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '0'\nassert solution('49 1808') == '359087121'\n\"\"\"\n\nn, k = map(int, input().split())\n\nrow, col = 1, 1\n\nl = set()\nl.add((row, col))"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\nassert solution('49 500 1808') == '359087121'\nassert solution('1000 10001') == '0'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 1\"\n) == \"0\"\nassert solution(\n    \"4 5\"\n) == \"6\"\nassert solution(\n    \"50 50\"\n) == \"359087121\"\n\"\"\"\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n\n\"\"\"\n\nimport math\n\nn, k = list(map(int, input().split()))\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"49 1808\") == \"359087121\""
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == 26, f\"{solution(s)}\"\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"21\"\nassert solution(\"2 1\") == \"24\"\nassert solution(\"3 1\") == \"30\"\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"26\"\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([[1, 9], [1, 7], [2, 6], [2, 5], [3, 1]]) == \"26\"\nassert solution([[2, 5], [1, 9], [2, 6], [3, 1], [3, 1], [3, 1]]) == \"21\"\nassert solution([[1, 9], [1, 7], [2, 6], [2, 5]]) == \"10\"\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"26\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"6 4\") == \"20\"\nassert solution(\"5 4\") == \"22\"\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == \"26\""
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1') == '26'\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '26'\nassert solution('1 3') == '1'\nassert solution('1 2 3') == '5'\nassert solution('4') == '0'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '26'\nassert solution('9 10') == '40'\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\") == \"26\"\nassert solution(\"5 5\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\") == \"28\"\nassert solution(\"4 4\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\") == \"16\"\nassert solution(\"10 10\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\") == \"41\"\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10.000000000000000000000000000000000000000000000000\"\nprint(solution())"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '10.000000000000000000000000000000000000000000000000'\nassert solution('5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3') == '10.000000000000000000000000000000000000000000000000'\n'''\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 10\n5 -5\n-5 -5\n''') == '10.000000000000000000000000000000000000000000000000'\nassert solution('''\n5\n0 10\n5 -5\n-5 -5\n-5 0\n0 -10\n''') == '10.000000000000000000000000000000000000000000000000'\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n0 10\n5 -5\n-5 -5\n''') == '10.000000000000000000000000000000000000000000000000'\n\n'''\nThe final distance from the origin can be 10 if we use the engines in one of the following three ways:\n - Use Engine 1 to move to (0, 10).\n - Use Engine 2 to move to (5, -5), and then use Engine 3 to move to (0, -10).\n - Use Engine 3 to move to (-5, -5), and then use Engine 2 to move to (0, -10).\nThe distance cannot be greater than 10, so the maximum possible distance is 10."
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '10.000000'\nassert solution('3') == '10.000000'\nassert solution('4') == '10.000000'\nassert solution('5') == '10.000000'\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 10\n5 -5\n-5 -5\n''') == \"10.000000000000000000000000000000000000000000000000\"\nassert solution('''2\n0 10\n0 1\n''') == \"10.0\"\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '10.000000000000000000000000000000000000000000000000'\nassert solution('1') == '10.000000000000000000000000000000000000000000000000'\nassert solution('2') == '10.000000000000000000000000000000000000000000000000'\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 10\n5 -5\n-5 -5\n''') == '10.000000000000000000000000000000000000000000000000'\nassert solution('''\n3\n0 10\n5 -5\n-5 -5\n''') == '10.000000000000000000000000000000000000000000000000'\n''')"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10.000000000000000000000000000000000000000000000000'\nassert solution('10') == '10.000000000000000000000000000000000000000000000000'\nassert solution('10.1') == '10.000000000000000000000000000000000000000000000000'\nassert solution('1') == '1.000000000000000000000000000000000000000000000000'\nassert solution('1.1') == '1.000000000000000000000000000000000000000000000000'\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"10.000000000000000000000000000000000000000000000000\"\nassert solution('4') == \"9.99999999999999931611853217688429980000\"\nassert solution('5') == \"10.000000000000000000000000000000000000000000000000\"\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12345678901234567890\") == \"1234\"\n\nassert solution(\"??012345678901234567890\") == \"1234\"\n\nassert solution(\"01?2345678901234567890\") == \"12345678\"\n\nassert solution(\"01?2345678901234567890\") == \"12345678\"\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1?AA') == '100'\nassert solution('2?AA') == '21'\nassert solution('1?AA?') == '1000'\nassert solution('1?AA??') == '100'\nassert solution('1?AA???') == '1001'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AJ') == '81'\nassert solution('1?AA') == '100'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789ABCDEFGH') == '11'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n ?JGJ9\n  ''') == '1'\nassert solution('''\n ?ABCDDBC\n  ''') == '4'\nassert solution('''\n ?0123\n  ''') == '1'\nassert solution('''\n  0123\n  ''') == '1'\nassert solution('''\n ?JGJ9\n  ''') == '1'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n?AA\n''') == '100'\nassert solution('''\n12345?\n''') == '3'\nassert solution('''\n?JGJ9\n''') == '100'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1?AA\n''') == '100'\nassert solution('''\n''') == '0'\nassert solution('''\n?AA\n''') == '0'"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1AJ') == '81'\nassert solution('1AJ') == '78'\nassert solution('1AJ') == '74'\nassert solution('1AJ') == '6'\nassert solution('1AA') == '8'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5?9') == 81\nassert solution('5?9') == 81\nassert solution('5?9') == 81"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '0'\nassert solution('10') == '3'\nassert solution('4') == '1'\n\nstdin = input()\nprint(solution(stdin))\n\n\nInput:\n5\n1 2 2 3 2 4\nOutput:\n0\n2 1 4 3 2\n\nInput:\n6\n1 5 2 3 5 4 3 4\nOutput:\n0\n4 5 1 5 2 3 4\n\nInput:\n5\n1 2 2 3 2 4\nOutput:\n3\n1 2 4 3 2"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 2 3') == '2'\nassert solution('6\\n4 5 6 3 2 1') == '0'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5') == '3'"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 2 2 3') == '2\\n1 2 4 3'\nassert solution('6\\n4 5 6 3 2 1') == '0\\n4 5 6 3 2 1'"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 2 2 3\n''') == '2'\nassert solution('''\n6\n4 5 6 3 2 1\n''') == '0'\nassert solution('''\n10\n6 8 4 6 7 1 6 3 4 5\n''') == '3'\n"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n4 5 6 3 2 1''') == '3'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '2'\nprint(solution('''Input\n4\n3 2 2 3\n\nOutput\n2\n1 2 4 3 \n\nInput\n6\n4 5 6 3 2 1\n\nOutput\n0\n4 5 6 3 2 1 \n\nInput\n10\n6 8 4 6 7 1 6 3 4 5\n\nOutput\n3\n2 8 4 6 7 1 9 3 10 5 \n\nInput\n4\n3 2 2 3\n\nOutput\n2\n1 2 4 3''') == '2'\nprint(solution('''Input\n10\n6 8 4 6 7 1 6 3 4 5\n\nOutput\n3\n2 8 4 6 7 1 9 3 10 5''') == '3')"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 2 2 3\n''') == '2'\nassert solution('''\n6\n4 5 6 3 2 1\n''') == '0'\nassert solution('''\n10\n6 8 4 6 7 1 6 3 4 5\n''') == '3'\n"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 2 2 3\") == \"2\"\nassert solution(\"6\\n4 5 6 3 2 1\") == \"3\"\n"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '2'\n"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '20'\nassert solution('6 5') == '35'\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n20 10 30 40 10') == '20'\nassert solution('6 5\\n90 20 35 40 60 100') == '35'\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"35\"\nassert solution(input()) == \"1 3 4 5 6\"\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n20 10 30 40 10\\n') == '20'\nassert solution('6 5\\n90 20 35 40 60 100\\n') == '35'"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n20 10 30 40 10\n''') == '20'\nassert solution('''6 5\n90 20 35 40 60 100\n''') == '35'\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '20'\nassert solution('6 5') == '35'"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"20\"\nassert solution(\"6 5\") == \"35\""
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '20'\nassert solution('6 5') == '35'"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5') == '35'\nassert solution('5 3') == '1 3 4 5 6'\n\nassert solution('15 10') == '15'\nassert solution('5 10') == '5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999\n\n'''\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '20'\nassert solution('6 5') == '35'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n5\n6''') == \"28\"\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == \"0\"\nassert solution('''3\n9\n10\n11''') == \"30\"\nassert solution('''100\n10000\n10001\n100002\n100003\n100004\n100005''') == \"110000\"\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '28'\n\n\n\n\n\"\"\""
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"6\") == \"28\"\nassert solution(\"2\") == \"0\"\n\n\n\"\"\""
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n\n''') == '8'\n\nassert solution('''6\n\n''') == '28'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8'\nassert solution('6') == '28'\nassert solution('2') == '0'\nassert solution('6') == '28'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '28'\nassert solution('4') == '8'\nassert solution('2') == '0'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '0'\nassert solution('4') == '8'\nassert solution('1') == '0'\nassert solution('10') == '22'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"28\"\nassert solution(\"6\") == \"28\"\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '8'\nassert solution('6') == '28'\nassert solution('2') == '0'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '8'\nassert solution('3') == '28'\nassert solution('4') == '8'\nassert solution('5') == '28'\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n2 3 1\\n\") == \"2\"\nassert solution(\"3 4\\n10 10 3\\n5 1 6\\n2 2 2\\n1 5 7\\n\") == \"1\"\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '1'\nassert solution('5 2 4') == '1'\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"10 10 3\") == \"1\"\nassert solution(\"5 1 6\") == \"2\""
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '1'\n\nprint(solution(input))"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 3\n2 3 1\n1 2 1\n''') == '2'\n\nassert solution('''\n3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7\n''') == '1'\n\nassert solution('''\n3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7\n''') == '2'\n\nassert solution('''\n4 3\n2 1 2\n1 2 2\n4 4 1\n5 5 3\n''') == '3'\n\nassert solution('''\n3 3\n1 2 3\n2 3 1\n1 2 1\n''') == '2'"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '1'\n\nstdin = \"\"\"\n3 3\n1 2 3\n2 3 1\n1 2 1\n\n3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7\n\n4 6\n7 9 1\n8 2 5\n4 3 2\n5 6 2\n3 8 7\n\n5 7\n1 2 3 5 6\n3 2 4 1 6\n2 1 6 4 3\n2 4 5 3 1\n2 5 6 1 3\n\n3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7\n\n5 6\n1 2 3 5 6\n3 2 4 1 6\n2 1 6 4 3\n2 4 5 3 1\n2 5 6 1 3\n\"\"\"\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2 3\n2 3 1\n1 2 1\n''') == '2'\n\nassert solution('''\n3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7\n''') == '1'\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 1\") == \"-\""
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 2\n8 9 6 10 7 11\n''') == '5'\nassert solution('''\n4 1\n3 4 5\n6\n''') == '-1'\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"4\", \"3 2\"\nassert solution(\"5 1\") == \"5\", \"5 1\"\nassert solution(\"6\") == \"\", \"6\"\nassert solution(\"1\") == \"\", \"1\""
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"3 2\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\n3 5\n2 3''') == \"4\"\nassert solution('''1 1\n1 1\n1 1\n1 1''') == \"1\"\nassert solution('''2 1\n3 2\n1 3\n1 2''') == \"3\"\nassert solution('''5 3\n3 6\n1 4\n1 3\n1 5\n1 1\n3 1\n1 2\n2 3\n1 3''') == \"6\"\nassert solution('''3 3\n3 7\n4 8\n6 9\n1 2\n2 3\n2 4\n1 4''') == \"4\"\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\nassert solution() == '-1'"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 1') == '-1'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"3 3\") == \"2\""
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 2\n8 9 6 10 7 11\n''') == '5'\nassert solution('''\n3 1\n3 4 5\n6\n''') == '-1'\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n4 5 2\") == \"5\"\nassert solution(\"3 1\\n3 4 5\") == \"-1\"\nassert solution(\"3 10\\n1 2 5 4 6 9\") == \"10\"\nassert solution(\"1 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2016''') == '2044'\nassert solution('''2000''') == '2028'\nassert solution('''50501''') == '50507'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2044\"\nassert solution() == \"50507\"\nassert solution() == \"50508\"\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2016''') == '2044'\nassert solution('''2000''') == '2028'\nassert solution('''50501''') == '50507'\nassert solution('''10001''') == '10012'\nassert solution('''103001''') == '103003'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2016\") == \"2044\"\nassert solution(\"2000\") == \"2028\"\nassert solution(\"50501\") == \"50507\"\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(\"sample.in\", \"r\").read()) == \"2044\"\nassert solution(open(\"real.in\", \"r\").read()) == \"50507\"\nassert solution(open(\"input.in\", \"r\").read()) == \"2028\"\n\"\"\"\nfrom math import ceil"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2044'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2016\n''') == '2044'\nassert solution('''2000\n''') == '2028'\nassert solution('''50501\n''') == '50507'\nassert solution('''1\n''') == '2'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"2044\"\n'''"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1900:01:01\\n2038:12:31\") == \"50768\"\nassert solution(\"1996:03:09\\n1991:11:12\") == \"1579\"\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1900:01:01\\n2038:12:31\") == \"50768\"\nassert solution(\"1996:03:09\\n1991:11:12\") == \"1579\""
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1900:01:01') == '50768'\nassert solution('2038:12:31') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1900:01:01') == '50768'\nassert solution('2038:12:31') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    1900:01:01\n    2038:12:31\n''') == '50768'\nassert solution('''\n    1996:03:09\n    1991:11:12\n''') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1900:01:01\\n2038:12:31') == '50768'\nassert solution('1996:03:09\\n1991:11:12') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1900:01:01\n2038:12:31''') == '50768'\nassert solution('''1996:03:09\n1991:11:12''') == '1579'\nassert solution('''2019:12:31\n2021:02:29''') == '2118'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"50768\"\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1900:01:01\\n2038:12:31\\n') == '50768'\nassert solution('1996:03:09\\n1991:11:12\\n') == '1579'"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1900:01:01\\n2038:12:31\") == \"50768\"\nassert solution(\"1996:03:09\\n1991:11:12\") == \"1579\"\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution() == '4'\nassert solution() == '4'\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 2 0 1\") == \"0\"\nassert solution(\"5 2 0 1 2\") == \"1\"\nassert solution(\"5 2 0 1 2 2\") == \"2\"\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 2\\n1 3\\n1 4\\n3 5\\n3 6\\n3 7\\n2 7\\n\") == \"2\"\nassert solution(\"6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6\\n\") == \"4\"\nassert solution(\"15 15\\n1 2\\n2 3\\n2 4\\n3 5\\n3 6\\n3 7\\n5 5\\n5 6\\n5 7\\n6 6\\n6 7\\n7 7\\n7 8\\n8 8\\n8 9\\n9 9\\n9 10\\n10 10\\n10 11\\n11 11\\n11 12\\n12 12\\n12 13\\n13 13\\n13 14\\n14 14\\n14 15\\n15 15\\n\") == \"15\"\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '2'\nassert solution('6 4') == '4'\nassert solution('7 1') == '1'"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 4\n3 4 5\n4 5 6\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n8 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 6\n2 7\n4 8\n4 9\n5 10\n5 11\n6 12\n6 13\n6 14\n7 14\n7 15\n7 16\n6 17\n6 18\n6 19\n\n\"\"\") == \"17\"\nassert solution(\"\"\"\n4 6\n1 2\n2 3\n2 4\n3 5\n3 6\n\n\"\"\") == \"6\""
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n3 5\\n3 6\\n3 7\\n2 7') == '2'\nassert solution('6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6') == '4'"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2\\n1 3\\n1 4\\n3 5\\n3 6\\n3 7\\n2 7\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '2'\nassert solution('6 4') == '4'"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n1 3\\n\") == \"2\\n3\"\nassert solution(\"6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6\\n\") == \"4\\n5\"\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2') == '2'\nassert solution('6 4') == '4'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '5'\nassert solution('3 2 1 5') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 5\n1 3 4\n1 2 5\n5 6 1\n1 2 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 2\n4 6 3\n2 4 1\n3 5 4\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 2\n4 6 3\n2 4 1\n3 5 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '5'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"4 2\") == \"-1\"\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '5'\nassert solution('3 2') == '-1'\nassert solution('3 0') == '-1'\nassert solution('5 4') == '4'\nassert solution('5 2') == '3'\n\n\"\"\""
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == '5'\nassert solution(\"3 2\") == '-1'\n\nstdin = \"\"\"\n3 2\n1 3 4\n1 2 5\n5 6 1\n1 2 4\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == '5'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\nassert solution('3 2') == '-1'\nassert solution('4 2') == '5'"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5') == '5'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == '5'\nassert solution(\"4 5\") == '5'"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\""
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('revive') =='reviver'\nassert solution('ee') == 'eye'\nassert solution('kitayuta') == 'NA'"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"NA\"\nprint(solution(input))\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"kitayuta\") == \"NA\"\nassert solution(\"ee\") == \"eye\"\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('revive') =='reviver'\nassert solution('ee') == 'eye'\nassert solution('kitayuta') == 'NA'"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\""
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 9\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('101') == '2'\nassert solution('99') == '1'\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4') == '1'\nassert solution('101\\n99') == '2'\nassert solution('5\\n10') == '9'"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('101') == '2'\nassert solution('99') == '1'\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('101') == '2'\nassert solution('99') == '2'\nassert solution('5') == '9'\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('10') == '9'"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10') == '9'\nassert solution('101\\n99') == '2'\nassert solution('3\\n5') == '9'\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('101') == '2'\nassert solution('5') == '9'"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 4]) == \"1\"\nassert solution([101, 99]) == \"2\"\nassert solution([5, 10]) == \"9\"\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n1\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '20'\nassert solution('''\n1\n5 2\n5 5\n3 6\n5 5\n1 19\n1 3\n19 5\n''') == '3'\n''')"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n3\n30 25\n5 10\n7 20\n10 10\n5 5\n1 21\n1 3\n19 5\n''') == '20'"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n5 1\n4 5\n4 1\n5 5\n''') == '10'\n\n'''\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5 10\n1 6\n''') == '11'\nassert solution('''\n2\n3 4\n2 1\n''') == '6'\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n1\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '20'\nassert solution('''\n2\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '3'\n'''\n\nstdin = '''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n'''"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n1\n5 5\n1 5\n2 1\n5 2\n''') == '6'\nassert solution('''\n1\n1 5\n1 5\n2 1\n2 1\n''') == '3'\nassert solution('''\n1\n2 2\n1 1\n2 1\n''') == '2'\nassert solution('''\n4\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '20'\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"11\"\nassert solution(\"4\") == \"10\"\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n1\n1 2\n1 5\n1 7\n''') == '0'\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 4\n3 5\n6 7\n''') == '18'\nassert solution('''\n3 6\n1 2\n2 3\n3 4\n3 5\n6 7\n''') == '7'\nassert solution('''\n3 10\n2 6\n4 6\n4 6\n2 5\n1 6\n2 5\n''') == '11'\nassert solution('''\n13 10\n9 8\n5 8\n4 7\n1 5\n1 5\n2 5\n2 5\n2 5\n2 5\n2 5\n''') == '9'\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n3\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''\n3\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''\n3\n0 0\n0 0\n0 0\n''') == '0'"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Adams\""
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"A\"\nassert solution('2') == \"M\"\nassert solution('3') == \"B\"\nassert solution('4') == \"C\"\nassert solution('5') == \"D\"\n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Adams\"\n\n\n\n\n\"\"\"\nimport sys"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(list(map(int, stdin.split()))) == 'Adams'"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Adams'\nassert solution('8') == 'Van Buren'\nassert solution('29') == 'Harding'\n'''\n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == None\nassert solution(\"\") == \"\"\nassert solution(\"3\") == \"Adams\"\nassert solution(\"2\") == \"Van Buren\"\nassert solution(\"11\") == \"Harding\"\n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Adams'\n>>> \n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Adams'\nassert solution('8') == 'Van Buren'\n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Adams'\nassert solution('2') == 'Van Buren'\n\"\"\"\n\nimport math"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 6 9\n\"\"\") == \"6\", \"First example\"\n\nassert solution(\n\"\"\"\n4 4 4\n\"\"\") == \"4\", \"Second example\""
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 6 9\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n4 4 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n0 0 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 6 9''') == '6'\nassert solution('''4 4 4''') == '4'\nassert solution('''0 0 0''') == '0'"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6 9\n''') == '6'\nassert solution('''4 4 4\n''') == '4'\nassert solution('''0 0 0\n''') == '0'\nassert solution('''0 0 0 0\n''') == '0'\nassert solution('''0 0 0 0 0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 6 9\n\n\"\"\") == \"6\"\n\nassert solution(\"\"\"4 4 4\n\n\"\"\") == \"4\"\"\"\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 6 9\"\n    ) == \"6\"\n\nassert solution(\n    \"4 4 4\"\n    ) == \"4\"\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6 9\n\n''') == '6'\n\nassert solution('''4 4 4\n\n''') == '4'\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n2 0 -1\\n\") == \"2\"\nassert solution(\"4\\n5 -6 -5 1\\n\") == \"4\""
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '1'\nassert solution('''3\n2 0 -1\n''') == '2'\nassert solution('''4\n5 -6 -5 1\n''') == '4'\nprint('Congratulations, have a nice day!')\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1'\nassert solution('3\\n2 0 -1') == '2'\nassert solution('4\\n5 -6 -5 1') == '4'"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('3\\n2 0 -1\\n') == '2'\nassert solution('4\\n5 -6 -5 1\\n') == '4'"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '1'\nassert solution('''3\n2 0 -1\n''') == '2'\nassert solution('''4\n5 -6 -5 1\n''') == '4'\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n2 0 -1\\n\") == \"2\"\nassert solution(\"4\\n5 -6 -5 1\\n\") == \"4\""
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1\\n'\nassert solution('3\\n2 0 -1\\n') == '2\\n'\nassert solution('4\\n5 -6 -5 1\\n') == '4\\n'"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"500 1000 20 30\") == \"Vasya\"\nassert solution(\"1000 1000 1 1\") == \"Tie\"\nassert solution(\"1500 1000 176 177\") == \"Misha\"\nprint(solution(input()))"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('500 1000 20 30') == 'Misha'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000 1000 1 1\") == \"Vasya\"\nassert solution(\"1500 1000 176 177\") == \"Misha\"\n\nstdin = '500 1000 20 30'\nstdout = \"Vasya\"\n\nwith open('out.txt', 'w') as fout:\n    fout.write(stdout)\n\n\nstdin = '1000 1000 1 1'\nstdout = \"Tie\"\n\nwith open('out.txt', 'w') as fout:\n    fout.write(stdout)\n\n\nstdin = '1500 1000 176 177'\nstdout = \"Misha\"\n\nwith open('out.txt', 'w') as fout:\n    fout.write(stdout)\n\n\nstdin = '12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('500 1000 20 30') == 'Vasya'\nassert solution('1000 1000 1 1') == 'Misha'\nassert solution('1500 1000 176 177') == 'Tie'\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('500 1000 20 30') == 'Misha'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'\n\nprint('Code by AC')\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('500 1000 20 30') == 'Misha'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n100\\n20\\n30') == 'Misha'\nassert solution('500\\n1000\\n20\\n30') == 'Vasya'\nassert solution('1500\\n1000\\n176\\n177') == 'Tie'\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n500 1000 20 30\n''') == \"Vasya\"\nassert solution('''\n1000 1000 1 1\n''') == \"Tie\"\nassert solution('''\n1500 1000 176 177\n''') == \"Misha\"\n\n'''\nMisha and Vasya have both submitted the problems for 2 minutes after the contest started. The problem c minutes after the contest started costs a points of 3 points. The problem d minutes after the contest started costs a points of b points. \n'''"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"500 1000 20 30\") == \"Misha\"\nassert solution(\"1000 1000 1 1\") == \"Tie\"\nassert solution(\"1500 1000 176 177\") == \"Misha\""
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\nassert solution('1000000000 3 1 5 1') == '3.0 3.0 3.0'\nassert solution('1000000000 -3 1 5 1') == '1.0 2.0 2.0'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 1 1\") == \"3.7677669529663684 3.7677669529663684 3.914213562373095\"\nassert solution(\"10 5 5 5 15\") == \"5.0 5.0 10.0\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 1 1\") == \"3.7677669529663684 3.7677669529663684 3.914213562373095\"\nassert solution(\"10 5 5 5 15\") == \"5.0 5.0 10.0\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3 1 1\") == \"3.7677669529663684 3.7677669529663684 3.914213562373095\"\nassert solution(\"10 5 5 5 15\") == \"5.0 5.0 10.0\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3 1 1\") == \"3.7677669529663684 3.7677669529663684 3.914213562373095\"\nassert solution(\"10 5 5 5 15\") == \"5.0 5.0 10.0\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 3 1 1''') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('''10 5 5 5 15''') == '5.0 5.0 10.0'\nassert solution('''3 3 10 5 0''') == '3.0 3.0 10.0'"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 3 3 1 1'\n) == '3.7677669529663684 3.7677669529663684 3.914213562373095'"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 3 1 1\n''') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('''\n10 5 5 5 15\n''') == '5.0 5.0 10.0'\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 1 1\") == \"3.7677669529663684 3.7677669529663684 3.914213562373095\"\nassert solution(\"10 5 5 5 15\") == \"5.0 5.0 10.0\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\nassert solution('1 10 10 1 1') == '1.0 1.0 10.0'\nassert solution('100 100 100 1 1') == '100.0 100.0 100.0'\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 993244853\") == \"1\"\nassert solution(\"2 993244853\") == \"6\"\nassert solution(\"3 993244853\") == \"32\"\nassert solution(\"2019 993244853\") == \"923958830\"\nassert solution(\"2020 437122297\") == \"265955509\"\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 993244853\") == \"6\"\nassert solution(\"3 993244853\") == \"32\"\nassert solution(\"2019 993244853\") == \"923958830\"\nassert solution(\"2020 437122297\") == \"265955509\"\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 993244853''') == '1'\nassert solution('''2 993244853''') == '6'\nassert solution('''3 993244853''') == '32'\nassert solution('''2019 993244853''') == '923958830'\nassert solution('''2020 437122297''') == '265955509'\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"32\"\n\"\"\"\n\nn, m = map(int, input().split())"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 993244853\") == \"32\"\nassert solution(\"2020 437122297\") == \"923958830\""
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == 2\nassert solution(\"14\") == 3"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"14\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\n\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    if l[i] >= 3:\n        cnt += 1\n\nprint(cnt)"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '2'\n\n\n\n---\nfrom collections import Counter\nn = int(input())"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2', '\u043d\u0435 \u0432\u0435\u0440\u043d\u043e'\nassert solution('14') == '3', '\u043d\u0435 \u0432\u0435\u0440\u043d\u043e'\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u0430\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043f\u043e\u0434\u0430\u0440\u043a\u0438 \u0441 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 - \u0447\u0435\u0442\u0432\u0451\u0440\u043a\u0438, \u043f\u044f\u0442\u0451\u0440\u043a\u0438 \u0438 \u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445.\n"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 5 4 5 4 4\n''') == '2'\n\nassert solution('''\n5\n5 5 4 4 4 5\n''') == '2'\n\nassert solution('''\n1\n3 4 4 3 2\n''') == '2'\n"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('14') == '3'"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"14\") == \"3\"\n\n\u0412 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u0430\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043f\u043e\u0434\u0430\u0440\u043a\u0438 \u0437\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0438 \u0437\u0430 \u043a\u0440\u0430\u0439\u043d\u0438\u0435 \u0434\u0432\u0435 \u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a. \n\u041e\u0446\u0435\u043d\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043a\u0430\u043a \u0441\u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0438\u043b\u0438 \u043a\u0430\u043a \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430. \n\u0422\u0430\u043a \u0447\u0442\u043e \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0438\u043c\u0435\u0435\u043c \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043e\u0431\u0449\u0430\u0442\u044c\u0441\u044f \u0441 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c.\n\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u0430\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043f\u043e\u0434\u0430\u0440\u043a\u0438 \u0437\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0438 \u0437\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0438 \u0434\u0432\u0430 \u043f\u043e\u0434\u0430\u0440\u043a\u0430 \u0434\u043b\u044f \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f. \n\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u043e\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u0440"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 5 4 5 4 4\\n') == '2'\nassert solution('6\\n1 5 4 5 2 4 4 5 5 4 3 4 5 5\\n') == '3'\n"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"4 5 4 5 4 4\") == \"3\"\nassert solution(\"14\") == \"3\"\n\"\"\"\n\nn = int(input())\nscores = input().split()\n\ntotal = 0\n\nfor i in range(len(scores)):\n    if scores[i] == '5':\n        total += 2\n    elif scores[i] == '4':\n        total += 3\n    elif scores[i] == '3':\n        total += 4\n    elif scores[i] == '2':\n        total += 5\n\nprint(total)"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\""
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nxooox\") == \"YES\"\nassert solution(\"3\\nwsw\") == \"YES\"\nassert solution(\"3\\nxpx\") == \"NO\""
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'NO'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nxooox\noxoxo\nsoxoo\noxoxo\nxooox\n\n''') == 'NO'\nassert solution('''\n3\nxpx\npxp\nxpe\n\n''') == 'YES'\nassert solution('''\n3\nwsw\nsws\nwsw\n\n''') == 'NO'"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"NO\", \"5\"\nassert solution(\"3\") == \"YES\", \"3\"\nassert solution(\"3\") == \"NO\", \"3\"\nassert solution(\"5\") == \"YES\", \"5\"\n"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"NO\""
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nxooox\noxoxo\nsoxoo\noxoxo\nxooox\n''') == 'NO'\nassert solution('''\n3\nwsw\nsws\nwsw\n''') == 'YES'\n'''\n"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2 1'\nassert solution('2 4') == '3 2'"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"2 1\"\nassert solution(\"2 4\") == \"3 2\""
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '2 1'\nassert solution('3 2') == '3 2'\nassert solution('5 1') == '1 1'\nassert solution('5 5') == '3 3'\nassert solution('100 4') == '1 1'\n"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n''') == '2 1'\nassert solution('''3 1\n''') == '3 2'"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1\n''') == '2 1'\nassert solution('''2 4\n''') == '3 2'\n"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '2 1'\nassert solution('''3 4''') == '3 2'\n"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n''') == '2 1'\nassert solution('''2 4\n''') == '3 2'"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n''') == '2 1'\nassert solution('''2 4\n''') == '3 2'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '7.000000000000000'"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 3\n0 2\n0 -4\n\"\"\") == \"2.500000000000000\"\nassert solution(\"\"\"\n5\n-1 3\n0 0\n-1 -4\n\"\"\") == \"7.000000000000000\"\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-2.500000000000000'"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"-2.5\"\nassert solution(\"3 2\") == \"7.0\"\nprint(solution(input()))"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '-2.500000000000000'\nassert solution('3 2') == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5\\n-1 -3\\n0 0\\n-1 -4') == '-2.500000000000000'\nassert solution('5 10\\n5 2\\n0 2\\n0 5\\n0 2') == '16.500000000000000'"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '-2.500000000000000'\nassert solution(stdin) == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '7.000000000000000'\nassert solution('0 2') == '2.00000000000000'\nassert solution('-1 -4') == '-2.00000000000000'\nassert solution('-1 -4 0') == '-2.00000000000000'\nassert solution('-1 -4 5') == '-2.00000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '-2.500000000000000'\nassert solution('3 2') == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0.5\"\nassert solution(\"2 3\") == \"-1.3333333333333333\"\nassert solution(\"1 1\") == \"0.5\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"NO\"\nassert solution(\"5 5 3\") == \"YES\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5 3\n2 6 10 5 9\n''') == 'YES'\n\nassert solution('''\n5 5 3\n7 14 2 9 5\n''') == 'NO'\n\nassert solution('''\n5 3 1\n1 2\n''') == 'YES'\n\nassert solution('''\n5 3 1\n1 2 3 5\n''') == 'NO'\n\nassert solution('''\n5 5 3\n1 2 3 4 5\n''') == 'NO'\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 5 3\"\n    \"2 6 10 5 9\"\n    ) == \"YES\"\n\nassert solution(\n    \"5 5 3\"\n    \"7 14 2 9 5\"\n    ) == \"NO\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 3 1\") == \"YES\"\nassert solution(\"5 5 3\") == \"NO\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 3') == 'YES\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2'\nassert solution('5 5 3') == 'NO'\nassert solution('5 3 1') == 'YES\\n3 5 1 3'\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"NO\""
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 1\n1 2 3 7 5\n''') == 'YES'\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(input) == \"YES\"\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 3\") == \"YES\"\nassert solution(\"5 5 3\") == \"NO\"\nassert solution(\"5 5 3\") == \"NO\"\nassert solution(\"5 5 3\") == \"NO\"\nassert solution(\"5 5 3\") == \"NO\"\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 3\") == \"1\"\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 2''') == '2'\nassert solution('''2 3 3''') == '1'\n\n\"\"\"\n\nt, a, b = list(map(int, stdin.split()))\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == \"inf\"\nassert solution(\"2 3 3\") == \"1\"\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == 'inf'\nassert solution('2 3 3') == '1'\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2 2\"\n) == \"2\"\nassert solution(\n    \"2 3 3\"\n) == \"1\"\nassert solution(\n    \"3 3 3\"\n) == \"1\"\nassert solution(\n    \"0 1 1\"\n) == \"inf\"\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"inf\"\nassert solution(\"2 3 3\") == \"1\""
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 3\") == \"1\"\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 3\") == \"1\""
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('2 3 3') == '1'\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 3\") == \"1\"\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n2 1\n''') == '0'\nassert solution('''\n2 2\n1 3\n2 2\n''') == '3'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"4 3\") == \"10\"\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2 2\n    1 3\n    ''') == '3'\nassert solution('''\n    2 2\n    1 3\n    ''') == '3'\nassert solution('''\n    4 3\n    3 10\n    2 7\n    2 8\n    1 1\n    ''') == '10'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n2 1\n''') == '0'\nassert solution('''2 2\n1 3\n2 2\n''') == '3'\nassert solution('''4 3\n3 10\n2 7\n2 8\n1 1\n''') == '10'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 2 4 1 2\\n') == '2'\nassert solution('2\\n3 5 4 1 2\\n') == '4'\nassert solution('3\\n3 4 5 1 2\\n') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3 2 4 1 2') == '2'"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"2\"\n\n----\nn = int(input())\ns = sorted(map(int, input().split()))\np = s[::2]\nq = s[1::2]\nr = sorted(map(int, input().split()))\ns = sorted(map(int, input().split()))\n\nresult = 0\nfor p_max in p:\n    for q_max in q:\n        for r_max in r:\n            max_val = max(p_max, q_max, r_max)\n            min_val = min(p_max, q_max, r_max)\n            if abs(max_val - min_val) < result:\n                result = abs(max_val - min_val)\nprint(result)\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n0 5 0 5 1') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 4 1 2\\n') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 4 1 2\") == \"2\""
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 4 1 2\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"3\\n4 1 5 3 2\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n10 1\\n1\") == \"25\"\nassert solution(\"2 3\\n15 1\\n2\") == \"25\"\nassert solution(\"2 3\\n30 2\\n1 2\") == \"25\"\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2\n''') == '25', \"Wrong!\"\nassert solution('''2 2\n10 1\n1\n30 2\n1 2\n''') == '-1', \"Wrong!\"\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n10 1\\n15 1\\n2\\n30 2\\n1 2') == '25'\nassert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2') == '-1'\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '25'\nassert solution('10 1') == '25'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '25'\nassert solution(input(\"\")) == '-1'\nassert solution(input(\"12\")) == '-1'"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3]) == \"25\"\nassert solution([10, 1]) == \"25\"\nassert solution([15, 1]) == \"25\"\nassert solution([2, 30, 1, 2]) == \"25\"\nassert solution([30, 2]) == \"25\"\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 3') == '25'\nassert solution('10 1') == '26'\nassert solution('1') == '26'\nassert solution('15 1') == '26'\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2\\n\") == \"25\""
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 3]) == '25'\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3+5*7+8*4') == '303'\nassert solution(\n    '2+3*5') == '25'\nassert solution(\n    '3*4*5') == '60'\n\nprint(solution(\n    '3+5*7+8*4'))\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3+5*7+8*4''') == '303'\nassert solution('''2+3*5''') == '25'\nassert solution('''3*4*5''') == '60'\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3+5*7+8*4''') == '303'\nassert solution('''2+3*5''') == '25'\nassert solution('''3*4*5''') == '60'\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\""
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\""
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('|ABC') == 'XYZ|ABC'\nassert solution('W|T') == 'Impossible'\nassert solution('ABC|') == 'XYZ|ABC'\nassert solution('|ABC') == 'XYZ|ABC'\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"ABC|\") == \"XYZ|ABC\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('|ABC') == 'XYZ|ABC'\nassert solution('W|T') == 'Impossible'\nassert solution('|ABC') == 'XYZ|ABC'\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"|T\") == \"|T\"\nassert solution(\"W|T\") == \"W|T\"\nassert solution(\"|T\") == \"Impossible\"\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('|ABC') == 'XYZ|ABC'\nassert solution('W|T') == 'Impossible'\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"ABC|\") == \"XYZ|ABC\"\n\n##"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"ABC|\") == \"Impossible\"\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('|ABC') == 'XYZ|ABC'\nassert solution('W|T') == 'Impossible'\nassert solution('ABC|') == 'XYZ|ABC'"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"|ABC\") == \"Impossible\"\nassert solution(\"W|T\") == \"Impossible\"\n\n'''\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"Impossible\""
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3\") == \"3 1\"\nassert solution(\"6 8 2\") == \"7 0\""
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 3''') == '3 1'\nassert solution('''6 8 2''') == '7 0'\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\nassert solution('7 0') == '0 0'"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\") == \"3 1\"\nassert solution(\"6 8 2\") == \"7 0\""
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\nassert solution('4 3') == '3 1'\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n') == '3\\n1 -1\\n-1 1\\n'\n\"\"\"\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0\\n1 0\\n0 1\\n\") == \"3 1 -1 1 1\"\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n1 0\n0 1\n''') == '3\\n1 -1\\n-1 1\\n1 1\\n'''\n\nprint(solution(input()))"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 0\\n2 0\\n0 1\") == \"3 -1\\n-1 1\\n1 1\"\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\") == \"3\\n1 -1\\n-1 1\\n1 1\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0\n1 0\n0 1\n''') == \"3\"\nassert solution('''\n1 1\n-1 1\n0 -1\n''') == \"4\"\n'''"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 0\n1 0\n0 1\n''') == '3 1 -1'\nassert solution('''\n0 0\n0 1\n1 0\n''') == '2 1 1 -1'\nassert solution('''\n0 0\n0 1\n0 -1\n''') == '2 1 2 1 -1'\nassert solution('''\n0 0\n1 0\n1 1\n''') == '1 1 -1 -1'\n'''\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0\n1 0\n0 1\n''') == '3'\n\nassert solution('''\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == '0'\n\nassert solution('''\n0 0\n0 2\n0 3\n1 1\n2 1\n2 2\n''') == '0'\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '3\\n1 -1\\n-1 1'\nprint(solution('''0 0\n1 0\n0 1'''))\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '6'\nassert solution('5') == '5'\nassert solution('1') == '1'\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    10\n    0 1 2 -1 -1 3 4 -1 5 6 -1 7 8 -1 9\n    ''') == '3'\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '3'\nassert solution('5') == '5'"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 -1 100 -1 0\n''') == '1\nassert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6\n''') == '3\nassert solution('''5\n0 -1 100 -1 0\n''') == '5'''\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n0 -1 100 -1 0\n\n''') == '5'\nassert solution('''\n3\n1 2 3 -4 -5 | -6 5 -5 | -6 -7 6 \n\n''') == '5'\n'''\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\\n4 3 3 \nInput\n11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6\n\nOutput\n3\n5 3 3 \nInput\n5\n0 -1 100 -1 0\n\nOutput\n1\n5 \n\"\"\"\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\n\nstdin = \"\"\"3\n1 2 3 -4 -5 -6 5 -5 -6 -7 6\n\"\"\"\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('11') == '3'\nassert solution('5') == '1'\n\"\"\"\n\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(__file__))\n\nfrom utils.file_utils import read_str_input\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 8\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4 8\n\"\"\") == \"4\"\nassert solution(\"\"\"\n100\n\"\"\") == \"99\"\nassert solution(\"\"\"\n999999\n\"\"\") == \"99999\"\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 8\") == \"4\"\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n1\n3\n1\n2\n3\n1\n2\n1\n2''') == '2'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 8\") == \"4\"\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 5\n\n\"\"\") == \"6\"\n\nassert solution(\"\"\"4 4\n\n\"\"\") == \"5\"\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'\nassert solution('3 3') == '3'\nassert solution('2 5') == '1'"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"6\"\nassert solution(\"4 4\") == \"5\""
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'\nassert solution('5 2') == '1'\n\nfrom itertools import combinations"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n') == '6'\nassert solution('4 4\\n') == '5'\nassert solution('1 1\\n') == '2'\nassert solution('1 0\\n') == '1'\nassert solution('0 1\\n') == '1'\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '6'\nassert solution('2 4') == '5'"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 6') == '11.0'\nassert solution('4 2 6') == '5.0'"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 4 6\n4 7\n''') == '11.00000000000000000000'\nassert solution('''4 2 6\n1 3 2 3\n''') == '5.00000000000000000000'"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 6\n4 7\n''') == '11.00000000000000000000'\nassert solution('''5 2 6\n1 3 2 3\n''') == '5.00000000000000000000'\nassert solution('''5 4 6\n1 3 2 3\n''') == '5.00000000000000000000'\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2 6\n1 3 2 3\n''') == '5.00000000000000000000'\nassert solution('''\n4 2 6\n4 5 2 3\n''') == '7.0000000000000000030000'\n\nprint(solution(open(0)))\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4 6\n4 7\n''') == \"11.00000000000000000000\"\nassert solution('''2 2 6\n1 3 2 3\n''') == \"5.00000000000000000000\"\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 6\n1 3 2 3''') == '11.00000000000000000000'\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([10, 20, 30, 40]) == 70\nassert solution([10, 10, 20, 40]) == 80\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"11.00000000000000000000\"\nassert solution(\"4 2 6\") == \"5.00000000000000000000\""
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 6\n1 3 2 3\n''') == '5.00000000000000000000'"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4 6\n4 7\n\n''') == \"11.00000000000000000000\"\nassert solution('''4 2 6\n1 3 2 3\n\n''') == \"5.00000000000000000000\"\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(4) == 2\nassert solution(5) == -3\nprint(solution(10))\n\n\"\"\""
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n\n''') == '2'\nassert solution('''5\n\n''') == '-3'\nassert solution('''6\n\n''') == '-2'\nassert solution('''9\n\n''') == '-4'\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n5\n\"\"\"\n) == \"-3\"\nassert solution(\n\"\"\"\n1000000000000\n\"\"\"\n) == \"8989898988899\""
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4]) == \"2\"\nassert solution([5]) == \"-3\"\n\nimport json\nimport os\nimport sys"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(4) == 2\nassert solution(5) == -3\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INP) == OUT\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n3 1 4 0\n''') == '2'\nassert solution('''7\n1 2 1 3 1 2\n''') == '3'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\""
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('7') == '6'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('7') == '3'\nassert solution('10') == '6'\n\n\n'''\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 3 4 5 1\n''') == '3'\nassert solution('''\n7\n0 3 1 0 5 2 6\n''') == '2'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('7') == '6'"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 2 0\n''') == '1'\nassert solution('''5\n4 2 3 0 1\n''') == '3'\nassert solution('''7\n0 3 1 0 5 2 6\n''') == '3'\n\n\n'''\n\nfrom collections import deque"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('8') == '4'\nassert solution('10') == '4'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\"\n    \"0 2 0\"\n    ) == \"1\"\n\nassert solution(\n    \"5\\n\"\n    \"4 2 3 0 1\"\n    ) == \"3\"\n\nassert solution(\n    \"7\\n\"\n    \"0 3 1 0 5 2 6\"\n    ) == \"2\"\n\nassert solution(\n    \"15\\n\"\n    \"1 5 3 2 0 6 4 7 8 9 10 10 9 8 7 6 5 4 3 2 1\"\n    ) == \"3\""
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"aa\"\nassert solution(\"5\") == \"abca\"\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"aa\"\nassert solution(\"5\") == \"abca\"\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"abca\"\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nabcda\") == \"abcd\"\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\naaa\n''') == \"aa\"\nassert solution('''\n3\naaa\n''') == \"aaa\"\nassert solution('''\n5\nabcda\n''') == \"abcda\"\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n'''\n) == 'abca'\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\naaa\n\n''') == 'aa'\n\nassert solution('''\n5\nabcda\n\n''') == 'abca'"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\naaa''') == 'aa'\nassert solution('''5\nabcda''') == 'abca'"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'aa'\nassert solution('5') == 'abca'\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\naaa''') == 'aa'\nassert solution('''5\nabcda''') == 'abca'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1 1\n2 2 2\n3 3 3\n''') == \"27\"\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''\n7 3\n3 14 15 92 65 35 89\n''') == '64'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"24\"\nassert solution(\"7 3\") == \"64\"\n\n\n\"\"\"\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == '24'\nassert solution('7 3') == '64'"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''7 3\n3 14 15 92 65 35 89\n''') == '64'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''\n7 3\n3 14 15 92 65 35 89\n''') == '64'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\n\nassert solution('''\n7 3\n3 14 15 92 65 35 89\n''') == '64'\n\nassert solution('''\n10 4\n9 1 7 13 15 29 2 31\n''') == '48'\n\nassert solution('''\n10 4\n9 1 7 13 15 29 2 31\n''') == '48'\n\nassert solution('''\n10 4\n9 1 7 13 15 29 2 31\n''') == '48'"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '24'\nassert solution('''\n5 2\n1 2 3 4 5\n''') == '7'\nassert solution('''\n5 3\n2 4 6 1 3\n''') == '8'\nassert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '64'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''\n7 3\n3 14 15 92 65 35 89\n''') == '64'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4') == '24'\nassert solution('7 3') == '64'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''2\n1\n1\n1 1\n''') == '4'\nassert solution('''2\n1\n1\n1 1\n''') == '4'"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input_1) == '12'\nassert solution(example_input_2) == '11'\nassert solution(input) == '4'"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 2, 3]) == '4'\nassert solution([1, 1, 3]) == '11'\nassert solution([3, 1, 2]) == '11'\nassert solution([1, 1, 1]) == '2'"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '11'\nassert solution('3') == '4'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '11'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''2\n1\n1\n1 1\n''') == '4'\nassert solution('''4\n1\n1\n1 1\n''') == '4'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2]) == \"4\"\nassert solution([3]) == \"11\"\nassert solution([1]) == \"12\"\nassert solution([4]) == \"5\"\nassert solution([4, 1, 3, 2, 1]) == \"4\"\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3\\n3 2 1\\n3 2 2 3') == '12'\nassert solution('3\\n1 2\\n3 3\\n2 1 3') == '4'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '11'\nassert solution('3') == '4'\nassert solution('2') == '4'\nassert solution('1') == '4'\nassert solution('1') == '4'\n\n'''\n\nn = int(stdin.readline())\n\nm = stdin.readline()\np = stdin.readline()\n\nmin_time = float('inf')\n\nfor i in range(n):\n    row = p.split()\n    min_time = min(min_time,int(row[i]) + int(m[i]))\n\nprint(min_time)"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1 2 2 3 3 3 3'\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 0\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\") == \"2 2\"\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 0\\n0 1 1 2 3 2') == '1 2 2 3 3 3 \nassert solution('6 1\\n0 1 0 3 4 5 2 3 7 0') == '2 3 3 4 5 6 6 6 8 2 \nassert solution('2 2') == '2 2'\nassert solution('4 3') == '2 2 2 2'\n\n\"\"\""
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"3 4 3 5 6 6 6 8 2\"\nassert solution(input_data_2) == \"2 2 2 3 3 3 4\"\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 2 2 3 3 3 3 4 5 6 6 6 8 2\"\nassert solution() == \"2 2 2 3 3 3 3 4 5 6 6 6 8 2\"\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 0\\n0 1 1 2 3 2\\n\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\\n0 1 0 3 4 5 2 3 7 0\\n\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\") == \"2 2\"\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 0\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\") == \"2 2\"\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 0\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\") == \"2 2\""
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 0\\n0 1 1 2 3 2') == '1 2 2 3 3 3 \nassert solution('10 1\\n0 1 0 3 4 5 2 3 7 0') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('2 2') == '2 2 '\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 8\n2 5 1\n4 4\n0 1 2 3''') == 'YES'\n\nassert solution('''3\n7 4\n1 4 2 5 4 2 5\n6''') == 'NO'\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"0 1 2 3\") == \"NO\"\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n\n---\n\n\n\n\n'''\n\nfrom collections import Counter\nfor _ in range(int(input())):\n    n,m=map(int,input().split())\n    arr=list(map(int,input().split()))\n    sumArr=sum(arr)\n    arr.sort(reverse=True)\n    newSum=sumArr-arr[0]\n    if newSum==m:\n        print(\"YES\")\n        continue\n    else:\n        for i in range(1,n):\n            newSum+=arr[i]-arr[i-1]\n            if newSum==m:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n        \n\n\n\n'''\n\nclass Solution:\n    def reorderList(self, head: ListNode) -> None:\n        \"\"\"\n        Do not return anything, modify head in-place instead.\n        \"\"\"\n        if not head: return\n        # find the middle element\n        slow = head\n        fast = head.next\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n        # reverse the second half\n        pre, curr = None, slow.next\n        while curr:\n            curr.next, pre, curr = pre, curr, curr.next\n        # merge two sorted linked lists\n        pre.next = None\n        head1, head2 = head, pre\n        while head2:\n            head2.next, head1, head2 = head1, head2, head2.next\n        \n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('0') == 'YES'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n5 8\n0 1 2 3''') == 'YES'\nassert solution('''2\n4 4\n0 1 2 3''') == 'NO'\nassert solution('''3\n6 3\n0 2 1 4 5''') == 'YES'\nassert solution('''3\n7 7\n0 1 2 3 4 5 6''') == 'NO'\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\", \"First\"\nassert solution(\"4 4\") == \"NO\", \"Second\"\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t=1, a=[\"0\", \"1\", \"2\", \"3\"], n=3, m=8) == \"YES\"\nassert solution(t=1, a=[\"2\", \"5\", \"1\", \"4\"], n=4, m=4) == \"YES\"\nassert solution(t=1, a=[\"2\", \"5\", \"1\", \"4\"], n=4, m=8) == \"NO\"\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 5 1\") == \"YES\"\nassert solution(\"3 8\\n2 5 1\") == \"NO\""
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 8\n2 5 1\n4 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 4\n1 2 3\n4 5\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 8\n2 5 1\n4 4\n0 1 2 3''') == \"YES\"\nassert solution('''5 4\n0 1 2 3 4\n5 4\n4 3 2 1 0''') == \"NO\"\n"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"5 1\\n\"\n    \"8 2\\n\"\n    \"3 4\"\n) == \"10 12 12\"\n"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n8 2\\n3 4\\n\") == \"10 12\"\nassert solution(\"2\\n10 3\\n3 4\\n\") == \"10 12\"\n\n'''\n"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '10\\n12\\n12'\n\n\"\"\""
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == stdout_"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"10\"\nassert solution(\"8 2\") == \"12\"\nassert solution(\"3 4\") == \"12\"\n\"\"\""
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\n5 1\\n8 2\\n3 4') == '10\\n12\\n12'"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1\n2 2\n3 3\n4 4\n''') == '''10\n12\n12'''\n\nassert solution('''\n5\n1 1\n2 2\n3 3\n4 4\n''') == '''10\n12\n12'''\n\nassert solution('''\n3\n1 1\n2 2\n3 3\n''') == '''10\n12\n12'''"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 1\n8 2\n3 4\n''') == '10\n12\n12\n''')"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 1\\n8 2\\n3 4\") == \"10\\n12\\n12\"\n"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n8 2\n3 4\n''') == '10\\n12\\n12'\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string()) == \"Possible\"\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"Possible\"\nassert solution(\"10 10\") == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Possible\"\nassert solution(stdin=\"5 6\\n2 5\\n3 2\\n5 1\\n3 4\\n4 1\\n5 4\\n\") == \"Possible\\n2 5\\n3 2\\n5 1\\n3 4\\n4 1\\n5 4\"\nassert solution(stdin=\"6 12\\n5 1\\n3 4\\n4 1\\n5 4\\n6 3\\n4 1\\n5 4\\n\") == \"Impossible\""
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n3 2\n5 1\n3 4\n4 1\n5 4''') == \"Possible\"\n\nassert solution('''6 12\n1 2\n2 3\n4 5\n2 5\n3 4\n4 5\n5 6''') == \"Impossible\"\n\nassert solution('''5 6\n1 2\n2 3\n4 5\n2 5\n3 4\n4 1\n5 4\n5 1''') == \"Possible\"\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n\") == \"Possible\"\nassert solution(\"6 12\\n\") == \"Impossible\"\n\n'''\n\n'''\nn = int(input())\nm = int(input())\ng = [[0 for _ in range(n)] for _ in range(n)]"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5 6\n    2 5\n    3 2\n    5 1\n    3 4\n    4 1\n    5 4\n''') == 'Possible'\n\n\"\"\"\n\nfrom math import gcd\nfrom itertools import combinations\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\n'''\n\n\nimport math"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\n\n'''"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\n2 5\n3 2\n5 1\n3 4\n4 1\n5 4\n''') == 'Possible', \"First Example\"\nassert solution('''6 12\n3 2\n5 1\n3 4\n4 1\n5 4\n''') == 'Impossible', \"Second Example\"\nassert solution('''7 7\n2 3\n5 1\n1 3\n4 3\n1 4\n5 2\n''') == 'Possible', \"Third Example\"\nassert solution('''40 50\n6 1\n6 2\n5 1\n1 6\n3 2\n3 3\n3 4\n4 5\n4 6\n5 4\n''') == 'Impossible', \"Fourth Example\"\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 6\n2 5\n3 2\n5 1\n3 4\n4 1\n5 4\n\n''') == \"Possible\"\nassert solution('''6 12\n4 5\n2 5\n3 2\n5 1\n3 4\n4 1\n5 4\n\n''') == \"Impossible\"\n\n\n'''"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'WIN'\nassert solution('12 2') == 'WIN'\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1\n1 1\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n12 2\n4 1\n8 1\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n1 1\n1 2\n\n\"\"\") == \"LOSE\"\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10 2\n1 1\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n10 2\n1 2\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n10 2\n1 2\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n10 1\n1 2\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n3 1\n1 1\n\n\"\"\") == \"WIN\"\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'WIN'\nassert solution('12 2') == 'LOSE'"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3 1\n    1 1\n    ''') == 'WIN'\n\nassert solution('''\n    12 2\n    4 1\n    8 1\n    ''') == 'LOSE'\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,1,1,3,1,1]) == \"WIN\"\nassert solution([1,1]) == \"WIN\"\nassert solution([3,1,3,1,1,1]) == \"WIN\"\nassert solution([1,1,1,1]) == \"WIN\"\nassert solution([3,1,3,1]) == \"WIN\"\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\n1 1\n\nOutput\nWIN''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n\nOutput\nWIN''') == 'WIN'\nassert solution('''1 1\n1 2\n\nOutput\nLOSE''') == 'LOSE'\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n1 1\n\n''') == 'WIN'\nassert solution('''\n12 2\n4 1\n8 1\n\n''') == 'LOSE'\nassert solution('''\n1 1\n1 2\n\n''') == 'WIN'"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n1 2\n\n''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n\n''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n\n''') == 'LOSE'\nassert solution('''12 2\n1 2\n5 2\n\n''') == 'WIN'\nassert solution('''3 1\n1 1\n\n''') == 'WIN'\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n1 1\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n12 2\n4 1\n8 1\n\"\"\") == \"LOSE\"\nassert solution(\"\"\"\n1 1\n1 2\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n1 1\n1 2\n\"\"\") == \"LOSE\"\nassert solution(\"\"\"\n12 2\n\"\"\") == \"LOSE\""
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"5 2\") == \"YES\""
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"5 2\") == \"NO\""
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == \"YES\"\nassert solution('5 4') == \"NO\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\n\"\"\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n1 1 1 1 1\n1 1 1 1 1\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 4\n0 0 0 0 1\n0 1 1 1 1\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 2\n0 1 1 1 1\n1 1 1 1 1\n\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\nassert solution('''5 4\n1 0 0 0 1\n0 1 1 1 1\n''') == 'NO'\nassert solution('''5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\nassert solution('''\n5 4\n1 0 0 0 1\n0 1 1 1 1\n''') == 'YES'\nassert solution('''\n5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10\") == \"4\"\nassert solution(\"1 3\") == \"1 2 3\"\nassert solution(\"4\") == \"0\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"1 2 3 4\"\nassert solution(\"2 2\") == \"1 2\"\nassert solution(\"6 9\") == \"1 2 3 4 5 6\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"3 3\") == \"1 2 3\"\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6\") == \"3 4 5\"\nassert solution(\"1 3\") == \"1 2 3\"\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n4 3 1 2\") == \"4\\n1 2 3 4\"\nassert solution(\"5 6\\n4 3 1 1 2\") == \"3\\n1 3 4\"\nassert solution(\"1 3\\n4\") == \"0\""
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '3'\nassert solution('10 10') == '4'\nassert solution('5 10') == '1 2 3 4'\nassert solution('5 6') == '1 2 3 4'\nassert solution('1 3') == '1 3'\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 10\n4 3 1 2\n''') == '4'\nassert solution('''\n5 6\n4 3 1 1 2\n''') == '3'\nassert solution('''\n1 3\n4\n''') == '0'\n'''\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"1 3\") == \"1 3\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 10\n4 3 1 2\n''') == '4\n\nassert solution('''5 6\n4 3 1 1 2\n''') == '3\n\nassert solution('''1 3\n4\n''') == '0'''"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n10\\n2 3 1 2') == '4\\n1 2 3 4\\n', 'Sample Test'\n\nassert solution('4\\n10\\n4 3 1 2') == '4\\n1 2 3 4\\n', 'Sample Test'\n\nassert solution('5\\n6\\n4 3 1 2') == '3\\n1 2 3 4\\n', 'Sample Test'\n\nassert solution('1\\n10\\n') == '0\\n', 'Sample Test'"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9\n0 0 0 1 1 1 1 0 0 0\n''') == \"YES\"\nassert solution('''7\n0 0 0 1 1 1 1\n''') == \"NO\"\nassert solution('''5\n1 1 1 1 1\n''') == \"NO\"\nassert solution('''8\n1 1 0 1 1 0 1 1 0\n''') == \"NO\""
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == 'YES'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES'\nassert solution('8') == 'NO'\nassert solution('9') == 'YES'\n\n'''"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 0 1 1 1 0\\n\") == \"YES\"\nassert solution(\"9\\n0 0 0 1 1 1 0 0 0\\n\") == \"YES\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"NO\"\nassert solution(\"8\\n1 1 0 1 1 1 1 1\\n\") == \"NO\"\nassert solution(\"9\\n1 1 0 1 1 1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"YES\"\n\nassert solution(input) == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 1 1 1 1 1') == 'YES'\nassert solution('8\\n1 1 1 0 0 0 1 1') == 'NO'\nassert solution('9\\n1 1 0 1 1 0 1 1 0') == 'YES'\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 0 0 0 0 1 1 1\\n\") == \"YES\"\nassert solution(\"6\\n0 0 0 0 0 1 1 1\\n\") == \"YES\"\nassert solution(\"6\\n0 0 0 1 1 1 1\\n\") == \"YES\"\nassert solution(\"6\\n1 1 1 1 1 1 1\\n\") == \"YES\"\nassert solution(\"6\\n0 0 0 0 0 1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 0 0 1 1 1 0 0 0\n\n7\n1 1 1 1 1 1 1 1\n\n5\n1 1 1 1 1 1 1 1\n\n8\n1 1 0 1 1 0 1 1 0\n\n9\n1 1 0 1 1 1 0 1 1 0\n\n6\n1 1 1 1 1 1 1 1 1\n\n5\n1 1 1 1 1 1 1 1 1\n\n7\n1 1 1 1 1 1 1 1 1\n\n6\n1 1 1 1 1 1 1 1 1\n\n8\n1 1 0 1 1 0 1 1 1 0\n\n6\n1 1 1 1 1 1 1 1 1\n\n7\n1 1 1 1 1 1 1 1 1\n\n6\n1 1 1 1 1 1 1 1 1\n\n6\n1 1 1 1 1 1 1 1 1\n\n7\n1 1 1 1 1 1 1 1 1\n''') == 'YES'\n\nassert solution('''5\n0 0 0 0 1 0 0 0\n\n4\n0 1 1 1 1 0 1 0\n\n3\n1 0 1 0 0 1 0 0\n\n2\n1 1 1 1 1 1 1 1\n\n1\n1 1 1 1 1 1 1 1\n\n0\n1 1 1 1 1 1 1 1\n\n1\n1 1 1 1 1 1 1 1\n''') == 'YES'"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"8\") == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0 0 1 1 1 0 0 0\") == \"YES\"\nassert solution(\"7\\n0 0 0 1 1 1 1 0 0\") == \"NO\"\nassert solution(\"9\\n0 0 0 1 1 1 1 0 0\") == \"YES\""
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0 0 1 1 1 1 0 0 0\\n') == 'YES'\nassert solution('7\\n1 1 1 1 1 1 1 1\\n') == 'NO'\nassert solution('5\\n1 1 1 1 1\\n') == 'YES'\nassert solution('9\\n1 1 0 1 1 1 1 1 0\\n') == 'NO'\nassert solution('9\\n0 0 0 1 1 1 1 0 0 0\\n') == 'NO'\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 15\n1 2 3 4 5 6 7\n''') == '0 0 0 0 0 2 3 \n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 15\\n\"\n    \"1 2 3 4 5 6 7\"\n) == \"0 0 0 0 0 2 3\"\n\nassert solution(\n    \"5 100\\n\"\n    \"80 40 40 40 60\"\n) == \"0 1 1 2 3\"\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n') == '0 0 0 0'\nassert solution('5 100\\n80 40 40 40 60\\n') == '0 1 1 2 3'"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 15\\n1 2 3 4 5 6 7') == '0 0 0 0 0 2 3'\nassert solution('5 100\\n80 40 40 40 60') == '0 1 1 2 3'\nassert solution('6 10\\n1 2 3 4 5 6 7 8 9') == '0 1 1 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 15\\n1 2 3 4 5 6 7') == '0 0 0 0 0 2 3', 'test 1 failed'\nassert solution('5 100\\n80 40 40 40 60') == '0 1 1 2 3', 'test 2 failed'\nassert solution('7 100\\n1 2 3 4 5 6 7') == '0 0 0 0 0 2 3', 'test 3 failed'\nassert solution('5 100\\n80 40 40 40 60') == '0 1 1 2 3', 'test 4 failed'\nassert solution('6 100\\n1 2 3 4 5 6 7') == '0 1 1 2 3', 'test 5 failed'\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([7, 15]) == \"0 0 0 0 0 2 3\"\nassert solution([5, 100]) == \"0 1 1 2 3\""
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 15') == '0 0 0 0 0 2 3'\nassert solution('5 100') == '0 1 1 2 3'\nprint(solution(input()))\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"7 15\"\n    \"1 2 3 4 5 6 7\"\n) == \"0 0 0 0 0 2 3\"\nassert solution(\n    \"5 100\"\n    \"80 40 40 40 60\"\n) == \"0 1 1 2 3\"\n\ns = solution(\n    \"7 15\"\n    \"1 2 3 4 5 6 7\"\n)\nprint(s)\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 15\\n1 2 3 4 5 6 7') == '0 0 0 0 0 2 3'\nassert solution('5 100\\n80 40 40 40 60') == '0 1 1 2 3'"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 15\\n1 2 3 4 5 6 7\") == \"0 0 0 0 0 2 3\"\nassert solution(\"5 100\\n80 40 40 40 60\") == \"0 1 1 2 3\"\n"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0 4 5 6 7\n''') == '2'\nassert solution('''1 0\n0\n''') == '1'\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 0') == '1'\nassert solution('5 0') == '0'"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n0 4 5 6 7\") == \"2\"\nassert solution(\"1 0\\n0\") == \"1\"\nassert solution(\"5 0\\n1 2 3 4 5\") == \"0\""
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n0 4 5 6 7\n''') == '2'\n\nassert solution('''1 0\n0\n''') == '1'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '1'"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n0 4 5 6 7\") == \"2\"\nassert solution(\"1 0\\n0\") == \"1\"\n"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n0 4 5 6 7\") == \"2\"\nassert solution(\"1 0\\n0\") == \"1\"\nassert solution(\"5 0\\n1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 0') == '1'\nassert solution('5 0') == '0'"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n0 4 5 6 7\") == \"2\"\nassert solution(\"1 0\\n0\") == \"1\"\nassert solution(\"5 0\\n1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 0') == '1'\nassert solution('5 0') == '0'\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n') == '3 0 3'\nassert solution('2 4\\n') == '2 1 3'"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n') == '3 0 3'\nassert solution('2 4\\n') == '2 1 3'"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"3 0 3\"\nassert solution(\"2 4\") == \"2 1 3\"\nassert solution(\"2 3\") == \"1 0 1\"\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n\") == \"3 0 3\"\nassert solution(\"2 4\\n\") == \"2 1 3\""
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\n\n\"\"\""
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2 1 0\"\nassert solution(\"2 4\") == \"2 1 3\"\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '3 0 3'\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"\"\nassert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\n\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n--- Day 3: Toboggan Trajectory ---\n\nWith the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. You'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (.) and trees (#) you can see. For example:\n\n..##.......\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3 of week\", \"7 of month\"]) == \"52\"\nassert solution([\"4 of week\", \"30 of month\"]) == \"11\"\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\""
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 of week\") == \"52\"\nassert solution(\"2 of month\") == \"11\"\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\nprint('Day-0 solution = OK')"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\nprint(solution(input()))\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 5\n2 4 8 3 6\n''') == 'YES'\nassert solution('''10 5\n2 4 5 7 9\n''') == 'YES'\nassert solution('''10 5\n2 4 5 7 8 9\n''') == 'NO'\nassert solution('''3 5\n2 4 8 3 6\n''') == 'NO'\nassert solution('''3 5\n2 4 8 3 6\n''') == 'YES'\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 5\n2 4 8 3 6\n''') == 'NO'\nassert solution('''10 5\n2 4 3 9 6\n''') == 'YES'\nassert solution('''10 10\n2 3 6 1 5 4 8\n''') == 'YES'"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 5\\n2 4 8 3 6') == 'YES'\nassert solution('10 5\\n2 5 3 4 8') == 'NO'\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 5\") == \"YES\", \"Simple\"\nassert solution(\"10 5\") == \"NO\", \"Complex\"\nassert solution(\"10 10\") == \"YES\", \"Complex2\"\nassert solution(\"10000 1\") == \"YES\", \"Complex3\"\nassert solution(\"3 3\") == \"YES\", \"Complex4\"\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n2 4 5 7 9') == 'YES'\nassert solution('6 6\\n2 3 4 3 4 4 5') == 'NO'\nassert solution('6 6\\n3 1 2 2 3 4') == 'NO'\nassert solution('10 5\\n3 1 2 3 4 5 6 7 8 9') == 'YES'\nassert solution('6 7\\n5 1 2 1 2 3 3 4') == 'YES'\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2 4\n''') == 'NO'\nassert solution('''\n5\n2 4 8 3 6\n''') == 'YES'\nassert solution('''\n10\n2 4 8 3 6\n''') == 'YES'\nassert solution('''\n5\n2 4 5 7 9\n''') == 'NO'\nassert solution('''\n10\n1 1 2\n''') == 'YES'"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nprint(solution())"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == 'YES'\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 5\") == \"YES\"\nassert solution(\"10 5\") == \"NO\""
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1 10 5 7 9'\n) == 'YES'\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 10 1 2\") == \"4\"\nassert solution(\"2\\n3 10 1 2\\n7 14 3 8\") == \"10\"\nassert solution(\"3\\n2 5 1 1\\n20 70 2 7\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n2 2 1 2\\n6 2 2 2\\n7 7 1 1\\n4 5 1 1\\n\") == \"1\"\nassert solution(\"3\\n6 7 1 1\\n4 5 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\"\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10 1 2\") == \"10\"\nassert solution(\"7 14 3 8\") == \"0\"\nassert solution(\"20 70 2 7\") == \"1\"\nassert solution(\"5 6 1 1\") == \"2\""
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1\\n\") == \"4\\n10\\n0\\n-1\"\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == \"4\"\nassert solution('''\n4 8 1 2\n6 10 3 8\n100 70 2 7\n5 6 1 1\n''') == \"10\"\nassert solution('''\n1 1 1 1\n1 1 1 1\n''') == \"0\"\n''')\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10 1 2') == '4'\nassert solution('7 14 3 8') == '10'\nassert solution('20 70 2 7') == '-1'\nassert solution('5 6 1 1') == '9'\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '4'\nassert solution('''4\n5 6 1 1\n3 10 1 2\n7 14 3 8\n20 70 2 7\n''') == '10'\nassert solution('''2\n5 6 1 1\n3 10 1 2\n7 14 3 8\n20 70 2 7\n''') == '0'\nassert solution('''1\n3 10 1 2\n7 14 3 8\n20 70 2 7\n''') == '-1'"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '10'\nassert solution('5\\n6 2 1 1\\n2 1 1 1\\n2 1 1 1\\n2 1 1 1\\n2 1 1 1') == '-1'\nassert solution('4\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1\\n2 2 1 1\\n2 2 1 1\\n2 2 1 1\\n2 2 1 1') == '10'\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1\\n') == '4\\n10\\n0\\n-1'\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4'\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nadd\nfor 5\nend\nfor 10\nfor 20\nend\nadd\nend\nadd\nend\n''') == \"OVERFLOW!!!\", \"First example\"\nassert solution('''\n2\nfor 10\nadd\nfor 10\nadd\nadd\nadd\nadd\nadd\nadd\nend\n''') == \"OVERFLOW!!!\", \"Second example\"\nassert solution('''\n5\nfor 15\nadd\nadd\nadd\nfor 5\nend\nadd\nadd\nadd\nadd\nadd\nadd\n''') == \"161\", \"Third example\"\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"3\") == \"OVERFLOW\"\nassert solution(\"4\") == \"OVERFLOW\"\nassert solution(\"5\") == \"OVERFLOW\"\nassert solution(\"6\") == \"OVERFLOW\"\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nfor 10\nfor 10\nfor 10\nadd\nend\n''') == \"0\", \"First example\"\n\nassert solution('''\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\n''') == \"OVERFLOW!!!\", \"Second example\"\n\nassert solution('''\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nend\n''') == \"161\", \"Third example\""
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"0\""
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'OVERFLOW!!!'\nassert solution('3') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\nfor 50\nfor 50\nfor 50\nend\nfor 50\nadd\nadd\nadd\nend\nend\n\"\"\") == \"OVERFLOW!!!\", f\"actual: {solution(stdin)}\"\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('9') == '161'\nassert solution('11') == 'OVERFLOW!!!'"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nfor 30\\nadd\\nend\\nfor 50\\nadd\\nend\\nfor 100\\nadd\\nend\\nfor 1000\\nadd\\nend\\nfor 10000\\nadd\\nend\\nfor 100000\\nadd\\nend\\nfor 1000000\\nadd\\nend\") == \"OVERFLOW!!!\", \"First example is wrong\"\n\nassert solution(\"2\\nfor 30\\nfor 50\\nfor 100\\nadd\\nend\\nfor 1000\\nadd\\nend\") == \"0\", \"Second example is wrong\"\n\nassert solution(\"2\\nfor 100\\nfor 100\\nfor 100\\nadd\\nend\") == \"OVERFLOW!!!\", \"Third example is wrong\"\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"OVERFLOW!!!\"\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"OVERFLOW!!!\", f\"Solution is wrong\"\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ee\") == 2\nassert solution(\"z\") == 0\nassert solution(\"0ay1\") == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ee\") == 2\nassert solution(\"z\") == 0\nassert solution(\"0ay1\") == 2"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"z\") == 0\nassert solution(\"ee\") == 2\nassert solution(\"0ay1\") == 2"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('a') == 2\nassert solution('b') == 0\nassert solution('aa') == 1\nassert solution('aab') == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('z') == 0\nassert solution('ee') == 2\nassert solution('0ay1') == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ee') == 2\nassert solution('z') == 0\nassert solution('0ay1') == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nee\n''') == 2\nassert solution('''\nz\n''') == 0\nassert solution('''\n0ay1\n''') == 2\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''ee\n''') == 2\nassert solution('''z\n''') == 0\nassert solution('''0ay1\n''') == 2"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('z') == 0\nassert solution('ee') == 2\nassert solution('aa') == 1\nassert solution('eee') == 3\nassert solution('zz') == 1\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"3\") == '2'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n100 0\\n0 100\\n-100 0\\n0 -100\") == \"100\"\nassert solution(\"5\\n0 0\\n2 0\\n0 -1\\n-2 0\\n-2 1\") == \"2\"\nassert solution(\"5\\n0 0\\n2 0\\n0 -1\\n-2 0\\n-2 1\") == \"2\"\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0 0\\n1 0\\n-3 0\\n0 -2\\n') == '100'\nassert solution('3\\n0 0\\n1 0\\n-3 0\\n0 -2\\n') == '-1'\nassert solution('5\\n0 0\\n2 0\\n0 -1\\n-2 0\\n-2 1\\n') == '2'\nassert solution('7\\n0 2\\n1 0\\n-3 0\\n0 -2\\n-1 -1\\n-1 -3\\n-2 -3\\n') == '-1'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\nassert solution('''\n5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '-1'\nassert solution('''\n5\n0 0\n0 -1\n3 0\n-2 0\n-2 1\n''') == '-1'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n100 0\n0 100\n-100 0\n0 -100''') == '100'\nassert solution('''5\n0 0\n2 0\n0 -1\n-2 0\n-2 1''') == '2'\nassert solution('''5\n0 0\n2 0\n0 -1\n-2 0\n-2 1''') == '-1'"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"100\"\nassert solution(\"7\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n100 0\\n0 100') == '100'\nassert solution('2\\n0 2\\n1 0\\n-3 0\\n0 -2') == '-1'\nassert solution('3\\n0 0\\n2 0\\n0 -1') == '-1'\nassert solution('5\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1') == '2'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n100 0\n0 100\n-100 0\n0 -100\n\n''') == \"100\"\nassert solution('''\n7\n0 2\n1 0\n-3 0\n0 -2\n-1 -1\n-1 -3\n-2 -3\n\n''') == \"-1\"\nassert solution('''\n5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n\n''') == \"2\"\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n100 0\n0 100\n-100 0\n0 -100\n''') == '100'\nassert solution('''5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\nassert solution('''5\n0 0\n1 0\n-3 0\n0 -2\n-2 1\n''') == '2'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 0\n1 0\n-3 0\n0 -2\n-1 -1\n-1 -3\n-2 -3\n''') == '2'\nassert solution('''\n7\n0 2\n1 0\n-3 0\n0 -2\n-1 -1\n-1 -3\n-2 -3\n''') == '-1'\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1 4\"\nassert solution(\"6\") == \"1 4\""
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\nLLRLLL\nRRLL''') == '3 1 4 2 5'\nassert solution('''3\nRRLL''') == '4 2 5 1'\nassert solution('''7\nRRLLLLL\nRRLLRRLL\nLLRRRRRR\nLLLLLLLLL\nRRLLLLLLR\nRLLRRLLLL\nLRRRRRLRL''') == '6 1 4 5 7 2 3 4 2 1'\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1 4\"\nassert solution(\"4\") == \"3 2\""
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3 1\"\nassert solution(\"4 2\") == \"3 2\"\nassert solution(\"6 2\") == \"3 2 4 5 1\"\nassert solution(\"8 3\") == \"3 4 2 1 5 6 7\"\nassert solution(\"8 9\") == \"3 4 7 2 1 5 6 8\"\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == solution.__doc__"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nR') == '2'\nassert solution('4\\nRRLL') == '3 1'"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nLLRLLL\n''') == '1 4'\nassert solution('''\n4\nRRLL\n''') == '3 1'"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 2 3 4'\nassert solution('10') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3 1\"\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nLLRLLL\") == \"1 4\"\nassert solution(\"4\\nRRLL\") == \"3 1\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"30\"\nassert solution(\"2 3\") == \"25\"\n\"\"\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n\"\"\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"30\"\nassert solution(\"2 3\") == \"25\"\n\n\n\"\"\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n\n\"\"\"\n\n\nfrom math import sqrt\nfrom bisect import bisect_left, bisect_right"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"25\"\nassert solution(\"1 5\") == \"30\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n\n\n\"\"\"\nfrom math import floor, sqrt\nimport sys"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"30\"\nassert solution(\"2 3\") == \"25\"\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 2 3\n''') == '39'\nassert solution('''\n1\n1 1 1 1\n''') == '85'\nassert solution('''\n6\n1 1 1 1 1 3\n''') == '85'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('10\\n1 1 1 1 1 1 1 1') == '226'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n2 2 3\\n1\\n4\\n5\\n') == '39'\n\n\"\"\"\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin.split()[0])\n        t = [int(i) for i in stdin.split()[1:]]\n        \n        def count(n, t):\n            if n == 0:\n                return 0\n            if t[n-1] == 0:\n                return count(n-1, t)\n            return 2**n - 1 - count(n-1, t) + count(n-1, t) * t[n-1]\n        \n        print(count(n, t))\n\nSolution().solution(\"3\\n1 1 1\\n\")\n\n\"\"\""
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 2 2 3\") == \"39\"\nassert solution(\"6\\n1 1 1 1 1 3\") == \"85\""
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 2 3') == '39'\nassert solution('6 1 1 1 1 3') == '85'\nassert solution('1') == '3'\nassert solution('0') == '0'\n\n\n\n\n-----Explanation-----\n\nA firework launched from the bottom-most red cell. It covers t_1 = 4 cells. After covering t_1 = 4 cells, it explodes and splits into two parts, both moving in the direction marked green. All new parts explode again after covering t_2 = 2 cells, splitting into two new parts moving in directions marked green. Then all parts explode again after covering t_3 = 1 cells, splitting into two new parts moving in directions marked green. Finally, all parts explode again after covering t_4 = 0 cells, splitting into two new parts moving in directions marked green.\n\nWe see the following diagram:\n\n\n\n[[Image]]\n\nThe diagram shows the general behaviour of the firework. The middle image shows how each part of the firework moves after each level of recursion, with green arrows marked directions in which the parts will move in the next level.\n\n\n\nA firework launched from the bottom-most red cell. It covers t_1 = 4 cells. After covering t_1 = 4 cells, it exploded and split into two parts, both moving in the direction marked green. The first part moves in the direction marked green. So, it splits into two new parts, each moving in the direction marked green.\n\nAfter covering t_2 = 2 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_3 = 1 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_4 = 0 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\n[Image]\n\nAn error occurs, after levels 6 and 7. The firework exploded and split into four new parts, each moving in the direction marked green.\n\n[Image]\n\nThe fourth level is of course 4 times longer than the other levels. The fourth level starts with t_1 = 4 and covers t_1 = 4 cells. The first part moves in the direction marked green, while the second part moves in the direction marked yellow.\n\nAfter covering t_1 = 4 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_2 = 2 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_3 = 1 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_4 = 0 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nThe fourth level is of course 4 times longer than the other levels. The fourth level starts with t_1 = 4 and covers t_1 = 4 cells. The first part moves in the direction marked green, while the second part moves in the direction marked yellow.\n\nAfter covering t_1 = 4 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_2 = 2 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_3 = 1 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\nAfter covering t_4 = 0 cells, it exploded and split into two new parts, each moving in the direction marked green.\n\n\n\n-----Reference-----"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '85'\nassert solution('4') == '39'\nassert solution('1') == '3'\n\"\"\""
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n4 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('1\\n3') == '3'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 2 3\") == \"39\"\nassert solution(\"6 1 1 1 1 3\") == \"85\"\nassert solution(\"1\") == \"3\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('1\\n3') == '3'"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('NEAT') == \"YES\"\nassert solution('WORD') == \"NO\"\nassert solution('CODER') == \"NO\"\nassert solution('APRILFOOL') == \"NO\"\nassert solution('AI') == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"JUROR\") == \"YES\""
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"YES\") == \"NO\"\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'YES'\nassert solution('NEAT') == 'YES'\nassert solution('WORD') == 'NO'\nassert solution('CODER') == 'NO'\nassert solution('APRILFOOL') == 'NO'\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABBD\") == \"YES\"\nassert solution(\"ABC\") == \"NO\"\nassert solution(\"ABAB\") == \"NO\"\nassert solution(\"ABAA\") == \"YES\"\nassert solution(\"A\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\""
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"JUROR\") == \"YES\"\nprint(\"All Tests Passed!\")"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"YES\") == \"YES\", \"Example\"\nassert solution(\"NO\") == \"NO\", \"Example\"\nassert solution(\"YES\") == \"YES\", \"My logic\"\nassert solution(\"NO\") == \"NO\", \"My logic\"\nassert solution(\"YES\") == \"YES\", \"My logic\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n\") == \"1\"\nassert solution(\"6 6\\n\") == \"14\"\nassert solution(\"4 4\\nS.E\\n\") == \"0\"\nassert solution(\"4 4\\n.S.\\n\") == \"0\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n....#\\nS....#\\n.#....\\n.#....\\n...E..\\n333300012\\n\") == \"1\"\nassert solution(\"6 6\\n......\\n......\\n......\\n......\\n......\\n......\\n01232123212302123021\\n\") == \"14\"\nassert solution(\"5 3\\n...\\n..S.\\n....\\n....\\n....\\n....\\n\") == \"0\"\nassert solution(\"5 10\\nS.E...\\n.##..\\n...E.\\n#...#\\n....\\n.....\\n.###.\\n....#\\nE.S..\\nS.##.\\n\") == \"8\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '1'\nassert solution('6 6') == '0'"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"1\"\nassert solution(\"6 6\") == \"14\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '1'\nassert solution('6 6') == '0'\nassert solution('10 3') == '0'\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\n.....#\\nS....#\\n.#....\\n...E..\\n333300012') == '1'\nassert solution('6 6\\n......\\n......\\n..SE..\\n......\\n......\\n......\\n01232123212302123021') == '14'\nprint(solution())\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n.....#\\nS....#\\n.#....\\n...E..\\n333300012\") == \"1\"\nassert solution(\"6 6\\n......\\n......\\n......\\n......\\n......\\n......\\n01232123212302123021\") == \"14\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n.....#\\nS....#\\n.#....\\n...E..\\n333300012\") == '1'\nassert solution(\"6 6\\n......\\n......\\n..SE..\\n......\\n......\\n......\\n01232123212302123021\") == '14'"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n') == '1'\nassert solution('6 6\\n') == '0'\nassert solution('5 3\\n') == '0'\nassert solution('5 5\\n') == '0'\nassert solution('3 2\\n') == '0'\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == '1'\nassert solution(\"6 6\") == '14'\nassert solution(\"5 3\") == '0'"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n0 1\n1 0\n1 1\n2 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 1\n2 2\n1 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 1, \"This is not correct\"\nassert solution('100') == 100, \"This is not correct\"\n\n\"\"\""
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''3\n0 1\n1 0\n1 1\n2 0''') == '3'\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n0 1\n1 0\n1 1\n2 0\n\n''') == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"4\\n0 1\\n1 0\\n1 1\\n2 0\\n\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '0'"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 1\n1 0\n1 1\n''') == '3'\n\nassert solution('''6\n0 1\n1 0\n1 1\n2 0\n2 2\n2 1\n''') == '1'\n\nassert solution('''20\n0 1\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n2 101\n2 102\n2 103\n2 104\n2 105\n2 106\n2 107\n2 108\n2 109\n2 110\n2 111\n2 112\n2 113\n2 114\n2 115\n2 116\n2 117\n2 118\n2 119\n2 120\n2 121\n2 122\n2 123\n2 124\n2 125\n2 126\n2 127\n2 128\n2 129\n2 130\n2 131\n2 132\n2 133\n2 134\n2 135\n2 136\n2 137\n2 138\n2 139\n2 140\n2 141\n2 142\n2 143\n2 144\n2 145\n2 146\n2 147\n2 148\n2 149\n2 150\n2 151\n2 152\n2 153\n2 154\n2 155\n2 156\n2 157\n2 158\n2 159\n2 160\n2 161\n2 162\n2 163\n2 164\n2 165\n2 166\n2 167\n2 168\n2 169\n2 170\n2 171\n2 172\n2 173\n2 174\n2 175\n2 176\n2 177\n2 178\n2 179\n2 180\n2 181\n2 182\n2 183\n2 184\n2 185\n2 186\n2 187\n2 188\n2 189\n2 190\n2 191\n2 192\n2 193\n2 194\n2 195\n2 196\n2 197\n2 198\n2 199\n2 200\n2 201\n2 202\n2 203\n2 204\n2 205\n2 206\n2 207\n2 208\n2 209\n2 210\n2 211\n2 212\n2 213\n2 214\n2 215\n2 216\n2 217\n2 218\n2 219\n2 220\n2 221\n2 222\n2 223\n2 224\n2 225\n2 226\n2 227\n2 228\n2 229\n2 230\n2 231\n2 232\n2 233\n2 234\n2 235\n2 236\n2 237\n2 238\n2 239\n2 240\n2 241\n2 242\n2 243\n2 244\n2 245\n2 246\n2 247\n2 248\n2 249\n2 250\n2 251\n2 252\n2 253\n2 254\n2 255\n2 256\n2 257\n2 258\n2 259\n2 260\n2 261\n2 262\n2 263\n2 264\n2 265\n2 266\n2 267\n2 268\n2 269\n2 270\n2 271\n2 272\n2 273\n2 274\n2 275\n2 276\n2 277\n2 278\n2 279\n2 280\n2 281\n2 282\n2 283\n2 284\n2 285\n2 286\n2 287\n2 288\n2 289\n2 290\n2 291\n2 292\n2 293\n2 294\n2 295\n2 296\n2 297\n2 298\n2 299\n2 300\n2 301\n2 302\n2 303\n2 304\n2 305\n2 306\n2 307\n2 308\n2 309\n2 310\n2 311\n2 312\n2 313\n2 314\n2 315\n2 316\n2 317\n2 318\n2 319\n2 320\n2 321\n2 322\n2 323\n2 324\n2 325\n2 326\n2 327\n2 328\n2 329\n2 330\n2 331\n2 332\n2 333\n2 334\n2 335\n2 336\n2 337\n2 338\n2 339\n2 340\n2 341\n2 342\n2 343\n2 344\n2 345\n2 346\n2 347\n2 348\n2 349\n2 350\n2 351\n2 352\n2 353\n2 354\n2 355\n2 356\n2 357\n2 358\n2 359\n2 360\n2 361\n2 362\n2 363\n2 364\n2 365\n2 366\n2 367\n2 368\n2 369\n2 370\n2 371\n2 372\n2 373\n2 374\n2 375\n2 376\n2 377\n2 378\n2 379\n2 380\n2 381\n2 382\n2 383\n2 384\n2 385\n2 386\n2 387\n2 388\n2 389\n2 390\n2 391\n2 392\n2 393\n2 394\n2 395\n2 396\n2 397\n2 398\n2 399\n2 400\n2 401\n2 402\n2 403\n2 404\n2 405\n2 406\n2 407\n2 408\n2 409\n2 410\n2 411\n2 412\n2 413\n2 414\n2 415\n2 416\n2 417\n2 418\n2 419\n2 420\n2 421\n2 422\n2 423\n2 424\n2 425\n2 426\n2 427\n2 428\n2 429\n2 430\n2 431\n2 432\n2 433\n2 434\n2 435\n2 436\n2 437\n2 438\n2 439\n2 440\n2 441\n2 442\n2 443\n2 444\n2 445\n2 446\n2 447\n2 448\n2 449\n2 450\n2 451\n2 452\n2 453\n2 454\n2 455\n2 456\n2 457\n2 458\n2 459\n2 460\n2 461\n2 462\n2 463\n2 464\n2 465\n2 466\n2 467\n2 468\n2 469\n2 470\n2 471\n2 472\n2 473\n2 474\n2 475\n2 476\n2 477\n2 478\n2 479\n2 480\n2 481\n2 482\n2 483\n2 484\n2 485\n2 486\n2 487\n2 488\n2 489\n2 490\n2 491\n2 492\n2 493\n2 494\n2 495\n2 496\n2 497\n2 498\n2 499\n2 500\n2 501\n2 502\n2 503\n2 504\n2 505\n2 506\n2 507\n2 508\n2 509\n2 510\n2 511\n2 512\n2 513\n2 514\n2 515\n2 516\n2 517\n2 518\n2 519\n2 520\n2 521\n2 522\n2 523\n2 524\n2 525\n2 526\n2 527\n2 528\n2 529\n2 530\n2 531\n2 532\n2 533\n2 534\n2 535\n2 536\n2 537\n2 538\n2 539\n2 540\n2 541\n2 542\n2 543\n2 544\n2 545\n2 546\n2 547\n2 548\n2 549\n2 550\n2 551\n2 552\n2 553\n2 554\n2 555\n2 556\n2 557\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nLLRL1RL1\n''') == '1100000011'\nassert solution('''\n9\n0LLRR9\n''') == '1100000000'\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nLLRL1RL1\") == \"1010000011\"\nassert solution(\"2\\nL0L0LLRR9\") == \"1100000010\""
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\nLLRL1RL1\n\n''') == '1010000011'\nassert solution('''9\nL0L0LLRR9\n\n''') == '1100000010'\nassert solution('''4\nLLRL\nLLR\nLL\nRLR\n\n''') == '0011111110'\nassert solution('''5\nLRLR\nRLL\nLRL\nRLR\n\n''') == '1010000011'\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1010000011\"\nassert solution(input()) == \"1100000010\"\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '1010000011', \"Wrong answer in test #1\"\nassert solution('9') == '1100000010', \"Wrong answer in test #2\"\nprint('\"Run\" is good. How is \"Check\" going now?')\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"101\"\nassert solution(\"4\") == \"1111\"\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1100000011\"\nprint(solution(input))\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n\" +\n    \"LLRL1RL1\\n\" +\n    \"R0R0R0L2L1R1L1R0R0L1L1R0R0R1L1R1R1R0R0L1L1R1L1R0R1L1R1R0R0R1L1L1R1L1R1R0R0L1L1L1R0L1L1L1R1L1R0R1L1L1R1L1L1R1L1L1R1L1L1R0R1L1L1R1L1L1R0R1L1R1L1R0R0L1L1R1L1L1R1L1L1L1R1L1R0R1L1R1L1L1R1L1L1R1L1R1R0R1L1L1R0L1R1L1R0L1R1L1R0R1L1L1R1R0R1L1L1R1L1L1R1L1R1L1L1R1L1R1R0R1L1R1R0R1L1L1R1R0R1L1R1R0L1L1R1R1R0L1R1L1R1R1L1R1L1R1L1L1R1R0R1L1R1R0R1L1R1L1L1R1L1R1L1R1L1L1R1R0R1L1R1R0L1R1L1R0L1R1R0R0R1L1L1R1R1R1R0R1L1R1R1R0L1R1L1R1L1L1R1L1R1L1R1R0R1L1R1R0R1L1R1R1R0R1L1R1R1R0R1L1L1R1L1R1R0R1L1L1R1L1R1R1L1R1R0R1L1R1R0R1L1L1R1L1R1R0R1L1R1R1R0R1L1R1R1R0L1R1L1R1R1R0L1L1R1R1R1L1R1R0R1L1R1R1L1R1R1L1L1R1R1R1L1R1R0R1L1R1R0R1L1L1R1L1R1R1R0R1L1L1R1L1R1R1L1R1L1R1R1L1R1R0R1L1L1R1R1L1R1R0R1L1R1L1R1R1R0R1L1L1R1R1L1R1R0L1R1R1L1R1R1R0R1L1L1R1R1L1R1R1R0R1L1L1R1L1R1L1R0R1L1L1R1L1R1R0R1R1L1R1L1L1R1L1R1R1R1L1R1R1R0R1L1L1R1R1R0L1R1L1R1L1L1R1L1R1R1L1R1R0R1L1R1R1L1R1L1R1R1L1L1R1R1R0R1R1R0L1L1L1R1R1L1R1R1R0R1R1R0L1L1L1R1R1R0R1L1R1L1R1R1R0L1L1R1R1R1R0L1L1R1L1R1R1R0L1R1R1R1R0L1R1R1R0R1L1R1R1R1L1R1R0R1L1R1R1R0R1R1L1R1R1L1R1R1R0R1L1R1R1L1R1R1R0R1L1R1R1R0R1R1L1R1R1R1L1R1R0L1L1R1L1L1R1L1R1R1L1R1R1R0R1L1L1R1L1R1R0R1L1L1R1R1L1R1L1R1R1L1R1L1L1R1R1L1R1R1R0L1L1R1L1R1R1R1R0L1L1R1"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"1010000011\"\nassert solution(\"9\") == \"1100000010\"\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"8\"\n    \"LLRL1RL1\"\n    ) == \"1010000011\"\n\nassert solution(\n    \"9\"\n    \"L0L0LLRR9\"\n    ) == \"1100000010\"\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\""
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == '1'\n\nassert solution('''\n2\n''') == '3'\n\nassert solution('''\n3\n''') == '9'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '9'"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 3\nassert solution('2') == 3\nassert solution('1') == 1\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '9'\nassert solution('2') == '2'\nassert solution('3') == '9'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3') == 'White'\nassert solution('5\\n3 5') == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"White\", solution(\"2 3\")\nassert solution(\"5 5\") == \"Black\", solution(\"5 5\")\nassert solution(\"2\") == \"Black\", solution(\"2\")"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Black'\nassert solution('1\\n2\\n') == 'Black'\nassert solution('2\\n2\\n') == 'White'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 5\n''') == 'White'\nassert solution('''4\n3 5\n''') == 'Black'\nassert solution('''2\n2 2\n''') == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 2\n''') == 'White', 'First'\nassert solution('''\n5\n3 5\n''') == 'Black', 'Second'\nassert solution('''\n2\n2 2\n''') == 'Black', 'Third'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"White\"\nassert solution(input_data=\"3 3\\n2 2\") == \"Black\"\nassert solution(input_data=\"5 5\\n4 4\") == \"White\""
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3''') == 'White'\nassert solution('''5\n3 5''') == 'Black'\nassert solution('''2\n2 2''') == 'Black'\nprint('All tests passed!')"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3') == 'White'\nassert solution('5\\n3 5') == 'Black'\nassert solution('2\\n2 2') == 'Black'\n\n\"\"\"\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'White'\nassert solution('5') == 'Black'\nassert solution('2') == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'White'\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n-5 20 -3 0\n''') == '2'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n-5 20 -3 0\n''') == '2'\nassert solution('''\n4 2\n-5 20 -3 0\n''') == '4'\n''')"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n-5 20 -3 0\n''') == '2'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 2\") == \"4\"\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n-5 20 -3 0\n''') == '2'\nassert solution('''\n10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'\n\nprint(solution('''\n100 5\n5 -10 -5 -10 -15 -10 -10 -10 -10 -10 -10 -10 -10 -15 -10 -10 -10 -10 -15 -10 -15 -10 -15 -15 -10 -10 -10 -15 -10 -10 -15 -15 -15 -10 -10 -10 -15 -10 -15 -10 -10 -10 -15 -10 -15 -10 -10 -15 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -15 -10 -10 -10 -10 -15 -10 -15 -10 -15 -10 -10 -15 -10 -15 -10 -10 -15 -10 -15 -10 -15 -10 -15 -10 -15 -15 -10 -15 -10 -10 -15 -10 -10 -15 -10 -15 -10 -10 -15 -10 -15 -10 -15 -10 -10 -10 -15 -10 -15 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3\\n-5 20 -3 0') == '2'\nassert solution('4 2\\n-5 20 -3 0') == '4'\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"10 6\") == \"3\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"10 6\") == \"3\"\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\nassert solution('4 2') == '4'\n\n\"\"\"\n\nimport math\nfrom math import sqrt"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'\nassert solution('4 3') == '2147483648'\nassert solution('12345678 87654321') == '2147483648'\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"12345678 87654321\") == \"2147483648\"\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'\nassert solution('100000000 1000000000 53798715') == '2147483648'"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"12345678 87654321\") == \"2147483648\"\n\n\"\"\"\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n2 1 1\n''') == '2'\nassert solution('''4 3\n2 1 1\n''') == '2'\nassert solution('''12345678 87654321\n43043751 1000000000 53798715\n''') == '2147483648'\nassert solution('''9 3\n1 1 2\n''') == '1'\nassert solution('''9 3\n1 1 4\n''') == '1'\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'\nassert solution('123') == '1'\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n2 1 1\n\n''') == '2'\n\nassert solution('''3 9\n1 1 3\n\n''') == '1'\n\nassert solution('''12345678 87654321\n43043751 1000000000 53798715\n\n''') == '2147483648'\n\nassert solution('''4 3\n1 2 3\n\n''') == '0'\n\nassert solution('''3 9\n2 3 1\n\n''') == '1'"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"12345678 87654321\") == \"2147483648\"\nassert solution(\"12345678\") == \"2147483647\"\nassert solution(\"123456789\") == \"2147483645\"\nassert solution(\"123\") == \"2147483647\"\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 1 2\\n1 2') == '5.0000000000'\nassert solution('5 5 1 2\\n3 1') == '4.999999999'\nassert solution('5 5 1 2\\n3 1\\n4 3') == '5.0000000000'\nassert solution('5 5 1 2\\n3 1\\n4 3\\n3 4') == '4.999999999'\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4') == '5.0000000000'\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n1 2\n1 2\n''') == '1.0000000000'\n''')\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\nassert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\n'''\n\n\n'''\nimport math\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n\") == '5.0000000000'\n\n'''\nfrom math import sqrt\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4''') == '5.0', 'First sample'\n\nassert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4''') == '8.0', 'Second sample'\n\nassert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000', 'Third sample'\n\nassert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n5 5\n3 3\n1 1\n''') == '5.0000000000', 'Fourth sample'\n\nassert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n5 5\n3 3\n1 1\n''') == '1.0000000000', 'Fifth sample'"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 1 2') == '5.0000000000'\nassert solution('2 3 1') == '2.0000000000'\nassert solution('3 5') == '2.50000000000'\nassert solution('5 4') == '4.50000000000'\n\nSample Input\n3\n3 2\n1 2\n3 2\n3 4\n\nSample Output\n2.0\n3.0\n4.0\n\"\"\"\n\nimport math"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 1 2') == '5.0000000000'\nassert solution('1 2') == '1.0000000000'\nassert solution('3 1') == '2.0000000000'\nassert solution('4 3') == '3.0000000000'\nassert solution('3 4') == '2.0000000000'\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 1 2') == '5.0000000000'\nassert solution('1 2') == '1.0000000000'\nassert solution('3 1') == '2.0000000000'\nassert solution('4 3') == '2.0000000000'\nassert solution('3 4') == '1.0000000000'\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\nassert solution('''\n3 3 1\n1 2\n2 1\n''') == '4.0000000000'\n'''\n\nimport math\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '2 1'"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n''') == '-1'\nassert solution('''2\n1 2\n''') == '1 2'\n\nassert solution('''3\n1 1 1\n''') == '-1'\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"3 2 1\") == \"-1\"\nassert solution(\"2 1 2\") == \"1 2\"\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '1 2'\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"1 2\"\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 2\") == \"1 2\"\nassert solution(\"3 1 2\") == \"1 2\"\nassert solution(\"4 1 2\") == \"-1\""
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n''') == '-1'\nassert solution('''\n1 1 1\n''') == '-1'\nassert solution('''\n3\n1 2 3\n''') == '1 2'\n"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('2\\n1 2\\n') == '1 2'\nassert solution('4\\n1 2 3 4\\n') == '1 2'\nassert solution('3\\n1 1 1\\n') == '-1'"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n''') == '-1'\n\nassert solution('''2\n1 2\n''') == '-1'\n\nassert solution('''3\n1 1 1\n''') == '-1'\n\nassert solution('''4\n1 2 3 4\n''') == '1 2'"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 -1\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"2 1\"\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"20 15\"\nassert solution(\"5 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\"\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\"\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n''') == '20 15'\nassert solution('''8 2 4\n''') == '35 32'"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 3\n''') == '20 15'\nassert solution('''\n8 2 4\n''') == '35 32'\n''')"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n    5 2 4''') == '20 15'\n\nassert solution('''8 2 4\n    5 2 4''') == '35 32'''"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '20 15'\nassert solution('8 2 4') == '35 32'"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '20 15'\n\"\"\"\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2 4\n2 5 6''') == '15 14'\nassert solution('''5 2 4\n2 5 6''') == '25 12'\nassert solution('''8 2 4\n2 5 6''') == '35 32'''\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 3\n''') == '20 15'\nassert solution('''\n8 2 4\n''') == '35 32'\n''')"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\""
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"0 0 1 1\"\nassert solution(\"1 1 1\") == \"1 1 1 1 1\"\nassert solution(\"2 1\") == \"1 1 1\"\nassert solution(\"2 2\") == \"1 1 1\"\n\nprint(solution(\"2 3\"))"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 0\") == \"0 0 1 1\"\nassert solution(\n    \"1 1\") == \"0 0 1 1\"\nassert solution(\n    \"1 1\") == \"0 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"0 0 1 1\"\nassert solution(\"1 1 1 1 1\") == \"0 0 1 1 1\"\nassert solution(\"2 2\") == \"0 0 1 1\"\nassert solution(\"2 2 2\") == \"0 0 1 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 0\n0 0 1 1\n0 0 1 1''') == '0 0 1 1'\nassert solution('''1 1\n0 1 1\n0 0 1 1''') == '1 1 1 1'\n\n\"\"\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\n\"\"\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 0') == '0 0 1 1'\n\n## Complete the solution so that it prints the elements of the sequence a in the same order as they are given in the input.\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"5 1\") == \"0 1 2 3 4\"\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0 0 1 1'\nassert solution('1 1') == '0 0 1 1'\nassert solution('2 2') == '0 0 1 1'\nassert solution('3 3') == '0 0 1 1'\nassert solution('5 5') == '0 0 1 1'\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"1 4\") == \"1 1\"\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1\n2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n1\n2\n\"\"\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n2\n''') == 'YES'\nassert solution('''\n2\n1\n2\n''') == 'NO'"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n2\") == \"YES\", \"easy case\"\nassert solution(\"2\\n1\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\") == \"YES\"\nassert solution(\"3\\n1\\n2\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n2\n''') == 'YES'\nassert solution('''\n2\n1\n2\n''') == 'NO'"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n''') == 'YES'\nassert solution('''2\n1\n2\n''') == 'NO'\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n\n''') == 'YES'\nassert solution('''\n3\n2\n1\n\n''') == 'NO'"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n1\n1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n1\n1\n2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n1\n1\n1\n2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n1\n1\n1\n2\n2\n\"\"\") == \"NO\""
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0 0 0 4\\n') == '1\\n', \"2 0 0 0 4\"\nassert solution('1 1 1 4 4\\n') == '3\\n', \"1 1 1 4 4\"\nassert solution('4 5 6 5 6\\n') == '0\\n', \"4 5 6 5 6\"\n\n\n\n'''\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 4 4\n''') == '3'\nassert solution('''\n2 0 0 0 4\n''') == '1'"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5 4 2\") == \"1\"\nassert solution(\"1 1 2 2\") == \"2\"\nassert solution(\"2 1 1 2\") == \"0\"\nassert solution(\"2 0 0 0 4\") == \"1\"\nassert solution(\"4 5 6 5 6\") == \"0\""
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 0 0 0 4\"\n) == \"1\"\n\nassert solution(\n    \"1 1 1 4 4\"\n) == \"3\"\n\nassert solution(\n    \"4 5 6 5 6\"\n) == \"0\"\n\nassert solution(\n    \"6 4 0 0 0\"\n) == \"0\"\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 0 4\") == \"1\"\nassert solution(\"1 1 1 4 4\") == \"3\"\nassert solution(\"4 5 6 5 6\") == \"0\"\n\n\n\n\n\"\"\""
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\nInput\n2 0 0 0 4\n\nOutput\n1\n\nInput\n1 1 1 4 4\n\nOutput\n3\n\nInput\n4 5 6 5 6\n\nOutput\n0\n\nInput\n2 2 2 5 5\n\nOutput\n2\n\nInput\n10 1 1 1 4 5\n\nOutput\n11\n\nInput\n4 5 6 5 6\n\nOutput\n0\n\nInput\n2 5 3 8 3\n\nOutput\n7\n\n\n\"\"\"\n\n\n\nimport math\nimport itertools\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1 4 4\n''') == '0'\nassert solution('''\n2 0 0 0 4\n''') == '1'\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0 0 0 4\n''') == '1'\nassert solution('''\n1 1 1 4 4\n''') == '3'\nassert solution('''\n4 5 6 5 6\n''') == '0'\nassert solution('''\n1 1 1 4 4\n''') == '2'\n'''\ninput\n3 3 4 5 1\noutput\n2\n'''"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\n\"\"\"\n\n\nfrom math import cos, sin, sqrt\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0 0 0 4') == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1 2\") == \"0\"\n\nimport sys\n\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 2') == '-1'"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n2 3\n''') == '1'\n\nassert solution('''\n5 2\n1 2 1 3 2\n''') == '4'\n\nassert solution('''\n5 1\n1 2 1 3 2\n''') == '-1'\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"4 1 2 3\") == \"2\"\nprint(\"You're a smart kid!\")\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 1 2 3\") == \"-1\"\nassert solution(\"3 1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 3 2''') == '-1'"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 2') == '-1'"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 2') == '-1'\nassert solution('5 1 2 3 4') == '4'\nassert solution('7 1 2 3 4 5 6 7') == '7'\nassert solution('10 1 2 3 4 5 6 7 8 9') == '5'\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 2') == '-1'\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '0'\nassert solution('4') == '0'\n\n\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n5\n5 3 8 1\n7\n5 3 9 1 4\n11\n3 7 9 1 4 5\n''') == '2'\nassert solution('''\n1\n5\n10 9 1\n7\n5 9 1 4\n11\n3 7 9 1 4 5\n''') == '0'\nassert solution('''\n2\n3\n5\n1\n2\n3\n4\n5\n''') == '0'\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '1'\nassert solution('10') == '0'\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 11\\n2 9 1 3 18 1 4\") == \"2\"\nassert solution(\"4\\n35\\n11 9 10 7\") == \"1\"\nassert solution(\"5\\n\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 7, 11, 2, 9, 1, 3, 18, 1, 4]) == 2\nassert solution([4, 35]) == 0\nassert solution([5, ]) == 1"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '2'\nassert solution('''\n5\n5 2 8 1 4 1\n6\n''') == '0'\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    int(input()),\n    int(input()),\n    int(input()),\n    int(input()),\n    int(input()),\n    int(input())\n]) == \"0\""
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1'\nassert solution('6 3') == '0'\nassert solution('2 3') == '2'\nassert solution('4 3') == '2'\n\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n'5',\n'8',\n'1',\n'1',\n'1',\n'1',\n'1',\n'1'\n]) == '1'\n\nassert solution([\n'6',\n'6',\n'8',\n'4',\n'2',\n'1',\n'1',\n'1'\n]) == '1'\n\nassert solution([\n'6',\n'9',\n'8',\n'4',\n'2',\n'1',\n'1',\n'1'\n]) == '2'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('55') == '10'\nassert solution('56') == '1'\nassert solution('10') == '4'\nassert solution('4') == '2'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == \"2\"\nassert solution('3') == \"2\"\nassert solution('4') == \"1\"\nassert solution('5') == \"4\"\nassert solution('6') == \"3\"\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n\n''') == '2'\nassert solution('''5\n\n''') == '4'\nassert solution('''10\n\n''') == '4'\nassert solution('''55\n\n''') == '10'\nassert solution('''56\n\n''') == '1'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"4\"\nassert solution(\"55\") == \"10\"\nassert solution(\"56\") == \"1\"\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '4'\nassert solution('55') == '1'\nassert solution('56') == '0'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '4'\nassert solution('55') == '1'\nassert solution('56') == '1'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('5') == 4\nassert solution('10') == 9\n"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 2\n\nassert solution('2 2 2 2') == 4\n\n\"\"\"\n"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\n\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\n'''"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 4\n1 4 0\n''') == '2'\n'''"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\n'''\n\n\nfrom collections import defaultdict\n\nn = int(input())\ngraph = defaultdict(list)\n\nfor i in range(n):\n    u, v, w = list(map(int, input().split()))\n    graph[u].append((v, w))\n\ndist = [-1] * n\nvisited = []"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 1 1\n1 0 4\n1 4 0\n''') == 2\nassert solution('''\n0 1 2\n1 0 4\n1 4 0\n''') == 5\nassert solution('''\n0 1 2 3\n1 0 4 5\n2 4 0 6\n3 5 6 0\n''') == 5\n'''\n\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n\"\"\""
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 1\\n1 0 4\\n1 4 0\\n') == '2'\nassert solution('4\\n0 1 2 3\\n1 0 4 5\\n2 4 0 6\\n3 5 6 0\\n') == '5'\n\n\"\"\""
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '6'\nassert solution('5') == '-1'\nassert solution('7') == '6'\nassert solution('8') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 0') == '3'\nassert solution('4') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 1 0\n\n''') == '3'\n\nassert solution('''\n6\n2 0 1 3 2 0\n\n''') == '6'\n\nassert solution('''\n3\n0 2 2\n\n''') == '-1'"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2 1 0\") == \"3\"\nassert solution(\"6\\n2 0 1 3 2 0\") == \"6\"\nassert solution(\"3\\n0 2 2\") == \"-1\""
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 0\\n') == '3\\n1 2'\nassert solution('6\\n2 0 1 3 2 0\\n') == '6\\n1 3\\n3 4\\n1 2'\nassert solution('3\\n0 2 2\\n') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 1 0\") == \"3\"\nassert solution(\"4 2 0 0\") == \"3\"\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 1 0\n''') == '3'\nassert solution('''6\n2 0 1 3 2 0\n''') == '6'\nassert solution('''3\n0 2 2\n''') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 0 1 3 2 0') == '3\\n1 3\\n3 4\\n1 2\\n4 5\\n5 6\\n4 6'\nassert solution('6\\n2 0 1 3 2 0') == '6\\n1 3\\n3 4\\n1 2\\n4 5\\n5 6\\n4 6'\nassert solution('3\\n0 2 2') == '-1'"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n5 2 4 1') == '3'\nassert solution('3 20\\n199 41 299') == '19'\n\n\n\"\"\"\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"3 20\") == \"19\"\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 2\n3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"3 20\") == \"19\"\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(inp_str) == \"3\"\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n5 2 4 1\n''') == '3'\nassert solution('''3 20\n199 41 299\n''') == '19'\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n5 2 4 1\n''') == '3'\nassert solution('''3 20\n199 41 299\n''') == '19'\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 4 1''') == '3'\nassert solution('''3 20''') == '19'\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '3'\nassert solution('3 20') == '19'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 -3\n0 3 3 0\n\n3 1 -9\n0 3 3 -1''') == '4.2426406871'\nassert solution('''3 3 -3\n0 3 3 0\n\n3 2 -1\n0 3 3 -1''') == '6.1622776602'\nassert solution('''3 1 -3\n0 3 3 0\n\n3 4 -1\n0 3 3 -1''') == '6.1622776602'\nassert solution('''3 3 -3\n0 3 3 0\n\n3 1 -1\n0 3 3 -1''') == '0.000000'\nassert solution('''3 2 -1\n0 3 3 0\n\n3 3 -1\n0 3 3 -1''') == '4.2426406871'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 -3\") == \"4.2426406871\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\n\"\"\"\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('3 1 -9') == '6.1622776602'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 -3\\n0 3 3 0\\n') == '4.2426406871'\nassert solution('3 1 -9\\n0 3 3 -1\\n') == '6.1622776602'\n\n\"\"\"\n\nfrom math import sqrt\nfrom itertools import product\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('3 1 -9') == '6.1622776602'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 -3\") == \"4.2426406871\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('3 1 -9') == '6.1622776602'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 -3\\n0 3 3 0\") == \"4.2426406871\"\nassert solution(\"3 1 -9\\n0 3 3 -1\") == \"6.1622776602\"\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 -3\") == \"4.2426406871\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\nassert solution(\"3 2 -3\") == \"inf\"\nassert solution(\"3 4 -3\") == \"inf\"\nassert solution(\"3 3 -3\") == \"inf\"\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('3 1 -9') == '6.1622776602'\n\n\"\"\"\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"12\") == \"1\"\nassert solution(\"123456789\") == \"8\"\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '0'\nassert solution('123456789101112131415161718') == '1'\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123456789101112131415') == '1'\nassert solution('11') == '0'\n\n'''\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\", \"First\"\nassert solution(\"11\") == \"0\", \"Second\""
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\", \"First\"\nassert solution(\"2\") == \"2\", \"Second\""
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('11') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"123456789101112131415\") == \"15\"\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1010\") == \"0\"\nassert solution(\"123456789101112131415\") == \"1\"\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"3\", \"First example\"\nassert solution(\"9\") == \"0\", \"Second example\"\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"infinity\"\ninput_data = '21 5'\nprint(solution(input_data))\ninput_data = '10 10'\nprint(solution(input_data))\ninput_data = '0 0'\nprint(solution(input_data))\ninput_data = '40 20'\nprint(solution(input_data))\n'''"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\n\n\n\"\"\""
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\nassert solution('24 5') == 'infinity'\n\n\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"21 5\"\n) == \"2\"\n\nassert solution(\n    \"9435152 272\"\n) == \"282\"\n\nassert solution(\n    \"10 10\"\n) == \"infinity\"\n\"\"\""
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\""
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n\n\"\"\""
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"25 13\") == \"26\"\nassert solution(\"26 13\") == \"39\""
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n4\n6''') == '6'\nassert solution('''25 13\n26\n7''') == '39'\nassert solution('''25 13\n26\n8''') == '26'\nassert solution('''25 13\n26\n9''') == '26'\nassert solution('''25 13\n26\n10''') == '26'\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '26'\nassert solution('5 3') == '6'\nassert solution('25 13') == '39'\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n') == '6'\nassert solution('25 13\\n') == '26'\nassert solution('26 13\\n') == '39'\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n''') == '6'\nassert solution('''25 13\n''') == '26'\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3''') == '6'\nassert solution('''25 13''') == '26'\nassert solution('''26 13''') == '39'\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n') == '6'\nassert solution('25 13\\n') == '26'\nassert solution('26 13\\n') == '39'\n\n\"\"\""
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('46 7') == '39'\n\"\"\"\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"ABCD\") == \"ABCD\"\nassert solution(\"ABCABDCBA\") == \"ABCD\"\nassert solution(\"AAAAABBB\") == \"AAAAABBB\"\nassert solution(\"ABABABABABABABA\") == \"ABABABABABABABA\"\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nmail\\nai\\nlru\\ncf') == 'cfmailru'\nassert solution('3\\nkek\\npreceq\\ncheburek') == 'NO'\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\nmail\\nai\\nlru\\ncf\\n\") == \"cfmailru\"\nassert solution(\n    \"3\\nkek\\npreceq\\ncheburek\\n\") == \"NO\"\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nmail\nai\nlru\ncf\n''') =='maillrucf'\nassert solution('''\n2\nkek\npreceq\ncheburek\n''') == 'NO'\nassert solution('''\n3\nmail\nai\nlru\ncf\n''') =='mailmailcf'"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"NO\"\n\n'''\nimport collections\n\nn = int(input())\nstrings = [input() for _ in range(n)]\n\nfor i, word in enumerate(strings):\n    p = collections.Counter(word)\n    if len(p.keys()) < i+1:\n        continue\n    elif len(p.keys()) == i+1:\n        if sorted(p.keys()) == p.keys():\n            print(word, end=\"\")\n        else:\n            print(word, end=\"\")\n    else:\n        # print(i, word)\n        pass\n\n'''\n1\nab\nc\nabc\n\n'''\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nmail\\nai\\nlru\\ncf') == 'cfmailru', \"Wrong!\"\nassert solution('3\\nkek\\npreceq\\ncheburek') == 'NO', \"Wrong!\"\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == 'NO'\nassert solution(\"a\") == 'NO'\nassert solution(\"ab\") == 'NO'\nassert solution(\"abc\") == 'NO'\nassert solution(\"ac\") == 'NO'\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nmail\\nai\\nlru\\ncf') == 'cfmailru'\nassert solution('3\\nkek\\npreceq\\ncheburek') == 'NO'"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('1 4 1') == '1'\nassert solution('1 10 1') == '2'\n"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 8 3') == '3'\nassert solution('2 10 1') == '1'\nassert solution('1 1 3') == '-1'\nassert solution('1 2 3') == '-1'"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 1, 3]) == '1'\nassert solution([2, 10, 1]) == '1'\nassert solution([2, 8, 1]) == '3'\n"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 8 3\n10\n''') == '3'\n\nassert solution('''\n1 1 3\n10\n''') == '1'\n\nassert solution('''\n1 1 1\n10\n''') == '-1'\n"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 8 3\n10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 10 1\n5 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 1 3\n10\n\"\"\") == \"-1\""
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_00) == \"3\"\nassert solution(example_input_01) == \"1\"\n"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 8 3\n10\n''') == '3', \"First\"\nassert solution('''\n2 10 1\n5 8\n''') == '1', \"Second\"\nassert solution('''\n1 1 3\n10\n''') == '-1', \"Third\""
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 8 3') == '3'\nassert solution('2 10 1') == '1'\nassert solution('1 1 3') == '-1'"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 8 3') == '3'\nassert solution('2 10 1') == '1'\nassert solution('1 1 3') == '-1'"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 8 3\n10\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2 10 1\n5 8\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 1 3\n10\n\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1\n1\n''') == 'YES'\n\nassert solution('''\n3\n1\n2\n2\n3\n\n''') == 'NO'\n\nassert solution('''\n4\n1\n2\n2\n3\n\n''') == 'YES'"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 1, 2, 3]) == 'YES'\nassert solution([1, 2, 1, 1]) == 'NO'\nassert solution([1, 3, 3, 2]) == 'YES'\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1\n1\n''') == 'YES'\nassert solution('''\n4\n1\n2\n2\n3\n\n''') == 'NO'\nassert solution('''\n5\n1\n2\n2\n3\n\n''') == 'YES'\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 1, 3, 3]) == \"YES\", \"First sample\"\nassert solution([1, 1, 3, 4]) == \"NO\", \"Second sample\"\nassert solution([1, 2, 2, 3, 3]) == \"YES\", \"Third sample\""
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n5 1 2\n1 2 3\n3 4 5\n10 10 1\n\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n1\n5 2 3\n5 2 1\n3 10 1\n10 10 2\n\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n2\n1 5 2\n1 10 3\n3 10 1\n10 10 2\n\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n3\n2 2 1\n2 5 3\n1 10 2\n10 10 1\n\n\"\"\"\n) == \"10\""
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 4') == '2'\nassert solution('5 10 4') == '6'\nassert solution('3 10 1') == '3'\nassert solution('4 6 5') == '10'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == \"6\"\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 2\\n5 10 4\\n3 10 1\\n1 2 3\\n4 6 5') == '6'\nassert solution('5\\n2 10 2\\n5 10 4\\n3 10 1\\n1 2 3\\n4 6 5') == '10'\nassert solution('5\\n1 5 5\\n3 10 1\\n1 2 3\\n4 6 5') == '1'\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 2') == 6\nassert solution('5 10 4') == 4\nassert solution('3 10 1') == 3\nassert solution('1 2 3') == 10\nassert solution('4 6 5') == 10\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '6'\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    2 4 2\n    5 10 4\n    3 10 1\n    1 2 3\n    4 6 5\n''') == '6'\nassert solution('''\n    1\n    2\n    10\n''') == '1'\nassert solution('''\n    1\n    3\n    10\n''') == '3'\nassert solution('''\n    1\n    4\n    10\n''') == '10'\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0\n0\n0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"0.333333\"\nassert solution(\"\"\"\n0\n0\n0\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1\n0\n1\n\"\"\") == \"1.0\"\nassert solution(\"\"\"\n2\n0\n1\n\"\"\") == \"0.5\"\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '0.555556'\nprint(solution(input))\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0.0'\nassert solution('1') == '1.0'\nassert solution('2') == '1.0'\nassert solution('3') == '0.333333'\nassert solution('4') == '0.25'\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0\\n1\\n1') == '0.666667'\nassert solution('3\\n3\\n3') == '0.333333'"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '0.0'\nassert solution('1') == '0.1'\nassert solution('2') == '0.2'\nassert solution('3') == '0.333333'\nassert solution('4') == '0.444444'\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n1\\n') == '0.666667'\nassert solution('1\\n0\\n1\\n') == '0.666667'\nassert solution('1\\n0\\n1\\n') == '0.666667'\n\n----\n\nfrom math import sqrt\nimport sys\n\nfor line in sys.stdin:\n    x = line.rstrip()\n\nresult = 0\n\nfor i in x:\n    result += int(i) ** 2\n\nprint(result)\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0\\n1\\n1') == '0.666667'\nassert solution('3\\n2\\n2\\n1') == '1.000001'\nassert solution('3\\n3\\n3\\n1') == '1.0'\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.5', \"Wrong answer\"\nassert solution('0') == '0.0', \"Wrong answer\"\nassert solution('10') == '1.0', \"Wrong answer\"\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n1') == \"0.666667\"\nassert solution('0\\n3\\n1\\n2') == \"0.5\"\nassert solution('0\\n2\\n1\\n3') == \"0.333333\""
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.5'\nassert solution('1') == '0.5'\nassert solution('2') == '1.0'\nassert solution('2') == '1.0'\nassert solution('3') == '1.0'\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABCD\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"AABCCB\") == \"No\"\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"AACABB\") == \"No\"\nassert solution(\"AABCD\") == \"Yes\"\nassert solution(\"AABCC\") == \"No\""
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\".BAC.\") == \"Yes\"\nassert solution(\"AA..CB\") == \"No\"\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AA.B') == 'Yes'\nassert solution('A..BB') == 'No'"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AA.CB') == 'Yes'\nassert solution('A.AB') == 'No'\nassert solution('B.AA') == 'No'\nassert solution('C.BB') == 'No'\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"AA.BB\") == \"Yes\"\nassert solution(\"AAAABBBBBB\") == \"No\"\nassert solution(\"AAABBBBBBB\") == \"No\"\nassert solution(\"AABBBBBBBB\") == \"Yes\"\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AAAABBBCCCCCDD') == 'Yes'\nassert solution('AAABBBBCCCCCDD') == 'No'\n\"\"\""
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"..AB..\") == \"Yes\"\nassert solution(\"A..BB..CCCC\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('.BAC.') == 'Yes'\nassert solution('AA..CB') == 'No'\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AA.BB.CC') == \"Yes\"\nassert solution('AA.BB.CC.DD') == \"No\""
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0\n1 1\n2 2\n''') == '5'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '4'\nassert solution('''\n0 0\n1 1\n2 2\n''') == '4'\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0\n1 1\n2 2\n''') == '5'\nassert solution('''0 0\n2 0\n1 1\n''') == '4'\nassert solution('''0 0\n2 0\n1 1\n''') == '3'\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n1 1\\n2 2\") == \"5\\n0 0\\n1 0\\n1 1\\n1 2\\n2 2\"\n\"\"\""
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1 1\\n2 2\") == \"4\\n0 0\\n1 0\\n1 1\\n1 2\\n2 2\"\n\n'''\n\nx,y=map(int,input().split())\nx_b,y_b=map(int,input().split())\nx_c,y_c=map(int,input().split())\nx_ab=abs(x_b-x_a)\ny_ab=abs(y_b-y_a)\nx_ac=abs(x_c-x_a)\ny_ac=abs(y_c-y_a)\nprint(int(x_ab+y_ab+x_ac+y_ac-2))"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 0\n2 0\n''') == '4'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '4'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '5'\n'''\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"4\"\nassert solution(input2) == \"0 0\"\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0') == '5'\nassert solution('1 1') == '4'\nassert solution('2 2') == '3'\n\n\n\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0') == '5'\nassert solution('1 1') == '0 0 1 1'\nassert solution('2 2') == '0 0 1 2'\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0') == '5'\nassert solution('1 1') == '4'\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"0 0\n1 1\n2 2\"\"\") == \"4\"\nassert solution(\"\"\"0 0\n2 0\n1 1\"\"\") == \"3\"\nassert solution(\"\"\"0 0\n1 1\n3 3\"\"\") == \"5\"\nassert solution(\"\"\"0 0\n1 1\n2 2\n1 2\"\"\") == \"4\"\nassert solution(\"\"\"0 0\n1 1\n2 2\n2 3\"\"\") == \"3\"\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '5'\nassert solution('3 2') == '3'"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"5\"\nassert solution(\"6 6\") == \"17\"\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"5\"\nassert solution(\"10 20\") == \"6\"\nassert solution(\"9 6\") == \"2\""
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n2 1 1 1''') == '5'\nassert solution('''3 2\n2 1 1''') == '3'"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 1 3'\nassert solution('5 5 5 6') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 1 3'\nassert solution(\"3 3 4 5\") == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 6') == '1 3 2'\nassert solution('5 5 5 6') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2 1 3'"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 3 2'"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3 1 6\\n'\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 1 3'"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 1 6\") == \"2 1 3\"\nassert solution(\"5 5 5 6\") == \"1 0 1\"\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 1 6') == '2 1 3'\nassert solution('5 5 5 6') == '1 0 1'\nassert solution('3 3 3 3 3') == '0 0 0'\nprint('\"Run\" is the best way to get credit for your submission')\n\nInput:\n6 9 9 7\n\nOutput:\n0 0 0\n\nInput:\n1 1 3 3 3 3 4 4 4\n\nOutput:\n0 0 0\n'''\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 6') == '2 1 3'\nassert solution('1 1 1 3') == '1 1 1'\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"12\") == \"12\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == ''\nassert solution(1) == ''\nassert solution(2) == '8'\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '8'\nassert solution('10') == '1024'\n\n\nprint('PASS' if solution('1') == '1' else 'FAIL')\nprint('PASS' if solution('2') == '4' else 'FAIL')\nprint('PASS' if solution('3') == '8' else 'FAIL')\nprint('PASS' if solution('10') == '1024' else 'FAIL')\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"1024\"\nassert solution(\"6\") == \"12\"\nassert solution(\"11\") == \"21\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"9\", \"Your result does not fit the requirements\"\nassert solution(\"10\") == \"1024\", \"Your result does not fit the requirements\"\nassert solution(\"10\") == \"1024\", \"Your result does not fit the requirements\"\nassert solution(\"10\") == \"1024\", \"Your result does not fit the requirements\"\nassert solution(\"10\") == \"1024\", \"Your result does not fit the requirements\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == '5'\nassert solution(4) == '4'\nassert solution(3) == '3'\nassert solution(2) == '2'\nassert solution(1) == '1'\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '8'\nassert solution('10') == '1024'\nprint('Congratulations! All test cases passed!')\n\n\n\"\"\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '1024'\nassert solution('2') == '2'\nassert solution('25') == '25'\nassert solution('50') == '50'\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '1024'\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 5 7') == '3 4 5'\nassert solution('1 5 5 7') == '5 5 5'\nassert solution('100000 200000 300000 400000') == '182690 214748 300999'\nassert solution('1 1 977539810 977539810') == '1 977539810 977539810'\n\n'''"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    1 3 5 7\n    1 5 5 7\n    100000 200000 300000 400000\n    1 1 977539810 977539810\n    \"\"\") == \"3 4 5\""
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5 7') == '3 4 5'\nassert solution('1 5 5 7') == '5 5 5'\nassert solution('100000 200000 300000 400000') == '182690 214748 300999'\nassert solution('1 1 977539810 977539810') == '1 977539810 977539810'\n\n'''"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5 7\\n1 5 5 7\\n100000 200000 300000 400000\\n1 1 977539810 977539810\\n\") == \"3 4 5\\n5 5 5\\n182690 214748 300999\\n1 977539810 977539810\"\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\nassert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '5 5 5'\nassert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '182690 214748 300999'\nassert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '5 5 5'\nassert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\n''')\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\nassert solution('''\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '182690 214748 300999'\nassert solution('''\n1 1 977539810 977539810\n''') == '1 977539810 977539810'\nassert solution('''\n1 1 977539810 977539810\n''') == '1 977539810 977539810'\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\n\nassert solution('''\n4 5 6 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '5 5 5'\n\n\"\"\"\nimport math\nimport sys\nimport io\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"4 3 5\"\nassert solution(input) == \"5 5 5\"\nassert solution(input) == \"182690 214748 300999\"\nassert solution(input) == \"1 977539810 977539810\"\n\n'''\n\nimport math\nfor i in range(int(input())):\n    a,b,c,d = map(int,input().split())\n    print(math.gcd(a,b),math.gcd(b,c),math.gcd(c,d))"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 3 5 7\n1 5 5 7\"\"\") == \"3 4 5\"\nassert solution(\"\"\"\n1 100000 200000 300000 400000\n1 1 977539810 977539810\"\"\") == \"5 5 5\"\n\n\n\n'''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n'''"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"18\"\nassert solution(stdin) == \"1999999999\"\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 5\n7 9\n10 11\n\n''') == '10'\n\nassert solution('''5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n\n''') == '18'\n\nassert solution('''1 1000000000\n1 1000000000\n\n''') == '1999999999'"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 4\n2 5\n7 9\n10 11\n''') == '10'\n\nassert solution('''\n5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n''') == '18'\n\nassert solution('''\n1 1000000000\n1 1000000000\n''') == '1999999999'\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 10\n2 5\n''') == \"10\"\nassert solution('''\n3 10\n2 5\n''') == \"18\"\nassert solution('''\n5 10\n2 5\n''') == \"18\"\nassert solution('''\n1 1000000000\n1 1000000000\n''') == \"1999999999\"\nassert solution('''\n5 1000000000\n1 1000000000\n''') == \"1999999999\"\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10\") == \"18\"\nassert solution(\"1 1000000000\") == \"1999999999\""
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n2 5\n7 9\n10 11\n\n''') == '10'\nassert solution('''\n5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n\n''') == '18'\nassert solution('''\n1 1000000000\n1 1000000000\n\n''') == '1999999999'\nprint('\"Run\" is good, now \"Check\"')\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 5\n2 5\n7 9\n10 11\n''') == '10'\nassert solution('''5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n''') == '18'\nassert solution('''1 1000000000\n1 1000000000\n''') == '1999999999'\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n2 5\n7 9\n10 11\n\n''') == '10'\nassert solution('''\n5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n\n''') == '18'\nassert solution('''\n1 1000000000\n1 1000000000\n\n''') == '1999999999'\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '10'\nassert solution('5 10') == '18'\nassert solution('1 1000000000') == '1999999999'\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 4\\n2 5\\n7 9\\n10 11') == '10'\nassert solution(\n    '5 10\\n5 7\\n11 12\\n16 20\\n25 26\\n30 33') == '18'\nassert solution(\n    '1 1000000000\\n1 1000000000\\n') == '1999999999'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n2\n2\n1\n1\n1\n2\n2\n2\n1\n1\n2\n2\n2\n''') == 'YES'\n\nassert solution('''\n10\n4\n4\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n''') == 'YES'\n\nassert solution('''\n10\n4\n3\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n''') == 'NO'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40\\n') == 'YES\\nYES\\nYES\\nNO\\n'\nassert solution('1\\n123\\n456\\n') == 'YES\\nNO\\nNO\\n'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES', \"First\"\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES', \"Second\"\nassert solution('''\n3\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO', \"Third\""
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n100 98\n42 32\n1000000000000000000 1\n41 40''') == 'YES'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40') == 'YES\\nYES\\nYES\\nNO'"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == \"YES\"\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == \"YES\"\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == \"NO\"\nassert solution('''\n5\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == \"NO\"\nassert solution('''\n5\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == \"NO\"\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40\") == \"YES\\nYES\\nYES\\nNO\"\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\nYES\\nYES\\nNO\"\n\"\"\"\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n3\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n5\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n6\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n5\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n6\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n7\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '200 200'\nassert solution() == '412 413'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 2\"\n) == \"199 200\"\n\nassert solution(\n    \"4 4\"\n) == \"412 413\"\n\nassert solution(\n    \"5 7\"\n) == \"-1\"\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1 2\n    ''') == '199 200'\nassert solution('''\n    4 4\n    ''') == '412 413'\nassert solution('''\n    5 7\n    ''') == '-1'\nprint('all tests passed')"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '199 200'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == \"199 200\"\nassert solution('4 4') == \"412 413\"\nassert solution('5 7') == \"-1\"\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"1 2\"]) == \"199 200\"\nassert solution([\"4 4\"]) == \"412 413\"\nassert solution([\"5 7\"]) == \"-1\"\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"199 200\"\nassert solution(\"4 4\") == \"412 413\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"6 2\") == \"-1\"\nassert solution(\"3 4\") == \"3 4\"\n"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('42') == '2'\nassert solution('23454') == '1'\nassert solution('169') == '1'"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('42') == '2'\nassert solution('23454') == '1'\nassert solution('169') == '1'\n\"\"\""
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"23454\") == \"1\"\nassert solution(\"169\") == \"1\"\n"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(42) == 2\nassert solution(23454) == 1\nassert solution(169) == 1\n\"\"\""
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('42') == '2'\nassert solution('23454') == '1'\nassert solution('169') == '1'\nassert solution('12118999') == '1'\n\n---\n\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\npieces = list(map(int, input().split()))"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"169\") == \"1\"\nassert solution(\"23454\") == \"2\"\n"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('42') == '2'\nassert solution('169') == '1'"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('42') == '2'\nassert solution('23454') == '1'\nassert solution('169') == '1'\n"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"23454\") == \"1\"\nassert solution(\"169\") == \"1\"\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"42\\n23454\"\n) == \"2\"\n\nassert solution(\n    \"169\\n12118999\"\n) == \"1\"\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2\ncba\ncbb''') == \"NO\"\nassert solution('''2\n2\ncaa\ncbb''') == \"NO\"\nassert solution('''2\n2\ncab\ncba''') == \"YES\"\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution([\n    '2',\n    'caa',\n    'cbb'\n]) == \"YES\"\nassert solution([\n    '3',\n    'cba',\n    'cba'\n]) == \"NO\"\nassert solution([\n    '4',\n    'ccab',\n    'cbac',\n    'bca',\n    'acbcc'\n]) == \"YES\"\nassert solution([\n    '4',\n    'cacb',\n    'cbac',\n    'bca',\n    'acbcc'\n]) == \"NO\"\n\n[Finished in 0.1s]\n'''\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n') == 'YES'\nassert solution('4\\n2\\n3\\n4\\n') == 'NO'\nassert solution('4\\n2\\n3\\n4\\n') == 'YES'\nassert solution('5\\n2\\n3\\n4\\n') == 'NO'\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'NO'\nassert solution('''\n4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'YES'\n'''\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\ncaa\ncbb''') == \"NO\"\nassert solution('''2\n2\ncaa\ncbb''') == \"YES\"\nassert solution('''3\n2\ncba\ncbb''') == \"YES\"\nassert solution('''4\n4\nccab\ncbac\nbca\nacbcc''') == \"NO\"\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'NO'\nassert solution('''\n1\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'YES'\nassert solution('''\n1\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'NO'"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"O-O-O\"\nassert solution(\"5\") == \"O-|O-O\"\nassert solution(\"3\") == \"O-|OO-OO\"\nassert solution(\"13\") == \"O-|OOO-O\"\nassert solution(\"720\") == \"O-|-OOOO\""
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'O-|OO-OO'\nassert solution('13') == 'O-|OOO-O'\nassert solution('720') == 'O-|-OOOO'\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"O\"\nassert solution(\"2\") == \"O-\"\nassert solution(\"3\") == \"O-OO\"\nassert solution(\"4\") == \"O-O-\"\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '''O|\nO-|\nO-|\nO-'''\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'O-|OO-OO'\nassert solution('13') == 'O-|OOO-O'\nassert solution('720') == 'O-|-OOOO'\nassert solution('1000000000') == 'O-|-OOOO'"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'O-O-O'\nassert solution('13') == 'O-|O-OOO'\nassert solution('720') == 'O-|-OOOO'"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'O-OO-O'\nassert solution('13') == 'O-|OOO-O'\nassert solution('720') == 'O-|-OOOO'"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'O-O-O'\nassert solution('13') == 'O-O-OOO'\nassert solution('720') == 'O-O-OOO'"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'O-|OO-OO'\nassert solution('13') == 'O-|O-OOO'\nassert solution('720') == 'O-|-OOOO'\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == \"O-|OO-OO\"\nassert solution('13') == \"O-|OOO-O\"\nassert solution('720') == \"O-|-OOOO\"\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n''') == 'YES'\nassert solution('''\n3 6\n''') == 'YES'\nassert solution('''\n2 5\n''') == 'NO'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == \"YES\\n1 2 4 5 7\"\nassert solution('3 6') == \"YES\\n1 2 5\"\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == 'YES\\n1 2 4 5 7'\nassert solution('3 6') == 'YES\\n1 2 5'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 5 7') == 'YES 1 2 5 7'\nassert solution('3 6') == 'YES 1 2 5'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == 'YES\\n1 2 4 5 7'\nassert solution('3 6') == 'YES\\n1 2 5'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n''') == 'YES\\n1 2 4 5 7'\nassert solution('''\n3 6\n''') == 'YES\\n1 2 5'\nassert solution('''\n5 5\n''') == 'NO\\n'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"YES\\n1 2 4 5 7\"\nassert solution(\"3 6\") == \"YES\\n1 2 5\"\n\"\"\"\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"2 2\") == \"NO\""
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"YES\\n1 2 4 5 7\"\nassert solution(\"3 6\") == \"YES\\n1 2 5\"\n\n\"\"\"\n\nimport unittest\n\n\nclass TestSolution(unittest.TestCase):\n    def test_case_00(self):\n        self.assertEqual(solution(\"5 5\"), \"YES\\n1 2 4 5 7\")\n\n    def test_case_01(self):\n        self.assertEqual(solution(\"3 6\"), \"YES\\n1 2 5\")\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\n''') == 'YES'\nassert solution('''\n2 6\n''') == 'YES'\nassert solution('''\n3 2\n''') == 'NO'\nassert solution('''\n4 3\n''') == 'YES'\nassert solution('''\n4 5\n''') == 'YES'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n0\\n') == '0.500000'\nassert solution('2\\n2 3\\n1 0\\n') == '0.666667'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.666667'\nassert solution('3') == '0.5'\n\n'''\n\nstdin = \"\"\nfor i in range(int(input())):\n    stdin += input() + \"\\n\"\n\nimport math\nprint(math.sqrt(sum([(a**2) for a in [float(i) for i in input().split()]]) / len(stdin.split())))"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.666667'"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n0\\n') == '0.500000'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0\n1\n0\n0\n\"\"\") == \"0.666667\"\nassert solution(\"\"\"\n3\n0\n1\n0\n0\n\"\"\") == \"0.666667\"\nassert solution(\"\"\"\n3\n0\n1\n0\n\"\"\") == \"0.500001\"\nassert solution(\"\"\"\n4\n0\n0\n0\n\"\"\") == \"0.500001\"\nassert solution(\"\"\"\n5\n0\n0\n1\n0\n0\n\"\"\") == \"0.500001\""
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.500000'\nassert solution('2') == '0.666667'\nassert solution('2 3') == '0.666667'\nassert solution('5 2') == '0.666667'\nassert solution('0') == '0.500000'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.500000'\nassert solution('2') == '0.500000'\nassert solution('2 3') == '0.666667'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.500000'\nassert solution('2') == '0.666667'"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    0 1\n    ''') == '0.666667'\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.500000'\nassert solution('2') == '0.666667'\nassert solution('10') == '0.333333'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 1 1\n1 1 2 1 3 2 1\n''') == '1'\nassert solution('''\n10 1 1\n1 2 2 1 3 2 1\n''') == '1'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n3 3 1 2 2 1 1 3\") == \"1\"\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3\\n3 3 1 2 2 1 1 3') == '1'\nassert solution('8 1\\n1 2 3 1 3 2 4 5 6 7 8') == '1'\n\nassert solution('5 5\\n1 1 3 4 5 3 2 2 4') == '-1'\nassert solution('9 4\\n1 2 3 1 4 5 2 3 5 1') == '3'\n\nassert solution('5 10\\n1 1 1 1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\") == \"1\"\nassert solution(\"8 1\\n0 0\\n1 1\\n2 2\\n3 3\") == \"0\"\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 7 2') == '1'\nassert solution('4 7 2') == '4'\nassert solution('8 5 1') == '1'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\\n') == '1'\nassert solution('8 2\\n2 2 2 1 1 1 2 2\\n1 1\\n') == '2'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1 2 1 1\\n2 4 1\\n') == '2'\nassert solution('4 2 4 1 3\\n3 1 1 3 2\\n') == '3'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n3 3 1 2 2 1 1 3\") == \"1\"\nassert solution(\"3\\n3 1 1\") == \"1\""
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"YES\"\nassert solution(\"10 1\") == \"NO\"\nassert solution(\"1 5\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('116401024') == 'YES'\nassert solution('284254589153928171911281811000') == 'YES'\nassert solution('120') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    116401024\n97 1024\n''') == 'YES'\nassert solution('''\n    284254589153928171911281811000\n1009 1000\n''') == 'YES'\nassert solution('''\n    120\n12 1\n''') == 'NO'\nassert solution('''\n    23452345\n872378\n''') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"116401024\") == \"YES\"\nassert solution(\"284254589153928171911281811000\") == \"YES\"\nassert solution(\"120\") == \"NO\"\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"116401024\") == \"YES\"\nassert solution(\"284254589153928171911281811000\") == \"YES\"\nassert solution(\"120\") == \"NO\"\n\nstdin = \"\"\"11311\n1419\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('116401024') == 'YES'\nassert solution('284254589153928171911281811000') == 'YES'\nassert solution('12 1') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n''') == 'NO'\nassert solution('''\n1\n10\n''') == 'YES'\nassert solution('''\n1\n10\n''') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"116401024\") == \"YES\"\nassert solution(\"284254589153928171911281811000\") == \"YES\"\nassert solution(\"120\") == \"NO\"\n\n\"\"\"\n\na, b = map(int, input().split())"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1\\n') == '0\\n'\nassert solution(\n    '3 7\\n') == '1\\n'\nassert solution(\n    '13 10\\n') == '1\\n'"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0', 'Check #1'\nassert solution('3 7') == '0', 'Check #2'\nassert solution('13 10') == '1', 'Check #3'\nprint('\"Run\" is good. Great job!')\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '1'\nassert solution('13 10') == '1'\nassert solution('1 2 2') == '0'\nassert solution('12 4 5') == '1'\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '1'\nassert solution('13 10') == '1'"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 0\nassert solution(input()) == 0\nassert solution(input()) == 1\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 7\") == \"1\"\nassert solution(\"13 10\") == \"1\"\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1\"\nprint(solution(input))\n[Image]"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '1'\nassert solution('13 10') == '1'\n\n\n'''"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution(\"1 1\") == '0'\nassert solution(\"3 7\") == '1'\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"1 1\"]) == \"0\"\nassert solution([\"3 7\"]) == \"1\"\nassert solution([\"13 10\"]) == \"1\"\n"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('7') == '2'\nassert solution('11') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n5\n''') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3') == '1'\nassert solution(\n    '5') == '2'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0') == '0'\nassert solution('2 2') == '5'\nassert solution('2000 2000') == '674532367'\n\n\n\"\"\"\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2 2') == '5'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 2\n''') == '0'\nassert solution('''2 0\n''') == '2'\nassert solution('''2000 2000\n''') == '674532367'\nassert solution('''2 2\n''') == '5'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 2\") == \"0\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"2 2\") == \"5\"\nassert solution(\"2000 2000\") == \"674532367\"\nassert solution(\"\"\"\n0 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n0''') == '0'\nassert solution('''2000 2000\n''') == '674532367'\nassert solution('''2000 2000\n1''') == '1'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '0 2'\n    ) == '0'\nassert solution(\n    '2 0'\n    ) == '2'\nassert solution(\n    '2 2'\n    ) == '5'\nassert solution(\n    '2000 2000'\n    ) == '674532367'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2000 2000') == '674532367'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2000 2000') == '674532367'"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 2\n0\n0\n0 2\n''') == '2'\nassert solution('''2000 2000\n''') == '674532367'\nassert solution('''2000 2000\n2\n0\n''') == '2'\nassert solution('''2000 2000\n0\n0\n0\n0\n0\n0\n''') == '2'\nassert solution('''2000 2000\n2\n0\n''') == '2'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 1\n2 2\n\n''') == '0 0'\nassert solution('''10 0\n\n''') == '5 9'"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n2 1\n2 2\n''') == '0 0'\n\nassert solution('''10 0\n\n''') == '5 9'"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n2 1\n2 2\n''') == '0 0'\nassert solution('''\n10 0\n''') == '5 9'\nassert solution('''\n1 2 3\n2 8\n1 4 5\n''') == '2 3'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0 0\"\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n2 1\n2 2\n''') == '0 0'\nassert solution('''9 3\n1 2 3\n2 8\n1 4 5\n''') == '2 3'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n2 1\n2 2\n''') == '0 0'\nassert solution('''10 0\n''') == '5 9'\nassert solution('''5 9\n''') == '0 0'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n2 1''') == '0 0'\nassert solution('''3 2\n2 1\n2 2''') == '2 3'\nassert solution('''10 0\n''') == '5 9'\nassert solution('''5 1\n1 2''') == '2 4'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"0 0\"\nassert solution(\"3 2\") == \"2 3\"\nassert solution(\"9 3\") == \"2 3\"\nassert solution(\"10 0\") == \"5 9\"\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '0 0'\nassert solution('5 0') == '0 0'\nassert solution('1 2') == '2 1'\nassert solution('2 1') == '2 1'\nassert solution('2 2') == '1 2'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2\n2 8\n1 4 5\n''') == '0 0'\nassert solution('''\n9 3\n1 2 3\n2 8\n1 4 5\n''') == '2 3'\nassert solution('''\n10 0\n''') == '5 9'\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10\") == \"2 8 14 20 26\"\nassert solution(\"10 6 40\") == \"2 8 14 20 26\"\nassert solution(\"\") == \"1\"\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n  10, 1, 10\n]) == \"-1\"\nassert solution([\n  10, 6, 40\n]) == \"2 8 14 20 26\"\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 10\") == \"2 8 14 20 26\"\nassert solution(\"10 6 40\") == \"2 8 14 20 26\"\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 8 14 20 26\"\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10 1 10'\n) == '-1'\nassert solution(\n    '10 6 40'\n) == '2 8 14 20 26'"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 5') == '1 2 3 4 5'\nassert solution('5 6 4') == '1 2 3 4 5 6'\nassert solution('6 2 5') == '2'\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '-1'\nassert solution('5 2 5') == '1 2'\nassert solution('8 7 4') == '8 7'\nassert solution('9 4 5') == '5'\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 1 10\") == \"-1\"\nassert solution(\"10 6 40\") == \"2 8 14 20 26\""
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 1 10') == '-1'\nassert solution('10 6 40') == '2 8 14 20 26'\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 1 10\n''') == '-1'\nassert solution('''\n10 6 40\n''') == '2 8 14 20 26'\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nXOOO\\nXXOO\\nOOOO\\nXXXX') == 'Yes'\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nXOOO\\nXXOO\\nOOOO\\nXXXX\\nXOOO\\nXOOO\\nXOXO\\nXOXX\\n\") == \"Yes\", \"first test\"\nassert solution(\"2\\nXX\\nOO\\nXO\\nOX\\n\") == \"No\", \"second test\"\nassert solution(\"2\\nXX\\nOO\\nXO\\nOX\\n\") == \"Yes\", \"second test\"\nassert solution(\"2\\nXO\\nXX\\nOO\\nOX\\n\") == \"Yes\", \"second test\"\nassert solution(\"4\\nXOOO\\nXXOO\\nOOOO\\nXXXX\\nXOOO\\nXOOO\\nXOXO\\nXOXX\\n\") == \"Yes\", \"second test\"\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'Yes'\nassert solution('2') == 'No'\n\n\n\"\"\""
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nXO\\nOX\\nXO\\nXO\\n') == 'Yes'\nassert solution('2\\nXX\\nOO\\nXO\\nOX\\n') == 'No'\nassert solution('3\\nXO\\nXO\\nOX\\nXO\\n') == 'Yes'\nassert solution('4\\nXOO\\nXXO\\nOXX\\nOXO\\n') == 'No'\nassert solution('5\\nXOO\\nXOX\\nXOX\\nXOO\\n') == 'Yes'\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nXOOO\nXXOO\nOOOO\nXXXX\nXOOO\nXOOO\nXOXO\nXOXX\n''') == 'Yes'\n\nassert solution('''2\nXX\nOO\nXO\nOX\n\n''') == 'No'"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'No'\nassert solution('4') == 'Yes'\nassert solution('6') == 'Yes'\n\ninput = stdin.readline\n\nstdin = input()\nn = int(input())\n\nmaps = []\nfor _ in range(n):\n    maps.append(list(input()))"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n\n------"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nXOOO\\nXXOO\\nOOOO\\nXXXX\") == \"Yes\"\nassert solution(\"2\\nXX\\nO\") == \"No\"\nassert solution(\"5\\nXO\\nOXO\\nOXO\\nOXO\\nOXX\") == \"No\"\nassert solution(\"5\\nXO\\nOXO\\nOXO\\nOXO\\nOXX\") == \"Yes\"\nassert solution(\"2\\nXX\\nO\") == \"No\"\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nOX\\nOO\\n') == 'Yes'\nassert solution('4\\nXOOO\\nXXOO\\nOOOO\\nXXXX\\nXOOO\\nXOOO\\nXOXO\\nXOXX\\n') == 'Yes'\nassert solution('1\\nXOOO\\nXXOO\\n') == 'No'\n\n\"\"\""
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'No'\nassert solution('4') == 'Yes'"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"both\""
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'need tree'"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'\n"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"both\"\nassert solution(\"need\") == \"need\""
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'\nassert solution('need tree') == 'need tree'\n"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"array\""
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'\n\n\n\"\"\"\n"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'\n"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"both\"\nassert solution(\"need\") == \"need\"\n\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n#.\\n...\\n#.') == 'YES'\nassert solution('4\\n##.#\\n#...\\n#.#.') == 'NO'\nassert solution('5\\n#.###\\n#..##\\n#####\\n##...\\n##.#.') == 'YES'\nassert solution('5\\n#.###\\n#..##\\n#####\\n##...\\n##.#.') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n\n\"\"\""
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n#.#\\n...\\n#.#\") == \"YES\"\nassert solution(\"4\\n##.#\\n#...\\n####\") == \"YES\"\nassert solution(\"5\\n#.###\\n....#\\n#....\\n###.#\\n#####\") == \"YES\"\nassert solution(\"5\\n#.###\\n....#\\n#....\\n###.#\\n#####\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\""
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n###\\n#...\\n####\") == \"YES\", \"Not sure about this one\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n\"\"\""
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n#.#\\n...\\n#.#\\n\") == \"YES\"\nassert solution(\"4\\n##.#\\n#...\\n####\\n##.#\\n\") == \"NO\"\nassert solution(\"5\\n###.#\\n#...#\\n##.###\\n##...#\\n#.###.\\n\") == \"YES\"\n\"\"\"\n\nn = int(input())\n\nboard = input()"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"100\") == \"YES\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n#.###\\n#...#\\n###.#\\n##.#.') == 'YES'\nassert solution('6\\n##.##\\n#..#.\\n###.#\\n##.##\\n#...#\\n#.###') == 'YES'\nassert solution('8\\n#..#.\\n#..#.\\n###.##\\n#.##.#\\n#.##.#\\n#.###.\\n#.#..#\\n#.####') == 'YES'\nassert solution('50\\n.#.#.\\n#.###.\\n#.###.\\n#.#.#.\\n#.#.#.\\n#.##.#\\n#.##.#.\\n#.##.#.\\n#.##.#.\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#.###.#\\n#."
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\""
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\"\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 3 3') == 2\nassert solution('3 10 1 3') == 3\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\"\nassert solution(\"10 10 1 10\") == \"1\"\nassert solution(\"0 0 1 0\") == \"0\""
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 10 3 3\"\n    ) == \"2\"\n\nassert solution(\n    \"3 10 1 3\"\n    ) == \"3\"\n\nassert solution(\n    \"100 100 1 1000\"\n    ) == \"1\"\n\"\"\"\n\nfrom math import floor\n\nk, a, b, v = map(int, stdin.split())\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\""
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 10 3 3\") == \"2\"\nassert solution(\n    \"3 10 1 3\") == \"3\"\nassert solution(\n    \"100 100 1 1000\") == \"1\"\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 6 4\n3 4 4 2\n\n''') == \"3\"\nassert solution('''\n4\n10 5 6 4\n1 11 4 2\n\n''') == \"6\"\nassert solution('''\n3\n10 1 10\n1 10 1 1\n\n''') == \"3\"\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'\nassert solution(['''\n4\n2 1 6 4\n3 4 4 2\n\n''']) == '3'\n\nassert solution(['''\n3\n10 1 10\n1 11 4 2\n\n''']) == '6'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 6 4\\n3 4 4 2\\n') == '3'\nassert solution('3\\n10 5 6 4\\n1 11 4 2\\n') == '6'\nassert solution('3\\n2 1 6 4\\n1 10 1 1\\n') == '3'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 1 6 4\n3 4 4 2\n''') == '3'\nassert solution('''\n3\n10 1 10\n1 10 1 1\n''') == '6'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 6 4\\n3 4 4 2\\n') == '3'\nassert solution('4\\n10 5 6 4\\n1 11 4 2\\n') == '6'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('4 5 6') == '2'\nassert solution('10 11 4 3') == '3'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 1 6 4\n3 4 4 2\n\n''') == '3'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 1, 6, 4]) == \"3\"\nassert solution([2, 1, 6, 4]) == \"3\"\nassert solution([3, 4, 4, 2]) == \"5\"\nassert solution([3, 10, 10, 2]) == \"5\"\nassert solution([10, 5, 6, 4]) == \"3\"\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Karen'\nassert solution('''\n5\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Koyomi'\n\n'''\nRuntime: 416 ms, faster than 25.02% of Python3 online submissions for Two Sum III - Data structure design.\nMemory Usage: 28.9 MB, less than 100.00% of Python3 online submissions for Two Sum III - Data structure design.\n'''"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 5 4\") == 'Karen'\nassert solution(\"5\\n2 5 2\") == 'Koyomi'\nassert solution(\"10\\n2 4 5 3 7 7 7 5 2 3\") == 'Koyomi'\n\nstdin = '''8\n1 5 2 3 4 5 2 3 1\n2 3 4'''\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n4 5 6\n''') == 'Karen'\nassert solution('''\n5\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Koyomi'\n\n\"\"\"\nInput:\n5\n1 2 3\n4 5 6\n\nOutput:\nKoyomi\n\nInput:\n3\n1 2 3\n4 5 6\n\nOutput:\nKaren\n\"\"\""
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Karen\"\nassert solution(\"5\") == \"Koyomi\"\n\n'''"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Karen\"\nassert solution(input()) == \"Koyomi\"\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Karen'\nassert solution('5') == 'Koyomi'\nassert solution('8') == 'Koyomi'\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Karen\"\nassert solution(\"1\") == \"Koyomi\"\nassert solution(\"2\") == \"Koyomi\""
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Karen'\nassert solution('5') == 'Koyomi'"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 4 6\n4 5 6\n''') == 'Karen'\n\nassert solution('''\n5\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Koyomi'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 1 1\") == \"7\"\nassert solution(\"4 4 2 1\") == \"25\""
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 4 1 1\n\"\"\") == '7'\nassert solution(\"\"\"\n3 4 2 1\n\"\"\") == '25'\nassert solution(\"\"\"\n3 4 3 1\n\"\"\") == '79'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '7'\nprint(solution())"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 1 1''') == '7'\nassert solution('''3 4 2 1''') == '25'\nassert solution('''3 4 3 1''') == '79'\nassert solution('''3 4 4 1''') == '1'\nassert solution('''3 4 5 1''') == '2'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1 1\") == \"7\"\nassert solution(\"3 4 2 1\") == \"25\"\nassert solution(\"3 4 3 1\") == \"79\"\nassert solution(\"3 5 1 1\") == \"23\"\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 1 1\") == \"7\"\nassert solution(\"3 4 2 1\") == \"25\"\nassert solution(\"3 4 3 1\") == \"79\"\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 1 3') == '13'\nassert solution('3 2 1 7') == '19'"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES'\nassert solution('''\n4 2\n1 5 17 19\n4 5\n''') == 'NO'\nassert solution('''\n4 2\n1 5 17 19\n2 1\n''') == 'YES'\nassert solution('''\n1\n6\n''') == 'YES'\nassert solution('''\n2\n1\n''') == 'NO'"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n3 12 18\\n2 6 5 3 3') == 'YES\\n3 4'\nassert solution('4 2\\n1 5 17 19\\n4 5') == 'NO'\nassert solution('3 2\\n4 3\\n5 5\\n1 1') == 'YES\\n1 1'\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 5\n3 12 18\n2 6 5 3 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n1 5\n\"\"\") == \"NO\""
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 5\\n3 12 18\\n2 6 5 3 3\\n\"\n    ) == \"YES\\n3 4\"\nassert solution(\n    \"4 2\\n1 5 17 19\\n4 5\\n\"\n    ) == \"NO\\n1 1\"\nassert solution(\n    \"2 2\\n3 2\\n\"\n    ) == \"NO\"\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(input_data=\"3 5\\n3 12 18\\n2 6 5 3 3\\n\") == \"YES\"\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n3 12 18\n2 6 5 3 3\n\n''') == 'NO'\n\nassert solution('''\n4 2\n1 5 17 19\n4 5\n\n''') == 'YES'\n\nassert solution('''\n5 2\n1 2 9 7 5\n4 2\n\n''') == 'YES'\n\nassert solution('''\n3 1\n1 2\n3\n\n''') == 'NO'\n\nassert solution('''\n4 3\n1 2 2 3\n4 3\n\n''') == 'NO'\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n3 12 18\n2 6 5 3 3\n\nOutput\nYES\n3 4\n''') == \"NO\"\n\nassert solution('''\n4 2\n1 5 17 19\n4 5\n\nOutput\nYES\n1 1\n''') == \"YES\"\n\nassert solution('''\n1 3\n3 3\n\nOutput\nYES\n1 1\n''') == \"NO\""
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 5 17 19\n4 5\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 6 2 4 5\n1 2 3 4\"\"\") == \"NO\""
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4\\n1 2 3 4\\n\") == \"-1\"\nassert solution(\n    \"5 5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\n    \"10000 10001\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 11\n2 4 7 3\n\n''') == '2 7 1 3 6 5 4'\nassert solution('''1000 999\n10 20 30 40\n\n''') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 11') == '1 5 2 4 3 6 7 8 9 10'\nassert solution('100 999') == '100 999'\nassert solution('7 11') == '2 7 1 3 6 5 4'\nassert solution('1000 999') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 11\n2 4 7 3\n\n''') == \"2 7 1 3 6 5 4\"\nassert solution('''1000 999\n10 20 30 40\n\n''') == \"-1\"\nassert solution('''10 11\n7 1 5 4 6 2 3\n\n''') == \"7 1 5 4 6 2 3\"\nassert solution('''\n1 1\n''') == \"1 1\"\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 7 1 3 6 5 4\" or solution() == \"7 1 5 4 6 2 3\"\nassert solution(input_data='''2 10\n10 10''') == \"2 10\"\nassert solution(input_data='''1000 999\n10 20 30 40\n''') == \"1000 999\""
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 11\n2 4 7 3\n\nOutput\n2 7 1 3 6 5 4\n7 1 5 4 6 2 3\n''') == '2 7 1 3 6 5 4'\nassert solution('''1000 999\n10 20 30 40\n\nOutput\n-1\n''') == '-1'\nassert solution('''4 4\n5 2 1 3\n\nOutput\n-1\n''') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 7 3\n''') == '2 7 1 3 6 5 4'''\n\nassert solution('''1000 999\n10 20 30 40\n''') == '-1'''\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 11\") == \"2 7 1 3 6 5 4\"\nassert solution(\"1000 999\") == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 11') == '2 7 1 3 6 5 4'\nassert solution('1000 999') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3\\n2 4 7 3\\n') == '2 7 1 3 6 5 4\\n7 1 5 4 6 2 3\\n'\nassert solution('7 999\\n10 20 30 40\\n') == '-1'"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'\nassert solution('12345') == '2'\nassert solution('123') == '1'\nassert solution('123456789') == '3'\n"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"8\") == \"1\""
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'\n\n\"\"\"\n\nn = int(input())\nlst = []\nfor i in range(n):\n    lst.append(int(input()))\n\nlst.sort()\nday = 1\nb = 0\nfor i in lst:\n    b += i\n    if day > n//2:\n        b += (n//2)\n    if b > n:\n        b = n\n    day += 1\n\nprint(day-1)"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\""
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\""
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'\n"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nZCTH\n''') == '2'\nassert solution('''5\nZDATG\n''') == '5'\nassert solution('''6\nAFBAKC\n''') == '16'\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nZCTH\") == \"2\"\nassert solution(\"5\\nZDATG\") == \"5\"\nassert solution(\"6\\nAFBAKC\") == \"16\"\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\nZCTH') == '2'\nassert solution(\n    '5\\nZDATG') == '5'\nassert solution(\n    '6\\nAFBAKC') == '16'\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nZCTH') == '2'\nassert solution('5\\nZDATG') == '5'\nassert solution('6\\nAFBAKC') == '16'\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '16'"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nZCTH\") == \"2\"\nassert solution(\"5\\nZDATG\") == \"5\"\nassert solution(\"6\\nAFBAKC\") == \"16\"\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nATG\n''') == '2'\nassert solution('''8\nAGGCA\n''') == '1'\nassert solution('''13\nGTTTTTTTTTTTTT\n''') == '2'\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nZCTH\") == \"2\"\nassert solution(\"5\\nZDATG\") == \"5\"\nassert solution(\"6\\nAFBAKC\") == \"16\"\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"16\""
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '4', \"Wrong result\"\nassert solution('4 7') == '0', \"Wrong result\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6\") == \"4\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 6\") == \"4\""
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"4\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"10 100\") == \"4\"\nassert solution(\"3 1\") == \"4\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n6') == '4'\nassert solution('2\\n3') == '3'\nassert solution('5\\n7') == '4'\n\"\"\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6\") == \"4\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '4'\nassert solution('10 5') == '7'\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"10 10\") == \"4\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 6\") == \"4\"\nassert solution(\"3 4\") == \"4\"\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0.50 1\") == \"0.5\"\nassert solution(\"1 0.50 4\") == \"0.9375\"\nassert solution(\"4 0.20 2\") == \"0.4\"\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\nassert solution('10000 1.00 1') == '1.00'\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0.50 1\") == \"0.5\"\nassert solution(\"1 0.50 4\") == \"0.9375\"\nassert solution(\"4 0.20 2\") == \"0.4\""
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0.50 1\") == \"0.5\"\nassert solution(\"1 0.50 4\") == \"0.9375\"\nassert solution(\"4 0.20 2\") == \"0.4\"\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0.50 1\") == \"0.5\"\nassert solution(\"1 0.50 4\") == \"0.9375\"\nassert solution(\"4 0.20 2\") == \"0.4\"\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 0.50 1\n1 0.50 2\n''') == '0.5'\nassert solution('''1 0.50 1\n1 0.50 2\n''') == '0.5'\nassert solution('''4 0.20 2\n''') == '0.4'\nassert solution('''1 1.1\n2\n''') == '0.4'\nassert solution('''2\n1.1\n''') == '0.4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"4 3\") == \"4\"\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n1 2\n0 3\n2 1\n3 0\n4 2''') == '4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 3') == '4'"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"8 9\") == \"2\"\nassert solution(\"15 18\") == \"5\""
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n''') == '4'\nassert solution('''\n4 3\n''') == '4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '3'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '4'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '1 3'\nassert solution('4') == '1 2'"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"1 3\"\nassert solution(\"4\") == \"1 2\""
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10 10 10 10') == '1 2'\nassert solution('3\\n5 5 5') == '1 2 3'\nassert solution('3\\n1 1 2') == '1 2 3'\nassert solution('3\\n4 4 4') == '1 3'\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 7 4 4 3\") == \"1 3\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"4 10 10 10 10\") == \"1 3\"\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"1 3\"\nassert solution(\"4\") == \"1 2\""
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 10 10 10\n''') == '1 2'\nassert solution('''\n5\n10 10 10 10\n''') == '1 2 3 4'\nassert solution('''\n7\n10 10 10 10 10 10 10\n''') == '1 2 3 4 5 6 7'\nassert solution('''\n10\n10 10 10 10 10 10 10 10\n''') == '1 2 3 4 5 6 7 8 9 10'\n\n'''\n\nassert solution('''\n8\n10 10 10 10 10 10 10 10\n''') == '1 2 3 4 5 6 7 8 9 10'"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 5 7 4 4 3\n''') == '1 3'\nassert solution('''\n4\n10 10 10 10\n''') == '1 2'\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3''') == '1 2'\nassert solution('''3\n2 1 3''') == '1 2'\nassert solution('''4\n10 10 10 10''') == '1 2'\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1 3'\nassert solution('4') == '1 2'"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"A\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"D.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\") == \"A\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"A\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"D.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\") == \"A\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A.VFleaKing_is_the_author_of_this_problem') == 'A'\nassert solution('B.Picks_is_the_author_of_this_problem') == 'C'\nassert solution('C.Picking_is_the_author_of_this_problem') == 'C'\nassert solution('D.Ftiasch_is_cute') == 'C'\nassert solution('A.ab') == 'B'\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A.VFleaKing_is_the_author_of_this_problem') == 'A'\nassert solution('B.Picks_is_the_author_of_this_problem') == 'B'\nassert solution('C.Picking_is_the_author_of_this_problem') == 'C'\nassert solution('D.Ftiasch_is_cute') == 'D'\nprint(solution(input()))\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A.VFleaKing_is_the_author_of_this_problem\nB.Picks_is_the_author_of_this_problem\nC.Picking_is_the_author_of_this_problem\nD.Ftiasch_is_cute''') == \"C\"\n\nassert solution('''A.ab\nB.abcde\nC.ab\nD.abc\n''') == \"B\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"A\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\") == \"A\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\\nB.Picks_is_the_author_of_this_problem\\nC.Picking_is_the_author_of_this_problem\\nD.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\\nB.abcde\\nC.ab\\nD.abc\") == \"C\"\nassert solution(\"A.c\\nB.cc\\nC.c\\nD.c\") == \"B\"\nassert solution(\"A.VFleaKing_is_the_author_of_this_problem\\nB.Picks_is_the_author_of_this_problem\\nC.Picking_is_the_author_of_this_problem\\nD.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\\nB.abcde\\nC.ab\\nD.abc\") == \"D\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\\nB.Picks_is_the_author_of_this_problem\\nC.Picking_is_the_author_of_this_problem\\nD.Ftiasch_is_cute\") == \"C\"\nassert solution(\"A.ab\\nB.abcde\\nC.ab\\nD.abc\") == \"B\"\nassert solution(\"A.c\\nB.cc\\nC.c\\nD.c\") == \"B\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A.VFleaKing_is_the_author_of_this_problem') == 'A', \"Test #1: Failed!\"\nassert solution('B.Picks_is_the_author_of_this_problem') == 'B', \"Test #2: Failed!\"\nassert solution('C.Picking_is_the_author_of_this_problem') == 'C', \"Test #3: Failed!\"\nassert solution('D.Ftiasch_is_cute') == 'D', \"Test #4: Failed!\"\nassert solution('A.ab') == 'A', \"Test #5: Failed!\"\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"A\", \"Test 1 Failed\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\", \"Test 2 Failed\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"D\", \"Test 3 Failed\"\nassert solution(\"D.Ftiasch_is_cute\") == \"D\", \"Test 4 Failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 2\n101010''') == '0'\nassert solution('''3 3 1\n11''') == '1'\nassert solution('''3 3 1\n110''') == '0'\nprint('Congratulations! All tests are done!')"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 2') == '0'\nassert solution('4 1 4') == '1'\nassert solution('5 5 2') == '1'"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 1 4\n1010''') == '1'\nassert solution('''5 5 2\n10110''') == '0'\nassert solution('''5 6 2\n10110''') == '1'\n"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 2\n10110\n''') == '0'\nassert solution('''\n3 5 1\n1110\n''') == '1'\n"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"1\""
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 4\\n10110') == '1'\nassert solution('5 5 2\\n10110') == '0'"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('4 1 4') == '1'"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"\")) == \"0\"\n\"\"\"\n\nimport sys\nimport time\nstart_time = time.time()"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 2') == '0'\nassert solution('4 1 4') == '1'\n"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1\""
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 1\n2 1\n1 3\n3 1\n1 2\n''') == '4'\nassert solution('''\n3\n1 2\n2 1\n1 3\n''') == '3'\nassert solution('''\n2\n1 1\n2 2\n''') == '2'\n\nimport collections\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('4\\n10 1\\n6 5') == '11'"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\nassert solution(input_data=\"2\\n1 2\\n2 2\\n\") == '11'\n\"\"\"\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution(stdin='''2\n2 2\n1 2\n2 2''') == '4'\nassert solution(stdin='''3\n2 2\n1 2\n2 2''') == '3'\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 1\\n6 5\") == \"11\"\nassert solution(\"3\\n2 2\\n1 2\\n2 2\") == \"4\"\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '11'\nassert solution('3') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '11'\nassert solution('2') == '8'\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '11'\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2 2\n1 2''') == '4'\nassert solution('''2\n10 1\n6 5''') == '11'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"179\\n\") == \"1\"\nassert solution(\"-1\\n\") == \"9\"\nassert solution(\"18\\n\") == \"10\""
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('-1') == '9'\nassert solution('-10') == '10'\nassert solution('179') == '1'\nassert solution('180') == '1'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''179''') == '1'\nassert solution('''-1''') == '9'\nassert solution('''18''') == '10'"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''18''') == '10'\nassert solution('''-1''') == '9'\nassert solution('''-10''') == '1'\nassert solution('''179''') == '1'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('-1') == '9'\nassert solution('0') == '0'\nassert solution('-1') == '9'\nassert solution('-1') == '9'"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n\n\n'''\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"19\"\nassert solution(\"2\") == \"28\"\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n10\n''') == '28'\nassert solution('''4\n5\n''') == '20'\nassert solution('''3\n2\n''') == '17'\nassert solution('''2\n3\n''') == '11'"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    ''') == '19'\nassert solution('''\n    2\n    ''') == '28'\n''')\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1''') == '19'\nassert solution('''2''') == '28'\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '19'\nassert solution('2') == '28'\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"19\"\nassert solution(\"2\") == \"28\"\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '19'\nassert solution('2') == '28'\nassert solution('3') == '36'\nassert solution('4') == '40'\nassert solution('5') == '45'\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"19\"\nassert solution(\"2\") == \"28\""
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"19\"\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '19'\nassert solution('2') == '28'"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('1') == '1'\nassert solution('1') == '2'\nassert solution('1') == '3'\nassert solution('1') == '4'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 0\\n3 1\\n3 4\\n') == '2'\nassert solution('1\\n5 4\\n') == '5'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 0\n3 1\n''') == '2'\nassert solution('''\n1\n5 4\n''') == '5'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0') == '2'\nassert solution('3 1') == '3'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n0 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 0\n3 1\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n4 5\n0 1\n0 2\n0 3\n0 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n2 1\n2\n\n''') == '3'\nassert solution('''2 1\n2 1\n10\n\n''') == '-5'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n2 1\n10\n''') == '3'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\n    '4',\n    '2 1',\n    '4',\n    '1 2',\n    '2',\n    '1'\n]) == '3'"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '3'\nassert solution('2 1') == '-5'\nassert solution('2 1') == '3'"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '3'\nassert solution('2 1') == '-5'\nassert solution('10') == '-5'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n2 1\n2\n''') == \"3\"\nassert solution('''\n2 1\n2 1\n10\n''') == \"-5\"\nassert solution('''\n2 2\n2 1\n1\n''') == \"4\"\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n2 1\n10\n''') == '3'\nassert solution('''\n2 1\n2 1\n30\n''') == '-5'"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '-5'\n\"\"\"\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('2 1') == '3'\nassert solution('2 1') == '3'\nassert solution('10') == '-5'"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0\n''') == '2015'\nassert solution('''\n4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999\n''') == '1999'"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0\n\"\"\") == \"2015\"\nassert solution(\"\"\"\n4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999\n\"\"\") == \"1989\"\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1999\"\nassert solution(\"2\") == \"2999\"\nassert solution(\"3\") == \"9999\"\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1999'\nassert solution('3') == '2999'\nassert solution('2') == '1999'\nassert solution('1') == '1989'\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1990'\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1991'\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1999'"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1989'\nassert solution('3') == '1999'\nassert solution('2') == '2999'\nassert solution('1') == '1991'\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2015\"\nassert solution(\"4\") == \"1999\"\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1985\""
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\nassert solution('''\n1\n5 10\n''') == '50'\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '180'\nassert solution('1') == '50'\nassert solution('3') == '21'\n\n\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n100 10\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n130\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n10\n10 10\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n80\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n100 100\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n90\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n100 100\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n90\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n1 1\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n7\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n10 1\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n10\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n10 10\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n10\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n3\n3 1\n2 2\n4 3\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n21\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"180\"\nassert solution(\"4\") == \"21\"\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '180'\nassert solution('1') == '21'\nassert solution('3') == '180'\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\n'''\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '50'\n\n\"\"\"\n\nimport sys\n\nn = int(input())\n\nw_list, h_list = [], []\nfor i in range(n):\n    w_list.append(int(input()))\n    h_list.append(int(input()))\n\nmin_wh = min(w_list)\nmin_hh = min(h_list)\n\nfor h in range(min_hh, -1, -1):\n    for w in range(min_wh, -1, -1):\n        # print(h, w)\n        area = 0\n        for i in range(n):\n            # print(w_list[i], h_list[i])\n            area += w_list[i] * h_list[i]\n        # print(area)\n        if area > 0:\n            print(area)\n            break\n        # print('-1')"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\nassert solution('''\n1\n5 10\n''') == '50'\nassert solution('''\n10 10\n10 10\n''') == '30'\n\n'''\n\u0417\u0430\u0434\u0430\u0447\u0430 5. \u0414\u0430\u043d\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0438 \u043e\u0431\u0449\u0438\u0439 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0443\u043d\u0434\u043e\u0432. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0433\u043e \u043d\u0430 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 (\u043f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044c, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0438\u0445 \u043f\u043e\u0431\u0435\u0434 \u0438 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b-\u0432\u043e \u0440\u0430\u0443\u043d\u0434\u043e\u0432).\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0418\u0432\u0430\u043d\u043e\u0432\u044b\u0439,17\n\u041f\u0435\u0442\u0440\u043e\u0432\u044b\u0439,15\n\u0421\u0438\u0434\u043e\u0440\u043e\u0432,22\n\u0420\u043e\u043c\u0430\u043d\u043e\u0432,18\n\u041f\u0435\u0442\u0440\u043e\u0432\u044b\u0439,22\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u041f\u0435\u0442\u0440\u043e\u0432,3\n\u0418\u0432\u0430\u043d\u043e\u0432,4\n\u0421\u0438\u0434\u043e\u0440\u043e\u0432,1\n\u0420\u043e\u043c\u0430\u043d\u043e\u0432,1\n'''\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n10 1\n20 2\n30 3''') == '180'\nassert solution('''3\n3 1\n2 2\n4 3''') == '21'\n'''\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\nassert solution('''\n3\n10 1\n20 2\n30 3\n''') == '50'\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"180\"\nassert solution(\"5\") == \"50\"\nassert solution(\"1\") == \"21\""
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1'\nassert solution('3 0') == '0'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('6 3') == '3'\nassert solution('4 1') == '2'\nassert solution('6 0') == '0'\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 1\\n2 1 4\\n\"\n) == \"1\"\n\nassert solution(\n    \"6 3\\n1 3 4 6 9 10\\n\"\n) == \"3\"\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1'\nassert solution('3 0') == '0'\nassert solution('6 3') == '3'\nassert solution('10 10 10') == '10'"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"5 0\") == \"0\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"5 0\") == \"0\"\nassert solution(\"6 3\") == \"3\""
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"10 0\") == \"0\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"5 1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"#Black&White\"\nassert solution(\"3 2\") == \"#Color\"\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\nW W\\nY Y\") == \" #Color\"\nassert solution(\"1 1\\nW\") == \" #Black&White\"\nassert solution(\"2 2\\nC M\\nY Y\") == \" #Black&White\"\nassert solution(\"2 2\\nW W\\nG G\") == \" #Color\"\nassert solution(\"3 2\\nC C\\nY Y\\nB G\") == \" #Black&White\"\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2\\nC M\\nY Y') == '#Color'\nassert solution('3 2\\nW W\\nW W') == '#Black&White'\nassert solution('5 5\\nWC WC MC\\nX X X X X X\\nX X X X X X\\nX X X X X X') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\nC M\nY Y''') == \"C\"\nassert solution('''2 2\nW W\nW W''') == \"W\"\n\nassert solution('''1 1\nW''') == \"B\"\n\nassert solution('''3 2\nW W\nW W\nB B''') == \"B\"\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"#Color\"\nassert solution(\"3 2\") == \"#Black&White\"\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\nC M\nY Y''') == '#Color'\nassert solution('''3 2\nW W\nW W\nB B''') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2\nC M\nY Y\n\"\"\") == \"#Color\"\nassert solution(\"\"\"\n3 2\nW W\nW W\nB B\n\"\"\") == \"#Black&White\""
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\nW W\\nW W') == '#Black&White'\nassert solution('3 2\\nC W\\nW Y') == '#Color'"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\nW W\n''') == '#Black&White', '1'\n\nassert solution('''\n3 2\nC M\nY Y\n''') == '#Color', '3'"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '#Black&White'\nassert solution('2 2') == '#Color'"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n-3 2 9 16\n''') == '6'\nassert solution('''\n5 2\n4 8 11 18 19\n''') == '5'\nassert solution('''\n5 6\n4 8 11 18 19\n''') == '1'\n\n'''\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\nassert solution([4, 2, 9, 16]) == \"6\"\nassert solution([5, 4, 8, 11, 18, 19]) == \"5\"\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n-3 2 9 16') == '6'\nassert solution('5 2\\n4 8 11 18 19') == '5'\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '5'\nprint(solution(input()))\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"6\"\nassert solution([[1,2,3], [4,5,6], [7,8,9], [10,11,12], [13,14,15], [16,17,18]]) == \"5\"\nassert solution([[0,1,2], [3,4,5], [6,7,8], [9,10,11], [12,13,14], [15,16,17], [18,19,20]]) == \"5\"\nassert solution([[0,1], [2,3], [4,5], [6,7], [8,9], [10,11], [12,13], [14,15]]) == \"6\"\nassert solution([[0,1], [2,3], [4,5], [6,7], [8,9]]) == \"1\""
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n4 8 11 18 19\") == \"6\"\nassert solution(\"3 3\\n-2 2 9 16\") == \"6\"\nassert solution(\"5 2\\n4 8 11 18 19\") == \"5\"\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 2') == '5'"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n4 8 11 18 19\") == \"5\"\nassert solution(\"4 3\\n-3 2 9 16\") == \"6\"\n"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '2'\nassert solution('6') == '4'\nassert solution('8') == '3'\n"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 5 5 2\\n\") == \"2\"\nassert solution(\"5\\n6 3 4 1 5\\n\") == \"5\"\nassert solution(\"8\\n4 4 4 2 2 100 100 100\\n\") == \"4\"\nassert solution(\"6\\n10 10 50 10 50 50\\n\") == \"4\"\nassert solution(\"6\\n10 10 50 10 50 50\\n\") == \"4\""
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 5 5 2\\n\") == \"2\"\nassert solution(\"5\\n6 3 4 1 5\\n\") == \"5\"\nassert solution(\"8\\n4 4 4 2 2 100 100 100\\n\") == \"4\"\nassert solution(\"6\\n10 10 50 10 50 50\\n\") == \"4\"\n"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"3\"\n"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 5 5 2\\n') == '2'\nassert solution('5\\n6 3 4 1 5\\n') == '5'\nassert solution('8\\n4 4 4 2 2 100 100 100\\n') == '3'\nassert solution('6\\n10 10 50 10 50 50\\n') == '4'"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 5 5 2\\n\") == \"2\"\nassert solution(\"5\\n6 3 4 1 5\\n\") == \"5\"\nassert solution(\"8\\n4 4 4 2 2 100 100 100\\n\") == \"3\"\nassert solution(\"6\\n10 10 50 10 50 50\\n\") == \"4\"\nprint(\"You passed all tests!\")"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '4'\nassert solution('8') == '3'\nassert solution('10') == '9'"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 5 2') == '2'\nassert solution('5 6 3 4 1 5') == '4'\nassert solution('8 6 3 4 1 5') == '5'\nassert solution('6 10 10 50 10 50') == '3'"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 5 5 2\n''') == '2'\nassert solution('''\n5\n6 3 4 1 5\n''') == '5'\nassert solution('''\n8\n4 4 4 2 2 100 100 100\n''') == '3'\nassert solution('''\n6\n10 10 50 10 50 50\n''') == '4'\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"6\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 11 2 8') == '4'\nassert solution('4 1 8 8 8') == '6'\nassert solution('2 7 6') == '0'\nassert solution('10') == '0'\n\n\n'''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'''"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 1 11 2 8\n''') == '4'\nassert solution('''2\n7 6\n''') == '0'\nassert solution('''4\n1 8 8 8\n''') == '6'\nassert solution('''3\n1 9 9 9\n''') == '3'\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 11 2 8\") == \"4\"\nassert solution(\"4\\n7 6\") == \"0\"\nassert solution(\"2\\n7 6\") == \"6\"\n\n\n\"\"\""
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 11 2 8') == '4'\nassert solution('4') == '0'\nassert solution('2') == '0'\nassert solution('20') == '24'\n\"\"\"\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 11 2 8') == '4'\nassert solution('4 1 8 8 8') == '6'\nassert solution('2 7') == '0'\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution(\"./inputs/input00.txt\") == \"6\"\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5 1 11 2 8\n''') == '4'\nassert solution('''4\n1 8 8 8\n''') == '6'\nassert solution('''2\n7 6\n''') == '0'\nprint(solution('''10\n1 1 3 5 2 2 5 2 2 4 6 6 1 5 1 3\n'''))\nprint(solution('''10\n1 1 3 5 2 2 5 2 2 4 6 6 1 5 1 3\n'''))\nprint(solution('''10\n1 1 3 5 2 2 5 2 2 4 6 6 1 5 1 3\n'''))\nprint(solution('''10\n1 1 3 5 2 2 5 2 2 4 6 6 1 5 1 3\n'''))"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 2, 3, 2, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 11 2 8') == '4'\nassert solution('4 1 8 8 8') == '6'\nassert solution('2 7 6') == '0'\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'NO'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'NO'\nassert solution('10') == 'YES'\nassert solution('100') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"NO\"\nassert solution(\"12ab\") == \"NO\"\nassert solution(\"12abcd\") == \"NO\"\nassert solution(\"12abcdab\") == \"YES\"\nassert solution(\"12abcdabcd\") == \"YES\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"YES\"\nassert solution(\"abcdefghi\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"aab\") == \"NO\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\", \"Input error\"\nassert solution(\"codeforces\") == \"NO\", \"Input error\"\nassert solution(\"codeforcesabcdefor\") == \"NO\", \"Input error\"\nassert solution(\"codeforcesa\") == \"YES\", \"Input error\"\nassert solution(\"codeforcesabc\") == \"YES\", \"Input error\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'NO'\nassert solution('10') == 'YES'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n\nassert solution(\"10\") == \"NO\"\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1234\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n\n\"\"\"\n\nn = int(input())\nstring = input()"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9\n''') == '+------------------------+\\n|O.O.O.O.O.O.O.O.O.|D|)\\n|O.O.O.O.O.O.O.O.O.|.|\\n|O................|\\n|O.O.O.O.O.O.O.O.|.|)\\n+------------------------+\\n'''"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"+------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.|D|)\\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.|\\n|O.......................|\\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.|\\n|O.O.O.#.#.#.#.#.#.#.#.#.#.#.O.|D|)\\n|O.O.O.#.#.#.#.#.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.#.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.#.#.O.|.|\\n|O.O.O.#.#.#.O.|.|\\n|O.O.O.#.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O.O.O.O.|.|\\n|O.O."
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '''\n+------------------------+\n|O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''\n"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''9''') == '+------------------------+\\n|O.O.O.#.#.#.#.#.#.#.|D|)\\n|O.O.O.#.#.#.#.#.#.|.|\\n|O.......................|\\n|O.O.#.#.#.#.#.#.#.|.|)\\n+------------------------+\\n''' == '''+------------------------+\n|
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9\n\n''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''\nassert solution('''20\n\n''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''9\n\nOutput\n+------------------------+\n|O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''\nassert solution('''20\n\nOutput\n+------------------------+\n|O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"+------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\\n|O.O.O.O.O.O.O.O.O.O.O.|.|\\n|O.......................|\\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\\n+------------------------+\"\nassert solution(\"20\") == \"+------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\\n|O.O.O.O.O.O.O.O.O.O.O.|.|\\n|O.......................|\\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\\n+------------------------+\"\nassert solution(\"41\") == \"-\"*10 + \"\\n\"*9 + \"+------------------------+\\n\" + \"|\" + \"-\"*8 + \"|D|\" + \"-\"*7 + \"|.|\" + \"-\"*6 + \"|) |\\n\" + \"|\" + \"-\"*7 + \"|.|\" + \"-\"*5 + \"|) |\\n\" + \"|\" + \"-\"*6 + \"|.|\" + \"-\"*4 + \"|) |\\n\" + \"|\" + \"-\"*5 + \"|.|\" + \"-\"*3 + \"|) |\\n\" + \"|\" + \"-\"*4 + \"|.|\" + \"-\"*2 + \"|) |\\n\" + \"|\" + \"-\"*3 + \"|.|\" + \"-\"*1 + \"|) |\\n\" + \"|\" + \"-\"*2 + \"|.|\" + \"-\"*0 + \"|) |\\n\" + \"|\" + \"-\"*1 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \"|\" + \"-\"*0 + \"|.|\" + \"-\"*0 + \"|.|\\n\" + \""
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"###\"\nassert solution(\"10\") == \".....\"\nassert solution(\"20\") == \".....#\"\n"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples.sample_stdin_0) == '''+------------------------+\n|
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''9\n\nOutput\n+------------------------+\n|O.O.O.#.#.#.#.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.#.|.|\n|O.......................|\n|O.O.#.#.#.#.#.#.#.#.#.|.|)\n+------------------------+''') == '''\n+------------------------+\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''\nassert solution('''20\n\nOutput\n+------------------------+\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+''') == '''\n+------------------------+\n|O.O.O.O.O.O.O.O.O.O.O.|D|)\n|O.O.O.O.O.O.O.O.O.O.O.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.|.|)\n+------------------------+'''\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 1 1\n''') == '9'\nassert solution('''\n77 7 7\n''') == '7'\nassert solution('''\n114 5 14\n''') == '6'\nassert solution('''\n1 1 2\n''') == '0'\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\nassert solution('''1 1 2''') == '0'\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 1 1''') == '8'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\nassert solution('''1 1 2''') == '0'\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 1 1') == '9'\nassert solution('77 7 7') == '7'\nassert solution('114 5 14') == '6'\nassert solution('1 1 2') == '0'\nassert solution('100 1000') == '1'\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\nassert solution('''1 1 2''') == '0'\nprint(solution('''114 5 14'''))"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('77 7 7') == '7'\nassert solution('114 5 14') == '6'\nassert solution('1 1 2') == '0'\nprint('All tests passed!')\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9 1 1\") == \"9\"\nassert solution(\"77 7 7\") == \"7\"\nassert solution(\"114 5 14\") == \"6\"\nassert solution(\"1 1 2\") == \"0\"\nassert solution(\"8 2 5\") == \"0\"\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 1 1') == '9'\nassert solution('77 7 7') == '7'\nassert solution('114 5 14') == '6'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"77 7 7\") == \"7\"\nassert solution(\"101 0\") == \"0\"\nassert solution(\"7\") == \"1\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n''') == '10'\nassert solution('''\n123\n''') == '113'\nassert solution('''\n''') == '0'\n''') == '0'"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"123\") == \"113\"\nassert solution(\"1234\") == \"1122\"\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('123') == '113'\nassert solution('0') == '0'\n\"\"\"\nimport collections\n\nN = int(input())\n\ncount = 0\nfor i in range(N + 1):\n    if i == 0:\n        continue\n    n = str(i)\n    if n[0] == '0' or n[1] == '0':\n        continue\n    \n    if collections.Counter(n)['x'] == 2 and collections.Counter(n)['y'] == 2:\n        count += 1\n\nprint(count)"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"123\") == \"113\"\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('1000') == '967'\nassert solution('123') == '113'"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '10'\nassert solution('123') == '113'\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '''\n5\n'''\nassert solution('''\n10\n''') == '''\n10\n'''\nassert solution('''\n123\n''') == '''\n113\n'''\nassert solution('''\n1234\n''') == '''\n10\n'''\nassert solution('''\n10000000\n''') == '''\n10\n'''\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('123') == '113'\nassert solution('5') == '0'\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 6 18''') == '3'\nassert solution('''1 2 3 4''') == '0'\nassert solution('''1 1 2 3 4''') == '4'\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 6 18') == \"3\"\nassert solution('2 5 6 6 7 7') == \"1\"\nassert solution('2 4 10 8 8') == \"2\"\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\nprint('Test passed')"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 6 18') == \"3\"\nassert solution('2 3 4 5 7') == \"4\"\nassert solution('1 1 0 0') == \"0\"\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 6, 6, 18]) == 3\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 6 18\") == \"3\"\nassert solution(\"2 3 6 18\") == \"3\"\nassert solution(\"4 4 6 18\") == \"1\"\nassert solution(\"7 2 4 6 18\") == \"4\"\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 6 18') == '3'"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 6 18''') == '3'\nassert solution('''4 3 7 15''') == '5'\nassert solution('''1 2 3 4''') == '4'\nassert solution('''4 4 7 15''') == '5'\nassert solution('''1 2 3 4''') == '4'\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 6 18') == '3'\nassert solution('1 2 3 8') == '4'\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 6 18\") == 3\nassert solution(\"1 2 3 4 6 18\") == 3\nassert solution(\"1 2 3 5 6 18\") == 4\nassert solution(\"1 2 3 5 8 10 12\") == 4\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '10'\nassert solution('3 5') == '3'\nassert solution('5 5') == '3'\nassert solution('1 1000') == '0'\nassert solution('3 3') == '1'"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '10'\nassert solution('3 5') == '3'\nassert solution('5 5') == '1'\nassert solution('1 1000') == '0'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"10\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"1 1000\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n3 3 3 3 3') == '10'\nassert solution('5 5\\n1 2 4') == '3'\nassert solution('3 5\\n1 2 4') == '9'\nassert solution('3 3\\n3 1 1') == '1'\n\n\n\"\"\""
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n3 3 3 3 3''') == '10'\nassert solution('''5 5\n2 3 1 4 4''') == '3'\nassert solution('''1 1000\n548''') == '0'\nassert solution('''3 3\n3 1 1''') == '1'"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"10\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"10\", \"First example\"\nassert solution(\"3 5\") == \"3\", \"Second example\"\nassert solution(\"3 3\") == \"1\", \"Third example\""
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '10'\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 6\n3 3 3 3 3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3 5\n1 2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 5\n2 3 1 4 4\n\"\"\") == \"9\"\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 6\n3 3 3 3 3\n''') == '10'\nassert solution('''5 5\n2 3 1 4 4\n''') == '3'\nassert solution('''1 1000\n548\n''') == '0'\nassert solution('''3 3\n3 1 1\n''') == '1'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 1\n''') == 'yes'\nassert solution('''4\n2 1 3 4\n''') == 'no'\nassert solution('''4\n3 1 2 4\n''') == 'no'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"yes 1\"\nassert solution(\"4\") == \"yes 1 2 3\"\nassert solution(\"3\") == \"no 1 3\""
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 2 1\\n') == 'yes\\n1 3'\nassert solution('4\\n2 1 3 4\\n') == 'no\\n'\nassert solution('2\\n1 2\\n') == 'yes\\n1 1'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'yes 1'\nassert solution('4') == 'no'\nassert solution('3') == 'yes 1 3'\nassert solution('5') == 'no'\nassert solution('6') == 'yes 2 3'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n''') == 'yes'\nassert solution('''\n4\n2 1 3 4\n''') == 'no'\nassert solution('''\n4\n3 1 2 4\n''') == 'no'\nassert solution('''\n4\n1 2 3 4\n''') == 'no'\nassert solution('''\n5\n3 1 2 4 5\n''') == 'yes'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"yes 1 3\"\n\nassert solution(input_) == \"no 1 1\"\n\nprint(solution(input_))\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"yes 1 3\"\nassert solution(sys.stdin.read()) == \"no 1 1\"\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 2 1\\n') == 'yes\\n1 3'\nassert solution('4\\n2 1 3 4\\n') == 'no'\nassert solution('4\\n3 1 2 4\\n') == 'yes\\n1 2'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 2, 1]) == \"yes\"\nassert solution([3, 1, 2]) == \"no\"\nassert solution([2, 1, 3]) == \"yes\"\nassert solution([3, 1, 2, 4]) == \"no\"\nassert solution([2, 1, 3, 4]) == \"no\"\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 2 1') == 'yes\\n1 3'\nassert solution('4\\n2 1 3 4') == 'no\\n'\nassert solution('4\\n3 1 2 4') == 'yes\\n1 1'\nassert solution('1\\n1\\n1') == 'yes\\n0 1'\nassert solution('1\\n2\\n3') == 'no\\n'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n3\n3\n3\n5\n6\n''') == '6'\nassert solution('''10 2\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 2''') == '6'\nassert solution('''3 5''') == '-1'\nprint(solution('''1 10'''))\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '6'\nassert solution('10 2') == '6'\nassert solution('3 5') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"6\"\nassert solution(\"10 2\") == \"6\"\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == '6'\nassert solution(\"3 5\") == '-1'"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input := '3 2') == '6'\nassert solution(input := '1 5') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"6\"\nassert solution(\"3 5\") == \"-1\""
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"8\") == \"6\"\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"11\") == \"14\"\nassert solution(\"22\") == \"20\"\n\n'''\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n4\n''') == '8'\nassert solution('''\n11\n''') == '14'\nassert solution('''\n22\n''') == '20'\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4]) == '8'\nassert solution([11]) == '14'\nassert solution([22]) == '20'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4]) == \"8\"\nassert solution([11]) == \"14\"\nassert solution([22]) == \"20\"\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"20\"\n\"\"\"\n\nfrom itertools import combinations_with_replacement"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(4) == \"8\"\nassert solution(11) == \"14\"\nassert solution(22) == \"20\"\n\"\"\""
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"11\") == \"14\"\nassert solution(\"22\") == \"20\"\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4]) == \"8\"\nassert solution([11]) == \"14\"\nassert solution([22]) == \"20\"\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 2 5\") == \"3\"\nassert solution(\"500000 500000 500000 500000\") == \"1\"\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 2 5\") == \"3\"\nassert solution(\"500000 500000 500000 500000\") == \"1\"\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 2 5\") == \"3\"\nassert solution(\"500000 500000 500000 500000\") == \"1\"\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"4\"\nassert solution(\"1 2 2 5\\n\") == \"3\"\nassert solution(\"500000 500000 500000 500000\\n\") == \"1\""
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == '3'\nassert solution() == '1'"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4\n1 2 2 5\n500000 500000 500000 500000''') == '4'\nassert solution('''1 2 2 5\n500000 500000 500000 500000''') == '3'\nassert solution('''1 2 2 5\n1 2 2 5''') == '1'\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4\n''') == '4'\nassert solution('''\n1 2 2 5\n''') == '3'\nassert solution('''\n500000 500000 500000 500000\n''') == '1'\nassert solution('''\n1 1 1 1\n''') == '0'\nassert solution('''\n1 1 1 1 1\n''') == '1'\n'''\nYou can find more tests in \"test_solution.py\"\n''') == '0'\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 2 5\n1 2 2 5''') == \"4\"\nassert solution('''1 2 2 5\n1 2 2 5''') == \"3\"\nassert solution('''1 1 1 5\n1 1 1 5''') == \"1\"\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 4 10007') == '5563'"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 4 10007''') == '5563'\nassert solution('''1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4 10007\") == \"5563\"\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4 10007\") == \"5563\"\nassert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"7 3 4 10007\") == \"5563\"\nassert solution(\"11 3 4 10007\") == \"5563\"\nassert solution(\"15 3 4 10007\") == \"5563\"\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"5 1 5 1006\") == \"5501\"\nassert solution(\"5 3 4 1007\") == \"5561\"\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"1 0 0 5 1\") == \"1\"\nassert solution(\"6 2 4 0 0\") == \"1\"\nassert solution(\"3 6 9 4\") == \"3\"\nassert solution(\"5 8 6 7\") == \"1\"\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('5 5 6 5 10007') == '3'\nassert solution('5 10 5 10007') == '5563'\nassert solution('5 5 5 5 10007') == '5563'\nassert solution('5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 4 10007') == '5563'"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('5 3 5 8') == '15'\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('3 3 4 10007') == '5563'\nassert solution('2 1 4 10007') == '1'\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 1 5 5 5\n''') == '15'\nassert solution('''\n8 4 3 2 10 5 2\n''') == '32'\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 1 1 5 5 5\n''') == '15'\nassert solution('''\n8 4 3 2 10 5 2\n''') == '32'\nassert solution('''\n4 4 4 3 3\n''') == '60'\nassert solution('''\n1 1 1 1 1 2 2\n''') == '24'\nassert solution('''\n1 1 1 1 1 1 1\n''') == '36'\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 4 3 2 10 5 2\n''') == '32'\nassert solution('''\n1 1 1 1 5 5 5\n''') == '15'\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 5 5 5\") == \"15\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\""
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 5 5 5') == \"15\"\nassert solution('8 4 3 2 10 5 2') == \"32\""
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1 1 1 5 5 5\n\"\"\") == \"15\"\nassert solution(\"\"\"\n8 4 3 2 10 5 2\n\"\"\") == \"32\"\nassert solution(\"\"\"\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 3 5 5 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2 2 2 2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1 5 5 5') == '15'\nassert solution('8 4 3 2 10 5 2') == '32'"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"15\"\nprint(solution(input_string))"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1 1 5 5 5\n''') == '15'\nassert solution('''\n8 4 3 2 10 5 2\n''') == '32'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '8'\nassert solution('2 12') == '9'\nassert solution('2 7') == '6'"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '8'\nassert solution('2 12') == '9'\nassert solution('2 7') == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '8'\nassert solution(input_data) == '9'\nassert solution(input_data) == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '8'\nassert solution('2 12') == '9'\nassert solution('2 7') == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 10\n4 6 7\n''') == '8'\nassert solution('''2 12\n1 10\n''') == '9'\nassert solution('''2 7\n3 4\n''') == '6'\nprint('All tests passed!')"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == stdout_\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '8'\nassert solution('2 12') == '9'\nassert solution('2 7') == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10') == '8'\nassert solution('2 12') == '9'\nassert solution('2 7') == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 10\n4 6 7\n''') == '8'\nassert solution('''2 7\n3 4\n''') == '6'\nassert solution('''2 7\n4 5\n''') == '5'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n4 6 7\n''') == '8'\nassert solution('''\n2 12\n1 10\n''') == '9'\nassert solution('''\n2 7\n3 4\n''') == '6'"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n2\n1\n2\n\n1\n4\n4 1 3\n4\n2 3 4 5\n4\n2 3 4 5 6\n\n\"\"\"\n) == \"-1\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n\n1\n\n\"\"\"\n) == \"1 2\"\n\nassert solution(\n\"\"\"\n5\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n\n\"\"\"\n) == \"1 3 5 2 4 7 6 8 9\"\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1\n2\n3\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n4\n1\n2\n3\n4\n5\n6\n7\n8\n\"\"\") == \"7 2 1 5 6\"\nassert solution(\"\"\"\n4\n1\n2\n3\n5\n6\n7\n8\n\"\"\") == \"7 2 1 5 6\"\nassert solution(\"\"\"\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"9 10 1 5 8 2 6 7 3 4\"\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n\"\"\"\n) == \"1 2 3 4 5 6 7 8\"\n\nprint(solution(\n\"\"\"\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n\"\"\"\n))\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == \"2n\"\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == \"1\"\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == \"2n\"\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"-1\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4 1 3 5 6 7 9 2 4 8 10\"\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '2 3 4 5 6 7 8 1 5 1 2 4 3 3 6'\n\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 5 7 2 8 2 3 4 3 6 5 1 4 1 3 2 4'\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2\n2\n2\n2\n''') == '1 2'\n\nassert solution('''\n1\n2\n3\n4\n5\n''') == '4 5 1 2 3'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n''') == '1 3 5 2 4 6 7 8 9 10 11 12 13 14 15'\n\nassert solution('''\n7\n7\n7\n7\n7\n7\n7\n7\n''') == '7 7 7 7 7 7 7 7 7 7 7'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n''') == '1 3 5 2 4 6 7 8 9 10 11 12 13 14 15'"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '4 5 1 2 3 6'\nassert solution('5') == '1 5 7 2 8'\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '-1'\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 5') == '7'\nassert solution('2 4 6') == '6'\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n\n''') == '2'\n\nassert solution('''\n3\n2 4 6\n\n''') == '6'\n\nassert solution('''\n5\n45 12 27 30 18\n\n''') == '15'\n\nassert solution('''\n13\n6 8 10 12 23 7 26 3 19 15 14 0 1 9 27 0 5 17 4 22 21 10 18 19 1 27\n\n''') == '0'"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n2 4 6\") == \"6\"\nassert solution(\"5\\n45 12 27 30 18\") == \"15\"\n\n\n'''\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n1 2''') == '2'\nassert solution('''3\n2 4 6''') == '6'\nassert solution('''5\n45 12 27 30 18''') == '15'"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('5') == '15'\nassert solution('7') == '26'\nprint('all tests passed')\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('5') == '15'\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n''') == '2'\nassert solution('''4\n1 3 2 5\n''') == '7'\nassert solution('''5\n10 10 20 20 30\n''') == '30'\nassert solution('''6\n1 2 2 2 3\n''') == '5'"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 2, 1, 1]) == 2\nassert solution([3, 2, 1]) == 1\nassert solution([1, 2]) == 1\nassert solution([5, 4, 3, 2, 1]) == 10\nassert solution([12, 18]) == 18\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n3\n2 4 6\n''') == '6'\nassert solution('''\n5\n45 12 27 30 18\n''') == '15'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'NO'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n\n'''\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10') == 'NO'\nassert solution('20') == 'YES'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == \"NO\"\nassert solution('2') == \"YES\"\nassert solution('10') == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"11\") == \"YES\"\n\nsolution(input())"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('10') == 'YES'\nassert solution('20') == 'YES'\nassert solution('100') == 'YES'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nFSSF\\n\") == \"NO\"\nassert solution(\"2\\nSF\\n\") == \"YES\"\nassert solution(\"10\\nFFFFFFFFFF\\n\") == \"NO\"\nassert solution(\"10\\nSSFFSFFSFF\\n\") == \"YES\"\nassert solution(\"10\\nFSSFFFFFF\\n\") == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"YES\""
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nassert solution('3 3') == '0'\nassert solution('4 0') == '24'"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 1\n''') == '16'\nassert solution('''\n10 2\n''') == '0'\nassert solution('''\n5 3\n''') == '0'\n"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '6'\nassert solution('3 3') == '0'\nassert solution('4 0') == '24'\nassert solution('1337 42') == '807905441'"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 0\") == \"24\"\nprint(solution(input()))\n"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1337 42\") == \"807905441\"\nassert solution(\"1337 1337 42\") == \"13607225552097\""
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution("
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '0'\nassert solution(input()) == '24'\n"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6'\nassert solution('3 3') == '0'\nassert solution('4 0') == '24'"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n\n''') == '6'\nassert solution('''\n3 3\n\n''') == '0'\nassert solution('''\n1337 42\n\n''') == '807905441'\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"1.00000000000000000000\"\nassert solution(input_) == \"0.50000000000000000000\"\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n2\n2 0 1\n0 2 2\n''') == '1.00000000000000000000'\nassert solution('''\n1 3\n3\n3 3 2\n-2 3 6\n-2 7 10\n''') == '0.50000000000000000000'''\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('2 2 2 2') == '1.00000000000000000000'\nassert solution('2 2 2 2 3') == '0.50000000000000000000'\n\n\n'''"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0\") == \"1.00000000000000000000\"\nassert solution(\"1 3\") == \"0.50000000000000000000\"\nassert solution(\"2 2\") == \"0.50000000000000000000\"\nassert solution(\"2 3\") == \"1.00000000000000000000\"\nassert solution(\"3 3\") == \"1.00000000000000000000\"\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0\") == \"1.00000000000000000000\"\nassert solution(\"1 3\") == \"0.50000000000000000000\"\nassert solution(\"3\") == \"0.000000000000000000\"\nassert solution(\"1 1\") == \"1.00000000000000000000\"\nassert solution(\"1 2\") == \"1.00000000000000000000\"\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('3') == '0.00000000000000000000'\nassert solution('0 1') == '1.00000000000000000000'\nassert solution('2 1') == '0.50000000000000000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == '4'\nassert solution('''3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == '4'\nassert solution('''5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == '6'\nassert solution('''3\n0 1\n1 2\n0 3\n''') == '2'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''7 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n1 6 6\n''') == '2'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '2'\nassert solution('''10\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n1 7 8\n1 9 5\n1 1 7\n1 6 2\n0 8 3\n0 20 10\n1 5 5\n1 7 8\n1 9 5\n1 1 7\n1 6 2\n0 8 3\n0 20 10''') == '5'\nassert solution('''10\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n1 7 8\n1 9 5\n1 1 7\n1 6 2\n0 8 3\n0 20 10\n1 5 5\n1 7 8\n1 9 5\n1 1 7\n1 6 2\n0 8 3\n0 20 10''') == '4'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 2\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\"\"\") == \"5\"\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == '4'\nassert solution('''\n5 1\n1 3 1\n''') == '3'\nassert solution('''\n5 2\n2 1 1\n''') == '2'\nassert solution('''\n5 2\n1 2 1\n''') == '2'\nassert solution('''\n5 2\n2 2 1\n''') == '2'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\\n\") == \"4\"\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == \"4\"\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5') == '4'\nassert solution('5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\\n1 6 6') == '3'\nassert solution('5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\\n1 6 6\\n2 2 2') == '2'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 2\n1 3 3\n1 5 5\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 2\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 4\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2 3\n1 2 3\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 1\n2 3 1\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 1\n3 2 1\n2 4 2\n3 3 1\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2 1\n1 2\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(6) == '1 2 4'\nassert solution(6) == '1 2 6'\nassert solution(7) == '1 2 3'"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2 2 1 1 4 6''') == '1 2 4'\nassert solution('''3\n2 2 1''') == '-1'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '-1'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 1 1 2 2\n\n4\n1 1 1 2 3\n\n5\n1 1 1 2 2 3\n\n6\n1 1 1 2 2 3 4\n''') == '1 2 3 4'\n\nassert solution('''\n4\n1 1 1 1 1\n\n4\n1 1 1 1 1\n\n5\n1 1 1 1 1 1\n\n6\n1 1 1 1 1 1 1\n''') == '1 1 1 1 1'\n\nassert solution('''\n5\n1 1 2 3 4\n\n5\n1 1 1 1 1 2\n\n6\n1 1 1 1 1 1 1\n\n7\n1 1 1 1 1 1 1 1\n\n8\n1 1 1 1 1 1 1 1 2\n\n9\n1 1 1 1 1 1 1 1 1 1\n''') == '1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1 2 2 2\n''') == '1 2 4'\nassert solution('''\n2 2 1 1 4 6\n''') == '1 2 6'\nassert solution('''\n6\n1 1 1 2 2 2\n''') == '1 2 4'\nassert solution('''\n6\n2 2 1 1 4 6\n''') == '1 2 6'\nassert solution('''\n6\n1 1 1 1 1 2 2 2\n''') == '1 2 4'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1 2 2 2\n''') == '-1'\nassert solution('''\n2 2 1 1 4 6\n''') == '1 2 4'\nprint(solution('''\n6\n1 1 1 2 2 2\n'''))\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 1 4 6') == '1 2 4'\nassert solution('1\\n1 1') == '1'\nassert solution('1\\n4 4') == '4'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 2 2 2') == '-1'\nassert solution('6') == '2 2 1 1 4 6'\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\nassert solution('4 5 6 7 8 9 10') == '4 5 6 7 8 10'"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacaba') == '2'\nassert solution('zzzzz') == '1'\nassert solution('abcde') == '3'\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n\"\"\"\nfrom collections import Counter\n\na = input()\n\ncnt = Counter(a)\nresult = -1\n\nfor i in range(1, len(a)+1):\n    if result < i:\n        continue\n    tmp = Counter(a[i-1::i])\n    if tmp.most_common(1)[0][0] == a[i-1]:\n        result = i\nprint(result)\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"2\"\nassert solution(\"zzzzz\") == \"1\"\nassert solution(\"abcde\") == \"3\"\nassert solution(\"zaz\") == \"1\""
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacaba') == '2'\nassert solution('zzzzz') == '1'\nassert solution('abcde') == '3'\nassert solution('aaaabbaa') == '2'\nassert solution('abaaaaa') == '3'\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == '2'\nassert solution('zzzzz') == '1'\nassert solution('abcde') == '3'\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"zzzzz\") == \"1\"\nassert solution(\"abcde\") == \"3\"\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"2\"\nassert solution(\"zzzzz\") == \"1\"\nassert solution(\"abcde\") == \"3\""
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    'abacaba') == '2'\nassert solution(\n    'zzzzz') == '1'\nassert solution(\n    'abcde') == '3'\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"2\"\nassert solution(\"zzzzz\") == \"1\"\nassert solution(\"abcde\") == \"3\"\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"2\"\nassert solution(\"zzzzz\") == \"1\"\nassert solution(\"abcde\") == \"3\""
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n''') == '10'\nassert solution('''\n15 6\n''') == '38'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n\") == \"10\\n\"\nassert solution(\"15 6\\n\") == \"38\\n\"\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n''') == '10'\nassert solution('''15 6\n''') == '38'\nassert solution('''10 8\n''') == '12'"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n''') == '10'\nassert solution('''15 6\n''') == '38'\nassert solution('''3 5\n''') == '10'\n\nassert solution('''1 10\n''') == '10'\n\nassert solution('''3 6\n''') == '5'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"10\"\nassert solution(\"4 8\") == \"27\"\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '10'\nassert solution('15 6') == '38'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 5') == '10'\nassert solution('15 6') == '38'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n''') == '10'\nassert solution('''\n15 6\n''') == '38'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('15 6') == '38'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n2 3 2 1\n''') == '3'\nassert solution('''\n3 4\n1 2 1\n''') == '1'\nassert solution('''\n4 4\n2 3 2 1\n''') == '3'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n') == '1'\nassert solution('4 3\\n') == '3'\nassert solution('5 7\\n') == '2'\nassert solution('7 7\\n') == '1'\nassert solution('4 4\\n') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n2 3 2 1\n''') == '3'\nassert solution('''3 4\n1 2 1\n''') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n2 3 2 1\n''') == '3'\nassert solution('''3 4\n1 2 1\n''') == '1'\nassert solution('''8 3\n1 2 2 2 3 3 2 1\n''') == '2'\nassert solution('''1 2\n2\n''') == '2'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 1\n''') == '1'\nassert solution('''3 4\n1 2 1\n''') == '1'\nassert solution('''3 3\n2 2 1\n''') == '2'\nassert solution('''3 4\n3 2 1\n''') == '1'\nassert solution('''100 4\n1 2 2 1\n''') == '2'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n3 2 2 1 1\n''') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 1\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n    6 8\n    5 3 3 1 3 2 1\n    \"\"\"\n) == \"4\"\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n\") == \"3\\n\"\nassert solution(\"1 2 1\\n\") == \"1\\n\"\nassert solution(\"3 4\\n2 2 1 1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('4 3') == '3'\nassert solution('4 4') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3'\nassert solution('2 3 2 1') == '1'\nassert solution('2') == '1'\nassert solution('2 0') == '2'\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('2') == '0'"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nXS\\nXS\\nM\\n') == '2'\nassert solution('2\\nXXXL\\nXXL\\nXXL\\nXXXS\\n') == '1'\nassert solution('2\\nM\\nXS\\nXS\\nM\\n') == '0'"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\nXS\nXS\nM\nXL\nS\"\"\") == \"2\"\n\nassert solution(\"\"\"2\nXXXL\nXXL\"\"\") == \"1\"\n\nassert solution(\"\"\"3\nM\"\"\") == \"0\""
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nXS\\nXS\\nM\") == \"2\"\nassert solution(\"2\\nXXXL\\nXXL\\nXXL\\nXXXS\") == \"1\"\nassert solution(\"2\\nM\") == \"0\"\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''XS\nXS\nM\nXL\nS\nXS''') == '2'\nassert solution('''M\nXS\nXS\nM\n''') == '1'\nassert solution('''XS\nXS\nM\nXL\nS\nXS''') == '0'\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('2') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nXS\nXS\nM\nXL\nS\nXS\n''') == \"1\"\nassert solution('''\nXS\nXS\nM\nXL\nS\nXS\n''') == \"0\"\nassert solution('''\nXXXL\nXXL\nXXL\nXXXS\n''') == \"1\"\n\n'''"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nXS\\nXS\\nM\") == \"2\"\nassert solution(\"2\\nXXXL\\nXXL\\nXXL\\nXXXS\\n\") == \"1\"\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 3 2\n''') == '1/3'\nassert solution('''4 3 2 2\n''') == '1/4'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == \"1/3\"\nassert solution(input_2) == \"1/4\"\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 3 2\n''') == '1/3'\nassert solution('''\n4 3 2 2\n''') == '1/4'\nassert solution('''\n1 2 3 4\n''') == '1/4'\nassert solution('''\n5 1 3 2\n''') == '1/3'\nassert solution('''\n5 5 4 3\n''') == '5/7'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 3 2\n''') == '1/3'\nassert solution('''\n4 3 2 2\n''') == '1/4'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 3 2\") == \"1/3\"\nassert solution(\"4 3 2 2\") == \"1/4\"\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\n\n'''\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\n"
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\n"
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('4') == '0'"
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nRRG') == \"1\"\nassert solution('5\\nRRRRR') == \"4\"\nassert solution('4\\nBRBG') == \"0\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\"\n\"\"\""
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\nprint(solution(input))\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"3\"\n\n\nfrom collections import deque\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''12\n''') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n') == '1'\nassert solution('12\\n') == '3'\n\n\"\"\""
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12\n''') == '3'\nassert solution('''5\n''') == '1'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"3\"\n\n'''\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"3\"\n\"\"\""
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"35\"\nassert solution() == \"90\"\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''9\n15 20 30 40 50 60 70 80 90''') == '90'\nassert solution('''9\n16 20 30 40 50 60 70 80 90''') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '35'\nassert solution('9') == '90'\nassert solution('3') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n7 20 88\n''') == \"35\"\nassert solution('''\n9\n16 20 30 40 50 60 70 80 90\n''') == \"90\"\nassert solution('''\n9\n15 20 30 40 50 60 70 80 90\n''') == \"90\"\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '35'\nassert solution('9') == '90'\nassert solution('9') == '90'"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n7 20 88\n''') == '35'\nassert solution('''9\n16 20 30 40 50 60 70 80 90\n''') == '90'\nassert solution('''9\n15 20 30 40 50 60 70 80 90\n''') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n7 20 88\n''') == '35'\nassert solution('''9\n15 20 30 40 50 60 70 80 90\n''') == '90'\nassert solution('''9\n1 2 3 4 5 6 7 8 9\n''') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n7 20 88\n\nOutput\n35\n''') == \"35\"\nassert solution('''9\n15 20 30 40 50 60 70 80 90\n\nOutput\n90\n''') == \"90\"\nassert solution('''9\n15 20 30 40 50 60 70 80 90\n\nOutput\n90\n''') == \"90\"\n\n\n'''"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 20 88''') == '35'\nassert solution('''9\n15 20 30 40 50 60 70 80 90''') == '90'\nassert solution('''9\n16 20 30 40 50 60 70 80 90''') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '35'\nassert solution(\"\") == '90'\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"5 5 1\") == \"2\"\nassert solution(\"4 7 2\") == \"2\"\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('4 7 2') == '2'"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5 3\n3 1 2\n''') == '1'\n\nassert solution('''4 7 2\n3 3 2 4\n''') == '2'"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution_1() == '2'"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5 3\n3 1 2\n''') == '1'\nassert solution('''\n4 7 2\n3 3 2 4\n''') == '2'\nassert solution('''\n5 5 1\n1 3 1 2 1\n''') == '-1'\nassert solution('''\n3 3 2 3\n1 1 2 2\n''') == '3'\nassert solution('''\n3 3 3 3\n1 1 2 2\n''') == '-1'\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\") == \"1\"\nassert solution(\"5 5 1\") == \"2\"\nassert solution(\"10 10 1\") == \"10\"\nassert solution(\"10 10 2\") == \"-1\"\nassert solution(\"5 7 2\") == \"2\"\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5 1\n3 3 2 4''') == '1'\nassert solution('''4 7 2\n3 3 2 4''') == '2'\nassert solution('''5 5 1\n1 3 1 2 1''') == '-1'\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"4 7 2\") == \"2\"\nassert solution(\"5 5 1\") == \"-1\"\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"4 7 2\") == \"2\"\nassert solution(\"5 5 1\") == \"-1\"\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('4 7 2') == '2'\nassert solution('5 5 1') == '-1'\nassert solution('6 7 2') == '-1'"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nRBBR\n''') == '6'\n\nassert solution('''4\nRBBR\n''') == '6'\n\nassert solution('''3\nRBBR\n''') == '2'\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '6'\nassert solution('6') == '6'\nassert solution('7') == '6'\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nRBR') == '2'\nassert solution('4\\nRBBR') == '6'\nassert solution('5\\nRBBRR') == '6'\n\"\"\"\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '6'\nassert solution('4') == '6'\n\n'''"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nRBR\n\n''') == '2'\n\nassert solution('''4\nRBBR\n\n''') == '6'\n\nassert solution('''5\nRBBRR\n\n''') == '6'\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15 00\\n1000 6 15 11') == '25200.0000'\nassert solution('19 00\\n255 1 100 1') == '1365.0000'\nassert solution('17 41\\n1000 6 15 11') == '1365.0000'\nassert solution('19 09\\n10 6 20 10') == '1269.7500'\nassert solution('19 18\\n10 6 20 10') == '1269.7500'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('19 00\\n255 1 100 1') == '25200.0000'\nassert solution('17 41\\n1000 6 15 11') == '1365.0000'\n\n\"\"\"\n\n\n\nfrom math import ceil, floor\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('19 00\\n255 1 100 1') == '25200.0000'\nassert solution('17 41\\n1000 6 15 11') == '1365.0000'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('17 41') == '1365.0000'\nassert solution('19 00') == '25200.0000'\nassert solution('17 00') == '25200.0000'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15 0\\n45 1 100 1') == '25200.0000'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"17 41\n1000 6 15 11\"\"\") == \"1365.0000\"\nassert solution(\"\"\"19 00\n255 1 100 1\"\"\") == \"25200.0000\"\nassert solution(\"\"\"17 41\n999 1 100 1\"\"\") == \"1366.0000\"\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n100 6 15 11\") == \"25200.0000\"\nassert solution(\"17 41\\n1000 6 15 11\") == \"1365.0000\"\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''19 00\n255 1 100 1\n''') == \"25200.0000\"\nassert solution('''17 41\n1000 6 15 11\n''') == \"1365.0000\""
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"19 00\\n255 1 100 1\\n\") == \"25200.0000\"\nassert solution(\"17 41\\n1000 6 15 11\\n\") == \"1365.0000\"\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('18 00') == '25200.0000'\nassert solution('17 41') == '1365.0000'\nassert solution('25 51') == '1093.0000'\n"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaba') == 6\nassert solution('abracadabra') == 20\n\n\n\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 s (1 \u2264 s.length \u2264 200) \u0441 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c\u0438 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u043c\u0438 \u0431\u0443\u043a\u0432\u0430\u043c\u0438. \u041f\u043e\u0434\u043e\u0431\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u0442\u0435\u043c \u0431\u044b\u043b\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u043a \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432. \u041a \u0441\u0447\u0430\u0441\u0442\u044c\u044e, \u043d\u0430 \u044d\u0442\u043e\u043c \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0434\u0432\u0438\u043d\u0443\u043b\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u0438.\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u0442\u0440\u0435\u0437\u043a\u0430 \u0438\u0437 \u0448\u0430\u0433\u0430 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u043f\u0430\u0440\u044b \u0432 \u0447\u0435\u0442\u043d\u043e\u0441\u0442\u0438.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 s. \u0414\u0430\u043b\u0435\u0435 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430: k \u0438 l (1 \u2264 k, l \u2264 200).\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b k \u0438 l \u0446\u0435\u043b\u044b\u0445 \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043e\u0442 1 \u0434\u043e 200. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 s \u0438 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 s.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u0430\u0439\u043b \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u0442\u0440\u0435\u0437\u043a\u0430 \u0438\u0437 \u0448\u0430\u0433\u0430 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u043f\u0430\u0440\u044b \u0432 \u0447\u0435\u0442\u043d\u043e\u0441\u0442\u0438.\n\n\n-----\u041f\u0440\u0438\u043c\u0435\u0440 1-----\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\naaba\n2\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n6\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n\n\u041f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u0441\u0430\u043c\u043e\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u0442\u0430\u0442\u043a\u0435. \u0418 \u0442\u0430\u043a \u043a\u0430\u043a \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u0434\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0430\u0441, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0439\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0442\u0440\u0435\u0437\u043e\u043a. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0434\u043b\u0438\u043d\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430.\n\n\u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0441\u0442\u0430\u043d\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 2, \u0434\u0430\u043b\u0435\u0435 \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0432\u0435\u0440\u0445\u043d\u044f\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0442\u043e\u043b\u044c\u043a\u043e.\n\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u043c \u043e\u0442\u0440\u0435\u0437\u043e\u043a \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438) \u0438 \u043e\u0441\u0442\u0430\u0432\u0448\u0435\u0439\u0441\u044f \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0442\u0440\u043e\u043a\u0430 ababa \u0441\u0442\u0430\u043d\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 2, \u0430 \u0432\u0435\u0440\u0445\u043d\u044f\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u0442\u0430\u043d\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f. \u0422\u043e\u0433\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u0443 \u0434\u043b\u044f \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u0443 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0443 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u0438 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435.\n\n\u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0441\u0442\u0430"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"2\"\nassert solution(\"aaabbbb\") == \"6\"\nassert solution(\"abracadabra\") == \"20\""
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaba\n2''') == '6'\nassert solution('''abracadabra\n10''') == '20'"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"aabaababaabab\"\nassert solution(\"aaabbbb\") == \"aaabbbbbbbbbb\"\nassert solution(\"abracadabra\") == \"abracadabrabracadabra\"\nprint(solution(input()))\n"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"abacab\"\nassert solution(\"aaabbbb\") == \"ababababababab\"\nassert solution(\"abracadabra\") == \"abracadabrabracadabra\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaba') == '6'\nassert solution('aaabbbb') == '20'\nassert solution('abracadabra') == '20'"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"6\"\nassert solution(\"aaabbbb\") == \"6\"\nassert solution(\"abracadabra\") == \"20\""
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"solution.txt\") == '14'"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abracadabra\") == \"20\"\nassert solution(\"aaabbbb\") == \"10\"\nassert solution(\"aaba\") == \"6\"\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 2 1\n''') == \"4\"\nassert solution('''5\n0 -1 -1 -1 -1\n''') == \"4\"\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 -1 1''') == '4'\n\nassert solution('''5\n-1 -1 -1 -1 -1''') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '5'\nassert solution('''\n5\n1 1 1 1 1\n''') == '5'\nassert solution('''\n5\n0 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n6\n-1 -1 -1 -1 -1 -1\n''') == '0'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 1 2 1\n''') == '4'\nassert solution('''\n5\n0 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n3\n-5 5 -5\n''') == '5'\nassert solution('''\n4\n-5 5 -5\n-1\n''') == '4'\nassert solution('''\n3\n-5 5 -5\n-1\n-1\n''') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 2 1') == '4'\nassert solution('5\\n0 -1 -1 -1 -1') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n\nprint(solution(\"4\"))\nprint(solution(\"5\"))"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 2 1\\n') == '4'\nassert solution('5\\n0 -1 -1 -1 -1\\n') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4') == '1'\nassert solution('6 100') == '0'\nassert solution('4 10') == '0'"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n1 2 5 10 15 20\\n\") == \"1\"\nassert solution(\"4 10\\n1 3 2 4\\n\") == \"0\"\nassert solution(\"6 100\\n1 3 2 4 5 6\\n\") == \"2\"\nassert solution(\"10 10\\n2 3 4 5 6\\n\") == \"2\""
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 4\n1 2 5 10 15 20\n\n''') == '1'\n\nassert solution('''4 10\n1 3 2 4\n\n''') == '0'\n\nassert solution('''6 100\n1 3 2 4 5 6\n\n''') == '2'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 4') == '1'\nassert solution('4 10') == '0'\nassert solution('6 100') == '2'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4') == '1'\nassert solution('6 100') == '2'\nassert solution('4 10') == '0'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4') == '1'\nassert solution('6 100') == '2'\nassert solution('3 10') == '0'\nassert solution('6 100') == '0'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 4\") == \"1\"\nassert solution(\"4 10\") == \"0\"\nassert solution(\"6 100\") == \"2\""
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 4\n1 2 5 10 15 20\n\n''') == '1'\n\nassert solution('''\n4 10\n1 3 2 4\n\n''') == '0'\n\nassert solution('''\n6 100\n1 3 2 4 5 6\n\n''') == '2'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"0\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"6 100\") == \"2\""
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 4\n1 2 5 10 15 20\n''') == \"1\"\nassert solution('''\n6 100\n1 3 2 4 5 6\n''') == \"2\"\nassert solution('''\n1 10\n1 2 3 4 5 6\n''') == \"0\""
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n0 2 1\n''') == '16'\nassert solution('''2\n1 1\n''') == '4'\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 2 1\n''') == '16'\nassert solution('''2\n1 1\n''') == '4'\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n0 2 1\n''') == '16'\nassert solution('''\n2\n1 1\n''') == '4'\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 2 1\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"4\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '16'\nassert solution([1, 1]) == '4'\nassert solution([2, 1]) == '8'\n\"\"\"\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"12\""
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n0 2 1\n\"\"\") == \"16\"\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n0 2 1 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n0 2 1 1 1\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n6\n0 2 0 1 1 1\n\"\"\") == \"16\"\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"16\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 2 1\n''') == '16'\n\nassert solution('''\n2\n1 1\n''') == '4'"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"16\"\nassert solution(\"1\") == \"8\"\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1010\") == \"3\"\nprint(solution(\"4\\n1010\"))\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n10010''') == '3'\nassert solution('''6\n10011''') == '2'\nassert solution('''5\n11101''') == '3'\nassert solution('''7\n1111''') == '1'\nassert solution('''8\n0000''') == '0'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1010''') == '3'\nassert solution('''2\n101''') == '0'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1010''') == '3'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '3'\nassert solution('100') == '4'\nassert solution('1111') == '1'\nassert solution('11111111') == '0'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"1000\") == \"1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"1111\") == \"2\"\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\n\"\"\"\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n11111111''') == '3'\nassert solution('''8\n11111111''') == '4'\nassert solution('''8\n11111111''') == '1'\nassert solution('''1\n''') == '0'\nassert solution('''5\n1101''') == '3'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 2\n''') == '2'\nassert solution('''\n5 4 7\n''') == '1'\nassert solution('''\n6 2 3\n''') == '1'\n\n\"\"\""
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '1'\nassert solution() == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '1'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\nprint('All tests passed!')"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 2\n''') == '2'\nassert solution('''5 4 7\n''') == '1'\nassert solution('''6 2 3\n''') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 4 7\") == \"1\"\nassert solution(\"6 2 3\") == \"1\"\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 2\n''') == '2'\nassert solution('''5 4 7\n''') == '1'\nassert solution('''6 2 3\n''') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 2''') == '2'\nassert solution('''5 4 7''') == '1'\nassert solution('''6 2 3''') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 4 7\") == \"1\"\nassert solution(\"6 2 3\") == \"1\""
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution(['6 2 3']) == '1'\nassert solution(['5 4 7']) == '1'\nassert solution(['5 8 7']) == '0'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abc\nbac\nbca\ncab\ncba''') == 'Yes'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ababa''') == 'Yes'\nassert solution('''zzcxx''') == 'Yes'\nassert solution('''yeee''') == 'No'\n\"\"\""
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ababa''') == 'Yes'\nassert solution('''zzcxx''') == 'Yes'\nassert solution('''yeee''') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''ababa''') == 'Yes'\nassert solution('''zzcxx''') == 'Yes'\nassert solution('''yeee''') == 'No'"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''ababa''') == 'Yes'\nassert solution('''zzcxx''') == 'Yes'\nassert solution('''yeee''') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ababa\") == \"Yes\"\nassert solution(\"zzcxx\") == \"Yes\"\nassert solution(\"yeee\") == \"No\"\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\n\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nababa\n''') == \"Yes\"\n\nassert solution('''\nzzcxx\n''') == \"Yes\"\n\nassert solution('''\nyeee\n''') == \"No\""
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '1'"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"5 5\") == \"1\""
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n1 3 3 7\n\n''') == '2'\nassert solution('''\n5 5\n10 9 5 8 7\n\n''') == '1'\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"1\""
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == '2'\nassert solution(\"5 5\") == '1'\nassert solution(\"3 3 3 7\") == '2'"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution([0, 1, 3, 4, 5]) == '1'\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 2\\n1 3 3 7\"\n) == \"2\"\n\nassert solution(\n    \"5 5\\n10 9 5 8 7\"\n) == \"1\"\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"2\"\nassert solution(input_) == \"1\"\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"6 6\") == \"1\"\nprint(solution(*(list(map(int, input().split())))))"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"   \") == \"0\"\nassert solution(\" \") == \"0\"\nassert solution(\"    \") == \"0\"\nassert solution(\"     \") == \"0\"\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 2\nYYY\nNNN\nYNY\n''') == '2'\nassert solution('''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN\n''') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 2') == '2'\nassert solution('4 4 1') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"2\"\nassert solution(\"4 4 1\") == \"4\"\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2\nYYY\nNNN\nYNY\n''') == '2'\n\nassert solution('''\n4 4 1\nNNNY\nNNYN\nNYNN\nYNNN\n''') == '4'\n\nassert solution('''\n7 6 3\nNNNNYNNNNN\nNNNNNNNNNN\nNNNNNNNNNN\nNNNNNNNNNN\nNNNNNNNNNN\nNNNNNNNNNN\nNNNNNNNNNN\n''') == '5'\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 3') == '2'\nassert solution('4 4 1') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3 2\n    YYY\n    NNN\n    YNY\n''') == '2'\nassert solution('''\n    4 4 1\n    NNNY\n    NNYN\n    NYNN\n    YNNN\n''') == '4'\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 0\n''') == '2'\nassert solution('''\n2 3 7\n''') == '-1'"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0\\n\") == \"2\"\nassert solution(\"2 3 7\\n\") == \"-1\"\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0\") == \"2\"\nassert solution(\"2 3 7\") == \"-1\"\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 2 0\n''') == '2'\nassert solution(\n'''\n2 3 7\n''') == '-1'"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nprint('You are a genious! All tests are done!')\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 0]) == \"2\"\nassert solution([2, 3, 7]) == \"-1\"\nassert solution([2, 3, 1]) == \"3\""
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0\") == \"2\"\nassert solution(\"2 3 7\") == \"-1\"\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 0\\n\") == \"2\"\nassert solution(\"2 3 7\\n\") == \"-1\"\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 0 1 0\\n') == '3'\nassert solution('5\\n1 1 0 0 1\\n') == '4'\nassert solution('5\\n1 1 0 0 1\\n') == '0'\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '6'\nassert solution('2') == '0'"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n\n'''\n\nimport math\n\nstdin = input()\nn = int(stdin)\n\nmoves = 0\n\nfor i in range(n):\n    moves += math.ceil(i / 2)\n\nprint(moves)"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n0 1 0 1 0\\n') == '3'\nassert solution('5\\n1 1 0 0 1\\n') == '4'\nassert solution('5\\n1 1 0 1 0\\n') == '0'\nassert solution('5\\n1 1 0 0 1\\n') == '0'\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"10\""
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 1 0 1 0\") == \"3\"\nassert solution(\"5\\n1 1 0 0 1\") == \"4\"\nassert solution(\"5\\n0 0\") == \"0\"\nassert solution(\"5\\n0\") == \"0\"\nassert solution(\"2\\n0 0\") == \"0\"\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 0 1 0') == '3'\nassert solution('5\\n1 1 0 0 1') == '4'\nassert solution('2\\n0 0') == '0'"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 0 1 0\") == '3'\nassert solution(\"5\\n1 1 0 1 0\") == '4'\nassert solution(\"5\\n1 1 0 1 0\") == '5'\nassert solution(\"5\\n0 0\") == '0'\nassert solution(\"5\\n0 0\") == '1'\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\") == \"Yes\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"4 3 5\") == \"Yes\"\nassert solution(\"4 4 5\") == \"Yes\"\nassert solution(\"4 2 3\") == \"No\"\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('4 2 7') == 'No'\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"2 2 3\\n1 8 4\\n\") == \"Yes\"\nassert solution(\"4 3 5\\n2 7 7 7\\n\") == \"No\""
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\\n1 4\\n2 7 7\"\nassert solution(stdin=\"3 2 3\") == \"Yes\\n1 4 \\n2 7 7\"\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n1 8 4\n''') == 'Yes\n\nassert solution('''\n4 3 5\n2 7 7 7\n''') == 'No"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 5\") == \"Yes\\n2 7 7\"\nassert solution(\"1000000 1000000 1000000\") == \"Yes\\n1000000 1000000\""
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2 3\n1 8 4\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 3 5\n2 7 7 7\n\"\"\") == \"No\"\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\") == \"Yes\\n1 4\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"4 3 5\") == \"Yes\\n2 7 7\""
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 5') == 'No'\nassert solution('3 2 3') == 'Yes'\n\nstdin = sys.stdin.read()\nassert solution(stdin) == 'Yes'\nprint(solution(stdin))\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3') == 'Yes'\nassert solution('3 3 3') == 'No'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 0 0\\n\"\n    \"0 0 0\\n\"\n    \"0 0 1\"\n    ) == \"001\\n010\\n100\"\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 0') == '001'\nassert solution('0 0 0') == '010'\nassert solution('0 0 1') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 0\\n0 0 0\\n0 0 1\") == \"001\\n010\\n100\", 'Test 1 failed'\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\") == \"010\\n011\\n100\", 'Test 2 failed'\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\\n3 1 4\") == \"010\\n011\\n100\", 'Test 3 failed'\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\\n3 1 4\\n5 1 5\") == \"010\\n011\\n100\", 'Test 4 failed'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == '0110'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0 0\\n0 0 0\\n0 0 1\\n\") == \"001\\n010\\n100\"\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\\n\") == \"010\\n011\\n100\"\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 0') == '001'\nassert solution('0 0 0') == '010'\nassert solution('0 0 1') == '100'\nassert solution('1 0 1') == '011'\nassert solution('8 8 8') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"010\\n011\\n100\"\n\nassert solution(\"0 1 0\\n8 8 8\\n2 0 3\") == \"010\\n011\\n100\"\n\nassert solution(\"0 1 1\\n8 8 8\\n2 0 3\") == \"010\\n011\\n100\"\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 0\\n0 0 0\\n0 0 1\\n') == '001'\nassert solution('1 0 1\\n8 8 8\\n2 0 3\\n') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 0') == '001'\nassert solution('1 0 1') == '010'\nassert solution('1 0 1') == '010'\nassert solution('0 0 0') == '001'\nassert solution('0 0 1') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 0\\n0 0 0\\n0 0 1\") == \"001\\n010\\n100\"\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\") == \"010\\n011\\n100\""
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0') == '3'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0') == '3'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '-1'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution([3, 0]) == '3'\nassert solution([3, 1]) == '5'\nassert solution([3, 2]) == '-1'"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 0') == '3'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 0\n1 1 3 2\n2 1 3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 0\n1 1 3 2\n2 1 3 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 0\n1 1 3 2\n2 1 3 1\n\"\"\") == \"9\"\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 0\\n') == '3'\nassert solution('3 1\\n1 1 3 2\\n') == '5'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 2\\n') == '9'\nassert solution('1 2\\n1 1 3 2\\n2 1 3 2\\n') == '-1'"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0\") == \"3\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"9\""
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"3 0\") == '3'\nassert solution(\"3 1\") == '5'\nassert solution(\"3 1\") == '5'\nassert solution(\"3 2\") == '9'\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6\"\nassert solution() == \"9\""
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 2\n''') == '2/1'\nassert solution('''\n7 2 4\n''') == '7/2'\nassert solution('''\n4 4 2\n''') == '4/4'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'\nassert solution('1 2') == '1/2'\nassert solution('-1 2') == '1/2'\nassert solution('1 -2') == '1/2'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1/3\"\nprint(solution(input))"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 7, 6]) == \"2/5\"\nassert solution([7, 2, 4]) == \"7/2\"\nassert solution([12, 9, 3]) == \"2/3\"\nassert solution([9, 12, 6]) == \"1/2\"\nassert solution([5, 10, 20]) == \"1/5\"\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1/3'\nassert solution('4 3 4') == '4/3'\nassert solution('2 9 5') == '1/4'\nassert solution('3 3 3') == '3/3'\nassert solution('3 4 4') == '3/4'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"2/5\"\n\"\"\"\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 5') == '1/2'\nassert solution('2 9 4') == '1/5'\nassert solution('5 2 8') == '4/5'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 6') == '2/3'\nassert solution('7 2 4') == '7/2'\nassert solution('5 2 4') == '5/2'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 7 5\n\"\"\") == \"\"\"2/5\"\"\", \"Solution\"\n\nassert solution(\"\"\"\n6 5 3\n\"\"\") == \"\"\"6/5\"\"\", \"Solution\"\n\nassert solution(\"\"\"\n7 8 6\n\"\"\") == \"\"\"7/8\"\"\", \"Solution\"\n\nassert solution(\"\"\"\n9 8 6\n\"\"\") == \"\"\"9/8\"\"\", \"Solution\"\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 4\n3 4 6\n1 2\n2 5\n5 7\n7 1\n''') == '1'\nassert solution('''\n7 1 2\n2 5\n5 7\n7 1\n''') == '2'\nassert solution('''\n5 1 2\n2 5\n5 7\n7 1\n''') == '2'\n'''"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3 4\") == \"1\"\nassert solution(\"5 1 2\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 4\\n3 4 6\\n1 2') == '1'\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 4\\n3 4 6\\n1 2\\n2 5\\n5 7\\n7 1') == '1'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('3 3 3 3 4 4\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n6 5\\n6 4\\n') == '2'\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 2\n2\n1 2\n2 4\n''') == '1'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '4'\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"5 1 2\") == \"2\"\nassert solution(\"7 3 4\") == \"1\"\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n\n\"\"\"\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 3 4\n3 4 6\n1 2\n2 5\n5 7\n7 1''') == '1'\nassert solution('''5 1 2\n2''') == '2'\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3 4') == '1'\nassert solution('5 1 2') == '2'\n\n'''\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '3 14'\nassert solution('2 2 2') == '0 0'\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"3 14\"\nassert solution(\"2 1 2\") == \"2 14\"\nassert solution(\"2 2 1\") == \"2 7\"\nassert solution(\"2 2 2\") == \"1 10\"\nassert solution(\"3 3 1\") == \"3 3\"\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2\n\n\"\"\") == \"3 14\""
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '3 14'\nassert solution('2 5 3') == '4 16'\nassert solution('2 5 3') == '2 3'\nassert solution('3 1 2') == '4 16'\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"3 14\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2\n''') == '3 14'\nassert solution('''2 1 1\n3\n3 USB\n4 PS/2\n5 PS/2\n''') == '2 16'\nassert solution('''2 1 1\n2\n4 USB\n2 PS/2\n5 PS/2\n''') == '1 14'\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '3 14'\n\nassert solution('''2 1 1\n1\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '1 14'\n\nassert solution('''3\n1 5\n1 6\n2 7''') == '1 8'\n\nassert solution('''4\n2 3\n3 2\n3 2\n3 2''') == '0 0'\n\nassert solution('''4\n1 5\n2 6\n3 7\n4 8''') == '1 16'"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 1 1\\n4\\n5 USB\\n6 PS/2\\n3 PS/2\\n7 PS/2') == '3 14\\n'\n\nassert solution(\n    '2 1 2\\n5 PS/2\\n7 PS/2\\n2 PS/2\\n5 USB\\n3 PS/2\\n5 USB\\n7 PS/2\\n5 PS/2\\n7 PS/2') == '0 7\\n'\n\nassert solution(\n    '2 1 1\\n4\\n5 USB\\n6 PS/2\\n3 PS/2\\n7 PS/2\\n') == '3 14\\n'\n\nassert solution(\n    '2 1 2\\n5 PS/2\\n7 PS/2\\n2 PS/2\\n5 USB\\n3 PS/2\\n5 USB\\n7 PS/2\\n5 PS/2\\n7 PS/2') == '0 7\\n'\n\nassert solution(\n    '2 1 1\\n4\\n5 USB\\n6 PS/2\\n3 PS/2\\n7 PS/2\\n') == '3 14\\n'"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"3 14\"\nassert solution(\"2 1 2\") == \"1 14\"\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n4\\n5 USB\\n6 PS/2\\n3 PS/2\\n7 PS/2\") == '3 14'"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"51\"\nassert solution(\"hi\") == \"76\"\nassert solution(\"ab\") == \"2\"\nassert solution(\"ca\") == \"2\"\nassert solution(\"aac\") == \"3\"\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hi') == '76'\nassert solution('a') == '51'\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hi') == '76'\n\n\"\"\"\n\n\n\nstdin = 'hi'"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hi') == 76\nprint(solution('hi'))\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == 51\nassert solution(\"hi\") == 76\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hi') == '76'\nassert solution('ab') == '51'"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"51\"\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == '1'\nassert solution('hi') == '76'\nassert solution('b') == '1'\nassert solution('aa') == '1'\nassert solution('ab') == '2'\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hi\") == \"76\"\n\nassert solution(\"a\") == \"51\""
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 0\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '9'\nassert solution('''\n5 1\n1 2\n2 3\n3 4\n4 5\n''') == '1'\nassert solution('''\n3 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 1\n1 2\n2 3\n''') == '3'\nassert solution('''\n2 2\n1 2\n2 1\n''') == '3'\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0') == '9'\nassert solution('3 1') == '1'\n\nstdin = \"\"\"\n4 0\n1 = 6\n\nOutput\n3\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 1\n3 = 6\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 0\n\n\"\"\") == \"9\"\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n2 > 3\n2 > 4\n1 = 2\n3 < 4\n2 < 5\n''') == '2\nassert solution('''\n8 8\n1 2 3 4 5 6 7 8\n''') == '4\nassert solution('''\n10 10\n1 2 5 6 4 3 2 1\n''') == '5\nassert solution('''\n4 4\n3 > 4\n3 > 5\n4 > 5\n5 > 6\n6 > 7\n7 > 8\n''') == '4\nassert solution('''\n2 2\n1 > 2\n''') == '0\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n') == \"1\"\nassert solution('3 0\\n') == \"9\"\nassert solution('4 1\\n3 = 6\\n') == \"3\"\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6 1\n3 = 6\n2 < 3\n4 > 2\n\"\"\") == \"1\""
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"4 1\") == \"5\"\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 0') == '9'\nassert solution('3 1') == '1'\nassert solution('4 1') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"3\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '3'\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"10\") == 3"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n\n4\n\n3\n\n''') == '3'\nassert solution('''\n100\n\n101\n\n103\n\n''') == '3'\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"3\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"1\"\n\n------------------------------------"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input) == '-1 17 7 7 7 -1 2 17 2 7'\n\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n3.\n\nGiven a number of soldiers $n$, finds the maximum number of armies a company can have.\n\n-----Input-----\n\nInput contains a single integer $n$.\n\n-----Output-----\n\nPrint a single integer \u2014 the maximum number of armies the company can have.\n\n-----Example-----\nInput\n1\n\nOutput\n5\n\nInput\n4\n\nOutput\n6\n\nInput\n5\n\nOutput\n9\n\nInput\n10\n\nOutput\n12\n\nInput\n-1\n\nOutput\n2\n\nInput\n-2\n\nOutput\n1\n\nInput\n3\n\nOutput\n3\n\nInput\n100\n\nOutput\n31\n\nInput\n100\n\nOutput\n32\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n4.\n\nGiven a $n \\times 2$ matrix of integers A, where each row is of length exactly 2.\n\nFor each non-empty row, the first integer in that row is the height of a wall, and the second integer is the width of the wall. The height of each wall is the same, and the width is the same for all rows.\n\nFind the maximum area of a wall you can build out of these walls. The wall may not be horizontal or vertical.\n\n-----Input-----\n\nInput contains n non-empty rows of integers. Each row is of length exactly 2.\n\n-----Output-----\n\nPrint an integer \u2014 the maximum area of a wall you can build out of these walls, or -1 if there is no way to do so.\n\n-----Example-----\nInput\n1\n\n2\n\nOutput\n1\n\nInput\n1\n\n2\n\nOutput\n1\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n1\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n4\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n5\n\n2\n\nOutput\n1\n\nInput\n6\n\n2\n\nOutput\n1\n\nInput\n7\n\n2\n\nOutput\n2\n\nInput\n8\n\n2\n\nOutput\n1\n\nInput\n9\n\n2\n\nOutput\n1\n\nInput\n10\n\n2\n\nOutput\n1\n\nInput\n-1\n\n2\n\nOutput\n2\n\nInput\n-2\n\n2\n\nOutput\n1\n\nInput\n-3\n\n2\n\nOutput\n2\n\nInput\n100\n\n2\n\nOutput\n100\n\nInput\n100\n\n2\n\nOutput\n100\n\nInput\n0\n\n2\n\nOutput\n0\n\nInput\n1\n\n1\n\nOutput\n1\n\nInput\n0\n\n2\n\nOutput\n0\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n4\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n5\n\n2\n\nOutput\n1\n\nInput\n6\n\n2\n\nOutput\n1\n\nInput\n7\n\n2\n\nOutput\n1\n\nInput\n8\n\n2\n\nOutput\n1\n\nInput\n9\n\n2\n\nOutput\n1\n\nInput\n10\n\n2\n\nOutput\n1\n\nInput\n11\n\n2\n\nOutput\n1\n\nInput\n12\n\n2\n\nOutput\n1\n\nInput\n-1\n\n2\n\nOutput\n2\n\nInput\n-2\n\n2\n\nOutput\n1\n\nInput\n-3\n\n2\n\nOutput\n2\n\nInput\n100\n\n2\n\nOutput\n100\n\nInput\n100\n\n2\n\nOutput\n100\n\nInput\n1\n\n1\n\nOutput\n1\n\nInput\n0\n\n2\n\nOutput\n0\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n2\n\n2\n\nOutput\n1\n\nInput\n4\n\n2\n\nOutput\n1\n\nInput\n3\n\n2\n\nOutput\n1\n\nInput\n5\n\n2\n\nOutput\n1\n\nInput\n6\n\n2\n\nOutput\n1\n\nInput\n7\n\n2\n\nOutput\n1\n\nInput\n8\n\n2\n\nOutput\n1\n\nInput\n9\n\n2\n\nOutput\n1\n\nInput\n10\n\n2\n\nOutput\n1\n\nInput\n11\n\n2\n\nOutput\n1\n\nInput\n12\n\n2\n\nOutput\n1\n\nInput\n-1\n\n2\n\nOutput\n2\n\nInput\n-2\n\n2\n\nOutput\n1\n\nInput\n-3\n\n2\n\nOutput\n2\n\nInput\n100"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0840\") == \"-1 17 7 7 7 -1 2 17 2 7\"\n"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0840\") == \"17 17 7 7 7 -1 2 17 2 7 \\n-1 17 7 7 5 5 5 2 7 2 7 \\n7 7 7 4 3 7 7 1 7 2 5 \\n7 5 4 7 3 3 2 5 2 3 \\n7 5 3 3 7 7 1 3 2 7 \\n-1 5 7 3 7 7 1 7 2 7 \\n2 2 1 2 1 2 2 2 2 2 2 2 2 2 2 2 \\n17 7 7 5 7 9 2 17 2 3 \\n2 2 2 2 2 2 2 0 2 2 2 \\n7 7 5 3 7 7 1 3 2 7 \\n\""
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0840''') == '-1 17 7 7 7 -1 2 17 2 7\\n17 17 7 5 5 5 2 7 2 7\\n7 7 7 4 3 7 1 7 2 5\\n7 5 4 7 3 3 2 5 2 3\\n7 5 3 3 7 7 1 7 2 7\\n-1 5 7 3 7 -1 2 9 2 7\\n2 2 1 2 1 2 2 2 2 2\\n17 7 7 5 7 9 2 17 2 3\\n2 2 2 2 2 2 0 2 2 2\\n7 7 5 3 7 7 1 3 2 7'\n\n\n\"\"\"\n--- Day 12: Rain Risk ---\n\nYou use a weather machine to test your knowledge of the Morse code, but one of the feedback loops considers whether the message is too short.\n\nYou need to find the number of characters in the shortest possible message which will use all the characters in the allowed alphabet.\n\nFor example, if you allowed the alphabet to have the letters a, b, and c, you would consider the message abcb as short because it uses all the a, b, and c.\n\nInput: A string s\n\nOutput: The number of characters in the shortest possible message which will use all the characters in the allowed alphabet.\n\"\"\"\n\nalphabet = 'abcdefghijklmnopqrstuvwxyz'"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('5840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('083456') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('34897') == '-1 17 7 7 7 -1 2 17 2 7'\n"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0840') == \"17 17 7 7 7 -1 2 17 2 7 \\n17 17 7 5 5 5 2 7 2 7 \\n7 7 7 4 3 7 1 7 2 5 \\n7 5 4 7 3 3 2 5 2 3 \\n7 5 3 3 7 7 1 7 2 7 \\n-1 5 7 3 7 -1 2 9 2 7 \\n2 2 1 2 1 2 2 2 2 1 \\n17 7 7 5 7 9 2 17 2 3 \\n2 2 2 2 2 2 0 2 2 2 \\n7 7 5 3 7 7 1 3 2 7\""
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == \"17 17 7 7 7 7 2 7 2 7\"\nassert solution('0840') == \"17 17 7 7 7 7 2 7 2 7\""
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('12345678') == '17 17 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0\n8\n1\n7\n2\n3\n4\n5\n6''') == '-1 17 7 7 7 -1 2 17 2 7 \\n17 17 7 5 5 5 2 7 2 7 \\n7 7 7 4 3 7 1 7 2 5 \\n7 5 4 7 3 3 2 5 2 3 \\n7 5 3 3 7 7 1 7 2 7 \\n-1 5 7 3 7 -1 2 9 2 7 \\n2 2 1 2 1 2 2 2 2 1 \\n17 7 7 5 7 9 2 17 2 3 \\n2 2 2 2 2 2 0 2 2 2 \\n7 7 5 3 7 7 1 3 2 7 \\n'''\n"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8405') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('08401') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('8402') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('8403') == '-1 17 7 7 7 -1 2 17 2 7'\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\"\n) == \"YES\"\nassert solution(\n    \"WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\"\n) == \"NO\""
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\", \"WBWBWBWB\"\nassert solution(\"WBWBWBWB\") == \"NO\", \"WBWBWBWB\"\nassert solution(\"BWBWBWBW\") == \"YES\", \"BWBWBWBW\"\nassert solution(\"BWBWBWBW\") == \"NO\", \"BWBWBWBW\"\nassert solution(\"BBWBWWWB\") == \"YES\", \"BBWBWWWB\"\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\", \"First\"\nassert solution(\"BWBWBWBW\") == \"YES\", \"Second\""
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('WBWBWBWB') == 'YES'\nassert solution('WBWBWBWB') == 'NO'\n\"\"\"\n\nstdin = \"\"\"\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\n\"\"\"\n\nstdout = \"\"\"\nYES\n\"\"\"\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"BBWBWBWB\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"BBWBWBWB\") == \"NO\"\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''WBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB''') == 'YES'\nassert solution('''WBWBWBWB\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW''') == 'NO'\nassert solution('''WBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB''') == 'NO'\nassert solution('''WBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB''') == 'YES'"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\") == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\n\n-----Hints-----\n\n*How many rows are there in the board?\n*What are the patterns of shifting?\n*Do you think you can write this function in only one line?\n\n\"\"\""
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\""
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('4') == '4'\nassert solution('2 4 6 12') == '3'\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 5 7''') == '2'\nassert solution('''4\n2 4 6 12''') == '3'\nassert solution('''2\n2 3''') == '-1'\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\") == \"1\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"2\\n5\") == \"2\"\nassert solution(\"2\\n6\") == \"2\"\nassert solution(\"2\\n7\") == \"3\"\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"2\") == -1\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '-1'\nassert solution('4') == '3'"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 7, 9, 3, 1, 7, 9, 11]) == '4'\nassert solution([5, 3, 6, 10, 12]) == '-1'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == '6'\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6 12') == '3'\nassert solution('2 2 4 4') == '-1'\nprint('\"Run\" is good. How is \"Check\"?')\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"3\\n4, 6, 12\"\nassert solution(input_) == \"3\\n-1\"\nassert solution(input_) == \"4\\n-1\"\nassert solution(input_) == \"2\\n3\""
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 4 6 12') == '3\\n4 6 12'\nassert solution('2\\n2 3') == '-1'"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 1 2''') == '3 2 0 2 0'\nassert solution('''4\n3 2 1 4''') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 1 2\n''') == '3 2 0 2 0'\nassert solution('''4\n3 2 1 4\n''') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3 2 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1 2') == '3 2 0 2 0'\nassert solution('5') == '3 2 0 2 0'\nassert solution('3') == '2 0 2'"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3 1 2\n''') == '3 2 0 2 0'\nassert solution('''\n4\n3 2 1 4\n''') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 1 2') == '3 2 0 2 0'\nassert solution('4') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3 2 0 2 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1 4') == '2 3 4 0'\nassert solution('5') == '3 2 0 2 0'\nassert solution('2') == '3 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 1 2') == '3 2 0 2 0'\nassert solution('4') == '2 3 4 0'\nassert solution('1') == '2 1 0 1'\nassert solution('10') == '2 1 0 1'\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 162') == 'YES'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES'\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 162\n''') == \"YES\"\nassert solution('''\n4 42\n''') == \"NO\""
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"YES\", solution(input)\nassert solution(input) == \"NO\", solution(input)\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 162\") == \"YES\"\nassert solution(\"4 42\") == \"NO\"\nassert solution(\"100 40021\") == \"YES\""
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 162\") == \"YES\"\nassert solution(\"4 42\") == \"NO\"\nassert solution(\"100 40021\") == \"YES\"\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1\n    1\n    ''') == 'NO'\n\nassert solution('''\n    1\n    2\n    ''') == 'YES'\n\nassert solution('''\n    1\n    4\n    ''') == 'YES'\n\nassert solution('''\n    1\n    2\n    ''') == 'YES'\n\nassert solution('''\n    1\n    3\n    ''') == 'YES'"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 162\n''') == 'YES'\nassert solution('''\n4 42\n''') == 'NO'\nassert solution('''\n100 40021\n''') == 'YES'\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59\n60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90\n91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120\n121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150\n151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180\n181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210\n211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240\n241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270\n271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300\n301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330\n331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354355 356 357 358 359\n360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387\n388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415\n416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444\n445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471\n472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498\n499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527\n528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555\n556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583\n584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610\n611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637\n638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665\n666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693\n694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723\n724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750\n751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778\n779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806\n807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834\n835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863\n864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891\n892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919\n920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947\n948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975\n976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 100\n'''))\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 162') == 'YES'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES'\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 162\") == \"YES\"\nassert solution(\"4 42\") == \"NO\"\nassert solution(\"100 40021\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\""
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 162') == 'YES'\nassert solution('4 42') == 'NO'"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\") == \"18\"\nassert solution(\"2 4 4\") == \"16\"\nassert solution(\"1000000000 1000000000\") == \"2000000000 100000000000\""
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 5\") == \"18 6\"\nassert solution(\"2 4 4\") == \"16 4\"\nassert solution(\"6 4 4\") == \"16 4\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 5\") == \"18 6\"\nassert solution(\"2 4 4\") == \"16 4\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4 4''') == '16 4 4'\nassert solution('''3 3 5''') == '18 6'\nassert solution('''2 2 4''') == '16 2 4'\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\") == \"16 4 4\"\nassert solution(\"3 3 5\") == \"18 3 3\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 3 5\n\"\"\") == \"18 6\"\n\nassert solution(\n\"\"\"\n2 4 4\n\"\"\") == \"16 4 4\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"18 6\"\nassert solution(\"2 4 4\") == \"16 4\""
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1 1\n5 1 1\n''') == \"16 6\"\nassert solution('''2 4 4\n''') == \"16 4\"\nassert solution('''5 1 3\n5 1 3\n''') == \"18 10\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4\") == \"16 4 4\"\nassert solution(\"3 3 5\") == \"18 3 3\"\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n\") == \"18\\n3 6\"\nassert solution(\"2 4 4\\n\") == \"16\\n4 4\"\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n-7 1\n5 2\n8 2\n''') == '1907'\nassert solution('''2\n57 1\n''') == 'Impossible'\nassert solution('''3\n27 2\n13 1\n-50 1\n8 2\n''') == '1897'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n-7 1\\n5 2\\n8 2\\n') == '1907'\nassert solution('2\\n-5 1\\n') == 'Impossible'\nassert solution('1\\n-5 1\\n') == 'Infinity'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1907\"\nassert solution(\"2\") == \"Impossible\"\nassert solution(\"1\") == \"Infinity\""
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n-7 1\n5 2\n8 2\n''') == '1907'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1907\"\nassert solution(\"2\") == \"Impossible\"\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 1\n-7 1\n5 2\n8 2\n''') == '1907'\nassert solution('''4\n27 2\n13 1\n-50 1\n8 2\n''') == '1897'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n-7 1\n5 2\n8 2\n''') == '1907'\nassert solution('''\n2\n-5 1\n''') == 'Infinity'\nassert solution('''\n4\n27 2\n13 1\n-50 1\n8 2\n''') == '1897'\n''')"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1907\"\nassert solution(\"4\") == \"1897\"\nassert solution(\"2\") == \"1907\""
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('1') == 'Infinity'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1907'\nassert solution('2') == 'Impossible'\nassert solution('1') == 'Infinity'\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nabca\n\n''') == 'YES'\nassert solution('''\n2\naaacas\n\n''') == 'YES'\nassert solution('''\n4\nabc\n\n''') == 'NO'\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nabca\\n\") == \"YES\"\nassert solution(\"2\\naaacas\\n\") == \"YES\"\nassert solution(\"3\\nabc\\n\") == \"NO\"\n\n\nimport sys\nfrom itertools import product\n\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    stdin = sys.stdin.readline()\n    s = stdin.strip()\n    def solution(s):\n        seen = set()\n        for l in s:\n            seen.add(l)\n        for p in product(seen, repeat=len(s)):\n            if all(p[i]!= p[i+1] for i in range(len(p) - 1)):\n                print(\"YES\")\n                print(*p, sep=\"\")\n                break\n        else:\n            print(\"NO\")\n    solution(s)"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'\nassert solution('100') == 'NO'"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(inp) == \"YES\"\nassert solution(inp2) == \"NO\"\nassert solution(inp3) == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nabca\\n') == 'YES\\nabca\\n'\nassert solution('2\\naaacas\\n') == 'YES\\naaa\\ncas\\n'\nassert solution('3\\nabca\\n') == 'NO\\n'\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nabca\") == \"YES\"\nassert solution(\"2\\naaacas\") == \"YES\"\nassert solution(\"4\\nabc\") == \"NO\"\nassert solution(\"5\\nabca\") == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\nabca''') == 'YES'\nassert solution('''2\naaacas''') == 'YES'\nassert solution('''3\nabc''') == 'NO'\nassert solution('''4\naaac''') == 'NO'\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A221033\") == \"21\"\nassert solution(\"A223635\") == \"22\"\nassert solution(\"A232726\") == \"23\"\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A221033') == '21'\nassert solution('A223635') == '22'\nassert solution('A232726') == '23'\n\n\"\"\"\nimport re"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A221033') == '21'\nassert solution('A223635') == '22'\nassert solution('A232726') == '23'\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A221033\") == \"21\"\nassert solution(\"A223635\") == \"22\"\nassert solution(\"A232726\") == \"23\""
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A221033''') == '21'\nassert solution('''A223635''') == '22'\nassert solution('''A232726''') == '23'\n''')\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A221033') == '21'\nassert solution('A223635') == '22'\nassert solution('A232726') == '23'"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(A221033) == \"21\", solution(A221033)\nassert solution(A223635) == \"22\", solution(A223635)\nassert solution(A232726) == \"23\", solution(A232726)"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    'A221033') == '21'\nassert solution(\n    'A223635') == '22'\nassert solution(\n    'A232726') == '23'\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A221033') == '21'\nassert solution('A223635') == '22'\nassert solution('A232726') == '23'"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A221033\") == \"21\"\nassert solution(\"A232726\") == \"23\"\nassert solution(\"A223635\") == \"22\"\nprint(\"YOUR CODE SUCCESSFULLY FINISHED THE PROBLEM. YOU DIDN'T WRONG YOUR CODE\")\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"444\") == \"1\"\nassert solution(\"7777\") == \"6\"\nassert solution(\"1234\") == \"4\"\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"77\") == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '6'\nassert solution('4') == '1'\nassert solution('77') == '6'\nassert solution
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"77\") == \"6\"\nassert solution(\"999999999\") == \"100000000\"\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4''') == '1'\nassert solution('''7''') == '2'\nassert solution('''77''') == '6'"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n5 6 7 8 10 2\n3 5 6 7 1 10''') == '35'\nprint(solution('''3 1\n5 6 7 8 10 2\n3 5 6 7 1 10'''))\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 1\\n3 5 6 7 1 10\") == \"35\"\nassert solution(\"10 2\\n3 5 6 7 1 10\") == \"25\""
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n') == '35'\nassert solution('6 1\\n5 6 7 8 10 2\\n') == '25'\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"1\"\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n''') == '35'\nassert solution('''6 2\n5 6 7 8 10 2\n3 5 6 7 1 10\n''') == '25'\nassert solution('''6 1\n3 6 7 8 10 2\n3 5 6 7 1 10\n''') == '12'\nassert solution('''3 1\n2 5 6 8 10 2\n2 5 6 7 1 10\n''') == '11'\nassert solution('''2 1\n1 2 5 8 10 2\n1 2 5 6 7 1 10\n''') == '11'\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n6 7 8 10 2\\n3 5 6 7 1 10\") == \"35\"\nassert solution(\"10 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\") == \"25\"\nassert solution(\"10 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\") == \"25\"\nassert solution(\"10 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\") == \"25\"\nassert solution(\"6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10\") == \"35\""
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n''') == '35'\n\n'''\n\n## Solution"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n5 6 7 8 10 2\\n\") == '35'\nassert solution(\"6 2\\n5 6 7 8 10 2\\n\") == '25'\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1100') == '3'\nassert solution('4\\n1111') == '4'\n\n\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\"\"\"\nn = int(input())\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1110\\n') == '3'\nassert solution('4\\n1111\\n') == '4'"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n1100\n\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n8\n11111111111111\n\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n10\n11111111111111\n\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n11\n11111111111111\n\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"\n12\n11111111111111\n\n\"\"\"\n) == \"12\""
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1111\") == \"4\"\nassert solution(\"4\\n1101\") == \"3\"\nassert solution(\"4\\n1111\") == \"3\"\nassert solution(\"4\\n1101\") == \"4\"\nassert solution(\"4\\n1110\") == \"2\"\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1111\") == \"11\"\nassert solution(\"11\") == \"2\"\nassert solution(\"1000\") == \"3\"\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '4'\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"11\") == \"0\"\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('0000') == '1'\nassert solution('0001') == '2'\nassert solution('0110') == '1'\nassert solution('1010') == '2'\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('1111') == '4'\nassert solution('10') == '1'"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\nassert solution('5 10') == '0'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 10\n-1 5 0 -5 3\n''') == '0'\nassert solution('''3 4\n-10 0 20\n''') == '-1'"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 10\n-1 5 0 -5 3\n''') == '0'\nassert solution('''\n3 4\n-10 0 20\n''') == '-1'\n''')\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\nassert solution('0') == '-1'\n\n\n------Task------\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 solution(n, d), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 n \u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0434\u0435\u043d\u0435\u0433 \u0432 \u0441\u043f\u0440\u0430\u0432\u0430\u0445 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439:\n\nn \u0434\u043d\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0434\u0442\u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0434\u043d\u044f, \u0435\u0441\u043b\u0438 \u0434\u043d\u0435\u0439 \u043e\u0442\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u0447\u0430\u0441\u044b.\n\u041d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0434\u043d\u044f, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432 1 \u0447\u0430\u0441.\n\u041d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 d.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n (n\u226410^5) \u0438 \u043e\u0434\u0438\u043d \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u0438\u0441\u043b\u043e d (1 \u2264 d \u2264 10^9) \u2014 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0434\u0435\u043d\u0435\u0433 \u0432 \u0441\u043f\u0440\u0430\u0432\u0430\u0445 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0434\u0442\u0438 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0434\u043d\u044f \u0434\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e.\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 1\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n5 10\n-10 0 20\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n0\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n3 4\n-10 0 20\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n-1\n\n\u041f\u0440\u0438\u043c\u0435\u0440 3\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n2 10\n0 -1\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n2\n\n\n\"\"\"\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\nassert solution('5 100') == '-1'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '-1'\nassert solution('''\n-1 5\n-5 0 10 -11 0\n''') == '2'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10\") == \"0\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 10\") == \"0\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"10 1\") == \"1\""
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"2 5\") == \"1\"\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\nprint(solution(stdin))\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 2\n1 3\n3 1\"\"\") == \"3\"\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 3\\n3 1\") == \"3\"\nassert solution(\"2 2\\n1 3\\n3 1\") == \"3\"\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"3\""
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '3'"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1 3\n3 1\n''') == '3'\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 3\\n3 1') == '3'\nassert solution('2 2\\n1 3\\n3 1') == '4'\nassert solution('4 5\\n1 2 3 4 5\\n2 3 4 1') == '6'"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 1 3 1 1 2' or solution() == '-1'\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2 1 3 1 1 2'\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2 1 3 1 1 2\"\n\n\"\"\""
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '2 1 3'"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"2 1 3 1 1 2\"\n\"\"\""
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '-1'\n\nassert solution('''\n5\n3 3 3 3 3\n''') == '2 3 4 5'\n\nassert solution('''\n4\n1 2 2 1\n''') == '2 1 1 2'\n\nassert solution('''\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'\nassert solution('3') == '-1'"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().rstrip()\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'\nassert solution('3') == '1 1 2'\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"9\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"1\"\nassert solution(\"74\") == \"35\"\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('74') == '35'\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('74') == '35'"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('10') == '5'\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2\n\n5\n\n3\n\n10\n\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == 1\nassert solution(74) == 35"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('2\\n') == '1\\n'\nassert solution('74\\n') == '35\\n'\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n3\n7\n9\n11\n23\n''') == '1'\nassert solution('''22\n7\n8\n9\n10\n12\n14\n''') == '37'\nassert solution('''25\n29\n''') == '0'\n\n---------------------------------\n\nConsider the following graph with 5 vertices:\n\n    0\n  /  \\\n 1   2\n  \\  /\n   3\n    \\\n     4\n\nThe vertices are labeled from 0 to 4, where each edge between vertices with even index is a triangle and each edge between vertices with odd index is a square (rectangle). In the above graph, the first right-angled triangle has vertices labelled 1, 3, and 4. The second right-angled triangle has vertices labelled 2 and 3.\n\nYour task is to count how many right-angled triangles with side length 1 are present in the graph.\n\n\n\n-----Input-----\n\nThe only line contains a single integer n (1 \u2264 n \u2264 10^4) as we mentioned above.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n5\n\nOutput\n1\n\nInput\n74\n\nOutput\n35\n\nInput\n10\n\nOutput\n7\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('74') == '35'\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n1 1''') == '8'\nassert solution('''123 456789\n1 2 3\n4 5 6\n7 8 9''') == '1386871058'\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"7\"\nassert solution(\"123 456789\") == \"689974806\""
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 689974806\nassert solution('2 2') == 7\nassert solution('12 3') == 10\nassert solution('12 34567890') == 155328857\nassert solution('123456789123456789') == 2289223656"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n\n\"\"\""
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(inp) == 789\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n''') == '7'\nassert solution('''123 456789\n''') == '689974806'\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"7\"\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 2 1') == '111'\nassert solution('3 4 2 4') == '155'\nassert solution('2 3 2 1') == '11'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\n\nassert solution('''3 3 2 1\n1 2 3 59\n''') == '111'"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4 2 1\n1 2 3 59\n''') == \"111\"\nassert solution('''\n3 4 2 1\n1 2 3 59\n''') == \"111\"\nassert solution('''\n3 5 3 1\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 2 1\n1 2 3 59\n''') == '111', 'example 1'\nassert solution('''\n1 2 3\n1 2 3\n1 2 3\n''') == '6', 'example 2'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n''') == \"111\"\nassert solution('''3 4 2 1\n1 2 3 59\n''') == \"111\"\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4 2 1\n1 2 3 59\n''') == '111'\nassert solution('''3 3 2 2\n1 2 3 59\n''') == '210'\nassert solution('''3 3 2 2\n1 2 3 6\n''') == '-1'\nassert solution('''3 3 2 2\n1 2 3 6\n''') == '210'\nassert solution('''3 3 2 2\n1 2 3 2\n''') == '-1'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n''') == \"111\"\nassert solution('''3 4 2 1\n1 3 4 59\n''') == \"110\"\nassert solution('''3 4 2 1\n1 5 7 59\n''') == \"100\"\nassert solution('''3 4 2 1\n1 3 5 7\n''') == \"101\"\nassert solution('''3 4 2 1\n1 3 5 6\n''') == \"110\"\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 2 1') == '111', \"First\"\nassert solution('3 4 2 2') == '110', \"Second\"\nassert solution('3 4 3 1') == '111', \"Third\"\nassert solution('3 4 2 2') == '110', \"Fourth\"\nassert solution('3 4 2 3') == '110', \"Fifth\"\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n3 4 2 1''') == '111'\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2\\n\") == \"0 1 1\\n\"\nassert solution(\"3 4 5\\n\") == \"1 3 2\\n\"\nassert solution(\"4 1 1\\n\") == \"Impossible\\n\"\n\n\"\"\"\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\nassert solution('1 1 1') == 'Impossible'"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 2]) == \"0 1 1\"\nassert solution([3, 4, 5]) == \"1 3 2\"\nassert solution([4, 1, 1]) == \"Impossible\""
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2\") == \"0 1 1\"\nassert solution(\"3 4 5\") == \"1 3 2\"\nassert solution(\"4 1 1\") == \"Impossible\"\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 2\n''') == '0 1 1'\nassert solution('''\n3 4 5\n''') == '1 3 2'\nassert solution('''\n4 1 1\n''') == 'Impossible'\nassert solution('''\n5 4 1\n''') == 'Impossible'\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '1 3 2'\nassert solution('1 1 2') == '0 1 1'\nassert solution('4 1 1') == '1 3 2'\nassert solution('4 5 1') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4 5\n\"\"\") == \"\"\"\n1 3 2\"\"\"\n\nassert solution(\"\"\"\n3 4 5\n\"\"\") == \"\"\"\n1 3 2\"\"\"\n\nassert solution(\"\"\"\n4 1 1\n\"\"\") == \"\"\"\n1 3 2\"\"\"\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 1 2\n\"\"\") == \"0 1 1\"\nassert solution(\"\"\"\n3 4 5\n\"\"\") == \"1 3 2\"\nassert solution(\"\"\"\n4 1 1\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n5 2 1\n\"\"\") == \"1 3 2\"\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1 2''') == '0 1 1'\nassert solution('''3 4 5''') == '1 3 2'\nassert solution('''4 1 1''') == 'Impossible'\nassert solution('''5 6 8''') == 'Impossible'\nassert solution('''3 5 2''') == '1 3 2'\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n5\n0 1 2 3 4\n''') == '10'\nassert solution('''\n5\n1 1 0 1 1\n''') == '1'\nassert solution('''\n1\n12\n''') == '0'\nassert solution('''\n3\n0 0 0\n''') == '0'\nassert solution('''\n2\n1 1\n''') == '1'"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 1 2\\n') == '1'\nassert solution('4\\n0 1 2 3\\n') == '4'\nassert solution('5\\n0 1 2 3 4\\n') == '10'\nassert solution('3\\n0 1 0 1\\n') == '0'\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '10'\nassert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('2') == '0'\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n1 1 0 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 3 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n12\n\"\"\") == \"0\"\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '10'\nassert solution('5') == '1'\nassert solution('4') == '4'\nassert solution('3') == '4'\nassert solution('2') == '0'\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n0 1 2 3 4\\n') == '10'\nassert solution('5\\n1 1 0 1 1\\n') == '1'\nassert solution('3\\n1 3 1\\n') == '4'\nassert solution('1\\n12\\n') == '0'"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 1 2 3 4\\n\") == \"10\"\nassert solution(\"5\\n1 1 0 1 1\\n\") == \"1\"\nassert solution(\"3\\n1 3 1\\n\") == \"4\"\nassert solution(\"1\\n12\\n\") == \"0\"\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '10'\nassert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nassert solution() == \"1\"\nassert solution() == \"4\"\nassert solution() == \"0\""
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 0') == '90.0000000000'\nassert solution('2\\n2 0') == '135.0000000000'\nassert solution('3\\n2 0') == '36.8698976458'\nassert solution('4\\n2 0') == '0.9999999999999'"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '90.0000000000'\nassert solution('3') == '135.0000000000'\nassert solution('4') == '270.0000000000'\n"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 0\\n0 2\\n\") == \"90.0000000000\"\nassert solution(\"2\\n2 1\\n1 2\\n\") == \"135.0000000000\"\nassert solution(\"3\\n2 0\\n0 2\\n-2 2\\n\") == \"270.0000000000\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n\") == \"36.8698976458\""
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n2 0\\n0 2') == '90.0000000000'\nassert solution('3\\n2 0\\n0 2\\n-2 0\\n0 -2') == '135.0000000000'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '270.0000000000'\nassert solution('5\\n2 0\\n0 2\\n-2 0\\n0 -2\\n5 7') == '36.8698976458'\nassert solution('6\\n2 0\\n0 2\\n-2 0\\n0 -2\\n5 7') == '36.8698976458'\n"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '90.0000000000'\nassert solution('3') == '135.0000000000'\nassert solution('4') == '270.0000000000'"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == '90.0000000000'\nassert solution(\"3 2\") == '135.0000000000'\nassert solution(\"4 2\") == '270.0000000000'\nassert solution(\"2 1\") == '36.8698976458'"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2 0\\n0 2') == '90.0000000000'\nassert solution('3\\n2 0\\n0 2\\n-2 2') == '135.0000000000'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '270.0000000000'\nassert solution('2\\n1 0\\n0 2\\n') == '36.8698976458'"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 0\\n0 2') == '90.0'\nassert solution('2\\n2 0\\n0 2') == '135.0'\nassert solution('3\\n2 0\\n0 2\\n-2 2\\n') == '270.0'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n') == '36.8698976458'\n"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 0\n0 2\n''') == '90.0000000000'\nassert solution('''\n3\n2 0\n0 2\n-2 2\n''') == '135.0000000000'\nassert solution('''\n4\n2 0\n0 2\n-2 0\n0 -2\n''') == '270.0000000000'\n"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0\\n0 2') == '90.0000000000'\nassert solution('3 2\\n2 0\\n-2 0\\n0 -2') == '135.0000000000'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('5 1 4 3 1 2') == '6'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\n\n'''\n\n\n'''\n1. Try to solve it in-place, i.e., with O(1) additional space.\n2. Try to do it without using any extra space.\n3. Use O(n) additional space.\n\n\n\n'''\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('5 1 4 3 1 2') == '6'"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 3 2\n''') == '3'\nassert solution('''5\n1 4 3 1 2\n''') == '6'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 3 2\n1 4 3 1 2''') == '3'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 3 2\n''') == '3'\nassert solution('''\n5\n1 4 3 1 2\n''') == '6'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 3 2\\n\"\n) == \"3\"\n\nassert solution(\n    \"5\\n\"\n    \"1 4 3 1 2\"\n) == \"6\"\n\nassert solution(\n    \"10\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\"\n) == \"10\"\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3 2\n4 5 6''') == '6'\nassert solution('''5\n1 2 3 4 5''') == '5'''\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"6\"\nassert solution('3') == \"3\"\nassert solution('0') == \"0\"\nassert solution('1') == \"1\""
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nAaA\n''') == '2'\nassert solution('''7\nbcAAcbc\n''') == '3'\nassert solution('''6\naaBCCe\n''') == '5'"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"9\") == \"8\""
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nAaA\n''') == '2'\nassert solution('''\n7\nbcAAcbc\n''') == '3'\nassert solution('''\n6\naaBCCe\n''') == '5'\nprint(\"You passed the test!\")\n\n'''\ni/p\n5\ncBcD\n\no/p\n3\n\ni/p\n6\nbbaaB\n\no/p\n3\n'''\n"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\naaA\n\n\"\"\") == '2'\n\nassert solution(\n\"\"\"\n6\nbbBBc\n\n\"\"\") == '5'\n\nassert solution(\n\"\"\"\n7\naaaaa\n\n\"\"\") == '4'\n\nassert solution(\n\"\"\"\n10\naaaaa\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBc\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb\nbbBBBBb"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"5\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\na''') == '2'\nassert solution('''7\nb''') == '5'\nassert solution('''6\na''') == '5'"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"5\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == '3'\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nxxXx\\n\") == \"1\"\nassert solution(\"2\\nXX\\n\") == \"1\"\nassert solution(\"6\\nxXXxXx\\n\") == \"0\"\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"5\"\nassert solution(\"15\") == \"5\"\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"xX\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('5xx5x') == '5x5x'\n\n\"\"\"\n\nn = int(input())\ns = input()\ncnt_x = s.count('x')"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('XX') == '1'\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nxxXx\") == \"1\\nxxXx\"\nassert solution(\"2\\nXX\") == \"1\\nxX\"\nassert solution(\"6\\nxXXxXx\") == \"0\\nxXXxXx\"\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nXX\\n') == '1\\nxXXxXx'\nassert solution('6\\nxXXxXx\\n') == '0\\nxXXxXx'\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"xX\"\nassert solution(\"6\") == \"0\"\nassert solution(\"xXXxXx\") == \"xXxXxXx\""
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"xX\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\n\n\"\"\""
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"yandex\") == \"0\"\nassert solution(\"yahoo\") == \"1\"\nassert solution(\"google\") == \"impossible\"\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"yandex\") == \"0\"\nassert solution(\"yahoo\") == \"1\"\nassert solution(\"google\") == \"impossible\""
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"yandex\") == \"0\"\nassert solution(\"yahoo\") == \"1\"\nassert solution(\"google\") == \"impossible\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"0\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"0\"\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('google') == 'impossible'\nassert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nprint(solution('google'))\nprint(solution('yandex'))\nprint(solution('yahoo'))\nprint(solution('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 5\n2 8\n1 6\n''') == '1'\nassert solution('''\n3\n0 10\n1 5\n7 15\n''') == '3'\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n0 5\n2 8\n1 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n0 10\n1 5\n7 15\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n0 10\n1 5\n7 15\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n0 10\n1 5\n7 15\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n0 10\n1 5\n7 15\n\"\"\") == \"1\"\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 5\n2 8\n1 6\n''') == '1'\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0 5\n2 8\n''') == '1'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 3\") == \"3\"\nassert solution(\"3 2 2\") == \"1\"\nassert solution(\"9 9 99\") == \"711426616\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 1 3\") == \"3\"\nassert solution(\"3 2 2\") == \"1\"\nassert solution(\"9 9 99\") == \"711426616\"\nprint(solution())\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 3\n''') == '3'\n\nassert solution('''\n3 2 2\n''') == '1'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 3\") == \"3\"\nassert solution(\"3 2 2\") == \"1\"\nassert solution(\"9 9 99\") == \"711426616\"\n\n\"\"\"\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n9 9 99\n\"\"\") == \"711426616\"\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n5 10 7 3 20''') == '3'\nassert solution('''6 2\n100 1 10 40 10 40''') == '97'\nassert solution('''3 0\n1 2 3''') == '0'"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 1\n5 10 7 3 20\n''') == '3'\n\nassert solution('''\n6 2\n100 1 10 40 10 40\n''') == '97'\n\nassert solution('''\n3 0\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 2') == '0'\n\nstdin = \"\"\"\n3 1\n1 2 3\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n3 0\n1 2 3\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution(stdin=\"5 1\\n5 10 7 3 20\") == \"3\"\nassert solution(stdin=\"6 2\\n100 1 10 40 10 40\") == \"97\""
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '3'\nassert solution(input) == '0'"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 10 7 3 20''') == \"3\"\nassert solution('''6 2\n100 1 10 40 10 40''') == \"97\"\nassert solution('''3 0\n1 2 3''') == \"0\"\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"3\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"1 2 3\") == \"4\"\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n5 10 7 3 20') == '3'\nassert solution('6 2\\n100 1 10 40 10 40') == '97'\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n5 10 7 3 20\n\n''') == '3'\nassert solution('''6 2\n100 1 10 40 10 40\n\n''') == '97'\nassert solution('''3 0\n1 2 3\n\n''') == '0'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('0.100') == '1E-1'\nassert solution('100') == '1E2'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('1.23400') == '1.234'\nassert solution('0.100') == '1E-1'\nassert solution('100') == '1E2'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100.') == '1E2'"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == \"1.6E1\"\nassert solution('01.23400') == \"1.234\"\nassert solution('0.100') == \"1E-1\"\nassert solution('100') == \"1E2\""
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == \"1.6E1\"\nassert solution('01.23400') == \"1.234\"\nassert solution('.100') == \"1E-1\"\nassert solution('100') == \"1E2\"\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100') == '1E2'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.') == '1E-1'\nassert solution('100') == '1E2'"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100.') == '1E2'\nassert solution('.100') == '1E-1'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"1.6E1\"\nassert solution(\"01.23400\") == \"1.234\"\nassert solution(\"0.100\") == \"1E-1\"\nassert solution(\"100\") == \"1E2\"\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"1.6E1\"\nassert solution(\"01.23400\") == \"1.234\"\nassert solution(\".\") == \"1E-1\"\nassert solution(\"100.\") == \"1E2\"\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 3 2\n    ''') == \"GBGBG\"\nassert solution('''7 2 2 5\n    ''') == \"BBGBGBB\""
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 3 2\\n') == 'GBGBG'\nassert solution('7 2 2 5\\n') == 'BBGBGBB'\nassert solution('5 2 3 2\\n') == 'NO'"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'GBGBG'\nassert solution() == 'BBGBGBB'\n\n'''\n\nimport collections"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 3 2\n''') == 'GBGBG'\nassert solution('''7 2 2 5\n''') == 'BBGBGBB'\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 5\\n') == 'GBGBG', \"0\"\nassert solution('7 2 2 5\\n') == 'BBGBGBB', \"1\"\nassert solution('6 2 2 3\\n') == 'GBGBGBG', \"2\"\nassert solution('5 1 3 2\\n') == 'GBGBGBG', \"3\"\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['5 1 3 2', '', '', '', '', '']) == 'GBGBG'\nassert solution(['7 2 2 5', '', '', '', '', '']) == 'BBGBGBB'\nassert solution(['10 0 3 2', '', '', '', '', '', '', '', '', '', '']) == 'NO'\nassert solution
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 3 2') == \"GBGBG\"\nassert solution('7 2 2 5') == \"BBGBGBB\"\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 3 2') == 'GBGBG'\nassert solution('7 2 2 5') == 'BBGBGBB'\nassert solution('4 3 4 0') == 'NO'\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 1 3 2\"\n) == \"GBGBG\"\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 3 2') == 'GBGBG'\nassert solution('7 2 2 5') == 'BBGBGBB'"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\") == \"165\"\nassert solution(\"4 5 8\") == \"238\"\nassert solution(\"4 6 8\") == \"410\"\nassert solution(\"5 6 8\") == \"838\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3\n1\n2\n1\n3''') == '1'\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 3 3\"\n) == \"1\"\nassert solution(\n    \"2 3 10\"\n) == \"165\""
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    1 3 3\n    ''') == \"1\"\nassert solution('''\n    2 3 10\n    ''') == \"165\"\nassert solution('''\n    2 3 9\n    ''') == \"0\"\n\n\n\n--------------------------------------------------------------------------------"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\"\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n\n\"\"\"\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\""
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\""
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '7'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == '7'\nassert solution(\"6 3\") == '8'"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\""
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 8 7 4\") == \"4\"\nassert solution(\"4\\n1 2 4 8\") == \"1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1\"\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5\\n'\n    '2 6 8 7 4'\n) == '4'\n\nassert solution(\n    '8\\n'\n    '1 2 3 4 5 6 7 8'\n) == '1'\n\nassert solution(\n    '4\\n'\n    '1 2 4 8'\n) == '-1'"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"-1\"\n\n'''\n\nfrom collections import deque"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 6 8 7 4\") == \"4\"\nassert solution(\"8 1 2 3 4 5 6 7 8\") == \"1\"\nassert solution(\"4 1 2 3 4 5 6 7 8\") == \"-1\""
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('8') == '1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 6 8 7 4') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('4\\n1 2 4 8') == '-1'\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4 1\") == \"1\"\nassert solution(\"8 1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"4 8 7 6 5 3 2 1\") == \"4\"\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 6 8 7 4\n''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '1'\nassert solution('''4\n1 2 4 8\n''') == '-1'\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '1'\nassert solution('8') == '1'\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8\") == \"4\"\nassert solution(\"8 1 2 3 4 5 6 7 8\") == \"1\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 2') == '1 1 1 1 1'\nassert solution('4 2 3') == '1 1 2 2'\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5 2\n2 3\n''') == '1 2 1 2'\nassert solution('''\n5 5 2\n1 2\n''') == '1 1 1 1 1'\nassert solution('''\n3 5 2\n1 2\n''') == '1 1 1 1 1'\nassert solution('''\n3 5 2\n1 2\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2 3\n1 2\n2 3 4\n''') == '1 1 1 1 1'\n\nassert solution('''\n4 1 2\n3 4 1 2\n''') == '1 1 1 1 2'\n\nassert solution('''\n5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1 2 1 1 2'\n\nassert solution('''\n5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1 1 2 1 1 2 2'\n\nassert solution('''\n5 2 4\n2 3\n3 1 4\n''') == '1 1 1 1 1 1 1 2 1 2 2'"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1 1 1', 'First test case'\nassert solution('5 5 2') == '1 1 1 1 1', 'Second test case'"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\") == \"1 1 1\"\nassert solution(\"4 4 5 1 1\") == \"1 1 2 1 1\"\nassert solution(\"3 3 3\") == \"1 1 1\"\nassert solution(\"4 4 4\") == \"1 1 1 1\"\nassert solution(\"5 5 5 1 1\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 3') == '1 1 1 1'\nassert solution('5 5 2') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\nassert solution('5') == '1 2'"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"1 1 2 2\"\nassert solution(\"5 5 2\") == \"1 1 1 1 1\"\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1 2'\nassert solution(input()) == '1 1 2 2'\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 2 2') == '1 1 1 1'\nassert solution('5 5 2') == '1 1 1 1 1'"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1 2 2 3'\nassert solution('3') == '1 2 2 3'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n\n\"\"\"\n\nstdin = \"\"\"4\n3 2 1 2\n\"\"\""
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 2 1 2\") == \"1 2 2 3\"\nassert solution(\"3\\n8 2 5 3\") == \"2 3 8 5\""
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 2 1 2\\n\") == \"1 2 2 3\"\nassert solution(\"3\\n2 3 8\\n\") == \"2 3 8\""
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2 3') == '1 2 2 3'\nassert solution('3 2 1 2') == '1 2 2 3'\nassert solution('3') == '1 2 3'"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 1 1'\nassert solution('2') == '2 2 2'"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 1 2\n''') == '1 2 2 3'\nassert solution('''\n3\n2 3 8\n''') == '2 3 8 1'\nassert solution('''\n5\n3 2 4 1 5\n''') == '3 2 4 1 5 2'\nassert solution('''\n6\n5 3 1 4 5 1\n''') == '5 3 1 4 5 1 2'\nassert solution('''\n8\n7 2 1 6 3 9 5 1\n''') == '7 2 1 6 3 9 5 1 2'\n"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1 2\") == \"1 2 2 3\"\nassert solution(\"3\") == \"2 3\"\nassert solution(\"10\") == \"10 9 8 7 6 5 4 3 2 1\"\n"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1 2 2 3'\nassert solution(input()) == '2 3 8'\n\n\"\"\"\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '-1'\nassert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'\nassert solution('100 1 1 1') == '100'"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'\n\n'''\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'\nassert solution('10') == '-1'"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''50 30 10 10\n    100 50 10 21\n    ''') == '50'\nassert solution('''40 30 10 10\n    100 50 10 21\n    ''') == '-1'\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data_1) == \"50\"\nassert solution(input_data_2) == \"30\"\nassert solution(input_data_3) == \"10\"\nassert solution(input_data_4) == \"-1\"\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 30 10 10') == '50'\nassert solution('100 50 10 21') == '-1'\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"-1\"\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"6 1\") == \"2\""
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n1 2\"\"\") == \"1\"\nassert solution(\"\"\"\n10 1\n4 5 4 8 2 3 7 5\"\"\") == \"2\"\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1'\nassert solution('6 1') == '2'\nassert solution('6 1') == '2'"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"6 1\") == \"2\"\n\n\"\"\"\n\nfrom typing import List\nimport unittest\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('6 1') == '2'\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"6 1\") == \"2\""
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"6 1\") == \"2\"\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('6 1') == '2'\nassert solution('2 5 1') == '1'\nassert solution('5 1 2') == '1'\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('6 1') == '2'\nassert solution('10 5') == '3'"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2\\n') == '1'\nassert solution('6 1\\n5 1 2 3 4 1\\n') == '2'\n\n'''"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"abcdd\"\n) == \"3 abc\"\nassert solution(\n    \"abbcdddeaaffdfouurtytwoo\"\n) == \"18 abbcd...\"\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nabcdd\n''') == '3 abc'\nassert solution('''\nabbcdddeaaffdfouurtytwoo\n''') == '18 abbcd...tw'\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"./dataset_54_6.txt\") == '18 abbcd...tw\\n17 bbcdd...tw\\n16 bcddd...tw\\n15 cddde...tw\\n14 dddea...tw\\n13 ddeaa...tw\\n12 deaad...tw\\n11 eaadf...tw\\n10 aadfortytw\\n9 adfortytw\\n8 dfortytw\\n9 fdfortytw\\n8 dfortytw\\n7 fortytw\\n6 ortytw\\n5 rtytw\\n6 urtytw\\n5 rtytw\\n4 tytw\\n3 ytw\\n2 tw\\n1 w'\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abcdd\") == \"3 abc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\""
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    abcdd\n''') == '3 abc'\nassert solution('''\n    abbcdddeaaffdfouurtytwoo\n''') == '18 abbcd...tw'\nassert solution('''\n    abcdff\n''') == '1 fff'\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''abcdd\n\n''') == '3 abc'\nassert solution('''abbcdddeaaffdfouurtytwoo\n\n''') == '18 abbcd...tw'"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"18 abbcd...tw\\n17 bbcdd...tw\\n16 bcddd...tw\\n15 cddde...tw\\n14 dddea...tw\\n13 ddeaa...tw\\n12 deaad...tw\\n11 eaadf...tw\\n10 aadfortytw\\n9 adfortytw\\n8 dfortytw\\n9 fdfortytw\\n8 dfortytw\\n7 fortytw\\n6 ortytw\\n5 rtytw\\n6 urtytw\\n5 rtytw\\n4 tytw\\n3 ytw\\n2 tw\\n1 w\\n0 \n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"abcdd\"\n    ) == \"3 abc\"\nassert solution(\n    \"abbcdddeaaffdfouurtytwoo\"\n    ) == \"18 abbcd...\"\nassert solution(\n    \"abbcdddeaadfortytw\"\n    ) == \"18 abbcd...\"\nassert solution(\n    \"abbcdddddeaadfortytw\"\n    ) == \"18 abbcd...\"\nassert solution(\n    \"abcdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abcdd') == '3 abc'\nassert solution('abbcdddeaaffdfouurtytwoo') == '18 abbcd...tw'\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abcdd') == '3 abc'\nassert solution('abbcdddeaaffdfouurtytwoo') == '18 abbcd...tw'\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n9.\n\nWrite a program in a language such that it can be used to convert from base 10 to any base.\n\nFor example, if given the string \"1234\" in base 10, and the base you want is 2, your program should output the string \"12\" in base 2.\n\nYour program should be able to accept the base from which you want the output and your program should work even if the input string is not in base 10.\n\nHint:\n\nYou can work with the string as a list of digits and then convert them using the `in` operator.\n\nHere's a sample output:\n\nPlease enter the base you want to convert to:\n2\nPlease enter the base you want to convert from:\n2\nPlease enter a string to convert:\n1234\nThe result is 12\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n10.\n\nWrite a program in a language such that it can be used to calculate the sum of its digits.\n\nFor example, if the sum of the digits of the string \"1234\" is 6, then the program should output 6.\n\nYour program should be able to accept any number as an input, and the program should output its sum.\n\nHint:\n\nYou can work with the string as a list of digits and then add them up using the `sum` method.\n\nHere's a sample output:\n\nPlease enter an integer:\n1234\nThe sum of its digits is 6\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n11.\n\nWrite a program in a language such that it can be used to count the number of occurences of a character in a string.\n\nFor example, if the string is \"abracadabra\" and the character is 'a', your program should output 2.\n\nYour program should be able to accept any string as an input and the program should output the number of occurences of the character in it.\n\nHint:\n\nThe `len` function returns the length of a string.\n\nHere's a sample output:\n\nPlease enter a string:\nabracadabra\nThe number of occurrences of 'a' is 2\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n12.\n\nWrite a program in a language such that it can be used to find the largest number from a list of numbers.\n\nFor example, if the list is [10, 20, 5, 8, 40, -50] and the largest number is 8, then the program should output 8.\n\nYour program should be able to accept any list of numbers as an input and output the largest number.\n\nHint:\n\nYou can work with the list as a list of numbers and then find the maximum number using the `max` method.\n\nHere's a sample output:\n\nPlease enter a list:\n10\n20\n5\n8\n40\n-50\nThe largest number is 8\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n13.\n\nWrite a program in a language such that it can be used to reverse a string.\n\nFor example, if the string is \"abcdefg\" and the program is called \"reverse\", the output should be \"fedcba\".\n\nYour program should be able to accept any string as an input and output the string in the reverse order.\n\nHint:\n\nYou can work with the string as a list of characters and then reverse the string using the `reversed` method.\n\nHere's a sample output:\n\nPlease enter a string:\nabcdefg\nThe reversed string is fedcba\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n14.\n\nWrite a program in a language such that it can be used to check if a string is a palindrome.\n\nFor example, if the string is \"abcdefg\", the program should output \"True\".\n\nIf the string is \"abccba\", the program should output \"False\".\n\nYour program should be able to accept any string as an input and output \"True\" or \"False\".\n\nHint:\n\nYou can work with the string as a list of characters and then check if the string is a palindrome using the `isalpha` method.\n\nHere's a sample output:\n\nPlease enter a string:\nabcdefg\nThe string is a palindrome\n\nPlease enter a string:\nabccba\nThe string is not a palindrome\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n15.\n\nWrite a program in a language such that it can be used to find the first element of a singly linked list that has the maximum value.\n\nIn the given example the list has the following singly linked list representation:\n\nThe head node is labeled 1.\nThe next of the head node is 2.\nThe next of the second node is 4.\nThe next of the fourth node is 3.\nThe next of the third node is 5.\nThe next of the fifth node is 6.\nThe next of the sixth node is 7.\nThe next of the seventh node is 8.\nThe next of the eight node is 9.\nThe next of the ninth node is 10.\nThe next of the tenth node is 11.\nThe next of the eleventh node is 12.\n\nThe goal is to find the maximum value node and its value should be 10.\n\nHere's a sample output:\n\nThe node with the maximum value is the node with value 10.\nThe node with the maximum value is node 10 with value 10.\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n16.\n\nWrite a program in a language such that it can be used to find the nodes of a singly linked list whose next value is null.\n\nFor example, if the list is 1 -> 2 -> 3 -> 4 -> 5 then the output should be 1.\n\nHere's a sample output:\n\nPlease enter a list:\n1 -> 2 -> 3 -> 4 -> 5\nThe list has a node with value 5.\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n17."
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"5\\n\") == \"10080\"\nassert solution(\"10\\n\") == \"100800000\""
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"-1\", \"1\"\nassert solution(\"5\\n\") == \"10080\", \"5\"\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '10080'\nassert solution('1') == '-1'\nassert solution('6') == '-1'\n'''\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"10080\"\nassert solution(\"1\") == \"-\"\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10080') == '10080'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('5') == '10080'"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '10080'\nassert solution('7') == '-1'\n\nassert solution('1') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n5\n7\n''') == '10080'\n\nassert solution('''5\n1\n2\n3\n5\n7\n''') == '-1'\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"-1\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"10080\\n\"\nassert solution(\"6\\n\") == \"-1\"\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n5\n7\n''') == '10080'\nassert solution('''1\n3\n5\n7\n''') == '-1'\nassert solution('''1\n3\n5\n7\n''') == '-1'\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"10080\""
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 2\\n'\n    '1 2 3 4 5\\n'\n) == '5'\nassert solution(\n    '5 1\\n'\n    '-4 -5 -3 -2 -1\\n'\n) == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 1') == '-5'"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 1') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 2 3 4 5') == '5'\nassert solution('5 1\\n-4 -5 -3 -2 -1') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == str(int(input()))"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2 3 4 5') == '5'\nassert solution('5 1\\n-4 -5 -3 -2 -1') == '-5'"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"2\", \"2\", \"5\", \"5\", \"8\", \"7\"]) == \"7\"\nassert solution([\"2\", \"2\", \"5\", \"5\", \"8\", \"7\"]) == \"7\""
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"-4 -5 -3 -2 -1\") == \"5\"\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 1\") == \"-\"\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n1 2 3 4 5\n''') == '5'\nassert solution('''\n5 1\n-4 -5 -3 -2 -1\n''') == '-5'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '3'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5\n2\n1\n3\n''') == '2'\n\nassert solution('''\n3\n6\n2\n3\n2\n''') == '3'\n\nassert solution('''\n2\n5\n5\n10\n''') == '1'\n\nassert solution('''\n1\n5\n5\n10\n''') == '2'\n\nassert solution('''\n1\n1\n1\n10\n''') == '1'"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n5\\n2') == '2'\nassert solution('3\\n6\\n2') == '3'\nassert solution('2\\n5\\n5') == '1'\nassert solution('2\\n6\\n2') == '1'\nassert solution('2\\n5\\n5') == '1'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n2\\n1\\n3\") == \"2\"\nassert solution(\"3\\n6\\n2\\n3\") == \"3\"\nassert solution(\"2\\n5\\n5\\n10\") == \"1\"\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    2\n    1\n    3\n    2\n''') == '2'\nassert solution('''\n    3\n    2\n    1\n    3\n    2\n''') == '1'\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n''') == '1'\nassert solution('''\n    6\n    3\n    4\n    5\n    6\n    7\n''') == '2'\nassert solution('''\n    4\n    3\n    2\n    1\n    5\n    6\n''') == '2'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n\n'''\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n2\n1\n3\n''') == '2'\nassert solution('''3\n6\n2\n3\n2\n''') == '3'\nassert solution('''2\n5\n5\n10\n''') == '1'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n2\n1\n3\n''') == '2'\nassert solution('''\n3\n6\n2\n3\n2\n''') == '3'\nassert solution('''\n2\n5\n5\n10\n''') == '1'"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\""
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'First'\nassert solution(input()) == 'Second'\nassert solution(input()) == 'Friendship'\n\n'''\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n\n\"\"\"\n\nstdin = input()\ns, v_1, v_2, t_1, t_2 = stdin.split(' ')\ns = int(s)\nv_1 = int(v_1)\nv_2 = int(v_2)\nt_1 = int(t_1)\nt_2 = int(t_2)"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 10\n''') == '10'\nassert solution('''\n2 2 5\n''') == '2'\nassert solution('''\n2 3 9\n''') == '1'"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == input\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\n\n\n\"\"\""
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"2 3 9\") == \"1\"\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"2 3 9\") == \"1\"\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"2 3 9\") == \"1\"\nassert solution(\"2 3 9\") == \"1\""
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''1 2 5''') == '2'\nassert solution('''2 3 9''') == '1'\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == str(min(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"-1 -1\") == \"3\""
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n0 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n0 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n-1 -1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '3'"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0\") == '0'\nassert solution(\"1 0\") == '0'\nassert solution(\"0 1\") == '0'\nassert solution(\"-1 -1\") == '3'\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '3'\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0') == '0'\nassert solution('1 1') == '1'\nassert solution('1 0') == '1'\nassert solution('0 1') == '1'\nassert solution('-1 -1') == '3'"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == '0'\nassert solution(\"1 0\") == '0'\nassert solution(\"0 1\") == '1'\nassert solution(\"-1 -1\") == '3'\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0') == '0'\nassert solution('-1 -1') == '3'\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"-1 -1\") == \"3\"\nassert solution(\"11 11\") == \"10\"\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    0 0\n    ''') == '0'\nassert solution('''\n    1 0\n    ''') == '0'\nassert solution('''\n    0 1\n    ''') == '2'\nassert solution('''\n    -1 -1\n    ''') == '3'"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\nassert solution(input()) == '0'"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"()\") == \"1\"\nassert solution(\"(()())\") == \"2\"\nassert solution(\"(((())))\") == \"3\"\nassert solution(\"()((()))\") == \"4\"\nassert solution(\"(((((())()))))\") == \"5\"\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"((()))\") == \"6\"\nassert solution(\"(())\") == \"6\"\nassert solution(\"()()\") == \"7\"\nassert solution(\"(()(()))\") == \"0\"\nassert solution
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"())\") == \"0\"\nassert solution(\"(())\") == \"1\"\nassert solution(\"(()())\") == \"2\"\nassert solution(\"()()()\") == \"3\"\nassert solution(\"(()())()\") == \"4\"\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''()()()''') == '6'\nassert solution('''())''') == '0'\nassert solution('''()))''') == '0'\nassert solution('''(((()))))''') == '10'\nassert solution('''(((((())')))))''') == '6'\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('())') == '1'\nassert solution('())()') == '2'\nassert solution('((()))') == '2'\nassert solution('((()))())') == '4'\nassert solution('((()))()())') == '4'\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"((()))\") == \"6\"\nassert solution(\"(((()))\") == \"3\"\nassert solution(\"(((())(()))\") == \"0\"\nassert solution
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('()') == '1'\nassert solution('((()))') == '3'\nassert solution('((())())') == '3'\nassert solution('()()()') == '7'\nassert solution('(()()())') == '7'\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''((()))''') == '6'\nassert solution('''(()()())''') == '7'\nassert solution('''(((())))''') == '0'\nassert solution('''((()((()))))''') == '0'\nassert solution('''((()(()()))''') == '4'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '3'\nassert solution('24') == '3'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"3\"\nassert solution(\"24\") == \"3\"\nassert solution(\"24\") == \"3\"\nassert solution(\"12\") == \"2\"\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '1'\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '3'\nassert solution('''\n16\n''') == '4'\n''')\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('12') == '3'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''24''') == '3'\n'''"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    1\n    \n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    12\n    \n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    24\n    \n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    144\n    \n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    12\n    \n    \"\"\") == \"2\"\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '3'\nassert solution('24') == '3'\nassert solution('15') == '2'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('8') == '2'\nassert solution('16') == '3'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('15') == '4'\nassert solution('25') == '4'\nassert solution('50') == '5'\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\""
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"12\") == \"5\"\nassert solution(\"20\") == \"5\"\nassert solution(\"10000\") == \"3\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"111\") == \"1\"\nassert solution(\"1111\") == \"2\"\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\n\n'''\n\nn = int(stdin.readline())\n\nt = stdin.readline().strip()\n\ns = \"110110110\"\n\ncount = 0"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1011\n''') == '9999999999'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1101') == '3'\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0110') == '9999999999'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n11') == '5'\nassert solution('5\\n1101') == '5'\nassert solution('5\\n11010') == '3'\nassert solution('5\\n1010') == '2'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '9999999999'\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"00\") == \"\"\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '1'\nassert solution('''3\n''') == '1'\nassert solution('''4\n''') == '1'\nassert solution('''5\n''') == '0'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('20 0') == '1'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 0 2\n''') == '1'\nassert solution('''5 3\n1 0 0 4 1\n''') == '2'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 2\n    2 0 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n    5 3\n    1 0 0 4 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0 2') == '1'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n1 0 2 4 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 3\n1 0 0 2 4 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 3\n0 1 2 4 3 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('8 1') == '8'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n10''') == '2'\nassert solution('''6\n100011''') == '2'\nassert solution('''2\n11''') == '1'"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('10') == 1\nassert solution('100011') == 2"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '1'\nassert solution(input) == '2'\nassert solution(input) == '2'\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 0'\nassert solution('6') == '2 1'\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(2)) == \"1 0\"\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1'\n) == '1'\n\nassert solution(\n    '2'\n) == '1'\n\nassert solution(\n    '3'\n) == '1'\n\nassert solution(\n    '4'\n) == '2'\n\nassert solution(\n    '5'\n) == '3'"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 0'\nassert solution('3') == '2'\nassert solution('4') == '2 1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n10\n''') == '2'\nassert solution('''6\n100011\n''') == '2'\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1'\n) == '1'\nassert solution(\n    '2'\n) == '1'\nassert solution(\n    '6'\n) == '2'\nassert solution(\n    '100011'\n) == '2'\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n8 5\n''') == '2 2'\n\nassert solution('''3 4\n2 2 4\n''') == '1 1'\n\nassert solution('''5 3\n8 3 2 6 3\n''') == '3 3'"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"8 5 5\\n\"\n) == \"0 2\\n\"\n\nassert solution(\n    \"3 4\\n\"\n    \"2 2 4\\n\"\n) == \"1 1\\n\"\n\nassert solution(\n    \"5 3\\n\"\n    \"8 3 2 6 3\\n\"\n) == \"3 3\\n\"\n\nassert solution(\n    \"5 3\\n\"\n    \"8 3 2 6 3\\n\"\n) == \"3 3\\n\"\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"0 2\"\nassert solution(\"3 4\") == \"1 1\"\nassert solution(\"5 3\") == \"3 3\"\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0 2'\nassert solution('3 4') == '1 1'\nassert solution('5 3') == '3 3'\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"0 1\"\nassert solution(\"2 2\") == \"2 1\"\nassert solution(\"5 3\") == \"3 3\"\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == '0 2'\nassert solution(\"3 4\") == '1 1'\nassert solution(\"5 3\") == '3 3'\nassert solution(\"7 5\") == '4 2'"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '0 2'\nassert solution('3 4') == '1 1'\nassert solution('5 3') == '3 3'"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n5 8 5''') == '0 2'\nassert solution('''3 4\n2 2 4''') == '1 1'\nassert solution('''5 3\n8 3 2 6 3''') == '3 3'\nassert solution('''5 3\n5 8 5''') == '1 1'\nassert solution('''6 3\n8 3 2 6 3''') == '1 1'\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0 2'\nassert solution('3 4') == '1 3'\nassert solution('5 3') == '3 3'\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"0 2\"\nassert solution(\"3 4\") == \"1 1\"\nassert solution(\"5 3\") == \"3 3\""
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == 18\nassert solution(\"xyz\") == -1"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == '18', \"First\"\nassert solution(\"xyz\") == '-1', \"Second\"\nassert solution(\"bbaze\") == '8', \"Third\""
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaze') == '8'\nassert solution('abacaba') == '-1'\nassert solution('xyz') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == 2\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''bbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\nassert solution('''abacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\nassert solution('''xyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 8\n\nassert solution('''abacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5''') == 18\n\nassert solution('''xyz\n4\naxx 8\nza 1\nefg 4\nt 1''') == -1"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"18\"\nassert solution(\"xyz\") == \"-1\"\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('baze') == '8'\nassert solution('abacaba') == '18'\nassert solution('xyz') == '-1'\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nbbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\nassert solution('''\nabacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\nassert solution('''\nxyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nbbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\nassert solution('''\nabacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\nassert solution('''\nxyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'\n"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n2 4''') == '1'\nassert solution('''4\n100 42\n42 100\n5 42\n100 5''') == '5'"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n2 4\n3 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 5\n100 5\n5 100\n5 100\n100 100\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n1 2\n1 2\n\"\"\") == \"0\"\n\"\"\"\n\nInput\n3\n1 2\n2 4\n3 4\n\nOutput\n1\n\nInput\n4\n100 42\n42 100\n5 42\n100 5\n\nOutput\n5\n\nInput\n2\n1 2\n1 2\n\nOutput\n0\n\"\"\"\n"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\") == \"1\"\nassert solution(\"4\\n100 42\") == \"5\"\nassert solution(\"3\\n1 2\") == \"0\""
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4\n''') == '1'\nassert solution('''4\n100 42\n42 100\n5 42\n100 5\n''') == '5'\nassert solution('''2\n1 2\n1 2\n''') == '0'"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '5'\nassert solution('5') == '5'"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n100 42\n42 100\n5 42\n100 5''') == '5'\nassert solution('''3\n1 2\n2 4\n3 4\n''') == '1'\n"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n3 4\\n\") == \"1\"\nassert solution(\"4\\n100 42\\n42 100\\n5 42\\n100 5\\n\") == \"5\"\nassert solution(\"2\\n1 2\\n1 2\\n\") == \"0\"\n"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4\n''') == '1'\nassert solution('''4\n100 42\n42 100\n5 42\n100 5\n''') == '5'\nassert solution('''2\n1 2\n1 2\n''') == '0'"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4\n''') == '1'\n\nassert solution('''4\n100 42\n42 100\n5 42\n100 5\n''') == '5'\n\nassert solution('''2\n1 2\n1 2\n''') == '0'"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '5'\nassert solution('3') == '0'\nprint(solution(*(input().split())))\n"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\nassert solution('5 10') == '60'\n"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 5\n2 3\n\n''') == '8', 'First'\nassert solution('''5 10\n3 20\n2 20\n1 20\n4 20\n5 20\n\n''') == '60', 'Second'\n"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"5 10\") == \"60\""
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3\"\n) == \"8\"\n\nassert solution(\n    \"5 10\"\n) == \"60\"\n\nassert solution(\n    \"3 20\"\n) == \"27\"\n\nassert solution(\n    \"5 20\"\n) == \"60\"\n\nstdin = input()\nprint(solution(stdin))"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 3],\n    [1, 5],\n    ) == 8\nassert solution([5, 10],\n    [3, 20],\n    ) == 60\n"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '8'\nassert solution('5 10') == '60'"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '8'\nassert solution('5 10') == '60'\n\"\"\""
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20\\n\") == \"60\""
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20\") == \"60\"\nassert solution(\"5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20\") == \"60\""
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"5 10\") == \"60\"\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 2 3\n''') == '1'\nassert solution('''\n2\n1 2 3\n''') == '1'\nassert solution('''\n3\n1 2 2 1\n''') == '2'\n\nassert solution('''\n5\n1 2 2 4 1\n''') == '2'\nassert solution('''\n3\n2 3 3\n''') == '2'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\""
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 3\\n') == '1'\nassert solution('3\\n2 3 1\\n') == '2'\nassert solution('3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 2 3\") == \"2\"\nassert solution(\"3 2 2 4\") == \"2\"\nassert solution(\"3 2 3 3\") == \"3\"\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 2 4\n''') == '1'\nassert solution('''\n3 2 1\n''') == '2'\nassert solution('''\n3\n2 3 3\n''') == '2'\nassert solution('''\n3\n2 3 1\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 2 4\n2 3 3\n3 1 3\n2 3 2\n''') == '1'\nassert solution('''2 1 2 3\n1 1 1\n2 2 2\n''') == '2'\nassert solution('''2 3 2 4\n3 2 3\n2 3 2\n''') == '3'\nassert solution('''3 4 3 5\n4 3 4\n3 4 3\n5 1 5\n''') == '4'\nassert solution('''4 5 5 3\n5 5 5\n5 4 5\n3 5 5\n''') == '5'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 2 4\n''') == '1'\nassert solution('''\n3\n2 3 3\n''') == '2'\nassert solution('''\n3\n2 3 1\n''') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n2\n2 3 2\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 3') == '2'\nassert solution('4\\n1 2 2 4') == '1'\nassert solution('3\\n2 3 1') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 3 3\n''') == '1'\nassert solution('''\n3\n2 3 1\n''') == '2'\nassert solution('''\n4\n1 2 2 4\n''') == '1'\nassert solution('''\n4\n2 3 3\n''') == '2'\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"BBBSSC\") == \"2\"\nassert solution(\"BCSB\") == \"2\"\nassert solution(\"BLSSC\") == \"4\"\nassert solution(\"BBBSSC\") == \"0\"\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"BBBSSC\") == \"2\"\nassert solution(\"BSC\") == \"7\"\nassert solution(\"CC\") == \"0\""
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BBC') == '7'\nassert solution('BSC') == '200000000001'\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '7'"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '200000000001'"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BBC') == '7'\nassert solution('BSC') == '200000000001'\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBSC') == '200000000001'\nassert solution('BBBSSC') == '7'\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BCBSSC') == '3'\nassert solution('BCSSCC') == '3'\nassert solution('ABCDEFGHIJ') == '1'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == '1'"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n\nBBBSSC\n6 4 1\n1 2 3\n4\n\n''') == '2'\nassert solution('''\n\nBBC\n1 10 1\n1 10 1\n1000000000000\n\n''') == '7'\nassert solution('''\n\nBBSC\n1 1 1\n1 1 3\n1000000000000\n\n''') == '200000000001'"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BBC') == '7'\nassert solution('BSC') == '200000000001'\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 6') == '1'\nassert solution('14 100') == '0'\nassert solution('23 50') == '8'"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test_input_1) == \"1\"\nassert solution(test_input_2) == \"0\"\nassert solution(test_input_3) == \"8\"\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\n.HHHSSS...SH\\n\") == \"0\"\nassert solution(\"14 100\\nHHSS.......SSHHHHHHHHHH\\n\") == \"8\"\nassert solution(\"23 50\\nHHSS.......SSHHHHHHHHHH\\n\") == \"8\""
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 6\") == \"1\"\nassert solution(\"14 100\") == \"0\"\nassert solution(\"23 50\") == \"8\"\nassert solution(\"36 56 5\") == \"0\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 6\") == \"1\"\nassert solution(\"14 100\") == \"0\"\nassert solution(\"23 50\") == \"8\""
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 6\\nHSHSHS\") == \"1\"\nassert solution(\"14 100\\nHHSS.......SSHHHHHHHHHH\") == \"0\"\nassert solution(\"23 50\\nHHSS.......SSHHHHHHHHHH\") == \"8\""
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 6\nHHSHS''') == '1'\nassert solution('''14 100\nHHHHHHHSSSSHHHHHH''') == '8'\nassert solution('''23 50\nHHSS.......SSHHHHHHHHHH''') == '8'\n''')"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"1\"]) == \"1\"\nassert solution([\"3\"]) == \"1\"\nassert solution([\"2\"]) == \"0\"\nassert solution([\"3\"]) == \"1\"\nassert solution([\"3\"]) == \"1\"\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 6\nHHSHS''') == '1'\nassert solution('''14 100\n...HHHSSS...SH''') == '0'\nassert solution('''23 50\nHHSS.......SSHHHHHHHHHH''') == '8'\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a\"*10) == \"10\"\nassert solution(\"a\"*10) == \"10\"\nassert solution(\"a\"*10000) == \"10000\"\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2 5\") == \"4\"\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '8'"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"8 1 1\\n\"\n    ) == \"4\"\nassert solution(\n    \"8 1 10\\n\"\n    ) == \"8\"\nassert solution(\n    \"1 1 1\\n\"\n    ) == \"1\"\nassert solution(\n    \"1 10 1\\n\"\n    ) == \"0\"\nassert solution(\n    \"1 10 10\\n\"\n    ) == \"0\"\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 1 1\") == \"4\"\nassert solution(\"8 1 10\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 1 10') == '8'\nassert solution('7 1 1') == '7'\nassert solution('9 1 10') == '8'\n\nstdin = \"\"\"2 1 1\n7 1 1\n8 1 10\n\"\"\"\n\nstdin = \"\"\"2 1 2\n3 1 1\n5 1 10\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 1 10') == '9'\nassert solution('3 2 20') == '15'\nassert solution('8 1 10') == '8'\nassert solution('6 1 1') == '6'\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"3 4 3\") == \"6\""
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 1\nassert solution('2 3') == 8\n"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n\") == \"1\"\nassert solution(\"2 3\\n1 0 1\\n0 1 0\\n\") == \"8\"\n"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0\") == \"1\"\nassert solution(\"2 3\\n1 0 1\\n0 1 0\") == \"8\""
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\n"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"8\"\nassert solution(\"4 5\") == \"49\""
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\n"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n0\n\n''') == '1'\nassert solution('''2 3\n1 0 1\n0 1 0\n\n''') == '8'"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n0\n\n''') == '1'\n\nassert solution('''2 3\n1 0 1\n0 1 0\n\n''') == '8'\n\n\n\"\"\"\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 43 21 18 2') == '620'\nassert solution('3 0 21 11 65') == '62'\nassert solution('5 2 0 1 4') == '87'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0 0 0 9\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n7 0 0 0 0\n''') == '32'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 43 21 18 2') == '620'\nassert solution('5 2 0 1 4') == '41'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '0'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 0 0 0 9\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n7 0 0 0 0\n''') == '32'\n\nassert solution('''0 43 21 18 2\n3 0 21 11 65\n5 2 0 1 4\n54 62 12 0 99\n87 64 81 33 0\n''') == '620'\n\nassert solution('''0\n0\n0\n0\n0\n0\n''') == '0'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0 0 9\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n7 0 0 0 0\n''') == '32'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '32'\nassert solution('0 0 0 0 0 0') == '32'\nassert solution('0 0 0 0 0 0 0') == '32'\nassert solution('0 0 0 0 0 0 0 0') == '32'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 0 9\") == \"32\"\nassert solution(\"0 0 0 0 0\") == \"32\"\nassert solution(\"0 43 21 18 2\") == \"620\"\nassert solution(\"3 0 21 11 65\") == \"620\"\nassert solution(\"5 2 0 1 4\") == \"620\"\n\n\"\"\"\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 43 21 18 2') == '620'"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1000000000\") == \"2000000000\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"3 1\") == \"4\"\n\nprint(solution(input()))\n\n------"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1000000000\") == \"2000000000\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"10 1 2\") == \"2\"\nassert solution(\"10 1 2 3\") == \"4\"\nassert solution(\"10 1 2 3 4\") == \"5\"\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1000000000\") == \"2000000000\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"3 1\") == \"4\"\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 1000000000\\n1\\n1000000000\\n'\n    '1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n'\n    '1000000000\\n1000000000\\n1000000000\\n1000000000\\n') == '2000000000'\nassert solution(\n    '10 1\\n
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"2\\n1\") == r\"113337\"\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1\n6\n7\n''') == '113337'\n\nassert solution('''\n4\n1\n6\n4\n''') == '1337'\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1337'\nassert solution('1') == '1337'\nassert solution('2') == '113337'\nassert solution('1') == '1337'\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"113337\"\nassert solution(\"3\") == \"1337\"\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1337\n\"\"\") == \"1337\"\nassert solution(\"\"\"\n2\n1337\n\"\"\") == \"1337\"\nassert solution(\"\"\"\n3\n1337\n\"\"\") == \"1337\"\nassert solution(\"\"\"\n4\n1337\n\"\"\") == \"1337\"\nassert solution(\"\"\"\n5\n1337\n\"\"\") == \"1337\"\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"337\"\nassert solution(\"2\\n\") == \"1337\""
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1337', 'Wrong answer'\nassert solution('2') == '1337', 'Wrong answer'\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1\") == \"113337\"\nassert solution(\"3\\n1\") == \"1337\"\nassert solution(\"2\\n1\") == \"1337\"\nassert solution(\"1\\n1\") == \"1337\"\nassert solution(\"5\\n1\") == \"1337\"\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n6\\n1') == '113337'\nassert solution('3\\n7\\n3') == '1337'\nassert solution('1\\n3\\n1') == '113337'\nassert solution('3\\n7\\n3') == '1337'\nassert solution('2\\n7\\n3') == '1337'\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1\n''') == '113337'\nassert solution('''5\n1\n''') == '1337'\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1001'\n\"\"\"\n\nn = int(input())\nfor i in range(1,n+1):\n    if i%2==0:\n        print(str(i)*i)"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\nassert solution('99') == '9888'\nassert solution('1000') == '10001'\nassert solution('9999') == '99999'\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1000000000''') == '10001'\nassert solution('''10\n1000000000''') == '1001001'\nassert solution('''99\n1000000000''') == '100001001'"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nInput\n1\nOutput\n11\n''') == '11'\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n10\n100''') == '1001'''\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '101'\n\nassert solution(input) == '122221'\n\"\"\"\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n\"\"\""
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n\n\n\n'''\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n<>\\n1 2') == 'FINITE'\nassert solution('3\\n<<>>\\n1 2 1') == 'INFINITE'\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'INFINITE'\nassert solution('3') == 'FINITE'\n\"\"\"\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"FINITE\"\nassert solution(\"3\") == \"INFINITE\""
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"INFINITE\"\nassert solution(\"2\") == \"FINITE\"\nassert solution(\"3\") == \"INFINITE\"\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"FINITE\"\nassert solution(\"3\") == \"INFINITE\""
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n>\n<\n''') == \"FINITE\"\nassert solution('''\n>\n<\n2 1 1\n''') == \"INFINITE\""
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"INFINITE\"\nassert solution(\"3\") == \"INFINITE\"\nassert solution(\"4\") == \"INFINITE\"\nassert solution(\"5\") == \"INFINITE\"\nassert solution(\"6\") == \"FINITE\"\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n>''') == 'FINITE'\nassert solution('''2\n>>''') == 'INFINITE'"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"FINITE\"\nassert solution(\"3\") == \"INFINITE\"\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n>>> n = 2\n>>> str\n>>> d_1 = 1\n>>> d_2 = 2\n>>> \n>>> d_1 * d_2 + 2\n3\n>>> d_1 * d_2\n3\n>>> d_2 * d_1 + 2\n4\n>>> d_1 * d_2 + 2 == d_2 * d_1 + 2\nTrue\n>>> d_1 * d_2 + 2\n3\n>>> d_2 * d_1 + 2 == 3\nTrue\n\"\"\") == \"FINITE\"\n\n\"\"\"\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == str(len(max([s.split('1') for s in stdin.split('\\n')], key=len)))\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11010111') == '4'\nassert solution('111') == '0'\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(8) == 4\nassert solution(3) == 0\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 0\nassert solution('11') == 3\nassert solution('11010111') == 4\nassert solution('111') == 0\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '4'\nassert solution('3') == '0'\nassert solution('111') == '0'\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('0111') == 3\nassert solution('111') == 0\nassert solution('11100100') == 4\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == 4\nassert solution(\"3\") == 0\nassert solution(\"111\") == 0"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == 0\nassert solution('111') == 4\nassert solution('0111') == 3\nassert solution('1') == 0\nassert solution('110111') == 4\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(8) == 4\nassert solution(3) == 0\n\n\n\"\"\""
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11010111\") == \"4\"\nassert solution(\"111\") == \"0\"\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"R\" + \"\\n\" + \"s;;upimrrfod;pbr\" ) == \"allyouneedislove\"\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"R\") == \"allyouneedislove\"\n\nassert solution(\"L\") == \"upimrrfod;pbr\"\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('R') == \"allyouneedislove\"\nassert solution('L') == \"s;;upimrrfod;pbr\"\nassert solution('R;R') == \"allyouneedislove\"\nassert solution('R;R;R') == \"allyouneedislove\"\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('R') == 'allyouneedislove'\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''R\ns;upimrrfod;pbr''') == 'allyouneedislove'\n'''\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('R\\nqwertyuiop') == 'allyouneedislove'\nassert solution('R\\nasdfghjkl;zxcvbnm,./') == 'allyouneedislove'\nassert solution('R\\nq;as;df;ghj;kl;mn;po;qr;st;uv;wx;yz;') == 'allyouneedislove'\nassert solution('R\\nasdfghjkl;q;zxcvbnm,./') == 'allyouneedislove'\nassert solution('R\\nq;as;df;ghj;kl;mn;po;qr;st;uv;wx;yz;') == 'allyouneedislove'\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('R') == 'allyouneedislove'\nassert solution('L') == 'upimrrfod;pbr'\nassert solution('') == ''\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''R\ns;;upimrrfod;pbr''') == 'allyouneedislove'\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('R') == 'allyouneedislove'\n\nassert solution('L') =='s;;upimrrfod;pbr'\n\n'''\n\nstdin = input()\nstdin = stdin.split('\\n')\n\nd = stdin[0]\nm = stdin[1]"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('R') == 'allyouneedislove'\nassert solution('L') == 'rldcaozcmupqn'"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5'"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n4 3 1 2\") == \"1 1 3 4 4\"\n"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5'"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n4 3 1 2\\n') == '1 1 3 4 4 '\nassert solution('5 5\\n5 4 3 2 1\\n') == '1 2 3 4 5 '\n"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5'"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n4 3 1 2''') == '1 1 3 4 4 '\nassert solution('''5 5\n5 4 3 2 1''') == '1 2 3 4 5 5 5 5 5 '"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5 5 5'"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5'\n\n'''\n\n\nfrom collections import deque"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n-1 1 2\n''') == '1'\nassert solution('''2 3\n-2 -2\n''') == '2'\nassert solution('''5 5\n-1 1 2 3 4\n-1 1 2 3 4\n1 5 6 7 8\n''') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"2\""
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 3') == '2'"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n-1 1 2\n''') == '1'\nassert solution('''2 3\n-2 -2\n''') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('2 4') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"3\\n1 2\\n2 3\""
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '3'\nassert solution('2 2') == '2'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '-1'\nassert solution(input_) == '1'"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('2 1\\n') == '2'\nassert solution('3 1\\n') == '1'\nassert solution('1 1\\n') == '-1'\nassert solution('3 2\\n') == '-1'\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n') == '-1'\nassert solution('2 3\\n') == '1 2'\nassert solution('3 3\\n') == '1 2'\nassert solution('3 4\\n') == '1 2'\nassert solution('3 5\\n') == '1 2'\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"3\\n1 2\\n2 3\\n3 1\"\nassert solution(\"5 3\") == \"3\\n3 2\\n2 2\\n2 3\\n1 3\\n3 1\"\nassert solution(\"10 10\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"5 10\") == \"3\\n3 2\\n2 2\\n2 3\\n1 3\\n3 1\""
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '3'\nassert solution('100 1') == '1'\nassert solution('4 2') == '-1'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('0.2 0.4 0.5 0.4') == '0.2'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('8 8 3 3') == '0.333333333333'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 1 1 1') == '0.833333333333'\nassert solution('1 1 1 1') == '0.25'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 1\") == \"0.5\"\nassert solution(\"100000 1 2 1\") == \"0.9999999999999997\"\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2\") == '0.6666666667'\nassert solution(\"0.5 0.5 0.5 0.5\") == '0.5000000000000001'\nassert solution(\"-1 2 1 2\") == '0.5000000000000001'\nassert solution(\"1 2 1 2\") == '0.5000000000000001'\nassert solution(\"4 4 1 2\") == '0.5000000000000001'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('100 1 1 1') == '1.0'\nassert solution('1 2 1 1') == '0.71676736269'\n\n\n\"\"\"\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 1 2\n''') == '0.666666666667'\nassert solution('''\n0.5 1 1 0.5\n''') == '0.666667'\nassert solution('''\n0.5 1 1 0.5\n''') == '0.733333333333'\nassert solution('''\n0.5 1 1 0.5\n''') == '0.733333333333'\nassert solution('''\n0.5 1 1 0.5\n''') == '0.733333333333'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2') == \"0.666666666667\""
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 1 2\n''') == '0.666666666667'\nassert solution('''\n1 2 1 0.5\n''') == '0.5'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"0.6\"\nassert solution(\"3 4 5 2\") == \"0.8\"\nassert solution(\"2 3 1 1\") == \"0.3333333333333333\"\nassert solution(\"5 4 3 2\") == \"0.8\"\nassert solution(\"8 7 8 5\") == \"1.0\"\n\n--"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n100 10 1 0\n''') == '4'\nassert solution('''\n3\n2 70 3\n''') == '2 70'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 1 2 3 4\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    2\n    1 1\n    \"\"\"\n) == \"2 1\"\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n10 100 10 100 10\n\n''') == '4'\nassert solution('''\n7\n10 1 3 5 8 10 10 10 10\n\n''') == '6'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 4 5 7 9') == '7'\nassert solution('5 3 2 1 0') == '1 0 2 3 5'\nassert solution('7 2 3 1 4 5 6') == '7 2 5 6'\nassert solution('9 10 2 1 3 4 5') == '9 10 2 5'\nassert solution('3 3 3 3 2 2 3 3 3') == '3 3 3 3 3 3 3'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n100 10 1 0') == '4'\nassert solution('3\\n2 70 3') == '2'\nassert solution('5\\n100 10 1 0') == '5'\nassert solution('1\\n0') == '0'\nassert solution('2\\n100 10 1 0') == '2'\n\n\n\n\"\"\"\nimport math\n\nk = int(input())\ndata = list(map(int, input().split()))"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2 3'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n100 10 1 0\n''') == '4'\nassert solution('''3\n2 70 3\n''') == '2 70'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n2 3\n''') == '2 3'\nassert solution('''1\n1\n''') == '1'\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"3\""
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0101\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    8 3\n    010101010101\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n    100 100\n    01100010011001010\n    \"\"\"\n) == \"99\"\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"8 3\") == \"3\"\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0101\n\n3 3\n0110''') == '1'\nassert solution('''8 3\n010101010101\n\n4 4\n01010101\n\n2 2\n0101\n\n2 2\n0110\n\n8 3\n010101010101\n\n8 8\n01010101010101010101\n\n7 7\n0101010101010101010101\n\n6 6\n01010101010101010101010101\n\n5 5\n010101010101010101010101010101''') == '3'\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"3\"\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1'\nassert solution('8 3') == '3'\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('8 3') == '3'\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == input_string\n\n\"\"\""
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n01010110\n''') == '1'\nassert solution('''8 3\n01010110\n''') == '3'\nassert solution('''10 3\n01110101110111010\n''') == '4'\nassert solution('''100 3\n010101010101010101010101010\n''') == '35'\nassert solution('''100 3\n01010101010101010101010101010\n
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('5 2 3') == 'Yes'\nassert solution('1 2 3 2 2') == 'Yes'\nassert solution('4 3 4') == 'No'\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"2 1 1\") == \"Yes\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"5 2 3\") == \"Yes\"\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\\n3 0\") == \"Yes\"\nassert solution(\"2 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\\n3 0\\n7 2 3\\n3 0 2 1 3 0 1\\n7 1 4\\n4 4 3 0 2 4 2\\n5 2 3\\n1 2 3 2 2\") == \"Yes\"\nassert solution(\"2 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\\n3 0\\n7 2 3\\n3 0 2 1 3 0 1\\n7 1 4\\n4 4 3 0 2 4 2\\n5 2 3\\n1 2 3 2 2\") == \"No\"\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes\\n'\nassert solution('''2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No\\n'\nassert solution('''2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes\\n'\nassert solution('''2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes\\n'\nassert solution('''2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No\\n'\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('5 2 3') == 'Yes'\nassert solution('1 2 3 2 2') == 'Yes'\nassert solution('4 3 4') == 'No'\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n7 2 3\n3 0 2 1 3 0 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\"\nassert solution(\"\"\"\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n3 0 2 1\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\\n\"\n\nassert solution(\"\"\"\n4 2 3\n1 2 3 2 2\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\\n\"\n\nassert solution(\"\"\"\n4 2 3\n1 2 3 2 2\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\\n\"\n\nassert solution(\"\"\"\n7 2 3\n1 2 3 2 2\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\\n\"\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('5 2 3') == 'Yes'\nassert solution('1 2 3 2 2') == 'Yes'\nassert solution('4 3 4') == 'No'\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\nassert solution('11') == '5555555550'\nassert solution('3') == '-1'"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 0 5 0') == '0'\nassert solution('4\\n5 5 5 5') == '5555555550'\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution() == \"5555555550\"\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0\"\nassert solution(\"5 0 5 0\") == \"5555555550\"\nassert solution(\"11\") == \"5555555550\"\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5 0 5 0\n\n''') == '0'\nassert solution('''11\n5 5 5 5 5 5 5 5 0 5 5\n\n''') == '5555555550'"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0'\nassert solution('11') == '5555555550'"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n10 10 10 10 10 10 10 10 10\n''') == '555'\nassert solution('''\n10\n5 5 5 5 5 5 5 5 0\n''') == '5555555550'\n\n'''\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin.strip())\n        temp = []\n        for i in range(n):\n            temp.append(int(stdin.strip().split()[i]))\n        \n        # print(temp)\n        if temp[0] == 0:\n            return '-1'\n        temp = sorted(temp, reverse=True)\n        # print(temp)\n        \n        # print('temp', temp)\n        div = []\n        for i in range(len(temp)):\n            if i!= 0:\n                if temp[i]%temp[i-1] == 0:\n                    div.append(temp[i])\n            else:\n                div.append(temp[i])\n        # print(div)\n        \n        div = sorted(div, reverse=True)\n        # print(div)\n        \n        # print(div)\n        # print(div[-1])\n        \n        # print(div)\n        div.append(div[-1])\n        div.append(div[-1])\n        div = sorted(div)\n        \n        # print(div)\n        \n        res = ''\n        for i in div:\n            res += str(i)\n        \n        # print(res)\n        \n        # print(int(res))\n        \n        return res\n    \n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5 0 5 0\n''') == '0'\nassert solution('''\n11\n5 5 5 5 5 5 5 5 0 5 5\n''') == '5555555550'\n'''\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"10\"\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 21\n2 4 100 2 6''') == '6'\nassert solution('''10\n3\n2\n4\n5\n6''') == '8'\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 21\n2 4 100 2 6\n''') == '6'\nassert solution('''5 38\n5 2 5\n''') == '10'\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 21\") == \"6\"\nassert solution(\"3 38\") == \"10\""
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5 21\n2 4 100 2 6\n\"\"\") == \"6\"\nprint(solution(\n\"\"\"\n5 23\n2 4 100 2 6\n\"\"\"))\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 38') == '10'\nassert solution('5 21') == '6'"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 12\n1 5 2 6\n''') == '10'\n\nassert solution(\n'''\n2 14\n1 2 2 3 4\n''') == '5'\n\nassert solution(\n'''\n3 100\n1 2 2 3\n''') == '6'\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 38\n5 2 5\n''') == '10'\nassert solution('''5 21\n2 4 100 2 6\n''') == '6'"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 30\") == \"10\"\nassert solution(\"3 38\") == \"10\""
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n') == '1 9'\nassert solution('8 1 1\\n2 2 1\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n') == '5 2'\n"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\") == \"0 0\"\nassert solution(\"10 2 1\") == \"1 9\"\nassert solution(\"8 1 1\") == \"5 2\""
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 2 1') == '1 9'\nassert solution('8 1 1') == '5 2'\nassert solution('5 1 1') == '0 0'"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n\") == \"1 9\\n\"\nassert solution(\"8 1 1\\n2 2 1\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n\") == \"5 2\\n\"\nassert solution(\"5 1 1\\n1 2 2\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n2 2 2\\n\") == \"0 0\\n\"\nassert solution(\"8 7 6\\n5 2 6\\n3 6 6\\n3 6 6\\n2 6 6\\n2 6 6\\n2 6 6\\n\") == \"1 7\\n\""
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 1 1\n1 2 2\n2 2 2\n2 2 2\n1 2 2\n2 2 2\n2 2 2\n\n\"\"\") == \"5 2\"\nassert solution(\n\"\"\"\n10 2 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n2 2 2\n2 2 2\n\n\"\"\") == \"1 9\"\nassert solution(\n\"\"\"\n8 1 1\n2 2 1\n3 3 1\n3 1 3\n1 1 1\n2 1 1\n1 2 3\n\n\"\"\") == \"5 2\"\nassert solution(\n\"\"\"\n8 5 1 1\n2 2 1\n3 3 1\n3 1 3\n1 1 1\n2 1 1\n1 2 3\n\n\"\"\") == \"0 0\"\n\nassert solution(\n\"\"\"\n10 3 5\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n\n\"\"\") == \"5 2\""
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n2 2 2\\n2 2 2\\n2 2 2\") == \"1 9\"\nassert solution(\"8 1 1\\n2 2 1\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n2 2 2\\n2 2 2\") == \"5 2\"\nassert solution(\"5 1 1\\n1 2 2\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n2 2 2\") == \"0 0\"\n"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n2 2 2\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\") == \"1 9\"\nassert solution(\"5 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0 0\"\n"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 9'\n"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 2 1\") == \"1 9\"\nassert solution(\"8 1 1\") == \"5 2\"\nassert solution(\"5 1 1\") == \"0 0\""
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1 1\n1 2 2\n2 2 2\n2 2 2\n1 2 2\n2 2 2\n2 2 2\n''') == '0 0'\nassert solution('''\n8 1 1\n2 2 1\n3 3 1\n3 1 3\n1 1 1\n2 1 1\n1 2 3\n\n''') == '1 9'\n"
    }
]