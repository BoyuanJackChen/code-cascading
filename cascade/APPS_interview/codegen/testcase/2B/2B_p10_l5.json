[
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['']) == ''\nassert solution('[:|||:]::|||::') == '4'\nassert solution('[::||:]::|:||:') == '5'\nassert solution('[:||:||:]::||:||:') == '7'\nassert solution('[::||:][|:||:]') == '6'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"[a:b:|]\") == \"a:b:|\"\nassert solution(\"[]:[|]\") == -1\n\nstdin = \"\"\"[a:b:|]\n\n[::]\n\n[:||:]\n\n[:|||:]\n\n[:::]]\"\"\""
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[:||:]\") == \"\"\nassert solution(\"[::]\") == \"::\"\nassert solution(\"[a:b:|]\") == \":a:b:\"\nassert solution(\"[a:b:|]::[a:b:|]\") == \":a:b:\"\nassert solution(\"[a:b:|]::[a:b:|]::[a:b:|]\") == \":a:b:\"\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution('[:|:]') == '-1'\nassert solution('[a:b:c]') == '-1'\nassert solution('[a:b:|c]') == '-1'\nassert solution('[a:b:]c') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[::]\") == \"::\", \"Wrong answer for input '['::]'!\"\nassert solution(\"[:||:]\") == \"||\", \"Wrong answer for input '['||:]'\"\nassert solution(\"[:|||:]\") == \"|||\", \"Wrong answer for input '['|||:]'\"\nassert solution(\"[:|||]\") == -1, \"Wrong answer for input '['|||]'\"\nassert solution(\"[:||]\") == \"||\", \"Wrong answer for input '['||]'\"\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('[:|||:]') == '|||'\nassert solution('[::]') == ''\nassert solution('[|||:|:]') == '|||'\nassert solution('[||:|||:|:]') == '|||'\nassert solution('[:|||:|||:|:]') == '|||'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution('[:|:]') == '-1'\nassert solution('[a:b:]') == '1'\nassert solution('[:|:]') == '-1'\nassert solution('[:|:') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[:||:]\") == \"\"\nassert solution(\"[::]\") == \"||\"\nassert solution(\"[:::|:|:]\") == \"||\"\n"
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[a:b:|]\") == \"4\"\nassert solution(\"[:||:]\") == \"1\"\nassert solution(\"[:|||]\") == \"-1\"\nassert solution(\"[:|||
    },
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution('[]:[|:]') == '-1'"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('99') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nprint(solution(input()))"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('100') == '99'\nprint('Congratulations! Your solution is correct.')\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"99\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\nassert solution(\"521\")!= \"521\""
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"17\") == \"17\"\nassert solution(\"49\") == \"49\"\nassert solution(\"538\") == \"538\""
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"521\") == \"499\"\nassert solution(\"48\") == \"48\"\nassert solution(\"100\") == \"99\"\n\nprint(solution(int(input())))"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n10\n''') == '10'\nassert solution('''\n4\n2\n3\n4\n''') == '2'\nassert solution('''\n5\n2\n4\n6\n''') == '6'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read().strip()) == '499'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''201\n''') == '99'\nassert solution('''40000\n''') == '1000'\nassert solution('''1234\n''') == '10'\nassert solution('''100\n''') == '1'\nassert solution('''4000\n''') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n4''') == '1'\nassert solution('''201\n''') == '99'\nassert solution('''4000\n''') == '1000'\nassert solution('''10\n50\n''') == '21'\nassert solution('''3000\n''') == '1'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n4\n''') == '99'\nassert solution('''\n200000\n''') == '1000'\n'''\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\""
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2''') == '1'\nassert solution('''201\n3''') == '99'\nassert solution('''4000\n4''') == '1000'\nassert solution('''201''') == '99'\nassert solution('''4000''') == '1000'"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5\") == \"7\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\nassert solution('''10 4\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '11'\nassert solution('''5 5\n1 1\n2 2\n3 4\n4 5\n5 6\n''') == '5'\nassert solution('''2 3\n1 1\n2 3\n''') == '2'"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '7 5\\n'\n    '1 4\\n'\n    '4 5\\n'\n    '5 6\\n'\n    '6 7\\n'\n    '3 5\\n') == '7'\n\nassert solution(\n    '4 3\\n'\n    '1 1\\n'\n    '2 2\\n'\n    '3 4\\n') == '3'"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 1\n2 2\n3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 4\n4 5\n5 6\n6 7\n3 5\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n\n''') == '7'\nassert solution('''4 3\n1 1\n2 2\n3 4\n\n''') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\nassert solution('4 3') == '2'\nassert solution('4 4') == '3'"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"7 5\") == \"7\"\nassert solution(\"4 4\") == \"3\"\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\nassert solution('''4 3\n1 1\n2 2\n3 4\n''') == '3'"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"7\"\nassert solution(\"7 5\") == \"7\"\nassert solution(\"4 3\") == \"2\""
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11 23\n\n''') == \"2\"\nassert solution('''\n5\n01 07\n\n''') == \"0\"\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"7\") == \"1\"\nassert solution(\"11\") == \"2\"\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 2\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '0'\n\n'''\n\nx = int(input())\nhh, mm = list(map(int, input().split()))"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"11\") == \"1\"\nassert solution(\"13\") == \"2\"\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 23\n''') == '2'\nassert solution('''\n5 01\n''') == '0'\nassert solution('''\n3 23\n''') == '1'\nassert solution('''\n5 01\n''') == '0'\n\n'''\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1 5\n''') == '1'\nassert solution('''6 3 2 4\n''') == '5'\nassert solution('''5 2 1 5\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 3 2 4\n\n''') == '5'\n\nassert solution('''6 3 1 3\n\n''') == '1'\n\nassert solution('''5 2 1 5\n\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 3 2 4\n6 3 1 3\n5 2 1 5\n''') == '1'\nassert solution('''6 3 1 3\n5 2 1 5\n''') == '0'\nassert solution('''5 2 1 5\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2 3 4\n''') == '5'\nassert solution('''\n5 2 1 3\n''') == '1'\nassert solution('''\n6 3 1 3\n''') == '1'\nassert solution('''\n5 2 1 5\n''') == '0'\nassert solution('''\n1 2 1 2\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\""
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\nassert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1 5') == '1'\nassert solution('6 3 2 4') == '5'\nassert solution('5 2 1 5') == '0'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''2\n1\n2\n''') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\") == \"2\"\nassert solution(\"2\\n3 10\\n4 10\\n6 3\\n8 2\\n1 4\") == \"2\"\nassert solution(\"2\\n2 100\\n14 100\\n10 11\\n14 100\") == \"3\"\nassert solution(\"10\\n10 100\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\\n10 11\") == \"1\"\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"2\"\nassert solution(\"1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"5\\n5 7\\n6 2\\n3 4\\n4 5\\n6 5\\n5 2\\n5 2\") == \"5\"\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 10\\n6 3\\n8 2') == '2'\nassert solution('2\\n3 10\\n6 3\\n8 2') == '1'\nassert solution('3\\n3 10\\n6 3\\n8 2') == '-1'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '2'\nassert solution('3 10') == '3'\nassert solution('3 10') == '3'\nassert solution('3 10') == '-1'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''\n5 5\n7 7\n8 1\n5 3\n2 7\n3 8\n2 2\n1 1\n5 3\n2 3\n''') == '-1'\nassert solution('''\n3 2\n1 1\n5 5\n4 10\n3 3\n2 3\n2 7\n4 5\n1 2\n5 3\n''') == '-1'\nassert solution('''\n2\n1 1\n3 3\n''') == '3'\nassert solution('''\n3\n2 3\n5 5\n6 1\n''') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''\n3\n10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3\n10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 100\n10 11\n14 100\n''') == '-1'"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 10\n5 6\n5 5\n4 5\n4 4\n4 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 10\n5 4\n4 4\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n1 100\n100 100\n1 100\n\"\"\") == \"1\"\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\") == \"2\"\nassert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\") == \"3\"\nassert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\") == \"-1\""
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n''') == '4'\nassert solution('''8 1\n''') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n\") == \"4\"\nassert solution(\"8 1\\n\") == \"5\""
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5 2') == '4'\nassert solution(\n    '8 1') == '5'"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n2''') == '4'\nassert solution('''8 1\n3''') == '7'\nassert solution('''10 1000000\n10000000''') == '9'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n\n''') == '4'\nassert solution('''8 1\n\n''') == '5'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1s 2s 3s\n3m 4p 2s\n4p 4s 4s\n2p 4m 3p\n1s 5s 4p\n1p 5p 4p\n7s 8s 6s\n2m 7m 2p\n4m 3s 5p\n4m 7s 3p\n7p 4m 4s\n2m 4s 6m\n8m 2s 3s\n5p 7m 6m\n4m 8m 3s\n4s 7p 8p\n3p 7s 5s\n3m 5m 5p\n2p 7m 5s\n3s 4p 8s\n1p 4s 3s\n1s 9m 2p\n2s 3m 9m\n9m 7s 2p\n2p 9s 2m\n2p 5s 4m\n4m 9s 2s\n9m 5p 8m\n3m 5m 5p\n9p 5p 4s\n8m 2m 7s\n4m 3m 4p\n1p 8m 2s\n9p 5s 3p\n8m 2s 2p\n4p 9s 4m\n2s 2m 8s\n3p 5m 4p\n3p 4m 3s\n4s 4m 3p\n4s 2p 3p\n5p 2m 2s\n3m 2s 3m\n5m 4m 4p\n5s 2m 4p\n6m 7p 2s\n5m 2m 4s\n5s 4m 4p\n7p 2s 6m\n6m 4m 5p\n5m 7s 5m\n4p 8m 2s\n4p 7p 5s\n7p 4m 3s\n4m 8s 3p\n6s 5m 7p\n4s 5s 2m\n3m 4m 4p\n5p 4s 2s\n4p 5m 2m\n4p 7s 4s\n3p 5m 4s\n9p 3m 2p\n5p 4s 2s\n6p 4s 4s\n3p 5p 4s\n5m 7s 2p\n7p 5m 3p\n3s 6m 2s\n3p 8s 3m\n4s 3p 3s\n7s 4s 3p\n2p 7s 3p\n6p 8s 2p\n3s 4s 4s\n7p 4s 4p\n3s 5p 4s\n5p 3p 3s\n2s 2s 4s\n5s 3p 3s\n3p 4p 3s\n9s 2s 4p\n4p 5m 2s\n9m 7s 5m\n4m 7p 5s\n4s 7p 5s\n4s 5s 3s\n2p 4s 4p\n4p 5p 5m\n5m 2m 4m\n3p 7s 4p\n3m 8s 5p\n2p 5p 4s\n9s 4s 5p\n5p 4p 4s\n7s 5m 4p\n4p 4s 5m\n4s 7p 4s\n3s 5s 5s\n3m 4s 5m\n6m 7s 4p\n4m 7p 5s\n4p 7s 5m\n4s 7p 5s\n4s 7s 5m\n4p 7p 5s\n4p 7s 5m\n3p 4p 3p\n3s 4s 3s\n5m 3s 4p\n4s 4s 4p\n4p 4p 4s\n4s 4m 4s\n4m 4p 4s\n5s 4p 4s\n4s 4p 4s\n4p 4s 4s\n4p 4p 4s\n3p 4p 4s\n4s 4m 4s\n4m 4p 4s\n3p 4p 4s\n4s 4m 4s\n4m 4p 4s\n4p 4s 4s\n4p 4p 4s\n4s 4p 4s\n4p 4p 4s\n3p 4p 4s\n4p 4m 4s\n4m 4p 4s\n3m 4m 4s\n4p 4s 4p\n4s 4m 4s\n4m 4p 4s\n3p 4p 4s\n3s 4s 4s\n4p 4s 4p\n3m 4m 4s\n4p 4m 4s\n3p 4p 4s\n4s 4m 4s\n4m 4p 4s\n4p 4s 4p\n4s 4p 4s\n4p 4p 4s\n3p 4p 4s\n4p 4m 4s\n4m 4p 4s\n3m 4m 4s\n4p 4s 4p\n4s 4m 4s\n4m 4p 4s\n4p 4s 4p\n4s 4p 4s\n4p 4p 4s\n4s 4p 4s\n4p 4p 4s\n3p 4p 4s\n4s 4m 4s\n4m 4p 4s\n3m 4m 4s\n4p 4s 4p\n4s 4m 4s\n4m 4p 4s\n3p 4p 4s\n3s 4s 4s\n4p 4s 4p\n3"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"3p 9m 2p\") == \"1\"\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1s 2s 3s\n\"\"\") == \"0\"\nassert solution(\"\"\"\n9m 9m 9m\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3p 9m 2p\n\"\"\") == \"1\""
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4s 4s 4s\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n1p 1p 1p\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n2m 2m 2m\n\"\"\"\n) == '0'\n\nassert solution(\n\"\"\"\n3p 3p 3p\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n5p 5p 5p\n\"\"\"\n) == '1'"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1s 2s 3s\"\"\") == \"0\"\nassert solution(\"\"\"9m 9m 9m\"\"\") == \"0\"\nassert solution(\"\"\"3p 9m 2p\"\"\") == \"1\""
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\n\n'''\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"3p 4p 2s\") == \"1\"\nassert solution(\"9p 2p 4s\") == \"2\"\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\""
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '0'\nassert solution(input_2) == '1'\nassert solution(input_3) == '1'\nprint('PASSED')\n\n\"\"\"\n\n\"\"\"\n3. \n\ub2e4\uc591\ud55c \uc870\uac74\uc744 \ub9cc\uc871\uc2dc\ud0a4\ub294 \uc54c\uace0\ub9ac\uc998\uc744 \uad6c\uc131\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624.\n\n\ub2e4\uc591\ud55c \uc870\uac74\uc744 \ub9cc\uc871\uc2dc\ud0a4\ub294 \uc54c\uace0\ub9ac\uc998\uc740 \ud574\ub2f9 \uc870\uac74\uc758 \uacbd\uc6b0\uc5d0\uc11c \ucd5c\uc18c\uc758 \ud69f\uc218\ub97c \uc5bb\ub294 \uc54c\uace0\ub9ac\uc998\uc774\ub2e4.\n\n\uc774 \uc54c\uace0\ub9ac\uc998\uc740 \uc785\ub825\uc73c\ub85c \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \ucd1d \uac1c\uc218\ub9cc\ud07c \ubc18\ubcf5\ud55c\ub2e4. \n\n\uc785\ub825\uc73c\ub85c \uc870\uac74\uc744 \ub9cc\uc871\uc2dc\ud0a4\ub294 \uc54c\uace0\ub9ac\uc998\uc744 \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc740 \uc544\ub798\uc640 \uac19\ub2e4.\n\n\uc54c\uace0\ub9ac\uc998\uc740 2\ucc28\uc6d0 \ubc30\uc5f4 \ud615\ud0dc\uc758 \ubc30\uc5f4\uc5d0 \uc800\uc7a5\ud558\ub294 \ud615\ud0dc\uc774\ub2e4.\n\n\uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \uccab \ubc88\uc9f8 \uc904\uc5d0\ub294 \uc870\uac74\uc758 \uac1c\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \uc815\uc218 N, \uac01 \ub2e4\uc74c \uc904\uc5d0\ub294 N \uac1c\uc758 \uc870\uac74\uc744 \ub098\ud0c0\ub0b8\ub2e4.\n\n\ucd9c\ub825\uc0c1\uc5d0\uc11c \ucd5c\uc19f\uac12\uc744 \ucd9c\ub825\ud55c\ub2e4.\n\n\uac01 \uc904\uc758 \ub9c8\uc9c0\ub9c9 \uc815\uc218 N \uac1c\ub294 \uc785\ub825\uc73c\ub85c \uc8fc\uc5b4\uc9c4 \uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 \ud69f\uc218\uc758 \ucd5c\uc19f\uac12\uc774\ub2e4.\n\n\n\n\uc608\uc2dc\n\uac00\n\n\uc81c\n\n\uc2dc\n\n\ud558\n\n\uacbd\n\n\uc6b0\n\n\uc2dc\n\n\uc218\n\n\ub97c\n\n\uc21c\n\n\uc5d0\n\n\ubc18\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29\n\n\uc218\n\n\uc2dd\n\n\ub300\n\n\uc7a5\n\n\uc785\n\n\ub825\n\n\uc2dc\n\n\uc801\n\n\uc591\n\n\ubc29"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 2\") == \"1\"\nassert solution(\"3\\n2 2\") == \"2\"\nassert solution(\"3\\n3 3\\n3 3 3\") == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2 2 2') == '-1'\nassert solution('3 2') == '-1'\nassert solution('10 10') == '2'\n\n\n\n'''"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 2') == '1'\nassert solution('3\\n10 10') == '1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('10 10') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 2') == '1'\nassert solution('3\\n3 2') == '2'\nassert solution('2\\n10 10') == '1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\nassert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '-1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4 4\"\nassert solution() == \"0 2\""
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '1 2'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4''') == '4 4'\nassert solution('''2''') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0 2'\nassert solution('2\\n') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"4 4\""
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 1'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0 2'\nassert solution('2') == '0 2'\n\"\"\""
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '0 0'\nassert solution('3') == '2 2'\nassert solution('4') == '4 4'\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\""
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3 12 15\n3\n1\n3\n2\n1\n3''') == '51'\nassert solution('''20 2 3 3 5\n1\n2\n1\n2\n1\n2''') == '39'''\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\nassert solution('1000000000 2 3 4 5') == '900000000'\nassert solution('1000000000 2 3 4 5') == '900000000'\nassert solution('5 2 3 12 15') == '39'\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 2 2 2\") == \"3\"\nassert solution(\"5 2 3 12 15\") == \"39\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\n\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3 12 15\n''') == '39'\nassert solution('''\n20 2 3 3 5\n''') == '51'\nassert solution('''\n101 1 5 10\n''') == '111'\n\n\nstdin = '''\n7 2 3 12 15\n'''"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nGGGS\n''') == '7'\n\nassert solution('''4\nGGGG\n''') == '4'\n\nassert solution('''3\nSSS\n''') == '0'\n\nassert solution('''12\nGGGGGGGGGG\n''') == '8'\n\nassert solution('''1\nG\n''') == '1'"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '7'\nassert solution('4') == '4'\nassert solution('3') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\nGGGG''') == '7'\nassert solution('''4\nGGGG''') == '4'\nassert solution('''3\nSSS''') == '0'\nassert solution('''5\nGGG\nGGG\nGGG\nSSS\nGGG\n''') == '1'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\nGGG\n''') == '7'\nassert solution('''3\nGGA\n''') == '0'\nassert solution('''10\nGGG\n''') == '7'\nassert solution('''4\nGGA\n''') == '0'\nassert solution('''1\nGGG\n''') == '7'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '7'\nassert solution(input) == '4'"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '7'\nassert solution('4') == '4'\nassert solution('3') == '0'"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10\nGGGSGGGSGG''') == '7'\nassert solution('''4\nGGGG''') == '4'\nassert solution('''3\nSSS''') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '7'\nassert solution('4') == '4'\nassert solution('3') == '0'"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '5'\nassert solution('9 3') == '6'\nassert solution('3 3') == '-1'\nassert solution('3 3') == '-1'\nassert solution('3 3') == '-1'"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1 2 3 4 5'\nassert solution('3 3') == '1 2 3 4 5'\nassert solution('9 3') == '1 2 3 4 5 6 7 8 9'\nassert solution('6 2') == '5 6 7 8 9 10 11 12'\n\n'''\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n\") == \"5\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n\") == \"6\"\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\\n\") == \"-\"\n\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n\n''') == \"5\"\n\nassert solution('''\n9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n\n''') == \"6\"\n\nassert solution('''\n3 3\n1 2 3\n1 2\n1 3\n1 1\n\n''') == \"-1\"\n\nassert solution('''\n10 4\n0\n0\n1\n1\n0\n0\n2\n2\n0\n1\n0\n0\n\n''') == \"0\"\n\nassert solution('''\n3 2\n1 3\n1 2\n\n''') == \"-1\""
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n') == '5\\n1 2 3 4 5', 'Wrong result in first example'\nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n') == '6\\n1 2 9 4 5 3', 'Wrong result in second example'\nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\\n') == '-1', 'Wrong result in third example'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2''') == '5'\nassert solution('''3 3\n1 2 3\n1 2\n1 3''') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\\n') == '5\\n1 2 3 4 5'\nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n') == '6\\n1 2 9 4 5 3'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"6\"\nassert solution(input_) == \"2\"\nassert solution(input_) == \"1\"\nassert solution(input_) == \"6\""
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"9 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2\") == \"1 2\"\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '5'\nassert solution('9 3') == '6'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n5 4 1\") == \"1 2 5 3 4\"\nassert solution(\"5 1\\n5 2 1\") == \"1 5 2 3 4\"\nassert solution(\"5 1\\n5 3 1\") == \"1 5 2 3 4\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3 2 1 5 4\""
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"3\") == \"3 2 1\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n3 2 1\\n') == '3 2 1 5 4', \"Solutions\"\nassert solution('5 3\\n2 3 1\\n') == '-1', \"Solutions\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 2') == '-1'\nassert solution('3') == '3 2 1 5 4'\nassert solution('2') == '-1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 1') == '-1'\nassert solution('5 2') == '-1'"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 1') == '-1'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3 2 1 5 4'\n"
    }
]