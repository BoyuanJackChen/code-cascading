[
    {
        "number": 0,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution('[:||:]') == '-1'\nassert solution('[:|||:]') == '-1'\nassert solution('[:|||:|]') == '-1'\nassert solution('[:|||:||]') == '-1'\n"
    },
    {
        "number": 1,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 2,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 3,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\nassert solution('''\n4 3\n1 1\n2 2\n3 4\n''') == '2'\nassert solution('''\n4 4\n1 1\n2 2\n3 3\n''') == '3'\n"
    },
    {
        "number": 4,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 5,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3 2 4\n''') == '5'\nassert solution('''6 3 1 3\n''') == '1'\nassert solution('''5 2 1 5\n''') == '0'\nassert solution('''5 2 1 5\n''') == '0'\nassert solution('''5 2 1 5\n''') == '0'\n"
    },
    {
        "number": 6,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\nassert solution('''\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\n"
    },
    {
        "number": 7,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n''') == '4'\nassert solution('''8 1\n''') == '5'\n"
    },
    {
        "number": 8,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1s 2s 3s\n''') == '0'\nassert solution('''\n9m 9m 9m\n''') == '0'\nassert solution('''\n3p 9m 2p\n''') == '1'\n"
    },
    {
        "number": 9,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('10 10') == '1'\nassert solution('2 2') == '1'\nassert solution('1 2 1 1') == '1'\n"
    },
    {
        "number": 10,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 11,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 12,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '7'\nassert solution('4') == '4'\nassert solution('3') == '0'\n"
    },
    {
        "number": 13,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"9 3\") == \"6\"\nassert solution(\"3 3\") == \"1 2 3\"\nassert solution(\"3 3\") == \"1 2 3\"\nassert solution(\"3 3\") == \"1 2 3\"\n"
    },
    {
        "number": 14,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3 2 1 5 4'\nassert solution('5 1') == '-1'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 15,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n"
    },
    {
        "number": 16,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '1'\nassert solution('''\n0\n0\n0\n0\n''') == '0'\nassert solution('''\n1\n2\n3\n4\n''') == '1'\nassert solution('''\n0\n0\n0\n0\n''') == '0'\nassert solution('''\n1\n2\n3\n4\n''') == '1'\n"
    },
    {
        "number": 17,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n"
    },
    {
        "number": 18,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n"
    },
    {
        "number": 19,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\nassert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\nassert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\nassert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n"
    },
    {
        "number": 20,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''05:39''') == '11'\nassert solution('''13:31''') == '0'\nassert solution('''23:59''') == '1'\n"
    },
    {
        "number": 21,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 22,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n"
    },
    {
        "number": 23,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123') == '213'\nassert solution('222') == '213'\nassert solution('3921') == '9321'\nassert solution('10000') == '9321'\n"
    },
    {
        "number": 24,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('OO.O......') == 'NO'\n"
    },
    {
        "number": 25,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 26,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 27,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"8\"\n"
    },
    {
        "number": 28,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4'\nassert solution('''\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5'\nassert solution('''\n2\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '3'\nassert solution('''\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '4'\nassert solution('''\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5'\n"
    },
    {
        "number": 29,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n"
    },
    {
        "number": 30,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n''') == '3'\nassert solution('''5 2\n''') == '2'\nassert solution('''5 1\n''') == '1'\nassert solution('''5 2\n''') == '2'\nassert solution('''5 3\n''') == '3'\n"
    },
    {
        "number": 31,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n"
    },
    {
        "number": 32,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n\n''') == 'YES'\nassert solution('''\n2\n1000 North\n1000 South\n\n''') == 'NO'\nassert solution('''\n4\n50 South\n50 North\n15000 South\n15000 North\n\n''') == 'YES'\n"
    },
    {
        "number": 33,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 0 3 3 5 21\n''') == '3'\nassert solution('''\n2 4 3 0 6 17\n''') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\n"
    },
    {
        "number": 35,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''\n4 3\nBRG\nBRG\nBRG\nBRG\n\n''') == 'YES'\nassert solution('''\n6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n\n''') == 'NO'\nassert solution('''\n4 4\nRRRR\nRRRR\nBBBB\nGGGG\n\n''') == 'NO'\n"
    },
    {
        "number": 36,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1 0'\nassert solution('2') == '0 -1'\nassert solution('3') == '1 -1'\nassert solution('4') == '1 0'\nassert solution('5') == '0 1'\n"
    },
    {
        "number": 37,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n"
    },
    {
        "number": 38,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7\n''') == 'YES'\nassert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\nassert solution('''2 4\n1 3\n1 2\n''') == 'NO'\nassert solution('''3 4\n1 2\n1 3\n''') == 'NO'\nassert solution('''2 4\n1 2\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 39,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 40,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'rated'\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == 'unrated'\nassert solution('''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') =='maybe'\n"
    },
    {
        "number": 41,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '2 1 0 1 0 0 1 2 3'\nassert solution('5') == '0 1 2 3 4'\nassert solution('7') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 42,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0''') == '3'\nassert solution('''4\n1010''') == '962'\nassert solution('''20\n10101010101010''') == '962'\n"
    },
    {
        "number": 43,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n-1 0\\n0 -1\\n1 0\\n1 1\\n') == '3 4'\nassert solution('6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\\n') == '6 5'\n"
    },
    {
        "number": 44,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1 4 10\n''') == '14'\nassert solution('''5 2 1 4 5\n''') == '13'\n"
    },
    {
        "number": 45,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 46,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 47,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6''') == '22'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\n"
    },
    {
        "number": 48,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 50,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 11\n4 2 5\n4 4 5 4\n''') == '26'\nassert solution('''\n2 2 50\n5 7\n4 2\n''') == '50'\n"
    },
    {
        "number": 51,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('25') == '20'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 53,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '8'\nassert solution('abacabca') == '26'\n"
    },
    {
        "number": 54,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 55,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('23 5') == 'Yes'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('1 2') == 'Yes'\n"
    },
    {
        "number": 56,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n''') == '4'\nassert solution('''4 8\n''') == '6'\n"
    },
    {
        "number": 57,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 58,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2''') == '1'\nassert solution('''5\n3\n4''') == '6'\nassert solution('''20\n5\n6''') == '2'\n"
    },
    {
        "number": 59,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 5 3 4 6\n01110\n''') == 'YES'\nassert solution('''\n6\n1 2 5 3 4 6\n01010\n''') == 'NO'\nassert solution('''\n6\n1 2 5 3 4 6\n01110\n''') == 'NO'\nassert solution('''\n6\n1 2 5 3 4 6\n01110\n''') == 'NO'\nassert solution('''\n6\n1 2 5 3 4 6\n01110\n''') == 'NO'\n"
    },
    {
        "number": 60,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 61,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '<'\nassert solution('''\n3 3\n1 0 2\n2 5\n2 4\n''') == '>'\nassert solution('''\n7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '='\n"
    },
    {
        "number": 62,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'BitLGM'\nassert solution('1 2') == 'BitAryo'\nassert solution('1 1 1') == 'BitLGM'\nassert solution('1 2 1') == 'BitAryo'\nassert solution('1 1 1 1') == 'BitLGM'\n"
    },
    {
        "number": 63,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n6 2 8\n''') == '4'\nassert solution('''3 6\n9 1 14\n''') == '1'\n"
    },
    {
        "number": 64,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\naabb\n''') == 'YES'\nassert solution('''\n6 3\naacaab\n''') == 'NO'\n"
    },
    {
        "number": 65,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\nassert solution('9') == '3'\nassert solution('5 6 5') == '2'\n"
    },
    {
        "number": 66,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\n"
    },
    {
        "number": 67,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7 0\") == \"-\"\nassert solution(\"2 0 1\") == \"+\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\n"
    },
    {
        "number": 68,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '0'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 69,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\nassert solution('''\n4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '-1'\nassert solution('''\n5\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '0'\nassert solution('''\n6\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '1'\nassert solution('''\n5\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '-1'\n"
    },
    {
        "number": 70,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 71,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n"
    },
    {
        "number": 72,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nKuroo\nShiro\nKatie\n''') == 'Kuro'\nassert solution('''7\ntreasurehunt\nthreefriends\nhiCodeforces\n''') == 'Shiro'\nassert solution('''1\nabcabc\ncbabac\nababca\n''') == 'Katie'\n"
    },
    {
        "number": 73,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 10 5 4\n''') == '1'\nassert solution('''12 4 12 4 1\n''') == '3'\nassert solution('''15 1 100 0 0\n''') == '15'\n"
    },
    {
        "number": 74,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('27') == '3 5 11 11'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 75,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n.*..\n....\n.*..\n\n''') == 'YES'\nassert solution('''\n3 3\n..*..\n..*..\n..*..\n\n''') == 'NO'\nassert solution('''\n6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n\n''') == 'YES'\nassert solution('''\n6 6\n*..*..\n*..*..\n*..*..\n*..*..\n*..*..\n*..*..\n\n''') == 'NO'\nassert solution('''\n6 6\n*..*..\n*..*..\n*..*..\n*..*..\n*..*..\n*..*..\n\n''') == 'NO'\n"
    },
    {
        "number": 76,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9 7 3 8''') == '15'\nassert solution('''2 7 3 7''') == '14'\nassert solution('''30 6 17 19''') == '0'\n"
    },
    {
        "number": 77,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n-2 2 -3 1') == '3'\nassert solution('3\\n2 -5 -3') == '-1'\n"
    },
    {
        "number": 78,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1\n1 2\n1 3\n\n2 1\n3 2\n5 1\n\n4 10\n5 3\n2 1\n3 2\n5 1\n\n6 10\n5 3\n2 1\n3 2\n5 1\n\n7 10\n5 3\n2 1\n3 2\n5 1\n\n8 10\n5 3\n2 1\n3 2\n5 1\n\n9 10\n5 3\n2 1\n3 2\n5 1\n\n10 10\n5 3\n2 1\n3 2\n5 1\n\n11 10\n5 3\n2 1\n3 2\n5 1\n\n12 10\n5 3\n2 1\n3 2\n5 1\n\n13 10\n5 3\n2 1\n3 2\n5 1\n\n14 10\n5 3\n2 1\n3 2\n5 1\n\n15 10\n5 3\n2 1\n3 2\n5 1\n\n16 10\n5 3\n2 1\n3 2\n5 1\n\n17 10\n5 3\n2 1\n3 2\n5 1\n\n18 10\n5 3\n2 1\n3 2\n5 1\n\n19 10\n5 3\n2 1\n3 2\n5 1\n\n20 10\n5 3\n2 1\n3 2\n5 1\n\n21 10\n5 3\n2 1\n3 2\n5 1\n\n22 10\n5 3\n2 1\n3 2\n5 1\n\n23 10\n5 3\n2 1\n3 2\n5 1\n\n24 10\n5 3\n2 1\n3 2\n5 1\n\n25 10\n5 3\n2 1\n3 2\n5 1\n\n26 10\n5 3\n2 1\n3 2\n5 1\n\n27 10\n5 3\n2 1\n3 2\n5 1\n\n28 10\n5 3\n2 1\n3 2\n5 1\n\n29 10\n5 3\n2 1\n3 2\n5 1\n\n30 10\n5 3\n2 1\n3 2\n5 1\n\n31 10\n5 3\n2 1\n3 2\n5 1\n\n32 10\n5 3\n2 1\n3 2\n5 1\n\n33 10\n5 3\n2 1\n3 2\n5 1\n\n34 10\n5 3\n2 1\n3 2\n5 1\n\n35 10\n5 3\n2 1\n3 2\n5 1\n\n36 10\n5 3\n2 1\n3 2\n5 1\n\n37 10\n5 3\n2 1\n3 2\n5 1\n\n38 10\n5 3\n2 1\n3 2\n5 1\n\n39 10\n5 3\n2 1\n3 2\n5 1\n\n40 10\n5 3\n2 1\n3 2\n5 1\n\n41 10\n5 3\n2 1\n3 2\n5 1\n\n42 10\n5 3\n2 1\n3 2\n5 1\n\n43 10\n5 3\n2 1\n3 2\n5 1\n\n44 10\n5 3\n2 1\n3 2\n5 1\n\n45 10\n5 3\n2 1\n3 2\n5 1\n\n46 10\n5 3\n2 1\n3 2\n5 1\n\n47 10\n5 3\n2 1\n3 2\n5 1\n\n48 10\n5 3\n2 1\n3 2\n5 1\n\n49 10\n5 3\n2 1\n3 2\n5 1\n\n50 10\n5 3\n2 1\n3 2\n5 1\n\n51 10\n5 3\n2 1\n3 2\n5 1\n\n52 10\n5 3\n2 1\n3 2\n5 1\n\n53 10\n5 3\n2 1\n3 2\n5 1\n\n54 10\n5 3\n2 1\n3 2\n5 1\n\n55 10\n5 3\n2 1\n3 2\n5 1\n\n56 10\n5 3\n2 1\n3 2\n5 1\n\n57 10\n5 3\n2 1\n3 2\n5 1\n\n58 10\n5 3\n2 1\n3 2\n5 1\n\n59 10\n5 3\n2 1\n3 2\n5 1\n\n60 10\n5 3\n2 1\n3 2\n5 1\n\n61 10\n5 3\n2 1\n3 2\n5 1\n\n62 10\n5 3\n2 1\n3 2\n5 1\n\n63 10\n5 3\n2 1\n3 2\n5 1\n\n64 10\n5 3\n2 1\n3 2\n5 1\n\n65 10\n5 3\n2 1\n3 2\n5 1\n\n66 10\n5 3\n2 1\n3 2\n5 1\n\n67 10\n5 3\n2 1\n3 2\n5 1\n\n68 10\n5 3\n2 1\n3 2\n5 1\n\n69 10\n5 3\n2 1\n3 2\n5 1\n\n70 10\n5 3\n2 1\n3 2\n5 1\n\n71 10\n5 3\n2 1\n3 2\n5 1\n\n72 10\n5 3\n2 1\n3 2\n5 1\n\n73 10\n5 3\n2 1\n3 2\n5 1\n"
    },
    {
        "number": 79,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\n"
    },
    {
        "number": 80,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 82,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == '4'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 83,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n10 0 -7 2 6\n''') == '4'\nassert solution('''\n7\n0 0 1 -1 0 0 2\n''') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '2'\n"
    },
    {
        "number": 85,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '1'\nassert solution('2 3') == '1 6'\nassert solution('36 5') == '3 16 5'\nassert solution('3 5') == '16 5'\nassert solution('3 5') == '16 5'\n"
    },
    {
        "number": 86,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 87,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 7\n''') == '6'\nassert solution('''1 1\n''') == '5'\nassert solution('''11 6\n''') == '5'\n"
    },
    {
        "number": 88,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 89,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n\n\"\"\""
    },
    {
        "number": 90,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\n"
    },
    {
        "number": 91,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution('''\n5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n"
    },
    {
        "number": 92,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n"
    },
    {
        "number": 93,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AB\\nXC\\nXB\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"YES\"\n"
    },
    {
        "number": 94,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '12'\nassert solution('16') == '11311'\nassert solution('17') == '594'\nassert solution('20') == '999'\nassert solution('17') == '594'\n"
    },
    {
        "number": 95,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''\n5\n10 20 30 20 10\n''') == 'YES'\nassert solution('''\n4\n1 2 1 2\n''') == 'NO'\nassert solution('''\n7\n3 3 3 3 3 3 3\n''') == 'YES'\n"
    },
    {
        "number": 96,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 3\n''') == '5'\nassert solution('''11 6\n''') == '4'\nassert solution('''20 20\n''') == '1'\nassert solution('''14 5\n''') == '6'\nassert solution('''1000000 100\n''') == '31248'\n"
    },
    {
        "number": 97,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 2 2 -1 1''') == '0 0'\nassert solution('''4 4 2 0 1 1''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1'\n"
    },
    {
        "number": 98,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 3\n2 1\n''') == 'YES'\nassert solution('''\n5 5\n3 3\n3 3\n''') == 'NO'\nassert solution('''\n4 2\n2 3\n1 2\n''') == 'YES'\n'''\n"
    },
    {
        "number": 99,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 30 4\n6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4\n123 11 -5453 141245''') == '0'\nassert solution('''123 1 2143435 4\n54343 -13 6 124''') == 'inf'\nassert solution('''123 1 2143435 4\n123 11 -5453 141245''') == 'inf'\nassert solution('''123 1 2143435 4\n123 11 -5453 141245''') == 'inf'\n"
    },
    {
        "number": 100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"..w++w..\"\nassert solution(\"5 6\") == \"+.w+...\"\nassert solution(\"2 4\") == \"....\"\nassert solution(\"2 6\") == \"-1\"\n"
    },
    {
        "number": 101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n2\n3\n''') == 'YES'\nassert solution('''\n9960594\n2551\n2557\n''') == 'YES'\nassert solution('''\n15\n4\n8\n''') == 'NO'\n"
    },
    {
        "number": 102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n"
    },
    {
        "number": 103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 3 4 5 6 9\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n4\n998 999 1000\n''') == '2'\nassert solution('''\n3\n998 999 1000\n''') == '0'\nassert solution('''\n2\n998 999 1000\n''') == '0'\n"
    },
    {
        "number": 104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 2 1\n''') == '2'\nassert solution('''6\n2 2 2 2 2 2\n''') == '3'\n"
    },
    {
        "number": 105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 9 3\n8 6 7\n4 2 5\n''') == '12 1'\n"
    },
    {
        "number": 106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\n"
    },
    {
        "number": 108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n"
    },
    {
        "number": 109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\n"
    },
    {
        "number": 110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-3 -3 -3 -3'\nassert solution('3') == '-3 -3 -3 -3'\nassert solution('4') == '-3 -3 -3 -3'\nassert solution('5') == '-3 -3 -3 -3'\n"
    },
    {
        "number": 111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7 8\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '0'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '0'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '0'\n"
    },
    {
        "number": 113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'\n"
    },
    {
        "number": 114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 3\n1 0 1\n1 0 1\n0 0 0\n''') == '-1'\n"
    },
    {
        "number": 115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 10 9 20 1\n''') == '2'\nassert solution('''\n1 100 50 200 75\n''') == '50'\n"
    },
    {
        "number": 117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '13'\nassert solution('5 5') == '13'\nassert solution('5 5') == '13'\nassert solution('5 5') == '13'\nassert solution('5 5') == '13'\n"
    },
    {
        "number": 118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n"
    },
    {
        "number": 119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9') == '2 1'\nassert solution('3\\n1 5\\n2 6\\n6 20') == '-1 -1'\n"
    },
    {
        "number": 120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\nAG?C??CT''') == 'AGACGTCT'\nassert solution('''4\nAA??''') == '==='\nassert solution('''6\n????G?''') == '==='''\n"
    },
    {
        "number": 121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"x.ox\") == \"NO\"\nassert solution(\"x.xo\") == \"NO\"\nassert solution(\"o.x.x\") == \"NO\"\nassert solution(\"o.x.xo\") == \"NO\"\nassert solution(\"x..x\") == \"NO\"\n"
    },
    {
        "number": 122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2\n''') == 'YES'\nassert solution('''\n5\n2 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n11 0 0 14\n5 4\n''') == 'Yes'\nassert solution('''\n6 1\n2 3 0 8 9 10\n5\n''') == 'No'\nassert solution('''\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'\n"
    },
    {
        "number": 124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 6 2\n4 3 3\n''') == 'YES'\nassert solution('''5 1 1\n4 3 2\n''') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"NO\"\nassert solution(\"1 0 0 0\") == \"NO\"\nassert solution(\"0 0 0 1\") == \"NO\"\nassert solution(\"1 0 1 0\") == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n586\n\nOutput\nNO''') == 'NO'\nassert solution('''2\n09\n\nOutput\nNO''') == 'NO'\nassert solution('''9\n123456789\n\nOutput\nYES''') == 'YES'\n"
    },
    {
        "number": 127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 15 2 3\n''') == '1'\nassert solution('''10 11 2 4\n''') == '-1'\nassert solution('''10 11 2 4\n''') == '-1'\nassert solution('''10 11 2 4\n''') == '-1'\nassert solution('''10 11 2 4\n''') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"1 2\\nBB\") == \"1\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n"
    },
    {
        "number": 131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 1 4 3 5\n''') == 'Yes'\nassert solution('''5\n1 1 1 1 1\n1 0 1 0 1\n''') == 'Yes'\nassert solution('''3\n2 3 9\n1 7 9\n''') == 'No'\n"
    },
    {
        "number": 132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '40'\nassert solution('1') == '360'\nassert solution('4') == '0'\nassert solution('3') == '40'\n"
    },
    {
        "number": 133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9\n10\n''') == '<'\nassert solution('''\n11\n10\n''') == '>'\nassert solution('''\n0123\n9\n''') == '>'\nassert solution('''\n0123\n111\n''') == '>'\nassert solution('''\n1\n1\n''') == '='\n"
    },
    {
        "number": 137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 3 4''') == '3'\nassert solution('''6 2 1 1''') == '1'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\n"
    },
    {
        "number": 139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 2\n2 3\n3 2\n3 1\n\n''') == 'YES'\nassert solution('''\n5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n\n''') == 'NO'\n"
    },
    {
        "number": 140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 595\n43 2\n300 4\n554 10\n''') == '281'\nassert solution('''\n1 1\n1 1\n''') == '0'\nassert solution('''\n2 50\n20 0\n3 1\n''') == '30'\n"
    },
    {
        "number": 141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4 5 6 7 8\n''') == '10'\nassert solution('''\n0\n''') == '0'\nassert solution('''\n3\n0 4 1 0 0 9 8 3\n''') == '3'\n"
    },
    {
        "number": 142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 12\n20 30 70 90\n''') == '150'\nassert solution('''\n4 3\n10 100 1000 10000\n''') == '30'\nassert solution('''\n5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n"
    },
    {
        "number": 143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 1 -1 1\n''') == '2'\nassert solution('''14 3\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\n''') == '9'\n"
    },
    {
        "number": 147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 1 2\") == \"12\"\n"
    },
    {
        "number": 148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n"
    },
    {
        "number": 149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n"
    },
    {
        "number": 150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\n"
    },
    {
        "number": 152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3 2\") == \"20\"\nassert solution(\"10 99\") == \"99\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"20 10 40\") == \"40\"\nassert solution(\"4 15\") == \"15\"\n"
    },
    {
        "number": 153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 11') == '6'\nassert solution('5 5 10') == '7'\n"
    },
    {
        "number": 154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\n\n\"\"\""
    },
    {
        "number": 155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 0\n1 1\n1 2\n2 2\n2 3''') == '1 1'\nassert solution('''4 3 11\n1 1\n1 2\n2 2\n2 3''') == '1 2'\nassert solution('''4 3 7\n1 1\n1 2\n2 2\n2 3''') == '3 2'\nassert solution('''4 3 7\n1 1\n1 2\n2 2\n2 3''') == '3 2'\nassert solution('''4 3 7\n1 1\n1 2\n2 2\n2 3''') == '3 2'\n"
    },
    {
        "number": 156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7'\nassert solution('4') == '21'\nassert solution('2') == '0'\n"
    },
    {
        "number": 158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 7 28\n''') == '1'\nassert solution('''\n3\n2 7 28\n''') == '2'\nassert solution('''\n3\n2 7 28\n''') == '2'\nassert solution('''\n3\n2 7 28\n''') == '2'\nassert solution('''\n3\n2 7 28\n''') == '2'\n"
    },
    {
        "number": 160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"7\"\nassert solution(\"4 3\") == \"7\"\nassert solution(\"5 3\") == \"7\"\nassert solution(\"6 3\") == \"7\"\nassert solution(\"7 3\") == \"7\"\n"
    },
    {
        "number": 161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('39') == '4'\nassert solution('1') == '0'\nassert solution('7') == '0'"
    },
    {
        "number": 162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 6\n2 3 5\n''') == '2'\nassert solution('''6 7\n1 2 3 4 5 6\n''') == '7'\nassert solution('''6 7\n1 2 3 4 5 6\n''') == '7'\nassert solution('''6 7\n1 2 3 4 5 6\n''') == '7'\nassert solution('''6 7\n1 2 3 4 5 6\n''') == '7'\n"
    },
    {
        "number": 163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 10 13 10 3 1\n''') == '4.3750000000'\nassert solution('''1 4 6 2 2 1\n''') == '-1'\nassert solution('''3 10 15 17 9 2\n''') == '11.3333333333'\n"
    },
    {
        "number": 165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\n''') == '1'\nassert solution('''\n1 0 0\n''') == '0'\nassert solution('''\n1000000000000000000 0 1000000000000000000\n''') == '999999999999999999'\n"
    },
    {
        "number": 166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 6 9 8 5 2\n''') == 'YES'\nassert solution('''\n1 10\n''') == 'YES'\nassert solution('''\n2\n1 10\n''') == 'NO'\nassert solution('''\n2\n1 10\n''') == 'NO'\nassert solution('''\n2\n1 10\n''') == 'NO'\n"
    },
    {
        "number": 167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''hi\nbob''') == '-', 'First example'\nassert solution('''abca\naccepted''') == 'ac', 'Second example'\nassert solution('''abacaba\nabcdcba''') == 'abcba', 'Third example'\n"
    },
    {
        "number": 168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n---\n\n''') == '0'\nassert solution('''\n4\n++++\n\n''') == '4'\nassert solution('''\n2\n-+\n\n''') == '1'\nassert solution('''\n5\n++-++\n\n''') == '3'\n"
    },
    {
        "number": 169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\n"
    },
    {
        "number": 170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3\n2 4 2\n''') == '6 2'\nassert solution('''\n3\n1 2\n2 1 3\n''') == '-1'\nassert solution('''\n5\n1 2 3 4 5\n2 1 3 4 5\n''') == '2 1'\nassert solution('''\n5\n1 2 3 4 5\n2 1 3 4 5\n''') == '2 1'\nassert solution('''\n5\n1 2 3 4 5\n2 1 3 4 5\n''') == '2 1'\n"
    },
    {
        "number": 171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == 'Too weak'\nassert solution('''X12345''') == 'Correct'\nassert solution('''CONTEST_is_STARTED!!11''') == 'Correct'\n"
    },
    {
        "number": 172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n5 4 4 4\\n5 5 4 5\\n') == '1'\nassert solution('6\\n1 1 1 1 1 1\\n5 5 5 5 5 5\\n') == '3'\nassert solution('9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1\\n') == '4'\n"
    },
    {
        "number": 173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n><>\nv^v\n''') == 'NO'\nassert solution('''4 6\n<><>\nv^v^v^\n''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('0 1') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('0 1 1 1') == 'NO'\nassert solution('1 1 1 1 1') == 'YES'\n"
    },
    {
        "number": 175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n"
    },
    {
        "number": 176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\n"
    },
    {
        "number": 177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == 'YES'\nassert solution('15') == 'NO'\n"
    },
    {
        "number": 179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1 2\n''') == '6'\nassert solution('''123 42 24\n''') == '824071958'\n"
    },
    {
        "number": 180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''hw?ap*yn?eww*ye*ar''') == 'happynewyear'\nassert solution('''ab?a''') == 'aa'\nassert solution('''ab?a''') == 'aba'\nassert solution('''ab?a''') == 'Impossible'\nassert solution('''ab?a''') == 'Impossible'\n"
    },
    {
        "number": 181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('5 6 1') == 'No'\nassert solution('3 3 3') == 'Yes'\n"
    },
    {
        "number": 183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\n"
    },
    {
        "number": 184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\n"
    },
    {
        "number": 185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n"
    },
    {
        "number": 186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11\n27\n27\n11\n''') == 'YES'\nassert solution('''\n2\n6\n6\n''') == 'NO'\nassert solution('''\n6\n1\n1\n2\n2\n3\n3\n''') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n5 8\n''') == 'YES'\nassert solution('''\n1 2\n7 1\n''') == 'NO'\nassert solution('''\n1 4\n2 2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10 1 4\n''') == '3 7'\nassert solution('''5\n1 1 2 2 3\n''') == '2 0'\n"
    },
    {
        "number": 190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n....\n..*.\n...*\n..**\n''') == '3'\n\nassert solution('''\n1 3\n*.*\n''') == '1'\n\nassert solution('''\n2 1\n.\n*\n''') == '1'\n\n'''\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0442\u0440\u0435\u0442\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0442\u0440\u0435\u0442\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0442\u0440\u0435\u0442\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0442\u0440\u0435\u0442\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442. \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0438 \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0442"
    },
    {
        "number": 191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n0 1 0\n''') == '333333336'\nassert solution('''5 1\n1 1 1 0 0\n''') == '968493834'\n"
    },
    {
        "number": 192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n"
    },
    {
        "number": 193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4') == '0.2000000000'\nassert solution('1 0\\n0 1') == '0.5000000000'\n"
    },
    {
        "number": 194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\n"
    },
    {
        "number": 195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 5 20\n''') == '5'\nassert solution('''\n2 2 0 4\n''') == '-1'\nassert solution('''\n2 2 2 1\n''') == '-1'\n"
    },
    {
        "number": 196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n"
    },
    {
        "number": 197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '499122177'\nassert solution('''\n1 1\n1 1\n''') == '1'\nassert solution('''\n2 1\n1 2\n''') == '1'\nassert solution('''\n2 2\n1 2\n''') == '1'\nassert solution('''\n3 3\n1 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n"
    },
    {
        "number": 199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n4 3 5\n''') == '3'\nassert solution('''3 7\n1 2 3\n''') == '-1'\nassert solution('''3 4\n5 3 4\n''') == '2'\n"
    },
    {
        "number": 200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 30\n2 1\n''') == '1'\nassert solution('''10 13\n1 1\n''') == '0'\nassert solution('''1 50\n5 4\n''') == '1'\n"
    },
    {
        "number": 201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3 5 2 3') == '16'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0') == '5'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'D'\nassert solution('6') == 'R'\n"
    },
    {
        "number": 204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n17 15 5 3\n''') == '3'\nassert solution('''\n14 16 7 22\n''') == '0'\nassert solution('''\n4 2 6 4\n''') == '1'\nassert solution('''\n1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\n"
    },
    {
        "number": 205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n"
    },
    {
        "number": 206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\"\n"
    },
    {
        "number": 207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 5\n''') == 'Yes'\nassert solution('''\n5\n1 0 1 5 1\n''') == 'Yes'\nassert solution('''\n4\n3 9 9 3\n''') == 'No'\nassert solution('''\n4\n3 9 9 3\n''') == 'No'\n"
    },
    {
        "number": 208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '-1'\n"
    },
    {
        "number": 209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\n"
    },
    {
        "number": 210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 -3\n\n''') == 'YES'\nassert solution('''\n8\n9 -12 3 4 -4 -10 7 3\n\n''') == 'YES'\nassert solution('''\n1\n0\n\n''') == 'NO'\n"
    },
    {
        "number": 211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\n"
    },
    {
        "number": 212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3454\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"111111\") == \"NO\"\n"
    },
    {
        "number": 213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3\\n6 2\\n2 1\\n7 3') == '4'\nassert solution('8 4\\n3 1\\n6 2\\n5 2\\n2 1') == '-1'\n"
    },
    {
        "number": 214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"4\"\nassert solution(\"0XXX0X00X00\") == \"2\"\nassert solution(\"0X0X0\") == \"0\"\nassert solution
    },
    {
        "number": 215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('3') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '120'\n"
    },
    {
        "number": 217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n"
    },
    {
        "number": 218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('10 9 5') == '2'\nassert solution('6 4 5') == '-1'\nassert solution('8 1 1') == '8'\nassert solution('1000000000') == '1'\n"
    },
    {
        "number": 219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 10 1 3\n3 4 7\n\"\"\") == \"RUN 2\"\nassert solution(\"\"\"\n2 9 2 3\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'\n"
    },
    {
        "number": 222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('6') == '120'\n"
    },
    {
        "number": 224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('A') == 1\nassert solution('AA') == 2\nassert solution('AAB') == 2\nassert solution('AABB') == 2\n"
    },
    {
        "number": 225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 7 11 5\n''') == 'YES'\nassert solution('''\n7 3 2 5\n''') == 'NO'\n'''\n"
    },
    {
        "number": 226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"653 733\"\nassert solution(\"5\") == \"31 41\"\n"
    },
    {
        "number": 227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'\n"
    },
    {
        "number": 228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n8 8\n''') == 'Bob'\nassert solution('''\n4\n3 1 4 1\n''') == 'Alice'\n"
    },
    {
        "number": 229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nababa') == '2'\nassert solution('5\\nababa') == '2'\nassert solution('5\\nababa') == '2'\nassert solution('5\\nababa') == '2'\nassert solution('5\\nababa') == '2'\n"
    },
    {
        "number": 231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\n"
    },
    {
        "number": 232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2') == 'YES'\nassert solution('5 2\\n1 1 2 2 1\\n1 2') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2') == 'NO'\nassert solution('5 2\\n1 1 2 2 1\\n1 2') == 'NO'\n"
    },
    {
        "number": 233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Mishka\"\nassert solution(\"2\") == \"Chris\"\nassert solution(\"3\") == \"Friendship is magic!^^\"\n"
    },
    {
        "number": 234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n111\n1*1\n111''') == 'YES'\nassert solution('''2 4\n*.*.\n1211''') == 'NO'\nassert solution('''3 3\n111\n1*1\n111''') == 'YES'\nassert solution('''2 4\n*.*.\n1211''') == 'NO'\nassert solution('''3 3\n111\n1*1\n111''') == 'YES'\n"
    },
    {
        "number": 235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n68\n''') == '3'\nassert solution('''\n10\n''') == '0'\nassert solution('''\n10\n''') == '0'\nassert solution('''\n10\n''') == '0'\nassert solution('''\n10\n''') == '0'\n"
    },
    {
        "number": 236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-o-o--o-\") == \"NO\"\n"
    },
    {
        "number": 237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 6 2\n''') == '2'\nassert solution('''3 10 3\n''') == '4'\nassert solution('''3 6 1\n''') == '3'\n"
    },
    {
        "number": 238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3 10\n2 -4 15 -3 4 8 3\n''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11\n''') == '0'\n"
    },
    {
        "number": 239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1'\nassert solution('0 0') == '0 0'\nassert solution('0 9') == '0 0'\n"
    },
    {
        "number": 240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('003512') == '30021'\nassert solution('021') == '30021'\nassert solution('199966633300') == '3036366999'\nassert solution('63') == '3036366999'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Correct'\nassert solution('3 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Correct'\n"
    },
    {
        "number": 242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '0'\nassert solution('10') == '0'\nassert solution('100') == '5'\nassert solution('1000') == '0'\n"
    },
    {
        "number": 243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 2\n2 1\n1 2 3\n1 2 5\n2 2 1\n''') == '2 2 3'\nassert solution('''\n4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\n"
    },
    {
        "number": 244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'YES'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\n"
    },
    {
        "number": 248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 250 185 230\n0 20 185 250\n''') == '0'\nassert solution('''2 300 185 230\n0 300\n''') == '2'\nassert solution('''4 250 185 230\n0 20 185 250\n''') == '1'\n"
    },
    {
        "number": 250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n100 30\n40 10\n''') == '942477.796077000'\nassert solution('''\n4\n1 1\n9 7\n1 4\n10 7\n''') == '3983.539484752'\n"
    },
    {
        "number": 251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '2'\nassert solution('4 5') == '2'\nassert solution('3 3') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 -2 10 -1 4\n''') == '6'\nassert solution('''8\n5 2 5 3 -30 -30 6 9\n''') == '10'\nassert solution('''3\n-10 6 -15\n''') == '0'\n"
    },
    {
        "number": 253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n"
    },
    {
        "number": 254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaca') == 'aaccd'\nassert solution('abcddcba') == 'abcddcba'\n"
    },
    {
        "number": 255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '3'\nassert solution('''\n4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '0'\nassert solution('''\n5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 1\n3\n1 2 3\n''') == '0'\nassert solution('''\n5\n1 1 1 1 1\n3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Team 2\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\n"
    },
    {
        "number": 257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2.4'\nassert solution('5 3') == '2.4'\nassert solution('10 3') == '2.4'\nassert solution('20 3') == '2.4'\nassert solution('30 3') == '2.4'\n"
    },
    {
        "number": 258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'Bicarp'\nassert solution('2') == 'Bicarp'\nassert solution('8') == 'Bicarp'\nassert solution('6') == 'Monocarp'\n"
    },
    {
        "number": 259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n6 4\n9 5\n''') == '1'\nassert solution('''\n3 7\n2 2\n2 3\n2 4\n''') == '1'\nassert solution('''\n5 5\n3 3\n2 5\n5 6\n4 9\n6 1\n''') == '3'\n"
    },
    {
        "number": 260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n.**.*..*.***.**.\n''') == 'yes'\nassert solution('''\n.**.*..*.***.**.\n''') == 'no'\nassert solution('''\n.**.*..*.***.**.\n''') == 'no'\nassert solution('''\n.**.*..*.***.**.\n''') == 'no'\nassert solution('''\n.**.*..*.***.**.\n''') == 'no'\n"
    },
    {
        "number": 262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6\n1\n1\n1\n1\n\n''') == '3 7'\nassert solution('''\n1\n10\n5\n\n''') == '15 15'\nassert solution('''\n3\n7\n1\n6\n5\n\n''') == '7 13'\n"
    },
    {
        "number": 264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"128\"\nassert solution(\"4 4\") == \"1024\"\n"
    },
    {
        "number": 265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n''') == '2 3'\nassert solution('''\n4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\n''') == '1 2'\nassert solution('''\n1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n''') == '2 4'\n"
    },
    {
        "number": 266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\n"
    },
    {
        "number": 267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 50 2\n''') == '1230'\nassert solution('''\n1 2345 10\n''') == '2750685'\nassert solution('''\n101 154 2\n''') == '2189'\n"
    },
    {
        "number": 268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''\n6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''\n3 2 5\n10 16 22\n''') == 'NO'\n"
    },
    {
        "number": 269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n"
    },
    {
        "number": 270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"1.5000000000\"\nassert solution(\"5 5\") == \"1.500000000\"\nassert solution(\"10 10\") == \"1.500000000\"\nassert solution(\"20 20\") == \"1.500000000\"\nassert solution(\"30 30\") == \"1.500000000\"\n"
    },
    {
        "number": 271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\n"
    },
    {
        "number": 272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('helloworld') == 'ehoolwlroz'\nassert solution('hastalavistababy') == 'hastalavistababy'\nassert solution('merrychristmas') == '-1'\n"
    },
    {
        "number": 273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\n"
    },
    {
        "number": 274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+'''\n\nassert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+'''\n\nassert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+'''\n\nassert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+'''\n\nassert solution('''\n[[][]][]\n''') == '+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+'''"
    },
    {
        "number": 275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"<\"\nassert solution(\"111\") == \">\"\nassert solution(\"110\") == \"=\"\n"
    },
    {
        "number": 276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\") == \"2\\nSpace\\nTime\"\nassert solution(\"0\\n\") == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\"\n"
    },
    {
        "number": 277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == 'Final!'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 3 2 1\n0 1 1 1\n''') == '2'\nassert solution('''\n3\n2 3 1\n0 0 0\n''') == '1'\nassert solution('''\n2\n2 3 1\n0 0 0\n''') == '1'\nassert solution('''\n1\n2 3 1\n0 0 0\n''') == '1'\nassert solution('''\n1\n1 1 1\n0 0 0\n''') == '1'\n"
    },
    {
        "number": 279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '26'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"3 2\") == \"10\"\n"
    },
    {
        "number": 281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n"
    },
    {
        "number": 282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 4\n10010101\n\n''') == '2'\nassert solution('''4 2\n1001\n\n''') == '-1'\nassert solution('''12 3\n101111100101\n\n''') == '4'\n"
    },
    {
        "number": 283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1359257''') == 'YES'\nassert solution('''17851817''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''\n2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 2\n''') == 'NO'\nassert solution('''\n2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\n"
    },
    {
        "number": 287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('10 10') == '1 1'\nassert solution('100 100') == '1 1'\n"
    },
    {
        "number": 288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"VV\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == \"3\"\nassert solution(\"KVKV\") == \"1\"\n"
    },
    {
        "number": 290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '4'\n"
    },
    {
        "number": 291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"10 1025\") == \"2047\"\n"
    },
    {
        "number": 293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '4'\nassert solution('26') == '6'\n"
    },
    {
        "number": 294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n31 31 30 31\n''') == 'Yes'\nassert solution('''2\n30 30\n''') == 'No'\nassert solution('''3\n31 28 30\n''') == 'Yes'\nassert solution('''3\n31 31 28\n''') == 'Yes'\nassert solution('''5\n29 31 30 31 30\n''') == 'Yes'\n"
    },
    {
        "number": 295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('10') == 'YES'\nassert solution('100') == 'YES'\nassert solution('1000') == 'YES'\n"
    },
    {
        "number": 296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '-1'\nassert solution('7') == '-1'\n"
    },
    {
        "number": 297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\n"
    },
    {
        "number": 298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\n"
    },
    {
        "number": 299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'biceps'\nassert solution('3') == 'back'\nassert solution('7') == 'chest'\n"
    },
    {
        "number": 300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\n3 1\n1 1 1''') == '2'\nassert solution('''1 3\n1 1 1''') == '3'\nassert solution('''8 5\n3 1\n1 1 1''') == '-1'\nassert solution('''0 0\n0''') == '0'\n"
    },
    {
        "number": 302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('121') == '6'\nassert solution('123') == '3'\nassert solution('1234') == '4'\nassert solution('12345') == '5'\nassert solution('123456') == '6'\n"
    },
    {
        "number": 303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 0 6\n2 3\n''') == 'YES'\nassert solution('''\n1 1 3 6\n1 5\n''') == 'NO'\n"
    },
    {
        "number": 304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5\n6\n3\n1\n2\n''') == '6'\nassert solution('''\n12\n11\n13\n20\n4\n6\n''') == '325'\nassert solution('''\n17\n14\n5\n21\n15\n17\n''') == '326'\n"
    },
    {
        "number": 306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 5 8''') == '2'\nassert solution('''4 6 7 13''') == '1'\nassert solution('''233 233 10007 1''') == '1'\n"
    },
    {
        "number": 307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n"
    },
    {
        "number": 309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"8 16\") == \"31\"\n"
    },
    {
        "number": 310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n''') == '1'\nassert solution('''999999999999999999 999999999999999986\n''') == '3'\nassert solution
    },
    {
        "number": 311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 4 4 2 1\n''') == 'YES'\nassert solution('''1 6 6 2 1 1\n''') == 'NO'\nassert solution('''4 1 7 4 1 2\n''') == 'YES'\nassert solution('''4 1 7 4 1 2\n''') == 'NO'\nassert solution('''4 1 7 4 1 2\n''') == 'YES'\n"
    },
    {
        "number": 312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 0 1 1\n''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '0'\n"
    },
    {
        "number": 314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\n"
    },
    {
        "number": 315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 1') == '1'\nassert solution('4 6') == '0'\n"
    },
    {
        "number": 316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\n"
    },
    {
        "number": 317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''23:59\n10\n''') == '00:09'\nassert solution('''20:20\n121\n''') == '22:21'\nassert solution('''10:10\n0\n''') == '10:10'\n"
    },
    {
        "number": 319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n10101\n01000\n00111\n10000\n''') == 'YES'\nassert solution('''\n4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''\n4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''\n4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''\n4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\n"
    },
    {
        "number": 320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '-1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"YES\"\nassert solution(\"2\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"NO\"\nassert solution(\"3\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"NO\"\nassert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"YES\"\n"
    },
    {
        "number": 322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('1 2') == '1'\nassert solution('1000000000 2') == '1'\nassert solution('1000000000 2') == '1'\nassert solution('1000000000 2') == '1'\n"
    },
    {
        "number": 324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9 8'\nassert solution('512') == '4608 4096'\n"
    },
    {
        "number": 325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 10\") == \"35\"\nassert solution(\"3 3 10\") == \"35\"\n"
    },
    {
        "number": 326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"-1\"\n"
    },
    {
        "number": 327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\n"
    },
    {
        "number": 328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n1 2\n2 1\n''') == '3'\nassert solution('''\n4\n1 1\n1 2\n2 1\n2 2\n''') == '4'\n'''\n"
    },
    {
        "number": 329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"nniinneetteeeenn\") == \"2\"\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == \"2\"\nassert solution(\"nineteenineteen\") == \"2\"\n"
    },
    {
        "number": 330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 20\n0 27 32 21 19\n''') == '40'\nassert solution('''7 3 50\n62 0 0 0 0 99 33 22\n''') == '30'\nassert solution('''10 5 100\n1 0 1 0 0 0 0 0 1 1\n''') == '20'\n"
    },
    {
        "number": 332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n6 1\n1 6\n1 1\n''') == 'YES'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'YES'\nassert solution('''\n2 2\n4 4\n4 5\n5 4\n4 4\n''') == 'NO'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'NO'\n"
    },
    {
        "number": 333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcd\") == \"5\"\nassert solution(\"a\") == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"a\") == \"-1\"\nassert solution(\"a\") == \"-1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 2\n9 19\n''') == '82'\nassert solution('''2 1\n16 12\n''') == '-1'\n"
    },
    {
        "number": 335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 1 1'\nassert solution('233') == '77 77 79'\n"
    },
    {
        "number": 336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"6\"\n"
    },
    {
        "number": 337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 1\n1 2\n''') == '8'\nassert solution('''4 3\n9 2\n0 1\n''') == '1'\n"
    },
    {
        "number": 338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 4 3 2\n6 8''') == '3'\nassert solution('''5\n0 3 3 4 2\n3 10''') == '4'\nassert solution('''2\n2 5\n3 6''') == '0'\n"
    },
    {
        "number": 339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9\n2\n3\n1''') == '6'\nassert solution('''5\n5\n2\n20''') == '12'\nassert solution('''19\n3\n4\n2''') == '12'\n"
    },
    {
        "number": 340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '10 2'\nassert solution('5184') == '6 4'\nassert solution('5184') == '6 4'\nassert solution('5184') == '6 4'\nassert solution('5184') == '6 4'\n"
    },
    {
        "number": 341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrsrpr''') == '27'\n"
    },
    {
        "number": 342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''2 1 2''') == '7'\nassert solution('''3 5 2''') == '11'\nassert solution('''2 2 1''') == '6'\nassert solution('''1000000000 1000000000 1000000000''') == '4000000000'\n"
    },
    {
        "number": 343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\n"
    },
    {
        "number": 344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n"
    },
    {
        "number": 345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '4'\nassert solution('7 0') == '0'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''\n3 2\n10 3 8\n2 3\n''') == '40'\n"
    },
    {
        "number": 347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n\") == \"4930\"\n"
    },
    {
        "number": 348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n2 10\n11 5\n9 4\n3 12\n''') == 'Possible'\nassert solution('''\n2 3\n2 4 5\n4 5 6\n3 6 7\n8 10 11\n''') == 'Impossible'\nassert solution('''\n3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\n''') == 'Impossible'\n"
    },
    {
        "number": 350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 20') == '0'\n"
    },
    {
        "number": 352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1 2 3'\nassert solution('10') == '2 3 5'\n"
    },
    {
        "number": 353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'UP'\nassert solution('7') == 'DOWN'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('ua') == 'No'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"A\"\nassert solution(\"\"\"\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"B\"\nassert solution(\"\"\"\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"B\"\nassert solution(\"\"\"\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"B\"\nassert solution(\"\"\"\n.B....B.\n....W...\n........\n..W.....\n........\n........\n\n\"\"\") == \"B\"\n"
    },
    {
        "number": 356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\nassert solution('''\n2\n1 2\n1\n100\n''') == '-1'\n"
    },
    {
        "number": 357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"YES\"\n"
    },
    {
        "number": 358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n"
    },
    {
        "number": 360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''\n1\n1 7\n4\n''') == '1'\nassert solution('''\n1\n1 7\n4\n''') == '0'\nassert solution('''\n1\n1 7\n4\n''') == '0'\nassert solution('''\n1\n1 7\n4\n''') == '0'\n"
    },
    {
        "number": 361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\n"
    },
    {
        "number": 363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n"
    },
    {
        "number": 364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '2'\nassert solution('5 2') == '4'\nassert solution('3 10') == '4'\n"
    },
    {
        "number": 365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == 'NO'\nassert solution('3 10') == 'YES'\n"
    },
    {
        "number": 366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 11\n''') == '3'\nassert solution('''6 16\n''') == '3'\n"
    },
    {
        "number": 367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"QK\") == \"White\"\nassert solution(\"rk\") == \"Black\"\nassert solution(\"rnbqkbnr\") == \"Draw\"\nassert solution(\"rppppppr\") == \"Black\"\nassert solution(\"kqk\") == \"White\"\n"
    },
    {
        "number": 369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9 3\") == \"1 3 2 3\"\nassert solution(\"9 4\") == \"1 3 2 3\"\nassert solution(\"9 5\") == \"1 3 2 3\"\nassert solution(\"9 6\") == \"1 3 2 3\"\nassert solution(\"9 7\") == \"1 3 2 3\"\n"
    },
    {
        "number": 370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\n"
    },
    {
        "number": 371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 4') == '7.25298806364175601379'\nassert solution('0 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n3 1 3\n''') == '4'\nassert solution('''\n3\n1 1\n3 1 3\n''') == '3'\nassert solution('''\n3\n1 1\n3 1 3\n''') == '3'\nassert solution('''\n3\n1 1\n3 1 3\n''') == '3'\nassert solution('''\n3\n1 1\n3 1 3\n''') == '3'\n"
    },
    {
        "number": 375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\nreading\ntrading\n''') == '1'\nassert solution('''5\nsweet\nsheep\n''') == '0'\nassert solution('''3\ntoy\ntry\n''') == '2'\n"
    },
    {
        "number": 376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == '93'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\n"
    },
    {
        "number": 377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\n"
    },
    {
        "number": 379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n.X\nXX\n''') == 'NO'\nassert solution('''\n2 2\n.X\nXX\n''') == 'YES'\nassert solution('''\n5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'YES'\nassert solution('''\n5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'NO'\n"
    },
    {
        "number": 380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 -1\n1 1\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n-1 -1\n-1 3\n4 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n2 3\n3 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('2 1 2') == 'YES'\nassert solution('2 1 2 3') == 'YES'\nassert solution('2 1 2 3 4') == 'YES'\n"
    },
    {
        "number": 382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nBBW''') == '1'\nassert solution('''5\nBWBWB''') == '2'\nassert solution('''4\nWWWW''') == '0'\nassert solution('''13\nWBBBBWWBWBBBW''') == '3'\nassert solution('''5\nBWBWB''') == '4'\n"
    },
    {
        "number": 385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 4 5\n(())()()\nRDLD''') == '()'\nassert solution('''12 5 3\n((()())(()))\nRRDLD''') == '()()'\nassert solution('''8 8 8\n(())()()\nLLLLLLDD''') == '()()'\n"
    },
    {
        "number": 386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('>= 1 Y') == '17'\nassert solution('< 3 N') == 'Impossible'\nassert solution('<= -3 N') == 'Impossible'\nassert solution('> 55 N') == 'Impossible'\n"
    },
    {
        "number": 387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n"
    },
    {
        "number": 388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n"
    },
    {
        "number": 389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 100 1\n0 1 2 1 2\n''') == '101'\nassert solution('''3 10 12\n1 2 0\n''') == '-1'\nassert solution('''3 12 1\n0 1 0\n''') == '0'\n"
    },
    {
        "number": 391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"bb\"\nassert solution(\"2\") == \"ww\"\n"
    },
    {
        "number": 392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\n"
    },
    {
        "number": 393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n101''') == 'Yes'\nassert solution('''4\n1011''') == 'No'\nassert solution('''5\n10001''') == 'No'\n"
    },
    {
        "number": 394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n5\n1 3 5 6 8\n''') == '2'\nassert solution('''\n3\n1 5 3\n''') == '1'\nassert solution('''\n3\n1 5 3\n''') == '3'\nassert solution('''\n4\n1 5 3\n''') == '1'\n"
    },
    {
        "number": 395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n"
    },
    {
        "number": 396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 5 3 2 4') == 'YES'\nassert solution('3\\n4 1 2') == 'NO'\n"
    },
    {
        "number": 399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3\n''') == 'Yes'\nassert solution('''4 2\n''') == 'No'\nassert solution('''1000 1001\n''') == 'Yes'\n"
    },
    {
        "number": 400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 8') == '5'\nassert solution('2 2') == '20'\n"
    },
    {
        "number": 401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '25'\nassert solution('8 8') == '1'\n"
    },
    {
        "number": 402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 222\n''') == '2'\nassert solution('''4 190\n''') == '4'\nassert solution('''7 1\n''') == '7'\n"
    },
    {
        "number": 403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n<<><\n''') == '2'\nassert solution('''5\n>>><\n''') == '5'\nassert solution('''4\n<<>>\n''') == '0'\nassert solution('''5\n>>>>\n''') == '0'\nassert solution('''4\n<<<<\n''') == '0'\n"
    },
    {
        "number": 406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 4 4 2\n''') == '8'\nassert solution('''\n4\n2 2 3 5\n''') == '0'\nassert solution('''\n4\n100003 100004 100005 100006\n''') == '10000800015'\n"
    },
    {
        "number": 407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nab\nde\naj\n''') == '47'\nassert solution('''\n5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542'\nassert solution('''\n3\naa\njj\naa\n''') == '44'\n"
    },
    {
        "number": 408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ABA\n''') == 'NO'\nassert solution('''BACFAB\n''') == 'YES'\nassert solution('''AXBYBXA\n''') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\nassert solution('''\n5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\nassert solution('''\n5\n1 1 1 3 3\n3\n2 1 6\n''') == 'YES'\nassert solution('''\n5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\nassert solution('''\n5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\n"
    },
    {
        "number": 411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 0\n2 0\n3 1\n-2 1\n0 3\n2 2\n''') == 'Yes'\nassert solution('''2 1\n1 0\n2 2\n3 1\n''') == 'No'\n"
    },
    {
        "number": 412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n80 7 16 4 48\n''') == '16 3'\nassert solution('''\n4\n21 5 3 33\n''') == '1 4'\n\n\"\"\"\n\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_power = 0\nmax_count = 0\n\nfor i in range(n):\n    count = 0\n    for j in range(i, n):\n        if a[i] % 2 == 0 and a[j] % 2 == 0:\n            count += 1\n        elif a[i] % 2!= 0 and a[j] % 2!= 0:\n            count += 1\n        else:\n            break\n    if count > max_count:\n        max_count = count\n        max_power = a[i]\n\nprint(max_count, max_power)\n"
    },
    {
        "number": 413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n9 12\n2 11\n1 3\n6 10\n5 7\n4 8\n''') == 'YES'\nassert solution('''\n5\n1 3\n2 4\n5 9\n6 8\n7 10\n''') == 'NO'\nassert solution('''\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\nNYNNY\n''') == 'YES'\nassert solution('''6 1\n????NN\n''') == 'NO'\n"
    },
    {
        "number": 417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\") == \"8\"\nassert solution(\"5 5 2\") == \"8\"\nassert solution(\"5 5 2\") == \"8\"\nassert solution(\"5 5 2\") == \"8\"\nassert solution(\"5 5 2\") == \"8\"\n"
    },
    {
        "number": 418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\nsubscriber 2833 2749\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\nsubscriber 2833 2749\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\nsubscriber 2833 2749\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100000000_2''') == '256_10'\nassert solution('''101_2''') == '5_10'\nassert solution('''10100_2''') == '5_10'\nassert solution('''10100_1''') == '5_10'\nassert solution('''10100_0''') == '5_10'\n"
    },
    {
        "number": 420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''\n8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\n''') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('6') == '2'\n"
    },
    {
        "number": 422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n5 5\n2 2\n''') == 'YES'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n''') == 'NO'\n"
    },
    {
        "number": 423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 100\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\n"
    },
    {
        "number": 424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\n"
    },
    {
        "number": 425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 2 3\n''') == '5'\nassert solution('''\n1 3 2 3\n''') == '4'\n"
    },
    {
        "number": 428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(input()) == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n100 200 100\n''') == 'YES'\nassert solution('''\n4\n100 100 100 200\n''') == 'NO'\n"
    },
    {
        "number": 431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0010\n0100''') == '5'\nassert solution('''3 4\n001000\n000010\n000010''') == '12'\nassert solution('''4 3\n01110\n01110\n01110\n01110''') == '18'\n"
    },
    {
        "number": 432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 2 10\n1 3 4 3 3\n''') == '3'\nassert solution('''\n4\n1 10 2 10\n2 4 2 2\n''') == '10'\nassert solution('''\n7\n1 1 1 1 1 1 1\n2 2 2 3 6 7 6\n''') == '2'\n"
    },
    {
        "number": 433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\n\n\"\"\""
    },
    {
        "number": 434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '3'\nassert solution('8 6 4 2 1 4 7 10 2') == '3'\nassert solution('5') == '1'\nassert solution('-1 -1 -1 -1 -1') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n"
    },
    {
        "number": 436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n100 50 50\n''') == '2'\nassert solution('''\n3\n80 60 60\n''') == '0'\nassert solution('''\n4\n51 25 99 25\n''') == '3'\nassert solution('''\n2\n6 5\n''') == '1 2'\nassert solution('''\n2\n6 5\n''') == '1 2'\n"
    },
    {
        "number": 437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'\n"
    },
    {
        "number": 438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '3 5 1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '10'\nassert solution('1') == '0'\nassert solution('98765432') == '23456789'\n"
    },
    {
        "number": 440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'werd'\nassert solution('4') == 'word'\nassert solution('5') == 'werd'\n"
    },
    {
        "number": 441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 1\n''') == '2 1'\nassert solution('''\n2\n5 5\n''') == '-1'\nassert solution('''\n1\n10\n''') == '-1'\n"
    },
    {
        "number": 444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('27') == '3'\n"
    },
    {
        "number": 445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('2 3') == '2 3'\nassert solution('2 2') == '1'\nassert solution('3') == '1'\nassert solution('3 2') == '1 2'\n"
    },
    {
        "number": 446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1_2') == '1'\nassert solution('110_2') == '10'\nassert solution('1111000_2') == '10'\nassert solution('111110000_2') == '496'\nassert solution('1_2_3') == '1'\n"
    },
    {
        "number": 447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '8'\nassert solution('2 0') == '4'\nassert solution('19 7') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('6 4') == '6'\n"
    },
    {
        "number": 449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n125\n''') == '3'\nassert solution('''\n43\n''') == '5'\nassert solution('''\n1000000000\n''') == '10000000'\n"
    },
    {
        "number": 450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"11\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"11 5\") == \"28\"\n"
    },
    {
        "number": 452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'YES'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\n"
    },
    {
        "number": 453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||\"\n"
    },
    {
        "number": 454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\naogogob\n''') == 'a***b'\nassert solution('''\n13\nogogmgogogogogo\n''') == '***gmg***'\nassert solution('''\n9\nogoogoogo\n''') == '*********'\n"
    },
    {
        "number": 457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'\n"
    },
    {
        "number": 458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\n"
    },
    {
        "number": 459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == 'NO'\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'YES'\n"
    },
    {
        "number": 460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''239 10880 9889''') == '0'\nassert solution('''26 7258 6123''') == '2'\nassert solution('''493 8000 8000''') == '24'\nassert solution('''329 19913 19900''') == '8'\n"
    },
    {
        "number": 461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''1\n2\n3\n5''') == '0'\n"
    },
    {
        "number": 462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 1 4') == '6'\nassert solution('30 20 10') == '20'\n"
    },
    {
        "number": 463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 3 7\n''') == '1'\nassert solution('''2 228\n1 1\n''') == '0'\nassert solution('''3 7\n1 2 3\n''') == '-1'\n"
    },
    {
        "number": 464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n......\n..*...\n.****.\n..*...\n..*...\n\n''') == 'YES'\nassert solution('''3 5\n..*..\n****.\n.*...\n\n''') == 'NO'\nassert solution('''5 6\n..**..\n..**..\n******\n..**..\n..**..\n\n''') == 'NO'\nassert solution('''5 10\n..........\n..*.......\n.*.******.\n..*.......\n..........\n\n''') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\n"
    },
    {
        "number": 466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 2') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\n"
    },
    {
        "number": 471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '7'\nassert solution('2 0') == '10'\nassert solution('5 0') == '0'\n"
    },
    {
        "number": 472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6 1 6 6 0\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 0') == '3'\nassert solution('3 2 1') == '4'\n\"\"\""
    },
    {
        "number": 476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\n"
    },
    {
        "number": 477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\n"
    },
    {
        "number": 478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\nbacabcab\n''') == '4'\nassert solution('''4\nbcda\n''') == '3'\nassert solution('''6\nabbbbb\n''') == '5'\n"
    },
    {
        "number": 479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950\n''') == '6'\nassert solution('''\n5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '1'\n"
    },
    {
        "number": 480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\n"
    },
    {
        "number": 481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\n\n\"\"\""
    },
    {
        "number": 482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n''') == 'java'\nassert solution('''6 6\n''') == 'python'\nassert solution('''5 2\n''') == 'phphp'\n"
    },
    {
        "number": 483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nRLRL\\n2 4 6 10') == '1'\nassert solution('3\\nLLR\\n40 50 60') == '-1'\n"
    },
    {
        "number": 484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 2\n1 2\n2 1\n''') == '4'\nassert solution('''\n3 10 10\n6 6\n7 7\n20 5\n''') == '0'\nassert solution('''\n4 10 9\n2 3\n1 1\n5 10\n9 11\n''') == '56'\n"
    },
    {
        "number": 485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"2\") == \"0 3\"\nassert solution(\"2\") == \"0 2\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"2\") == \"0 1\"\n"
    },
    {
        "number": 486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\nassert solution('5') == '120'\n"
    },
    {
        "number": 487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 1 5 1\n''') == '5'\nassert solution('''5\n2 2 3 2 2\n''') == '5'\n"
    },
    {
        "number": 488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 3 2 3 4\n''') == '2'\nassert solution('''\n6\n1 3 3 1 3 2\n''') == '1'\n"
    },
    {
        "number": 490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\n"
    },
    {
        "number": 491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2230''') == '2230'\nassert solution('''-10''') == '0'\nassert solution('''-100003''') == '-10000'\n"
    },
    {
        "number": 492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\nassert solution('< ^') == 'undefined'\nassert solution('^ >') == 'undefined'\n"
    },
    {
        "number": 493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"14\") == \"4\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '3 1 2 4 4'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n"
    },
    {
        "number": 496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution
    },
    {
        "number": 497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 2 3\n''') == '4'\nassert solution('''7\n1 1 3 1 1 1 1\n''') == '4'\nassert solution('''3\n1 2 1\n''') == '1'\n"
    },
    {
        "number": 498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'\n"
    },
    {
        "number": 499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"G\"\nassert solution(\"3\") == \"BR\"\nassert solution(\"5\") == \"B\"\n"
    },
    {
        "number": 500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n''') == 'YES'\n\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n''') == 'YES'\n\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n''') == 'YES'\n\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n''') == 'YES'\n\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\nOutput\nYES\n0 0\n1 0\n0 1\n2 0\n1 -1\n-1 1\n0 2\nInput\n6\n1 2\n2 3\n2 4\n2 5\n2 6\n\nOutput\nNO\n\nInput\n4\n1 2\n2 3\n3 4\nOutput\nYES\n3 3\n4 3\n5 3\n6 3\n''') == 'YES'"
    },
    {
        "number": 501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3\n''') == '7'\nassert solution('''5 14\n''') == '761141116'\n"
    },
    {
        "number": 502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\"\n"
    },
    {
        "number": 503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('3 1') == '1'\nassert solution('10 3') == '6'\n"
    },
    {
        "number": 504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n10 15\n6 1\n''') == '27'\nassert solution('''3 0 3\n10 8\n7 11\n5 2\n''') == '26'\n"
    },
    {
        "number": 505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\") == \"RL\"\nassert solution(\"5 6 14\") == \"DLDDLLLRRRUURU\"\nassert solution(\"3 3 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\n"
    },
    {
        "number": 507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4'\n"
    },
    {
        "number": 508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 15\") == \"1 2 3\"\nassert solution(\"4 67\") == \"2 1 3\"\nassert solution(\"4 68\") == \"4 1 2\"\n"
    },
    {
        "number": 509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 6 3\n''') == '2'\nassert solution('''3 1 5 6\n''') == '8'\nassert solution('''8 3 3 2\n''') == '2'\nassert solution('''2 3 10 4\n''') == '3'\n"
    },
    {
        "number": 511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '3'\nassert solution('6 3') == '1'\n"
    },
    {
        "number": 512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"respectable\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\") == \"ugly\"\n"
    },
    {
        "number": 514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n4 5\n5 11\n''') == 'YES'\nassert solution('''\n1 1\n4 5\n5 11\n''') == 'NO'\nassert solution('''\n1 1\n4 5\n5 11\n''') == 'YES'\nassert solution('''\n1 1\n4 5\n5 11\n''') == 'NO'\nassert solution('''\n1 1\n4 5\n5 11\n''') == 'NO'\n"
    },
    {
        "number": 515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '462'\nassert solution('6') == '8080'\nassert solution('1') == '-1'\nassert solution('0') == '-1'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\nabc\nxaybz\n''') == '2'\nassert solution('''\n4 10\nabcd\nebceabazcd\n''') == '1'\nassert solution('''\n3 5\nabc\nxaybz\n''') == '2'\nassert solution('''\n4 10\nabcd\nebceabazcd\n''') == '1'\nassert solution('''\n3 5\nabc\nxaybz\n''') == '2'\n"
    },
    {
        "number": 517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 2') == '1 2'\nassert solution('8 5 2') == '-1'\nassert solution('8 4 2') == '4 8'\nassert solution('5 7 2') == '5 7'\nassert solution('2 3') == '2 3'\n"
    },
    {
        "number": 518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\n"
    },
    {
        "number": 519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == '50'\nassert solution('199') == '119.4'\nassert solution('199') == '119.4'\nassert solution('199') == '119.4'\nassert solution('199') == '119.4'\n"
    },
    {
        "number": 520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2015'\nassert solution('2') == '2050'\nassert solution('3') == '2015'\nassert solution('4') == '2050'\nassert solution('5') == '2015'\n"
    },
    {
        "number": 521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 2 5 3\n''') == '72900'\nassert solution('''17 97 41 37 11\n''') == '317451037'\n"
    },
    {
        "number": 523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\ntab\none\nbat''') == '6'\nassert solution('''4 2\noo\nox\nxo\nxx''') == '6'\nassert solution('''3 5\nhello\ncodef\norces''') == '0'\nassert solution('''9 4\nabab\nbaba\nabcd\nbcde\ncdef\n"
    },
    {
        "number": 524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n''') == '1'\nassert solution('''3\n1000000000 1000000000 1000000000\n''') == '1999982505'\n"
    },
    {
        "number": 525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '1'\nassert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''\n4\n2 1 3 1\n2\n420 420\n''') == '2'\n"
    },
    {
        "number": 526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''2 2\n0 0\n0 0''') == 'NIE'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == 'NIE'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == 'NIE'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == 'NIE'\n"
    },
    {
        "number": 527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"contest\") == \"10\"\nassert solution(\"son\") == \"10\"\nassert solution(\"\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 3\n3 4\n1 4\n\n''') == 'YES'\nassert solution('''\n4 4\n3 1\n2 3\n3 4\n1 2\n\n''') == 'NO'\nassert solution('''\n10 4\n4 3\n5 10\n8 9\n1 2\n\n''') == 'YES'\nassert solution('''\n3 2\n1 2\n2 3\n\n''') == 'NO'\n"
    },
    {
        "number": 529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"AprilFool\"\n\nInput\nAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\n26\n\nOutput\nAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
    },
    {
        "number": 530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0111\n0001''') == 'First'\nassert solution('''3\n110110\n001001''') == 'First'\nassert solution('''4\n01100000\n10010011''') == 'Second'\nassert solution('''5\n01010110\n00101101''') == 'Draw'\n"
    },
    {
        "number": 531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n-1 1 1 0 0 -1\n''') == '2'\nassert solution('''\n3\n100 100 101\n''') == '0 0 0 0 0 0'\nassert solution('''\n7\n-10 -9 -10 -8 -10 -9 -9\n''') == '5 -10 -9 -9 -9 -9 -9'\n"
    },
    {
        "number": 532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"zeus\") == \"18\"\nassert solution(\"map\") == \"35\"\nassert solution(\"ares\") == \"34\"\n"
    },
    {
        "number": 533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3\n5\n1\n8\n''') == '0 4'\nassert solution('''\n3\n1\n6\n7\n25\n''') == '4 4'\n"
    },
    {
        "number": 534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"GBGGB\"\nassert solution(\"5 2\") == \"GGBGB\"\nassert solution(\"4 1\") == \"GGGB\"\n"
    },
    {
        "number": 535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1\n''') == '3'\nassert solution('''60 5\n''') == '237178099'\n"
    },
    {
        "number": 536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('1 5') == '-1'\n"
    },
    {
        "number": 537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('9 10') == '0 0 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\n"
    },
    {
        "number": 538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('131') == 'YES'\nassert solution('320') == 'NO'\nassert solution('2010200') == 'YES'\n"
    },
    {
        "number": 539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6\nX...XX\n...XX.\n.X..X.\n......\n1 6\n2 2\n''') == 'YES'\nassert solution('''\n5 4\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1\n''') == 'NO'\nassert solution('''\n4 7\n..X.XX.\n.XX..X.\nX...X..\nX......\n2 2\n1 6\n''') == 'YES'\n'''\n"
    },
    {
        "number": 541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') =='second'\nassert solution('3') == 'first'\nassert solution('2') =='second'\n"
    },
    {
        "number": 543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == 'YES'\nassert solution('''\n3\n1 0 1\n''') == 'NO'\n"
    },
    {
        "number": 544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\nassert solution('''\n5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'NO'\nassert solution('''\n5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\nassert solution('''\n5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'NO'\nassert solution('''\n5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\n"
    },
    {
        "number": 545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '-1'\nassert solution('3 2') == 'ayd'\nassert solution('1 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 3') == '-1'\n"
    },
    {
        "number": 546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nab\na?a\n2\naaa\naab\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''\nabc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO\\nYES\\nNO\\nYES'\n"
    },
    {
        "number": 547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n''') == '1 15'\nassert solution('''\n4 100\n11\n22\n1\n2\n22\n''') == '3 4'\n"
    },
    {
        "number": 548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 2 3\n''') == 'First'\nassert solution('''\n2 2\n''') == 'Second'\n"
    },
    {
        "number": 549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('wat_2') == 'No'\nassert solution('wat_3') == 'No'\n"
    },
    {
        "number": 551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7 5 8 6 9\n''') == 'Yes'\nassert solution('''5\n-1 -2 0 0 -5\n''') == 'No'\nassert solution('''5\n1000000000 0 0 0 0\n''') == 'Yes'\n"
    },
    {
        "number": 552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\naabbaa\nbaaaab\naaaaa\n\n''') == '4'\nassert solution('''\n5 4\nazaza\nzazaz\nazaz\n\n''') == '11'\nassert solution('''\n9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n\n''') == '2'\n"
    },
    {
        "number": 553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n000000\n999999\n''') == '2'\nassert solution('''\n6\n211111\n212111\n222111\n111111\n112111\n121111\n''') == '0'\nassert solution('''\n6\n111111\n112111\n121111\n111111\n112111\n121111\n''') == '1'\nassert solution('''\n6\n111111\n112111\n121111\n111111\n112111\n121111\n''') == '2'\nassert solution('''\n6\n111111\n112111\n121111\n111111\n112111\n121111\n''') == '3'\n"
    },
    {
        "number": 554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'\n"
    },
    {
        "number": 556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\n"
    },
    {
        "number": 557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"3 7\") == \"NO\"\n"
    },
    {
        "number": 558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 2 2') == '0'\nassert solution('3 2 3') == '0'\nassert solution('3 2 4') == '0'\nassert solution('3 2 5') == '0'\n"
    },
    {
        "number": 559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 1'\nassert solution('1') == '1 1'\nassert solution('2') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\n"
    },
    {
        "number": 560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\nS...\n....\n..S.''') == '8'\nassert solution('''3 4\nS...\n....\n..S.''') == '8'\nassert solution('''3 4\nS...\n....\n..S.''') == '8'\nassert solution('''3 4\nS...\n....\n..S.''') == '8'\nassert solution('''3 4\nS...\n....\n..S.''') == '8'\n"
    },
    {
        "number": 561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('1') == '-1'\nassert solution('10') == '-1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '900000000000000009 900000000000000021'\nassert solution('900000000000000009 900000000000000010 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 1 1\n''') == 'YES'\nassert solution('''3 4\n3 1 3\n''') == 'NO'\n"
    },
    {
        "number": 565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 13 9\n''') == '24'\nassert solution('''13 3 6\n''') == '9'\n"
    },
    {
        "number": 566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\n"
    },
    {
        "number": 567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('2') == '5'\n"
    },
    {
        "number": 568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\n"
    },
    {
        "number": 569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n''') == 'Valera'\nassert solution('''\n7 6\n''') == 'Vladik'\n'''\n"
    },
    {
        "number": 571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(()())''') == '((()())'\nassert solution('''(()(()))''') == '(((()()))'\nassert solution('''(()(()(()))''') == '((((()()))'\nassert solution
    },
    {
        "number": 572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5') == '3'\nassert solution('3 12\\n10 -9 -3 5') == '2'\nassert solution('2 20\\n14 -7 19') == '0'\n"
    },
    {
        "number": 573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 2 1\n''') == '1'\nassert solution('''\n2\n2 2\n''') == '0'\nassert solution('''\n7\n2 2 2 1 1 1 1\n''') == '3'\nassert solution('''\n3\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 5 5') == '13'\nassert solution('1 1 5 5') == '13'\nassert solution('1 1 5 5') == '13'\nassert solution('1 1 5 5') == '13'\nassert solution('1 1 5 5') == '13'\n"
    },
    {
        "number": 575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n13 35 77\n''') == '1001'\nassert solution('''\n6\n1 2 4 8 16 32\n''') == '32'\n"
    },
    {
        "number": 577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n5 2\n2 1\n''') == '2'\nassert solution('''\n1 5\n2 3\n''') == '1'\nassert solution('''\n1 2\n1000000000 1\n''') == '500000000'\nassert solution('''\n2 5\n2 1\n1 3\n''') == '0'\nassert solution('''\n2 5\n2 1\n1 3\n''') == '0'\n"
    },
    {
        "number": 578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\n"
    },
    {
        "number": 579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\n"
    },
    {
        "number": 580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 7 1 6\n1 2 2\n1 3 10\n2 3 7\n2 4 8\n3 5 3\n4 5 2\n5 6 1\n''') == 'YES\\nCAN 2\\nCAN 1\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\\n'\n\nassert solution('''\n3 3 1 3\n1 2 10\n2 3 10\n1 3 100\n''') == 'YES\\nYES\\nCAN 81\\n'''\n\nassert solution('''\n2 2 1 2\n1 2 1\n1 2 2\n''') == 'YES\\nNO\\n'''\n\nassert solution('''\n2 2 1 2\n1 2 1\n1 2 2\n''') == 'YES\\nNO\\n'''\n\nassert solution('''\n2 2 1 2\n1 2 1\n1 2 2\n''') == 'YES\\nNO\\n'''"
    },
    {
        "number": 581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '9'\n"
    },
    {
        "number": 582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 7 9 7 8\n5 2 5 7 5\n''') == '6'\nassert solution('''\n5\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n()()())(()\n''') == '5 10'\nassert solution('''\n12\n)))(()\n''') == '4 5 10'\nassert solution('''\n6\n)))(()\n''') == '0 1'\n"
    },
    {
        "number": 584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"5 2\"\nassert solution(\"5\") == \"0 0\"\nassert solution(\"27\") == \"2 6\"\nassert solution(\"5\") == \"0 0\"\n"
    },
    {
        "number": 585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n12 10 20 20 25 30\n10 20 30\n''') == '2'\nassert solution('''\n4 2\n1 3 3 7\n3 7\n''') == '0'\n"
    },
    {
        "number": 586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == '0'\nassert solution('''2 3\n''') == '6'\nassert solution('''49 1808\n''') == '359087121'\n"
    },
    {
        "number": 587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"26\"\nassert solution(\"1 9\") == \"26\"\nassert solution(\"1 7\") == \"26\"\nassert solution(\"2 6\") == \"26\"\nassert solution(\"2 5\") == \"26\"\n"
    },
    {
        "number": 588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10.000000000000000000000000000000000000000000000000'\nassert solution('4') == '10.000000000000000000000000000000000000000000000000'\nassert solution('5') == '10.000000000000000000000000000000000000000000000000'\n"
    },
    {
        "number": 589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1?AA') == '100'\nassert solution('1?AA') == '100'\nassert solution('1?AA') == '100'\nassert solution('1?AA') == '100'\nassert solution('1?AA') == '100'\n"
    },
    {
        "number": 590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 2 3') == '2'\nassert solution('6\\n4 5 6 3 2 1') == '0'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5') == '3'\n"
    },
    {
        "number": 591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '20'\nassert solution('6 5') == '35'\n"
    },
    {
        "number": 592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '8'\nassert solution('6') == '28'\nassert solution('2') == '0'\n"
    },
    {
        "number": 593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '-1'\nassert solution('3 3') == '-1'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2016\n''') == '2044'\nassert solution('''2000\n''') == '2028'\nassert solution('''50501\n''') == '50507'\n"
    },
    {
        "number": 596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1900:01:01\\n2038:12:31') == '50768'\nassert solution('1996:03:09\\n1991:11:12') == '1579'\n"
    },
    {
        "number": 597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2\\n1 3\\n1 4\\n3 5\\n3 6\\n3 7\\n2 7') == '2'\nassert solution('6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6') == '4'\nassert solution('6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6') == '4'\nassert solution('6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6') == '4'\nassert solution('6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6') == '4'\n"
    },
    {
        "number": 598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '5'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\n"
    },
    {
        "number": 600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('101') == '2'\nassert solution('5') == '9'\n"
    },
    {
        "number": 601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''\n1\n1 1\n1 1\n''') == '1'\nassert solution('''\n2\n1 1\n1 1\n''') == '1'\nassert solution('''\n3\n1 1\n1 1\n''') == '1'\nassert solution('''\n3\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == 'Adams'\nassert solution('''\n2\n''') == 'Van Buren'\nassert solution('''\n3\n''') == 'Harding'\nassert solution('''\n4\n''') == 'Harding'\nassert solution('''\n5\n''') == 'Harding'\n"
    },
    {
        "number": 603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1'\nassert solution('3\\n2 0 -1\\n') == '2'\nassert solution('4\\n5 -6 -5 1\\n') == '4'\n"
    },
    {
        "number": 605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"500 1000 20 30\") == \"Misha\"\nassert solution(\"1000 1000 1 1\") == \"Tie\"\nassert solution(\"1500 1000 176 177\") == \"Misha\"\n"
    },
    {
        "number": 606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\n"
    },
    {
        "number": 607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('14') == '3'\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0412\u0430\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043f\u043e\u0434\u0430\u0440\u043a\u0438 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u044b\u0445 \u0442\u0440\u0435\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a.\n"
    },
    {
        "number": 609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"YES\"\n"
    },
    {
        "number": 610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n"
    },
    {
        "number": 611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '-2.500000000000000'\nassert solution('3 2') == '7.000000000000000'\n"
    },
    {
        "number": 612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 3\n2 6 10 5 9\n''') == 'YES'\nassert solution('''5 5 3\n7 14 2 9 5\n''') == 'NO'\nassert solution('''5 3 1\n1 2\n''') == 'YES'\nassert solution('''5 3 1\n1 2 3 7 5\n''') == 'YES'\nassert solution('''5 3 1\n1 2 3 7 5\n''') == 'YES'\n"
    },
    {
        "number": 613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('2 3 4') == 'inf'\nassert solution('2 3 5') == 'inf'\nassert solution('2 3 6') == 'inf'\n"
    },
    {
        "number": 614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '3'\nassert solution('3 3') == '3'\nassert solution('4 3') == '10'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"25\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"15 1\") == \"15\"\nassert solution(\"30 2\") == \"30\"\nassert solution(\"1 2\") == \"-1\"\n"
    },
    {
        "number": 617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3+5*7+8*4') == '303'\nassert solution('2+3*5') == '25'\nassert solution('3*4*5') == '60'\n"
    },
    {
        "number": 618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"ABC|\") == \"XYZ|ABC\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\n"
    },
    {
        "number": 619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n"
    },
    {
        "number": 620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"3\\n1 -1\\n-1 1\\n1 1\"\n"
    },
    {
        "number": 621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6\n''') == '3'\nassert solution('''5\n0 -1 100 -1 0\n''') == '1'\nassert solution('''5\n0 -1 100 -1 0\n''') == '1'\nassert solution('''5\n0 -1 100 -1 0\n''') == '1'\nassert solution('''5\n0 -1 100 -1 0\n''') == '1'\n"
    },
    {
        "number": 622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"6\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"6 6\") == \"6\"\nassert solution(\"7 7\") == \"7\"\n"
    },
    {
        "number": 624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 6\n4 7\n''') == '11.00000000000000000000'\nassert solution('''\n4 2 6\n1 3 2 3\n''') == '5.00000000000000000000'\n"
    },
    {
        "number": 625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '2'\nassert solution('''5\n''') == '-3'\n"
    },
    {
        "number": 626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\naaa\n''') == 'aa'\nassert solution('''\n5\nabcda\n''') == 'abca'\n"
    },
    {
        "number": 628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''\n7 3\n3 14 15 92 65 35 89\n''') == '64'\n"
    },
    {
        "number": 629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '11'\nassert solution('4') == '12'\nassert solution('5') == '13'\nassert solution('6') == '14'\n"
    },
    {
        "number": 630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 0\\n0 1 1 2 3 2') == '1 2 2 3 3 3'\nassert solution('10 1\\n0 1 0 3 4 5 2 3 7 0') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('2 2') == '2 2'\n"
    },
    {
        "number": 631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 8\n2 5 1\n4 4\n0 1 2 3\n''') == 'YES'\nassert solution('''\n3 8\n2 5 1\n4 4\n0 1 2 3\n''') == 'NO'\nassert solution('''\n3 8\n2 5 1\n4 4\n0 1 2 3\n''') == 'YES'\nassert solution('''\n3 8\n2 5 1\n4 4\n0 1 2 3\n''') == 'NO'\nassert solution('''\n3 8\n2 5 1\n4 4\n0 1 2 3\n''') == 'YES'\n"
    },
    {
        "number": 632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 1\n8 2\n3 4\n''') == '10 12'\nassert solution('''\n2\n5 1\n8 2\n''') == '10 12'\nassert solution('''\n1\n5 1\n8 2\n''') == '10 12'\nassert solution('''\n1\n5 1\n8 2\n''') == '10 12'\nassert solution('''\n1\n5 1\n8 2\n''') == '10 12'\n"
    },
    {
        "number": 633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n2 5\n3 2\n5 1\n3 4\n4 1\n5 4\n''') == 'Possible'\nassert solution('''\n6 12\n2 5\n3 2\n5 1\n3 4\n4 1\n5 4\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n1 1\n\n\"\"\") == \"WIN\"\nassert solution(\"\"\"\n12 2\n4 1\n8 1\n\n\"\"\") == \"LOSE\"\nassert solution(\"\"\"\n1 1\n1 2\n\n\"\"\") == \"WIN\"\n"
    },
    {
        "number": 635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\nassert solution('''5 4\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\nassert solution('''5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10\n4 3 1 2\n''') == '4'\nassert solution('''\n5 6\n4 3 1 1 2\n''') == '3'\nassert solution('''\n1 3\n4\n''') == '0'\n"
    },
    {
        "number": 637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('7') == 'NO'\nassert solution('9') == 'YES'\nassert solution('5') == 'NO'\nassert solution('8') == 'NO'\n"
    },
    {
        "number": 638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 15\n1 2 3 4 5 6 7\n''') == '0 0 0 0 0 2 3 \n\nassert solution('''\n5 100\n80 40 40 40 60\n''') == '0 1 1 2 3 \n\nassert solution('''\n6 100\n80 40 40 40 60 40\n''') == '0 1 1 2 3 4 \n\nassert solution('''\n7 100\n80 40 40 40 60 40 60\n''') == '0 1 1 2 3 4 5 \n\nassert solution('''\n5 100\n80 40 40 40 60 40 60\n''') == '0 1 1 2 3 4 5 "
    },
    {
        "number": 639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0 4 5 6 7\n''') == '2'\nassert solution('''1 0\n0\n''') == '1'\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\n"
    },
    {
        "number": 641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\n"
    },
    {
        "number": 642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5\\n2 4 8 3 6') == 'NO'\nassert solution('10 5\\n2 4 5 7 9') == 'YES'\n"
    },
    {
        "number": 643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '4'\nassert solution('''\n4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '10'\nassert solution('''\n5\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '0'\nassert solution('''\n6\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '-1'\nassert solution('''\n7\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1\n''') == '-1'\n"
    },
    {
        "number": 644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nfor 43\nend\nfor 10\nfor 15\nadd\nend\nadd\nend\n''') == '161'\nassert solution('''\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\nend\nend\n''') == '0'\nassert solution('''\n11\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\nend\nend\n''') == 'OVERFLOW!!!'\n"
    },
    {
        "number": 645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('a') == '1'\nassert solution('aab') == '2'\nassert solution('aabab') == '3'\nassert solution('aababab') == '4'\n"
    },
    {
        "number": 646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n100 0\n0 100\n-100 0\n0 -100\n''') == '100'\nassert solution('''\n5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\nassert solution('''\n5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\n"
    },
    {
        "number": 647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1 4'\nassert solution('4') == '3 1'\nassert solution('5') == '2 3'\nassert solution('3') == '1 2'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\n"
    },
    {
        "number": 649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('1\\n3') == '3'\nassert solution('2\\n1 1 1 1 1 3') == '39'\nassert solution('3\\n1 1 1 1 1 3') == '39'\n"
    },
    {
        "number": 650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"1\"\nassert solution(\"6 6\") == \"14\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"6 3\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '1'\nassert solution('5\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '2'\nassert solution('5\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '3'\nassert solution('5\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '4'\nassert solution('5\\n0 1\\n1 0\\n1 1\\n2 0\\n') == '5'\n"
    },
    {
        "number": 653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\nLLRL1RL1\n''') == '1010000011'\nassert solution('''9\nL0L0LLRR9\n''') == '1100000010'\n"
    },
    {
        "number": 654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3\n''') == 'White'\nassert solution('''5\n3 5\n''') == 'Black'\nassert solution('''2\n2 2\n''') == 'Black'\n"
    },
    {
        "number": 656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n-5 20 -3 0\n''') == '2'\nassert solution('''4 2\n-5 20 -3 0\n''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'\n"
    },
    {
        "number": 657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"3 9\") == \"1\"\nassert solution(\"12345678 87654321\") == \"2147483648\"\n"
    },
    {
        "number": 658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\n\nassert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\n\nassert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\n\nassert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'\n\nassert solution('''\n5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n''') == '5.0000000000'"
    },
    {
        "number": 659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\n"
    },
    {
        "number": 660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n''') == '20 15'\nassert solution('''8 2 4\n''') == '35 32'\n"
    },
    {
        "number": 661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"0 0 1 1\"\nassert solution(\"1 2\") == \"0 0 1 1\"\nassert solution(\"1 3\") == \"0 0 1 1\"\nassert solution(\"1 4\") == \"0 0 1 1\"\n"
    },
    {
        "number": 662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n') == 'YES'\nassert solution('2\\n1\\n2\\n') == 'NO'\n"
    },
    {
        "number": 663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0 0 0 4') == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\n"
    },
    {
        "number": 664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 2') == '-1'\nassert solution('4 1 2 3') == '2'\nassert solution('5 1 2 3 4') == '3'\nassert solution('6 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '2'\nassert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '1'\nassert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '0'\nassert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '0'\nassert solution('''\n3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '0'\n"
    },
    {
        "number": 666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('6') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n5 2 4 1\n''') == '3'\nassert solution('''3 20\n199 41 299\n''') == '19'\n"
    },
    {
        "number": 670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('3 1 -9') == '6.1622776602'\n"
    },
    {
        "number": 671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('11') == '0'\n"
    },
    {
        "number": 672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n"
    },
    {
        "number": 673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'\n"
    },
    {
        "number": 674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nmail\\nai\\nlru\\ncf\") == \"cfmailru\"\nassert solution(\"3\\nkek\\npreceq\\ncheburek\") == \"NO\"\n"
    },
    {
        "number": 675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 8 3\n10\n\n''') == '3'\n\nassert solution('''\n2 10 1\n5 8\n\n''') == '1'\n\nassert solution('''\n1 1 3\n10\n\n''') == '-1'\n\nassert solution('''\n1 1 3\n10\n\n''') == '-1'\n\nassert solution('''\n1 1 3\n10\n\n''') == '-1'"
    },
    {
        "number": 676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '6'\nassert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '4'\nassert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '1'\nassert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '3'\nassert solution('''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '10'\n"
    },
    {
        "number": 678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0.0'\nassert solution('1') == '0.1'\nassert solution('2') == '0.2'\nassert solution('3') == '0.333333'\nassert solution('4') == '0.4'\n"
    },
    {
        "number": 679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n.BAC.\n''') == 'Yes'\nassert solution('''\nAA..CB\n''') == 'No'\n"
    },
    {
        "number": 680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0\n1 1\n2 2\n''') == '5'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '4'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '3'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '2'\nassert solution('''\n0 0\n2 0\n1 1\n''') == '1'\n"
    },
    {
        "number": 681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2 1 3\"\n"
    },
    {
        "number": 683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('10') == '1024'\n"
    },
    {
        "number": 684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '3 4 5'\n\n'''\n"
    },
    {
        "number": 685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n2 5\n7 9\n10 11\n''') == '10'\nassert solution('''\n5 10\n5 7\n11 12\n16 20\n25 26\n30 33\n''') == '18'\nassert solution('''\n1 1000000000\n1 1000000000\n''') == '1999999999'\n"
    },
    {
        "number": 686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'NO'\n"
    },
    {
        "number": 687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\n"
    },
    {
        "number": 688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"23454\") == \"1\"\nassert solution(\"169\") == \"1\"\nassert solution(\"12118999\") == \"1\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'NO'\nassert solution('''\n4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'YES'\n"
    },
    {
        "number": 690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'O-|OO-OO'\nassert solution('13') == 'O-|OOO-O'\nassert solution('720') == 'O-|-OOOO'\n"
    },
    {
        "number": 691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"YES\"\nassert solution(\"3 6\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 2 3 4 5 6\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7\") == \"YES\"\n"
    },
    {
        "number": 692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.500000'\nassert solution('2') == '0.666667'\nassert solution('3') == '0.333333'\n"
    },
    {
        "number": 693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1') == '1'\nassert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\\n') == '-1'\nassert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\\n') == '1'\nassert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\\n') == '1'\nassert solution('8 3\\n3 3 1 2 2 1 1 3\\n3 1 1\\n') == '1'\n"
    },
    {
        "number": 694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"116401024\") == \"YES\"\nassert solution(\"284254589153928171911281811000\") == \"YES\"\nassert solution(\"120\") == \"NO\"\nassert solution(\"12 1\") == \"NO\"\nassert solution(\"\") == \"NO\"\n"
    },
    {
        "number": 695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '1'\nassert solution('13 10') == '1'\n"
    },
    {
        "number": 696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 2\n''') == '0'\nassert solution('''2 0\n''') == '2'\nassert solution('''2000 2000\n''') == '674532367'\nassert solution('''2000 2000\n''') == '674532367'\nassert solution('''2000 2000\n''') == '674532367'\n"
    },
    {
        "number": 698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 1\n2 2\n''') == '0 0'\nassert solution('''10 0\n''') == '5 9'\nassert solution('''10 0\n1 2 3\n2 8\n1 4 5\n''') == '2 3'\n"
    },
    {
        "number": 699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 10') == '-1'\nassert solution('10 6 40') == '2 8 14 20 26'\n"
    },
    {
        "number": 700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nXOOO\nXXOO\nOOOO\nXXXX\nXOOO\nXOOO\nXOXO\nXOXX\n''') == 'Yes'\nassert solution('''2\nXX\nOO\nXO\nOX\n''') == 'No'\n"
    },
    {
        "number": 701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"both\"\n"
    },
    {
        "number": 702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"YES\"\n"
    },
    {
        "number": 703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'\n"
    },
    {
        "number": 704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 6 4\n3 4 4 2\n''') == '3'\nassert solution('''\n4\n10 5 6 4\n1 11 4 2\n''') == '6'\nassert solution('''\n3\n10 1 10\n1 10 1 1\n''') == '3'\n"
    },
    {
        "number": 705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n4 5 6\n''') == 'Karen'\nassert solution('''\n5\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Koyomi'\n"
    },
    {
        "number": 706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'\n"
    },
    {
        "number": 707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES'\nassert solution('''\n4 2\n1 5 17 19\n4 5\n''') == 'NO'\n"
    },
    {
        "number": 708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 11\n2 4 7 3\n''') == '2 7 1 3 6 5 4'\nassert solution('''\n1000 999\n10 20 30 40\n''') == '-1'\n"
    },
    {
        "number": 709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'\n"
    },
    {
        "number": 710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nZCTH\n''') == '2'\nassert solution('''5\nZDATG\n''') == '5'\nassert solution('''6\nAFBAKC\n''') == '16'\n"
    },
    {
        "number": 711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 6\") == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n"
    },
    {
        "number": 713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1 3'\nassert solution('4') == '1 2'\n"
    },
    {
        "number": 715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"A\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"D.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\") == \"A\"\n"
    },
    {
        "number": 716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1 4\n1010''') == '1'\nassert solution('''5 5 2\n10110''') == '0'\n"
    },
    {
        "number": 717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2\n1 2\n2 2\n''') == '4'\nassert solution('''\n2\n10 1\n6 5\n''') == '11'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n"
    },
    {
        "number": 719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '19'\nassert solution('2') == '28'\n"
    },
    {
        "number": 720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 0\n3 1\n3 4\n''') == '2'\nassert solution('''\n1\n5 4\n''') == '5'\nassert solution('''\n1\n0 0\n0 0\n0 0\n''') == '1'\n"
    },
    {
        "number": 721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n2 1\n2\n''') == '3'\nassert solution('''\n2 1\n2 1\n10\n''') == '-5'\nassert solution('''\n2 1\n2 1\n10\n''') == '-5'\nassert solution('''\n2 1\n2 1\n10\n''') == '-5'\nassert solution('''\n2 1\n2 1\n10\n''') == '-5'\n"
    },
    {
        "number": 722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2015'\nassert solution('4') == '1999'\nassert solution('3') == '2999'\nassert solution('2') == '1999'\nassert solution('1') == '1989'\n"
    },
    {
        "number": 723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\nassert solution('''\n1\n5 10\n''') == '50'\n"
    },
    {
        "number": 724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1'\nassert solution('3 0') == '0'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\nC M\nY Y\n''') == '#Color'\nassert solution('''\n3 2\nW W\nW W\nB B\n''') == '#Black&White'\nassert solution('''\n1 1\nW\n''') == '#Black&White'\n"
    },
    {
        "number": 726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n-3 2 9 16\n''') == '6'\nassert solution('''5 2\n4 8 11 18 19\n''') == '5'\n"
    },
    {
        "number": 727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 5 5 2') == '2'\nassert solution('5\\n6 3 4 1 5') == '5'\nassert solution('8\\n4 4 4 2 2 100 100 100') == '3'\nassert solution('6\\n10 10 50 10 50 50') == '4'\n"
    },
    {
        "number": 728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 11 2 8') == '4'\nassert solution('4 1 8 8 8') == '6'\nassert solution('2 7 6') == '0'\n"
    },
    {
        "number": 729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '+------------------------+\\n|
    },
    {
        "number": 731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 1 1') == '9'\nassert solution('77 7 7') == '7'\nassert solution('114 5 14') == '6'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('123') == '113'\n"
    },
    {
        "number": 733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 6 18') == '3'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '2'\nassert solution('1 1 1 1 1 1') == '3'\nassert solution('1 1 1 1 1 1 1') == '4'\n"
    },
    {
        "number": 734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n3 3 3 3 3\n''') == '10'\nassert solution('''3 5\n1 2 4\n''') == '3'\nassert solution('''5 5\n2 3 1 4 4\n''') == '9'\nassert solution('''1 1000\n548\n''') == '0'\nassert solution('''3 3\n3 1 1\n''') == '1'\n"
    },
    {
        "number": 735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"yes\"\nassert solution(\"4\") == \"no\"\nassert solution(\"2\") == \"yes\"\nassert solution(\"1 2\") == \"yes\"\nassert solution(\"4\") == \"no\"\n"
    },
    {
        "number": 736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\n"
    },
    {
        "number": 737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '8'\nassert solution('''11\n''') == '14'\nassert solution('''22\n''') == '20'\n'''\n"
    },
    {
        "number": 738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n''') == '4'\nassert solution('''1 2 2 5\n''') == '3'\nassert solution('''500000 500000 500000 500000\n''') == '1'\n"
    },
    {
        "number": 739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1 5 5 5\n''') == '15'\nassert solution('''\n8 4 3 2 10 5 2\n''') == '32'\n"
    },
    {
        "number": 741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n4 6 7\n''') == '8'\nassert solution('''\n2 12\n1 10\n''') == '9'\nassert solution('''\n2 7\n3 4\n''') == '6'\n"
    },
    {
        "number": 742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '-1'\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '-1'\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\nassert solution('''\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\n"
    },
    {
        "number": 743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('5') == '15'\n"
    },
    {
        "number": 744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10') == 'NO'\nassert solution('10') == 'YES'\n"
    },
    {
        "number": 745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nassert solution('3 3') == '0'\nassert solution('4 0') == '24'\nassert solution('1337 42') == '807905441'\n"
    },
    {
        "number": 746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('2 2') == '1.00000000000000000000'\nassert solution('2 2') == '1.00000000000000000000'\nassert solution('2 2') == '1.00000000000000000000'\n"
    },
    {
        "number": 747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\") == \"4\"\nassert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\") == \"5\"\nassert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\") == \"4\"\nassert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\") == \"5\"\nassert solution(\"5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5\") == \"4\"\n"
    },
    {
        "number": 748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '-1'\nassert solution('6') == '1 2 4'\nassert solution('6') == '1 2 6'\nassert solution('6') == '1 2 6'\nassert solution('6') == '1 2 6'\n"
    },
    {
        "number": 749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacaba') == '2'\nassert solution('zzzzz') == '1'\nassert solution('abcde') == '3'\n"
    },
    {
        "number": 750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n''') == '10'\nassert solution('''\n15 6\n''') == '38'\n"
    },
    {
        "number": 751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3'\nassert solution('3 4') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nXS\nXS\nM\n''') == '2'\nassert solution('''\nXXXL\nXXL\nXXL\nXXXS\n''') == '1'\nassert solution('''\nM\nXS\nXS\nM\n''') == '0'\n"
    },
    {
        "number": 753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 3 2\n''') == '1/3'\nassert solution('''\n4 3 2 2\n''') == '1/4'\n"
    },
    {
        "number": 754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('4') == '0'\n"
    },
    {
        "number": 755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n"
    },
    {
        "number": 756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '35'\nassert solution('9') == '90'\nassert solution('9') == '90'\n"
    },
    {
        "number": 757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('4 7 2') == '2'\nassert solution('5 5 1') == '-1'\n"
    },
    {
        "number": 758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('19 00\\n255 1 100 1') == '25200.0000'\nassert solution('17 41\\n1000 6 15 11') == '1365.0000'\n"
    },
    {
        "number": 760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaba') == '6'\nassert solution('aaabbbb') == '6'\nassert solution('abracadabra') == '20'\n"
    },
    {
        "number": 761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 2 1\n''') == '4'\nassert solution('''\n5\n0 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n5\n-1 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n5\n-1 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n5\n-1 -1 -1 -1 -1\n''') == '4'\n"
    },
    {
        "number": 762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4') == '1'\nassert solution('4 10') == '0'\nassert solution('6 100') == '2'\n"
    },
    {
        "number": 763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 2 1\n''') == '16'\nassert solution('''\n2\n1 1\n''') == '4'\n"
    },
    {
        "number": 764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1010''') == '3'\nassert solution('''5\n1010''') == '4'\nassert solution('''6\n1010''') == '5'\nassert solution('''7\n1010''') == '6'\nassert solution('''8\n1010''') == '7'\n"
    },
    {
        "number": 765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 2\n''') == '2'\nassert solution('''5 4 7\n''') == '1'\nassert solution('''6 2 3\n''') == '1'\n"
    },
    {
        "number": 766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ababa''') == 'Yes'\nassert solution('''zzcxx''') == 'Yes'\nassert solution('''yeee''') == 'No'\n"
    },
    {
        "number": 767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 3 3 7\n''') == '2'\nassert solution('''\n5 5\n10 9 5 8 7\n''') == '1'\n"
    },
    {
        "number": 768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '2'\nassert solution('4 4 1') == '4'\n"
    },
    {
        "number": 769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\n"
    },
    {
        "number": 770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 0 1 0\\n') == '3'\nassert solution('5\\n1 1 0 0 1\\n') == '4'\nassert solution('2\\n0 0\\n') == '0'\n"
    },
    {
        "number": 771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 3\n1 8 4\n''') == 'Yes'\nassert solution('''3 3 3\n1 8 4\n''') == 'No'\nassert solution('''4 3 5\n2 7 7 7\n''') == 'Yes'\nassert solution('''4 4 4\n2 7 7 7\n''') == 'No'\nassert solution('''5 5 5\n2 7 7 7\n''') == 'Yes'\n"
    },
    {
        "number": 772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 0\\n0 0 0\\n0 0 1\") == \"001\"\nassert solution(\"1 0 1\\n8 8 8\\n2 0 3\") == \"010\"\n"
    },
    {
        "number": 773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0') == '3'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '9'\n"
    },
    {
        "number": 774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'\n"
    },
    {
        "number": 775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 4\\n3 4 6\\n1 2\\n2 5\\n5 7\\n7 1\\n') == '1'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\n"
    },
    {
        "number": 776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"3 14\"\nassert solution(\"2 1 2\") == \"2 14\"\nassert solution(\"2 1 3\") == \"2 14\"\nassert solution(\"2 1 4\") == \"2 14\"\nassert solution(\"2 1 5\") == \"2 14\"\n"
    },
    {
        "number": 777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == '51'\nassert solution('hi') == '76'\n"
    },
    {
        "number": 778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0') == '9'\nassert solution('3 1') == '1'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\n"
    },
    {
        "number": 780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0840''') == '-1 17 7 7 7 -1 2 17 2 7 \n17 17 7 5 5 5 2 7 2 7 \n7 7 7 4 3 7 1 7 2 5 \n7 5 4 7 3 3 2 5 2 3 \n7 5 3 3 7 7 1 7 2 7 \n-1 5 7 3 7 -1 2 9 2 7 \n2 2 1 2 1 2 2 2 2 2 \n17 7 7 5 7 9 2 17 2 3 \n2 2 2 2 2 2 0 2 2 2 \n7 7 5 3 7 7 1 3 2 7 \n''')\n"
    },
    {
        "number": 781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"YES\"\n"
    },
    {
        "number": 782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('2') == '-1'\nassert solution('2') == '-1'\nassert solution('2') == '-1'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 1 2') == '3 2 0 2 0'\nassert solution('4\\n3 2 1 4') == '2 3 4 0'\n"
    },
    {
        "number": 784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 162') == 'YES'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\n"
    },
    {
        "number": 785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 5') == '18'\nassert solution('2 4 4') == '16'\n"
    },
    {
        "number": 786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1907\"\nassert solution(\"2\") == \"Impossible\"\nassert solution(\"1\") == \"Infinity\"\nassert solution(\"4\") == \"1897\"\n"
    },
    {
        "number": 787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nabca\n''') == 'YES'\nassert solution('''\n2\naaacas\n''') == 'YES'\nassert solution('''\n4\nabc\n''') == 'NO'\n"
    },
    {
        "number": 788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A221033\") == \"21\"\nassert solution(\"A223635\") == \"22\"\nassert solution(\"A232726\") == \"23\"\n"
    },
    {
        "number": 789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'\n"
    },
    {
        "number": 790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10''') == '35'\nassert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n1 1 1 1 1 1''') == '25'\nassert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n1 1 1 1 1 1''') == '25'\nassert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n1 1 1 1 1 1''') == '25'\nassert solution('''6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n1 1 1 1 1 1''') == '25'\n"
    },
    {
        "number": 791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('1111') == '4'\n"
    },
    {
        "number": 792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '0'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 3 2\") == \"3\"\n"
    },
    {
        "number": 794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 2 1 3 1\n''') == '2 1 3 1 1 2'\nassert solution('''\n1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('74') == '35'\n"
    },
    {
        "number": 796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n''') == '7'\nassert solution('''\n123 456789\n''') == '689974806'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 2\n''') == '2'\nassert solution('''\n1 3\n''') == '3'\n"
    },
    {
        "number": 797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution('''3 4 2 1\n1 2 3 59\n''') == '111'\n"
    },
    {
        "number": 798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2\") == \"0 1 1\"\nassert solution(\"3 4 5\") == \"1 3 2\"\nassert solution(\"4 1 1\") == \"Impossible\"\n"
    },
    {
        "number": 799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 2 3 4\\n') == '10'\nassert solution('5\\n1 1 0 1 1\\n') == '1'\nassert solution('3\\n1 3 1\\n') == '4'\nassert solution('1\\n12\\n') == '0'\n"
    },
    {
        "number": 800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '90.0000000000'\nassert solution('3') == '135.0000000000'\nassert solution('4') == '270.0000000000'\n"
    },
    {
        "number": 801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 2\n''') == '3'\nassert solution('''\n5 1 4 3 1 2\n''') == '6'\n"
    },
    {
        "number": 802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('2') == 'xX'\nassert solution('6') == '0'\nassert solution('XX') == 'xX'\nassert solution('xXXxXx') == 'XxXxXx'\n"
    },
    {
        "number": 804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\n"
    },
    {
        "number": 805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n0 5\n2 8\n1 6\n''') == '1'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\n"
    },
    {
        "number": 806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 3\n''') == '3'\nassert solution('''3 2 2\n''') == '1'\nassert solution('''9 9 99\n''') == '711426616'\n"
    },
    {
        "number": 807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n5 10 7 3 20\n''') == '3'\nassert solution('''6 2\n100 1 10 40 10 40\n''') == '97'\nassert solution('''3 0\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100') == '1E2'\n"
    },
    {
        "number": 809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 3 2\") == \"GBGBG\"\nassert solution(\"7 2 2 5\") == \"BBGBGBB\"\nassert solution(\"4 3 4 0\") == \"NO\"\n"
    },
    {
        "number": 810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\n"
    },
    {
        "number": 811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 6 8 7 4') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('4\\n1 2 4 8') == '-1'\n"
    },
    {
        "number": 813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 3') == '1 1 2 2'\nassert solution('5 5 2') == '1 1 1 1 1'\n"
    },
    {
        "number": 814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1 2') == '1 2 2 3'\nassert solution('3') == '2 3'\nassert solution('4') == '2 3 8'\n"
    },
    {
        "number": 815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"50 30 10 10\") == \"50\"\nassert solution(\"100 50 10 21\") == \"-1\"\n"
    },
    {
        "number": 816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('6 1') == '2'\n"
    },
    {
        "number": 817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabcdd\n''') == '3 abc'\nassert solution('''\nabbcdddeaaffdfouurtytwoo\n''') == '18 abbcd...tw'\n"
    },
    {
        "number": 818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('5') == '10080'\nassert solution('10') == '-1'\nassert solution('100') == '-1'\nassert solution('101') == '-1'\n"
    },
    {
        "number": 819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 2 3 4 5') == '5'\nassert solution('5 1\\n-4 -5 -3 -2 -1') == '-5'\n"
    },
    {
        "number": 820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n2\n1\n3\n''') == '2'\nassert solution('''\n3\n6\n2\n3\n2\n''') == '3'\nassert solution('''\n2\n5\n5\n10\n''') == '1'\n"
    },
    {
        "number": 821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 2 1 2\n''') == 'First'\nassert solution('''3 3 1 1 1\n''') == 'Second'\nassert solution('''4 5 3 1 5\n''') == 'Friendship'\n"
    },
    {
        "number": 822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 10\n''') == '10'\nassert solution('''1 2 5\n''') == '2'\nassert solution('''2 3 9\n''') == '1'\nassert solution('''2 3 9\n''') == '1'\nassert solution('''2 3 9\n''') == '1'\n"
    },
    {
        "number": 823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '1'\nassert solution('-1 -1') == '3'\n"
    },
    {
        "number": 824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('24') == '3'\nassert solution('12') == '2'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1011') == '9999999999'\nassert solution('5\\n1011') == '9999999999'\nassert solution('6\\n1011') == '9999999999'\nassert solution('7\\n1011') == '9999999999'\nassert solution('8\\n1011') == '9999999999'\n"
    },
    {
        "number": 828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n10''') == '2'\nassert solution('''6\n100011''') == '2'\n"
    },
    {
        "number": 830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '0 2'\nassert solution('3 4') == '1 1'\nassert solution('5 3') == '3 3'\n"
    },
    {
        "number": 831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nbbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\nassert solution('''\nabacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\nassert solution('''\nxyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'\n"
    },
    {
        "number": 832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '5'\nassert solution('2') == '0'\n"
    },
    {
        "number": 833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\nassert solution('5 10') == '60'\n"
    },
    {
        "number": 834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\n"
    },
    {
        "number": 835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BBC') == '7'\nassert solution('BSC') == '200000000001'\n"
    },
    {
        "number": 836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 6\nHSHSHS\n\nOutput\n1''') == '1'\nassert solution('''14 100\n...HHHSSS...SH\n\nOutput\n0''') == '0'\nassert solution('''23 50\nHHSS.......SSHHHHHHHHHH\n\nOutput\n8''') == '8'\n"
    },
    {
        "number": 837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 1 1\") == \"4\"\nassert solution(\"8 1 10\") == \"8\"\n"
    },
    {
        "number": 838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\n"
    },
    {
        "number": 839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 43 21 18 2') == '620'\nassert solution('5 2 0 1 4') == '87'\nassert solution('54 62 12 0 99') == '620'\nassert solution('87 64 81 33 0') == '620'\n"
    },
    {
        "number": 840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1000000000') == '2000000000'\nassert solution('10 1') == '0'\nassert solution('3 1') == '4'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '1337'\nassert solution('''\n2\n1\n''') == '1337'\nassert solution('''\n3\n1\n''') == '1337'\nassert solution('''\n4\n1\n''') == '1337'\nassert solution('''\n5\n1\n''') == '1337'\n"
    },
    {
        "number": 842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n"
    },
    {
        "number": 843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'FINITE'\nassert solution('3') == 'INFINITE'\n"
    },
    {
        "number": 844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n11010111\n''') == '4'\nassert solution('''3\n111\n''') == '0'\nassert solution('''2\n111\n''') == '0'\nassert solution('''1\n111\n''') == '0'\nassert solution('''0\n111\n''') == '0'\n"
    },
    {
        "number": 845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('R') == 'allyouneedislove'\nassert solution('L') =='s;;upimrrfod;pbr'\n"
    },
    {
        "number": 846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5 5'\n"
    },
    {
        "number": 847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n-1 1 2\n''') == '1'\nassert solution('''2 3\n-2 -2\n''') == '2'\n"
    },
    {
        "number": 848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '3'\nassert solution('3 2') == '-1'\nassert solution('3 3') == '3'\nassert solution('3 4') == '-1'\nassert solution('3 5') == '-1'\n"
    },
    {
        "number": 849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('1 2 1 2') == '0.666666666667'\nassert solution('1 2 1 2') == '0.666666666667'\nassert solution('1 2 1 2') == '0.666666666667'\nassert solution('1 2 1 2') == '0.666666666667'\n"
    },
    {
        "number": 850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n100 10 1 0\\n') == '4\\n0 1 10 100'\nassert solution('3\\n2 70 3\\n') == '2\\n2 70'\n"
    },
    {
        "number": 851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n010''') == '1'\nassert solution('''8 3\n01010110''') == '3'\n"
    },
    {
        "number": 852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\n"
    },
    {
        "number": 853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 0 5 0\n''') == '0'\nassert solution('''\n11\n5 5 5 5 5 5 5 5 0 5 5\n''') == '5555555550'\n"
    },
    {
        "number": 854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 38\n5 2 5\n''') == '10'\nassert solution('''\n5 21\n2 4 100 2 6\n''') == '6'\n"
    },
    {
        "number": 855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 2 1\") == \"1 9\"\nassert solution(\"8 1 1\") == \"5 2\"\nassert solution(\"5 1 1\") == \"0 0\"\n"
    },
    {
        "number": 856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n-199 192\n5 19\n5 -1 4 2 0\n1 2\n69\n''') == '0 6 1 3 5'\nassert solution('''\n3\n2 1\n-199 192\n5 19\n5 -1 4 2 0\n1 2\n69\n''') == '0 6 1 3 5'\nassert solution('''\n3\n2 1\n-199 192\n5 19\n5 -1 4 2 0\n1 2\n69\n''') == '0 6 1 3 5'\nassert solution('''\n3\n2 1\n-199 192\n5 19\n5 -1 4 2 0\n1 2\n69\n''') == '0 6 1 3 5'\nassert solution('''\n3\n2 1\n-199 192\n5 19\n5 -1 4 2 0\n1 2\n69\n''') == '0 6 1 3 5'\n"
    },
    {
        "number": 857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\n3 5 7 1 6 2 8\n1 2 7\n''') == '7 1 2'\nassert solution('''\n4 4\n3 4 1 0\n0 1 7 9\n''') == '1 0'\n"
    },
    {
        "number": 858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('99') == '49'\n"
    },
    {
        "number": 859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"++-+-\") == \"1.000000000000\"\nassert solution(\"+-+-+\") == \"0.500000000000\"\nassert solution(\"+++\") == \"0.000000000000\"\n"
    },
    {
        "number": 860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 3 0 1\") == \"Possible\"\nassert solution(\"9\\n0 2 3 4 1 1 0 2 2\") == \"Possible\"\nassert solution(\"4\\n0 2 1 1\") == \"Impossible\"\nassert solution(\"3\\n0 2 1\") == \"Impossible\"\nassert solution(\"2\\n0 2\") == \"Impossible\"\n"
    },
    {
        "number": 861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2.0000000000'\nassert solution('2 2') == '5.4142135624'\nassert solution('3 3') == '4.918938533204'\nassert solution('4 4') == '5.4142135624'\nassert solution('5 5') == '5.4142135624'\n"
    },
    {
        "number": 862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 2 0\n''') == '3'\nassert solution('''\n2\n10 10\n''') == '6'\nassert solution('''\n6\n5 2 6 5 7 4\n''') == '6'\n"
    },
    {
        "number": 863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 30\n10 35\n05:20''') == '5'\nassert solution('''60 120\n24 100\n13:00''') == '9'\n"
    },
    {
        "number": 864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10\n1 5 2 1 1 1 2 5 7 2\n''') == '2'\nassert solution('''\n100 1\n1\n''') == '0'\nassert solution('''\n3 9\n42 42 42 42 42 42 42 42 42\n''') == '3'\n"
    },
    {
        "number": 865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 60\n10 10\n100 100\n''') == '110'\nassert solution('''2 100\n10 10\n100 100\n''') == '110'\nassert solution('''2 100\n10 10\n100 100\n''') == '110'\nassert solution('''2 100\n10 10\n100 100\n''') == '110'\nassert solution('''2 100\n10 10\n100 100\n''') == '110'\n"
    },
    {
        "number": 866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\n"
    },
    {
        "number": 867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('10') == '5'\nassert solution('100') == '10'\n"
    },
    {
        "number": 868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '4'\n"
    },
    {
        "number": 869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\n"
    },
    {
        "number": 870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9 1 2') == '1.00000000000000000000'\nassert solution('2 6 2 2') == '2.66666666666666650000'\n"
    },
    {
        "number": 871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 60\n0 0\n1 20\n3 21\n5 0\n19 30\n23 40\n''') == '6 1'\nassert solution('''16 50\n0 30\n1 0\n12 0\n''') == '0 0'\nassert solution('''3 17\n0 30\n1 0\n12 0\n''') == '0 0'\n"
    },
    {
        "number": 872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 7\n''') == '1 4 7'\nassert solution('''\n2\n1 1\n''') == '1 1'\n"
    },
    {
        "number": 873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n82195\n''') == '13'\nassert solution('''\n5\n82195\n''') == '13'\nassert solution('''\n5\n82195\n''') == '13'\nassert solution('''\n5\n82195\n''') == '13'\nassert solution('''\n5\n82195\n''') == '13'\n"
    },
    {
        "number": 874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'\nassert solution('4') == '2 1 4 3'\n"
    },
    {
        "number": 875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 4\\n*aba\\na*ab\\nba*b\\nabb*\") == \"1\\n4 1\"\nassert solution(\"4\\n2 3 4\\n*abc\\na*ab\\nba*b\\ncbb*\") == \"-1\"\n"
    },
    {
        "number": 876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 6') == '2'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 4\n5 2\n''') == '2'\nassert solution('''3 3\n1 2\n2 3\n1 3\n''') == '1'\nassert solution('''3 2\n3 1\n3 2\n''') == '0'\n"
    },
    {
        "number": 878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 3\\n') == 'Finite'\nassert solution('3\\n1 2 3\\n') == 'Infinite'\n"
    },
    {
        "number": 879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '1 2 5 8'\nassert solution('6') == '1 2 3 4 5 6'\nassert solution('7') == '1 3 7'\n"
    },
    {
        "number": 880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == '9'\nassert solution('''4\n''') == '56'\nassert solution('''10\n''') == '30052700'\n"
    },
    {
        "number": 881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3 2 2 3\n''') == '2'\nassert solution('''7\n3 3 4 4 4 3 3\n''') == '3'\nassert solution('''1\n1000\n''') == '1'\n"
    },
    {
        "number": 882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('winlose???winl???w??') == '5'\nassert solution('glo?yto?e??an?') == '3'\nassert solution('??c?????') == '2'\n"
    },
    {
        "number": 883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n''') == '3'\nassert solution('''2\n3 5\n''') == '3'\nassert solution('''2\n2\n''') == '2'\nassert solution('''2\n1\n''') == '1'\nassert solution('''2\n3\n''') == '0'\n"
    },
    {
        "number": 884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n"
    },
    {
        "number": 885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '3'\nassert solution('3 1') == '11'\nassert solution('2 2') == '1'\nassert solution('3 2') == '11'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('527') == '572'\nassert solution('4573') == '3574'\nassert solution('1357997531') == '-1'\n"
    },
    {
        "number": 887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '3'\nassert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '2'\nassert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '4'\nassert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '3'\nassert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '2'\n"
    },
    {
        "number": 889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"#.##\") == \"YES\"\nassert solution(\"#.##\") == \"NO\"\nassert solution(\"#.##\") == \"NO\"\nassert solution(\"#.##\") == \"NO\"\nassert solution(\"#.##\") == \"NO\"\n"
    },
    {
        "number": 890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 6 1') == '2'\nassert solution('4 40 50 10') == '6'\nassert solution('5 25 35 10') == '6'\n"
    },
    {
        "number": 891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"WWWWWWW\"\nassert solution(input()) == \"WWBWBWW\"\nassert solution(input()) == \"BWBWBW\"\n"
    },
    {
        "number": 892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 8') == '6 5'\nassert solution('6 4') == '2 3'\n"
    },
    {
        "number": 893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4\\n2 1 3 2\\n1 2\\n1 3\\n3 4') == '8'\nassert solution('0 3\\n1 2 3\\n1 2\\n2 3\\n') == '3'\nassert solution('4 8\\n7 8 7 5 4 6 4 10\\n1 6\\n1 2\\n5 8\\n1 3\\n3 5\\n6 7\\n3 4\\n') == '41'\n"
    },
    {
        "number": 894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('-10 -5') == '-15 0 0 15'\nassert solution('-10 -5') == '-15 0 0 15'\nassert solution('-10 -5') == '-15 0 0 15'\n"
    },
    {
        "number": 895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n4 1 7 8 3 8\\n1') == '3'\nassert solution('6\\n4 1 7 8 3 8\\n1\\n') == '3'\nassert solution('6\\n4 1 7 8 3 8\\n1\\n2') == '2'\nassert solution('6\\n4 1 7 8 3 8\\n1\\n2\\n') == '2'\nassert solution('6\\n4 1 7 8 3 8\\n1\\n2\\n3') == '1'\n"
    },
    {
        "number": 896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\n0\n1\n\n''') == '500000004'\nassert solution('''7 26\n0 15 12 9 13 0 14\n11 1 0 13 15 12 0\n\n''') == '230769233'\n"
    },
    {
        "number": 898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 14\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"7 7\") == \"0\"\n"
    },
    {
        "number": 900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('??2??5') == '768'\nassert solution('??2??5') == '768'\nassert solution('??2??5') == '768'\nassert solution('??2??5') == '768'\nassert solution('??2??5') == '768'\n"
    },
    {
        "number": 901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 -3\n4 -2 3 2 -3\n''') == 'YES'\n\nassert solution('''\n5 2\n5 3 -2 1 -1 5\n3 -5 2 5\n''') == 'NO'\n\nassert solution('''\n7 2\n3 -1 6 7\n7 -5 4 2 4 7 -3 4\n''') == 'YES'\n\nassert solution('''\n4 2\n1 -3\n4 -2 3 2 -3\n''') == 'YES'\n\nassert solution('''\n5 2\n5 3 -2 1 -1 5\n3 -5 2 5\n''') == 'NO'"
    },
    {
        "number": 902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 2\n''') == '2'\nassert solution('''\n4 2\n3 1 2 4\n''') == '3'\nassert solution('''\n6 2\n6 5 3 1 2 4\n''') == '6'\nassert solution('''\n2 10000000000\n2 1\n''') == '2'\n"
    },
    {
        "number": 903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 5\n''') == '5'\nassert solution('''5 5\n1 2 1 1 1\n''') == '3'\nassert solution('''7 7\n4 1 2 4 3 4 4\n''') == '5'\n"
    },
    {
        "number": 904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    NonZERO\n    ''') == '5'\n\nassert solution('''\n    24\n    ''') == '0'\n\nassert solution('''\n    24\n    Harbour Space University\n    ''') == '1'\n\nassert solution('''\n    24\n    this is zero answer text\n    ''') == '0'\n\nassert solution('''\n    24\n    this is zero answer text\n    ''') == '0'"
    },
    {
        "number": 905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 10\n3 90\n12 0\n9 70\n5 50\n7 0''') == '50'\nassert solution('''5 5\n10 10\n20 20\n30 30\n40 40\n50 50''') == '-1'\nassert solution('''5 5\n10 10\n20 20\n30 30\n40 40\n50 50''') == '-1'\nassert solution('''5 5\n10 10\n20 20\n30 30\n40 40\n50 50''') == '-1'\nassert solution('''5 5\n10 10\n20 20\n30 30\n40 40\n50 50''') == '-1'\n"
    },
    {
        "number": 906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\n"
    },
    {
        "number": 907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == 'NO'\nassert solution('''\n5 4\n1 2\n2 3\n3 4\n4 5\n''') == 'YES'\nassert solution('''\n300000 5\n1 2\n2 3\n3 4\n4 5\n''') == 'YES'\n"
    },
    {
        "number": 908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\nba\nac\n''') == '1'\nassert solution('''\n3\n1 3 1\naa\nba\nac\n''') == '1'\nassert solution('''\n2\n5 5\nbbb\naaa\n''') == '-1'\nassert solution('''\n2\n3 3\naaa\naa\n''') == '-1'\n"
    },
    {
        "number": 909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('1+2') == '3'\nassert solution('1*2') == '2'\n"
    },
    {
        "number": 910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '7 8 3'\nassert solution('10 2 2') == '7 8 3'\nassert solution('10 2 2') == '7 8 3'\n"
    },
    {
        "number": 911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Limak\"\nassert solution(\"3 6\") == \"Radewoosh\"\nassert solution(\"8 1\") == \"Tie\"\n"
    },
    {
        "number": 912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '2'\nassert solution('''\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '0'\nassert solution('''\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '4'\n'''\n"
    },
    {
        "number": 913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 1 0 0\n0 1 1 1 1\n''') == '3'\nassert solution('''4\n0 0 0\n0 0 0\n''') == '-1'\nassert solution('''9\n1 0 0 0 0 0 0 0 1\n0 1 1 0 1 1 1 1 0\n''') == '4'\n"
    },
    {
        "number": 914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"banana\") == \"2\"\nassert solution(\"banana\") == \"3\"\nassert solution(\"banana\") == \"-1\"\n"
    },
    {
        "number": 915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"codeforces\"\nassert solution(\"3\") == \"codeforcesss\"\nassert solution(\"5\") == \"codeforcesss\"\nassert solution(\"10\") == \"codeforcesss\"\nassert solution(\"100\") == \"codeforcesss\"\n"
    },
    {
        "number": 916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2 3\n1 1\n''') == '1'\nassert solution('''\n3\n1 2 3\n1 1\n''') == '0'\nassert solution('''\n8\n7 2 2 5 4 3 1 1\n1 1 1 4 4 5 6\n''') == '4'\n"
    },
    {
        "number": 917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 3\n1 1 1\n2 2 3\n3 3 2\n''') == '14'\nassert solution('''\n4 10 2\n2 3 8\n3 4 7\n''') == '262'\n"
    },
    {
        "number": 918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n''') == 'Sidorov Ivanov'\n"
    },
    {
        "number": 919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"29\"\nassert solution(\"7 4\") == \"34\"\nassert solution(\"12 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n5 6 5 6\\n6 6 7 7\\n5 8 6 6\\n9 9 9 9') == '1 5 5'\nassert solution('10\\n6 6 6 6\\n7 7 7 7\\n4 4 4 4\\n8 8 8 8') == '3 4 6'\nassert solution('5\\n3 3 3 3\\n3 3 3 3') == '-1'\n"
    },
    {
        "number": 921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == '6 4'\nassert solution('4 4') == '1 1 1 1'\nassert solution('3 10') == '-1'\n"
    },
    {
        "number": 922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8') == '3 3'\nassert solution('1 3') == '4'\nassert solution('2 3') == '0 1'\n"
    },
    {
        "number": 923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Yes'\nassert solution('5') == 'No'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 2 5\n1 3 5\n''') == '2'\nassert solution('''\n0 1 3\n2 3 6\n''') == '1'\nassert solution('''\n0 1 3\n2 3 6\n''') == '1'\nassert solution('''\n0 1 3\n2 3 6\n''') == '1'\nassert solution('''\n0 1 3\n2 3 6\n''') == '1'\n"
    },
    {
        "number": 925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\n"
    },
    {
        "number": 926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('7') == '2'\nassert solution('10 7 8') == '1 5'\nassert solution('5 10 3') == '1 5'\nassert solution('4 2 6') == '1 5'\n"
    },
    {
        "number": 927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 4\\n3 7 8 4\") == \"777773\"\nassert solution(\"20 5\\n3 7 8 4 5\") == \"777773\"\nassert solution(\"20 6\\n3 7 8 4 5 6\") == \"777773\"\nassert solution(\"20 7\\n3 7 8 4 5 6 7\") == \"777773\"\nassert solution(\"20 8\\n3 7 8 4 5 6 7 8\") == \"777773\"\n"
    },
    {
        "number": 928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"2\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"4 10\") == \"2\"\n"
    },
    {
        "number": 929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 3\n0 1 1\n''') == '3'\nassert solution('''2 3\n1 2 3\n0 1 1\n''') == '2 2 2 3'\nassert solution('''2 3\n1 2 3\n0 1 1\n''') == '1 1 1 2'\nassert solution('''2 3\n1 2 3\n0 1 1\n''') == '1 3 1 2'\nassert solution('''2 3\n1 2 3\n0 1 1\n''') == '1 3 1 2'\n"
    },
    {
        "number": 930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"3 4\") == \"10\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"3 6\") == \"10\"\n"
    },
    {
        "number": 931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 3 1 1 9\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n''') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\n"
    },
    {
        "number": 932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 0\n0 0\n''') == 'NO'\nassert solution('''\n2 3\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n2 3\n0 1 0\n1 1 1\n''') == 'YES'\nassert solution('''\n2 3\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n2 3\n0 1 0\n1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"hellooo\") == \"hello\"\nassert solution(\"helloooo\") == \"hello\"\nassert solution(\"hellooooo\") == \"hello\"\n"
    },
    {
        "number": 934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2H 4C TH JH AD\n''') == 'YES'\nassert solution('''\n2H\n3D 4C AC KD AS\n''') == 'NO'\nassert solution('''\n4D\nAS AC AD AH 5H\n''') == 'YES'\n"
    },
    {
        "number": 935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Malvika\"\nassert solution(\"2 3\") == \"Akshat\"\nassert solution(\"3 3\") == \"Akshat\"\n"
    },
    {
        "number": 936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '300'\n"
    },
    {
        "number": 937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '16'\nassert solution('10 10') == '10'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n''') == '1'\nassert solution('''9 12\n''') == '2'\nassert solution('''3 6\n''') == '3'\nassert solution('''4\n''') == '1'\nassert solution('''5\n''') == '1'\n"
    },
    {
        "number": 939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\n1 2 3\n1 4 5\n4 6 7\n''') == '1 2 3 3 2 2 1'\nassert solution('''\n9 3\n3 6 9\n2 5 8\n1 4 7\n''') == '1 1 1 2 2 2 3 3 3'\nassert solution('''\n5 2\n4 1 5\n3 1 2\n''') == '2 3 1 1 3'\n"
    },
    {
        "number": 940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n''') == '0'\nassert solution('''\n2 5 3\n''') == '1'\nassert solution('''\n100 10 10\n''') == '81'\n"
    },
    {
        "number": 941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''13 3\n3 2 7\n''') == 'even'\nassert solution('''10 9\n1 2 3 4 5 6 7 8 9\n''') == 'odd'\nassert solution('''99 5\n32 92 85 74 4\n''') == 'odd'\nassert solution('''2 2\n1 0\n''') == 'even'\n"
    },
    {
        "number": 942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Possible\"\nassert solution(\"5\") == \"Possible\"\nassert solution(\"4\") == \"Impossible\"\n"
    },
    {
        "number": 943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '6'\nassert solution('''\n5\n999999999 999999999 999999999 999999999 999999999\n''') == '3999999996'\n"
    },
    {
        "number": 944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n3 4\\n3 2\\n') == '2\\n2 2 1\\n1 3\\n'\nassert solution('6\\n3 4\\n5 4\\n3 2\\n1 3\\n4 6\\n') == '3\\n1 1 \\n2 2 3 \\n2 4 5 \n"
    },
    {
        "number": 945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 10 5 15\n''') == 'yes'\nassert solution('''\n4\n0 15 5 10\n''') == 'no'\nassert solution('''\n4\n0 10 5 15\n''') == 'no'\nassert solution('''\n4\n0 10 5 15\n''') == 'no'\nassert solution('''\n4\n0 10 5 15\n''') == 'no'\n"
    },
    {
        "number": 946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1\n''') == 'HARD'\nassert solution('''\n1\n0\n''') == 'EASY'\n"
    },
    {
        "number": 947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n6\n9\n''') == '2 2'\nassert solution('''\n1\n3\n2\n''') == '3 3'\nassert solution('''\n1\n5\n2\n4\n3\n''') == '3 3'\n"
    },
    {
        "number": 948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\nxxxx\nxfax\nxcex\nxxxx''') == '1'\nassert solution('''4 2\nxx\ncf\nae\nxx''') == '1'\nassert solution('''1 4\nface''') == '0'\nassert solution('''2 3\nfac\ncef''') == '2'\nassert solution('''1 5\nface\nface\nface\nface\nface''') == '1'\n"
    },
    {
        "number": 949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\n"
    },
    {
        "number": 950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1**2\na3*0\nc4**\n''') == '1'\nassert solution('''5 5\n"
    },
    {
        "number": 951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '0'\nassert solution('99') == '0'\n"
    },
    {
        "number": 952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"2 2\"\nassert solution(\"5 7\") == \"3 3\"\n"
    },
    {
        "number": 953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n5 2 4 3 6 7 1\\n0001001\\n0000000\\n0000010\\n1000001\\n0000000\\n0010000') == '1 2 4 3 6 7 5'\nassert solution('5\\n4 2 1 5 3') == '1 2 3 4 5'\n"
    },
    {
        "number": 954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcd\") == \"4\"\nassert solution(\"bbb\") == \"1\"\nassert solution(\"yzyz\") == \"2\"\n"
    },
    {
        "number": 955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 C\n6 B\n16 BAC\n4 A\n''') == '15'\nassert solution('''\n2\n5 BA\n11 CB\n''') == '16'\nassert solution('''\n6\n100 A\n355 BCA\n150 BC\n160 AC\n180 B\n190 CA\n''') == '250'\nassert solution('''\n5\n10 A\n9 BC\n11 CA\n4 A\n5 B\n''') == '13'\nassert solution('''\n4\n5 B\n6 C\n16 BAC\n4 A\n''') == '-1'\n"
    },
    {
        "number": 956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 51\n10 23\n23 42\n39 42\n10 39\n39 58\n''') == '10: 1 42\\n23: 1 39\\n39: 1 23\\n42: 1 10\\n58: 2 10 42\\n'''"
    },
    {
        "number": 957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abcheaibcdi''') == 'YES'\nassert solution('''hiedi''') == 'NO'\nassert solution('''hieeid''') == 'NO'\nassert solution('''hieeid''') == 'NO'\nassert solution('''hieeid''') == 'NO'\n"
    },
    {
        "number": 958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 26\nbear\n\"\"\") == \"roar\"\nassert solution(\"\"\"\n2 7\naf\n\"\"\") == \"db\"\nassert solution(\"\"\"\n3 1000\nhey\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1000') == '2'\nassert solution('4 4 100500') == '1'\n"
    },
    {
        "number": 960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\n"
    },
    {
        "number": 961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '14'\nassert solution('9') == '9'\n"
    },
    {
        "number": 962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\") == \"3\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\") == \"3\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\") == \"3\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\") == \"3\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\") == \"3\"\n"
    },
    {
        "number": 963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\n"
    },
    {
        "number": 964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 2 5 5 2\n''') == '5'\nassert solution('''\n4 4 2 6 4 2\n''') == '6'\nassert solution('''\n5 1 2 5 5 2\n''') == '-1'\nassert solution('''\n4 4 2 6 4 2\n''') == '-1'\nassert solution('''\n5 1 2 5 5 2\n''') == '-1'\n"
    },
    {
        "number": 965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nAFFAAA\n''') == '4'\nassert solution('''\n3\nAFI\n''') == '1'\nassert solution('''\n2\nAFFAAA\n''') == '3'\nassert solution('''\n1\nAFFAAA\n''') == '2'\nassert solution('''\n1\nAFI\n''') == '1'\n"
    },
    {
        "number": 966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1987') == '2013'\nassert solution('2013') == '2014'\n"
    },
    {
        "number": 967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1 3 4\n5 2 1 3 4''') == '2'\nassert solution('''3\n1 2 3\n4 5 6''') == '0'\nassert solution('''4\n1 2 3\n4 5 6''') == '3'\n"
    },
    {
        "number": 968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n''') == 'NO'\nassert solution('''\n3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n3 1 2\n''') == 'YES'\nassert solution('''\n10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n2 4 9 6 5 7 1 3 8 10\n''') == 'YES'\nassert solution('''\n10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\n"
    },
    {
        "number": 969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabc\ncbaabc\n''') == '2'\nassert solution('''\naaabrytaaa\nayrat\n''') == '3 1'\nassert solution('''\nami\nno\n''') == '-1'\n"
    },
    {
        "number": 970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 6\n''') == '2'\nassert solution('''\n10\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 7 10\n5 6\n''') == '1'\nassert solution('''\n1 5 10\n7\n''') == '0'\nassert solution('''\n1 1 1\n1\n''') == '0'\n"
    },
    {
        "number": 972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\nWWBW\nBWWW\nWWWB\n''') == 'NO'\nassert solution('''\n3 1\nB\nB\nW\n''') == 'YES'\nassert solution('''\n3 3\nBWB\nBWB\nBWB\n''') == 'YES'\nassert solution('''\n3 3\nBWB\nBWB\nBWB\n''') == 'NO'\nassert solution('''\n3 3\nBWB\nBWB\nBWB\n''') == 'NO'\n"
    },
    {
        "number": 973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......\n\n''') == 'Yes'\nassert solution('''\n1 2\nSW\n\n''') == 'No'\nassert solution('''\n5 5\n.S...\n...S.\nS....\n...S.\n.S...\n\n''') == 'Yes'\n"
    },
    {
        "number": 974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '2'\nassert solution('88') == '2'\nassert solution('00') == '0'\nassert solution('123') == '0'\n"
    },
    {
        "number": 976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 6\n10 12\n''') == '6'\nassert solution('''\n1 1\n1 100000\n''') == '100000'\n"
    },
    {
        "number": 977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 4 5\n''') == '1'\nassert solution('''\n4 3\n2 3 5 6\n''') == '2'\nassert solution('''\n4 3\n9 1 1 1\n''') == '0'\nassert solution('''\n4 3\n1 2 3 4\n''') == '4'\nassert solution('''\n4 3\n1 2 3 4\n''') == '3'\n"
    },
    {
        "number": 978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1') == 'YES'\nassert solution('5') == 'NO'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 10\n8 5\n''') == '3'\nassert solution('''3 7\n1 4 9\n''') == '1'\nassert solution('''3 12\n1 4 5\n''') == '0'\n"
    },
    {
        "number": 980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\nabac\ncaab\nacba\n''') == 'acab'\nassert solution('''3 4\nkbbu\nkbub\nubkb\n''') == 'kbub'\nassert solution('''5 4\nabcd\ndcba\nacbd\ndbca\nzzzz\n''') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '55555'\nassert solution('2') == '33'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 2\n120 150\n''') == 'YES'\nassert solution('''\n3 4\n1 2\n120 150\n''') == 'NO'\nassert solution('''\n3 4\n1 2\n120 150\n''') == 'YES'\nassert solution('''\n3 4\n1 2\n120 150\n''') == 'NO'\nassert solution('''\n3 4\n1 2\n120 150\n''') == 'YES'\n"
    },
    {
        "number": 983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 2 3') == '30'\nassert solution('5 1 2 -3') == '12'\n"
    },
    {
        "number": 984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n15 -1 -1\n10 1 3\n5 -1 -1\n''') == '2'\nassert solution('''\n8\n6 2 3\n3 4 5\n12 6 7\n1 -1 8\n4 -1 -1\n5 -1 -1\n14 -1 -1\n2 -1 -1\n''') == '1'\nassert solution('''\n10\n1 -1 -1\n2 3 4\n5 6 7\n8 9 10\n11 12 13\n14 15 16\n17 18 19\n20 21 22\n23 24 25\n26 27 28\n29 30 31\n32 33 34\n35 36 37\n38 39 40\n41 42 43\n44 45 46\n47 48 49\n50 51 52\n53 54 55\n56 57 58\n59 60 61\n62 63 64\n65 66 67\n68 69 70\n71 72 73\n74 75 76\n77 78 79\n80 81 82\n83 84 85\n86 87 88\n89 90 91\n92 93 94\n95 96 97\n98 99 100\n101 102 103\n104 105 106\n107 108 109\n110 111 112\n113 114 115\n116 117 118\n119 120 121\n122 123 124\n125 126 127\n128 129 130\n131 132 133\n134 135 136\n137 138 139\n140 141 142\n143 144 145\n146 147 148\n149 150 151\n152 153 154\n155 156 157\n158 159 160\n161 162 163\n164 165 166\n167 168 169\n170 171 172\n173 174 175\n176 177 178\n179 180 181\n182 183 184\n185 186 187\n188 189 190\n191 192 193\n194 195 196\n197 198 199\n200 201 202\n203 204 205\n206 207 208\n209 210 211\n212 213 214\n215 216 217\n218 219 220\n221 222 223\n224 225 226\n227 228 229\n230 231 232\n233 234 235\n236 237 238\n239 240 241\n242 243 244\n245 246 247\n248 249 250\n251 252 253\n254 255 256\n257 258 259\n260 261 262\n263 264 265\n266 268 269\n270 271 272\n273 274 275\n276 278 279\n280 281 282\n283 284 285\n286 288 289\n290 291 292\n293 294 295\n296 298 299\n300 301 302\n303 304 305\n306 308 309\n310 311 312\n313 314 315\n316 317 318\n319 320 321\n322 323 324\n325 326 327\n328 329 330\n331 332 333\n334 335 336\n337 338 339\n340 341 342\n343 344 345\n346 467 468 469\n470 471 472 473\n474 475 476\n477 478 479\n480 481 482\n483 484 485\n486 486 487\n488 489 490\n491 492 493\n494 495 496 497\n498 499 500\n501 502 503\n504 505 506\n507 508 509\n510 511 512\n513 514 515\n516 517 518\n519 520 521\n522 523 524\n525 526 527\n528 529 530\n531 532 533\n534 535 536\n537 538 539\n540 541 542\n543 544 545\n546 547 548\n549 550 551\n552 553 554\n555 556 557\n558 559 560\n561 562 563\n564 565 566\n567 568 569\n570 571 572\n573 574 575\n576 577 578\n579 580 581\n582 583 584\n585 586 587\n588 589 590\n591 592 593\n594 595 596\n597 598 599\n600 601 602\n603 604 605\n606 608 609\n610 611 612\n613 614 615\n616 617 618\n619 620 621\n622 623 624\n625 626 627\n628 629 630\n631 632 633\n634 635 636\n637 638 639\n640 641 642\n643 644 645\n646 647 648\n649 650 651\n652 653 654\n655 656 657\n658 659 660\n661 662 663\n664 665 666\n667 668 669\n670 671 672\n673 674 675\n676 677 678\n679 680 681\n682 683 684\n685 686 687\n688 689 690\n691 692 693\n694 695 696\n697 698 699\n700 701 702\n703 704 705\n706 707 708\n709 710 711\n712 713 714\n715 716 717\n718 719 720\n721 722 723\n724 725 726\n727 728 729\n728 730 731\n731 732 733\n734 735 736\n737 738 739\n740 741 742\n743 744 745\n746 747 748\n749 750 751\n752 753 754\n755 756 757\n756 758 759\n757 760 761\n758 762 763\n759 764 765\n760 766 767\n761 762 763\n762 764 765\n763 766 767\n764 767 768\n765 766 767\n766 767 768\n767 769 770\n768 771 772\n769 772 773\n770 773 774\n771 774 775\n772 775 776\n773 776 777\n774 777 778\n775 778 779\n776 779 780\n777 780 781\n778 781 782\n779 782 783\n780 783 784\n781 784 785\n782 785 786\n783 786 787\n784 787 788\n785 788 789\n786 789 790\n787 790 791\n788 791 792\n789 792 793\n790 793 794\n791 794 795\n792 795 796\n"
    },
    {
        "number": 985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1\\n1 5\\n3 3\\n5 1\\n5 5') == '6'\nassert solution('3\\n1 1\\n2 3\\n3 5') == '0'\n"
    },
    {
        "number": 986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 2 2 1\n''') == '2'\nassert solution('''4 2\n1 2 3 1\n''') == '3'\nassert solution('''4 1\n1 2 2 1\n''') == '3'\n"
    },
    {
        "number": 987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''\n9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n''') == '7 8 9 4 5 6 1 2 3'\n"
    },
    {
        "number": 988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n**-**-**\n**-**-**\n..-**-.*\n**-**-**\n..-..-..\n..-**-..\n''') == '**-**-**\\n**-**-**\\n..-**-.*\\n**-**-**\\n..-P.-..\\n..-**-..\\n'\n\nassert solution('''\n**-**-**\n**-**-**\n..-**-.*\n**-**-**\n..-..-..\n..-**-..\n''') == '**-**-**\\n**-**-**\\n..-**-.*\\n**-**-**\\n..-P.-..\\n..-**-..\\n'\n\nassert solution('''\n**-**-**\n**-**-**\n..-**-.*\n**-**-**\n..-..-..\n..-**-..\n''') == '**-**-**\\n**-**-**\\n..-**-.*\\n**-**-**\\n..-P.-..\\n..-**-..\\n'\n\nassert solution('''\n**-**-**\n**-**-**\n..-**-.*\n**-**-**\n..-..-..\n..-**-..\n''') == '**-**-**\\n**-**-**\\n..-**-.*\\n**-**-**\\n..-P.-..\\n..-**-..\\n'\n\nassert solution('''\n**-**-**\n**-**-**\n..-**-.*\n**-**-**\n..-..-..\n..-**-..\n''') == '**-**-**\\n**-**-**\\n..-**-.*\\n**-**-**\\n..-P.-..\\n..-**-..\\n'"
    },
    {
        "number": 989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5\n3 1 7 5\n''') == '2'\nassert solution('''3 10\n100 100 100\n''') == '0'\nassert solution('''10 9\n4 5 5 7 5 4 5 2 4 3\n''') == '1'\n"
    },
    {
        "number": 990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n2 3\\n1') == '3'\nassert solution('3\\n1 2\\n2 3\\n1') == '2'\nassert solution('3\\n1 2\\n2 3\\n1') == '1'\nassert solution('3\\n1 2\\n2 3\\n1') == '0'\nassert solution('3\\n1 2\\n2 3\\n1') == '0'\n"
    },
    {
        "number": 991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\") == \"2\"\nassert solution(\"3 2 1\") == \"14\"\nassert solution(\"3 2 1\") == \"14\"\nassert solution(\"3 2 1\") == \"14\"\nassert solution(\"3 2 1\") == \"14\"\n"
    },
    {
        "number": 992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"5 5\") == \"6\"\nassert solution(\"10 10\") == \"6\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 1 5\") == \"3\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 2') == '2'\nassert solution('8 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n5 -4 2 1 8''') == '3 0'\nassert solution('''1\n0''') == '1'\nassert solution('''2\n1\n2''') == '0 1'\nassert solution('''3\n1\n2\n3''') == '0 1 2'\nassert solution('''4\n1\n2\n3\n4''') == '0 1 2 3'\n"
    },
    {
        "number": 996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == '2'\nassert solution('3 3 3') == '19'\nassert solution('1 1 10') == '0'\n"
    },
    {
        "number": 997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n6 1 3\n1 3 1 \nInput\n2 4\n\nOutput\n3\n1 3 1 \nInput\n1 1\n\nOutput\n0''') == '3'\nassert solution('''2 4\n1 3 1 \nInput\n1 1\n\nOutput\n0''') == '0'\nassert solution('''1 1\nInput\n1 1\n\nOutput\n0''') == '0'\nassert solution('''1 1\nInput\n1 1\n\nOutput\n0''') == '0'\nassert solution('''1 1\nInput\n1 1\n\nOutput\n0''') == '0'\n"
    },
    {
        "number": 999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 5\n2 6\n2 3\n2\n2 4\n6 8\n''') == '3'\nassert solution('''\n3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n''') == '0'\nassert solution('''\n3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n''') == '0'\nassert solution('''\n3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n''') == '0'\nassert solution('''\n3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n''') == '0'\n"
    },
    {
        "number": 1000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n''') == '4'\nassert solution('''7 6\n''') == '6'\n"
    },
    {
        "number": 1001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '14'\nassert solution('4') == '-3'\n"
    },
    {
        "number": 1002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 30\n2 2 1\n''') == '5'\nassert solution('''3 20\n2 1 1\n''') == '-1'\n"
    },
    {
        "number": 1003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '3'\nassert solution('9 3') == '13'\n"
    },
    {
        "number": 1004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 7 -7 3 -1 -3\n''') == '1'\nassert solution('''\n8\n1 -1 1 2 -1 -2 3 -3\n''') == '2'\nassert solution('''\n6\n2 5 -5 5 -5 -2\n''') == '-1'\nassert solution('''\n3\n-8 1 1\n''') == '-1'\n"
    },
    {
        "number": 1005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\n''') == '2'\nassert solution('''\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\n''') == '1'\nassert solution('''\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\n''') == '4'\nassert solution('''\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\n''') == '5'\nassert solution('''\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\n''') == '2'\n"
    },
    {
        "number": 1006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n.#...\n####.\n.####\n...#.\n.....\n\n''') == 'YES'\nassert solution('''4\n####\n####\n####\n####\n\n''') == 'NO'\nassert solution('''6\n.#..#.\n######\n.####.\n.####.\n######\n.#..#.\n\n''') == 'YES'\nassert solution('''6\n.#..#.\n######\n.####.\n.####.\n######\n.#..#.\n\n''') == 'NO'\nassert solution('''3\n...\n...\n...\n\n''') == 'YES'\n"
    },
    {
        "number": 1007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 100\n''') == '33'\nassert solution('''\n5 30\n''') == '15'\n"
    },
    {
        "number": 1008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"saba\") == \"NO\"\nassert solution(\"saddastavvat\") == \"YES\"\n"
    },
    {
        "number": 1009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n2 5\n''') == '7'\nassert solution('''\n3 2\n3 5 7\n''') == '9'\nassert solution('''\n4 3\n2 3 5 9\n''') == '9'\n"
    },
    {
        "number": 1010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 1 0\n''') == '1'\nassert solution('''\n5\n1 0 1 0 1\n''') == '4'\n"
    },
    {
        "number": 1011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '9:6'\nassert solution('5') == '15:10'\n"
    },
    {
        "number": 1012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nabacaba\\nxdd\") == \"abaacba\"\nassert solution(\"3\\nabacaba\\nxdd\") == \"abaacba\"\nassert solution(\"3\\nabacaba\\nxdd\") == \"abaacba\"\nassert solution(\"3\\nabacaba\\nxdd\") == \"abaacba\"\nassert solution(\"3\\nabacaba\\nxdd\") == \"abaacba\"\n"
    },
    {
        "number": 1013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 0 0\n0 1 0\n0 0 0\n\n''') == '4'\nassert solution('''4 3\n0 0 0\n0 0 1\n1 0 0\n0 0 0\n\n''') == '2'\n"
    },
    {
        "number": 1014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"white\"\nassert solution(\"3\") == \"black\"\n"
    },
    {
        "number": 1015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0 0 0 1\\n') == '0 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 1016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '2'\nassert solution('3 2') == '4'\n"
    },
    {
        "number": 1017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 1018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 3 3\n''') == '2'\nassert solution('''5\n5 4 5 4 4\n''') == '5'\nassert solution('''5\n5 4 5 4 4\n''') == '4'\nassert solution('''5\n5 4 5 4 4\n''') == '4'\nassert solution('''5\n5 4 5 4 4\n''') == '4'\n"
    },
    {
        "number": 1019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 3'\nassert solution('12') == '5 7'\n"
    },
    {
        "number": 1020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1') == '8'\nassert solution('7 9 1') == '28'\nassert solution('7 9 2') == '40'\n"
    },
    {
        "number": 1021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n7 2 4 12\\n7 15 10 12') == 'Yes'\nassert solution('3\\n4 4 4\\n1 2 3') == 'No'\n"
    },
    {
        "number": 1022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 0 1 1 2\n2 0 1 0 0\n''') == 'YES'\nassert solution('''\n4\n0 0 2 0\n1 1 1 1\n''') == 'NO'\nassert solution('''\n3\n0 0 0\n0 0 0\n''') == 'YES'\n"
    },
    {
        "number": 1023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 1 1 2\n1 3 5 7\n1 2 3 9 10\n''') == '11'\nassert solution('''\n2 2 4 4 2\n1 10\n10 20\n''') == '1000000003'\nassert solution('''\n4 3 2 3 1\n1 999999998 999999999 1000000000\n3 4 1000000000\n''') == '1000000003'\n"
    },
    {
        "number": 1024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.916666666666666666666666666667'\nassert solution('2') == '0.0'\nassert solution('1') == '0.0'\n"
    },
    {
        "number": 1025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n1 1\\n2 0\\n2 2\\n') == '3'\nassert solution('3\\n0 0\\n1 1\\n2 0\\n') == '1'\nassert solution('1\\n1 1\\n') == '0'\n"
    },
    {
        "number": 1026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n10 7 1 9 10 15\n''') == '26'\nassert solution('''\n1\n400000\n''') == '400000'\nassert solution('''\n7\n8 9 26 11 12 29 14\n''') == '55'\n"
    },
    {
        "number": 1027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 1 0 0 0 0 0 0 7 0 0 0 0 0\n''') == '4'\nassert solution('''\n5 1 1 1 1 0 0 0 0 0 0 0 0 0\n''') == '8'\n"
    },
    {
        "number": 1028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"10 10\"\nassert solution(\"3 2\") == \"1 1\"\nassert solution(\"6 3\") == \"3 6\"\n"
    },
    {
        "number": 1029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9555') == '4'\nassert solution('10000000005') == '2'\nassert solution('800101') == '3'\nassert solution('19992000') == '1'\nassert solution('310200') == '2'\n"
    },
    {
        "number": 1030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('17 5 2') == '<< 3 4 (5) 6 7 >>'\nassert solution('6 5 2') == '<< 3 4 (5) 6 >>'\nassert solution('6 1 2') == '(1) 2 3 >>'\nassert solution('6 2 2') == '1 (2) 3 4 >>'\nassert solution('9 6 3') == '<< 3 4 5 (6) 7 8 9 >>'\n"
    },
    {
        "number": 1031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 2 5 1') == '    / \\     \n  \\    \n   \\   \n    \\  \n     \\ /'\n\nassert solution('3\\n1 5 1') == '    / \\     \n  \\    \n   \\   \n    \\  \n     \\ /'\n\nassert solution('5\\n1 2 3 4 5') == '    / \\     \n  \\    \n   \\   \n    \\  \n     \\ /'\n\nassert solution('3\\n1 2 3') == '    / \\     \n  \\    \n   \\   \n    \\  \n     \\ /'\n\nassert solution('3\\n1 2 3') == '    / \\     \n  \\    \n   \\   \n    \\  \n     \\ /'"
    },
    {
        "number": 1032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 4 5\n''') == '1'\nassert solution('''\n4 3\n2 3 5 6\n''') == '2'\nassert solution('''\n4 3\n9 1 1 1\n''') == '0'\nassert solution('''\n3 2\n1000000000 1 999999999\n''') == '1'\nassert solution('''\n3 2\n1000000000 1 999999999\n''') == '0'"
    },
    {
        "number": 1033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 8') == '3'\nassert solution('1000000000 2') == '1000000000'\nassert solution('1000000000 2') == '1000000000'\nassert solution('1000000000 2') == '1000000000'\n"
    },
    {
        "number": 1034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 8\") == \"19\"\nassert solution(\"2 2 2 8\") == \"17\"\nassert solution(\"2 2 2 8\") == \"15\"\nassert solution(\"2 2 2 8\") == \"14\"\nassert solution(\"2 2 2 8\") == \"13\"\n"
    },
    {
        "number": 1035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 18\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 1036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"P\"\nassert solution(\"3 3\") == \"R\"\nassert solution(\"3 4\") == \"S\"\nassert solution(\"3 5\") == \"P\"\nassert solution(\"3 6\") == \"S\"\n"
    },
    {
        "number": 1037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 4 2\") == \"20\"\nassert solution(\"5\\n1 2 3 4 5\") == \"30\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"60\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"90\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"120\"\n"
    },
    {
        "number": 1038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '5'\nassert solution('1 2') == '3'\nassert solution('0 1') == '2'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 1039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1\\n1 3 1\\n2 4 1\\n3 5 1\\n3 1\\n2 4\\n2 3\\n4 5\") == \"3\\n2\\n4\"\nassert solution(\"5\\n1 2 1\\n1 3 1\\n2 4 1\\n3 5 1\\n3 1\\n2 4\\n2 3\\n4 5\") == \"4\\n2\\n4\"\nassert solution(\"5\\n1 2 1\\n1 3 1\\n2 4 1\\n3 5 1\\n3 1\\n2 4\\n2 3\\n4 5\") == \"4\\n2\\n4\"\nassert solution(\"5\\n1 2 1\\n1 3 1\\n2 4 1\\n3 5 1\\n3 1\\n2 4\\n2 3\\n4 5\") == \"4\\n2\\n4\"\nassert solution(\"5\\n1 2 1\\n1 3 1\\n2 4 1\\n3 5 1\\n3 1\\n2 4\\n2 3\\n4 5\") == \"4\\n2\\n4\"\n"
    },
    {
        "number": 1040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"NO\"\nassert solution(\"314159\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 1042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 9') == '3'\nassert solution('5 8') == '0'\n"
    },
    {
        "number": 1043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 9 1 -1\n''') == '0'\nassert solution('''8\n11 -1 13 19 24 7 17 5\n''') == '12'\n"
    },
    {
        "number": 1044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 1 5 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 1 5 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 1 5 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 1 5 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 1045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('25') == '4'\n\n\"\"\""
    },
    {
        "number": 1046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 1 7 1 7 10\n\n''') == '2'\nassert solution('''\n3\n1 1 1\n\n''') == '-1'\nassert solution('''\n1\n0\n\n''') == '0'\n"
    },
    {
        "number": 1047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '0'\nassert solution('6') == '4'\n"
    },
    {
        "number": 1049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 1050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8 6\n''') == 'Yes'\nassert solution('''3 9 3\n''') == 'Yes'\nassert solution('''8 5 20\n''') == 'No'\n"
    },
    {
        "number": 1051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n16 23 8 15 4\\n') == '67'\nassert solution('25\\n2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25 26 28\\n') == '3'\nassert solution('3\\n14 15 92\\n') == '0'\nassert solution('5\\n16 23 8 15 4\\n') == '67'\nassert solution('25\\n2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25 26 28\\n') == '3'\n"
    },
    {
        "number": 1052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '1'\nassert solution('4 2') == '7'\nassert solution('5 3') == '31'\nassert solution('5 4') == '76'\n"
    },
    {
        "number": 1053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\n"
    },
    {
        "number": 1054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('0 0') == '4'\nassert solution('0 3') == '9'\n"
    },
    {
        "number": 1055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 2 4\n''') == '4'\nassert solution('''\n8\n11 12 1 2 13 14 3 4\n''') == '2'\nassert solution('''\n4\n7 6 5 4\n''') == '1'\n"
    },
    {
        "number": 1056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '33.0476190476'\n\nassert solution('''\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '20.2591405923'\n\nassert solution('''\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '15.9047592939'\n\nassert solution('''\n0 0 0 0 0 0 0 0 0 0\n"
    },
    {
        "number": 1057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '3'\nassert solution(input()) == '6'\n"
    },
    {
        "number": 1058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n2 1 4\n1 2 4\n3 4 4\n2 8 3\n3 16 3\n1 32 2\n''') == '63'\nassert solution('''\n7\n1 100000 1\n1 100000 2\n1 100000 2\n4 50000 3\n3 50000 4\n4 50000 4\n3 50000 3\n''') == '300000'\nassert solution('''\n4\n1 1000 1\n2 500 2\n3 250 3\n4 125 4\n''') == '1000'\n"
    },
    {
        "number": 1059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '-1'\nassert solution('36') == 'agoeuioaeiruuimaeoieauoweouoiaouimae'\n"
    },
    {
        "number": 1060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 4 6 8 10 18 21 24') == '3'\nassert solution('2\\n3 4 6 8 10 18 21 24') == '1'\nassert solution('3\\n3 4 6 8 10 18 21 24') == '2'\nassert solution('4\\n3 4 6 8 10 18 21 24') == '1'\nassert solution('5\\n3 4 6 8 10 18 21 24') == '2'\n"
    },
    {
        "number": 1061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 0 0') == '3'\nassert solution('0 0 0 0 1') == '1'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\n"
    },
    {
        "number": 1062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nwookie\ncookie\n''') == '1 2'\nassert solution('''\n4\npetr\negor\n''') == '2 1'\nassert solution('''\n6\ndouble\nbundle\n''') == '2 4'\nassert solution('''\n6\nwookie\ncookie\n''') == '1 2'\nassert solution('''\n4\npetr\negor\n''') == '2 1'\n"
    },
    {
        "number": 1063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n?\n18\n1?\n''') == 'YES'\nassert solution('''\n2\n??\n?\n''') == 'NO'\nassert solution('''\n5\n12224\n12??5\n12226\n?0000\n?00000\n''') == 'YES'\nassert solution('''\n5\n12224\n12??5\n12226\n?0000\n?00000\n''') == 'YES'\nassert solution('''\n5\n12224\n12??5\n12226\n?0000\n?00000\n''') == 'YES'\n"
    },
    {
        "number": 1064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2 3\n1 3\n1 2 3\n''') == '6'\nassert solution('''\n4 3 4\n1 2 3\n1 10 100 1000\n''') == '1000'\nassert solution('''\n5 1 5\n0\n3 3 3 3 3\n''') == '-1'\n"
    },
    {
        "number": 1065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 4 5 2\n''') == '8'\nassert solution('''30 9 4 1\n''') == '4'\n"
    },
    {
        "number": 1066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3') == '5'\nassert solution('7 7') == '6'\n"
    },
    {
        "number": 1067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n-1 1\n''') == '2'\nassert solution('''4\n0 0 0 0\n''') == '4'\nassert solution('''5\n-5 -3 5 3 0\n''') == '13'\n"
    },
    {
        "number": 1068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12345168') == '123+45=168'\nassert solution('099') == '0+9=9'\nassert solution('199100') == '1+99=100'\nassert solution('123123123456456456579579579') == '123123123+456456456=579579579'\n"
    },
    {
        "number": 1069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('124356983594583453458888889') == '0'\n\n\"\"\""
    },
    {
        "number": 1070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 3\n1 2 3 3 2 1 2 2\n''') == 4\n"
    },
    {
        "number": 1071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('1 1 3') == 'YES'\nassert solution('1 0 0') == 'NO'\nassert solution('1 0 0') == 'NO'\nassert solution('1 1 3') == 'YES'\n"
    },
    {
        "number": 1072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10\\ncodeforces') == '0'\nassert solution('4 4\\ncase\\ncare\\ntest\\ncode') == '2'\nassert solution('5 4\\ncode\\nforc\\nesco\\ndefo\\nrecs') == '4'\n"
    },
    {
        "number": 1073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nURLLDR\n''') == '2'\nassert solution('''\nDLUU\n''') == '0'\nassert solution('''\nRLRLRLR\n''') == '12'\n"
    },
    {
        "number": 1074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    1\n    ''') == '1'\nassert solution('''\n    0\n    ''') == '0'\nassert solution('''\n    1\n    ''') == '1'\nassert solution('''\n    0\n    ''') == '0'\nassert solution('''\n    1\n    ''') == '1'\n"
    },
    {
        "number": 1075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0 1 0'\nassert solution('3') == '-1'\nassert solution('4') == '0 1 3 2 0'\nassert solution('16') == '0 1 2 4 9 3 6 13 10 5 11 7 15 14 12 8 0'\n"
    },
    {
        "number": 1076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n''') == '5'\nassert solution('''\n3 2\n''') == '332748127'\nassert solution('''\n14 9\n''') == '969862773'\n"
    },
    {
        "number": 1077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2 3 2\n''') == '2 1'\nassert solution('''7 3\n1 3 2 2 2 2 1\n''') == '2 1'\nassert solution('''4 4\n1000000000 100 7 1000000000\n''') == '1 4'\n"
    },
    {
        "number": 1078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10\n-5\n-5\n''') == '5 -2 -3'\nassert solution('''\n7\n-7\n-29\n0\n3\n24\n-29\n38\n''') == '-3 -15 0 2 12 -15 19'\n"
    },
    {
        "number": 1079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1'\nassert solution('111') == '2'\nassert solution('1101101') == '4'\n"
    },
    {
        "number": 1080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 2 2\n''') == 'YES'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == 'NO'\n"
    },
    {
        "number": 1081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('13') == 'NO'\nassert solution('24') == 'NO'\nassert solution('46') == 'YES'\n"
    },
    {
        "number": 1082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 1 1\\n') == '15'\nassert solution('4\\n2 2 2 2\\n') == '7'\nassert solution('5\\n1 2 4 5 8\\n') == '7'\n"
    },
    {
        "number": 1083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 1084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n.#.#..#.\n.....#..\n.#.#..#.\n"
    },
    {
        "number": 1085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 1086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0'\nassert solution('1 2') == '1'\nassert solution('3 4') == '1'\nassert solution('3 4') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 1087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"14\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 2 3 4\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"7\"\nassert solution(\"1 2 3 4 5 6\") == \"7\"\n"
    },
    {
        "number": 1088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 13\") == \"12\"\nassert solution(\"4 8 9\") == \"12\"\nassert solution(\"1 6 5\") == \"12\"\n"
    },
    {
        "number": 1089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"8\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"2 2 2\") == \"8\"\nassert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 1090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\nLRLRRL\") == \"3\"\nassert solution(\"6 1\\nRRLLLL\") == \"2\"\nassert solution(\"6 1\\nRRLLRR\") == \"1\"\nassert solution(\"6 1\\nRRLLRR\") == \"1\"\nassert solution(\"6 1\\nRRLLRR\") == \"1\"\n"
    },
    {
        "number": 1091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2 5'\nassert solution('3') == '1 8'\nassert solution('6') == '6 9'\n"
    },
    {
        "number": 1092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1'\nassert solution('4 2') == '2'\nassert solution('11 2') == '6720'\n"
    },
    {
        "number": 1093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 1094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nalex\nivan\nroman\nivan''') == 'ivan'\nassert solution('''8\nalina\nmaria\nekaterina\ndarya\ndarya\nekaterina\nmaria\nalina''') == 'alina'\n"
    },
    {
        "number": 1095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 5 6\n1 3\n3\n''') == '3'\nassert solution('''\n3 1\n1 5 6\n1 3\n2\n''') == '2'\nassert solution('''\n3 1\n1 5 6\n1 3\n4\n''') == '4'\nassert solution('''\n3 1\n1 5 6\n1 3\n5\n''') == '5'\nassert solution('''\n3 1\n1 5 6\n1 3\n6\n''') == '6'\n"
    },
    {
        "number": 1096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('e4') == '8'\nassert solution('a4') == '1'\nassert solution('b4') == '1'\nassert solution('c4') == '1'\nassert solution('d4') == '1'\n"
    },
    {
        "number": 1097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 3') == '7\\n1 3\\n2 1\\n2 6\\n2 4\\n7 4\\n3 5\\n'\nassert solution('14 5 6') == '14\\n3 1\\n1 4\\n11 6\\n1 2\\n10 13\\n6 10\\n10 12\\n14 12\\n8 4\\n5 1\\n3 7\\n2 6\\n5 9\\n'\nassert solution('3 1 1') == '-1\\n'\n"
    },
    {
        "number": 1098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"23:59\"\nassert solution(\"4\") == \"06:37\"\n"
    },
    {
        "number": 1099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 4\n4 1\n3 4\n''') == '0'\nassert solution('''\n5\n2 4\n4 1\n3 4\n''') == '1'\nassert solution('''\n6\n2 4\n4 1\n3 2\n1 2\n2 4\n''') == '1'\nassert solution('''\n7\n2 4\n4 1\n3 2\n1 2\n2 4\n3 4\n''') == '2'\nassert solution('''\n8\n2 4\n4 1\n3 2\n1 2\n2 4\n3 4\n4 5\n''') == '2'\n"
    },
    {
        "number": 1100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '9'\nassert solution('3') == '1'\n\n\"\"\""
    },
    {
        "number": 1101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\n0100100''') == '2'\nassert solution('''5 1\n01010''') == '2'\nassert solution('''3 2\n000''') == '1'\n"
    },
    {
        "number": 1102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3\\n1 1 1 0 1 0') == '3'\nassert solution('5 2\\n0 0 0 1 0') == '1'\n"
    },
    {
        "number": 1103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('8') == '8'\nassert solution('24') == '17'\n"
    },
    {
        "number": 1104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3\n3 2\n''') == 'YES'\nassert solution('''4\n3 3 2\n1 2 0\n''') == 'NO'\nassert solution('''3\n1 3\n3 2\n''') == 'YES'\nassert solution('''3\n1 3\n3 2\n''') == 'NO'\nassert solution('''3\n1 3\n3 2\n''') == 'YES'\n"
    },
    {
        "number": 1105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1\n1 1\n0 1\n0 2\n''') == 'YES'\nassert solution('''\n0 1\n1 1\n0 1\n0 2\n''') == 'NO'\nassert solution('''\n0 1\n1 1\n0 1\n0 2\n''') == 'YES'\nassert solution('''\n0 1\n1 1\n0 1\n0 2\n''') == 'NO'\nassert solution('''\n0 1\n1 1\n0 1\n0 2\n''') == 'YES'\n"
    },
    {
        "number": 1106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4 5 6\n''') == '5'\nassert solution('''\n2\n1 2\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 1107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nabbba\") == \"1\"\nassert solution(\"4\\nabbab\") == \"0\"\n"
    },
    {
        "number": 1108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 1109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2\\n2 1 2 2 2 1') == '1'\nassert solution('8 4\\n1 1 2 1 1 1 2 1') == '0'\nassert solution('9 3\\n2 1 1 1 2 1 1 1 2') == '3'\n"
    },
    {
        "number": 1110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '7'\n"
    },
    {
        "number": 1111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"160\"\nassert solution(\"5 2\") == \"645\"\n"
    },
    {
        "number": 1112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == '1 1 1'\nassert solution('1 0 1') == '1 1 1'\nassert solution('1 1 0') == '1 1 1'\nassert solution('0 3 6') == '6 3 6'\nassert solution('5 0 5') == '5 5 5'\n"
    },
    {
        "number": 1113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '-1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 1114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Possible'\nassert solution('3 3') == 'Ambiguity'\nassert solution('3 3') == 'Impossible'\n"
    },
    {
        "number": 1115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 4\n2\n1 4\n''') == '7'\nassert solution('''\n1\n5\n1\n1 5\n''') == '5'\nassert solution('''\n1\n5\n1\n1 5\n''') == '-1'\n"
    },
    {
        "number": 1116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 2\n2 10 4\n5 2 3\n3 2 2\n''') == 'REBEL'\nassert solution('''\n1 1 2\n2 10 4\n5 2 3\n3 2 2\n''') == 'OBEY'\nassert solution('''\n1 1 2\n2 10 4\n5 2 3\n3 2 2\n''') == 'REBEL'\nassert solution('''\n1 1 2\n2 10 4\n5 2 3\n3 2 2\n''') == 'OBEY'\nassert solution('''\n1 1 2\n2 10 4\n5 2 3\n3 2 2\n''') == 'REBEL'\n"
    },
    {
        "number": 1117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 4\n4 6\n3 5\n''') == 'YES'\nassert solution('''\n2\n3 4\n5 5\n''') == 'NO'\n"
    },
    {
        "number": 1118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 2 2 1\n''') == '2'\nassert solution('''\n8\n4 5 2 2 1 3 5 5\n''') == '4'\nassert solution('''\n1\n4\n''') == '0'\n"
    },
    {
        "number": 1119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('3 1 4') == '370000006'\n"
    },
    {
        "number": 1120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('24') == '5'\nassert solution('20') == '1'\nassert solution('18') == '2'\nassert solution('10') == '3'\nassert solution('9') == '4'\n"
    },
    {
        "number": 1121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'ABA'\nassert solution('2 2') == 'AA'\nassert solution('3 4') == 'AAAB'\n"
    },
    {
        "number": 1122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"2 3\"\nassert solution(\"4 2\") == \"2 3\"\nassert solution(\"4 3\") == \"2 3\"\nassert solution(\"4 4\") == \"2 3\"\n"
    },
    {
        "number": 1123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 1124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 1125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 1126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 1001') == '1369'\nassert solution
    },
    {
        "number": 1127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n1\n3\n3\n102\n4\n2069\n''') == '2'\nassert solution('''\n1\n2\n1\n3\n3\n102\n4\n2069\n''') == '1'\nassert solution('''\n1\n2\n1\n3\n3\n102\n4\n2069\n''') == '1'\nassert solution('''\n1\n2\n1\n3\n3\n102\n4\n2069\n''') == '2'\nassert solution('''\n1\n2\n1\n3\n3\n102\n4\n2069\n''') == '2'\n"
    },
    {
        "number": 1128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == 'No'\nassert solution('3 6') == 'Yes'\n"
    },
    {
        "number": 1129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '2'\nassert solution('1 2 3 4 5 6 7 8') == '2'\n"
    },
    {
        "number": 1130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 1\n01001\n10110''') == '5'\nassert solution('''2 5 0\n01001\n10110''') == '8'\n"
    },
    {
        "number": 1131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 3 1 6') == '2'\nassert solution('4 2 3 1 7') == '4'\nassert solution('1 2 3 2 6') == '13'\nassert solution('1 1 2 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 1132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'bus topology'\nassert solution('4 4') == 'ring topology'\nassert solution('4 3') =='star topology'\n"
    },
    {
        "number": 1133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nabb\\ncacc\\naaa\\nbbb') == '9'\nassert solution('5\\na\\na\\nbcbcb\\ncdecdecdecdecdecde\\naaaa') == '6'\n"
    },
    {
        "number": 1134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"5\\n0 1 1 2 2\") == \"0\"\nassert solution(\"5\\n0 1 1 2 2\") == \"0\"\nassert solution(\"5\\n0 1 1 2 2\") == \"0\"\nassert solution(\"5\\n0 1 1 2 2\") == \"0\"\n"
    },
    {
        "number": 1135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'volga'\nassert solution('2') == 'no'\nassert solution('4') == 'abba'\n"
    },
    {
        "number": 1136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '4'\nassert solution('4 4') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 1137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 2\nabc\nab\n''') == '2'\nassert solution('''\n9 12 4\nbbaaababb\nabbbabbaaaba\n''') == '7'\n'''\n"
    },
    {
        "number": 1138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRU\") == -1\nassert solution(\"UDUR\") == 1\nassert solution(\"RUUR\") == 2\n"
    },
    {
        "number": 1139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''\n4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''\n4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''\n4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''\n4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5\n3\n1 1\n2 2\n3 5\n''') == '36'\n"
    },
    {
        "number": 1140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 1'\nassert solution('3 1 2 3 1') == '4 1'\nassert solution('5') == '2 4'\n"
    },
    {
        "number": 1141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\nioi\n1 1 i n\n''') == 'noi'\nassert solution('''\n5 3\nwxhak\n3 3 h x\n1 5 x a\n1 3 w g\n''') == 'gaaak'\nassert solution('''\n5 3\nwxhak\n3 3 h x\n1 5 x a\n1 3 w g\n''') == 'gaaak'\nassert solution('''\n5 3\nwxhak\n3 3 h x\n1 5 x a\n1 3 w g\n''') == 'gaaak'\nassert solution('''\n5 3\nwxhak\n3 3 h x\n1 5 x a\n1 3 w g\n''') == 'gaaak'\n"
    },
    {
        "number": 1142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n2 3 6\n3 4 3\n''') == '9'\nassert solution('''\n5 42\n42 42 42\n42 43 42\n43 44 42\n44 45 42\n45 45 1\n''') == '30'\nassert solution('''\n1 10\n100 111 1\n''') == '1'\n"
    },
    {
        "number": 1143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 23 1 2\n3 13 2 3\n''') == '2'\nassert solution('''\n3 13 2 3\n''') == '3'\nassert solution('''\n1 10 1 13\n''') == '1'\n"
    },
    {
        "number": 1144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nbb?a?\n1\n\n''') == '2'\nassert solution('''9\nab??ab???\n3\n\n''') == '2'\n"
    },
    {
        "number": 1145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 1 4') == '1'\nassert solution('5\\n1 2 3 2 5') == '2'\n"
    },
    {
        "number": 1146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n2 1 4\n3 1 3 1\n1 2\n''') == 'YES'\nassert solution('''\n3 3\n1 1\n1 2\n1 1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 1147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 1\n1 3 5 7\n''') == '3'\nassert solution('''4 2 0\n5 3 1 7\n''') == '4'\nassert solution('''5 3 1\n3 3 3 3 3\n''') == '25'\n"
    },
    {
        "number": 1148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 2 3 3\n''') == '12'\nassert solution('''3\n5 5 5\n''') == '11'\nassert solution('''6\n10 10 10 1 10 10\n''') == '11'\n"
    },
    {
        "number": 1149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 2 3\n2 2 4\n''') == 'I become the guy.'\nassert solution('''4\n3 1 2 3\n2 2 4\n''') == 'Oh, my keyboard!'\n"
    },
    {
        "number": 1150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 0 0 0\\n-1 1 0 0\\n-1 1 0 0\\n1 -1 0 0\\n1 1 0 0\\n-2 1 0 0\\n-1 1 0 0\\n1 -1 0 0\\n1 1 0 0\\n-1 1 0 0\\n-1 1 0 0\\n-1 1 0 0\\n2 2 0 1\\n-1 0 0 -2\\n3 0 0 -2\\n-1 1 -2 0\\n') == '3\\n3\\n3\\n3\\n'\n"
    },
    {
        "number": 1151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '0.5'\nassert solution('10 8') == '0.875'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 1152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 1 0\n0 1 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'Yes'\nassert solution('''\n6 7\n0 0 1 1 0 0 1\n0 1 0 0 1 0 1\n0 0 0 1 0 0 1\n1 0 1 0 1 0 0\n0 1 0 0 1 0 1\n0 1 0 1 0 0 1\n1 1 0 1 0 1 1\n0 1 1 0 1 0 0\n1 1 0 1 0 0 1\n1 0 1 0 0 1 0\n0 1 1 0 1 0 0\n0 1 1 1 1 0 1\n''') == 'No'\nassert solution('''\n3 4\n0 0 1 1 0 0 1\n0 1 0 0 1 0 1\n0 0 0 1 0 0 1\n1 0 1 0 1 0 0\n0 1 0 0 1 0 1\n0 1 0 1 0 0 1\n1 1 0 1 0 1 1\n0 1 1 0 1 0 0\n1 1 0 1 0 0 1\n1 0 1 0 0 1 0\n0 1 1 0 1 0 0\n0 1 1 1 1 0 1\n''') == 'Yes'\n"
    },
    {
        "number": 1153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 6\n2 5 3 1 11 4 4\n7 8 2 4 1 8\n''') == '3'\nassert solution('''\n1 4\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n1 3\n1 1 1 1\n''') == '1'\nassert solution('''\n1 2\n1 1 1 1\n''') == '1'\nassert solution('''\n1 2\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 1154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 3') == '5'\nassert solution('5 5 5 5 5') == '10'\nassert solution('5 6 3') == '5'\nassert solution('5 5 5 5 5') == '10'\nassert solution('5 6 3') == '5'\n"
    },
    {
        "number": 1155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n1 2\n3 4\n1 3\n''') == '1.66666667'\nassert solution('''\n2 1\n99 100\n98 99\n''') == '0.98989899'\n"
    },
    {
        "number": 1156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n00001\n''') == '6 15'\nassert solution('''10\n-10 -9 -8 -7 -6 6 7 8 9 10\n0000111110\n''') == '-5 5'\n"
    },
    {
        "number": 1157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '8 7'\nassert solution('10') == '28 27'\nassert solution('5') == '9 6'\n"
    },
    {
        "number": 1158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 2 1 3\n''') == '1'\nassert solution('''10 3\n1 3 3 1 3 5 5 5 5 100\n''') == '14'\n"
    },
    {
        "number": 1159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '5'\nassert solution('8') == '13'\n"
    },
    {
        "number": 1160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 0 1 1 0\n3\nXL\nS,M\nXL,XXL\n''') == 'YES'\nassert solution('''\n1 1 2 0 1 1\n5\nS\nM\nS,M\nXXL,XXXL\nXL,XXL\n''') == 'NO'\nassert solution('''\n0 1 0 1 1 1\n3\nXL\nS,M\nXL,XXL\n''') == 'YES'\nassert solution('''\n1 1 2 0 1 1\n5\nS\nM\nS,M\nXXL,XXXL\nXL,XXL\n''') == 'NO'\nassert solution('''\n0 1 0 1 1 1\n3\nXL\nS,M\nXL,XXL\n''') == 'YES'\n"
    },
    {
        "number": 1161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''[<}){}''') == '2'\nassert solution('''{()}[]''') == '0'\nassert solution(''']]''') == 'Impossible'\n"
    },
    {
        "number": 1162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 6 3\n''') == '124780545'\nassert solution('''5 20 11\n''') == '1'\nassert solution('''10 30 10\n''') == '85932500'\n"
    },
    {
        "number": 1163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'GBGBGB'\nassert solution('4 2') == 'BGBGBB'\n"
    },
    {
        "number": 1164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nchipsy48.32televizor12.390\n''') == '12.438.32'\nassert solution('''\na1b2c3.38\n''') == '6.38'\nassert solution('''\naa0.01t0.03\n''') == '0.04'\n"
    },
    {
        "number": 1165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4\\n1 2 1 1 3 5\\n1 4 1\\n2 6 2\\n3 4 1\\n3 4 2\\n') == '6'\nassert solution('6 4\\n1 2 1 1 3 5\\n1 4 1\\n2 6 2\\n3 4 1\\n3 4 2\\n') == '-1'\n"
    },
    {
        "number": 1166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 6 5 4 2 7 1 8\n''') == 'BAAAABAB'\nassert solution('''\n15\n3 11 2 5 10 9 7 13 15 8 4 12 6 1 14\n''') == 'ABAAAABBBAABAAB'\n"
    },
    {
        "number": 1167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4\n''') == '7 1'\nassert solution('''\n7 5 4 5 2\n7 5 4 5 2\n20 53 45 26 4\n''') == '7 1'\nassert solution('''\n7 5 4 5 2\n7 5 4 5 2\n20 53 45 26 4\n''') == '7 1'\nassert solution('''\n7 5 4 5 2\n7 5 4 5 2\n20 53 45 26 4\n''') == '7 1'\nassert solution('''\n7 5 4 5 2\n7 5 4 5 2\n20 53 45 26 4\n''') == '7 1'\n"
    },
    {
        "number": 1168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 1 6 5\n''') == '8'\nassert solution('''4\n3 3 3 3\n''') == '0'\n"
    },
    {
        "number": 1169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '0 1'\nassert solution('3 1') == '1 1'\n"
    },
    {
        "number": 1170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 1171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 4\") == \"14\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"10 10\") == \"20\"\n"
    },
    {
        "number": 1172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A??C') == '8'\nassert solution('A??C') == '8'\nassert solution('A??C') == '8'\nassert solution('A??C') == '8'\nassert solution('A??C') == '8'\n"
    },
    {
        "number": 1173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 1174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 13 8\n''') == '9'\nassert solution('''3 3\n2 13 8\n''') == '9'\nassert solution('''3 3\n2 13 8\n''') == '9'\nassert solution('''3 3\n2 13 8\n''') == '9'\nassert solution('''3 3\n2 13 8\n''') == '9'\n"
    },
    {
        "number": 1175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 1176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '19'\nassert solution('4') == '19'\nassert solution('5') == '19'\nassert solution('6') == '19'\nassert solution('7') == '19'\n"
    },
    {
        "number": 1177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"5\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"3 7\") == \"10\"\nassert solution(\"3 8\") == \"10\"\n"
    },
    {
        "number": 1178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 1179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 1180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '27'\nassert solution('3 2') == '9'\n"
    },
    {
        "number": 1181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 6\n1 2 3 4 3 2''') == '3'\nassert solution('''10 5\n9 4 3 8 8''') == '6'\n"
    },
    {
        "number": 1182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1 1') == '4'\nassert solution('3 2 3 3') == '1'\nassert solution('3 2 3 2') == '4'\n"
    },
    {
        "number": 1183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '101'\nassert solution('''\n5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '2'\nassert solution('''\n5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '60'\nassert solution('''\n5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '101'\nassert solution('''\n5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '101'\n"
    },
    {
        "number": 1184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''{a, b, c}''') == '3'\nassert solution('''{b, a, b, a}''') == '2'\nassert solution('''{}''') == '0'\n"
    },
    {
        "number": 1185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1\n1 2 3 4 5''') == '9'\nassert solution('''7 1 3\n2 10 7 18 5 33 0''') == '61'\nassert solution('''5 2 1\n1 2 3 4 5''') == '9'\nassert solution('''7 1 3\n2 10 7 18 5 33 0''') == '61'\nassert solution('''5 2 1\n1 2 3 4 5''') == '9'\n"
    },
    {
        "number": 1186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'NO'\nassert solution('6') == 'YES'\nassert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 1187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n3 4\n2 4\n1 4\n''') == '1'\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '2'\n"
    },
    {
        "number": 1188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\nassert solution('6') == '3'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 1189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n''') == '5'\nassert solution('''2 2\n''') == '5'\nassert solution('''3 2\n''') == '9'\nassert solution('''11 5\n''') == '4367'\nassert solution('''37 63\n''') == '230574'\n"
    },
    {
        "number": 1190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 2 1\n''') == '12'\nassert solution('''\n2 2 1 2\n''') == '16'\nassert solution('''\n2 2 1 2\n''') == '16'\nassert solution('''\n2 2 1 2\n''') == '16'\nassert solution('''\n2 2 1 2\n''') == '16'\n"
    },
    {
        "number": 1191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"1 3 46 36\"\nassert solution(\"5 1\") == \"1 3 5 7 9\"\nassert solution(\"1 0\") == \"3\"\n"
    },
    {
        "number": 1192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '0.833333333333333'\nassert solution('3 4') == '1.458333333333334'\n"
    },
    {
        "number": 1193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n40 20 30\n''') == '30'\nassert solution('''6 4\n100 20 40 20 50 50\n''') == '40'\n"
    },
    {
        "number": 1194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 1\n0 1\n''') == '0 1'\nassert solution('''\n2\n0 1\n1 0\n''') == '1 0'\nassert solution('''\n3\n1 2 0\n2 1 0\n''') == '1 0 2'\n"
    },
    {
        "number": 1195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 1196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 1197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?01???') == '4'\nassert solution('?') == '0'\nassert solution('1') == '0'"
    },
    {
        "number": 1198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n1 2 3\n''') == '6'\nassert solution('''\n12 10\n1 1 10 10 10 10 10 10 9 10 10 10 10 10 10\n''') == '92'\nassert solution('''\n7 2\n2 3 6 4 5 7 1\n''') == '17'\nassert solution('''\n8 4\n1 3 4 5 5 3 4 1\n''') == '23'\n"
    },
    {
        "number": 1199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n1 3 2 2 1 1\n''') == '6'\nassert solution('''\n4 2\n1 2 1 1\n''') == '2'\n"
    },
    {
        "number": 1200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n-5 10 5\n''') == '1'\nassert solution('''\n6\n100 200 400 300 600 500\n''') == '0'\nassert solution('''\n4\n10 9 0 -1\n''') == '8'\n"
    },
    {
        "number": 1201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 7 4\n2 6 5\n3 7 6\n''') == '11'\nassert solution('''\n2\n5 6 1\n3 3 5\n''') == '1'\n"
    },
    {
        "number": 1202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9840 9920\\n9860 9980\\n9930 10020\\n10040 10090\") == \"1100\\n1100\"\nassert solution(\"4\\n9900 9850\\n9940 9930\\n10000 10020\\n10060 10110\") == \"1100\\n1100\"\n"
    },
    {
        "number": 1203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1.5000000000000'\nassert solution('3 5') == '2.6666666666667'\n"
    },
    {
        "number": 1204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"5 2\") == \"12\"\n"
    },
    {
        "number": 1205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\nassert solution('6') == '-1'\n"
    },
    {
        "number": 1206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5.7500000000'\nassert solution('3') == '5.7500000000'\nassert solution('3') == '5.7500000000'\nassert solution('3') == '5.7500000000'\nassert solution('3') == '5.7500000000'\n"
    },
    {
        "number": 1207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '4'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 1208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n+ 12001\n- 12001\n- 1\n- 1200\n+ 1\n+ 7\n''') == '3'\nassert solution('''\n+ 1\n- 1\n''') == '1'\nassert solution('''\n+ 1\n- 1\n''') == '1'\nassert solution('''\n+ 1\n- 1\n''') == '1'\nassert solution('''\n+ 1\n- 1\n''') == '1'\n"
    },
    {
        "number": 1209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n4.58413\\n1.22491\\n-2.10517\\n-3.70387') == '4\\n2\\n-2\\n-4'\nassert solution('5\\n-6.32509\\n3.30066\\n-0.93878\\n2.00000\\n1.96321') == '-6\\n3\\n-1\\n2\\n2'\n"
    },
    {
        "number": 1210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n420 421\n420420 420421\n''') == '4500.0'\nassert solution('''3 5\n1 4\n2 3\n11 14\n''') == '0.0'\n"
    },
    {
        "number": 1211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('19 3') == '2 4'\nassert solution('28 3') == '1 5'\n"
    },
    {
        "number": 1212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '3'\nassert solution('7 4') == '4'\nassert solution('7 5') == '5'\nassert solution('7 6') == '6'\nassert solution('7 7') == '7'\n"
    },
    {
        "number": 1213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"PRINT 1\\nLEFT\\nPRINT R\\n\"\nassert solution(\"6 4\") == \"RIGHT\\nRIGHT\\nPRINT!\\nLEFT\\nPRINT O\\nLEFT\\nPRINT G\\nLEFT\\nPRINT?\\nLEFT\\nPRINT O\\nLEFT\\nPRINT G\"\n"
    },
    {
        "number": 1214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"6\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"6\") == \"No\"\n"
    },
    {
        "number": 1215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n''') == '4'\nassert solution('''\n1\n''') == '0'\n"
    },
    {
        "number": 1216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"pobeda\"\n"
    },
    {
        "number": 1217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n1 3 5 7 9\n6 4 2 8\n''') == '3 2 1 4'\nassert solution('''\n5 5\n1 2 1 2 5\n3 1 4 1 5\n''') == '4 2 4 2 5'\n"
    },
    {
        "number": 1218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n''') == '2'\nassert solution('''\n5 5\n''') == '1'\nassert solution('''\n8 4\n''') == '-1'\n"
    },
    {
        "number": 1219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 6 7 8\n''') == '26'\nassert solution('''\n5\n4 -5 9 -2 1\n''') == '15'\n"
    },
    {
        "number": 1220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2\\n3 4\\n3 2\\n4 2\\n2 5') == '2 1'\nassert solution('5 5\\n1 2\\n3 4\\n3 2\\n4 2\\n2 5\\n1 3') == '2 1'\nassert solution('5 5\\n1 2\\n3 4\\n3 2\\n4 2\\n2 5\\n1 3\\n1 4') == '2 1'\nassert solution('5 5\\n1 2\\n3 4\\n3 2\\n4 2\\n2 5\\n1 3\\n1 4\\n1 5') == '2 1'\nassert solution('5 5\\n1 2\\n3 4\\n3 2\\n4 2\\n2 5\\n1 3\\n1 4\\n1 5\\n1 6') == '2 1'\n"
    },
    {
        "number": 1221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n20 18\n2 14''') == 252\nassert solution('''5 3\n-1 0 1 2 3\n-1 0 1''') == 2\n"
    },
    {
        "number": 1222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15') == '23'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('106') == '4 2'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 1225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 1226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\") == \"7\"\nassert solution(\"4 1 2\") == \"0\"\nassert solution(\"4 1 1\") == \"1\"\nassert solution(\"4 1 1\") == \"1\"\nassert solution(\"4 1 1\") == \"1\"\n"
    },
    {
        "number": 1227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100\\n1') == '19'\nassert solution('100\\n2') == '18'\nassert solution('100\\n3') == '17'\nassert solution('100\\n4') == '16'\nassert solution('100\\n5') == '15'\n"
    },
    {
        "number": 1228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('33') == '0 A'\nassert solution('98') == '1 B'\n"
    },
    {
        "number": 1229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5\nabcde\nabcde\nabcde\nabcde\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\nOutput\n3''') == '3'\nassert solution('''4 3\nabc\naba\nadc\nada\n10 10 10\n10 1 10\n10 10 10\n10 1 10\n\nOutput\n2''') == '2'\nassert solution('''3 3\nabc\nada\nssa\n1 1 1\n1 1 1\n1 1 1\n\nOutput\n0''') == '0'\n"
    },
    {
        "number": 1230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 3 3\n''') == '3'\nassert solution('''\n4\n1 1 1 1\n''') == '0 2 4'\nassert solution('''\n35\n21 26 18 4 28 2 15 13 16 25 6 32 11 5 31 17 9 3 24 33 14 27 29 1 20 4 12 7 10 30 34 8 19 23 22\n''') == '13 15 17 19 21'\n"
    },
    {
        "number": 1231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('3 1') == 'NO'\n"
    },
    {
        "number": 1232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n2 1\n1 2 3\n3 4 5\n''') == 'YES'\nassert solution('''\n5 2\n3 1\n1 1 1 1 1\n2 2\n''') == 'NO'\n"
    },
    {
        "number": 1233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3 2'\nassert solution('5') == '3 4'\nassert solution('5') == '3 4'\nassert solution('5') == '3 4'\nassert solution('5') == '3 4'\n"
    },
    {
        "number": 1234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1 4\n4 1 3 2 2 3\n''') == '21'\nassert solution('''\n2 1 2\n-1000000000 1000000000\n''') == '0'\nassert solution('''\n9 2 3\n5 2 5 2 4 1 1 3 2\n''') == '21'\nassert solution('''\n6 1 4\n4 1 3 2 2 3\n''') == '12'\nassert solution('''\n2 1 2\n-1000000000 1000000000\n''') == '0'\n"
    },
    {
        "number": 1235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n20\n2\n10 20\n''') == '20 20'\nassert solution('''\n3\n3 2 2\n5\n1 5 7 7 9\n''') == '3 1'\nassert solution('''\n4\n1 3 5 7\n4\n7 5 3 1\n''') == '1 1'\n"
    },
    {
        "number": 1236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Daenerys\"\nassert solution(\"3 1\") == \"Stannis\"\nassert solution(\"6 3\") == \"Stannis\"\n"
    },
    {
        "number": 1237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 7\n2 1\n3 8\n5 2\n''') == '11'\nassert solution('''\n5 10\n2 77\n3 33\n8 21\n9 12\n10 64\n''') == '79'\n'''\n"
    },
    {
        "number": 1238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10 13 12 8\n''') == '2'\nassert solution('''\n5\n7 5 6 4 8\n''') == '0'\n"
    },
    {
        "number": 1239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2 1'\nassert solution('3') == '2 2'\n"
    },
    {
        "number": 1240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('6') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 1241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 1\n1 0 0 1 1 0 1\n''') == '4'\nassert solution('''\n10 2\n1 0 0 1 0 1 0 1 0 1\n''') == '5'\n"
    },
    {
        "number": 1242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbab') == '0 1 1 0'\nassert solution('aaaaa') == '1 0 0 0 1'\n"
    },
    {
        "number": 1243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5') == '12'\nassert solution('2\\n1\\n2\\n3\\n4\\n5') == '12'\nassert solution('3\\n1\\n2\\n3\\n4\\n5') == '12'\nassert solution('4\\n1\\n2\\n3\\n4\\n5') == '12'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '12'\n"
    },
    {
        "number": 1244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == 'YES'\nassert solution('''\n3\n1 1 2\n''') == 'YES'\nassert solution('''\n4\n7 7 7 7\n''') == 'NO'\n"
    },
    {
        "number": 1245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 1\\n1 1\\n1 1') == '()()()()'\nassert solution('3\\n5 5\\n3 3\\n2 2') == '((()))'\nassert solution('3\\n2 3\\n1 4\\n1 4') == '((()))'\nassert solution('3\\n2 3\\n1 4\\n1 4') == '((()))'\nassert solution('3\\n2 3\\n1 4\\n1 4') == '((()))'\n"
    },
    {
        "number": 1246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '6'\nassert solution('5') == '6'\nassert solution('6') == '6'\nassert solution('7') == '6'\n"
    },
    {
        "number": 1247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aba\n''') == 'First'\nassert solution('''abca\n''') == 'Second'\nassert solution('''abca\n''') == 'Second'\nassert solution('''abca\n''') == 'Second'\nassert solution('''abca\n''') == 'Second'\n"
    },
    {
        "number": 1248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 5') == '4'\nassert solution('10 20 30') == '60'\nassert solution('1 1 5') == '4'\nassert solution('1 1 5') == '4'\nassert solution('1 1 5') == '4'\n"
    },
    {
        "number": 1249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 2 2\n1 2 3 3 2 1 2\n2 2\n''') == '1'\nassert solution('''\n13 4 3 3\n3 2 6 4 1 4 4 7 1 3 3 2 4\n4 3 4\n''') == '9'\nassert solution('''\n13 4 1 3\n3 2 6 4 1 4 4 7 1 3 3 2 4\n4 3 4\n''') == '-1'\n"
    },
    {
        "number": 1250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 1251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 2 1 2 1') == '3'\nassert solution('2\\n2 2') == '2'\nassert solution('1\\n5') == '1'\n"
    },
    {
        "number": 1252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 13\n1 2 5\n2 3 7\n2 4 8\n''') == '3'\nassert solution('''\n6 6 7\n1 2 2\n1 3 3\n3 6 3\n2 4 2\n4 6 2\n6 5 1\n''') == '4'\nassert solution('''\n5 5 6\n1 3 3\n3 5 3\n1 2 2\n2 4 3\n4 5 2\n''') == '3'\n"
    },
    {
        "number": 1253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('3 1') == '1'\nassert solution('3 0') == '0'\nassert solution('3 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 1254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n2 6\n3 6\n2 5\n3 5\n1 9\n3 1\n''') == '22'\nassert solution('''\n5 3\n2 6\n3 6\n2 5\n3 5\n1 11\n''') == '23'\nassert solution('''\n5 2\n1 -1\n1 -5\n2 -1\n2 -1\n1 -10\n''') == '0'\n"
    },
    {
        "number": 1255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n8 0\\n8 10\\n8 10\\n8 45') == '2'\nassert solution('3\\n0 12\\n10 11\\n22 22') == '1'\n"
    },
    {
        "number": 1256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3+2+1\") == \"1+2+3\"\nassert solution(\"1+1+3+1+3\") == \"1+1+1+3+3\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 1257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '28'\nassert solution('5 3') == '85'\n"
    },
    {
        "number": 1258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 4 2 3 5'\nassert solution('10') == '1 4 2 3 5 6 7 8 9 10'\nassert solution('100') == '1 4 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\n"
    },
    {
        "number": 1259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 6\n1 3\n3 4\n4 2\n2 6\n5 6\n5 1\n''') == '1'\nassert solution('''\n6 8\n1 3\n3 4\n4 2\n2 6\n5 6\n5 1\n1 4\n2 5\n''') == '2'\nassert solution('''\n5 4\n1 2\n1 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5 4\n1 2\n1 3\n2 4\n2 5\n''') == '2'\nassert solution('''\n5 4\n1 2\n1 3\n2 4\n2 5\n''') == '1'\n"
    },
    {
        "number": 1260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5 -2 0 1 -3\n''') == '2 3'\nassert solution('''\n5\n5 2 0 4 0\n''') == '1 1 2'\nassert solution('''\n4\n0 -10 0 0\n''') == '1 1 2'\nassert solution('''\n4\n0 0 0 0\n''') == '1 1 2'\n\nassert solution('''\n2\n-1\n''') == '2 2'\n"
    },
    {
        "number": 1261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 1 3'\nassert solution('2') == '1 2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 1262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 1\n1 2\n3 3\n23 2 23\n3 2 3\n''') == '27'\nassert solution('''\n3\n2 1\n1 2\n3 3\n23 2 23\n3 2 3\n''') == '27'\nassert solution('''\n3\n2 1\n1 2\n3 3\n23 2 23\n3 2 3\n''') == '27'\nassert solution('''\n3\n2 1\n1 2\n3 3\n23 2 23\n3 2 3\n''') == '27'\nassert solution('''\n3\n2 1\n1 2\n3 3\n23 2 23\n3 2 3\n''') == '27'\n"
    },
    {
        "number": 1263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n10 8 1\n2 7 1\n''') == '-1'\nassert solution('''5 3\n4 4 4 4 4\n2 2 2 2 2\n''') == '18'\n"
    },
    {
        "number": 1264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"000\") == \"NO\"\nassert solution(\"101\") == \"YES\"\n"
    },
    {
        "number": 1266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n4 2\nR 1 1\nB 1 5\n''') == 'YES'\nassert solution('''2\n4 2\nR 3 3\nB 1 5\n''') == 'NO'\n"
    },
    {
        "number": 1267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 3 2\n''') == '3'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n4\n42 0 0 42\n''') == '1'\n"
    },
    {
        "number": 1268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n3 6\n''') == 'YES'\nassert solution('''\n3\n6 8 9\n6 10 12\n''') == 'NO'\nassert solution('''\n5\n0 0 5 0 0\n1 1 8 10 5\n''') == 'YES'\nassert solution('''\n4\n4 1 0 3\n5 2 2 3\n''') == 'YES'\nassert solution('''\n2\n3 5\n3 6\n''') == 'NO'\n'''\n"
    },
    {
        "number": 1269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '5'\nassert solution('7 7') == '165'\nassert solution('1 2 3') == '5'\nassert solution('4 5 1 6 2 3 7') == '165'\nassert solution('1 2 3 4 5 6 7') == '165'\n"
    },
    {
        "number": 1270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2 3'\nassert solution('6') == '2 2 2'\n"
    },
    {
        "number": 1271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 10\n1 2 3 4 5\nRGBRR\n''') == '4'\nassert solution('''2 1 15\n5 6\nRG\n''') == '-1'\n"
    },
    {
        "number": 1272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"6\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"5\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"2 3\") == \"5\"\n"
    },
    {
        "number": 1273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 1274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"5\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"4 3\") == \"4\"\n"
    },
    {
        "number": 1275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '4'\nassert solution('3 1') == '4'\nassert solution('4 1') == '4'\nassert solution('5 1') == '4'\nassert solution('6 1') == '4'\n"
    },
    {
        "number": 1276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nRRGB\") == \"1\"\nassert solution(\"5\\nRRGB\") == \"1\"\nassert solution(\"6\\nRRGB\") == \"0\"\nassert solution(\"7\\nRRGB\") == \"0\"\nassert solution(\"8\\nRRGB\") == \"0\"\n"
    },
    {
        "number": 1277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 1\") == \"2\"\nassert solution(\"5 5 1\") == \"1\"\nassert solution(\"5 5 2\") == \"0\"\nassert solution(\"5 5 3\") == \"0\"\nassert solution(\"5 5 4\") == \"0\"\n"
    },
    {
        "number": 1278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2 2\n10 9 6 7 8 3 2 1 4 5\n''') == '3'\nassert solution('''\n10 2 3\n10 9 6 7 8 3 2 1 4 5\n''') == '8'\nassert solution('''\n5 5 5\n100000 10000 1000 100 10\n''') == '5'\n"
    },
    {
        "number": 1279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n9 14 6 2 11\n8 4 7 20\n''') == '3'\nassert solution('''5 1\n2 4 6 8 10\n5\n''') == '1'\nassert solution('''1 4\n10\n20 30 40 50\n''') == '0'\n"
    },
    {
        "number": 1280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"8\"\n"
    },
    {
        "number": 1281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 0\n''') == '5'\nassert solution('''6 3\n1 4 4 7 3 4\n''') == '19'\n"
    },
    {
        "number": 1282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('MFM') == '1'\nassert solution('MMFF') == '3'\nassert solution('FFMMM') == '0'\n"
    },
    {
        "number": 1283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n"
    },
    {
        "number": 1284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '17'\nassert solution('1') == '4'\n"
    },
    {
        "number": 1285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nE7\nE7\nE7\n00\n00\nE7\nE7\nE7\n''') == '1'\nassert solution('''\n4\n7\nF\nF\nF\n\n''') == '1'\n"
    },
    {
        "number": 1286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0/1'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 1287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.680000000000000'\nassert solution('4') == '0.680000000000000'\nassert solution('5') == '0.680000000000000'\nassert solution('6') == '0.680000000000000'\nassert solution('7') == '0.680000000000000'\n"
    },
    {
        "number": 1288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"6 4\") == \"3\"\n"
    },
    {
        "number": 1289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n2 3 5 7 11 13\n5\n3 4 5 5 6\n''') == '10'\nassert solution('''\n3\n10 200 300\n4\n1 2 2 3\n''') == '16'\nassert solution('''\n3\n1 2 3\n4\n1 2 2 3\n''') == '3'\n"
    },
    {
        "number": 1290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 9') == '2'\nassert solution('4 5') == '1'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 1291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n-1 0\n1 0\n0 -1\n0 1\n''') == 'NO'\nassert solution('''\n4 4\n1 0\n0 1\n-1 0\n0 -1\n1 1\n-1 1\n-1 -1\n1 -1\n''') == 'YES'\n"
    },
    {
        "number": 1292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 1\n1..\n...\n..2\n''') == '6 3'\nassert solution('''3 4 4\n1 1 1 1\n....\n"
    },
    {
        "number": 1293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('4\\n1 2 2 1') == '3'\n"
    },
    {
        "number": 1294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''a\nzzaaz\nccff\ncbddbb''') == 'a'\nassert solution('''a\nzzaaz\nccff\ncbddbb''') == ''\nassert solution('''a\nzzaaz\nccff\ncbddbb''') == 'a'\nassert solution('''a\nzzaaz\nccff\ncbddbb''') == ''\nassert solution('''a\nzzaaz\nccff\ncbddbb''') == 'a'\n"
    },
    {
        "number": 1295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '4'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 1296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 11\n2 3 5\n''') == '2 11'\nassert solution('''4 100\n1 2 5 6\n''') == '4 54'\nassert solution('''1 7\n7\n''') == '0 0'\n"
    },
    {
        "number": 1297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"GTTAAAG\") == \"1\"\nassert solution(\"AACCAACCAAAAC\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 1298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1100\n\n''') == '0'\nassert solution('''5\n01010\n\n''') == '1'\nassert solution('''8\n11101111\n\n''') == '6'\n"
    },
    {
        "number": 1299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 4'\nassert solution('6 2') == '1 3'\n"
    },
    {
        "number": 1300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 9\n9 9 9 9 9 9\n''') == '6'\nassert solution('''\n3 2\n6 2 6\n''') == '2'\n"
    },
    {
        "number": 1301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n.l.r.o.\") == \"leafeon\"\nassert solution(\"7\\n.l.r.o.\") == \"leafeon\"\nassert solution(\"7\\n.l.r.o.\") == \"leafeon\"\nassert solution(\"7\\n.l.r.o.\") == \"leafeon\"\nassert solution(\"7\\n.l.r.o.\") == \"leafeon\"\n"
    },
    {
        "number": 1302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '-1'\nassert solution('4 2') == '2 4 3 1'\n"
    },
    {
        "number": 1303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 0 4') == '3'\nassert solution('2 3') == '20'\nassert solution('0 1') == '1'\nassert solution('15 17') == '20'\nassert solution('23 26') == '20'\n"
    },
    {
        "number": 1304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nxoo x.. x..\nooo......\nooo......\n\nx.. x.. x..\n.........\n.........\n\nx.. x.. x..\n.........\n.........\n''') == 'xoo x!! x
    },
    {
        "number": 1305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n25 25 50 50\n''') == 'YES'\nassert solution('''\n2\n25 100\n''') == 'NO'\n"
    },
    {
        "number": 1306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '4'\nassert solution('5 1') == '1'\nassert solution('4 3') == '0'\n"
    },
    {
        "number": 1307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Mahmoud'\nassert solution('2') == 'Ehab'\n"
    },
    {
        "number": 1308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\nabacaba\\n1 1 1\\n1 4 2\\n2 1 3\\n2 4 3\") == \"YES\"\nassert solution(\"7 4\\nabacaba\\n1 1 1\\n1 4 2\\n2 1 3\\n2 4 3\") == \"NO\"\nassert solution(\"7 4\\nabacaba\\n1 1 1\\n1 4 2\\n2 1 3\\n2 4 3\") == \"YES\"\nassert solution(\"7 4\\nabacaba\\n1 1 1\\n1 4 2\\n2 1 3\\n2 4 3\") == \"NO\"\nassert solution(\"7 4\\nabacaba\\n1 1 1\\n1 4 2\\n2 1 3\\n2 4 3\") == \"YES\"\n"
    },
    {
        "number": 1309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('1 3 4 6 3 4 100 200') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '0'\nassert solution
    },
    {
        "number": 1310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 1 2\n''') == '3'\nassert solution('''3\n1 2 7\n''') == '7'\nassert solution('''4\n4 2 4 8\n''') == '14'\n"
    },
    {
        "number": 1311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3\n3 1\n6 1\n0 2\n''') == '3'\nassert solution('''\n4\n2 3\n3 1\n6 1\n0 2\n''') == '2'\nassert solution('''\n4\n2 3\n3 1\n6 1\n0 2\n''') == '1'\nassert solution('''\n4\n2 3\n3 1\n6 1\n0 2\n''') == '0'\nassert solution('''\n4\n2 3\n3 1\n6 1\n0 2\n''') == '0'\n"
    },
    {
        "number": 1312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 3') == '4 4 4'\nassert solution('15 4') == '3 4 4 4 4 4'\nassert solution('18 7') == '2 2 2 3 3 3 3'\n"
    },
    {
        "number": 1313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 2\") == \"Second\"\nassert solution(\"2 1 1 1\") == \"First\"\n"
    },
    {
        "number": 1314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 5\n-6 4\n7 -2\n-1 -3\n''') == '1 2'\nassert solution('''\n4\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14\n''') == '9 -12'\n'''\n"
    },
    {
        "number": 1315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n11 8\n\n''') == '9 10'\nassert solution('''\n5\n10 9 7 10 6\n\n''') == '4 4 10'\nassert solution('''\n3\n12 3 3\n\n''') == '4 4 10'\n"
    },
    {
        "number": 1316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 2\naaacaabb\n''') == '2'\nassert solution('''2 1\nab\n''') == '1'\nassert solution('''4 2\nabab\n''') == '0'\n"
    },
    {
        "number": 1317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n''') == '1'\nassert solution('''6 5\n''') == '13'\nassert solution('''1000000000 1\n''') == '1000000000000000000'\n"
    },
    {
        "number": 1318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 50\n2 100\n5 30\n3\n4 6 9\n''') == '2 130'\nassert solution('''\n3\n10 50\n2 100\n5 30\n3\n4 6 9\n''') == '2 130'\nassert solution('''\n3\n10 50\n2 100\n5 30\n3\n4 6 9\n''') == '2 130'\nassert solution('''\n3\n10 50\n2 100\n5 30\n3\n4 6 9\n''') == '2 130'\nassert solution('''\n3\n10 50\n2 100\n5 30\n3\n4 6 9\n''') == '2 130'\n"
    },
    {
        "number": 1319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '36'\nassert solution('3') == '1728'\n"
    },
    {
        "number": 1320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n.CC\nC..\nC.C\n''') == '4'\nassert solution('''4\nCC..\nC..C\n.CC.\n.CC.\n''') == '9'\n"
    },
    {
        "number": 1321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '75 110 60'\nassert solution('3') == '6 4 6'\nassert solution('3') == '6 4 6'\nassert solution('3') == '6 4 6'\nassert solution('3') == '6 4 6'\n"
    },
    {
        "number": 1322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '19'\nassert solution('3') == '19'\nassert solution('4') == '19'\nassert solution('5') == '19'\nassert solution('6') == '19'\n"
    },
    {
        "number": 1323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 6\n3 100''') == '11'\nassert solution('''2 3\n10 10\n1 1 1''') == '6'\n"
    },
    {
        "number": 1324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"13\"\nassert solution(\"1 5 3 2\") == \"13\"\n"
    },
    {
        "number": 1325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 3\naeabcaez\n''') == '6'\nassert solution('''\n8 3\nabcdefghijklmnopqrstuvwxyz\n''') == '0'\nassert solution('''\n8 3\nabcdefghijklmnopqrstuvwxyz\n''') == '0'\nassert solution('''\n8 3\nabcdefghijklmnopqrstuvwxyz\n''') == '0'\nassert solution('''\n8 3\nabcdefghijklmnopqrstuvwxyz\n''') == '0'\n"
    },
    {
        "number": 1326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '23'\nassert solution('5') == '28'\nassert solution('6') == '33'\nassert solution('7') == '42'\nassert solution('8') == '56'\n"
    },
    {
        "number": 1327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9\n''') == '56'\nassert solution('''5 4\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9\n''') == '13'\n"
    },
    {
        "number": 1328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"3\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"3 1 1\") == \"3\"\n"
    },
    {
        "number": 1329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 1330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n0 1 2 2 0\\n1 2 2 3 2\\n5\\n3\\n2\\n4\\n5\\n1\") == \"3\"\nassert solution(\"5 3\\n0 1 2 2 1\\n1 3 2 3 2\\n4\\n2\\n3\\n5\\n1\") == \"1\"\nassert solution(\"5 5\\n0 1 2 4 5\\n1 2 3 4 5\\n4\\n2\\n3\\n5\\n1\") == \"1\"\n"
    },
    {
        "number": 1331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n3 5 1\n''') == '1'\nassert solution('''5 10 3\n12 8 18 25 1\n''') == '0'\nassert solution('''7 7 2\n7 3 4 1 6 5 2\n''') == '6'\nassert solution('''2 2 2\n1 3\n''') == '0'\n"
    },
    {
        "number": 1332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4 0 4\") == \"3\"\nassert solution(\"4 5 9 2 1\") == \"-1\"\n"
    },
    {
        "number": 1333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"###\\n###\\n###\"\nassert solution(\"3 4\") == \"####\\n####\\n####\"\nassert solution(\"5 3\") == \"###\\n###\\n###\\n###\\n###\"\nassert solution(\"9 9\") == \"#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\"\n"
    },
    {
        "number": 1334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nabc\n''') == 'aca'\nassert solution('''3 2\nabc\n''') == 'ac'\nassert solution('''3 3\nayy\n''') == 'yaa'\nassert solution('''2 3\nba\n''') == 'baa'\n"
    },
    {
        "number": 1335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n49 100\n''') == '1'\nassert solution('''4 2\n32 100 33 1\n''') == '2'\nassert solution('''14 5\n48 19 6 9 50 20 3 42 38 43 36 21 44 6\n''') == '5'\n"
    },
    {
        "number": 1336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n4 1\n4 2\n4 2\n2 1\n5 4\n6 4\n3 2\n''') == '6'\nassert solution('''\n7\n4 1\n4 2\n4 2\n2 1\n5 4\n6 4\n3 2\n''') == '6'\nassert solution('''\n7\n4 1\n4 2\n4 2\n2 1\n5 4\n6 4\n3 2\n''') == '6'\nassert solution('''\n7\n4 1\n4 2\n4 2\n2 1\n5 4\n6 4\n3 2\n''') == '6'\nassert solution('''\n7\n4 1\n4 2\n4 2\n2 1\n5 4\n6 4\n3 2\n''') == '6'\n"
    },
    {
        "number": 1337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '1'\nassert solution('5') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 1338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('3 2') == '1 3 2'\n"
    },
    {
        "number": 1339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('6') == '3'\nassert solution('1 5') == '1'\nassert solution('2 3') == '1'\nassert solution('1 10') == '1'\n"
    },
    {
        "number": 1340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\n3 4 2 3 4 2 2\n''') == '3'\nassert solution('''5\n20 1 14 10 2\n''') == '0'\nassert solution('''13\n5 5 4 4 3 5 7 6 5 4 4 6 5\n''') == '21'\n"
    },
    {
        "number": 1341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RRRBGBRBBB\") == \"3\"\nassert solution(\"BRRBGBRGRBGRGRRGGBGBGBRGBRGRGGGRBRRRBRBBBGRRRGGBBB\") == \"15\"\nassert solution(\"BBRBGGRGRGBBBRBGRBRBBBBRRRBGBBGBBRRBBGGRBRRBRGRB\") == \"17\"\nassert solution(\"RRRBGBRBBB\") == \"2\"\n"
    },
    {
        "number": 1342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('2') == '4'\n"
    },
    {
        "number": 1343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '3'\nassert solution('''\n5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '-1'\nassert solution('''\n5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '-1'\nassert solution('''\n5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '3'\nassert solution('''\n5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '3'\n"
    },
    {
        "number": 1344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 7 2 11 15\n''') == '3'\nassert solution('''\n6\n100 100 100 100 100 100\n''') == '1'\nassert solution('''\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 1345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3 5\n''') == '+++-', 'First example'\nassert solution('''\n3\n3 3 5\n''') == '++-', 'Second example'\nassert solution('''\n2\n1 2\n''') == '+-', 'Third example'\nassert solution('''\n1\n1\n''') == '+-', 'Fourth example'\nassert solution('''\n5\n1 2 3 4 5\n''') == '+-+++-', 'Fifth example'\n"
    },
    {
        "number": 1346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 2\n1 1 2\n2 1\n''') == '1'\nassert solution('''\n2 2 999999937\n2 1\n3 1\n''') == '2'\n"
    },
    {
        "number": 1347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nAbRb r Zz\n4\nxR abRb\naA xr\nzz Z\nxr y\n''') == '2 6'\nassert solution('''\n2\nRuruRu fedya\n1\nruruRU fedor\n''') == '1 10'\n"
    },
    {
        "number": 1348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '3'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 1349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 1\n3\n3 3\n1 2 3\n4 1\n1\n''') == '3'\nassert solution('''3\n5 1\n3\n3 3\n1 2 3\n4 1\n1\n''') == '1'\nassert solution('''3\n5 1\n3\n3 3\n1 2 3\n4 1\n1\n''') == '4'\nassert solution('''3\n5 1\n3\n3 3\n1 2 3\n4 1\n1\n''') == '4'\nassert solution('''3\n5 1\n3\n3 3\n1 2 3\n4 1\n1\n''') == '4'\n"
    },
    {
        "number": 1350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9 3\nACAABCCAB\n''') == '6'\nassert solution('''9 4\nABCABCABC\n''') == '0'\n"
    },
    {
        "number": 1351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"121 130\") == \"123\"\nassert solution(\"98766 100000\") == \"-1\"\n"
    },
    {
        "number": 1352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 3 1\n''') == '4'\nassert solution('''7 4\n1 3 1 2 2 4 3\n''') == '6'\n"
    },
    {
        "number": 1353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 1 2') == '6'\nassert solution('5 2 2 3') == '8'\n"
    },
    {
        "number": 1354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 3 3') == '3'\nassert solution('5 1 3') == '1'\nassert solution('5 1 3') == '-1'\n"
    },
    {
        "number": 1355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1.41421356237309514547'\nassert solution('4 3') == '1.00000000000000000000'\nassert solution('4 3') == '0.00000000000000000000'\n"
    },
    {
        "number": 1356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xaxxxxa\") == \"3\"\nassert solution(\"aaabaa\") == \"6\"\n"
    },
    {
        "number": 1357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('4 3') == '2'\nassert solution('4 3') == '2'\nassert solution('4 3') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 1358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\nabb 2\naaa -3\nbba -1\nzyz -4\nabb 5\naaa 7\nxyx 4\n''') == '12'\nassert solution('''\n3 1\na 1\na 2\na 3\n''') == '6'\nassert solution('''\n2 5\nabcde 10000\nabcde 10000\n''') == '0'\n'''\n"
    },
    {
        "number": 1359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\nassert solution('''\n4 12\n1 2\n1 3\n1 4\n2 1\n2 3\n2 4\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n''') == '12'\n"
    },
    {
        "number": 1360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('3') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 1361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('5') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 1362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6 7\n2 13\n4 20\n7 9\n''') == '3'\nassert solution('''\n5 4 100\n10 70\n15 76\n21 12\n30 100\n67 85\n''') == '26'\nassert solution('''\n5 4 100\n10 70\n15 76\n21 12\n30 100\n67 85\n''') == '26'\nassert solution('''\n5 4 100\n10 70\n15 76\n21 12\n30 100\n67 85\n''') == '26'\nassert solution('''\n5 4 100\n10 70\n15 76\n21 12\n30 100\n67 85\n''') == '26'\n"
    },
    {
        "number": 1363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u044c"
    },
    {
        "number": 1364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n2 2 2 1 1 2 2\n''') == '4'\nassert solution('''\n6\n1 2 1 2 1 2\n''') == '2'\nassert solution('''\n9\n2 2 1 1 1 2 2 2 2\n''') == '6'\n"
    },
    {
        "number": 1365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 0\n1 2\n''') == '1'\nassert solution('''2 1\n1 2\n''') == '3'\nassert solution('''4 1\n1 2\n2 3\n3 4\n''') == '9'\nassert solution('''7 2\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n''') == '91'\n"
    },
    {
        "number": 1366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == '4'\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == '0'\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == '0'\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == '0'\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n''') == '0'\n"
    },
    {
        "number": 1367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n3 8 10 1 7 9 6 5 2') == '4'\nassert solution('100\\n
    },
    {
        "number": 1368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\") == \"4.5\"\nassert solution(\"5 2 2\") == \"1\"\n"
    },
    {
        "number": 1369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n1 0') == '0.500000000000000000'\nassert solution('2\\n1 0\\n0 1') == '0.500000000000000000'\nassert solution('2\\n0 0\\n1 0\\n0 1') == '0.500000000000000000'\nassert solution('2\\n1 0\\n0 1\\n0 1') == '0.500000000000000000'\nassert solution('2\\n1 0\\n0 1\\n0 1') == '0.500000000000000000'\n"
    },
    {
        "number": 1370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"3\"\nassert solution(\"1 1 1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 1371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 1372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9 3\") == \"4\"\nassert solution(\"8 3\") == \"3\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 10\") == \"0\"\n"
    },
    {
        "number": 1373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"4 4\") == \"8\"\n"
    },
    {
        "number": 1374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '30'\nassert solution('4') == '30'\nassert solution('5') == '30'\nassert solution('6') == '30'\nassert solution('7') == '30'\n"
    },
    {
        "number": 1375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 0 3\n''') == '2'\nassert solution('''\n4\n0 1 -1 0\n''') == '1'\nassert solution('''\n2\n4 1\n''') == '0'\n"
    },
    {
        "number": 1376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 2 2 3 3\n''') == '9'\nassert solution('''2\n2 1 1 2\n''') == '5'\nassert solution('''4\n4 1 3 2 2 3 1 4\n''') == '17'\n"
    },
    {
        "number": 1377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 4 2\n''') == 'YES'\nassert solution('''\n3\n3 1 2\n''') == 'NO'\n"
    },
    {
        "number": 1378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 1 2\\n') == '0 2 1'\nassert solution('4\\n0 1 2 3\\n') == '0 2 1 3'\nassert solution('5\\n0 1 2 3 4\\n') == '0 2 1 3 4'\nassert solution('6\\n0 1 2 3 4 5\\n') == '0 2 1 3 4 5'\nassert solution('7\\n0 1 2 3 4 5 6\\n') == '0 2 1 3 4 5 6'\n"
    },
    {
        "number": 1379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 3\n3 5 1 2\n''') == '3 1 1 2'\nassert solution('''10 10 1\n10 5 7 4 6 3 2 1 9 8\n''') == '2 1 1 2 2 1 2 1 1 2'\n"
    },
    {
        "number": 1380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '2'\nassert solution('4 1') == '0'\nassert solution('4 1') == '0'\nassert solution('4 1') == '0'\nassert solution('4 1') == '0'\n"
    },
    {
        "number": 1381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2 3\n''') == '4'\nassert solution('''5 3 100 1\n''') == '5'\n"
    },
    {
        "number": 1382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1 2\"\nassert solution(\"3 3\") == \"0 1\"\nassert solution(\"3 0\") == \"3 1\"\n"
    },
    {
        "number": 1383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 0 2 1\n2 0 1 1\n''') == '1'\nassert solution('''\n3 2\n0 0 0\n1 1 1\n''') == '1'\nassert solution('''\n5 10\n0 0 0 1 2\n2 1 0 0 0\n''') == '0'\n"
    },
    {
        "number": 1384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('6') == '4'\nassert solution('10') == '9'\nassert solution('100') == '99'\n"
    },
    {
        "number": 1385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUn.exe O\") == \"<RUn.exe O>\"\nassert solution(\"RUn.exe O\") == \"<RUn.exe O>\"\nassert solution(\"RUn.exe O\") == \"<RUn.exe O>\"\nassert solution(\"RUn.exe O\") == \"<RUn.exe O>\"\nassert solution(\"RUn.exe O\") == \"<RUn.exe O>\"\n"
    },
    {
        "number": 1386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '16'\nassert solution('2 4') == '64'\n"
    },
    {
        "number": 1387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 4\\n1 2 1 2 1 2 1') == 'YES'\nassert solution('8 5\\n1 2 1 2 1 1 1') == 'NO'\n"
    },
    {
        "number": 1388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 1389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 8\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 6\") == \"3\"\n"
    },
    {
        "number": 1390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6') == '5'\nassert solution('10 12 10 7 5 22') == '5'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '0'\nassert solution('1 2 3 4 5 6 7') == '0'\n"
    },
    {
        "number": 1391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 10\") == \"2 3\"\nassert solution(\"4 5 2\") == \"3 8\"\n"
    },
    {
        "number": 1392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 6\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n''') == '10'\nassert solution('''\n2 1\n1\n10\n''') == '1'\n"
    },
    {
        "number": 1393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AbC') == '3 0'\nassert solution('DCbA') == '0 3'\n"
    },
    {
        "number": 1394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aaaaa''') == 'aaaaa'\nassert solution('''aacaababc''') == 'ababacac'\nassert solution('''baba''') == ':(\n\nassert solution('''ababacacbbcc''') == 'ababacac'\n"
    },
    {
        "number": 1395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('521') == '2'\nassert solution('1001') == '1'\nassert solution('5678901234567890123456789') == '123'\n"
    },
    {
        "number": 1396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 2') == '6'\nassert solution('1 1 2 2 1 1') == '6'\nassert solution('1 1 1') == '1'\nassert solution('1') == '0'\nassert solution
    },
    {
        "number": 1397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n1 3\n''') == '3'\nassert solution('''\n4 1\n1 3\n''') == '1'\nassert solution('''\n4 1\n1 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n''') == '3'\n"
    },
    {
        "number": 1398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '0'\nassert solution('4 5 3 8 3 7') == '2'\nassert solution('4 5 3 8 3 7 8') == '1'\nassert solution('4 5 3 8 3 7 8 9') == '0'\n"
    },
    {
        "number": 1399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n-1 2 1 2\n-1 0 1 0\n-1 0 0 3\n0 3 1 0\n''') == '42'\nassert solution('''\n4\n-1 2 1 2\n-1 0 1 0\n-1 0 0 3\n0 3 1 0\n''') == '7'\nassert solution('''\n5\n-1 5 4 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1\n''') == '42'\nassert solution('''\n5\n-1 5 4 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1\n''') == '7'\n'''\n"
    },
    {
        "number": 1400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n2 2 2\n''') == '750000007'\nassert solution('''\n3 5\n2 1 2\n''') == '125000003'\n"
    },
    {
        "number": 1401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9\\n88 22 83 14 95 91 98 53 11\\n3 24\\n7 -8\\n1 67\\n1 64\\n9 65\\n5 12\\n6 -80\\n3 8') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10"
    },
    {
        "number": 1402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 1403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 1\n101 53 42 102 101 55 54\n''') == '3'\nassert solution('''6 5\n20 15 10 15 20 25\n''') == '1'\nassert solution('''7 1000000\n1 1 1 1 1 1 1\n''') == '7'\n"
    },
    {
        "number": 1404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 -1 2\n''') == '1'\nassert solution('''\n2\n-1 -1\n''') == '200'\n"
    },
    {
        "number": 1405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 -1') == '3'\nassert solution('5\\n28 35 7 14 21') == '4'\n"
    },
    {
        "number": 1406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 2') == '1 1 2'\nassert solution('3 2 1') == '-1'\n"
    },
    {
        "number": 1407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 3\n5 6 1\n4 4 1\n''') == '1'\nassert solution('''\n2 2\n1 3\n4 2\n''') == '0'\nassert solution('''\n2 2\n1 3\n4 2\n''') == '0'\nassert solution('''\n3 3\n1 2 3\n5 6 1\n4 4 1\n''') == '1'\nassert solution('''\n3 3\n1 2 3\n5 6 1\n4 4 1\n''') == '1'\n"
    },
    {
        "number": 1408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 12\n1 3\n2 15\n2 5\n2 1\n''') == '5'\nassert solution('''\n3\n1 10\n2 1\n2 4\n''') == '3'\n'''\n"
    },
    {
        "number": 1409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n0 4 5 1 0\n''') == '1'\nassert solution('''6 4\n0 1 2 3 4 5\n''') == '0'\nassert solution('''6 5\n0 0 0 0 0 0\n''') == '2'\n"
    },
    {
        "number": 1410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"9\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 1411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 12\n3 5 7\n4 6 7\n5 9 5\n''') == '84'\nassert solution('''\n6 10\n7 4 7\n5 8 8\n12 5 8\n6 11 6\n3 3 7\n5 9 6\n''') == '314'\n"
    },
    {
        "number": 1412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 100\n40 70\n120 130\n125 180\n''') == '31'\nassert solution('''\n3 2\n1 12\n15 20\n25 30\n''') == '0'\nassert solution('''\n5 2\n1 10\n5 15\n14 50\n30 70\n99 100\n''') == '21'\n"
    },
    {
        "number": 1413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '6'\nassert solution('1234') == '6'\nassert solution('2244') == '10'\n"
    },
    {
        "number": 1414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\nDI\n''') == 'Poor Dima!'\nassert solution('''2 2\nMA\nID\n''') == 'Poor Inna!'\nassert solution('''5 5\nDIMAD\nDIMAI\nDIMAM\nDDMAA\nAAMID\n''') == '4'\n"
    },
    {
        "number": 1415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 2\") == \"1 1 0 1 1 1 1 0 6\"\nassert solution(\"2 2 2 2\") == \"1 1 1 1\"\n"
    },
    {
        "number": 1416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '3'\nassert solution('3 18') == '18'\nassert solution('1 5') == '4.5'\n"
    },
    {
        "number": 1417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '8'\nassert solution('''\n10\n''') == '19210869'\n"
    },
    {
        "number": 1418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1 2 1'\nassert solution('3') == '2 1'\n"
    },
    {
        "number": 1419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\ngarage for sa-le\n\n''') == '7'\nassert solution('''\n4\nEdu-ca-tion-al Ro-unds are so fun\n\n''') == '10'\n'''\n"
    },
    {
        "number": 1420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 15') == '2.5000000000'\nassert solution('2 5') == '2.0000000000'\n"
    },
    {
        "number": 1421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '25'\nassert solution('4') == '2'\nassert solution('1') == 'Impossible'\n"
    },
    {
        "number": 1422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0000000101\") == \"YES\"\nassert solution(\"1000000000\") == \"NO\"\nassert solution(\"1111111111\") == \"YES\"\nassert solution(\"1111111111\") == \"NO\"\nassert solution(\"1111111111\") == \"YES\"\n"
    },
    {
        "number": 1423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 5') == '3 1 5 4 2'\nassert solution('4 2 9') == '2 2 2 9'\nassert solution('6 1 5') == '-1'\n"
    },
    {
        "number": 1424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 1') == '0'\nassert solution('3 3 3') == '3'\nassert solution('3 3 3') == '3'\nassert solution('3 3 3') == '3'\nassert solution('3 3 3') == '3'\n"
    },
    {
        "number": 1425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 4 3\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 4\n''') == 'YES'\nassert solution('''\n3\n13 8 5\n''') == 'NO'\nassert solution('''\n4\n1 10 100 1000\n''') == 'YES'\n"
    },
    {
        "number": 1426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\") == \"2\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\") == \"2\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\") == \"2\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\") == \"2\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\") == \"2\"\n"
    },
    {
        "number": 1427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 4') == '13'\nassert solution('4\\n1 2 3 4') == '10'\nassert solution('5\\n1 2 3 4 5') == '10'\nassert solution('6\\n1 2 3 4 5 6') == '10'\nassert solution('7\\n1 2 3 4 5 6 7') == '10'\n"
    },
    {
        "number": 1428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 1429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 AGCT\") == \"2\"\nassert solution(\"4 ACGT\") == \"1\"\nassert solution(\"4 ACGT\") == \"1\"\nassert solution(\"4 ACGT\") == \"1\"\nassert solution(\"4 ACGT\") == \"1\"\n"
    },
    {
        "number": 1430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n00010\") == \"4\"\nassert solution(\"5 1\\n01010\") == \"3\"\nassert solution(\"5 1\\n01011\") == \"2\"\nassert solution(\"5 1\\n01100\") == \"1\"\nassert solution(\"5 1\\n01101\") == \"0\"\n"
    },
    {
        "number": 1431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 0\\n\") == \"1\"\nassert solution(\"3\\n1 0 0\\n\") == \"1\"\nassert solution(\"3\\n1 0 0\\n\") == \"1\"\nassert solution(\"3\\n1 0 0\\n\") == \"1\"\nassert solution(\"3\\n1 0 0\\n\") == \"1\"\n"
    },
    {
        "number": 1432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4 0 4\"\nassert solution(\"2\") == \"4 0 4\"\nassert solution(\"1\") == \"4 0 4\"\nassert solution(\"10\") == \"4 0 4 4 0 4 4 0 4\"\nassert solution(\"100\") == \"4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4 4 0 4"
    },
    {
        "number": 1433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\n0 1 0 0\n1 0 1 0\n''') == '9'\nassert solution('''4 4\n0 0 0 0\n1 0 1 0\n0 1 1 0\n0 1 0 0\n''') == '20'\n"
    },
    {
        "number": 1434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 1435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('369727') == '2'\nassert solution('123456789987654321') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 1436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '1'\nassert solution('11') == '8'\n"
    },
    {
        "number": 1437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('z') == '3'\nassert solution('V_V') == '9'\nassert solution('Codeforces') == '130653412'\n"
    },
    {
        "number": 1438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n2 1 4\n11 3 16''') == '4'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20''') == '3'\n"
    },
    {
        "number": 1439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n1 2 3\n''') == 'YES'\nassert solution('''1 6\n5\n''') == 'NO'\nassert solution('''4 6\n3 1 1 3\n''') == 'YES'\nassert solution('''6 6\n5 5 5 5 5 5\n''') == 'YES'\n"
    },
    {
        "number": 1440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 2 2 2\n''') == '3'\nassert solution('''\n3\n1 1 1\n''') == '0'\nassert solution('''\n3\n3 3 3\n''') == '3'\n"
    },
    {
        "number": 1441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '120'\nassert solution('8') == '16800'\n"
    },
    {
        "number": 1442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\n"
    },
    {
        "number": 1443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10\nG\n''') == '30'\n\nassert solution('''\n2\n10 10\nWL\n''') == '40'\n\nassert solution('''\n3\n10 10 10\nGLW\n''') == '80'\n\nassert solution('''\n4\n10 10 10 10\nGLW\n''') == '120'\n\nassert solution('''\n5\n10 10 10 10 10\nGLW\n''') == '150'"
    },
    {
        "number": 1444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 100 101\\n2\\n') == '2 3'\nassert solution('3\\n1 100 101\\n2\\n') == '2 3'\nassert solution('3\\n1 100 101\\n2\\n') == '2 3'\nassert solution('3\\n1 100 101\\n2\\n') == '2 3'\nassert solution('3\\n1 100 101\\n2\\n') == '2 3'\n"
    },
    {
        "number": 1445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '2 3 9 6 7 1 4'\nassert solution('8') == '2 1 6 2 5 4 9 6'\n"
    },
    {
        "number": 1446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == 'Yes'\nassert solution('3 1 2') == '0 1'\nassert solution('3 2 2') == 'Yes'\nassert solution('3 2 2') == '0 1'\nassert solution('3 0 2') == 'No'\n"
    },
    {
        "number": 1447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0.6666666666666666'\nassert solution('4 4') == '0.4000000000000000'\nassert solution('1 2') == '1.0000000000000000'\n"
    },
    {
        "number": 1448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''\n8 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''\n7 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''\n7 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''\n7 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\n"
    },
    {
        "number": 1449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '2'\nassert solution('''\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '1'\nassert solution('''\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '-1'\nassert solution('''\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '1'\nassert solution('''\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '2'\n"
    },
    {
        "number": 1450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"010210\") == \"100210\"\nassert solution(\"010210\") == \"001210\"\nassert solution(\"010210\") == \"010120\"\nassert solution(\"010210\") == \"010201\"\nassert solution(\"20\") == \"20\"\n"
    },
    {
        "number": 1451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2 4\n''') == '3'\nassert solution('''3 2\n447 44 77\n''') == '2'\n"
    },
    {
        "number": 1452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n0 3 1\n0 2 3 0\n\n''') == '2'\nassert solution('''\n1 1\n0\n1\n\n''') == '0'\nassert solution('''\n19 16\n16 16 16 16 15 15 0 5 0 4 9 9 1 4 4 0 8 16 12\n6 12 19 15 8 6 19 19 14 6 9 16 10 11 15 4\n\n''') == '797922655'\n"
    },
    {
        "number": 1453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 2\n6 19 3 4 4 2 6 7 8\n''') == '2 5 11 18 30 43 62 83 121'\nassert solution('''\n1 1\n7\n''') == '7'\n"
    },
    {
        "number": 1454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 3 5 6 7\n3 0 7 0 9\n5 0 0 0 10\n8 9 10 11 12\n''') == '144'\nassert solution('''\n3 3\n1 2 3\n2 3 4\n4 5 6\n''') == '30'\nassert solution('''\n3 3\n1 2 3\n3 4 5\n6 7 8\n''') == '-1'\n"
    },
    {
        "number": 1455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n\n''') == '2'\n\nassert solution('''\n4\n\n''') == '3'\n\nassert solution('''\n5\n\n''') == '4'\n\nassert solution('''\n6\n\n''') == '5'\n\nassert solution('''\n7\n\n''') == '6'"
    },
    {
        "number": 1456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\noxxxx\nx...x\nx...x\nx...x\nxxxxo\n\n''') == 'YES'\nassert solution('''6\n.x.x..\nx.x.x.\n.xo..x\nx..ox.\n.x.x.x\n..x.x.\n\n''') == 'YES'\nassert solution('''3\no.x\noxx\no.x\n\n''') == 'NO'\n"
    },
    {
        "number": 1457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''intellect\ntell''') == '1'\nassert solution('''google\napple''') == '0'\nassert solution('''sirisiri\nsir''') == '2'\n"
    },
    {
        "number": 1458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabacaba\n''') == \"NO\"\nassert solution('''\naabcfg\n''') == \"YES\"\nassert solution('''\nabacaba\n''') == \"NO\"\nassert solution('''\nabacaba\n''') == \"NO\"\nassert solution('''\nabacaba\n''') == \"NO\"\n"
    },
    {
        "number": 1459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 4 9\\n1 3\\n') == '5'\nassert solution('4\\n5 8 2 100\\n4 1\\n') == '15'\nassert solution('3\\n1 1 1\\n3 1\\n') == '1'\nassert solution('3\\n31 41 59\\n1 1\\n') == '0'\n"
    },
    {
        "number": 1460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n''') == '12'\n\nassert solution('''\n5\n''') == '13'\n\nassert solution('''\n6\n''') == '14'\n\nassert solution('''\n7\n''') == '15'\n\nassert solution('''\n8\n''') == '16'"
    },
    {
        "number": 1461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '10 1'\nassert solution('4 4') == '0 0'\nassert solution('5 3') == '7 1'\n"
    },
    {
        "number": 1462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n15 10\nDZFDFZDFDDDDDDF\n''') == '82'\nassert solution('''\n6 4\nYJSNPI\n''') == '4'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 1463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 1464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nthreehorses\\ngoodsubstrings\\nprimematrix\\nbeautifulyear') == 'j'\nassert solution('4\\naa\\nbdefghijklmn\\nc') == 'ab'\n"
    },
    {
        "number": 1465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1 1\"\nassert solution(\"2 1\") == \"1 1\"\nassert solution(\"4 2\") == \"2 1 3\"\nassert solution(\"4 2\") == \"2 1 3\"\nassert solution(\"4 2\") == \"2 1 3\"\n"
    },
    {
        "number": 1466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n1 2 1\n3 2 1\n1 3 3\n''') == '2'\nassert solution('''\n4 5 2\n4 1 8\n2 4 1\n2 1 3\n3 4 9\n3 1 5\n''') == '2'\n"
    },
    {
        "number": 1467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 5 7 2\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '-1'\nassert solution('''\n3\n3 1 10\n''') == '3'\n"
    },
    {
        "number": 1468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"b\"\nassert solution(\"3\") == \"b\"\nassert solution(\"3\") == \"b\"\nassert solution(\"3\") == \"b\"\nassert solution(\"3\") == \"b\"\n"
    },
    {
        "number": 1469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"8 10\"\nassert solution(\"5\") == \"5 6 1\"\nassert solution(\"6\") == \"6 7 1\"\nassert solution(\"7\") == \"7 8 1\"\n"
    },
    {
        "number": 1470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0\\n0\\n1'\nassert solution('2') == '0\\n1'\n"
    },
    {
        "number": 1472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 4\") == \"5\\n4\\n1\\n0\\n\"\nassert solution(\"5 2 3\") == \"5\\n4\\n1\\n0\\n\"\nassert solution(\"5 2 4\") == \"5\\n4\\n1\\n0\\n\"\nassert solution(\"5 2 4\") == \"5\\n4\\n1\\n0\\n\"\nassert solution(\"5 2 4\") == \"5\\n4\\n1\\n0\\n\"\n"
    },
    {
        "number": 1473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n92 31\n0 7\n31 0\n7 141\n''') == '92 7 31 141'\nassert solution('''\n5\n92 31\n0 7\n31 0\n7 141\n0 0\n''') == '92 7 31 141 0 0'\nassert solution('''\n6\n92 31\n0 7\n31 0\n7 141\n0 0\n0 0\n''') == '92 7 31 141 0 0 0'\nassert solution('''\n7\n92 31\n0 7\n31 0\n7 141\n0 0\n0 0\n0 0\n''') == '92 7 31 141 0 0 0 0'\nassert solution('''\n8\n92 31\n0 7\n31 0\n7 141\n0 0\n0 0\n0 0\n0 0\n''') == '92 7 31 141 0 0 0 0 0'\n"
    },
    {
        "number": 1474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 2\n''') == '13'\nassert solution('''\n2 1\n''') == '0'\nassert solution('''\n3 4 2\n''') == '13'\nassert solution('''\n3 4 2\n''') == '13'\nassert solution('''\n3 4 2\n''') == '13'\n"
    },
    {
        "number": 1475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 1 5 10') == '3'\nassert solution('3 2 1 2') == '6'\nassert solution('3 2 1 2') == '0'\nassert solution('3 2 1 2') == '6'\nassert solution('3 2 1 2') == '6'\n"
    },
    {
        "number": 1476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6'\nassert solution('3') == '1 3'\n"
    },
    {
        "number": 1477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 1478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nhello,2,ok,0,bye,0,test,0,one,1,two,2,a,0,b,0\n''') == '3'\nassert solution('''\na,5,A,0,a,0,A,0,a,0,A,0\n''') == '2'\nassert solution('''\nA,3,B,2,C,0,D,1,E,0,F,1,G,0,H,1,I,1,J,0,K,1,L,0,M,2,N,0,O,1,P,0\n''') == '4'\n\n'''"
    },
    {
        "number": 1479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3 4\n...\nR.L\nR.U\n\n\"\"\") == \"0 2 2\"\nassert solution(\"\"\"\n2 2 2\n..\nUU\n\n\"\"\") == \"0 0\"\nassert solution(\"\"\"\n3 4 8\n....\nRRLL\nUUUU\n\n\"\"\") == \"1 3 3 1\"\nassert solution(\"\"\"\n2 2 2\n..\nUU\n\n\"\"\") == \"0 0\"\n"
    },
    {
        "number": 1480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5') == '4 2 5 6 1'\nassert solution('3 2') == '3 2'\n"
    },
    {
        "number": 1481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nxxo\nxox\noxx\n''') == 'YES'\nassert solution('''\n4\nxxxo\nxoxo\noxox\nxxxx\n''') == 'NO'\nassert solution('''\n5\nxxxo\nxoxo\noxox\nxxxx\nxxxx\n''') == 'NO'\nassert solution('''\n6\nxxxo\nxoxo\noxox\nxxxx\nxxxx\nxxxx\n''') == 'NO'\nassert solution('''\n7\nxxxo\nxoxo\noxox\nxxxx\nxxxx\nxxxx\nxxxx\n''') == 'NO'\n"
    },
    {
        "number": 1482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2 4 1'\nassert solution('3 1') == '3 2 1'\nassert solution('4 1') == '4 2 1'\nassert solution('5 1') == '5 2 1'\nassert solution('6 1') == '6 2 1'\n"
    },
    {
        "number": 1483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 2 3'\nassert solution('4') == '1 2 3 2'\nassert solution('5') == '1 2 3 2 3'\n"
    },
    {
        "number": 1484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n-1 -1\n''') == '9'\nassert solution('''5 2\n1 -1\n''') == '0'\nassert solution('''5 3\n1 -1 -1 1 2\n''') == '2'\nassert solution('''4 200000\n-1 -1 12345 -1\n''') == '735945883'\n"
    },
    {
        "number": 1485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"11\"\nassert solution(\"1 6\") == \"11\"\nassert solution(\"2 10\") == \"36\"\n"
    },
    {
        "number": 1486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n-5 -2 2 7') == '3 12'\nassert solution('2\\n-1 1') == '2 2'\n"
    },
    {
        "number": 1487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0001\") == \"0011\"\nassert solution(\"1011\") == \"0111\"\nassert solution(\"000\") == \"impossible\"\nassert solution(\"111\") == \"impossible\"\nassert solution(\"\") == \"impossible\"\n"
    },
    {
        "number": 1488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '22 3'\nassert solution('4') == '22 3'\nassert solution('5') == '22 3'\nassert solution('6') == '22 3'\nassert solution('7') == '22 3'\n"
    },
    {
        "number": 1489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2\\n2 1\\n2 2\\n') == '16'\nassert solution('2\\n-1 -1\\n0 1\\n') == '9'\n"
    },
    {
        "number": 1490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '2'\nassert solution('4 14') == '4'\n"
    },
    {
        "number": 1491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n12 14 30 4\n''') == '2'\nassert solution('''\n6\n0 0 0 0 0 0\n''') == '6'\nassert solution('''\n10\n121 56 78 81 45 100 1 0 54 78\n''') == '0'\n"
    },
    {
        "number": 1492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 6\nXXXXXX\nXXXXXX\nXXXXXX''') == '1'\nassert solution('''10 10\n.XXXXXX...\n.XXXXXX...\n.XXXXXX...\n.XXXXXX...\n.XXXXXXXX.\n...XXXXXX.\n...XXXXXX.\n...XXXXXX.\n...XXXXXX.\n..........\n\n''') == '2'\n"
    },
    {
        "number": 1493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"B\"\nassert solution(\"2 2\") == \"WB\"\nassert solution(\"3 3\") == \"B-B\"\n"
    },
    {
        "number": 1494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaaaa\") == \"2 2 1 1 0 0\"\nassert solution(\"axbaxxb\") == \"0 1 1 2 1 1 0 0\"\n"
    },
    {
        "number": 1495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '5'\nassert solution('3') == '5'\nassert solution('3') == '5'\nassert solution('3') == '5'\n"
    },
    {
        "number": 1496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 2 2') == '3'\nassert solution('5 4 2 2') == '1 1'\nassert solution('5 4 2 2') == '2 3'\nassert solution('5 4 2 2') == '1 1'\nassert solution('5 4 2 2') == '2 3'\n"
    },
    {
        "number": 1497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0101\n1000\n1111\n0101\n''') == '2'\nassert solution('''\n3\n111\n111\n111\n''') == '3'\nassert solution('''\n2\n111\n111\n''') == '2'\nassert solution('''\n1\n111\n111\n''') == '3'\nassert solution('''\n1\n111\n111\n''') == '3'\n"
    },
    {
        "number": 1498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 3 2\n2 2 1\n3 4 3\n''') == '6'\nassert solution('''3 2\n3 2 3\n5 1 2\n''') == '3'\nassert solution('''8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n''') == '30'\nassert solution('''3 2\n3 2 3\n5 1 2\n''') == '9'\nassert solution('''8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n''') == '36'\n"
    },
    {
        "number": 1499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 7') == '5 1 6 2 7 3 4'\nassert solution('9 36') == '19 1 20 2 21 3 22 4 23 5 24 6 25 7 26 8 27 9 28 10 29 11 30 12 31 13 32 14 33 15 34 16 35 17 36 18'\n"
    },
    {
        "number": 1500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 1501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\nioi\n1 3\n''') == '26'\nassert solution('''\n5 2\nioi\n1 2\n''') == '0'\nassert solution('''\n6 2\nioi\n1 2\n''') == '0'\nassert solution('''\n5 2\nioi\n1 2\n''') == '0'\nassert solution('''\n6 2\nioi\n1 2\n''') == '0'\n"
    },
    {
        "number": 1502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '13'\nassert solution('4') == '14'\nassert solution('5') == '15'\nassert solution('6') == '16'\nassert solution('7') == '17'\n"
    },
    {
        "number": 1503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2 3\n2 3 1\n''') == '4'\nassert solution('''\n5 6\n1 2 3 4 5\n2 3 1 4 5\n3 4 5 1 2\n3 5 4 2 1\n2 3 5 4 1\n1 2 3 4 5\n''') == '5'\nassert solution('''\n2 2\n1 2\n2 1\n''') == '2'\n"
    },
    {
        "number": 1504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 5\n1 2\n3 4\n2 1000000000\n1 1\n999999999 999999999\n10 3\n5 10\n7 8\n''') == '7'\nassert solution('''\n3\n3 5\n1 2\n3 4\n2 1000000000\n1 1\n999999999 999999999\n10 3\n5 10\n7 8\n''') == '2000000000'\nassert solution('''\n3\n3 5\n1 2\n3 4\n2 1000000000\n1 1\n999999999 999999999\n10 3\n5 10\n7 8\n''') == '0'\n"
    },
    {
        "number": 1505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 8 0 2 8 3 4 5') == '8.000000000000 11.000000000000\\n4.000000000000 8.000000000000\\n6.000000000000 8.000000000000\\n6.000000000000 3.000000000000\\n10.000000000000 3.000000000000\\n10.000000000000 8.000000000000\\n12.000000000000 8.000000000000'\n"
    },
    {
        "number": 1506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 1507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\nABABB\n''') == 'NO'\nassert solution('''5 1\nABABB\n''') == 'YES'\nassert solution('''5 1\nABABB\n''') == 'YES'\nassert solution('''5 1\nABABB\n''') == 'YES'\nassert solution('''5 1\nABABB\n''') == 'YES'\n"
    },
    {
        "number": 1508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('5\\n100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('5\\n100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('5\\n100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('5\\n100 -100 50 0 -50') == '100 -50 0 50 -100'\n"
    },
    {
        "number": 1509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 3\n''') == '7'\nassert solution('''4\n2 1 1 3\n''') == '11'\n"
    },
    {
        "number": 1510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 1511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 5') == '1'\nassert solution('3 2 2') == '3'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 1512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('5 1 2 3 4') == '5'\nassert solution('5 1 2 3 4 5') == '5'\nassert solution('5 1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 1513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 100 2\n20 30 75 80\n''') == '17'\nassert solution('''5 100 3\n1 2 4 60 87\n''') == '6'\n"
    },
    {
        "number": 1514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 5 3 5\n6 7 4 6\n''') == '3 4 6 5 7'\nassert solution('''3\n2 4\n3 2\n''') == '-1'\nassert solution('''8\n2 3 1 1 2 4 3\n3 4 4 2 5 5 4\n''') == '3 4 5 2 1 4 3 2'\n"
    },
    {
        "number": 1515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '142857'\nassert solution('1 2') == 'Impossible'\nassert solution('6 4') == '102564'\n"
    },
    {
        "number": 1516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n12 33 45\n''') == '26730'\nassert solution('''\n2\n123 456\n''') == '1115598'\nassert solution('''\n1\n1\n''') == '11'\n"
    },
    {
        "number": 1517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '18'\nassert solution('5') == '1800'\n"
    },
    {
        "number": 1518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\nassert solution('4') == '3'\n"
    },
    {
        "number": 1519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 11 3\n0 1\n1 1\n''') == '3'\nassert solution('''\n1 3 2\n1 2\n''') == '0'\nassert solution('''\n0 5 2\n''') == '2'\n"
    },
    {
        "number": 1520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\na\nb\na\n''') == '3'\nassert solution('''\n2\nbnn\na\n''') == '1'\n"
    },
    {
        "number": 1521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n0\\n1\\n2\\n3\\n4\\n') == '4'\nassert solution('10 5\\n0\\n21\\n53\\n41\\n53\\n') == '4'\nassert solution('10 5\\n0\\n1\\n2\\n3\\n4\\n') == '-1'\n"
    },
    {
        "number": 1522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\naAbB\n\n''') == '0'\nassert solution('''\n4\naBaCaB\n\n''') == '3'\nassert solution('''\n5\nxYyXzZaZ\n\n''') == '2'\n"
    },
    {
        "number": 1523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 7\\n1 1 3 1 5 3 7 1\\n5 7 4 8 1 3 5 2') == '10'\nassert solution('3 3\\n3 1 2\\n5 3 4\\n') == '0'\nassert solution('3 3\\n3 1 2\\n5 3 4\\n') == '0'\nassert solution('3 3\\n3 1 2\\n5 3 4\\n') == '0'\nassert solution('3 3\\n3 1 2\\n5 3 4\\n') == '0'\n"
    },
    {
        "number": 1524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRLRL\") == \"0 1 2 1 1\"\nassert solution(\"RRRR\") == \"0 1 2 1 1\"\nassert solution
    },
    {
        "number": 1525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('1 3 3') == '0'\nassert solution('1 3 4') == '1'\nassert solution('1 3 5') == '0'\nassert solution('1 3 6') == '1'\n"
    },
    {
        "number": 1526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 1527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 1528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 7') == '4'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 1529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nI will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.\n''') == 'Freda\\'s'\nassert solution('''\n5\nI will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.\n''') == 'OMG>.< I don\\'t know!'\nassert solution('''\n5\nI will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.\n''') == 'OMG>.< I don\\'t know!'\nassert solution('''\n5\nI will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.\n''') == 'OMG>.< I don\\'t know!'\nassert solution('''\n5\nI will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.\n''') == 'OMG>.< I don\\'t know!'\n"
    },
    {
        "number": 1530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1 2'\nassert solution('''\n5\n4 2 3 1 6\n''') == '4 2 2 4'\nassert solution('''\n5\n4 2 3 1 6\n''') == '4 2 2 4'\nassert solution('''\n5\n4 2 3 1 6\n''') == '4 2 2 4'\nassert solution('''\n5\n4 2 3 1 6\n''') == '4 2 2 4'\n"
    },
    {
        "number": 1531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 1 2') == '8 1'\nassert solution('5\\n1 -2 3 1 -2') == '5 2'\n"
    },
    {
        "number": 1532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1 1'\n"
    },
    {
        "number": 1533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\ntom\nlucius\nginny\nharry\nginny\nharry\n''') == 'NO'\nassert solution('''\n3\na\na\na\n''') == 'YES'\n'''\n"
    },
    {
        "number": 1534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 4\nassert solution(input()) == 2\n"
    },
    {
        "number": 1535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0 0\n1 1\n2 2\n2 0\n-1 -1\n''') == '2'\nassert solution('''\n2 1 2\n1 1\n1 0\n''') == '1'\n'''\n"
    },
    {
        "number": 1536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '3 6'\nassert solution('''\n8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5'\nassert solution('''\n6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '5 1'\nassert solution('''\n8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5'\nassert solution('''\n6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '5 1'\n"
    },
    {
        "number": 1537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\nBWWW\nWBBW\nWBBW\nWWWB''') == '4'\nassert solution('''3 1\nBWB\nWWB\nBWB''') == '2'\nassert solution('''2 1\nWW\nWW''') == '4'\n"
    },
    {
        "number": 1538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 1539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('6') == '8'\n"
    },
    {
        "number": 1540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n1 1 1 1\n1 0 1 1\n1 1 0 0\n1 1\n3 1\n1 3\n2 4\n3 2\n''') == '3 3 1'\nassert solution('''\n4 3 4\n0 1 1\n1 0 1\n1 1 1\n0 0 0\n1 2\n2 1\n3 1\n1 3\n\n''') == '0 2 3 0'\n"
    },
    {
        "number": 1541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"=^==\") == \"left\"\nassert solution(\"9===^==\") == \"left\"\nassert solution(\"41^52==\") == \"right\"\nassert solution
    },
    {
        "number": 1542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 10 8 6 11\n4\n1\n10\n3\n11\n''') == '0 4 1 5'\nassert solution('''\n5\n3 10 8 6 11\n4\n1\n10\n3\n11\n''') == '0 4 1 5'\nassert solution('''\n5\n3 10 8 6 11\n4\n1\n10\n3\n11\n''') == '0 4 1 5'\nassert solution('''\n5\n3 10 8 6 11\n4\n1\n10\n3\n11\n''') == '0 4 1 5'\nassert solution('''\n5\n3 10 8 6 11\n4\n1\n10\n3\n11\n''') == '0 4 1 5'\n"
    },
    {
        "number": 1543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n-5 R\n0 P\n3 P\n7 B\n''') == '12'\nassert solution('''5\n10 R\n14 B\n16 B\n21 R\n32 R\n''') == '24'\n"
    },
    {
        "number": 1544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '24'\nassert solution('''\n3\n''') == '12'\nassert solution('''\n4\n''') == '36'\nassert solution('''\n5\n''') == '120'\nassert solution('''\n6\n''') == '720'\n"
    },
    {
        "number": 1545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\naab\n2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 1546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 1547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3\") == \"3 1 3 \nassert solution(\"5 3 5\") == \"1 1 1 \nassert solution(\"5 5 5\") == \"1 1 1 \nassert solution(\"5 5 5\") == \"1 1 1 \nassert solution(\"5 5 5\") == \"1 1 1 \n"
    },
    {
        "number": 1548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '26'\nassert solution('4\\n1 1 2 2') == '20'\n"
    },
    {
        "number": 1549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 4 10\n3 1 1 1 2 2\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n''') == '4 3 4 2 3 4 1 2 3 4 4 5 1 2 3 4 5 1'\nassert solution('''\n4 5 4\n4 4 5 1\n15\n9\n13\n6\n''') == '5 3 4 2 3 4 1 2 3 4 4 5 1 2 3 4 5 1'\n"
    },
    {
        "number": 1550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '024'\nassert solution('4') == '0142'\n"
    },
    {
        "number": 1551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 999\n400000 1 2\n500000 1 1\n''') == '500000.000000000000000000000000000000'\nassert solution('''2 1000\n400000 500 1\n600000 500 2\n''') == '400.000000000000000000000000000000'\n"
    },
    {
        "number": 1552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n1 3 1 3 2 1 2') == '2\\n3 5 2'\nassert solution('4\\n2 1 1 2') == '0'\nassert solution('5\\n1 1 1 2 2') == '1\\n2 3'\nassert solution('6\\n1 1 1 2 2') == '1\\n2 3 4'\nassert solution('7\\n1 3 1 3 2 1 2') == '2\\n3 5 2'\n"
    },
    {
        "number": 1553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7\n2 3 5 4 1\n''') == '3'\nassert solution('''10 10\n9 1 1 1 1 1 1 1 1 1\n''') == '4'\nassert solution('''5 10\n3 1 4 2 4\n''') == '5'\n"
    },
    {
        "number": 1554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4 1\n''') == '1 5'\nassert solution('''\n1 2 3 4 5\n''') == '-1'\nassert solution('''\n7\n1 2 1 3 1 2 1\n''') == '2 3'\nassert solution('''\n7\n1 2 1 3 1 2 1\n''') == '-1'\n"
    },
    {
        "number": 1555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n>>>>\n<<<\n>>>\n''') == 'Yes'\nassert solution('''3 3\n==\n=<\n==\n''') == 'No'\nassert solution('''3 2\n>>\n<<\n>>\n''') == 'No'\nassert solution('''3 1\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n=<\n="
    },
    {
        "number": 1556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 1\n5 4 3 5 2\n''') == '5 4 3 5 -1'\nassert solution('''5 3 1\n5 4 3 5 5\n''') == '5 4 0 5 5'\nassert solution('''3 2 7\n5 4 2\n''') == '5 11 -5'\n"
    },
    {
        "number": 1557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 6 100\n17 5\n''') == '4'\nassert solution('''\n11 6 100\n12 5\n''') == '2'\n"
    },
    {
        "number": 1558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 4\n5 2\n4 7\n3 1\n3 2\n2 5\n''') == '4'\nassert solution('''\n2 5 4\n5 2\n5 2\n''') == '0'\n'''\n"
    },
    {
        "number": 1559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n123456''') == '124124'\nassert solution('''3\n12345''') == '100100'\n"
    },
    {
        "number": 1560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '2'\nassert solution('3') == '0'\n"
    },
    {
        "number": 1561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 2\n**.\n...\n\n''') == '3'\nassert solution('''\n1 2 2\n..\n\n''') == '1'\nassert solution('''\n3 3 4\n.*.\n*.*\n.*.\n\n''') == '0'\n"
    },
    {
        "number": 1562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 3 2\n1 1\n2 1\n3 1\n2 3\n''') == '6'\nassert solution('''3 6 3 2\n1 6\n2 2\n3 4\n1 6\n\n''') == '15'\nassert solution('''3 5 3 2\n1 2\n2 3\n3 1\n1 5\n\n''') == '8'\n"
    },
    {
        "number": 1563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 6') == '3'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 1564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nabab\naabb\n\n''') == '-1'\nassert solution('''\n1\na\n\n''') == '-1'\nassert solution('''\n8\nbabbaabb\nabababaa\n\n''') == '3 2 6'\nassert solution('''\n4\nabab\naabb\n\n''') == '3 2 6'\nassert solution('''\n4\nabab\naabb\n\n''') == '3 2 6'\n"
    },
    {
        "number": 1565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '1801'\nassert solution('3') == '11'\n"
    },
    {
        "number": 1566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n"
    },
    {
        "number": 1567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '16'\nassert solution('3 7') == '0'\nassert solution('1337 42') == '95147305'\nassert solution('1 1') == '1'\nassert solution('500000 1') == '500000'\n"
    },
    {
        "number": 1568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 5 3 5\n1 5 5 4\n''') == '20'\nassert solution('''\n5 3 1 1 3\n2 2 2 1 1\n''') == '15'\nassert solution('''\n5 5 3 4 5\n1 2 3 4 5\n''') == '35'\n"
    },
    {
        "number": 1569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 4') == '3'\nassert solution('8 9') == '3'\n"
    },
    {
        "number": 1570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 17 4') == '13'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 1571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abab') == '12'\nassert solution('ba') == '4'\nassert solution('cacdcdbbbb') == '24'\nassert solution('bdcaccdbbb') == '24'\n\n\"\"\""
    },
    {
        "number": 1572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n1 2 3 5 8 13 21 34 55 89\n''') == '10'\nassert solution('''\n5\n1 1 1 1 1\n''') == '2'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 1573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n75 5\n0 100\n150 20\n75 1\n''') == '100'\nassert solution('''\n5 100\n0 7\n11 32\n99 10\n46 8\n87 54\n''') == '111'\nassert solution('''\n4 5\n75 5\n0 100\n150 20\n75 1\n''') == '100'\nassert solution('''\n5 100\n0 7\n11 32\n99 10\n46 8\n87 54\n''') == '111'\nassert solution('''\n4 5\n75 5\n0 100\n150 20\n75 1\n''') == '100'\n"
    },
    {
        "number": 1574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '2'\nassert solution('7 4') == '-1'\n"
    },
    {
        "number": 1575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 15 2\n2\n10 13\n''') == '12'\nassert solution('''\n8 17 3\n4\n3 4 5 8\n''') == '2'\n"
    },
    {
        "number": 1576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ncteho\") == \"techno\"\nassert solution(\"erfdcoeocs\") == \"codeforces\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 1577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\nADAAAA\n''') == 'Anton'\nassert solution('''7\nDDDAADA\n''') == 'Danik'\nassert solution('''6\nDADADA\n''') == 'Friendship'\n"
    },
    {
        "number": 1578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 1579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 1580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"3 5\") == \"1\"\n"
    },
    {
        "number": 1581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"10 2\") == \"10\"\n"
    },
    {
        "number": 1582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == '17'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 1583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 4') == '45.0000000000'\nassert solution('1 1 1') == '90.0000000000'\nassert solution('1 1 2') == '90.0000000000'\nassert solution('1 1 3') == '90.0000000000'\nassert solution('1 1 4') == '90.0000000000'\n"
    },
    {
        "number": 1584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 4 2 1') == '1'\nassert solution('5\\n3 4 2 1\\n1 2 3 4') == '2'\nassert solution('5\\n3 4 2 1\\n1 2 3 4\\n1 2 3 4') == '1'\nassert solution('5\\n3 4 2 1\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '0'\nassert solution('5\\n3 4 2 1\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '0'\n"
    },
    {
        "number": 1585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 20') == '3'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 1586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '1'\nassert solution('123') == '1'\nassert solution('1234') == '1'\nassert solution('12345') == '1'\nassert solution('123456') == '1'\n"
    },
    {
        "number": 1587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nWWRR\") == \"2\"\nassert solution(\"4\\nWWRR\") == \"2\"\nassert solution(\"4\\nWWRR\") == \"2\"\nassert solution(\"4\\nWWRR\") == \"2\"\nassert solution(\"4\\nWWRR\") == \"2\"\n"
    },
    {
        "number": 1588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '999993'\nassert solution('1') == '1000000'\nassert solution('2') == '999993'\nassert solution('2') == '1000000'\nassert solution('3') == '999993'\n"
    },
    {
        "number": 1589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0 0 0 1\n1 0 1 1\n\n''') == '3'\nassert solution('''1 3\n1 1 0 1 0 0\n\n''') == '2'\n"
    },
    {
        "number": 1590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n5 2 4 7') == '167'\nassert solution('3\\n123456789 214365879 987654321') == '582491518'\n"
    },
    {
        "number": 1591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1\n3\n1\n1\n2\n\n''') == '4'\nassert solution('''10 3\n2\n1\n3\n2\n3\n3\n1\n3\n1\n2\n\n''') == '9'\n"
    },
    {
        "number": 1592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 1\n2 1\n''') == '3 1'\nassert solution('''\n2\n1 1000000 10\n''') == '1000010 10'\nassert solution('''\n3\n3 3\n4 3\n5 3\n''') == '12 7'\n"
    },
    {
        "number": 1593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 999998') == '2.8284271'\nassert solution('4 999998') == '1.4142136'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 1594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n2 8\n1 16\n''') == '1'\nassert solution('''\n4 9\n1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''\n5 6\n1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9\n''') == '2'\nassert solution('''\n5 6\n1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9\n''') == '2'\nassert solution('''\n5 6\n1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9\n''') == '3'\n"
    },
    {
        "number": 1595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '2'\nassert solution('4 3') == '3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 1596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ouuokarinn\") == \"4\"\nassert solution(\"banana\") == \"1\"\nassert solution(\"nnn\") == \"3\"\nassert solution(\"amanda\") == \"0\"\n"
    },
    {
        "number": 1597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel''') == '11'\nassert solution('''5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel''') == '4 1'\nassert solution('''5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel''') == '2 5'\nassert solution('''5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel''') == '1 3'\nassert solution('''5\ngennady\ngalya\nboris\nbill\ntoshik\nbilbo\ntorin\ngendalf\nsmaug\ngaladriel''') == '5 2'\n"
    },
    {
        "number": 1598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n010\n''') == '0000000'\nassert solution('''\n0001111\n''') == '0011001100001011101000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\n"
    },
    {
        "number": 1599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('#..###') == '1'\nassert solution('#.###') == '1'\nassert solution('#.##') == '1'\nassert solution('#.##') == '1'\nassert solution('#.##') == '1'\n"
    },
    {
        "number": 1600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 1601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '3 6'\nassert solution('''\n8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5'\nassert solution('''\n6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '5 1'\nassert solution('''\n8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5'\nassert solution('''\n6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '5 1'\n"
    },
    {
        "number": 1602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 0 11 6\n''') == '11 6 4 0'\nassert solution('''1\n13\n''') == '13'\n"
    },
    {
        "number": 1603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n6 4 2 7 2 7\n3\n2 3 6\n1 3 4\n1 1 6\n''') == '24'\nassert solution('''\n4\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '10'\nassert solution('''\n6\n6 4 2 7 2 7\n3\n2 3 6\n1 3 4\n1 1 6\n''') == '28'\nassert solution('''\n4\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '15'\nassert solution('''\n6\n6 4 2 7 2 7\n3\n2 3 6\n1 3 4\n1 1 6\n''') == '24'\n"
    },
    {
        "number": 1604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\n1 7\n3 8\n4 5\n6 7\n1 3\n5 10\n8 9\n''') == '9'\nassert solution('''\n3 1\n1 1\n2 2\n3 3\n''') == '3'\nassert solution('''\n3 2\n1 1\n2 2\n3 3\n''') == '0'\nassert solution('''\n5 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == '7'\n"
    },
    {
        "number": 1605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bb\") == \"1 2\"\nassert solution(\"baab\") == \"2 4\"\nassert solution(\"babb\") == \"2 5\"\nassert solution(\"babaa\") == \"2 7\"\n"
    },
    {
        "number": 1606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\nassert solution('''\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\nassert solution('''\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\nassert solution('''\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\nassert solution('''\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\n"
    },
    {
        "number": 1607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '12'\nassert solution('4 1') == '2'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 1608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '100'\nassert solution('7') == '100'\n"
    },
    {
        "number": 1609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 5 2 4 3'\nassert solution('3 0') == '1 2 3'\nassert solution('3 2') == '3 2 1'\n"
    },
    {
        "number": 1611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 1\n''') == '1'\nassert solution('''5\n20 4 3 2 1\n''') == '11'\n"
    },
    {
        "number": 1612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n3 2 4 1\\n2 10 11') == 'YES'\nassert solution('2\\n1 1\\n1 1') == 'NO'\n"
    },
    {
        "number": 1613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 1614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 7\n4 5 14\n''') == '4'\nassert solution('''6 1\n1 1 1 1 1 1\n''') == '6'\nassert solution('''6 5\n7 6 8 9 10 5\n''') == '11'\n"
    },
    {
        "number": 1615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 7') == '0'\nassert solution('4 7') == '1'\n"
    },
    {
        "number": 1616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 4 6\n''') == '1'\nassert solution('''\n4\n2 3 6 6\n''') == '2'\nassert solution('''\n3\n6 15 10\n''') == '3'\nassert solution('''\n4\n2 3 5 7\n''') == '-1'\n"
    },
    {
        "number": 1617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1 5 9 21'\nassert solution('16') == '1 10 28 64 136'\n"
    },
    {
        "number": 1618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 6 6\n4\n1 1\n3 1\n1 1\n4 3\n''') == '1 3\\n3 4\\n6 5\\n'\nassert solution('''\n3\n1 1\n3 1\n1 1\n4 3\n''') == '1 3\\n3 4\\n'\nassert solution('''\n1\n1\n5\n1 2\n1 10\n1 10\n1 10\n1 10\n''') == '1 3\\n3 4\\n13\\n23\\n33\\n'''\n"
    },
    {
        "number": 1619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0 0\\n2 0 0\\n2 2 0\\n0 2 0\\n4\\n1 1 -1\\n1 1 1\\n1 3 1\\n1 3 -1\") == \"YES\"\nassert solution(\"4\\n0 0 0\\n2 0 0\\n2 2 0\\n0 2 0\\n4\\n1 1 -1\\n1 1 1\\n1 3 1\\n1 3 -1\") == \"NO\"\nassert solution(\"4\\n0 0 0\\n2 0 0\\n2 2 0\\n0 2 0\\n4\\n1 1 -1\\n1 1 1\\n1 3 1\\n1 3 -1\") == \"NO\"\nassert solution(\"4\\n0 0 0\\n2 0 0\\n2 2 0\\n0 2 0\\n4\\n1 1 -1\\n1 1 1\\n1 3 1\\n1 3 -1\") == \"NO\"\nassert solution(\"4\\n0 0 0\\n2 0 0\\n2 2 0\\n0 2 0\\n4\\n1 1 -1\\n1 1 1\\n1 3 1\\n1 3 -1\") == \"NO\"\n"
    },
    {
        "number": 1620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"bba\"\n"
    },
    {
        "number": 1621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abc') == '41'\nassert solution('abcbbc') == '41'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 1622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n''') == 'YES'\nassert solution('''\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n''') == 'NO'\nassert solution('''\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n''') == 'YES'\nassert solution('''\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n''') == 'NO'\nassert solution('''\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n''') == 'YES'\n"
    },
    {
        "number": 1623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 2\n''') == '5 7'\nassert solution('''5 1 5\n''') == '5 31'\n"
    },
    {
        "number": 1624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n8 5 2 3\n''') == '164'\nassert solution('''6\n1 1 1 2 2 2\n''') == '27'\n"
    },
    {
        "number": 1625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '14'\nassert solution('4') == '14'\nassert solution('4') == '14'\nassert solution('4') == '14'\n"
    },
    {
        "number": 1626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 2\n38 56 49\n7 3 4\n''') == '8'\nassert solution('''8 2\n1 22 3 44\n5 4 3 2\n''') == '32400'\nassert solution('''6 2\n1 22 3 44\n5 4 3 2\n''') == '8'\nassert solution('''6 2\n1 22 3 44\n5 4 3 2\n''') == '32400'\nassert solution('''6 2\n1 22 3 44\n5 4 3 2\n''') == '8'\n"
    },
    {
        "number": 1627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '1 4'\nassert solution('''\n7\n36 28 57 39 66 69 68\n''') == '1 4'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2 5'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2 5'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2 5'\n"
    },
    {
        "number": 1628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"x\") == \"x\"\nassert solution(\"yxyxy\") == \"y\"\nassert solution(\"xxxxxy\") == \"xxxx\"\nassert solution(\"xxyyy\") == \"xxyy\"\nassert solution(\"xyy\") == \"y\"\n"
    },
    {
        "number": 1629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '3 2 5 4'\nassert solution('5 2') == '2 1 4 1 6'\nassert solution('3 3') == '1 2 3'\n"
    },
    {
        "number": 1630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nDINAMO BYTECITY\nFOOTBALL MOSCOW\n''') == 'YES'\nassert solution('''\n2\nDINAMO BITECITY\nDINAMO BYTECITY\n''') == 'NO'\nassert solution('''\n3\nPLAYFOOTBALL MOSCOW\nPLAYVOLLEYBALL SPB\nGOGO TECHNOCUP\n''') == 'YES'\nassert solution('''\n3\nABC DEF\nABC EFG\nABD OOO\n''') == 'YES'\nassert solution('''\n3\nABC DEF\nABC EFG\nABD OOO\n''') == 'NO'\n"
    },
    {
        "number": 1631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'bcdefghijklmnopqrsatuvwxyz'\nassert solution('10') == 'Impossible'\nassert solution('10') == 'aghjlnopefikdmbcqrstuvwxyz'\nassert solution('7') == 'acbdefhijklmnogpqrstuvwxyz'\nassert solution('7') == 'acbdefhijklmnogpqrstuvwxyz'\n"
    },
    {
        "number": 1632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.0000000000'\nassert solution('3') == '0.0740740741'\n"
    },
    {
        "number": 1633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4\") == \"4\"\nassert solution(\"2 3 6\") == \"5\"\nassert solution(\"5 3 7\") == \"0\"\n"
    },
    {
        "number": 1634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 7 19\n2 3\n2 5\n4 4 4\n''') == '12'\nassert solution('''4 3 2 1\n1 3\n798\n1 2 3\n''') == '1'\nassert solution('''100 100 8 100\n3 5\n7 94 12\n100 1 47 0 42\n''') == '16'\n"
    },
    {
        "number": 1635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 2 1 2') == '3'\nassert solution('6\\n2 1 2 2 4 1') == '2'\n"
    },
    {
        "number": 1636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 1637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n1 3\n1 2\n2 3\n1 3\n''') == '3 0 3'\nassert solution('''\n5 3\n-1 3\n2 4\n1 1\n3 5\n2 2\n1 4\n2 3\n3 5\n''') == '4 14 4 16 10'\n"
    },
    {
        "number": 1638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 2 1\n''') == '1 2 3 2 1'\nassert solution('''\n3\n10 6 8\n''') == '10 6 6'\n"
    },
    {
        "number": 1639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n2 2 1 3 4 1\n''') == '3'\nassert solution('''\n3\n2 2 9\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '6'\n'''\n"
    },
    {
        "number": 1640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '0'\nassert solution('6 6 5 5') == '-8'\n"
    },
    {
        "number": 1641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 8 10\n10 8\n5 7\n11 9\n3\n''') == '10'\nassert solution('''\n2 2 10 18\n10 4\n20 6\n5 3\n''') == '20'\nassert solution('''\n2 2 10 18\n10 4\n20 6\n5 3\n''') == '20'\nassert solution('''\n2 2 10 18\n10 4\n20 6\n5 3\n''') == '20'\nassert solution('''\n2 2 10 18\n10 4\n20 6\n5 3\n''') == '20'\n"
    },
    {
        "number": 1642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 1\\n1 0') == '0.3535533906'\nassert solution('6\\n5 0\\n10 0\\n12 -4\\n10 -8\\n5 -8\\n3 -4') == '1.0000000000'\n"
    },
    {
        "number": 1643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n010\n''') == '0000000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\nassert solution('''\n0001111\n''') == '0000000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\nassert solution('''\n0111001100111011101000\n''') == '0011001100001011101000'\n"
    },
    {
        "number": 1644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 -3\n''') == '5'\nassert solution('''\n3\n41 -41 41\n''') == '3'\n"
    },
    {
        "number": 1646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1001\") == \"100\"\nassert solution(\"1010\") == \"101\"\n"
    },
    {
        "number": 1647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '7'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 1648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"10 3\") == \"6\"\nassert solution(\"20 3\") == \"1\"\nassert solution(\"30 3\") == \"1\"\nassert solution(\"40 3\") == \"1\"\n"
    },
    {
        "number": 1649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2 4\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\n"
    },
    {
        "number": 1650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '5'\nassert solution('1000') == '5'\nassert solution('10000') == '5'\nassert solution('100000') == '5'\n"
    },
    {
        "number": 1651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n"
    },
    {
        "number": 1652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"erasedream\") == \"YES\"\nassert solution(\"dreamer\") == \"YES\"\nassert solution(\"dreamerdreamer\") == \"YES\"\nassert solution(\"dreamerdreamerdreamer\") == \"YES\"\nassert solution(\"dreamerdreamerdreamerdreamer\") == \"YES\"\n"
    },
    {
        "number": 1653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 1654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?aa?') == 'baab'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 1655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1 0 10\\n') == '1'\nassert solution('2\\n0 0\\n') == '2'\nassert solution('10\\n1 1 3 0 0 0 2 1 0 3\\n') == '3'\n"
    },
    {
        "number": 1656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"vvvovvv\") == 4\nassert solution(\"vvovooovovvovoovvvvovovvvov\") == 100\n\n\"\"\""
    },
    {
        "number": 1657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2.0000000000'\nassert solution('1 100') == '-1'\nassert solution('3 5') == '0.5000000000'\n"
    },
    {
        "number": 1658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '8'\nassert solution('1 2 3') == '8'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '22'\nassert solution
    },
    {
        "number": 1659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"22 1\"\nassert solution(\"5 17\") == \"3 2\"\n"
    },
    {
        "number": 1660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 1\n2 3 1\n3 1 1\n''') == '1'\nassert solution('''\n3 3\n1 2 1\n2 3 1\n3 1 1\n''') == '3'\nassert solution('''\n6 7\n1 2 1\n3 2 5\n2 4 2\n2 5 2\n2 6 9\n5 4 3\n4 3 4\n''') == '6'\n"
    },
    {
        "number": 1661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 5 2 4\n5 3 4 6''') == '3'\nassert solution('''5 2\n20 40 50 20 40\n19 20\n''') == '0'\nassert solution('''6 4\n4 8 15 16 23 42\n1000 1000 1000 1000\n''') == '4'\n"
    },
    {
        "number": 1662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5 4 3 2 1'\nassert solution('''\n6\n1 1 2 2 3 3\n''') == '5 1 2 3 2 1'\n"
    },
    {
        "number": 1663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''107\n''') == '42'\nassert solution('''100500100500\n''') == '428101984'\nassert solution('''1\n''') == '1'\nassert solution('''0\n''') == '0'\nassert solution('''7\n''') == '7'\n"
    },
    {
        "number": 1664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nc=aa#bb\nd12=c\nres=c^d12\ntmp=aa$c\n''') == '2'\nassert solution('''\nmax=aaaa$bbbb\nmin=bbbb^aaaa\n''') == '0'\n"
    },
    {
        "number": 1665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 3\n''') == '0 1'\n\nassert solution('''\n1 2\n1 3\n2 4\n2 5\n5 6\n''') == '0 3 2 4 1'\n\nassert solution('''\n1 2\n1 3\n2 4\n2 5\n5 6\n''') == '0 3 2 4 1'\n\nassert solution('''\n1 2\n1 3\n2 4\n2 5\n5 6\n''') == '0 3 2 4 1'\n\nassert solution('''\n1 2\n1 3\n2 4\n2 5\n5 6\n''') == '0 3 2 4 1'"
    },
    {
        "number": 1666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1 1') == '3 2 1'\nassert solution('2 4 2 2') == '0'\n"
    },
    {
        "number": 1667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n1 2 7 3 4 8 5 6\n''') == '7'\nassert solution('''6\n25 1 2 3 14 36\n''') == '2'\n"
    },
    {
        "number": 1668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0'\nassert solution('''\n3\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '1'\nassert solution('''\n4\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '2'\nassert solution('''\n5\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '3'\nassert solution('''\n6\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '4'\n"
    },
    {
        "number": 1669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n( ) + ++ : -> >> >>: b c)\n2\n($val1++ + +4 kb) >> :out\nb-> + 10 >>: t # using >>: \n''') == '((a+++ +4c )>> :d b->+10>>:e)'\n\nassert solution('''\n( ) + ++ : -> >> >>: b c)\n2\n($val1++ + +4 kb) >> :out\nb-> + 10 >>: t # using >>: \n''') == '((a+++ +4c )>> :d b->+10>>:e)'\n\nassert solution('''\n( ) + ++ : -> >> >>: b c)\n2\n($val1++ + +4 kb) >> :out\nb-> + 10 >>: t # using >>: \n''') == '((a+++ +4c )>> :d b->+10>>:e)'\n\nassert solution('''\n( ) + ++ : -> >> >>: b c)\n2\n($val1++ + +4 kb) >> :out\nb-> + 10 >>: t # using >>: \n''') == '((a+++ +4c )>> :d b->+10>>:e)'\n\nassert solution('''\n( ) + ++ : -> >> >>: b c)\n2\n($val1++ + +4 kb) >> :out\nb-> + 10 >>: t # using >>: \n''') == '((a+++ +4c )>> :d b->+10>>:e)'"
    },
    {
        "number": 1670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == 'MC 25 70\\nMC 42 82\\nCSKA 13 90'\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == 'MC 25 70\\nMC 42 82\\nCSKA 13 90'\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == 'MC 25 70\\nMC 42 82\\nCSKA 13 90'\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == 'MC 25 70\\nMC 42 82\\nCSKA 13 90'\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == 'MC 25 70\\nMC 42 82\\nCSKA 13 90'\n"
    },
    {
        "number": 1671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('7') == '0'\nassert solution('5') == '3'\n"
    },
    {
        "number": 1672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n10\n10\n10\n01\n10\n10\n''') == '3'\nassert solution('''\n4\n01\n01\n10\n10\n\n''') == '2'\n'''\n"
    },
    {
        "number": 1673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 7 3 5\n''') == '8'\nassert solution('''5 5\n1 10 100 1000 10000\n''') == '9'\n"
    },
    {
        "number": 1674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3\n1 5 16 18 7 2 10\nbaaaaca\n''') == '54'\nassert solution('''\n5 5\n2 4 1 3 1000\naaaaa\n''') == '1010'\nassert solution('''\n8 1\n10 15 2 1 4 8 15 16\nqqwweerr\n''') == '41'\nassert solution('''\n6 3\n14 18 9 19 2 15\ncccccc\n''') == '52'\nassert solution('''\n2 1\n10 10\nqq\n''') == '10'\n"
    },
    {
        "number": 1675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n2 1\n''') == '2 0'\nassert solution('''\n3\n1 2\n2 1\n1 3\n''') == '3 1 4'\n"
    },
    {
        "number": 1676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '11 19 -1 21 22'\nassert solution('4 1') == '10 18 27 -1'\n"
    },
    {
        "number": 1677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n''') == '2'\nassert solution('''\n4\n10 20 10 30\n''') == '3'\nassert solution('''\n5\n10 20 10 30\n''') == '2'\nassert solution('''\n6\n10 20 10 30 40 50\n''') == '3'\nassert solution('''\n7\n10 20 10 30 40 50 60\n''') == '4'\n"
    },
    {
        "number": 1678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n5 -1 3 4 -1\n''') == '5'\nassert solution('''3 0\n-1 2 -3\n''') == '4'\nassert solution('''4 -1\n-2 1 -2 3\n''') == '3'\n"
    },
    {
        "number": 1679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('1111') == '1111'\nassert solution('11111') == '11111'\n"
    },
    {
        "number": 1680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n0 3 2 1\n''') == '4'\nassert solution('''6 0\n200 100 100 100 200 200\n''') == '6'\n"
    },
    {
        "number": 1681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\naaabbac\naabbccac\n''') == '6'\nassert solution('''\na\nz\n''') == '-1'\n"
    },
    {
        "number": 1682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n5 4 6\n3 1 5\n''') == '10'\nassert solution('''5 3\n3 4 7 10 3\n4 5 5 12 5\n''') == '25'\n"
    },
    {
        "number": 1683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12 6\n1 3\n3 7\n5 7\n7 11\n9 11\n11 3\n\n''') == 'Yes'\nassert solution('''\n9 6\n4 5\n5 6\n7 8\n8 9\n1 2\n2 3\n\n''') == 'Yes'\nassert solution('''\n10 3\n1 2\n3 2\n7 2\n\n''') == 'No'\nassert solution('''\n10 2\n1 6\n2 7\n\n''') == 'Yes'\n"
    },
    {
        "number": 1685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4\nUURL\n8\nLRLLLLLLLL\n''') == '10'\nassert solution('''\n5\n4\nUURL\n8\nLRLLLLLLLL\n''') == '5'\nassert solution('''\n5\n4\nUURL\n8\nLRLLLLLLLL\n''') == '10'\nassert solution('''\n5\n4\nUURL\n8\nLRLLLLLLLL\n''') == '5'\nassert solution('''\n5\n4\nUURL\n8\nLRLLLLLLLL\n''') == '10'\n"
    },
    {
        "number": 1686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3\n''') == '255.255.254.0'\nassert solution('''5 2\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3\n''') == '255.255.0.0'\nassert solution('''2 1\n255.0.0.1\n0.0.0.2\n''') == '-1'\n"
    },
    {
        "number": 1687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 1688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11 5 2 7\n''') == '1 1 3 2'\nassert solution('''\n4\n3 2 5 3\n''') == '5 4 3 6'\nassert solution('''\n3\n4 3 6\n''') == '-1 -1 -1'\n"
    },
    {
        "number": 1689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nXO|OX\nXO|XX\nOX|OX\nXX|OX\n''') == 'NO'\nassert solution('''\n5\nXX|XX\nXX|XX\nXO|OX\nXO|OO\nOX|XO\n''') == 'YES'\nassert solution('''\n6\nOO|OX\nXO|XX\nOX|OX\nXX|OX\nOO|OO\nOO|XX\n''') == 'NO'\nassert solution('''\n4\nXO|OX\nXO|XX\nOX|OX\nXX|OX\n''') == 'NO'\nassert solution('''\n5\nXX|XX\nXX|XX\nXO|OX\nXO|OO\nOX|XO\n''') == 'YES'\n"
    },
    {
        "number": 1690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 3 6\n''') == '10'\nassert solution('''5\n3 2 5 4 10\n''') == '20'\nassert solution('''4\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 1691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2 3 5 8 11'\nassert solution('10 3') == '2 3 4 6 9 12 16 21 26 31'\n"
    },
    {
        "number": 1692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('124') == '4'\nassert solution('04') == '3'\nassert solution('5810438174') == '9'\n"
    },
    {
        "number": 1693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 2 1\n''') == '1 2 3 2 1'\nassert solution('''\n3\n10 6 8\n''') == '10 6 6'\n"
    },
    {
        "number": 1694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 1 3\") == \"RRR\"\nassert solution(\"4 1 1\") == \"XRX\"\nassert solution(\"10 1 3\") == \"XRX\"\nassert solution(\"10 1 1\") == \"XRX\"\nassert solution(\"10 1 1\") == \"XRX\"\n"
    },
    {
        "number": 1695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\nABCD\nABCE\n1 2 3 4\n''') == '16'\nassert solution('''3 3\nABC\nBCD\nCDE\n5 4 12\n''') == '21'\n"
    },
    {
        "number": 1696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 7 3\n1 2\n2 1\n5 5\n''') == '3'\nassert solution('''\n10 5 1\n3 3\n''') == '2'\nassert solution('''\n10 5 1\n3 3\n''') == '2'\nassert solution('''\n10 5 1\n3 3\n''') == '2'\nassert solution('''\n10 5 1\n3 3\n''') == '2'\n"
    },
    {
        "number": 1697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\nAAAA\nABCA\nAAAA\n\n''') == 'Yes'\nassert solution('''3 4\nAAAA\nABCA\nAADA\n\n''') == 'No'\nassert solution('''7 6\nAAAAAB\nABBBAB\nABAAAB\nABABBB\nABAAAB\nABBBAB\nAAAAAB\n\n''') == 'Yes'\nassert solution('''2 13\nABCDEFGHIJKLM\nNOPQRSTUVWXYZ\n\n''') == 'No'\n"
    },
    {
        "number": 1698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 3 4\n''') == '8'\nassert solution('''4 2\n50 100 50 100\n''') == '296'\nassert solution('''10 3\n2 2 2 2 2 2 2 2 2 2\n''') == '8'\n"
    },
    {
        "number": 1699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '3 4'\n"
    },
    {
        "number": 1700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n()\n\n''') == '11'\nassert solution('''\n4\n(())\n\n''') == '0101'\nassert solution('''\n10\n((()())())\n\n''') == '0110001111'\n"
    },
    {
        "number": 1701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\nmain 192.168.0.2\nreplica 192.168.0.1\nblock 192.168.0.1;\nproxy 192.168.0.2;\n''') == 'block 192.168.0.1; #replica\\nproxy 192.168.0.2; #main\\n'\nassert solution('''3 5\ngoogle 8.8.8.8\ncodeforces 212.193.33.27\nserver 138.197.64.57\nredirect 138.197.64.57;\nblock 8.8.8.8;\ncf 212.193.33.27;\nunblock 8.8.8.8;\ncheck 138.197.64.57;\n''') =='redirect 138.197.64.57; #server\\nblock 8.8.8.8; #google\\ncf 212.193.33.27; #codeforces\\nunblock 8.8.8.8; #google\\ncheck 138.197.64.57; #server\\n'\n"
    },
    {
        "number": 1702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 1703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n)\n()\n(\n''') == 2\nassert solution('''\n)\n()\n(\n''') == 4\nassert solution('''\n)\n()\n(\n''') == 4\nassert solution('''\n)\n()\n(\n''') == 4\nassert solution('''\n)\n()\n(\n''') == 4\n"
    },
    {
        "number": 1704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 7\n0000000''') == '8'\nassert solution('''2 5\n0010010\n0010010''') == '97'\nassert solution('''3 5\n0100001\n1001001\n1010011\n\nOutput\n-1''') == '-1'\n"
    },
    {
        "number": 1705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '3'\n"
    },
    {
        "number": 1706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abac') == 'R 2'\nassert solution('acccc') == 'L 4'\nassert solution('hannah') == '0'\n"
    },
    {
        "number": 1707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 1708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 5\n8 6 2 1 4 5 7 5\n6 3 3 2 6 2 3 2\n2 8\n1 4\n4 7\n3 4\n6 10\n''') == '36'\nassert solution('''\n6 6\n6 6 6 6 6 6\n6 66 666 6666 66666 666666\n1 6\n2 13\n3 6\n4 11\n5 6\n6 6\n''') == '11058'\nassert solution('''\n6 6\n6 6 6 6 6 6\n6 66 666 6666 66666 666666\n1 6\n2 13\n3 6\n4 11\n5 6\n6 6\n''') == '39996'\n"
    },
    {
        "number": 1709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 2\n0 0 0\n1 2\n3 4\n5 6\n''') == '10'\nassert solution('''3 2 2\n2 1 2\n1 3\n2 4\n3 5\n''') == '-1'\nassert solution('''3 2 3\n2 1 2\n1 3\n2 4\n3 5\n''') == '0'\n"
    },
    {
        "number": 1710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 1711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n''') == '6'\nassert solution('''3 5\n''') == '10'\nassert solution('''42 1337\n''') == '806066790'\nassert solution('''100000 200000\n''') == '707899035'\n"
    },
    {
        "number": 1712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"Vanya\"\nassert solution(\"2 1 1\") == \"Vova\"\n"
    },
    {
        "number": 1713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 1\n2 3 4 1\n''') == '3'\nassert solution('''\n4 3 3\n4 1 3 2\n''') == '0'\nassert solution('''\n3 1 3\n2 1 3\n''') == '-1'\n"
    },
    {
        "number": 1714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1 2'\nassert solution('2 1') == '3 2 1 4'\nassert solution('4 0') == '2 7 4 6 1 3 5 8'\n"
    },
    {
        "number": 1715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\") == \"350\"\nassert solution(\"1 2 3\") == \"1400\"\nassert solution(\"1 1 1\") == \"301\"\nassert solution(\"1 1 1\") == \"301\"\nassert solution(\"1 1 1\") == \"301\"\n"
    },
    {
        "number": 1716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\\n1 1\\n1 2\\n2 2\\n1 2\") == \"3\"\nassert solution(\"2 3 1\\n1 1\\n1 2\\n2 2\\n1 2\") == \"0\"\nassert solution(\"2 3 1\\n1 1\\n1 2\\n2 2\\n1 2\") == \"1\"\nassert solution(\"2 3 1\\n1 1\\n1 2\\n2 2\\n1 2\") == \"2\"\nassert solution(\"2 3 1\\n1 1\\n1 2\\n2 2\\n1 2\") == \"1\"\n"
    },
    {
        "number": 1717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '7'\nassert solution('5') == '7'\nassert solution('10') == '7'\nassert solution('15') == '7'\nassert solution('20') == '7'\n"
    },
    {
        "number": 1718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"8 3\") == \"1\"\n"
    },
    {
        "number": 1719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '61'\nassert solution('4') == '64'\nassert solution('5') == '65'\nassert solution('6') == '66'\nassert solution('7') == '67'\n"
    },
    {
        "number": 1720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 4\n....\n###.\n....\n1 1 3 1\n\n''') == '3'\nassert solution('''3 4 1\n....\n###.\n....\n1 1 3 1\n\n''') == '8'\nassert solution('''2 2 1\n.#\n"
    },
    {
        "number": 1721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"9\") == \"30\"\n"
    },
    {
        "number": 1722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\njorge\\njose\\noscar\\jerry\") == \"1\"\nassert solution(\"7\\nkambei\\gorobei\\shichiroji\\kyuzo\\heihachi\\katsushiro\\kikuchiyo\") == \"2\"\nassert solution(\"5\\nmike\\nmike\\nmike\\nmike\\nmike\") == \"4\"\n"
    },
    {
        "number": 1723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '-1'\nassert solution('8') == '1 2'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 1724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n8\n10\n''') == '3'\nassert solution('''\n5\n17 0 10 2 1\n11010\n''') == '27'\n"
    },
    {
        "number": 1725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 2 7') == '-1'\n"
    },
    {
        "number": 1726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n86400 86398\n''') == '2'\nassert solution('''\n2 86400\n0 86400\n''') == '1'\nassert solution('''\n2 86400\n86400 86398\n''') == '1'\nassert solution('''\n2 86400\n86400 86398\n''') == '2'\nassert solution('''\n2 86400\n86400 86398\n86400 86398\n''') == '2'\n"
    },
    {
        "number": 1727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n2 1\\n5 10\\n10 9\\n19 1\\n') == '3'\nassert solution('5\\n1 2\\n2 1\\n5 10\\n10 9\\n20 1\\n') == '4'\n"
    },
    {
        "number": 1728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 2 1 5\n2 1 1 1 1 1\n''') == '3'\nassert solution('''\n7\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n''') == '5'\n"
    },
    {
        "number": 1729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 4\n1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '0 1 0 1 0 0 0 0 0 0'\nassert solution('''7 4\n1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '2 2 2 0 0 0 0 0 0 0'\nassert solution('''7 4\n1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '0 0 0 0 0 0 0 0 0 0'\nassert solution('''7 4\n1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '2 3 2 1 0 0 0 0 0 0'\n"
    },
    {
        "number": 1730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n1 2\n2 3\n3 1\n''') == '3'\nassert solution('''\n4 6 3\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\n"
    },
    {
        "number": 1731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n''') == '5'\nassert solution('''10 1\n''') == '55'\nassert solution('''723 9\n''') == '157557417'\n"
    },
    {
        "number": 1732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '-1'\nassert solution('7') == '6237'\n"
    },
    {
        "number": 1733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 3\n1 2\n2 3\n''') == '5'\nassert solution('''3 1 3\n1 2\n1 3\n''') == '4'\nassert solution('''3 1 3\n1 2\n2 3\n''') == '4'\nassert solution('''3 1 3\n1 2\n2 3\n''') == '4'\nassert solution('''3 1 3\n1 2\n2 3\n''') == '4'\n"
    },
    {
        "number": 1734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '81'\nassert solution('5') == '91'\nassert solution('6') == '9'\nassert solution('7') == '9'\n"
    },
    {
        "number": 1735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"No\"\nassert solution(\"iiq\") == \"Yes\"\nassert solution(\"abba\") == \"No\"\n"
    },
    {
        "number": 1736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n3 1 2 1\n''') == '3'\nassert solution('''\n3 3\n2 2 3\n''') == '1'\nassert solution('''\n4 5\n3 1 2 1\n''') == '3'\nassert solution('''\n4 3\n2 2 3\n''') == '1'\nassert solution('''\n5 5\n3 1 2 1\n''') == '3'\n"
    },
    {
        "number": 1737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nabc 1\\n2\\nabc 3\\ncba 2\\n') == '1\\ncba 2\\n'\nassert solution('9\\ncodehorses 5\\n3\\nwebfrmk 6\\nmashadb 1\\nmashadb 2\\n') == '2\\nmashadb 3\\n'\nassert solution('3\\nabc 1\\n2\\nabc 3\\ncba 2\\n') == '1\\ncba 2\\n'\nassert solution('3\\nabc 1\\n2\\nabc 3\\ncba 2\\n') == '1\\ncba 2\\n'\nassert solution('3\\nabc 1\\n2\\nabc 3\\ncba 2\\n') == '1\\ncba 2\\n'\n"
    },
    {
        "number": 1738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aaaaaaaaaa''') == '3'\nassert solution('''abcab''') == '6'\nassert solution('''cczabababab''') == '7'\n"
    },
    {
        "number": 1739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 2\n''') == '8'\nassert solution('''3 3\n1 2 3\n''') == '27'\nassert solution('''4 5\n0 0 0 0\n''') == '1'\nassert solution('''2 2\n29 29\n''') == '73741817'\nassert solution('''3 3\n1 2 3\n''') == '1073741824'\n"
    },
    {
        "number": 1740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 4\n2 5\n3 1\n4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 4\n2 5\n3 1\n4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 4\n2 5\n3 1\n4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 4\n2 5\n3 1\n4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 4\n2 5\n3 1\n4 5\n''') == '3 1 4 2 5'\n"
    },
    {
        "number": 1741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.5'\nassert solution('3') == '-1'\nassert solution('2') == '0.625'\n"
    },
    {
        "number": 1742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2\n1 2''') == '1'\nassert solution('''3 3\n3 1 2\n1 2\n3 1\n3 2\n\n''') == '2'\nassert solution('''5 2\n3 1 5 4 2\n5 2\n5 4\n\n''') == '1'\n"
    },
    {
        "number": 1743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4\\n4 3 2 1\\n0 1 1 0') == '13'\nassert solution('7\\n8 5 7 6 1 8 9\\n2 7 9 5 4 3 1\\n2 3 3 4 1 1 3') == '44'\nassert solution('3\\n1 1 1\\n1 2 1\\n1 1 1') == '4'\nassert solution('3\\n1 1 1\\n1 2 1\\n1 1 1') == '4'\nassert solution('3\\n1 1 1\\n1 2 1\\n1 1 1') == '4'\n"
    },
    {
        "number": 1744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 15\n1 2 3 4 5 6 7\n''') == '0 0 0 0 0 2 3 \n\nassert solution('''\n5 100\n80 40 40 40 60\n''') == '0 1 1 2 3 \n\nassert solution('''\n6 100\n80 40 40 40 60 40\n''') == '0 1 1 2 3 4 \n\nassert solution('''\n7 100\n80 40 40 40 60 40 60\n''') == '0 1 1 2 3 4 5 \n\nassert solution('''\n5 100\n80 40 40 40 60 40 60\n''') == '0 1 1 2 3 4 5 "
    },
    {
        "number": 1745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n...\n..#\n...\n\n''') == '3'\nassert solution('''4 2\n..\n..\n..\n..\n\n''') == '2'\nassert solution('''4 5\n"
    },
    {
        "number": 1746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1\n1\n1\n\n''') == 'Yes'\n\nassert solution('''\n7\n1\n1\n1\n2\n2\n2\n\n''') == 'No'\n\nassert solution('''\n8\n1\n1\n1\n3\n3\n3\n\n''') == 'Yes'\n\nassert solution('''\n8\n1\n1\n1\n3\n3\n3\n\n''') == 'No'\n\nassert solution('''\n8\n1\n1\n1\n3\n3\n3\n\n''') == 'No'"
    },
    {
        "number": 1747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n1 2 3 4 5\n''') == '1 5'\nassert solution('''\n9 3\n6 5 1 2 3 2 1 4 5\n''') == '3 7'\nassert solution('''\n3 1\n1 2 3\n''') == '1 1'\n"
    },
    {
        "number": 1748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 10 5\n5 7 2\n''') == '5 12 4'\nassert solution('''\n5\n30 25 20 15 10\n9 10 12 4 13\n''') == '9 20 35 11 25'\n"
    },
    {
        "number": 1749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 4\\n3 4 2 3 1\\n3 2 3 4 1') == 'TRUTH'\nassert solution('4 2 4\\n1 1 1 1\\n1 1 1 1') == 'LIE'\nassert solution('3 1 2\\n1 2 3\\n3 1 2') == 'TRUTH'\nassert solution('4 2 4\\n1 1 1 1\\n1 1 1 1') == 'LIE'\nassert solution('5 2 4\\n1 1 1 1\\n1 1 1 1') == 'LIE'\n"
    },
    {
        "number": 1750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 1751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '16'\nassert solution('583291') == '135712853'\n"
    },
    {
        "number": 1752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 2 1'\nassert solution('3') == '10 20 30'\n"
    },
    {
        "number": 1753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == '2 4\\n3 4\\n1 4\\n5 4\\n1\\n5 1\\n'''\n\nassert solution('''\n3 1\n1 3\n''') == '1\\n1 1\\n1\\n2 2\\n1\\n3 1\\n'''\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'''\n\nassert solution('''\n3 1\n1 3\n''') == '1\\n1 1\\n1\\n2 2\\n1\\n3 1\\n'''\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'''"
    },
    {
        "number": 1754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3 1\n1 5 3 4 6 7 2\n1 3 1 2 1 2 3\n3\n''') == '1'\nassert solution('''8 4 4\n1 2 3 4 5 6 7 8\n4 3 2 1 4 3 2 1\n3 4 5 6\n''') == '2'\nassert solution('''7 3 1\n1 5 3 4 6 7 2\n1 3 1 2 1 2 3\n3\n''') == '1'\nassert solution('''8 4 4\n1 2 3 4 5 6 7 8\n4 3 2 1 4 3 2 1\n3 4 5 6\n''') == '2'\nassert solution('''7 3 1\n1 5 3 4 6 7 2\n1 3 1 2 1 2 3\n3\n''') == '1'\n"
    },
    {
        "number": 1755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 1 1 3 5 1\n3 5\n''') == '4'\nassert solution('''\n3 3\n1 3 2\n1 2 3\n''') == '-1'\nassert solution('''\n5 0\n4 3 1 2 3\n''') == '2'\n"
    },
    {
        "number": 1756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 1\n''') == '5'\nassert solution('''3 6\n3 3 3\n''') == '12'\nassert solution('''5 6\n4 2 3 1 3\n''') == '15'\n"
    },
    {
        "number": 1757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == 'OOOoOooO'\nassert solution('15') == 'OOOoOooOooooOoo'\n"
    },
    {
        "number": 1758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n010000\n000001\n''') == '1'\nassert solution('''\n8\n10101010\n01010101\n''') == '1'\nassert solution('''\n10\n1111100000\n0000011111\n''') == '5'\nassert solution('''\n10\n1111100000\n1111100001\n''') == '-1'\n"
    },
    {
        "number": 1759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '1 3 6 10 15'\nassert solution('4 2') == '7 8 13 21'\n"
    },
    {
        "number": 1760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nUUD\n''') == '5 6 3'\nassert solution('''10\nUUDUDUUDDU\n''') == '5 12 23 34 36 27 18 11 6 1'\n"
    },
    {
        "number": 1761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ni\nlove\nyou\n<3i<3love<23you<3\n''') == 'yes'\nassert solution('''\n7\ni\nam\nnot\nmain\nin\nthe\nfamily\n<3i<>3am<3the<3<main<3in<3the<3><3family<3\n''') == 'no'\nassert solution('''\n3\ni\nlove\nyou\n<3i<3love<23you<3\n''') == 'no'\nassert solution('''\n7\ni\nam\nnot\nmain\nin\nthe\nfamily\n<3i<>3am<3the<3<main<3in<3the<3><3family<3\n''') == 'no'\nassert solution('''\n3\ni\nlove\nyou\n<3i<3love<23you<3\n''') == 'no'\n"
    },
    {
        "number": 1762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6 7'\nassert solution('6 1') == '1000000001'\nassert solution('6 2') == '2000000001'\nassert solution('6 3') == '3000000001'\nassert solution('6 4') == '4000000001'\n"
    },
    {
        "number": 1763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 100 100\n1 3 8\n''') == '12'\nassert solution('''\n3 100 1 100\n1 3 8\n''') == '9'\nassert solution('''\n5 1 2 4\n5 5 3 6 5\n''') == '4'\nassert solution('''\n5 1 2 2\n5 5 3 6 5\n''') == '3'\n"
    },
    {
        "number": 1764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 1\n''') == '2'\nassert solution('''4\n1 2 1 2\n''') == '0'\nassert solution('''8\n2 1 2 1 1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 1765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '4'\nassert solution('1 2 3 4 5') == '2 4'\nassert solution('1 2 3 4 5 6') == '2 4'\nassert solution('1 2 3 4 5 6 7') == '2 4'\n"
    },
    {
        "number": 1766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 1 2 10\n''') == '12 5'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '16 12'\n"
    },
    {
        "number": 1767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 3 2\\n2 3 3 12 1\\n') == '22'\nassert solution('10\\n13 2 7 11 8 4 9 8 5 1\\n5 7 18 9 2 3 0 11 8 6\\n') == '46'\n"
    },
    {
        "number": 1768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nkoyomi\n3\n1 o\n4 o\n4 m\n\n''') == '3'\nassert solution('''\n15\nyamatonadeshiko\n10\n1 a\n2 a\n3 a\n4 a\n5 a\n1 b\n2 b\n3 b\n4 b\n5 b\n\n''') == '10'\nassert solution('''\n10\naaaaaaaaaa\n2\n10 b\n10 z\n\n''') == '10'\n"
    },
    {
        "number": 1769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\\n1\") == \"2 1\"\nassert solution(\"2\\n1\") == \"1 3 4 2\"\n"
    },
    {
        "number": 1770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4 5 2\n5 1 3 4\n20 4 19 3\n''') == '4'\nassert solution('''\n10 4 5 2\n5 1 3 4\n20 4 19 3\n''') == '-1'\nassert solution('''\n10 4 5 2\n5 1 3 4\n20 4 19 3\n''') == '5'\nassert solution('''\n10 4 5 2\n5 1 3 4\n20 4 19 3\n''') == '-1'\nassert solution('''\n10 4 5 2\n5 1 3 4\n20 4 19 3\n''') == '5'\n"
    },
    {
        "number": 1771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 2\n-2 1\n2 1\n3 -1\n5 -1\n7 -1\n''') == '4'\nassert solution('''\n4 10 1\n-20 1\n-10 -1\n0 1\n10 -1\n''') == '1'\n"
    },
    {
        "number": 1772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 2 7') == '2'\nassert solution('6\\n2 2 6 8 6 12') == '0'\nassert solution('3\\n11 4 10') == '1'\n"
    },
    {
        "number": 1773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n-1 5\n1 5''') == '10'\nassert solution('''3\n1 9\n3 5\n7 10''') == '9'\nassert solution('''3\n1 9\n3 5\n7 10''') == '9'\n"
    },
    {
        "number": 1774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HHHH\") == \"Yes\"\nassert solution(\"HQHQH\") == \"No\"\nassert solution(\"HHQHHQH\") == \"No\"\nassert solution(\"HHQQHHQQHH\") == \"Yes\"\n"
    },
    {
        "number": 1775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 4\\n4 0\\n1 2\\n2 1\\n0 2\\n1 3\") == \"2 2\"\nassert solution(\"3 2 4\\n1 2\\n1 3\\n2 2\\n\") == \"1 3\"\nassert solution(\"3 2 4\\n1 2\\n1 3\\n2 2\\n\") == \"1 3\"\nassert solution(\"3 2 4\\n1 2\\n1 3\\n2 2\\n\") == \"1 3\"\nassert solution(\"3 2 4\\n1 2\\n1 3\\n2 2\\n\") == \"1 3\"\n"
    },
    {
        "number": 1776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(1?1)''') == '2'\nassert solution('''(2?(1?2))''') == '1'\nassert solution('''((1?(5?7))?((6?2)?7))''') == '18'\nassert solution('''((1?(5?7))?((6?2)?7))''') == '16'\n"
    },
    {
        "number": 1777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n)\n)\n((\n((\n(\n)\n)\n\nOutput\n2\n\nInput\n4\n(\n((\n(((\n(())\n\nOutput\n0\n\nInput\n2\n(())\n()\n\nOutput\n1\n''') == '2')\n"
    },
    {
        "number": 1778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 4\n5 1\n''') == '0'\nassert solution('''\n3\n100 100 100\n100 100 100\n''') == '0'\nassert solution('''\n2\n2 1\n5 6\n''') == '-3'\n"
    },
    {
        "number": 1779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('qwertyuiopasdfghjklzxcvbnm') == 'HelloVKCup2017'\nassert solution('veamhjsgqocnrbfxdtwkylupzi') == 'TwccpQZAvb2017'\nassert solution('TwccpQZAvb2017') == '7uduGUDUUDUgudu7'\nassert solution('7abaCABAABAcaba7') == '7uduGUDUUDUgudu7'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 1780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 1781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solutionP"
    },
    {
        "number": 1782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 3') == '3 1 2 1 1 2 3 2 2 3 1'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 1783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 4 7\n''') == '9.0000000000'\nassert solution('''1 1\n10\n''') == '10.0000000000'\nassert solution('''8 2\n1 2 4 100000 123 456 789 1\n''') == '28964.2857142857'\n"
    },
    {
        "number": 1784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n5 2\n3 2 4 1 3\n''') == 'NO'\nassert solution('''\n5 4\n3 2 4 3 5\n''') == 'YES'\nassert solution('''\n5 4\n3 2 4 3 5\n''') == 'NO'\nassert solution('''\n5 4\n3 2 4 3 5\n''') == 'YES'\n"
    },
    {
        "number": 1785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 1786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 4\nH 2\nV 2\nV 3\nV 1''') == '8'\nassert solution('''7 6 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '28'\nassert solution('''5 5 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '16'\nassert solution('''5 5 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '12'\nassert solution('''5 5 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '6'\n"
    },
    {
        "number": 1787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abbaa''') == '5'\nassert solution('''baaaa''') == '4'\nassert solution('''agaa''') == '3'\n"
    },
    {
        "number": 1788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 -2') == '0 2'\nassert solution('1 -2') == '0 1'\nassert solution('-1 -2') == '1 1'\nassert solution('-1 -1') == '0 0'\nassert solution('-1 -1') == '1 1'\n"
    },
    {
        "number": 1789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 5\") == \"1\"\nassert solution(\"2 2 1 5\") == \"1\"\nassert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"2 4 1 5\") == \"1\"\nassert solution(\"2 5 1 5\") == \"1\"\n"
    },
    {
        "number": 1790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n''') == '1 4 \n\nassert solution('''\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n''') == '1 4 \n\nassert solution('''\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n''') == '1 4 \n\nassert solution('''\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n''') == '1 4 \n\nassert solution('''\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n''') == '1 4 "
    },
    {
        "number": 1791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABRACADABRA\") == \"3\"\nassert solution(\"ABBBCBDB\") == \"3\"\nassert solution(\"AB\") == \"1\"\n"
    },
    {
        "number": 1792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 7\n1 2\n2 3\n3 4\n4 6\n6 5\n4 4\n3 6\n4 2 7 3\n1 10 2\n3 8 2\n5 1 0\n6 5 4\n3 7\n5 2\n''') == '12'\nassert solution('''\n6 7\n1 2\n2 3\n3 4\n4 6\n6 5\n4 4\n3 6\n4 2 7 3\n1 10 2\n3 8 2\n5 1 0\n6 5 4\n3 7\n5 2\n''') == '12'\nassert solution('''\n6 7\n1 2\n2 3\n3 4\n4 6\n6 5\n4 4\n3 6\n4 2 7 3\n1 10 2\n3 8 2\n5 1 0\n6 5 4\n3 7\n5 2\n''') == '12'\nassert solution('''\n6 7\n1 2\n2 3\n3 4\n4 6\n6 5\n4 4\n3 6\n4 2 7 3\n1 10 2\n3 8 2\n5 1 0\n6 5 4\n3 7\n5 2\n''') == '12'\nassert solution('''\n6 7\n1 2\n2 3\n3 4\n4 6\n6 5\n4 4\n3 6\n4 2 7 3\n1 10 2\n3 8 2\n5 1 0\n6 5 4\n3 7\n5 2\n''') == '12'\n"
    },
    {
        "number": 1793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 3\n1 2 3\n1 1\n''') == '3'\nassert solution('''\n3 3 6\n1 2 3\n1 1\n''') == '2'\nassert solution('''\n1 1 10000\n10001\n''') == '-1'\n"
    },
    {
        "number": 1794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 4') == '6'\nassert solution('5 2 3 5 5') == '17'\n"
    },
    {
        "number": 1795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 5 1 3\n''') == 'YES'\nassert solution('''5\n5 5 5 5 1\n''') == 'NO'\n"
    },
    {
        "number": 1796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n++X\\n') == '1'\nassert solution('2\\nX++\\n--X\\n') == '0'\n"
    },
    {
        "number": 1797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 3\n''') == '9'\nassert solution('''5\n1 5 4 3 2\n''') == '17'\n"
    },
    {
        "number": 1798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n''') == '1 2'\nassert solution('''\n8\n1 2 1 3 1 2 1 5\n''') == '4 1 2'\nassert solution('''\n1\n2\n''') == '1 2'\nassert solution('''\n8\n1 2 1 3 1 2 1 5\n''') == '4 1 2'\nassert solution('''\n1\n2\n''') == '1 2'\n"
    },
    {
        "number": 1799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n20 1000\n32 37\n40 1000\n45 50\n16 16\n16 16\n14 1000\n2 1000\n''') == '3'\nassert solution('''\n7\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n5 5\n''') == '2'\nassert solution('''\n7\n14000000003 1000000000000000000\n81000000000 88000000000\n5000000000 7000000000\n15000000000 39000000000\n46000000000 51000000000\n0 1000000000\n0 0\n''') == '2'\n"
    },
    {
        "number": 1800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n1 2 3\n2 2\n\"\"\") == \"2 1 3\"\nassert solution(\"\"\"\n4 2\n1 2 4 3\n2 3\n1 2\n\"\"\") == \"2 4 1 3\"\n"
    },
    {
        "number": 1801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 1802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n-3 -4 -2 -3 3') == '2 -3 1'\nassert solution('5\\n2 -3 -1 -4 3') == '1 -4 2'\n"
    },
    {
        "number": 1803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '12'\nassert solution('10') == '12'\nassert solution('10 10 10 10 10') == '12'\nassert solution('5') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 1804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '6'\nassert solution('''\n10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '2'\nassert solution('''\n10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '4'\nassert solution('''\n10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '4'\nassert solution('''\n10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '4'\n"
    },
    {
        "number": 1805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n5\n8\n11\n''') == '1'\nassert solution('''\n4\n2\n5\n8\n11\n''') == '0'\nassert solution('''\n4\n2\n5\n8\n11\n''') == '1'\nassert solution('''\n4\n2\n5\n8\n11\n''') == '0'\nassert solution('''\n4\n2\n5\n8\n11\n''') == '1'\n"
    },
    {
        "number": 1806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 3\n2 4\n1 3\n1 4\n3 4\n''') == '1'\nassert solution('''\n3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n''') == '1'\nassert solution('''\n3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n''') == '1'\nassert solution('''\n3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n''') == '1'\nassert solution('''\n3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n''') == '1'\n"
    },
    {
        "number": 1807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '12'\nassert solution('10 15') == '39'\n"
    },
    {
        "number": 1808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 2\n3 6 7 10\n''') == '13'\nassert solution('''\n5 2 1\n100 100 100 100 100\n''') == '302'\n"
    },
    {
        "number": 1809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n1 2 3\n1 3 2 3 1\n''') == '12'\nassert solution('''\n3 5\n1 2 3\n1 3 2 3 1\n''') == '12'\nassert solution('''\n3 5\n1 2 3\n1 3 2 3 1\n''') == '12'\nassert solution('''\n3 5\n1 2 3\n1 3 2 3 1\n''') == '12'\nassert solution('''\n3 5\n1 2 3\n1 3 2 3 1\n''') == '12'\n"
    },
    {
        "number": 1810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n10\n''') == '10'\nassert solution('''\n100\n''') == '100'\nassert solution('''\n1000\n''') == '1000'\nassert solution('''\n10000\n''') == '10000'\n"
    },
    {
        "number": 1811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"7 3\") == \"NO\"\n"
    },
    {
        "number": 1812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '1'\nassert solution('4857') == '5'\n"
    },
    {
        "number": 1813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 2') == '3'\nassert solution('7 2 2') == '-1'\nassert solution('7 2 2') == '-1'\nassert solution('7 2 2') == '-1'\nassert solution('7 2 2') == '-1'\n"
    },
    {
        "number": 1814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n''') == '7'\nassert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n''') == '5'\nassert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n''') == '4'\nassert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n''') == '3'\nassert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n''') == '2'\n"
    },
    {
        "number": 1815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n13\n1 1 1 2 2 2 3 3 3 4 4 4 5\n''') == '13'\nassert solution('''\n5\n10 100 20 200 1\n''') == '5'\nassert solution('''\n6\n1 1 1 2 2 2\n''') == '6'\nassert solution('''\n7\n3 2 1 1 4 5 1\n''') == '5'\n"
    },
    {
        "number": 1816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2\n''') == '3'\nassert solution('''5\n1 3 5 4 2\n''') == '10'\n"
    },
    {
        "number": 1817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 1 3\n''') == '2'\nassert solution('''\n3\n2 2 2\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 1818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 4\n''') == '3'\nassert solution('''\n3\n5 3 1\n''') == '1'\n"
    },
    {
        "number": 1819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n4 2\n69 6\n''') == '12'\nassert solution('''\n3 1\n4 2\n69 6\n''') == '4'\nassert solution('''\n3 1\n4 2\n69 6\n''') == '2'\nassert solution('''\n3 1\n4 2\n69 6\n''') == '2'\nassert solution('''\n3 1\n4 2\n69 6\n''') == '2'\n"
    },
    {
        "number": 1820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '2 3 6'\nassert solution('''\n3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '1 2 3'\nassert solution('''\n3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '-1'\nassert solution('''\n3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '1 2 3'\nassert solution('''\n3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '1 2 3'\n"
    },
    {
        "number": 1821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 4 5') == '4'\nassert solution('6\\n62 22 60 61 48 49') == '5'\nassert solution('10\\n1 2 4 5 6 8 9 10') == '8'\nassert solution('10\\n1 2 4 5 6 8 9 10 11 12') == '9'\nassert solution('10\\n1 2 4 5 6 8 9 10 11 12 13 14') == '10'\n"
    },
    {
        "number": 1822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '2'\nassert solution('6 2') == '5'\nassert solution('4 1') == '1'\nassert solution('6 2') == '3'\nassert solution('4 2') == '4'\n"
    },
    {
        "number": 1823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3') == '3'\nassert solution('7 3') == '1'\n"
    },
    {
        "number": 1824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 5 8 123 7\\n123 7 5 1\\n5 1 7') == '8\\n123'\nassert solution('6\\n1 4 3 3 5 7\\n3 7 5 4 3\\n4 3 7 5') == '1\\n3'\n"
    },
    {
        "number": 1825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n''') == 'abacaba'\nassert solution('''\na 1 3\nab 2 1 5\nca 1 4\n''') == 'aaa'\nassert solution('''\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n''') == 'ababab'\nassert solution('''\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n''') == 'abacaba'\nassert solution('''\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n''') == 'abacaba'\n"
    },
    {
        "number": 1826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nRURURU\n''') == '3'\nassert solution('''17\nUUURRRRRUUURURUUU\n''') == '13'\n"
    },
    {
        "number": 1827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2 4 5 3\n''') == '1 5\\n2 4\\n3 3\\n'\nassert solution('''\n3\n1 1 1 2 2 2\n''') == '1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n2 1\\n1"
    },
    {
        "number": 1828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 0\n0 1\n1 1\n1 2\n2 2\n2 0\n0 0\n''') == '1'\nassert solution('''\n16\n1 1\n1 5\n3 5\n3 7\n2 7\n2 9\n6 9\n6 7\n5 7\n5 3\n4 3\n4 4\n3 4\n3 2\n5 2\n5 1\n1 1\n''') == '6'\n"
    },
    {
        "number": 1829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\npolandball\nis\na\ncool\ncharacter\nnope\n\nOutput\nYES\nInput\n2 2\nkremowka\nwadowicka\nkremowka\nwiedenska\n\nOutput\nYES\nInput\n1 2\na\na\nb\n\nOutput\nNO\n''') == 'YES'\n"
    },
    {
        "number": 1830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1\n3 1\n2 2\n''') == '4 2 0'\nassert solution('''5 2\n1 5\n5 1\n''') == '16 9'\nassert solution('''100000 1\n300 400\n''') == '9999800001'\n"
    },
    {
        "number": 1831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'yes'\nassert solution('6 5') == 'no'\n"
    },
    {
        "number": 1832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'aeren'\nassert solution('''\n4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'ari'\nassert solution('''\n4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'arousal'\nassert solution('''\n4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'around'\nassert solution('''\n4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'arou'\n"
    },
    {
        "number": 1833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == '3'\nassert solution('''\n5\n2 2 1 22 14\n''') == '13'\n"
    },
    {
        "number": 1834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2 1') == '1 2 1 2'\nassert solution('5') == '1 5 2 3 2'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\nassert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 1835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1'\nassert solution('''\n2\n1\n1\n''') == '2'\nassert solution('''\n2\n2\n2\n''') == '2'\nassert solution('''\n3\n2\n2\n''') == '2'\nassert solution('''\n4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '2'\n"
    },
    {
        "number": 1836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 6') == '9'\nassert solution('4 6') == '12'\nassert solution('8 5') == '9'\nassert solution('4 5') == '12'\nassert solution('5 5') == '12'\n"
    },
    {
        "number": 1837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 3 4 2') == '3'\nassert solution('5\\n0 1 3 4 2') == '3'\nassert solution('5\\n0 1 3 4 2') == '3'\nassert solution('5\\n0 1 3 4 2') == '3'\nassert solution('5\\n0 1 3 4 2') == '3'\n"
    },
    {
        "number": 1838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n''') == 'YES'\nassert solution('''8 6 5\nhi welcome hello ihateyou goaway dog cat rat\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n''') == 'YES'\nassert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n''') == 'NO'\nassert solution('''8 6 5\nhi welcome hello ihateyou goaway dog cat rat\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n''') == 'NO'\n"
    },
    {
        "number": 1839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1\n1 2\n2 1\n2 2\n''') == '1 4'\nassert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '1'\n"
    },
    {
        "number": 1840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n''') == '1 9 11 9 11'\nassert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n''') == '1 9 11 9 11'\nassert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n''') == '1 9 11 9 11'\nassert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n''') == '1 9 11 9 11'\nassert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n''') == '1 9 11 9 11'\n"
    },
    {
        "number": 1841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('''\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('''\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('''\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\nassert solution('''\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n"
    },
    {
        "number": 1842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 30 200') == '-10.000000000000000 -20.000000000000000'\nassert solution('1 -30 200') == '-10.000000000000000 20.000000000000000'\nassert solution('1 -30 -200') == '-10.000000000000000 -20.000000000000000'\nassert solution('1 -30 -200') == '-10.000000000000000 -20.000000000000000'\nassert solution('1 -30 -200') == '-10.000000000000000 -20.000000000000000'\n"
    },
    {
        "number": 1843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '-4'\nassert solution('4') == '499999998352516354'\n"
    },
    {
        "number": 1844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 6 15\n''') == '3'\nassert solution('''\n3\n2 4 6\n''') == '-1'\nassert solution('''\n7\n30 60 21 42 70 15 30\n''') == '3'\n"
    },
    {
        "number": 1845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '14'\nassert solution('''4\n4 2 4 4\n''') == '14'\nassert solution('''5\n2 4 2 3 7\n''') == '18'\n"
    },
    {
        "number": 1846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n-1 1 -2 1\n''') == '1'\nassert solution('''5\n0 -1 1 2 -5\n''') == '2'\nassert solution('''6\n-1 1 -2 1\n''') == '1'\nassert solution('''7\n0 -1 1 2 -5\n''') == '2'\nassert solution('''8\n-1 1 -2 1\n''') == '1'\n"
    },
    {
        "number": 1847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 6 11') == '4'\nassert solution('3 4 3 10') == '6'\nassert solution('1 1 2 10') == '-1'\n"
    },
    {
        "number": 1848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '2'\nassert solution('10') == '9'\nassert solution('20') == '19'\nassert solution('30') == '28'\n"
    },
    {
        "number": 1849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '180 10'\n"
    },
    {
        "number": 1850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 1851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9\n1 3 3 6 7 6 8 8 9\n''') == '4'\nassert solution('''\n10\n1 3 3 6 7 6 8 8 9\n''') == '5'\nassert solution('''\n10\n1 3 3 6 7 6 8 8 9\n''') == '4'\nassert solution('''\n10\n1 3 3 6 7 6 8 8 9\n''') == '5'\nassert solution('''\n10\n1 3 3 6 7 6 8 8 9\n''') == '4'\n"
    },
    {
        "number": 1852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '0'\nassert solution('''\n3\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '2'\nassert solution('''\n4\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '0'\n"
    },
    {
        "number": 1853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 0\n''') == 'NO'\nassert solution('''\n3 1\n1 2\n''') == 'YES'\nassert solution('''\n4 3\n1 2\n1 3\n2 4\n''') == 'YES'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n1 5\n2 4\n2 5\n''') == 'NO'\n"
    },
    {
        "number": 1854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"YES 2\\n2\\n1 2\\n2 3\\n4 2\\n5 2\"\nassert solution(\"5\\n1 4 1 1 1\\n\") == \"YES 2\\n4\\n1 2\\n3 2\\n4 2\\n5 2\"\nassert solution(\"3\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 1855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '5 2'\nassert solution('5 5') == '15 1'\nassert solution('7 3') == '18 6'\n"
    },
    {
        "number": 1856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\na\nb\nab\nd\n\n''') == '2'\nassert solution('''\n3\nab\nbc\nabc\n\n''') == '1'\nassert solution('''\n1\ncodeforces\n\n''') == '1'\n"
    },
    {
        "number": 1857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '120'\n"
    },
    {
        "number": 1858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'No'\nassert solution('3') == 'Yes'\nassert solution('2') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 1859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 1860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('5') == '9'\nassert solution('6') == '10'\n"
    },
    {
        "number": 1861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nSET\nETS\nTSE\n''') == '1'\nassert solution('''3 4\nSETE\nETSE\nTSES\n''') == '0'\nassert solution('''5 4\nSETT\nTEST\nEEET\nESTE\nSTES\n''') == '2'\n"
    },
    {
        "number": 1862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n3\n2 1 1 3 2 3\n''') == '2'\n"
    },
    {
        "number": 1863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 999') == 'AG'\nassert solution('2 999') == 'AGA'\nassert solution('3 999') == 'AGA'\nassert solution('4 999') == 'AGA'\nassert solution('5 999') == 'AGA'\n"
    },
    {
        "number": 1864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '-1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '-1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '-1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '-1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '-1'\n"
    },
    {
        "number": 1865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 5 1 4') == '2 0 3'\nassert solution('6 10 20 20 40 60 60') == '0'\nassert solution('10 20 20 40 60 60') == '1 0'\nassert solution('101 100') == '1 0 1'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 1866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == '1 2'\nassert solution('''4\n''') == '2 1 3 4'\n"
    },
    {
        "number": 1867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 2 2 1\\n') == '1 5'\nassert solution('6\\n1 2 2 3 1 2\\n') == '2 3'\nassert solution('10\\n1 2 2 3 1 2 3 1 2\\n') == '1 5'\n"
    },
    {
        "number": 1868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 2\n1\n\nOutput\n6\n\nInput\n9 2 26\n2 3\n\nOutput\n150352234\n\nInput\n12 3 1\n2 5 6\n\nOutput\n1''') == '1'\nassert solution('''3 1 2\n1\n\nOutput\n6\n\nInput\n9 2 26\n2 3\n\nOutput\n150352234\n\nInput\n12 3 1\n2 5 6\n\nOutput\n1''') == '1'\nassert solution('''3 1 2\n1\n\nOutput\n6\n\nInput\n9 2 26\n2 3\n\nOutput\n150352234\n\nInput\n12 3 1\n2 5 6\n\nOutput\n1''') == '1'\nassert solution('''3 1 2\n1\n\nOutput\n6\n\nInput\n9 2 26\n2 3\n\nOutput\n150352234\n\nInput\n12 3 1\n2 5 6\n\nOutput\n1''') == '1'\nassert solution('''3 1 2\n1\n\nOutput\n6\n\nInput\n9 2 26\n2 3\n\nOutput\n150352234\n\nInput\n12 3 1\n2 5 6\n\nOutput\n1''') == '1'\n"
    },
    {
        "number": 1869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 1 1\n''') == '2'\nassert solution('''\n5\n1 0 1 0 1\n''') == '3'\n"
    },
    {
        "number": 1870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 5\n1 3 8 14 19 20\n''') == '3'\nassert solution('''6 1\n1 3 5 7 9 10\n''') == '2'\n"
    },
    {
        "number": 1871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n4 1\n''') == '11'\nassert solution('''\n4 2\n5 1 2 1\n''') == '10'\nassert solution('''\n3 3\n1 1 1\n''') == '6'\n"
    },
    {
        "number": 1872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 10') == '108.395919545675'\nassert solution('1 2') == '1.5'\nassert solution('1 2 3') == '1.5'\nassert solution('1 2 3 4') == '1.5'\nassert solution('1 2 3 4 5') == '1.5'\n"
    },
    {
        "number": 1873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n2 1 3 1\n''') == '5'\nassert solution('''7 4\n4 2 3 1 2 4 3\n''') == '18'\n"
    },
    {
        "number": 1874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 3') == '38.546168065709'\nassert solution('1 1 1') == '1.0'\nassert solution('1 1 1.1') == '1.1'\nassert solution('1 1 1.01') == '1.01'\nassert solution('1 1 1.001') == '1.001'\n"
    },
    {
        "number": 1875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0\\n0 4\\n4 0\\n4 4\\n2 3\\n') == '16.000000'\nassert solution('5\\n0 0\\n0 4\\n4 0\\n4 4\\n2 3\\n') == '16.000000'\nassert solution('5\\n0 0\\n0 4\\n4 0\\n4 4\\n2 3\\n') == '16.000000'\nassert solution('5\\n0 0\\n0 4\\n4 0\\n4 4\\n2 3\\n') == '16.000000'\nassert solution('5\\n0 0\\n0 4\\n4 0\\n4 4\\n2 3\\n') == '16.000000'\n"
    },
    {
        "number": 1876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 1\n2 3 1\n3 4 1\n''') == '252'\nassert solution('''4 6\n1 2 0\n1 3 0\n1 4 0\n''') == '0'\nassert solution('''3 5\n1 2 1\n2 3 0\n\n''') == '210'\n"
    },
    {
        "number": 1877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 1878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1 2 3\n2 2 3 3\n''') == '10'\nassert solution('''\n2\n1 1 3 3\n1 1 3 3\n''') == '18'\n"
    },
    {
        "number": 1879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 0 0 1 1\") == \"4\"\nassert solution(\"10 5 3 3 6\") == \"-1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 1880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12345') == '71232'\nassert solution('1234') == '71232'\nassert solution('123') == '71232'\nassert solution('12') == '71232'\nassert solution('1') == '71232'\n"
    },
    {
        "number": 1881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"0 12 3 3\"\nassert solution(\"5 2\") == \"0 1 1 254 254\"\n"
    },
    {
        "number": 1882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 300\n3 100\n4 150\n4 80\n2 90\n2 300''') == '2'\nassert solution('''2 100\n1 787\n2 788''') == '0'\nassert solution('''2 100\n2 42\n2 58''') == '2'\n"
    },
    {
        "number": 1883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 0 0 0 1\n0 1 2 3 4\n''') == '5'\nassert solution('''\n5\n0 0 1 0 1\n0 1 2 2 4\n''') == '2'\nassert solution('''\n4\n1 0 0 0\n2 3 4 2\n''') == '1'\nassert solution('''\n4\n1 0 1 0\n2 3 4 2\n''') == '1'\nassert solution('''\n3\n1 0 0\n2 3 4\n''') == '1'\n"
    },
    {
        "number": 1884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 16\n3 5 2 9 8 7\n''') == 'Yes'\nassert solution('''\n4 11 32\n5 5 16 16\n''') == 'No'\nassert solution('''\n5 12 20\n7 8 4 11 9\n''') == 'No'\n"
    },
    {
        "number": 1885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '29'\nassert solution('10') == '10'\nassert solution('15') == '10'\nassert solution('20') == '10'\n"
    },
    {
        "number": 1886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ApPLe') == 'ApPLe'\nassert solution('konjac') == 'Konjac'\n"
    },
    {
        "number": 1887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n9 3 5 7 3\n5 8 1 4 5\n''') == '29'\nassert solution('''3\n1 2 9\n10 1 1\n''') == '19'\nassert solution('''1\n7\n4\n''') == '7'\n"
    },
    {
        "number": 1888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '10'\nassert solution('3 0') == '0'\nassert solution('4 3') == '0'\n"
    },
    {
        "number": 1889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 5\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 0 0 0\\n1 1\\n1 4\\n1 1\\n4 2\\n4 3\") == \"3\"\nassert solution(\"5 4 5\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 0 0 0\\n1 1\\n1 4\\n1 1\\n4 2\\n4 3\") == \"4\"\nassert solution(\"5 4 5\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 0 0 0\\n1 1\\n1 4\\n1 1\\n4 2\\n4 3\") == \"3\"\nassert solution(\"5 4 5\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 0 0 0\\n1 1\\n1 4\\n1 1\\n4 2\\n4 3\") == \"4\"\nassert solution(\"5 4 5\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 0 0 0\\n1 1\\n1 4\\n1 1\\n4 2\\n4 3\") == \"3\"\n"
    },
    {
        "number": 1890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1256') == '4'\nassert solution('13990') == '528'\nassert solution('555') == '63'\n"
    },
    {
        "number": 1891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1 2\n1 3\n''') == '6'\nassert solution('''\n3 2 1 2\n1 7\n''') == '8'\nassert solution('''\n3 3 1 2\n1 7\n''') == '8'\nassert solution('''\n3 3 1 2\n1 7\n''') == '8'\nassert solution('''\n3 3 1 2\n1 7\n''') == '8'\n"
    },
    {
        "number": 1892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ns\nf\nf\ns\n''') == '1'\nassert solution('''\nf\ns\nf\ns\n''') == '2'\nassert solution('''\nf\ns\nf\ns\n''') == '2'\nassert solution('''\nf\ns\nf\ns\n''') == '2'\nassert solution('''\nf\ns\nf\ns\n''') == '2'\n"
    },
    {
        "number": 1893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 1000000') == '1011.060722383550382782399454922040'\nassert solution('1000000 1000000') == '1011.060722383550382782399454922040'\nassert solution('1000000 1000000') == '1011.060722383550382782399454922040'\nassert solution('1000000 1000000') == '1011.060722383550382782399454922040'\nassert solution('1000000 1000000') == '1011.060722383550382782399454922040'\n"
    },
    {
        "number": 1894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '14'\nassert solution('4 10') == '42'\nassert solution('2 2') == 'Never'\n"
    },
    {
        "number": 1895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1\n2 motarack\n2 mike\n1\n2 light\n''') == '2'\nassert solution('''\n4 3\n1\n2 alice\n2 bob\n2 tanyaromanova\n''') == '1'\n"
    },
    {
        "number": 1896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '19'\nassert solution('3') == '19'\nassert solution('4') == '19'\nassert solution('5') == '19'\n"
    },
    {
        "number": 1897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('IEAIAIO') == '28.0000000'\nassert solution('BYOB') == '5.8333333'\nassert solution('YISVOWEL') == '17.0500000'\n"
    },
    {
        "number": 1898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'I hate it'\nassert solution('2') == 'I hate that I love it'\nassert solution('3') == 'I hate that I love that I hate it'\n"
    },
    {
        "number": 1899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 2 2') == '2'\nassert solution('5 3 3 5') == '1'\nassert solution('5 2 1 1') == '1'\nassert solution('5 4') == '-1'\nassert solution('5 5 2 1 1') == '1'\n"
    },
    {
        "number": 1900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9 10') == '12'\nassert solution('1 2 3 1') == '1'\nassert solution('3 2 10') == '0'\n"
    },
    {
        "number": 1901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 5 3 4 8\n1 4\n4 5\n''') == '10'\nassert solution('''10 0\n1 2 3 4 5 6 7 8 9 10\n''') == '55'\nassert solution('''10 5\n1 6 2 7 3 8 4 9 5 10\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '15'\n"
    },
    {
        "number": 1902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('snowboarding, thunder, thunder') == '25'\nassert solution('co-co-co, codeforces?!') == '141'\nassert solution('thun-thun-thunder, thunder, thunder') == '183'\n"
    },
    {
        "number": 1903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 8') == '8'\nassert solution('4 3 12') == '11'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 1904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'hhardh'\nassert solution('8') == 'hhzarwde'\nassert solution('6') == 'hhaarr'\n"
    },
    {
        "number": 1905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 6') == '8 2'\nassert solution('3 3 2') == '0 0 0'\n"
    },
    {
        "number": 1906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n''') == '2'\nassert solution('''\n10\n''') == '1'\nassert solution('''\n100\n''') == '0'\nassert solution('''\n1000\n''') == '1'\nassert solution('''\n10000\n''') == '2'\n"
    },
    {
        "number": 1907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 6\n0 4 1\n2 -1 3\n1 -2 1\n4 -1 1\n''') == '138.23007676'\nassert solution('''\n8\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n''') == '289.02652413'\n'''\n"
    },
    {
        "number": 1908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 1\n1 2\n2 3\n1 3\n''') == 'ALIVE'\nassert solution('''4 4\n1 2 0 1\n1 3\n1 2\n2 3\n2 4\n''') == 'ALIVE'\nassert solution('''5 5\n1 1 1 2 1\n3 4\n1 2\n2 3\n4 5\n4 5\n''') == 'ALIVE'\nassert solution('''6 6\n1 1 1 2 1\n3 4\n1 2\n2 3\n4 5\n4 5\n5 4\n5 4\n''') == 'DEAD'\n"
    },
    {
        "number": 1909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '1'\nassert solution('10 5') == '3'\n"
    },
    {
        "number": 1910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '24'\nassert solution('4') == '24'\nassert solution('5') == '24'\nassert solution('6') == '24'\nassert solution('7') == '24'\n"
    },
    {
        "number": 1911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3\n4 8 15 16 23 42''') == '12'\nassert solution('''4 4\n1 3 3 7''') == '0'\nassert solution('''8 1\n1 1 2 3 5 8 13 21''') == '20'\n"
    },
    {
        "number": 1912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"0 1 1 1\") == \"Yes\"\nassert solution(\"8 1 9 3\") == \"Yes\"\nassert solution(\"0 0 0 0\") == \"Yes\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000\") == \"Yes\"\n"
    },
    {
        "number": 1913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 10 1\n''') == '50'\nassert solution('''4\n1 1 10 11\n''') == '110'\nassert solution('''5\n0 3 1 100 1\n''') == '0'\n"
    },
    {
        "number": 1914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\\\naaabacaa\n2\na\naa\n''') == '5'\nassert solution('''\\\naaabacaa\n4\na\na\na\nb\n''') == '33'\n"
    },
    {
        "number": 1915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '70'\n"
    },
    {
        "number": 1916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 6 4 0\n2 4\n''') == '2'\nassert solution('''7 6\n1 9 1 9 8 1 0\n1 1 4 5 1 4\n''') == '0'\nassert solution('''8 5\n179 261 432 162 82 43 10 38\n379 357 202 184 197\n''') == '147'\n"
    },
    {
        "number": 1917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == '2 2 2 1 1'\nassert solution('10 32') == '1 2 3 3 3 4 4 4 4 4 4'\n"
    },
    {
        "number": 1918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\nABABA\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\\nAAAAA\") == \"15\"\nassert solution(\"5\\n1 2 3 4 5\\nB\") == \"1\"\n"
    },
    {
        "number": 1919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 1920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nM 151 307\nF 343 352\nF 117 145\nM 24 128\n''') == '2'\nassert solution('''\n6\nM 128 130\nF 128 131\nF 131 140\nF 131 141\nM 131 200\nM 140 200\n''') == '4'\n"
    },
    {
        "number": 1921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 1 5 5\n1 2\n4 1\n3 3\n''') == '5'\nassert solution('''84 5\n67 59 41 2\n39 56\n7 2\n15 3\n74 18\n22 7\n''') == '42'\n"
    },
    {
        "number": 1922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 1923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 1924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 2') == '14'\nassert solution('1 1 2 2') == '14'\nassert solution('1 1 2 2') == '14'\nassert solution('1 1 2 2') == '14'\nassert solution('1 1 2 2') == '14'\n"
    },
    {
        "number": 1925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 4') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 1926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3 2 1 0'\nassert solution('6') == '0 0 0 0 0'\n"
    },
    {
        "number": 1927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n3 5 1 4\n''') == '1 3'\nassert solution('''4 3\n1 2 4\n''') == '1 3'\n"
    },
    {
        "number": 1928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\") == \"8\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\n"
    },
    {
        "number": 1929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 3\n2 3 1 1\n''') == '2'\nassert solution('''\n1 1 1\n2\n''') == '0'\nassert solution('''\n11 4 2\n2 2 0 7 3 2 2 4 9 1 4\n''') == '6'\n"
    },
    {
        "number": 1930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 -1 -1\n\n2\n1 2\n\n''') == '499122179'\nassert solution('''\n2\n-1 -1\n\n''') == '0'\nassert solution('''\n2\n1 2\n\n''') == '499122177'\n"
    },
    {
        "number": 1931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n14\n15\n24\n1\n''') == '1'\nassert solution('''\n5\n3\n14\n15\n24\n1\n''') == '2'\nassert solution('''\n5\n3\n14\n15\n24\n1\n''') == '1'\nassert solution('''\n5\n3\n14\n15\n24\n1\n''') == '0'\nassert solution('''\n5\n3\n14\n15\n24\n1\n''') == '0'\n"
    },
    {
        "number": 1932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"42\"\nassert solution(\"3\") == \"28\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 1933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 2\n0 1 0\n1 0 1\n0 1 0\n1 1 1\n''') == '4 1'\nassert solution('''\n3 2 1\n1 0\n0 1\n0 0\n''') == '2 0'\n'''\n"
    },
    {
        "number": 1934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('6 5') == '2'\nassert solution('1 2 1 3 2 3') == '1'\nassert solution('4 6') == '2'\nassert solution('1 3') == '-1'\n"
    },
    {
        "number": 1935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n15 5\n0 3 7 14 15\n11 11\n''') == '45'\nassert solution('''\n13 4\n0 3 7 13\n9 9\n''') == '-1'\n"
    },
    {
        "number": 1936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1337\n13 69\n2 4\n88 89\n''') == '6 7'\nassert solution('''\n1 1337\n13 69\n2 4\n88 89\n''') == '14 21'\nassert solution('''\n1 1337\n13 69\n2 4\n88 89\n''') == '-1 -1'\nassert solution('''\n1 1337\n13 69\n2 4\n88 89\n''') == '-1 -1'\nassert solution('''\n1 1337\n13 69\n2 4\n88 89\n''') == '-1 -1'\n"
    },
    {
        "number": 1937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 6\n''') == '2 3 3 3'\nassert solution('''\n6\n2 1 2\n''') == '0 0 1 1 1 2'\n"
    },
    {
        "number": 1938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2\n1 3\n2 3\n''') == '5'\nassert solution('''\n3 3\n1 3\n1 3\n1 3\n''') == '3'\nassert solution('''\n3 1\n1 2\n2 3\n3 4\n''') == '6'\n"
    },
    {
        "number": 1939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '1 3'\nassert solution('4 7') == '2 1 0 4'\n"
    },
    {
        "number": 1940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 3 4\n''') == '3'\nassert solution('''5 4\n3 1 8 9 7\n''') == '5'\n"
    },
    {
        "number": 1941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 4\n1 5 3\n3 3 10\n7 10 2\n6 4 8\n''') == '4'\nassert solution('''\n1 5 2\n1 5 10\n2 7 4\n''') == '2'\nassert solution('''\n1 5 2\n1 5 10\n2 7 4\n''') == '-1'\nassert solution('''\n1 5 2\n1 5 10\n2 7 4\n''') == '-1'\nassert solution('''\n1 5 2\n1 5 10\n2 7 4\n''') == '-1'\n"
    },
    {
        "number": 1942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n''') == '1 2 1 3 2 3 1'\nassert solution('''\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n''') == '1 2 1 3 2 3 1'\nassert solution('''\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n''') == '1 2 1 3 2 3 1'\nassert solution('''\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n''') == '1 2 1 3 2 3 1'\nassert solution('''\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n''') == '1 2 1 3 2 3 1'\n"
    },
    {
        "number": 1943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1.75'\nassert solution('3') == '12'\nassert solution('2') == '1.75'\nassert solution('3') == '12'\nassert solution('2') == '1.75'\n"
    },
    {
        "number": 1944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 1') == 'Happy Alex'\nassert solution('2 1\\n2 1') == 'Poor Alex'\n"
    },
    {
        "number": 1945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3'\n\nassert solution('''\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '2'\n\nassert solution('''\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '1'\n\nassert solution('''\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '0'\n\nassert solution('''\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '0'"
    },
    {
        "number": 1946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\n''') == '408'\nassert solution('''\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\n''') == '24'\nassert solution('''\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\n''') == '408'\nassert solution('''\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\n''') == '24'\nassert solution('''\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\n''') == '408'\n"
    },
    {
        "number": 1947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '1'\nassert solution('''\n4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2'\nassert solution('''\n4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2'\nassert solution('''\n4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '1'\nassert solution('''\n4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '1'\n"
    },
    {
        "number": 1948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '4'\nassert solution('5 2') == '6'\n"
    },
    {
        "number": 1949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n1 2 3\n''') == '1'\nassert solution('''4 2\n10 3 5 3\n''') == '3'\nassert solution('''5 2\n1 2 3 4 5\n''') == '2'\nassert solution('''6 2\n1 2 3 4 5 6\n''') == '3'\nassert solution('''7 2\n1 2 3 4 5 6 7\n''') == '2'\n"
    },
    {
        "number": 1950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '19'\n"
    },
    {
        "number": 1951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n+\n+\n- 2\n+\n- 3\n+\n- 1\n- 4\n''') == 'YES'\nassert solution('''\n1\n- 1\n+\n''') == 'NO'\nassert solution('''\n3\n+\n+\n+\n- 2\n- 1\n- 3\n''') == 'NO'\nassert solution('''\n4\n+\n+\n+\n- 2\n- 1\n- 3\n''') == 'YES'\n"
    },
    {
        "number": 1952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 2 3\n4 1 1\n''') == '3'\nassert solution('''\n6 10\n5 8 1 10 8 7\n6 6 4 4 3 2 2 2 1 1\n''') == '2'\nassert solution('''\n5 1\n1 1 1 1 1\n5\n''') == '5'\nassert solution('''\n5 1\n1 1 1 1 1\n1\n''') == '5'\nassert solution('''\n5 1\n1 1 1 1 1\n1\n''') == '5'\n"
    },
    {
        "number": 1953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n15 2 1 5 3') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\n"
    },
    {
        "number": 1954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2'\nassert solution('6 2') == '6'\nassert solution('7 2') == '9'\nassert solution('6 3') == '10'\nassert solution('6 4') == '20'\n"
    },
    {
        "number": 1955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n0 1 0 2 1 0 2\n2 1\n''') == '5'\nassert solution('''\n5 1\n1 1 4\n''') == '9'\nassert solution('''\n5 1\n1 1 1 1 1\n5\n''') == '-1'\n"
    },
    {
        "number": 1956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 8\n1 4\n3 10\n''') == '1 1'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n''') == '0 0'\nassert solution('''\n2\n1 9\n4 5\n''') == '0 1'\nassert solution('''\n6\n216986951114298167 235031205335543871\n148302405431848579 455670351549314242\n506251128322958430 575521452907339082\n1 768614336404564650\n189336074809158272 622104412002885672\n588320087414024192 662540324268197150\n''') == '1 0'\n"
    },
    {
        "number": 1957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10 3\n2 2 2 2\n''') == '1'\nassert solution('''\n4 80 20\n3 2 1 4\n''') == '0'\nassert solution('''\n5 10 10\n1000 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 1958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 10\nhalf\nhalfplus\n''') == '15'\nassert solution('''3 10\nhalfplus\nhalfplus\nhalfplus\n''') == '55'\nassert solution('''4 10\nhalfplus\nhalfplus\nhalfplus\nhalfplus\n''') == '55'\nassert solution('''5 10\nhalfplus\nhalfplus\nhalfplus\nhalfplus\nhalfplus\n''') == '55'\nassert solution('''6 10\nhalfplus\nhalfplus\nhalfplus\nhalfplus\nhalfplus\nhalfplus\n''') == '55'\n"
    },
    {
        "number": 1959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '1'\nassert solution('8 6') == '6'\nassert solution('4 1') == '-1'\n"
    },
    {
        "number": 1960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 2 5\n''') == '3223'\nassert solution('''\n4\n1 5 2 3\n''') == '3133'\nassert solution('''\n4\n1 5 2 3\n''') == '3133'\nassert solution('''\n4\n1 5 2 3\n''') == '3133'\nassert solution('''\n4\n1 5 2 3\n''') == '3133'\n"
    },
    {
        "number": 1961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n###\n###\n###\n###\n''') == 'YES'\nassert solution('''4 3\n###\n###\n###\n###\n''') == 'NO'\nassert solution('''5 7\n.......\n.#####.\n.#.#.#.\n.#####.\n.......\n\n''') == 'YES'\nassert solution('''5 7\n.......\n.#####.\n.#.#.#.\n.#####.\n.......\n\n''') == 'NO'\nassert solution('''5 7\n.......\n.#####.\n.#.#.#.\n.#####.\n.......\n\n''') == 'NO'\n"
    },
    {
        "number": 1962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 0') == '7'\nassert solution('2 1 0') == '0'\nassert solution('3 2 1') == '2'\nassert solution('3 2 1') == '0'\nassert solution('4 2 1') == '7'\n"
    },
    {
        "number": 1963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 6 9 3 6') == '1 3'\nassert solution('5\\n1 3 5 7 9') == '1 4'\nassert solution('5\\n2 3 5 7 11') == '5 0'\n"
    },
    {
        "number": 1964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n''') == '20'\nassert solution('''\n4\n1 4 3 2\n100\n1 2 2 3\n1 9 1\n7 8\n''') == '100'\n"
    },
    {
        "number": 1965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 69\n68 70\n6 4\n4 4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20\n''') == '1'\nassert solution('''\n2 69\n68 70\n6 4\n4 4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20\n''') == '0'\nassert solution('''\n2 69\n68 70\n6 4\n4 4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20\n''') == '2'\n"
    },
    {
        "number": 1966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('0\\n0') == '1'\nassert solution('0\\n0\\n0') == '1'\nassert solution('0\\n0\\n0\\n0') == '1'\n"
    },
    {
        "number": 1967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"....\\n....\\n....\"\nassert solution(\"9 20\") == \"*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n*********\\n"
    },
    {
        "number": 1968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 50000\n1 40000\n2 20000 60000\n3 10000 70000 190000\n''') == '3'\nassert solution('''\n3 50000\n1 50000\n3 100000 120000 110000\n3 120000 110000 120000\n''') == '0'\n"
    },
    {
        "number": 1969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('6') == '4'\n"
    },
    {
        "number": 1970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'YES'\nassert solution('''\n........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\nassert solution('''\n........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\nassert solution('''\n........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\nassert solution('''\n........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\n"
    },
    {
        "number": 1971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 1 4 3') == '3 4 2 1'\nassert solution('5\\n2 3 4 5 1') == '4 5 1 2 3'\n"
    },
    {
        "number": 1972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0\n''') == '4'\nassert solution('''\n1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0\n''') == '0'\nassert solution('''\n1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0\n''') == '4'\nassert solution('''\n1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0\n''') == '0'\nassert solution('''\n1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0\n''') == '4'\n"
    },
    {
        "number": 1973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n13\n1 1 1 2 2 2 3 3 3 4 4 4 5\n''') == '13'\nassert solution('''\n5\n10 2 5 4 1\n''') == '5'\nassert solution('''\n6\n1 1 1 2 2 2\n''') == '6'\nassert solution('''\n7\n3 2 1 1 4 5 1\n''') == '5'\n"
    },
    {
        "number": 1974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n0 0\n2 3\n''') == '3'\n\nassert solution('''\n2 3\n1 6\n6 1\n10 1\n1 10\n7 7\n''') == '4'\n\nassert solution('''\n7 3\n0 8\n3 8\n2 7\n0 10\n5 5\n7 0\n3 5\n6 6\n3 11\n11 5\n''') == '6'\n"
    },
    {
        "number": 1975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 1976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3 2 5\n2 1 8\n2 2 8\n1 2 1\n1 3 4\n2 3 2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100\n\"\"\") == \"8\"\n"
    },
    {
        "number": 1977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\nabcd\nbcde\nbcad\nbcde\n''') == 'aaabcde'\nassert solution('''5 3\nbwwwz\nhrhdh\nsepsp\nsqfaf\najbvw\n''') == 'aaaepfafw'\nassert solution('''7 6\nypnxnnp\npnxonpm\nnxanpou\nxnnpmud\nnhtdudu\nnpmuduh\npmutsnz\n''') == 'aaaaaaadudsnz'\n"
    },
    {
        "number": 1978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0110\n0010\n0001\n1000\n4\n1 2 3 4\n''') == '3'\nassert solution('''\n4\n0110\n0010\n1001\n1000\n20\n1 2 3 1 3 2 1\n''') == '7'\nassert solution('''\n3\n011\n101\n110\n7\n1 2 4\n''') == '7'\nassert solution('''\n4\n0110\n0001\n0001\n1000\n3\n1 2 4\n''') == '2'\nassert solution('''\n4\n0110\n0010\n1001\n1000\n20\n1 2 3 1 3 2 1\n''') == '11'\n"
    },
    {
        "number": 1979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 3 4 5 1\n''') == '5'\nassert solution('''4\n5 4 3 2 1\n1 2 3 4 5\n''') == '1'\nassert solution('''3\n5 4 3 2 1\n1 2 3 4 5\n''') == '2'\nassert solution('''2\n5 4 3 2 1\n1 2 3 4 5\n''') == '0'\nassert solution('''1\n5 4 3 2 1\n1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 1980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '13'\nassert solution('3 5') == '0'\nassert solution('1 8') == '0'\nassert solution('2 19') == '0'\n"
    },
    {
        "number": 1981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 1 0 0\n1 2\n1 3\n1 4\n''') == '2'\nassert solution('''7 1\n1 0 1 1 0 0 0\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '2'\n"
    },
    {
        "number": 1982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n''') == 'YES'\nassert solution('''3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n''') == 'NO'\nassert solution('''3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n''') == 'YES'\nassert solution('''3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n''') == 'NO'\nassert solution('''3 1\n4 2\n10 3\n10 2\n16 4\n16 5\n''') == 'YES'\n"
    },
    {
        "number": 1983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 2 1\n6\n3 1 4 1 5 9\n''') == '3'\nassert solution('''\n2\n3 2 1\n6\n3 1 4 1 5 9\n''') == '5'\n"
    },
    {
        "number": 1984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 3 2\nA.A\n...\nA.a\n..C\nX.Y\n...\n\nOutput\n14\n1 0\n2 1\n3 1\n''') == '11'\nassert solution('''\n1 1 4 1\nA\n.\nB\n.\n\nOutput\n3\n1 0\n2 0\n4 2\n3 0\n''') == '11'\nassert solution('''\n1 3 5 2\nABA\nBBB\nBBA\nBAB\nABB\n\nOutput\n11\n1 0\n3 1\n2 3\n4 2\n5 1\n''') == '11'\n"
    },
    {
        "number": 1985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n-5 5 0 20\n10\n\n''') == '3'\nassert solution('''2 2\n-2000 -2000\n3998000 4000000\n\n''') == '1'\n"
    },
    {
        "number": 1986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '4'\nassert solution('4 6') == '3'\nassert solution('1 5') == '-1'\n"
    },
    {
        "number": 1987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 1\n011\n\n''') == '8'\nassert solution('''4 7 2\n1101\n\n''') == '18'\n"
    },
    {
        "number": 1988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'abab'\nassert solution('''5\naaaaa\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'aaaaa'\nassert solution('''6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'aaaaa'\nassert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'abab'\nassert solution('''5\naaaaa\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'aaaaa'\n"
    },
    {
        "number": 1989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2 1 1 2 2 1') == '8'\nassert solution('3\\n1 1 1') == '1'\nassert solution('5\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 1990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('(RaRbR)L)L(') == '-1 -1 -1 -1 -1 1 1 -1 -1 2'\nassert solution('(R)R(R)Ra)c') == '-1 -1 1 1 -1 -1 1 1 1 -1 1'\n"
    },
    {
        "number": 1991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\n''') == '2'\n"
    },
    {
        "number": 1992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 3') == '7'\nassert solution('5 4 2') == '8'\n"
    },
    {
        "number": 1993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n*.*\n.*.\n*.*\n\n''') == '3.3'\nassert solution('''4 5\n**..*\n..***\n.*.*.\n*.*.*\n\n''') == '46..3'\nassert solution('''5 5\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n\n''') == '5.4.3'\nassert solution('''6 6\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n\n''') == '6.4.3'\nassert solution('''7 7\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n\n''') == '7.4.3'\n"
    },
    {
        "number": 1994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABACABA') == '3'\nassert solution('AAA') == '3'\nassert solution
    },
    {
        "number": 1995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacaba') == 'baabcaa'\nassert solution('abacaba') == 'baabcaa'\nassert solution('abacaba') == 'baabcaa'\nassert solution('abacaba') == 'baabcaa'\nassert solution('abacaba') == 'baabcaa'\n"
    },
    {
        "number": 1996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n! abc\n. ad\n. b\n! cd\n? c\n''') == '1'\nassert solution('''\n8\n! hello\n! codeforces\n? c\n. o\n? d\n? h\n. l\n? e\n''') == '2'\nassert solution('''\n7\n! ababahalamaha\n? a\n? b\n? a\n? b\n? a\n? h\n''') == '0'\n'''\n"
    },
    {
        "number": 1997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n1 3\\n2 4\\n2 5') == '3 2'\nassert solution('6\\n1 2\\n1 3\\n3 4\\n1 5\\n5 6') == '3 3'\n"
    },
    {
        "number": 1998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 2 1\n00100''') == '2'\nassert solution('''13 3 2 3\n1000000010001''') == '7 11'\n"
    },
    {
        "number": 1999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n3 4 1 2 2 1 1\n''') == '4'\nassert solution('''\n5\n1 1 3 1 1\n''') == '2'\nassert solution('''\n5\n10 40 20 50 30\n''') == '5'\n"
    },
    {
        "number": 2000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7 3 2 1\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '3'\n"
    },
    {
        "number": 2001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1011\n1 4\n3 4\n''') == '14'\nassert solution('''3 2\n111\n1 2\n3 3\n''') == '3'\n"
    },
    {
        "number": 2002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 5 6 0 8\\n1 2\\n1 3\\n1 4\\n4 5\\n') == '42'\nassert solution('7\\n0 2 3 0 0 0 0\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\\n') == '30'\n"
    },
    {
        "number": 2003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11\n''') == '11'\nassert solution('''\n+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11\n''') == '10'\nassert solution('''\n+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11\n''') == '14'\nassert solution('''\n+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11\n''') == '13'\n"
    },
    {
        "number": 2004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\nassert solution('6') == '7'\n"
    },
    {
        "number": 2005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '6.00000000'\nassert solution('4 2 1') == '6.50000000'\n"
    },
    {
        "number": 2006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n*G*S\nG**S\n*G*S\n''') == '2'\nassert solution('''\n*G*S\nG**S\n*G*S\n''') == '-1'\nassert solution('''\n*G*S\nG**S\n*G*S\n''') == '-1'\nassert solution('''\n*G*S\nG**S\n*G*S\n''') == '2'\nassert solution('''\n*G*S\nG**S\n*G*S\n''') == '2'\n"
    },
    {
        "number": 2007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '3'\nassert solution('6 6') == '-1'\nassert solution('10 14') == '4'\n"
    },
    {
        "number": 2008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 2\n2 3\n6 1\n''') == '12'\nassert solution('''\n4\n2 4\n3 3\n7 1\n2 3\n''') == '1423'\nassert solution('''\n10\n5 10\n12 4\n31 45\n20 55\n30 17\n29 30\n41 32\n7 1\n5 5\n3 15\n''') == '1423'\n"
    },
    {
        "number": 2009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n5 5\n00001\n11111\n00111\n00110\n00110\n''') == '10'\nassert solution('''3\n1 3\n3 1\n010\n101\n010\n''') == '8'\n"
    },
    {
        "number": 2010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9\n''') == '2 9 11 20 30 40 39'\nassert solution('''\n10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9\n''') == '2 9 11 20 30 40 39'\nassert solution('''\n10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9\n''') == '2 9 11 20 30 40 39'\nassert solution('''\n10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9\n''') == '2 9 11 20 30 40 39'\nassert solution('''\n10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9\n''') == '2 9 11 20 30 40 39'\n"
    },
    {
        "number": 2011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"3 4\") == \"1\""
    },
    {
        "number": 2012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 1 0 0 0\") == \"kkrrrq\"\nassert solution(\"4 0 0 0\") == \"abcd\"\n"
    },
    {
        "number": 2013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n1 2\n2 1\n3 3\n3 2\n''') == '3'\nassert solution('''\n5 4 3\n3 4\n3 1\n3 3\n5 3\n1 3\n1 4\n\n''') == '9'\nassert solution('''\n5 5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n\n''') == '-1'\nassert solution('''\n5 5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n\n''') == '-1'\nassert solution('''\n5 5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n\n''') == '-1'\n"
    },
    {
        "number": 2014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 4 2 3\\n4 1 2 3\\n') == '3'\nassert solution('4 3\\n1 4 2 3\\n4 1 2 3\\n') == '3'\nassert solution('4 3\\n1 4 2 3\\n4 1 2 3\\n') == '3'\nassert solution('4 3\\n1 4 2 3\\n4 1 2 3\\n') == '3'\nassert solution('4 3\\n1 4 2 3\\n4 1 2 3\\n') == '3'\n"
    },
    {
        "number": 2015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 3 3\n1 10 2\n2 1 1\n''') == 'Yes'\nassert solution('''\n3\n3 3 3\n1 10 2\n2 1 1\n''') == 'No'\nassert solution('''\n3\n3 3 3\n1 10 2\n2 1 1\n''') == 'Yes'\nassert solution('''\n3\n3 3 3\n1 10 2\n2 1 1\n''') == 'No'\nassert solution('''\n3\n3 3 3\n1 10 2\n2 1 1\n''') == 'Yes'\n"
    },
    {
        "number": 2016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 100\n1 4 9\n2 19 49\n2 19 49\n''') == 'YES'\nassert solution('''\n1 100\n1 4 9\n2 19 49\n2 19 49\n''') == 'NO'\nassert solution('''\n1 100\n1 4 9\n2 19 49\n2 19 49\n''') == 'YES'\nassert solution('''\n1 100\n1 4 9\n2 19 49\n2 19 49\n''') == 'NO'\nassert solution('''\n1 100\n1 4 9\n2 19 49\n2 19 49\n''') == 'YES'\n"
    },
    {
        "number": 2017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '15'\n"
    },
    {
        "number": 2018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\n''') == 'YES'\nassert solution('''\n4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\n''') == 'NO'\nassert solution('''\n4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\n''') == 'YES'\nassert solution('''\n4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\n''') == 'NO'\nassert solution('''\n4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\n''') == 'YES'\n"
    },
    {
        "number": 2019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n01\n''') == 'DA'\nassert solution('''\n2\n01\n''') == 'NET'\nassert solution('''\n3\n01\n''') == 'NET'\nassert solution('''\n4\n01\n''') == 'NET'\nassert solution('''\n5\n01\n''') == 'NET'\n"
    },
    {
        "number": 2020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 1\n0 2\n1 0\n''') == '2'\nassert solution('''4\n1 1\n1 2\n2 3\n3 3\n''') == '3'\nassert solution('''4\n1 1\n1 2\n2 3\n3 3\n''') == '3'\nassert solution('''4\n0 0\n0 1\n0 2\n1 0\n''') == '2'\nassert solution('''4\n0 0\n0 1\n0 2\n1 0\n''') == '2'\n"
    },
    {
        "number": 2021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27 30'\n"
    },
    {
        "number": 2022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2\n1 3\n2 4\n2 5\n''') == '2'\nassert solution('''\n5 4 5\n1 2\n1 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5 6 3\n1 2\n1 3\n2 4\n2 5\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n''') == '3'\n"
    },
    {
        "number": 2023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '3'\nassert solution('''\n5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '-1'\nassert solution('''\n5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '3'\nassert solution('''\n5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '-1'\nassert solution('''\n5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '3'\n"
    },
    {
        "number": 2024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 4 9\n''') == '20'\nassert solution('''\n4\n4 3 2 1\n''') == '0'\nassert solution('''\n8\n42 1337 13 37 420 666 616 97\n''') == '19200'\n"
    },
    {
        "number": 2025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n12') == '3'\nassert solution('2\\n6') == '2'\nassert solution('3\\n1') == '-1'\nassert solution('4\\n8') == '1'\nassert solution('5\\n9') == '2'\n"
    },
    {
        "number": 2026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"26\") == \"7\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 2027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2 4 6 1 3'\nassert solution('5') == '1 -3 4 11 6'\n"
    },
    {
        "number": 2028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5\\n5 2\\n3 7\\n7 3\") == \"6\"\nassert solution(\"5\\n1 10\\n2 10\\n3 10\\n4 10\\n5 5\") == \"5\"\nassert solution(\"5\\n1 10\\n2 10\\n3 10\\n4 10\\n5 5\") == \"5\"\nassert solution(\"5\\n1 10\\n2 10\\n3 10\\n4 10\\n5 5\") == \"5\"\nassert solution(\"5\\n1 10\\n2 10\\n3 10\\n4 10\\n5 5\") == \"5\"\n"
    },
    {
        "number": 2029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n1 4\n\n''') == '2.000000000000000000'\nassert solution('''\n6 1\n2 1\n2 3\n2 5\n5 4\n5 6\n\n''') == '0.500000000000000000'\nassert solution('''\n5 5\n1 2\n2 3\n3 4\n3 5\n\n''') == '3.333333333333333333'\n"
    },
    {
        "number": 2030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0.25 0.75\n0.75 0.25\n''') == '0.5 0.5'\nassert solution('''\n3\n0.125 0.25 0.625\n0.625 0.25 0.125\n''') == '0.25 0.25 0.5'\n"
    },
    {
        "number": 2031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 20 10\n6\n1 1\n2 1\n2 2\n3 1\n3 2\n3 3\n''') == '20'\nassert solution('''\n7\n1 2 1 3 1 2 1\n7 1\n7 7\n7 4\n''') == '2'\n"
    },
    {
        "number": 2032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 7\n7 4 17\n3 0 8\n11 2 0\n13 3 5\n3 1\n2 1\n4 3\n''') == '5'\nassert solution('''\n4 3 7\n7 4 17\n3 0 8\n11 2 0\n14 3 5\n3 1\n2 1\n4 3\n''') == '22'\nassert solution('''\n4 3 7\n7 4 17\n3 0 8\n11 2 0\n13 3 5\n3 1\n2 1\n4 1\n''') == '-1'\n"
    },
    {
        "number": 2033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 9\n1 5\n5 4\n1 2\n2 3\n3 4\n4 1\n2 6\n6 4\n4 2\n4\n1 2 3 4\n''') == '1 2'\nassert solution('''\n7 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1\n7\n1 2 3 4 5 6 7\n''') == '0 0'\n"
    },
    {
        "number": 2034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n2 1\n1 3\n4 3\n''') == '1'\nassert solution('''\n5 5\n1 2\n2 3\n4 5\n4 6\n5 6\n''') == '1'\nassert solution('''\n6 5\n1 2\n2 3\n4 5\n4 6\n5 6\n''') == '0'\n"
    },
    {
        "number": 2035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 2\n1 3\n4 2\n5 1\n4 1\n''') == '3'\nassert solution('''7 10 12\n5 6\n20 23\n15 4\n16 5\n4 54\n12 1\n4 15\n''') == '4'\n"
    },
    {
        "number": 2036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2 2\n2 1\n1 1\n1 2\n2 3\n3 3\n3 2\n3 1\n2 1\n1 1''') == '2 2\\n1 2\\n1 3\\n2 3\\n3 3\\n3 2\\n3 1\\n2 1\\n1 1'\nassert solution('''3 4 2 2\n2 1\n2 3\n2 4\n1 4\n3 4\n3 3\n3 2\n3 1\n1 1\n1 2\n1 3''') == '2 2\\n1 2\\n1 3\\n2 3\\n3 3\\n3 2\\n3 1\\n1 1\\n1 2\\n1 3'\n"
    },
    {
        "number": 2037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 11\n2 3 1 2 2 2 3 2 2 3 1''') == '00100000001'\nassert solution('''4 8\n4 1 3 3 2 3 3 3''') == '00001000'\nassert solution('''5 10\n5 1 3 3 2 3 3 3''') == '000001000'\nassert solution('''6 10\n6 1 3 3 2 3 3 3''') == '0000001000'\nassert solution('''7 10\n7 1 3 3 2 3 3 3''') == '00000001000'\n"
    },
    {
        "number": 2038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 1\n''') == '1 2'\nassert solution('''\n4\n3 4 1 2\n''') == '4 1 2 3'\nassert solution('''\n6\n2 5 3 1 4 6\n''') == '3 1 2 5 4 6'\n"
    },
    {
        "number": 2039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 5 2 5') == '2'\n"
    },
    {
        "number": 2040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '11'\nassert solution('3') == '100'\n"
    },
    {
        "number": 2041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 20 10\n6\n1 1\n2 1\n2 2\n3 1\n3 2\n3 3\n''') == '20'\nassert solution('''\n7\n1 2 1 3 1 2 1\n7 1\n7 7\n7 4\n''') == '2'\n"
    },
    {
        "number": 2042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 3') == '6'\nassert solution('4 4 1') == '10'\nassert solution('5 5 1') == '8'\nassert solution('4 4 1') == '10'\nassert solution('5 5 1') == '8'\n"
    },
    {
        "number": 2043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aba\nbaobababbah''') == '2'\nassert solution('''mars\nsunvenusearthmarsjupitersaturnuranusneptune''') == '0'\n"
    },
    {
        "number": 2044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n3 7 9\n''') == '0 2 1'\nassert solution('''4 20\n10 9 19 2\n''') == '0 0 1 1'\nassert solution('''1 100\n99\n''') == '0'\n"
    },
    {
        "number": 2045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nI want to order pizza\n''') == 'Iwantorderpizza'\nassert solution('''\nsample please ease in out\n''') =='sampleinout'\nassert solution('''\nI want to order pizza\n''') == 'Iwantorderpizza'\nassert solution('''\nI want to order pizza\n''') == 'Iwantorderpizza'\nassert solution('''\nI want to order pizza\n''') == 'Iwantorderpizza'\n"
    },
    {
        "number": 2046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '5 4'\nassert solution('4') == '4 3 2 1'\n"
    },
    {
        "number": 2047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 1\\n1 2\\n') == 'NO'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 1\\n1 2\\n') == 'NO'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 1\\n1 2\\n') == 'NO'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 1\\n1 2\\n') == 'NO'\n"
    },
    {
        "number": 2048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 4 5 4 10\n40 30 20 10 40\n''') == '90'\nassert solution('''\n3\n100 101 100\n2 4 5\n''') == '-1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n10 13 11 14 15 12 13 13 18 13\n''') == '33'\n"
    },
    {
        "number": 2049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8\n''') == 'Yes\\nYes\\nNo\\nYes\\nNo\\nYes\\nYes\\n'\nassert solution('''\n8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8\n''') == 'Yes\\nYes\\nNo\\nYes\\nNo\\nYes\\nYes\\n'\nassert solution('''\n8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8\n''') == 'Yes\\nYes\\nNo\\nYes\\nNo\\nYes\\nYes\\n'\nassert solution('''\n8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8\n''') == 'Yes\\nYes\\nNo\\nYes\\nNo\\nYes\\nYes\\n'\nassert solution('''\n8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8\n''') == 'Yes\\nYes\\nNo\\nYes\\nNo\\nYes\\nYes\\n'\n"
    },
    {
        "number": 2050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '5'\nassert solution('2 2') == '22'\nassert solution('3 3') == '14'\nassert solution('4 4') == '10'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 2051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 3\n1 2 3\n1 2\n2 3\n''') == '2'\nassert solution('''\n3 2 2\n1 1 2\n1 2\n2 1\n''') == '0'\nassert solution('''\n3 2 2\n1 1 2\n1 2\n2 1\n''') == '0'\nassert solution('''\n3 2 2\n1 1 2\n1 2\n2 1\n''') == '0'\nassert solution('''\n3 2 2\n1 1 2\n1 2\n2 1\n''') == '0'\n"
    },
    {
        "number": 2052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 5\n0 0 1 0 2 0 0 1 0\n''') == '3'\nassert solution('''10 3\n1 1 1 1 2 1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 2053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3 2 1') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('5 1 2 3 4') == '1'\nassert solution('1 1 1 1 1') == '2'\nassert solution('5 1 2 3 4') == '1'\n"
    },
    {
        "number": 2054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 4\n1000000000 0\n7 15\n8 7\n''') == '2'\nassert solution('''\n4\n4 4\n1000000000 0\n7 15\n8 7\n''') == '0'\nassert solution('''\n4\n4 4\n1000000000 0\n7 15\n8 7\n''') == '7'\nassert solution('''\n4\n4 4\n1000000000 0\n7 15\n8 7\n''') == '5'\nassert solution('''\n4\n4 4\n1000000000 0\n7 15\n8 7\n''') == '7'\n"
    },
    {
        "number": 2055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 3 4\n3 3 3\n3\n3 3 3\n2 3 4\n4\n2 3 4 5\n3 7 2 2\n4\n4 5 2 3\n2 3 2 7\n2\n1 1\n10 10\n''') == 'YES'\nassert solution('''\n5\n3\n2 3 4\n3 3 3\n3\n3 3 3\n2 3 4\n4\n2 3 4 5\n3 7 2 2\n4\n4 5 2 3\n2 3 2 7\n2\n1 1\n10 10\n''') == 'YES'\nassert solution('''\n5\n3\n2 3 4\n3 3 3\n3\n3 3 3\n2 3 4\n4\n2 3 4 5\n3 7 2 2\n4\n4 5 2 3\n2 3 2 7\n2\n1 1\n10 10\n''') == 'NO'\nassert solution('''\n5\n3\n2 3 4\n3 3 3\n3\n3 3 3\n2 3 4\n4\n2 3 4 5\n3 7 2 2\n4\n4 5 2 3\n2 3 2 7\n2\n1 1\n10 10\n''') == 'NO'\nassert solution('''\n5\n3\n2 3 4\n3 3 3\n3\n3 3 3\n2 3 4\n4\n2 3 4 5\n3 7 2 2\n4\n4 5 2 3\n2 3 2 7\n2\n1 1\n10 10\n''') == 'YES'\n"
    },
    {
        "number": 2056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '51'\nassert solution('2') == '1099509530625'\n"
    },
    {
        "number": 2057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0\n''') == '2'\nassert solution('''\n5\n0 1 0 1 3\n''') == '3'\n"
    },
    {
        "number": 2058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"01\") == \"3\"\nassert solution(\"0011\") == \"3\"\nassert solution(\"0110\") == \"2\"\nassert solution(\"00111\") == \"3\"\nassert solution(\"0101\") == \"2\"\n"
    },
    {
        "number": 2059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6 4 5 5\n''') == '1'\nassert solution('''\n4\n821 500 479 717\n''') == '239'\nassert solution('''\n3\n0 1 2\n''') == '0'\n"
    },
    {
        "number": 2060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n''') == 'YES'\nassert solution('''\n2\n5\n''') == 'NO'\nassert solution('''\n1\n5\n''') == 'YES'\nassert solution('''\n1\n6\n''') == 'NO'\n"
    },
    {
        "number": 2061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 1\") == \"1\"\nassert solution(\"3 3 0\") == \"1\"\n"
    },
    {
        "number": 2062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3 2 15 9\n''') == '27'\nassert solution('''\n4\n8 2 2 7\n''') == '18'\n"
    },
    {
        "number": 2063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 3') == '2'\nassert solution('2 5 1') == '9'\n"
    },
    {
        "number": 2064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 2065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '-1'\nassert solution('4 2') == '3'\nassert solution('5 2') == '2'\nassert solution('6 2') == '1'\nassert solution('7 2') == '1'\n"
    },
    {
        "number": 2066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcd\") == \"cadb\"\nassert solution(\"gg\") == \"gg\"\nassert solution(\"codeforces\") == \"codfoerces\"\nassert solution(\"abaca\") == \"No answer\""
    },
    {
        "number": 2067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n6\n8\n1 5 6\n1 9 4\n2 4 2\n''') == '1'\nassert solution('''\n0 2\n1 1000000000 4\n1 1000000000 2\n''') == '2'\nassert solution('''\n2 3\n4\n6\n1 4 3\n1 5 2\n1 6 5\n''') == '2'\nassert solution('''\n0 0\n''') == '0'\nassert solution('''\n2 3\n4\n6\n1 4 3\n1 5 2\n1 6 5\n''') == '2'\n"
    },
    {
        "number": 2068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ntourist reposted Polycarp\nPetr reposted Tourist\nWJMZBMR reposted Petr\nsdya reposted wjmzbmr\nvepifanov reposted sdya\n''') == '6'\nassert solution('''\nMike reposted Polycarp\nMax reposted Polycarp\nEveryOne reposted Polycarp\n111 reposted Polycarp\nVkCup reposted Polycarp\nCodeforces reposted Polycarp\n''') == '2'\nassert solution('''\n1\nSoMeStRaNgEgUe reposted PoLyCaRp\n''') == '2'\n"
    },
    {
        "number": 2069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 3 2 4\n3 2\n2 4\n''') == '5'\nassert solution('''9 5\n9 7 2 3 1 4 6 5 8\n1 6\n4 5\n2 7\n7 2\n2 7\n''') == '20'\n"
    },
    {
        "number": 2070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1\n1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1 1''') == '2'\nassert solution('''1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1\n1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1 1''') == '2'\nassert solution('''1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1\n1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1 1''') == '2'\nassert solution('''1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1\n1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1 1''') == '2'\nassert solution('''1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1\n1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 7 1 1 1 8 1 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 2071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n6 5 4\n''') == '70'\nassert solution('''\n3\n1 1000 10000\n10 100 100000\n''') == '543210'\n"
    },
    {
        "number": 2072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.000000000000'\nassert solution('4') == '1.400000000000'\n"
    },
    {
        "number": 2073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '28'\nassert solution('5') == '28'\n"
    },
    {
        "number": 2074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4 1 3 5\\n2 2 2 2\\n5 4 5 1') == '2'\nassert solution('3 3\\n1 2 3\\n2 3 1\\n3 1 2') == '1'\n"
    },
    {
        "number": 2075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n(\n\nOutput\n4\n\nInput\n4 4\n(())\n\nOutput\n1\n\nInput\n4 3\n(((\n\nOutput\n0\n\nInput\n4 3\n(((\n\nOutput\n0\n''') == '1')\n\nassert solution('''4 1\n(\n\nOutput\n4\n\nInput\n4 4\n(())\n\nOutput\n1\n\nInput\n4 3\n(((\n\nOutput\n0\n\nInput\n4 3\n(((\n\nOutput\n0\n''') == '0')\n\nassert solution('''4 1\n(\n\nOutput\n4\n\nInput\n4 4\n(())\n\nOutput\n1\n\nInput\n4 3\n(((\n\nOutput\n0\n\nInput\n4 3\n(((\n\nOutput\n0\n''') == '0')\n\nassert solution('''4 1\n(\n\nOutput\n4\n\nInput\n4 4\n(())\n\nOutput\n1\n\nInput\n4 3\n(((\n\nOutput\n0\n\nInput\n4 3\n(((\n\nOutput\n0\n''') == '0')\n\nassert solution('''4 1\n(\n\nOutput\n4\n\nInput\n4 4\n(())\n\nOutput\n1\n\nInput\n4 3\n(((\n\nOutput\n0\n\nInput\n4 3\n(((\n\nOutput\n0\n''') == '0')"
    },
    {
        "number": 2076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n1 0 5\n5 3 2\n''') == '9'\nassert solution('''\n3 4 5\n1 0 5\n5 3 2\n''') == '0'\nassert solution('''\n3 4 5\n1 0 5\n5 3 2\n''') == '6'\nassert solution('''\n3 4 5\n1 0 5\n5 3 2\n''') == '6'\nassert solution('''\n3 4 5\n1 0 5\n5 3 2\n''') == '6'\n"
    },
    {
        "number": 2077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 1\n2 1 2 2 1\n''') == '2 1 3'\nassert solution('''5 3\n1 2\n2 3\n4 5\n2 1 2 2 1\n''') == '2 5 1 3 4'\nassert solution('''5 3\n1 2\n2 3\n4 5\n2 1 2 2 1\n''') == '-1'\n"
    },
    {
        "number": 2078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n2 3 1000000\n4 0 4\n3 0 1000000\n4 0 1\n2 0 5\n3 1 1000000\n''') == '7'\n\n'''"
    },
    {
        "number": 2079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 1\n0011\n''') == '2 1 1 2'\nassert solution('''\n6\n10 8 9 11 13 5\n010010011101\n''') == '6 6 2 3 3 1 4 4 1 2 5 5'\n"
    },
    {
        "number": 2080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('6') == '6'\n"
    },
    {
        "number": 2081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 1') == 9\nassert solution('2 3 1') == 0\nassert solution('3 4 1') == 3\nassert solution('4 5 1') == 0\nassert solution('5 6 1') == 3\n"
    },
    {
        "number": 2082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n10 20 30 40\n1 3\n2 3\n4 3\n''') == '16.666667'\nassert solution('''\n3 3\n10 20 30\n1 2\n2 3\n3 1\n''') == '13.333333'\nassert solution('''\n7 8\n40 20 10 30 20 50 40\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n1 4\n5 7\n''') == '18.571429'\n"
    },
    {
        "number": 2083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2.000000') == '1.000000 0.500000 0.500000'\nassert solution('11 4 1.250000') == '8.000000 4.449600 0.443800'\nassert solution('13 4 1.250000') == '3.000000 1.771200 0.409600'\n"
    },
    {
        "number": 2084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 5\n1 1 1 1 1 1 1 1\n''') == '5'\nassert solution('''\n10 3\n16 8 2 4 512 256 32 128 64 1\n''') == '7'\nassert solution('''\n5 1\n20 10 50 30 46\n''') == '10'\nassert solution('''\n6 6\n6 6 6 6 6 6\n''') == '36'\nassert solution('''\n1 1\n100\n''') == '100'\n"
    },
    {
        "number": 2085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 3\n''') == '3'\nassert solution('''3\n3 1 4\n''') == '7'\nassert solution('''1\n1\n''') == '1'\nassert solution('''4\n7 7 1 1\n''') == '7'\n"
    },
    {
        "number": 2086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n1 3\n''') == '3'\nassert solution('''\n5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''\n5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''\n5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''\n5\n1 2 3 4 1\n1 3\n''') == '4'\n"
    },
    {
        "number": 2087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 2 3\") == \"18\"\n"
    },
    {
        "number": 2088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n\n''') == '1 1 2'\nassert solution('''\n5\n1 1 3 3\n\n''') == '1 1 1 2 3'\n"
    },
    {
        "number": 2089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 1 5') == '0'\nassert solution('5 4 3 5') == '5'\n"
    },
    {
        "number": 2090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n4 7\n15 1\n3 6\n6 8\n''') == '78'\nassert solution('''\n5 3\n12 31\n112 4\n100 100\n13 55\n55 50\n''') == '10000'\n"
    },
    {
        "number": 2091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"2\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"3\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"4\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\n"
    },
    {
        "number": 2092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\nassert solution('''\n5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '2'\nassert solution('''\n5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '1'\nassert solution('''\n5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '0'\nassert solution('''\n5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '0'\n"
    },
    {
        "number": 2093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '0'\nassert solution('''3\n8 12 7\n''') == '3'\nassert solution('''3\n3 2 1\n''') == '2'\n"
    },
    {
        "number": 2094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '9'\nassert solution('5 5') == '1000'\nassert solution('6 2') == '16'\n"
    },
    {
        "number": 2095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n-1 0 0\n0 -1 1\n0 2 -1\n''') == '2 1'\nassert solution('''\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1\n''') == '0 1 3'\nassert solution('''\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1\n''') == '0 1 3'\nassert solution('''\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1\n''') == '0 1 3'\nassert solution('''\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1\n''') == '0 1 3'\n"
    },
    {
        "number": 2096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '1 2 1'\nassert solution('4') == '4'\nassert solution('5') == '1 2 1'\n"
    },
    {
        "number": 2097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1'\nassert solution('''4\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '2'\nassert solution('''5\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '0'\nassert solution('''6\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '0'\nassert solution('''7\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '0'\n"
    },
    {
        "number": 2098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 4\\n3 4\\n\") == \"YES\\n1 3\\n3 2\\n2 4\"\nassert solution(\"3\\n1 3\\n1 3\\n\") == \"NO\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\n"
    },
    {
        "number": 2099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 10\n17:05:53\n17:05:58\n17:06:01\n22:39:47\n''') == '3'\nassert solution('''\n1 2 86400\n00:00:00\n''') == 'No solution'\nassert solution('''\n1 2 86400\n00:00:00\n''') == 'No solution'\nassert solution('''\n1 2 86400\n00:00:00\n''') == 'No solution'\nassert solution('''\n1 2 86400\n00:00:00\n''') == 'No solution'\n"
    },
    {
        "number": 2100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1\\n1 0\\n0 1\\n1 1\\n0 1\\n') == '3'\nassert solution('5\\n0 1\\n1 0\\n0 1\\n1 1\\n0 1\\n') == '4'\nassert solution('5\\n0 1\\n1 0\\n0 1\\n1 1\\n0 1\\n') == '5'\nassert solution('5\\n0 1\\n1 0\\n0 1\\n1 1\\n0 1\\n') == '6'\nassert solution('5\\n0 1\\n1 0\\n0 1\\n1 1\\n0 1\\n') == '7'\n"
    },
    {
        "number": 2101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1\n3\n5\n4\n\n''') == '20'\nassert solution('''2 1 3\n9 5\n1\n2 8 5\n\n''') == '99'\nassert solution('''10 1 1\n11 7 20 15 19 14 2 4 13 14\n8\n11\n\n''') == '372'\n"
    },
    {
        "number": 2102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 100 10 30 5\n6\n101 104 105 110 130 200\n''') == '0'\nassert solution('''\n1 1 2 2 3 3\n7\n13 4 11 12 11 13 12\n''') == '7'\n"
    },
    {
        "number": 2103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0 1 2'\nassert solution('''\n4\n0 0 0 2\n''') == '1 3 4 0'\nassert solution('''\n3\n1 1 3\n''') == '0 2 1'\n"
    },
    {
        "number": 2104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 8\n''') == 'NO'\nassert solution('''\n1 8\n''') == 'YES'\nassert solution('''\n1 8\n''') == 'YES'\nassert solution('''\n1 8\n''') == 'YES'\nassert solution('''\n1 8\n''') == 'YES'\n"
    },
    {
        "number": 2105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 12\nsin im gye gap eul byeong jeong mu gi gyeong\nyu sul hae ja chuk in myo jin sa o mi sin\n14\n1\n2\n3\n4\n10\n11\n12\n13\n73\n2016\n2017\n2018\n2019\n2020\n''') =='sinyu'\n\nassert solution('''\n10 12\nsin im gye gap eul byeong jeong mu gi gyeong\nyu sul hae ja chuk in myo jin sa o mi sin\n14\n1\n2\n3\n4\n10\n11\n12\n13\n73\n2016\n2017\n2018\n2019\n2020\n''') == 'imsin'\n\nassert solution('''\n10 12\nsin im gye gap eul byeong jeong mu gi gyeong\nyu sul hae ja chuk in myo jin sa o mi sin\n14\n1\n2\n3\n4\n10\n11\n12\n13\n73\n2016\n2017\n2018\n2019\n2020\n''') == 'gyehae'\n\nassert solution('''\n10 12\nsin im gye gap eul byeong jeong mu gi gyeong\nyu sul hae ja chuk in myo jin sa o mi sin\n14\n1\n2\n3\n4\n10\n11\n12\n13\n73\n2016\n2017\n2018\n2019\n2020\n''') == 'gyeongja'\n\nassert solution('''\n10 12\nsin im gye gap eul byeong jeong mu gi gyeong\nyu sul hae ja chuk in myo jin sa o mi sin\n14\n1\n2\n3\n4\n10\n11\n12\n13\n73\n2016\n2017\n2018\n2019\n2020\n''') =='sinmi'"
    },
    {
        "number": 2106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6\n1 2 5 2\n2 3 3 4\n''') == '10'\nassert solution('''\n2 3\n5 6\n5 5\n''') == '14'\nassert solution('''\n1 2\n5 6\n5 5\n''') == '10'\nassert solution('''\n1 2\n5 6\n5 5\n''') == '14'\nassert solution('''\n1 2\n5 6\n5 5\n''') == '10'\n"
    },
    {
        "number": 2107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6 5 7\n3 1 2 2 3 1\n3 2 2 2 5 5\n4 2 2 2 5 3\n3 2 2 1 4 3\n2 3 1 4 1 5 1\n''') == '8'\nassert solution('''\n4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\nassert solution('''\n4 6 5 7\n3 1 2 2 3 1\n3 2 2 2 5 5\n4 2 2 2 5 3\n3 2 2 1 4 3\n2 3 1 4 1 5 1\n''') == '4'\nassert solution('''\n4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\nassert solution('''\n4 6 5 7\n3 1 2 2 3 1\n3 2 2 2 5 5\n4 2 2 2 5 3\n3 2 2 1 4 3\n2 3 1 4 1 5 1\n''') == '4'\n"
    },
    {
        "number": 2108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n2 2 2\n3 1\n5 4\n2 5\n''') == 'YES'\nassert solution('''\n5 9\n0 2 3\n1 2\n1 3\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\n"
    },
    {
        "number": 2109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 -1'\nassert solution('4') == '1 -1 2 -3 0'\n"
    },
    {
        "number": 2110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 24 60 15\n16 0\n17 15\n''') == '0 0'\nassert solution('''\n2 24 60 16\n16 0\n17 15\n''') == '1 0'\nassert solution('''\n2 24 60 16\n16 0\n17 15\n''') == '2'\n"
    },
    {
        "number": 2111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n3 4 U\\n6 1 L\\n2 5 L\\n1 6 U\\n4 3 U\\n') == '4'\nassert solution('10 6\\n2 9 U\\n10 1 U\\n1 10 U\\n8 3 L\\n10 1 L\\n6 5 U\\n') == '9'\n"
    },
    {
        "number": 2112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n5 2 3\n3 1 4 5 2\n3 5\n''') == '8'\nassert solution('''\n4 4\n5 1 4\n4 3 1 2\n2 4 3 1\n''') == '0'\nassert solution('''\n4 4\n2 1 11\n1 3 2 4\n1 3 2 4\n''') == '-1'\n"
    },
    {
        "number": 2113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '2'\n"
    },
    {
        "number": 2114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('4') == '4 3 6 12'\nassert solution('5') == '5 9 15'\nassert solution('6') == '6 9 15'\nassert solution('7') == '7 9 15'\n"
    },
    {
        "number": 2115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1000000000 1000000000 1000000000 1000000000\n''') == '7'\nassert solution('''\n7\n4 10 22 11 12 5 6\n''') == '4'\nassert solution('''\n6\n5 2 1 1 2 2\n''') == '2'\nassert solution('''\n5\n1000000000 1000000000 1000000000 1000000000\n''') == '1000000002'\nassert solution('''\n7\n4 10 22 11 12 5 6\n''') == '4 10 22 11 12 5 6'\n"
    },
    {
        "number": 2116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''\n2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''\n2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''\n2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''\n2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\n"
    },
    {
        "number": 2117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 3 3'\nassert solution('4') == '1 3 4 4'\n"
    },
    {
        "number": 2118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2 1 3'\nassert solution('4 1') == '1 2 3 4'\nassert solution('5 6') == '-1'\n"
    },
    {
        "number": 2119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n''') == '2'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 2120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n10 20 30 40\n1 4\n1 2\n2 3\n''') == '40'\nassert solution('''\n4 4\n100 100 100 100\n1 5\n4 7\n4 5\n5 2\n5 7\n6 4\n1 6\n1 3\n4 3\n1 4\n''') == '400'\n"
    },
    {
        "number": 2121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3'\nassert solution('4 2') == '1'\n"
    },
    {
        "number": 2122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 100') == '2'\nassert solution('4 1') == '3'\nassert solution('4 2') == '3'\nassert solution('4 3') == '3'\nassert solution('4 4') == '3'\n"
    },
    {
        "number": 2123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 2124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\nnetman vladik\n3\nnetman:how are you?\n?:wrong message\nvladik:im fine\n''') == 'netman: how are you?\\nvladik: im fine\\n'\nassert solution('''\n1\n2\nnetman Fedosik Fedosik\n2\n?: users are netman, Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fedosik Fed"
    },
    {
        "number": 2125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 1') == '1'\nassert solution('a') == '1'\nassert solution('b') == '1'\nassert solution('c') == '1'\n"
    },
    {
        "number": 2126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 7 3\n2 3 0 0 2 0 1\n2 1 3\n1 0 0 0 1 0 0\n0 0 0 0 0 0 1\n1 1 0 0 0 0 0\n\"\"\") == \"1 0 0 0 2 0 0\"\nassert solution(\"\"\"\n4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\n\"\"\") == \"0 0 0 0 4\"\n"
    },
    {
        "number": 2127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO'\nassert solution('''\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'YES'\nassert solution('''\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'YES'\nassert solution('''\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO'\nassert solution('''\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO'\n"
    },
    {
        "number": 2128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '112'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 2129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3 1 3 5'\nassert solution('''\n5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3 1 3 5'\nassert solution('''\n5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3 1 3 5'\nassert solution('''\n5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3 1 3 5'\nassert solution('''\n5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3 1 3 5'\n"
    },
    {
        "number": 2130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'No'\nassert solution('''\n6\n4 7 7 12 31 61\n''') == 'Yes'\nassert solution('''\n6\n4 7 7 12 31 61\n''') == 'Yes'\nassert solution('''\n6\n4 7 7 12 31 61\n''') == 'Yes'\nassert solution('''\n6\n4 7 7 12 31 61\n''') == 'Yes'\n"
    },
    {
        "number": 2131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"Yes\\n1\\n1 4\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"No\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"Yes\\n4\\n1 2\\n1 3\\n1 4\\n1 5\\n\"\n"
    },
    {
        "number": 2132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 100\n3 70\n4\n2\n3 120\n5\n3 120\n6\n1 150\n4\n3 300\n''') == '2'\nassert solution('''\n7\n1 20\n2\n6\n4\n6\n6\n2\n''') == '2'\nassert solution('''\n5\n1 100\n3 200\n2\n4\n5\n\n''') == '0'\n"
    },
    {
        "number": 2133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0 0 0\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('4\\n0 0 0 0\\n1 2\\n2 3\\n3 4') == '0'\nassert solution('4\\n0 0 0 0\\n1 2\\n2 3\\n3 4') == '0'\nassert solution('4\\n0 0 0 0\\n1 2\\n2 3\\n3 4') == '0'\nassert solution('4\\n0 0 0 0\\n1 2\\n2 3\\n3 4') == '0'\n"
    },
    {
        "number": 2134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 3 3\n2 8 5 10\n''') == '15'\nassert solution('''\n1\n0\n1\n''') == '0'\nassert solution('''\n2\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 2135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1 2 4 5\n2 5 5 8\n''') == '4'\n\nassert solution('''7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..###..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8\n''') == '53'\n"
    },
    {
        "number": 2136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1 4'\n\nassert solution('''\n3\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1 2'\n\nassert solution('''\n2\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '0'\n\nassert solution('''\n1\nS010\n''') == '0'\n\nassert solution('''\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '0'"
    },
    {
        "number": 2137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 1\") == \"8\"\nassert solution(\"3 1 0\") == \"6\"\nassert solution(\"3 1 0\") == \"0\"\n"
    },
    {
        "number": 2138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 2139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''bearbtear''') == '6'\nassert solution('''bearaabearc''') == '20'\n"
    },
    {
        "number": 2140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abcdef') == 'fbdcea'\nassert solution('vwxyz') == 'vwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'zabcdefghijklmnopqrstuvwxy'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'zabcdefghijklmnopqrstuvwxy'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'zabcdefghijklmnopqrstuvwxy'\n"
    },
    {
        "number": 2141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == 'WBW'\nassert solution('''4\n''') == 'BBB'\nassert solution('''5\n''') == 'WBWBWB'\nassert solution('''6\n''') == 'BBBBBB'\nassert solution('''7\n''') == 'WBWBWBWB'\n"
    },
    {
        "number": 2142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 2143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n1 8 3 11 4 9 2 7\n''') == '3'\nassert solution('''7\n3 1 7 11 9 2 12\n''') == '2'\n"
    },
    {
        "number": 2144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 9\n5 10\n42 9999999967\n''') == '6'\nassert solution('''\n1\n2\n3\n''') == '1'\nassert solution('''\n1\n2\n3\n''') == '0'\nassert solution('''\n1\n2\n3\n''') == '0'\nassert solution('''\n1\n2\n3\n''') == '0'\n"
    },
    {
        "number": 2145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 1\n3 6\n6 8\n1 2\n4 1\n31235 6578234\n''') == 'YES'\nassert solution('''\n2 3\n1 1\n3 6\n6 8\n1 2\n4 1\n31235 6578234\n''') == 'NO'\nassert solution('''\n2 3\n1 1\n3 6\n6 8\n1 2\n4 1\n31235 6578234\n''') == 'YES'\nassert solution('''\n2 3\n1 1\n3 6\n6 8\n1 2\n4 1\n31235 6578234\n''') == 'NO'\nassert solution('''\n2 3\n1 1\n3 6\n6 8\n1 2\n4 1\n31235 6578234\n''') == 'YES'\n"
    },
    {
        "number": 2146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2 3\n''') == '0 1 2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '0 1 2 3 4'\nassert solution('''\n7\n4 4 4 4 7 7 7\n''') == '0 1 2 1 2 3 3'\n"
    },
    {
        "number": 2147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 2148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '2 6.0 9.87298334621 13.3370849613'\nassert solution('6 2') == '2 6.0 9.87298334621 13.3370849613'\nassert solution('6 2') == '2 6.0 9.87298334621 13.3370849613'\nassert solution('6 2') == '2 6.0 9.87298334621 13.3370849613'\nassert solution('6 2') == '2 6.0 9.87298334621 13.3370849613'\n"
    },
    {
        "number": 2149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 3 1\n''') == '9'\nassert solution('''5 5\n1 1 4 2 2\n''') == '1000'\n"
    },
    {
        "number": 2150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 1 -2 1\n''') == '0 1 2 0 3'\nassert solution('''3\n1000 999999000 -1000000000\n''') == '1000 1000000000 0'\nassert solution('''5\n2 1 2 2 3\n''') == '2 3 5 7 10'\n"
    },
    {
        "number": 2151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'YES'\nassert solution('''\n4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO'\nassert solution('''\n4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'YES'\nassert solution('''\n4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO'\nassert solution('''\n4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'YES'\n"
    },
    {
        "number": 2152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3\n2 2\n3 1\n''') == '10'\nassert solution('''\n3\n1 3\n2 1\n3 2\n''') == '8'\nassert solution('''\n3\n1 3\n2 1\n3 2\n''') == '8'\nassert solution('''\n3\n1 3\n2 1\n3 2\n''') == '8'\nassert solution('''\n3\n1 3\n2 1\n3 2\n''') == '8'\n"
    },
    {
        "number": 2153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 3 1 4 5\n''') == '3'\nassert solution('''\n4\n4 2 2 4\n''') == '1'\nassert solution('''\n5\n100 1 100 1 100\n''') == '2'\n"
    },
    {
        "number": 2154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 5 4 7 9 12 6 2 10\n''') == '20'\nassert solution('''\n20\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4\n''') == '41'\n"
    },
    {
        "number": 2155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20\n1 0 2 3 5 3 2 1 3 2 3 1 4 2 1 4 2 3 2 4\n''') == '4 5'\nassert solution('''\n18\n2 2 3 2 4 3 3 3 0 2 4 2 1 3 2 1 1 1\n''') == '3 6'\nassert solution('''\n6\n2 1 0 2 1 2\n''') == '-1'\n"
    },
    {
        "number": 2156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n8 7 3 1 7 0 9 4\n3\n1 8\n2 5\n7 7\n''') == '3'\nassert solution('''\n6\n0 1 2 3 3 5\n3\n1 2\n1 4\n3 6\n''') == '0'\n"
    },
    {
        "number": 2157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\n"
    },
    {
        "number": 2158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 4\n0 2 2\n2 3 3\n''') == '5'\nassert solution('''\n6\n1 2 3\n0 2 100\n1 4 2\n0 3 7\n3 5 10\n''') == '105'\nassert solution('''\n11\n1 0 1664\n2 0 881\n3 2 4670\n4 2 1555\n5 1 1870\n6 2 1265\n7 2 288\n8 7 2266\n9 2 1536\n10 6 3378\n''') == '5551'\n"
    },
    {
        "number": 2159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6 0 0'\nassert solution('4') == '7 3 0 0'\nassert solution('5') == '7 3 0 0'\nassert solution('6') == '7 3 0 0'\nassert solution('7') == '7 3 0 0'\n"
    },
    {
        "number": 2160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n5 1 4\n''') == '9'\nassert solution('''4 8\n1 2 3 4 4 3 2 1\n''') == '0'\nassert solution('''100000 1\n42\n''') == '299997'\n"
    },
    {
        "number": 2161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nivan 1 00123\nmasha 1 00123\n''') == '2\\nmasha 1 00123\\nivan 1 00123\\n'\nassert solution('''\n3\nkarl 2 612 12\npetr 1 12\nkatya 1 612\n''') == '3\\nkatya 1 612\\npetr 1 12\\nkarl 1 612\\n'\nassert solution('''\n4\nivan 3 123 123 456\nivan 2 456 456\nivan 8 789 3 23 6 56 9 89 2\ndasha 2 23 789\n''') == '4\\ndasha 2 23 789\\nivan 4 789 123 2 456\\nivan 2 456 456\\nivan 8 789 3 23 6 56 9 89 2\\n'\n"
    },
    {
        "number": 2162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 2\n3 1\n4\n2 5\n''') == '1'\nassert solution('''\n3 2 1\n3 2 1\n5 4\n6\n''') == '2'\nassert solution('''\n1 5 1\n6\n5 1 2 4 7\n3\n''') == '3'\n"
    },
    {
        "number": 2163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '6'\nassert solution('2 2') == '14'\nassert solution('3 3') == '174'\n"
    },
    {
        "number": 2164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\nassert solution(\"5\\nabcdfdcecba\\nabbaxyzyx\\ncodeforces\\nacbba\\n\") == \"abcdfdcba\"\n"
    },
    {
        "number": 2165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 100') == '6.000000000000000'\nassert solution('3 9') == '40.000000000000000'\nassert solution('2 12') == '1.666666666666667'\n"
    },
    {
        "number": 2166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n-1 -1 4 3 -1') == '2'\nassert solution('10\\n-1 -1 4 3 -1') == '1'\nassert solution('100\\n-1 -1 4 3 -1') == '2'\nassert solution('1000\\n-1 -1 4 3 -1') == '1'\nassert solution('10000\\n-1 -1 4 3 -1') == '2'\n"
    },
    {
        "number": 2167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '3'\nassert solution('4 1') == '4'\nassert solution('5 1') == '5'\nassert solution('6 1') == '6'\n"
    },
    {
        "number": 2168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 4 3\n2 2 1\n3 1 1 1\n''') == '13'\nassert solution('''\n3\n2 4 3\n2 2 1\n3 1 1 1\n''') == '13'\nassert solution('''\n3\n2 4 3\n2 2 1\n3 1 1 1\n''') == '13'\nassert solution('''\n3\n2 4 3\n2 2 1\n3 1 1 1\n''') == '13'\nassert solution('''\n3\n2 4 3\n2 2 1\n3 1 1 1\n''') == '13'\n"
    },
    {
        "number": 2169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\") == \"5\"\nassert solution(\"3 3 2\") == \"5\"\nassert solution(\"3 3 2\") == \"5\"\nassert solution(\"3 3 2\") == \"5\"\nassert solution(\"3 3 2\") == \"5\"\n"
    },
    {
        "number": 2170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 2171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(0) == \"yes\"\nassert solution(1) == \"yes\"\nassert solution(2) == \"no\"\nassert solution(3) == \"yes\"\nassert solution(6) == \"yes\"\n"
    },
    {
        "number": 2172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\ncodeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest\n''') == 'codeforces round letter round'\nassert solution('''\n5 3\njoll wuqrd\neuzf un\nhbnyiyc rsoqqveh\nhbnyiyc joll joll euzf joll\n''') == 'hbnyiyc joll joll un joll'\nassert solution('''\n4 3\ncodeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest\n''') == 'codeforces round letter round'\nassert solution('''\n5 3\njoll wuqrd\neuzf un\nhbnyiyc rsoqqveh\nhbnyiyc joll joll euzf joll\n''') == 'hbnyiyc joll joll un joll'\nassert solution('''\n4 3\ncodeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest\n''') == 'codeforces round letter round'\n"
    },
    {
        "number": 2173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 2174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0\n1\n2\n''') == '2'\nassert solution('''\n3\n-1\n-1\n2\n''') == '6'\nassert solution('''\n3\n-1\n-1\n2\n''') == '6'\nassert solution('''\n3\n-1\n-1\n2\n''') == '6'\nassert solution('''\n3\n-1\n-1\n2\n''') == '6'\n"
    },
    {
        "number": 2175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n''') == '4 5 8'\nassert solution('''\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n''') == '7 10 5'\n"
    },
    {
        "number": 2176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 1''') == '3'\nassert solution('''4\n2 3\n2 2\n2 1\n2 4''') == '0'\nassert solution('''5\n1 1\n1 1\n2 3\n2 2\n2 1''') == '6'\n"
    },
    {
        "number": 2177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 11\n4 2\n191 31415926\n''') == '1'\nassert solution('''\n1 1\n4 2\n191 31415926\n''') == '0'\nassert solution('''\n1 1\n4 2\n191 31415926\n''') == '1337'\n"
    },
    {
        "number": 2178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n2 1 3\n''') == '2 0 1'\nassert solution('''\n5\n3 1 4 2 5\n4 5 1 3 2\n''') == '3 2 0 0 0'\n"
    },
    {
        "number": 2179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 2180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\nC.C') == '2'\nassert solution('1\\n2\\n.C') == '1'\nassert solution('1\\n2\\n.C') == '1'\nassert solution('1\\n2\\n.C') == '1'\nassert solution('1\\n2\\n.C') == '1'\n"
    },
    {
        "number": 2181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '1.0000000000 2.0000000000'\nassert solution('4.147 2.8819') == '2.8819000000 0.0000000000'\n"
    },
    {
        "number": 2182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"red\"\nassert solution(\"603\") == \"red\"\nassert solution(\"006\") == \"red\"\nassert solution(\"205\") == \"cyan\"\nassert solution(\"228\") == \"cyan\"\n"
    },
    {
        "number": 2183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '3'\nassert solution('2 1') == '1'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 2184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00110011') == 'y'\nassert solution('00000111') == '(y|z)&x'\nassert solution('11110000') == '!x'\nassert solution('00011111') == 'x|y&z'\n\n\"\"\""
    },
    {
        "number": 2185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'YES'\nassert solution('''\n4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'NO'\nassert solution('''\n4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'YES'\nassert solution('''\n4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'NO'\n"
    },
    {
        "number": 2186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 2187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 3 2 5\n5\n1 2 3 5 3\n3\n1 1 1\n''') == '3'\nassert solution('''\n3\n1 2 3\n3\n1 1 1\n''') == '2'\nassert solution('''\n3\n1 2 3\n3\n1 1 1\n''') == '0'\nassert solution('''\n4\n5 3 2 5\n5\n1 2 3 5 3\n3\n1 1 1\n''') == '2'\nassert solution('''\n3\n1 2 3\n3\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 2188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 7\n6 4\n2 10\n9 8\n3 5\n''') == '3'\nassert solution('''\n3\n5 4\n3 2\n6 1\n''') == '3'\nassert solution('''\n5\n1 7\n6 4\n2 10\n9 8\n3 5\n''') == '3'\nassert solution('''\n5\n1 7\n6 4\n2 10\n9 8\n3 5\n''') == '3'\nassert solution('''\n5\n1 7\n6 4\n2 10\n9 8\n3 5\n''') == '3'\n"
    },
    {
        "number": 2189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1 3 2'\nassert solution('4 5') == '3 1 2 4 5'\n"
    },
    {
        "number": 2190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n1 3 9 8 24 1\n''') == '5'\n"
    },
    {
        "number": 2191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n11?000\n\n''') == '6 3 2 1 0 0 \n\nassert solution('''5\n01?01\n\n''') == '5 1 0 0 0 \n\nassert solution('''12\n???1??????1?\n\n''') == '12 6 4 3 2 2 1 1 1 1 1 1 \n"
    },
    {
        "number": 2192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1.00000000 3.50000000'\nassert solution('3') == '1.00000000 3.00000000 5.00000000'\nassert solution('4') == '1.00000000 3.00000000 5.00000000'\nassert solution('5') == '1.00000000 3.00000000 5.00000000'\nassert solution('6') == '1.00000000 3.00000000 5.00000000'\n"
    },
    {
        "number": 2193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 2 0\n1 3 1\n2 3 0\n2 3 1\n''') == '2'\nassert solution('''\n4 8\n1 1 0\n1 3 0\n1 3 1\n3 2 0\n2 1 0\n3 4 1\n2 4 0\n2 4 1\n''') == '3'\nassert solution('''\n5 10\n1 2 0\n1 3 1\n1 4 0\n2 3 0\n2 3 1\n2 5 0\n3 4 0\n3 4 1\n4 2 1\n4 5 0\n''') == '-1'\n"
    },
    {
        "number": 2194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n7 4 9 9\n1 2 8\n3 1\n4 2 4\n''') == '24'\nassert solution('''\n3 8\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '29'\nassert solution('''\n2\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '22'\n"
    },
    {
        "number": 2195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3\n391 555\n0 0\n9 4\n''') == '1337'\nassert solution('''\n2\n1 3\n391 555\n0 0\n9 4\n''') == '0'\n"
    },
    {
        "number": 2196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('5') == '10'\n"
    },
    {
        "number": 2197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n0.500000 0.250000 0.250000') == '0.62500000'\nassert solution('2 2\\n0.500000 0.250000 0.250000') == '0.62500000'\nassert solution('2 2\\n0.500000 0.250000 0.250000') == '0.62500000'\nassert solution('2 2\\n0.500000 0.250000 0.250000') == '0.62500000'\nassert solution('2 2\\n0.500000 0.250000 0.250000') == '0.62500000'\n"
    },
    {
        "number": 2198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n.b..bz....\\n1 h\\n3 c\\n9 f\\n\") == \"4\"\nassert solution(\"4 4\\n.cc.\\n2.\\n3.\\n2 a\\n1 a\\n\") == \"1\"\nassert solution(\"10 3\\n.b..bz....\\n1 h\\n3 c\\n9 f\\n\") == \"4\"\nassert solution(\"10 3\\n.b..bz....\\n1 h\\n3 c\\n9 f\\n\") == \"4\"\nassert solution(\"10 3\\n.b..bz....\\n1 h\\n3 c\\n9 f\\n\") == \"4\"\n"
    },
    {
        "number": 2199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '0.5000000000'\nassert solution('2') == '3.0000000000'\nassert solution('1 4') == '0.5000000000'\nassert solution('2') == '3.0000000000'\nassert solution('1 8') == '0.5000000000'\n"
    },
    {
        "number": 2200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 4') == '0 2 3 1 1'\nassert solution('3 1 2') == '1 0 1'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 2201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4 4\n3 5\n5 8\n6 3\n8 4\n''') == '22'\nassert solution('''\n16 5 2\n8 2\n5 1\n''') == '-1'\n"
    },
    {
        "number": 2202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 10\n3 4 7 2\n''') == '16'\nassert solution('''10 12\n16 3 24 13 9 8 7 5 12 12\n''') == '13'\n"
    },
    {
        "number": 2203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"7\"\nassert solution(\"4 3\") == \"14\"\nassert solution(\"4 2\") == \"Game cheated!\"\nassert solution(\"4 2\") == \"Data not sufficient!\"\nassert solution(\"4 2\") == \"Game cheated!\"\n"
    },
    {
        "number": 2204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n5 0\n1 4\n2 2\n''') == '14'\nassert solution('''\n5 3\n5 2\n4 2\n3 1\n''') == '16'\n"
    },
    {
        "number": 2205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '10'\nassert solution('1 2 3 4 5') == '15'\nassert solution('1 2 3 4 5 6') == '20'\nassert solution('1 2 3 4 5 6 7') == '25'\n"
    },
    {
        "number": 2206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '12'\nassert solution('5') == '0'\n"
    },
    {
        "number": 2207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"2\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 7\") == \"3\"\nassert solution(\"8 8\") == \"2\"\n"
    },
    {
        "number": 2208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 3 2 1 4\n6 7 1 2 3 2\n''') == '2'\nassert solution('''\n3\n3 3 3\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 2209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '18'\nassert solution('2') == '1'\n"
    },
    {
        "number": 2210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Ayush\"\nassert solution(\"2\") == \"Ashish\"\n"
    },
    {
        "number": 2211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaab\") == \"3\"\nassert solution(\"ltntlnen\") == \"2\"\nassert solution(\"a\") == \"1\"\n"
    },
    {
        "number": 2212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2 1 4'\nassert solution('4') == '3 5 7 6'\nassert solution('5') == '4 5 7 6 8'\nassert solution('6') == '5 6 7 8 9'\n"
    },
    {
        "number": 2213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5 0\n1 3 2 5 4\n1 4 3 2 5\n''') == '3'\nassert solution('''\n3 2 1\n1 2\n2 3\n3 4\n''') == '2 4'\n"
    },
    {
        "number": 2214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"7 15\") == \"-1\"\n"
    },
    {
        "number": 2215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"01100\"\nassert solution(\"6 3\") == \"110010\"\n"
    },
    {
        "number": 2216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3') == '3 1 1 1 2 1 3\\n3 2 1 2 2 2 3\\n3 3 1 3 2 3 3'\nassert solution('2 3 1') == '6 1 1 1 2 1 3 2 3 2 2 2 1'\n"
    },
    {
        "number": 2217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''12\n3\n4 4\n12 1\n3 4\n''') == '1'\nassert solution('''1\n1\n1 1\n''') == '1'\nassert solution('''288807105787200\n4\n46 482955026400\n12556830686400 897\n414 12556830686400\n4443186242880 325\n''') == '547558588'\nassert solution('''1\n1\n1 1\n''') == '1'\nassert solution('''288807105787200\n4\n46 482955026400\n12556830686400 897\n414 12556830686400\n4443186242880 325\n''') == '277147129'\n"
    },
    {
        "number": 2218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1 1\\n1 2\\n2 3 2'\nassert solution('2 1') == '1 12'\n"
    },
    {
        "number": 2219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n59 3\n''') == '8'\nassert solution('''\n2\n1000000000000000000 10\n''') == '19'\n"
    },
    {
        "number": 2220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 9 2\n1 3 3 7 4 2\n''') == '54'\nassert solution('''\n3 1000000000 1\n1000000000 987654321 1000000000\n''') == '1000000000000000000'\nassert solution('''\n3 1000000000 1\n1000000000 987654321 1000000000\n''') == '1000000000000000000'\nassert solution('''\n3 1000000000 1\n1000000000 987654321 1000000000\n''') == '1000000000000000000'\nassert solution('''\n3 1000000000 1\n1000000000 987654321 1000000000\n''') == '1000000000000000000'\n"
    },
    {
        "number": 2221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 0\n4 6\n3\nUUU''') == '5'\nassert solution('''0 3\n0 0\n3\nUDD''') == '3'\nassert solution('''0 0\n0 1\n1\nL''') == '-1'\n"
    },
    {
        "number": 2222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 0 1 1 0 1\n1 1 2 2 2 2\n''') == '1'\nassert solution('''\n5\n1 0 1 0 1\n1 1 2 2 3\n''') == '4'\nassert solution('''\n8\n1 0 0 1 0 1 1 0\n1 1 2 2 3 3 3\n''') == '5'\nassert solution('''\n9\n1 1 0 0 1 0 1 0 1\n1 1 2 2 3 3 4 4\n''') == '5'\n"
    },
    {
        "number": 2223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 4\n4 1\n3 1\n''') == '1'\nassert solution('''\n3\n1 2\n1 3\n''') == '-1'\nassert solution('''\n10\n7 1\n8 4\n8 10\n4 7\n6 5\n9 3\n3 5\n2 10\n2 5\n''') == '4'\n"
    },
    {
        "number": 2224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2 3\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n''') == '3'\n\nassert solution('''\n6 2 3\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n''') == '0'\n\nassert solution('''\n6 2 3\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n''') == '3'\n\nassert solution('''\n6 2 3\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n''') == '0'\n\nassert solution('''\n6 2 3\n1 2\n1 5\n2 3\n3 4\n4 5\n5 6\n''') == '3'"
    },
    {
        "number": 2225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1'\nassert solution('''\n2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '3'\nassert solution('''\n2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '3'\nassert solution('''\n2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '3'\nassert solution('''\n2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '3'\n"
    },
    {
        "number": 2226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 8 25\n1 2 1\n2 3 10\n3 4 2\n1 5 2\n5 6 7\n6 4 15\n5 3 1\n1 7 3\n''') == '4361'\nassert solution('''\n2 1 5\n1 2 4\n''') == '60'\nassert solution('''\n15 15 23\n13 10 12\n11 14 12\n10 8 12\n3 10 1\n5 6 11\n1 13 8\n9 15 4\n4 2 9\n11 15 1\n11 12 14\n10 8 12\n3 6 11\n''') == '3250'\n"
    },
    {
        "number": 2227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"heavymetalisheavymetal\") == \"3\"\nassert solution(\"heavymetalismetal\") == \"2\"\nassert solution(\"trueheavymetalissotruewellitisalsosoheavythatyoucanalmostfeeltheweightofmetalonyou\") == \"3\"\n"
    },
    {
        "number": 2228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 5\\n2 4\\n5 6') == '2 2'\nassert solution('4\\n3 4\\n4 5\\n4 6\\n8 10') == '4 2'\n"
    },
    {
        "number": 2229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 5 4 13') == '2 3 5 7 11'\nassert solution('3\\n10 3 7') == '10 3 7'\n"
    },
    {
        "number": 2230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 4\\n2 3'\n"
    },
    {
        "number": 2231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5\n''') == '2 7 7 2'\nassert solution('''\n3\n4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5\n''') == '2 2 1 1'\nassert solution('''\n3\n4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5\n''') == '5 5 5 5'\nassert solution('''\n3\n4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5\n''') == '5 5 5 5'\nassert solution('''\n3\n4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5\n''') == '5 5 5 5'\n"
    },
    {
        "number": 2232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n1 4\n1 5\n1 6\n2 3\n2 4\n4 7\n\n''') == '3 6'\nassert solution('''\n9\n6 8\n10 3\n3 7\n5 8\n5 9\n4 10\n4 11\n\n''') == '9 11'\nassert solution('''\n11\n1 2\n2 3\n3 4\n1 5\n1 6\n6 7\n5 8\n5 9\n4 10\n4 11\n\n''') == '9 11'\nassert solution('''\n88\n1 2\n2 3\n3 4\n1 5\n1 6\n6 7\n5 8\n5 9\n4 10\n4 11\n\n''') == '8 11'\nassert solution('''\n''') == '0 0'\n"
    },
    {
        "number": 2233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n''') == \"Yes\"\nassert solution('''\n4\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n''') == \"No\"\nassert solution('''\n4\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n''') == \"No\"\nassert solution('''\n4\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n''') == \"No\"\nassert solution('''\n4\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n''') == \"No\"\n"
    },
    {
        "number": 2234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0\n5 8\n0 1000000\n0 0\n1 0\n1000000 1000000\n''') == '0'\nassert solution('''\n6 0\n5 8\n0 1000000\n0 0\n1 0\n1000000 1000000\n''') == '1000000'\nassert solution('''\n6 0\n5 8\n0 1000000\n0 0\n1 0\n1000000 1000000\n''') == '1000000'\nassert solution('''\n6 0\n5 8\n0 1000000\n0 0\n1 0\n1000000 1000000\n''') == '1000000'\nassert solution('''\n6 0\n5 8\n0 1000000\n0 0\n1 0\n1000000 1000000\n''') == '1000000'\n"
    },
    {
        "number": 2235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10\n20\n30\n''') == '20 20 10'\nassert solution('''10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n''') == '20 20 10'\nassert solution('''10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n''') == '20 20 10'\nassert solution('''10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n''') == '20 20 10'\nassert solution('''10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n''') == '20 20 10'\n"
    },
    {
        "number": 2236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 0 -5\n\n''') == '1'\n\nassert solution('''\n4\n1 2 3 -6\n\n''') == '3'\n\nassert solution('''\n4\n-1 0 1 0\n\n''') == '2'\n\nassert solution('''\n4\n-1 0 1 0\n\n''') == '3'\n\nassert solution('''\n4\n-1 0 1 0\n\n''') == '2'"
    },
    {
        "number": 2237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n2\n2 3\n''') == '2'\nassert solution('''\n4\n1 2 3 4\n''') == '3'\nassert solution('''\n1\n20\n''') == '0'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 2238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n''') == '*D*\n\nassert solution('''5\n''') == '**D**\n\nassert solution('''7\n''') == '***D***'\n"
    },
    {
        "number": 2239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2\n13\n37\n100\n''') == '1'\nassert solution('''\n4\n3\n8\n27\n''') == '3'\nassert solution('''\n4\n3\n8\n27\n''') == '8'\nassert solution('''\n4\n2\n13\n37\n100\n''') == '27'\n"
    },
    {
        "number": 2240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n01\naaaaaa\n\nOutput\n4\n\n''') == '4'\nassert solution('''\n001\nkokokokotlin\n\nOutput\n2\n\n''') == '2'\n"
    },
    {
        "number": 2241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '-1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 2242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1817181712114') == '3'\nassert solution('123456789') == '0'\nassert solution('123456789') == '0'\nassert solution('123456789') == '0'\nassert solution('123456789') == '0'\n"
    },
    {
        "number": 2243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 8\n300 950 500 200\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3\n''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''\n6 3 9\n50 20 51 17 99 24\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3\n''') == 'NO\\nYES\\nNO\\nYES'\n"
    },
    {
        "number": 2244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 2\n''') == '2 1 3'\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '2 1 3'\nassert solution('''\n4 4\n1 2\n2 3\n3 4\n4 1\n''') == '2 1 3 4'\nassert solution('''\n5 5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '2 1 3 4 5'\nassert solution('''\n6 6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n''') == '2 1 3 4 5 6'\n"
    },
    {
        "number": 2245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 3\n3 3\n3 4\n4 4\n''') == 'Alice'\nassert solution('''\n0 3\n3 3\n3 4\n4 4\n''') == 'Bob'\nassert solution('''\n0 3\n3 3\n3 4\n4 4\n''') == 'Bob'\nassert solution('''\n0 3\n3 3\n3 4\n4 4\n''') == 'Alice'\n''')\n"
    },
    {
        "number": 2246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n''') == '1.500000000000000'\nassert solution('''\n5\n1 2\n1 3\n3 4\n2 5\n''') == '2.000000000000000'\n"
    },
    {
        "number": 2247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n1\n1\n''') == '1'\nassert solution('''\n4\n1\n1\n1\n''') == '1'\nassert solution('''\n5\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 2248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2'\nassert solution('5 4') == '3'\n"
    },
    {
        "number": 2249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 4 1 3\n''') == '9'\nassert solution('''7\n1 2 1 1 1 3 2\n''') == '7'\n"
    },
    {
        "number": 2250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '1'\nassert solution('''5\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '0'\nassert solution('''5\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '2'\nassert solution('''5\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '3'\nassert solution('''5\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '2'\n"
    },
    {
        "number": 2251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7') == '1'\nassert solution('4 5') == '2'\nassert solution('5 7') == '1'\nassert solution('4 5') == '2'\nassert solution('5 7') == '1'\n"
    },
    {
        "number": 2252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n5 4 3 2 1\n1 5 3\n1 3 1\n2 4 3\n4 4 4\n2 5 3''') == 'Yes'\nassert solution('''6 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3''') == 'Yes'\nassert solution('''5 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3''') == 'No'\n"
    },
    {
        "number": 2253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''kamusta_po\ngenki_desu\nohayou_gozaimasu\nannyeong_hashimnida\nhajime_no_ippo\nbensamu_no_sentou_houhou_ga_okama_kenpo\nang_halaman_doon_ay_sarisari_singkamasu\nsi_roy_mustang_ay_namamasu''') == 'FILIPINO'\nassert solution('''kamusta_po\ngenki_desu\nohayou_gozaimasu\nannyeong_hashimnida\nhajime_no_ippo\nbensamu_no_sentou_houhou_ga_okama_kenpo\nang_halaman_doon_ay_sarisari_singkamasu\nsi_roy_mustang_ay_namamasu''') == 'JAPANESE'\nassert solution('''kamusta_po\ngenki_desu\nohayou_gozaimasu\nannyeong_hashimnida\nhajime_no_ippo\nbensamu_no_sentou_houhou_ga_okama_kenpo\nang_halaman_doon_ay_sarisari_singkamasu\nsi_roy_mustang_ay_namamasu''') == 'KOREAN'\n\n'''\n"
    },
    {
        "number": 2254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n6 7 14\n''') == '2'\nassert solution('''\n4\n1 2 1 16\n''') == '4'\n"
    },
    {
        "number": 2255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n1 3\n''') == '1 2 3'\nassert solution('''5 5\n1 4\n3 4\n5 4\n3 2\n1 5\n''') == '1 4 3 7 9 8 6 5 2 10'\n"
    },
    {
        "number": 2256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 3 2\n100 33 100 1\n6 0 2 3\n''') == '99'\nassert solution('''\n5 1 3 2\n100 33 100 1\n6 0 2 3\n''') == '1'\nassert solution('''\n5 1 3 2\n100 33 100 1\n6 0 2 3\n''') == '2'\nassert solution('''\n5 1 3 2\n100 33 100 1\n6 0 2 3\n''') == '2'\nassert solution('''\n5 1 3 2\n100 33 100 1\n6 0 2 3\n''') == '2'\n"
    },
    {
        "number": 2257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 -1 0 5 3') == '6'\nassert solution('4 0 0 5 0') == '33'\n"
    },
    {
        "number": 2258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 1 2\n''') == '2'\nassert solution('''\n4\n1 8 1 6\n''') == '2'\nassert solution('''\n5\n1 1 1 2 2\n''') == '0'\n"
    },
    {
        "number": 2259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '2'\nassert solution('3 1 2 3') == '3'\nassert solution('3 1 2 3 4') == '3'\nassert solution('3 1 2 3 4 5') == '3'\nassert solution('3 1 2 3 4 5 6') == '3'\n"
    },
    {
        "number": 2260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '25'\nassert solution('3') == '27'\nassert solution('4') == '49'\nassert solution('5') == '125'\nassert solution('6') == '36'\n"
    },
    {
        "number": 2261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '++**\\n+*+*\\n++++\\n+**+'\n"
    },
    {
        "number": 2262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\na aa aaa ab abb\\n\") == \"2\"\nassert solution(\"3\\namer arem mrea\\n\") == \"1\"\n"
    },
    {
        "number": 2263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '14.0000000000'\nassert solution('6') == '19.6000000000'\n"
    },
    {
        "number": 2264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1\n''') == '2'\nassert solution('''\n2\n3 4\n4 5\n5 6\n''') == '0'\nassert solution('''\n2\n3 4\n4 5\n5 6\n''') == '0'\nassert solution('''\n2\n3 4\n4 5\n5 6\n''') == '0'\nassert solution('''\n2\n3 4\n4 5\n5 6\n''') == '0'\n"
    },
    {
        "number": 2265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 2266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2 4\n1 6\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1'\nassert solution('''\n6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6\n''') == '2'\nassert solution('''\n6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6\n''') == '4'\nassert solution('''\n6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6\n''') == '5'\nassert solution('''\n6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6\n''') == '5'\n"
    },
    {
        "number": 2267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nabba\nabacaba\nbcd\ner\n''') == 'abacabaabbabcder'\nassert solution('''\n5\nx\nxx\nxxa\nxxaa\nxxaaa\n''') == 'xxaaaxxaaxxaxxx'\nassert solution('''\n3\nc\ncb\ncba\n''') == 'cbacbc'\n'''\n"
    },
    {
        "number": 2268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1\\npolice') =='molice'\nassert solution('11 6\\nabacabadaba\\na b\\nb c\\na d\\ne g\\nf a\\nb b') == 'cdcbcdcfcdc'\n"
    },
    {
        "number": 2269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n''') == '3'\nassert solution('''\n2\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n''') == '4'\nassert solution('''\n3\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n''') == '4'\nassert solution('''\n4\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n''') == '0'\nassert solution('''\n5\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n''') == '0'\n"
    },
    {
        "number": 2270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n''') == 'NO'\nassert solution('''\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n''') == 'YES'\nassert solution('''\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n''') == 'YES'\nassert solution('''\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n''') == 'YES'\nassert solution('''\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n''') == 'YES'\n"
    },
    {
        "number": 2271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n1 3\\n1 4\\n') == '3'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '4'\n"
    },
    {
        "number": 2272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 5\") == \"YES\"\nassert solution(\"1 5 11\") == \"YES\"\nassert solution(\"2 1 2\") == \"NO\"\nassert solution(\"1 2 9\") == \"YES\"\nassert solution(\"2 1 2\") == \"NO\""
    },
    {
        "number": 2273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 11\n1 2\n1 3\n1 4\n1 5\n1 6\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n''') == '1 2 2 3 3 3'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1'\n'''\n"
    },
    {
        "number": 2274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC''') == '9'\nassert solution('''3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC''') == '0'\nassert solution('''3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC''') == '1'\nassert solution('''3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC''') == '3'\nassert solution('''3 3\nRRD\nDDR\nRRC\n1 4\nDDDC\n6 9\nRDDDDDRRR\nRRDDRRDDD\nRRDRDRRDR\nDDDDRDDRR\nDRRDRDDDR\nDDRDRRDDC\n1 1\nC''') == '9'\n"
    },
    {
        "number": 2275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n4\nPPAP\n\n''') == '1'\nassert solution('''\n3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n\n''') == '4'\nassert solution('''\n3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n\n''') == '1'\nassert solution('''\n3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n\n''') == '0'\nassert solution('''\n3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n\n''') == '0'\n"
    },
    {
        "number": 2276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '109'\nassert solution('5') == '23'\n"
    },
    {
        "number": 2277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n2\n1 2\n2 3\n''') == 'odd'\nassert solution('''\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'odd'\nassert solution('''\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'even'\n"
    },
    {
        "number": 2278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 26 2\n3 9 1\n''') == '4 5 6 13 26'\nassert solution('''\n5 26 2\n3 9 1\n''') == '-1'\nassert solution('''\n5 26 2\n3 9 1\n''') == '4 5 6 13 26'\nassert solution('''\n5 26 2\n3 9 1\n''') == '-1'\nassert solution('''\n5 26 2\n3 9 1\n''') == '4 5 6 13 26'\n"
    },
    {
        "number": 2279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 1 4 3\"\nassert solution(\"3\") == \"6 5 4 3 2 1\"\n"
    },
    {
        "number": 2280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2'\n\nassert solution('''\n4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '1'\n\nassert solution('''\n4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '0'\n\nassert solution('''\n4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '0'\n\nassert solution('''\n4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '0'"
    },
    {
        "number": 2281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '1 1 2 2'\nassert solution('3') == '1 1 2 2 3'\nassert solution('4') == '1 1 2 2 3 4'\nassert solution('5') == '1 1 2 2 3 4 5'\n"
    },
    {
        "number": 2282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nLRLR\n''') == '5'\nassert solution('''4\nLRLR\n''') == '5'\nassert solution('''4\nLRLR\n''') == '5'\nassert solution('''4\nLRLR\n''') == '5'\nassert solution('''4\nLRLR\n''') == '5'\n"
    },
    {
        "number": 2283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 5 2 2\n1 3 4\n1 4 4\n3 4 5\n3 2 2\n4 2 2\n''') == '8'\nassert solution('''\n3 3\n9 7 8\n1 2 1\n2 3 2\n1 3 3\n''') == '0'\n"
    },
    {
        "number": 2284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 4\\n3 8 7 9 9 4 6 8\\n\") == \"32\"\nassert solution(\"8 5\\n3 8 7 9 9 4 6 8\\n\") == \"32\"\nassert solution(\"8 6\\n3 8 7 9 9 4 6 8\\n\") == \"32\"\nassert solution(\"8 7\\n3 8 7 9 9 4 6 8\\n\") == \"32\"\nassert solution(\"8 8\\n3 8 7 9 9 4 6 8\\n\") == \"32\"\n"
    },
    {
        "number": 2285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000:0124:0001:f19a:1000:0000\\na56f:00d3:0000:0124:0001:0000:0000:0000\\na56f:0000:0000:0124:0001:0000:1234:0ff0\\na56f:0000:0000:0000:0001:0000:1234:0ff0\\n0000:0000:0000:0000:0000:0000:0000:0000\\n00ea:0000:0000:0000:004d:00f4:0006:0000'\n"
    },
    {
        "number": 2286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n011\n101\n110\n''') == '0 0 0 6'\nassert solution('''\n4\n0101\n1000\n0001\n1010\n''') == '2 2 6 2 2 6 2 2'\nassert solution('''\n5\n0101\n1000\n0001\n1010\n0001\n1010\n''') == '2 2 6 2 2 6 2 2'\nassert solution('''\n6\n0101\n1000\n0001\n1010\n0001\n1010\n0001\n1010\n''') == '2 2 6 2 2 6 2 2'\nassert solution('''\n7\n0101\n1000\n0001\n1010\n0001\n1010\n0001\n1010\n0001\n''') == '2 2 6 2 2 6 2 2'\n"
    },
    {
        "number": 2287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 2288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\nassert solution('''\n5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\nassert solution('''\n5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'No'\nassert solution('''\n5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\nassert solution('''\n5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\n"
    },
    {
        "number": 2289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2 1 2 1\n3 10 1 1 1\n''') == '3'\nassert solution('''4 4\n1 2 3 4\n9 1 10 6\n''') == '4'\nassert solution('''5 5\n1 2 1 2 1\n3 10 1 1 1\n''') == '1'\nassert solution('''4 4\n1 2 3 4\n9 1 10 6\n''') == '4'\nassert solution('''5 5\n1 2 1 2 1\n3 10 1 1 1\n''') == '1'\n"
    },
    {
        "number": 2290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n14 8\n1 2\n2 7\n3 4\n6 3\n5 7\n3 8\n6 8\n11 12\n''') == '1'\nassert solution('''\n200000 3\n7 9\n9 8\n4 5\n''') == '0'\n"
    },
    {
        "number": 2291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n2\n1 5\n''') == '4'\n"
    },
    {
        "number": 2292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n1 2\n2 1\n3\n1 2 3\n1 2 3\n3\n1 2 4\n1 3 4\n4\n1 2 3\n1 3 2\n3\n1 2 3\n1 3 2\n''') == 'Yes'\nassert solution('''\n5\n2\n1 2\n2 1\n3\n1 2 3\n1 2 3\n3\n1 2 4\n1 3 4\n4\n1 2 3\n1 3 2\n3\n1 2 3\n1 3 2\n''') == 'No'\nassert solution('''\n5\n2\n1 2\n2 1\n3\n1 2 3\n1 2 3\n3\n1 2 4\n1 3 4\n4\n1 2 3\n1 3 2\n3\n1 2 3\n1 3 2\n''') == 'Yes'\nassert solution('''\n5\n2\n1 2\n2 1\n3\n1 2 3\n1 2 3\n3\n1 2 4\n1 3 4\n4\n1 2 3\n1 3 2\n3\n1 2 3\n1 3 2\n''') == 'No'\n"
    },
    {
        "number": 2293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n3 1 2 3\n3 3 4 5\n''') == 'possible'\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'impossible'\n"
    },
    {
        "number": 2294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 5\n3 5 5\n1 2 5\n3 6 5\n2 3 5\n3 7 5\n''') == '1'\nassert solution('''\n1 1 1\n2 2 1\n3 3 1\n''') == '0'\nassert solution('''\n1 1 1\n2 2 1\n3 3 1\n''') == '1'\nassert solution('''\n1 1 1\n2 2 1\n3 3 1\n''') == '0'\nassert solution('''\n1 1 1\n2 2 1\n3 3 1\n''') == '1'\n"
    },
    {
        "number": 2295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1.500000'\nassert solution('2 2') == '1.000000'\n"
    },
    {
        "number": 2296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n0 0\n2 0\n2 2\n1 1 2\n2 1\n2 2\n2 3\n''') == '3.4142135624 -1.4142135624'\nassert solution('''\n3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1\n''') == '1.0000000000 -1.0000000000'\n"
    },
    {
        "number": 2297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3''') == '-2'\nassert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3''') == '-2'\nassert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3''') == '-2'\nassert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3''') == '-2'\nassert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3''') == '-2'\n"
    },
    {
        "number": 2298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 0 0 2 4'\nassert solution('''\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 91'\n"
    },
    {
        "number": 2299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes'\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'No'\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes'\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'No'\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes'\n"
    },
    {
        "number": 2300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n1 3 1 2 4\n2 1 4\n2 1 5\n2 2 4\n1 3 10\n2 1 5\n''') == '12'\nassert solution('''\n5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '45'\nassert solution('''\n5 5\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '8'\nassert solution('''\n5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '50'\nassert solution('''\n5 5\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '12'\n"
    },
    {
        "number": 2301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2 2 4 5 4\n''') == '3'\nassert solution('''\n4\n1 3 2 2 4 5 4\n''') == '4'\nassert solution('''\n5\n1 3 2 2 4 5 4\n''') == '5'\nassert solution('''\n6\n1 3 2 2 4 5 4\n''') == '5'\nassert solution('''\n7\n1 3 2 2 4 5 4\n''') == '4'\n"
    },
    {
        "number": 2302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"2 2 0\") == \"3\"\n"
    },
    {
        "number": 2303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"the sky is blue\") == \"blue is sky the\"\nassert solution(\"  hello world  \") == \"world hello\"\nassert solution(\"a good   example\") == \"example good a\"\nassert solution(\"  Bob    Loves  Alice   \") == \"Alice Loves Bob\"\nassert solution(\"Alice does not even like bob\") == \"bob like even not does Alice\""
    },
    {
        "number": 2304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\n"
    },
    {
        "number": 2305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 2306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2100.000000000000000\"\nassert solution(\"2\") == \"2100.000000000000000\"\nassert solution(\"3\") == \"2100.000000000000000\"\nassert solution(\"4\") == \"2100.000000000000000\"\nassert solution(\"5\") == \"2100.000000000000000\"\n"
    },
    {
        "number": 2307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NOT READY\"\nassert solution(\"2\") == \"READY FOR BATTLE\"\nassert solution(\"3\") == \"NOT READY\"\nassert solution(\"4\") == \"READY FOR BATTLE\"\nassert solution(\"5\") == \"NOT READY\"\n"
    },
    {
        "number": 2308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1'\nassert solution('''\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '3'\nassert solution('''\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '0'\nassert solution('''\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '0'\nassert solution('''\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '0'\n"
    },
    {
        "number": 2309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nsame\nsame\nsame\ndiffer\n''') == '1'\nassert solution('''\n7\narsijo\nsuggested\nthe\nidea\nfor\nthis\nproblem\n''') == '0'\nassert solution('''\n14\nwow\nthis\nis\nthe\nfirst\nmcdics\ncodeforces\nround\nhooray\ni\nam\nproud\nabout\nthat\n''') == '3'\nassert solution('''\n4\nsame\nsame\nsame\ndiffer\n''') == '1'\nassert solution('''\n7\narsijo\nsuggested\nthe\nidea\nfor\nthis\nproblem\n''') == '0'\n"
    },
    {
        "number": 2310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n2 3 2 1\n1 0\n0 0\n''') == 'YNNY'\nassert solution('''\n5 5\n1 2 1 3 1\n3 0\n0 0\n2 1\n4 0\n''') == 'YYYNY'\n"
    },
    {
        "number": 2311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 0 1\n1 1 1\n''') == '4'\nassert solution('''3 5 4\n1 1 1\n1 1 1 1 1 1\n''') == '14'\n"
    },
    {
        "number": 2312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n4 3 0 1 2 0\n2\n2 5\n''') == 'NO'\nassert solution('''\n2\n2 5\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 2313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == '499122177 0'\nassert solution('''\n8\n10 4 3 6 5 10 7 5\n''') == '499122193 249561095 249561092 873463811 499122178 124780545 623902721 0'\n"
    },
    {
        "number": 2314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 5\nRRGGB\nRRGGY\nYYBBG\nYYBBR\nRBBRG\n1 1 5 5\n2 2 5 5\n2 2 3 3\n1 1 3 5\n4 4 5 5\n''') == '16'\nassert solution('''6 10 5\nRRRGGGRRGG\nRRRGGGRRGG\nRRRGGGYYBB\nYYYBBBYYBB\nYYYBBBRGRG\nYYYBBBYBYB\n1 1 6 10\n1 3 3 10\n2 2 6 6\n1 7 6 10\n2 1 5 10\n''') == '36'\nassert solution('''8 8 8\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\n1 1 8 8\n5 2 5 7\n3 1 8 6\n2 3 5 8\n1 2 6 8\n2 1 5 5\n2 1 7 7\n6 5 7 5\n''') == '64'\nassert solution('''5 5 5\nRRGGB\nRRGGY\nYYBBG\nYYBBR\nRBBRG\n1 1 5 5\n2 2 5 5\n2 2 3 3\n1 1 3 5\n4 4 5 5\n''') == '0'\nassert solution('''6 10 5\nRRRGGGRRGG\nRRRGGGRRGG\nRRRGGGYYBB\nYYYBBBYYBB\nYYYBBBRGRG\nYYYBBBYBYB\n1 1 6 10\n1 3 3 10\n2 2 6 6\n1 7 6 10\n2 1 5 10\n''') == '16'\n"
    },
    {
        "number": 2315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10\\n'\n"
    },
    {
        "number": 2316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n100 3 4\n189 3 4\n64 2 3\n63 2 3\n30 27 7\n10 9 1\n69117 21 2\n''') == 'YES'\nassert solution('''\n2\n100 3 4\n189 3 4\n64 2 3\n63 2 3\n30 27 7\n10 9 1\n69117 21 2\n''') == 'NO'\nassert solution('''\n3\n100 3 4\n189 3 4\n64 2 3\n63 2 3\n30 27 7\n10 9 1\n69117 21 2\n''') == 'YES'\nassert solution('''\n4\n100 3 4\n189 3 4\n64 2 3\n63 2 3\n30 27 7\n10 9 1\n69117 21 2\n''') == 'NO'\nassert solution('''\n5\n100 3 4\n189 3 4\n64 2 3\n63 2 3\n30 27 7\n10 9 1\n69117 21 2\n''') == 'NO'\n"
    },
    {
        "number": 2317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3 5') == '2 2'\nassert solution('1 2 3 4') == '1 2'\nassert solution('1 2 3 4 5') == '1 2'\nassert solution('1 2 3 4 5 6') == '1 2'\nassert solution('1 2 3 4 5 6 7') == '1 2'\n"
    },
    {
        "number": 2318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\naa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz\n''') == 'YES'\nassert solution('''\n4\nhello\nhello\nhello\nhelloo\nhello\nhlllloo\nhello\nhelo\n\n''') == 'NO'\nassert solution('''\n5\naa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz\n''') == 'NO'\nassert solution('''\n4\nhello\nhello\nhello\nhelloo\nhello\nhlllloo\nhello\nhelo\n\n''') == 'NO'\nassert solution('''\n5\naa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz\n''') == 'NO'\n"
    },
    {
        "number": 2319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\na\na\n2\nab\nba\n3\nabc\ncab\n3\nabc\ncba\n4\nabab\nbaba\n4\nabcc\naabc\n''') == '0'\nassert solution('''\n1\na\na\n2\nab\nba\n3\nabc\ncab\n3\nabc\ncba\n4\nabab\nbaba\n4\nabcc\naabc\n''') == '1'\nassert solution('''\n1\na\na\n2\nab\nba\n3\nabc\ncab\n3\nabc\ncba\n4\nabab\nbaba\n4\nabcc\naabc\n''') == '1'\nassert solution('''\n1\na\na\n2\nab\nba\n3\nabc\ncab\n3\nabc\ncba\n4\nabab\nbaba\n4\nabcc\naabc\n''') == '1'\nassert solution('''\n1\na\na\n2\nab\nba\n3\nabc\ncab\n3\nabc\ncba\n4\nabab\nbaba\n4\nabcc\naabc\n''') == '1'\n"
    },
    {
        "number": 2320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n9\niredppipe\npiedpiper\n4\nestt\ntest\n4\ntste\ntest\n''') == '2'\nassert solution('''\n4\n1\na\nz\n5\nadhas\ndasha\n5\naashd\ndasha\n5\naahsd\ndasha\n''') == '-1'\nassert solution('''\n1\n1\na\nz\n5\nadhas\ndasha\n5\naashd\ndasha\n5\naahsd\ndasha\n''') == '2'\nassert solution('''\n2\n1\na\nz\n5\nadhas\ndasha\n5\naashd\ndasha\n5\naahsd\ndasha\n''') == '2'\nassert solution('''\n3\n1\na\nz\n5\nadhas\ndasha\n5\naashd\ndasha\n5\naahsd\ndasha\n''') == '-1'\n"
    },
    {
        "number": 2321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n<>\n3\n><<\n1\n>''') == '0'\nassert solution('''3\n2\n<>\n3\n><<\n1\n>''') == '0'\nassert solution('''3\n2\n<>\n3\n><<\n1\n>''') == '0'\nassert solution('''3\n2\n<>\n3\n><<\n1\n>''') == '0'\nassert solution('''3\n2\n<>\n3\n><<\n1\n>''') == '0'\n"
    },
    {
        "number": 2322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution\u043c"
    },
    {
        "number": 2323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n3 1 4 1 5 9\n3\n7 7\n0 2\n8 17\n''') == '5 10 18'\nassert solution('''\n2\n1 500000000000000000\n2\n1000000000000000000 1000000000000000000\n0 1000000000000000000\n''') == '2 1500000000000000000'\n"
    },
    {
        "number": 2324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abba') == '6 1 0 0 0 0 0'\nassert solution('abacaba') == '12 4 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 2325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n6 3\\n4 2') == '36'\nassert solution('3\\n2 2\\n1 1') == '6'\nassert solution('3\\n2 2\\n1 1') == '6'\n"
    },
    {
        "number": 2326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 1\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '7'\nassert solution('''5\n1 1 1 1 1\n''') == '7'\nassert solution('''6\n1 1 1 1 1 1\n''') == '7'\nassert solution('''7\n1 1 1 1 1 1 1\n''') == '7'\n"
    },
    {
        "number": 2327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 2328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '500000000'\nassert solution('''\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '4'\nassert solution('''\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '3'\nassert solution('''\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '2'\nassert solution('''\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '1'\n"
    },
    {
        "number": 2329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n''') == '5'\nassert solution('''\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n''') == '4'\nassert solution('''\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n''') == '2'\nassert solution('''\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n''') == '0'\nassert solution('''\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n''') == '0'\n"
    },
    {
        "number": 2330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\n''') == '8'\nassert solution('''\n3 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\n''') == '-1'\nassert solution('''\n3 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\n''') == '4 3'\nassert solution('''\n3 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\n''') == '4 3'\nassert solution('''\n3 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\n''') == '-1'\n"
    },
    {
        "number": 2331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10\n1 10\n6 9\n7 3\n''') == 'Infinite'\nassert solution('''\n10 10\n1 10\n6 9\n7 3\n''') == 'Finite'\nassert solution('''\n10 10\n1 10\n6 9\n7 3\n''') == 'Infinite'\nassert solution('''\n10 10\n1 10\n6 9\n7 3\n''') == 'Finite'\nassert solution('''\n10 10\n1 10\n6 9\n7 3\n''') == 'Infinite'\n"
    },
    {
        "number": 2332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4 4\ni loser am the second\n100 1 1 5 10\n1 1\n1 3\n2 2 5\n1 4\ni am the second\n''') == '107'\nassert solution('''\n5 4 4\ni loser am the second\n100 20 1 5 10\n1 1\n1 3\n2 2 5\n1 4\ni am the second\n''') == '116'\n"
    },
    {
        "number": 2333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n2 4 1 3 4 2 1 2\n''') == '7'\nassert solution('''5\n1 1 2 1 2\n''') == '6'\n"
    },
    {
        "number": 2334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n13 7 6\n6 2\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n13 7 6\n6 2\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n13 7 6\n6 2\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n13 7 6\n6 2\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n13 7 6\n6 2\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 2335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 G\\n5 R\\n10 B\\n15 G\\n') == '23'\nassert solution('4\\n1 G\\n2 R\\n3 B\\n10 G\\n') == '12'\n"
    },
    {
        "number": 2336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2 4\n91 94\n92 97\n97 99\n92 94\n93 97\n95 96\n90 100\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 1 1\n1 1\n200000 200000\n90 100\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 1 1\n1 1\n200000 200000\n90 100\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2 1 1\n1 1\n200000 200000\n90 100\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 1 1\n1 1\n200000 200000\n90 100\n\"\"\") == \"4\"\n"
    },
    {
        "number": 2337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n1 2 3\n1 2 2 3 3\n\n1 2 3\n1 1 1 1 1 1\n\n2 3 4\n1''') == '0'\nassert solution('''3 1\n2 3 4\n1\n\n2 3 4\n1''') == '2'\nassert solution('''3 1\n2 3 4\n1\n\n2 3 4\n1''') == '3'\n"
    },
    {
        "number": 2338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1\n-1 -1\n''') == '12'\nassert solution('''\n3\n5 0\n0 5\n1 0\n''') == '12'\nassert solution('''\n4\n5 0\n0 5\n1 0\n2\n1 5\n''') == '12'\nassert solution('''\n5\n0 0\n0 5\n1 0\n2\n1 5\n''') == '12'\nassert solution('''\n6\n0 0\n0 5\n1 0\n2\n1 5\n3\n1 5\n''') == '12'\n"
    },
    {
        "number": 2339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '5 2 \n\nassert solution('''\n3\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '8 2 1 3 \n\nassert solution('''\n4\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '9 3 8 \n\nassert solution('''\n5\n2 4 8 16 17\n''') == '2 4 8 16 17'\n\nassert solution('''\n6\n2 4 8 16 17\n''') == '2 4 8 16 17'"
    },
    {
        "number": 2340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1\n''') == '2'\nassert solution('''\n3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1\n''') == '1'\nassert solution('''\n3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1\n''') == '0'\nassert solution('''\n3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1\n''') == '0'\nassert solution('''\n3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1\n''') == '0'\n"
    },
    {
        "number": 2341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\naaa\naaa\naaa\n\n''') == '10'\nassert solution('''\n3 4\nabab\nbaba\nabab\n\n''') == '12'\nassert solution('''\n5 5\nzbacg\nbaaac\naaaaa\neaaad\nweadd\n\n''') == '31'\n"
    },
    {
        "number": 2342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n.\n1 2\nG.\n2 2\n"
    },
    {
        "number": 2343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n2 2\n2 12\n''') == 'YES 0'\nassert solution('''\n1 1\n2 2\n2 12\n''') == 'YES 1'\nassert solution('''\n1 1\n2 2\n2 12\n''') == 'NO'\n"
    },
    {
        "number": 2344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10 9 2\n20 33 1\n30 115 1\n5 3 2\n''') == '32'\nassert solution('''\n3\n40 1 2\n1000 1100 5\n300 2 1\n''') == '1337'\n"
    },
    {
        "number": 2345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1 1 4 3 2'\nassert solution('''\n5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1 4 3 2'\n"
    },
    {
        "number": 2346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 1\n1 1\n-1 0\n2 1\n3 0\n''') == '1 2 4'\n\nassert solution('''\n5\n-1 0\n1 1\n1 1\n2 0\n3 0\n''') == '-1'\n\nassert solution('''\n8\n2 1\n-1 0\n1 0\n1 1\n1 1\n4 0\n5 1\n7 0\n''') == '5'\n\nassert solution('''\n8\n-1 0\n1 1\n1 1\n2 0\n3 0\n''') == '-1'\n\nassert solution('''\n8\n-1 0\n1 1\n1 1\n2 0\n3 0\n''') == '-1'"
    },
    {
        "number": 2347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n''') == 'YES'\nassert solution('''\n5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n''') == 'NO'\nassert solution('''\n5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n''') == 'YES'\nassert solution('''\n5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n''') == 'NO'\nassert solution('''\n5\nabacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten\n''') == 'YES'\n"
    },
    {
        "number": 2348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A278832') == '0'\nassert solution('A089956') == '0'\nassert solution('A089957') == '1'\nassert solution('A144045') == '1'\n"
    },
    {
        "number": 2349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n11\n1\n3\n''') == '4\\n0 1 2 5\\n6\\n0 1 3\\n3\\n0 1\\n2\\n'''\n"
    },
    {
        "number": 2350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 2 2\n1 2 2 4\n179 1 179 100000\n5 7 5 7\n''') == '2'\nassert solution('''\n1 1 2 2\n1 2 2 4\n179 1 179 100000\n5 7 5 7\n''') == '3'\nassert solution('''\n1 1 2 2\n1 2 2 4\n179 1 179 100000\n5 7 5 7\n''') == '1'\nassert solution('''\n1 1 2 2\n1 2 2 4\n179 1 179 100000\n5 7 5 7\n''') == '1'\nassert solution('''\n1 1 2 2\n1 2 2 4\n179 1 179 100000\n5 7 5 7\n''') == '1'\n"
    },
    {
        "number": 2351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n1 -1 1 -1 2\n''') == '2'\nassert solution('''6 3 2\n1 1 -1 -1 -1 -1\n''') == '0'\nassert solution('''10 42 7\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n''') == '645711643'\n"
    },
    {
        "number": 2352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5 6\n...a..\n..bbb.\n...a..\n.cccc.\n...a..\n''') == 'YES'\nassert solution('''\n2\n3 3\n...\n...\n...\n4 4\n..c.\nadda\nbbcb\n....\n3 5\n..b..\naaaaa\n..b..\n\n''') == 'YES'\nassert solution('''\n3\n3 3\n...\n.a.\n...\n2 2\nbb\ncc\n\n''') == 'NO'\nassert solution('''\n4\n3 3\n...\n...\n...\n4 4\n..c.\nadda\nbbcb\n....\n3 5\n..b..\naaaaa\n..b..\n\n''') == 'YES'\nassert solution('''\n5\n3 3\n...\n...\n...\n4 4\n..c.\nadda\nbbcb\n....\n3 5\n..b..\naaaaa\n..b..\n\n''') == 'NO'\n"
    },
    {
        "number": 2353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '27'\nassert solution('''\n7\n10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '9'\nassert solution('''\n7\n10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '-1'\nassert solution('''\n7\n10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '1'\nassert solution('''\n7\n10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '6471793'\n"
    },
    {
        "number": 2354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 1\n4 4\n4 3\n3 2\n2 4\n''') == '1'\nassert solution('''\n5 4\n2 1\n4 2\n3 3\n3 4\n''') == '16'\nassert solution('''\n5 4\n2 1\n4 2\n3 3\n3 4\n''') == '9'\nassert solution('''\n5 4\n2 1\n4 2\n3 3\n3 4\n''') == '7'\nassert solution('''\n5 4\n2 1\n4 2\n3 3\n3 4\n''') == '20'\n"
    },
    {
        "number": 2355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n6 0') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6'\nassert solution('2\\n6 0') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6'\nassert solution('3\\n6 0') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6'\nassert solution('4\\n6 0') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6'\nassert solution('5\\n6 0') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6'\n"
    },
    {
        "number": 2356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n7\n4\n1 1 3 5\n6\n3 2 1 5 6 4\n''') == '7 1 5 1 3\\n2 4 6 1 3 5\\n'\n"
    },
    {
        "number": 2357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '6'\nassert solution('''\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '-1'\nassert solution('''\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '6'\nassert solution('''\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '-1'\nassert solution('''\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '6'\n"
    },
    {
        "number": 2358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(()((\n''') == '0'\nassert solution('''(()())\n''') == '1'\nassert solution('''(())(\n''') == '1'\nassert solution('''(())(()\n''') == '2'\nassert solution('''(())(())(\n''') == '2'\n"
    },
    {
        "number": 2359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n30 10 20\n41 15 30\n18 13 18\n''') == '2'\nassert solution('''\n3\n30 10 20\n41 15 30\n18 13 18\n''') == '7'\nassert solution('''\n3\n30 10 20\n41 15 30\n18 13 18\n''') == '1'\n"
    },
    {
        "number": 2360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 2'\nassert solution('''\n2\n2 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 0 2'\n'''\n"
    },
    {
        "number": 2361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 3 2\n4 2 4\n9 6 3\n42 0 7\n''') == '3'\nassert solution('''\n8 3 2\n4 2 4\n9 6 3\n42 0 7\n''') == '0'\nassert solution('''\n8 3 2\n4 2 4\n9 6 3\n42 0 7\n''') == '1'\nassert solution('''\n8 3 2\n4 2 4\n9 6 3\n42 0 7\n''') == '0'\nassert solution('''\n8 3 2\n4 2 4\n9 6 3\n42 0 7\n''') == '1'\n"
    },
    {
        "number": 2362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n3\n2 3 4\n1 2\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 3 4\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 1 1\n1 2\n2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 2363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4 17\n7 987654321\n''') == '8'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n3\n1\n2\n''') == '2'\nassert solution('''\n4\n1\n2\n3\n''') == '3'\n"
    },
    {
        "number": 2364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '5'\nassert solution('4 1 3 7') == '60'\n"
    },
    {
        "number": 2365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"!(f)\") == \"true\"\nassert solution(\"|(f,t)\") == \"true\"\nassert solution(\"&(t,f)\") == \"false\"\nassert solution(\"|(&(t,f,t),!(t))\") == \"false\"\nassert solution(\"!(!(f))\") == \"true\"\n"
    },
    {
        "number": 2366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 2 1 2\") == \"2\"\nassert solution(\"5\\n1 1 2 1 2\") == \"3\"\nassert solution(\"5\\n1 1 2 1 2\") == \"2\"\nassert solution(\"5\\n1 1 2 1 2\") == \"3\"\nassert solution(\"5\\n1 1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 2367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 1\") == \"2\"\nassert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"2 2 2 1\") == \"0\"\nassert solution(\"2 2 2 2\") == \"0\"\nassert solution(\"2 2 2 2\") == \"0\"\n"
    },
    {
        "number": 2368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\n"
    },
    {
        "number": 2369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '11'\nassert solution('5 2') == '10'\nassert solution('10 2') == '9'\nassert solution('10 3') == '8'\nassert solution('10 4') == '7'\n"
    },
    {
        "number": 2370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 2371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 100 100') == '900'\nassert solution('3 10 100') == '900'\nassert solution('3 10 10') == '900'\nassert solution('3 10 10 10') == '900'\nassert solution('3 10 10 10 10') == '900'\n"
    },
    {
        "number": 2372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 1\\n4 4\\n..#.\\n..#.\\n.#..\\n.#..\") == \"1\"\nassert solution(\"4 4\\n1 1\\n4 4\\n..#.\\n..#.\\n.#..\\n.#..\") == \"2\"\nassert solution(\"4 4\\n1 1\\n4 4\\n..#.\\n..#.\\n.#..\\n.#..\") == \"3\"\nassert solution(\"4 4\\n1 1\\n4 4\\n..#.\\n..#.\\n.#..\\n.#..\") == \"4\"\nassert solution(\"4 4\\n1 1\\n4 4\\n..#.\\n..#.\\n.#..\\n.#..\") == \"5\"\n"
    },
    {
        "number": 2373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 2374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"3 5\") == \"1 4\"\nassert solution(\"3 6\") == \"1 4\"\nassert solution(\"3 7\") == \"1 4\"\nassert solution(\"3 8\") == \"1 4\"\n"
    },
    {
        "number": 2375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"Brown\"\nassert solution(\"1 1\") == \"Alice\"\nassert solution(\"1 2\") == \"Alice\"\nassert solution(\"2 2\") == \"Alice\"\nassert solution(\"1 1\") == \"Alice\"\n"
    },
    {
        "number": 2376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"11\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"4 10\") == \"11\"\nassert solution(\"3 4\") == \"4\"\n"
    },
    {
        "number": 2377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10\\n3 5\") == \"3\"\nassert solution(\"1 10\\n3 5\\n\") == \"3\"\nassert solution(\"1 10\\n3 5\\n\") == \"3\"\nassert solution(\"1 10\\n3 5\\n\") == \"3\"\nassert solution(\"1 10\\n3 5\\n\") == \"3\"\n"
    },
    {
        "number": 2378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '125000001'\nassert solution('2') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 2379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 3 2\") == \"6\"\nassert solution(\"10 3 2\") == \"10\"\nassert solution(\"9 3 2\") == \"9\"\nassert solution(\"8 3 2\") == \"8\"\nassert solution(\"7 3 2\") == \"7\"\n"
    },
    {
        "number": 2380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"14\"\nassert solution(\"3 2\") == \"14\"\nassert solution(\"3 2\") == \"14\"\nassert solution(\"3 2\") == \"14\"\nassert solution(\"3 2\") == \"14\"\n"
    },
    {
        "number": 2381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"12\"\nassert solution(\"6 2\") == \"12\"\nassert solution(\"7 2\") == \"12\"\nassert solution(\"8 2\") == \"12\"\n"
    },
    {
        "number": 2382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"6\") == \"Yes\"\n"
    },
    {
        "number": 2383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 2384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '12'\nassert solution('1 2 3 4 5 6') == '12'\nassert solution('1 2 3 4 5 6 7') == '15'\nassert solution('1 2 3 4 5 6 7 8') == '15'\nassert solution('1 2 3 4 5 6 7 8 9') == '15'\n"
    },
    {
        "number": 2385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''3\n1 2\n1 3\n''') == '1'\nassert solution('''3\n1 2\n1 3\n''') == '1'\nassert solution('''3\n1 2\n1 3\n''') == '1'\nassert solution('''3\n1 2\n1 3\n''') == '1'\n"
    },
    {
        "number": 2386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 2 3 5 5') == '2'\nassert solution('5\\n2 2 3 5 5') == '2'\nassert solution('5\\n2 2 3 5 5') == '2'\nassert solution('5\\n2 2 3 5 5') == '2'\nassert solution('5\\n2 2 3 5 5') == '2'\n"
    },
    {
        "number": 2387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(')') == 'No'\nassert solution('((()))') == 'Yes'\nassert solution('(((()))') == 'Yes'\nassert solution('((((()))') == 'Yes'\nassert solution('((((((()))))))') == 'Yes'\n"
    },
    {
        "number": 2388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\\n3 3\") == \"3\"\nassert solution(\"2\\n1 5\\n3 3\") == \"3\"\nassert solution(\"2\\n1 5\\n3 3\") == \"3\"\nassert solution(\"2\\n1 5\\n3 3\") == \"3\"\nassert solution(\"2\\n1 5\\n3 3\") == \"3\"\n"
    },
    {
        "number": 2389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 3 0\") == \"Yes\"\nassert solution(\"2 1 3 1\") == \"A\"\nassert solution(\"2 1 3 2\") == \"C\"\nassert solution(\"2 1 3 3\") == \"No\"\nassert solution(\"2 1 3 4\") == \"No\"\n"
    },
    {
        "number": 2390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 20\\n2 80\\n9 120\\n16 1\\n\") == \"191\"\nassert solution(\"3 20\\n2 80\\n9 120\\n16 1\\n\") == \"191\"\nassert solution(\"3 20\\n2 80\\n9 120\\n16 1\\n\") == \"191\"\nassert solution(\"3 20\\n2 80\\n9 120\\n16 1\\n\") == \"191\"\nassert solution(\"3 20\\n2 80\\n9 120\\n16 1\\n\") == \"191\"\n"
    },
    {
        "number": 2391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 3'\nassert solution('2') == ''\n"
    },
    {
        "number": 2392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '0'\nassert solution('13') == '1'\nassert solution('14') == '1'\nassert solution('15') == '7'\n"
    },
    {
        "number": 2393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''onetwone\ntestme\noneoneone\ntwotwo\n''') == 'onetwone'\nassert solution('''onetwonetwooneooonetwooo\ntwo\none\ntwooooo\nttttwo\nttwwoo\nooone\nonnne\noneeeee\noneeeeeeetwooooo\n''') == 'onetwonetwooneooonetwooo'\nassert solution('''onetwone\ntestme\noneoneone\ntwotwo\n''') == 'onetwone'\nassert solution('''onetwonetwooneooonetwooo\ntwo\none\ntwooooo\nttttwo\nttwwoo\nooone\nonnne\noneeeee\noneeeeeeetwooooo\n''') == 'onetwonetwooneooonetwooo'\nassert solution('''onetwone\ntestme\noneoneone\ntwotwo\n''') == 'onetwone'\n"
    },
    {
        "number": 2394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '20'\nassert solution('13 3') == '114'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 2395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00\") == \"00\"\nassert solution(\"01\") == \"01\"\nassert solution(\"111\") == \"11111\"\nassert solution(\"110\") == \"1010\"\n"
    },
    {
        "number": 2396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7\n''') == '1 2 2 1'\nassert solution('''\n(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7\n''') == '1 2 2 1'\nassert solution('''\n(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7\n''') == '1 2 2 1'\nassert solution('''\n(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7\n''') == '1 2 2 1'\nassert solution('''\n(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7\n''') == '1 2 2 1'\n"
    },
    {
        "number": 2397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '15'\nassert solution('7 6') == '8'\nassert solution('4 1') == '8'\n"
    },
    {
        "number": 2398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'YES'\nassert solution('''\n3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\nassert solution('''\n3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\nassert solution('''\n3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\nassert solution('''\n3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\n"
    },
    {
        "number": 2399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'\nassert solution('''\n3 2\nX...X.X..X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'NO'\nassert solution('''\n3 2\nX...X.X..X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'\nassert solution('''\n3 2\nX...X.X..X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'NO'\nassert solution('''\n3 2\nX...X.X..X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'\n"
    },
    {
        "number": 2400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3'\nassert solution('''\n3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '1'\nassert solution('''\n3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 2401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"6 4\") == \"4\"\nassert solution(\"3 2 6 1 2\") == \"5\"\n"
    },
    {
        "number": 2402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5 1 3\n''') == '1 3'\nassert solution('''\n1\n6 3 4\n''') == '2 6'\n"
    },
    {
        "number": 2403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n2 3 -1\n''') == '10'\nassert solution('''\n2\n-1 100\n2 -1\n''') == '99'\nassert solution('''\n10\n-10 -1 2 2 5 -2 -3 -4 2 -6\n-1 -1 2 2 -1 5 5 7 7 9\n''') == '-9'\n"
    },
    {
        "number": 2404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 2405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 2 1 8\n1 1 2\n1 5 3\n1 2 1\n2 2\n1 4 2\n1 3 2\n2 1\n2 3\n''') == '3'\nassert solution('''5 4 10 1 6\n1 1 5\n1 5 5\n1 3 2\n1 5 2\n2 1\n2 2\n''') == '7'\n"
    },
    {
        "number": 2406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 6 7 8\n''') == '5 5 6 7'\nassert solution('''\n3\n2 6 7\n''') == '4 4 4'\nassert solution('''\n2\n1 2\n''') == '1 1 1'\nassert solution('''\n1\n1\n''') == '1 1 1'\nassert solution('''\n1\n1\n''') == '1 1 1'\n"
    },
    {
        "number": 2407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5\n''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5\n''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5\n''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5\n''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5\n''') == '2'\n"
    },
    {
        "number": 2408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n1 1\n0 3\n1 2\n''') == '14'\nassert solution('''\n3\n-1 -1\n1 0\n3 1\n''') == '0'\nassert solution('''\n2\n-1 -1\n1 0\n3 1\n''') == '6'\n"
    },
    {
        "number": 2409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'No'\nassert solution('''\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n''') == 'Yes'\n"
    },
    {
        "number": 2410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'YES'\nassert solution('''\n3\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''\n3\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''\n3\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''\n3\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\n"
    },
    {
        "number": 2411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n1 1\n0 3\n1 2\n''') == '14'\nassert solution('''\n3\n-1 -1\n1 0\n3 1\n''') == '0'\nassert solution('''\n2\n-1 -1\n1 0\n3 1\n''') == '6'\n"
    },
    {
        "number": 2412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 2413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '6'\nassert solution('''\n4\n5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '8'\nassert solution('''\n4\n5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '10'\nassert solution('''\n4\n5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '6'\nassert solution('''\n4\n5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '8'\n"
    },
    {
        "number": 2414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5\n314 15\n-99 99\n123 987\n''') == '329'\nassert solution('''\n1 5\n314 15\n-99 99\n123 987\n''') == '0'\nassert solution('''\n1 5\n314 15\n-99 99\n123 987\n''') == '1110'\n'''\n"
    },
    {
        "number": 2415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"GENIUS\") == \"YES\"\nassert solution(\"DOCTOR\") == \"NO\"\nassert solution(\"IRENE\") == \"YES\"\nassert solution(\"MARY\") == \"NO\"\nassert solution(\"SMARTPHONE\") == \"NO\"\n"
    },
    {
        "number": 2416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\nassert solution('10') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 2417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 5 2 1 4\n4 3 2 5 1\n''') == '2'\nassert solution('''\n7\n5 2 3 6 7 1 4\n2 3 6 7 1 4 5\n''') == '6'\nassert solution('''\n2\n1 2\n1 2\n''') == '0'\n"
    },
    {
        "number": 2418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 -1 7 3\n2\n2 4 -3\n3 4 2\n''') == '5'\nassert solution('''6\n-9 -10 -9 -6 -5 4\n3\n2 6 -9\n1 2 -10\n4 6 -3\n''') == '3'\nassert solution('''1\n0\n2\n1 1 -1\n1 1 -1\n''') == '0'\n"
    },
    {
        "number": 2419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3\n11 11\n30 20\n''') == '4'\nassert solution('''\n1 1\n11 11\n30 20\n''') == '0'\nassert solution('''\n1 1\n11 11\n30 20\n''') == '4'\nassert solution('''\n1 1\n11 11\n30 20\n''') == '0'\nassert solution('''\n1 1\n11 11\n30 20\n''') == '4'\n"
    },
    {
        "number": 2420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1\n1 -1\n-1 1\n-1 -1\n2 0\n''') == '3'\nassert solution('''5 2\n1 1\n1 -1\n-1 1\n-1 -1\n2 0\n''') == '5'\n"
    },
    {
        "number": 2421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n-3 1\n1 3 5 7 9 11\n1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '18'\nassert solution('''\n1\n-3 1\n1 3 5 7 9 11\n1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '1'\nassert solution('''\n2\n-3 1\n1 3 5 7 9 11\n1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '1'\nassert solution('''\n1\n-3 1\n1 3 5 7 9 11\n1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '1'\nassert solution('''\n1\n-3 1\n1 3 5 7 9 11\n1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '1'\n"
    },
    {
        "number": 2422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n30\n67\n4\n14\n''') == '2 2 2'\nassert solution('''\n1\n30\n67\n4\n14\n''') == '-1'\nassert solution('''\n2\n30\n67\n4\n14\n''') == '0 0 2'\n"
    },
    {
        "number": 2423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 1\n4 2\n1 3\n1 5\n\n''') == '3'\nassert solution('''\n4\n1 2\n4 3\n1 4\n\n''') == '2'\nassert solution('''\n5\n1 2\n4 3\n1 4\n1 5\n\n''') == '2'\nassert solution('''\n5\n1 2\n4 3\n1 4\n1 5\n\n''') == '1'\nassert solution('''\n5\n1 2\n4 3\n1 4\n1 5\n\n''') == '0'\n"
    },
    {
        "number": 2424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 1\n1 1\n''') == '124780545'\nassert solution('''\n5\n2 1 2\n2 3 1\n3 2 4 3\n2 1 4\n3 4 3 2\n''') == '798595483'\n"
    },
    {
        "number": 2425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2\n3\n5\n''') == '3'\nassert solution('''\n3\n2\n3\n5\n''') == '1'\nassert solution('''\n3\n2\n3\n5\n''') == '7'\n"
    },
    {
        "number": 2426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '2'\nassert solution('''\n3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '-1'\nassert solution('''\n3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '1 2'\n"
    },
    {
        "number": 2427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3 1 2 3 15\n''') == '6'\nassert solution('''\n10\n997230370 58052053 240970544 715275815 250707702 156801523 44100666 64791577 43523002 480196854\n''') == '2'\n"
    },
    {
        "number": 2428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ababcd') == 'abc'\nassert solution('abcba') == 'abcba'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('defi') == 'defi'\n"
    },
    {
        "number": 2429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4\n''') == '2'\nassert solution('''\n2\n3\n''') == '6'\nassert solution('''\n2\n5\n''') == '10'\nassert solution('''\n2\n6\n''') == '12'\nassert solution('''\n2\n7\n''') == '14'\n"
    },
    {
        "number": 2430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('5') == '14'\nassert solution('1') == '0'\nassert solution('2') == '5'\nassert solution('1') == '0'\n"
    },
    {
        "number": 2431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 3 4\n7 6\n1 1 2 3\n1\n1 1 2 2\n3\n''') == '2'\nassert solution('''\n10\n6 5 4 5\n2 3 2 3 1 3\n1 5 2 3\n10\n4 4 2 3\n8 10 8 5\n2 2 1 4\n8 5\n3 5 3 5\n9 2 10\n4 5 5 5\n2 10 4 2\n2 3 1 4\n1 10\n3 1 5 3\n9 8 7\n2 5 4 5\n8 8\n3 5 1 4\n5 5 10\n''') == '12'\n"
    },
    {
        "number": 2432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '24'\nassert solution('35') == '50'\n"
    },
    {
        "number": 2433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '40'\nassert solution('''\n3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '34'\nassert solution('''\n3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '0'\n"
    },
    {
        "number": 2434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n7 3\n''') == 'YES'\nassert solution('''\n5 3\n6 3\n''') == 'NO'\nassert solution('''\n5 3\n7 3\n''') == 'NO'\nassert solution('''\n5 3\n6 3\n''') == 'NO'\nassert solution('''\n5 3\n7 3\n''') == 'NO'\n"
    },
    {
        "number": 2435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '6'\nassert solution('''\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '2'\nassert solution('''\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '3'\nassert solution('''\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '1'\nassert solution('''\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '0'\n"
    },
    {
        "number": 2436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'\nassert solution('''\n4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '1'\nassert solution('''\n4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '4'\nassert solution('''\n4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '5'\nassert solution('''\n4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'\n"
    },
    {
        "number": 2437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n6 2 4\n''') == '0'\nassert solution('''\n5\n9 8 7 3 1\n''') == '4'\n"
    },
    {
        "number": 2438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nAABBB\n''') == '6'\nassert solution('''3\nAAA\n''') == '3'\nassert solution('''7\nAAABABB\n''') == '15'\n"
    },
    {
        "number": 2439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40\n''') == 'YES\\n1 -2 3 -4\\nNO\\nYES\\n1 1 -1 1 -1\\nYES\\n-40 13 40 0 -9 -31'\nassert solution('''\n4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40\n''') == 'NO'\nassert solution('''\n4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40\n''') == 'YES\\n1 -2 3 -4\\nNO\\nYES\\n1 1 -1 1 -1\\nYES\\n-40 13 40 0 -9 -31'\n"
    },
    {
        "number": 2440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'NO'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'NO'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'NO'\n"
    },
    {
        "number": 2441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n3\n1 2\n2 3\n3 2\n''') == '3 1'\nassert solution('''\n5\n2 8 0 6 0\n6\n1 4\n1 3\n2 4\n3 4\n4 5\n5 1\n''') == '8 2'\nassert solution('''\n10\n1 3 2 2 1 3 1 4 10 10\n12\n1 2\n2 3\n3 1\n3 4\n4 5\n5 6\n5 7\n6 4\n7 3\n8 9\n9 10\n10 9\n''') == '15 6'\n"
    },
    {
        "number": 2442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n''') == '5'\nassert solution('''\n4\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n''') == '4'\nassert solution('''\n4\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n''') == '3'\nassert solution('''\n4\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n''') == '2'\n"
    },
    {
        "number": 2443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"3 10\") == \"6\"\n"
    },
    {
        "number": 2444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 314\n0 310 942 628 0\n''') == '314 628 1256 942 1570'\n"
    },
    {
        "number": 2445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n4') == '2'\nassert solution('3\\n4\\n5') == '3'\nassert solution('4\\n5\\n6') == '4'\nassert solution('5\\n6\\n7') == '5'\nassert solution('6\\n7\\n8') == '6'\n"
    },
    {
        "number": 2446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 6 3\n5\n1\n2\n3\n4\n6\n''') == '1'\nassert solution('''\n7\n10 20 3 15 1000 60 16\n10\n1\n2\n3\n4\n5\n6\n10\n20\n60\n1000\n''') == '2'\n"
    },
    {
        "number": 2447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n001\n100\n101\n010\n0\n1\n001100\n''') == '0'\nassert solution('''\n2\n001\n100\n101\n010\n0\n1\n001100\n''') == '1'\nassert solution('''\n3\n001\n100\n101\n010\n0\n1\n001100\n''') == '2'\nassert solution('''\n4\n001\n100\n101\n010\n0\n1\n001100\n''') == '1'\nassert solution('''\n5\n001\n100\n101\n010\n0\n1\n001100\n''') == '2'\n"
    },
    {
        "number": 2448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\n''') == \"YES\"\nassert solution('''\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\n''') == \"NO\"\nassert solution('''\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\n''') == \"NO\"\nassert solution('''\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\n''') == \"NO\"\nassert solution('''\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\n''') == \"NO\"\n"
    },
    {
        "number": 2449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '4'\nassert solution('30 2') == '860616440'\n"
    },
    {
        "number": 2450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '10'\nassert solution('''\n1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '1'\nassert solution('''\n1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '20'\nassert solution('''\n1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '18'\nassert solution('''\n1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '6'\n"
    },
    {
        "number": 2451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6 2 3 3') == '1'\nassert solution('1 2 1 3') == '4'\nassert solution('1 4 3 4') == '2'\nassert solution('1 2 2 3') == '2'\nassert solution('1 2 2 3') == '2'\n"
    },
    {
        "number": 2452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1 2 3'\nassert solution('7') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 2453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 3\n1 3\n3 8\n''') == '6 2 1'\nassert solution('''\n3\n1 3\n2 4\n5 7\n''') == '5 2 0'\n"
    },
    {
        "number": 2454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '10'\n"
    },
    {
        "number": 2455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nOXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO\n''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0\\n'''\n"
    },
    {
        "number": 2456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '4'\nassert solution('''\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '3'\nassert solution('''\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '1'\nassert solution('''\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '28'\nassert solution('''\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '510049495001'\n"
    },
    {
        "number": 2457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7 20 3 101 18\n11 11 10 234 2\n8 9 7 250 122\n19 41 21 321 10\n3 10 8 6 1\n''') == 'Yes'\nassert solution('''5\n7 20 3 101 18\n11 11 10 234 2\n8 9 7 250 122\n19 41 21 321 10\n3 10 8 6 1\n''') == 'No'\nassert solution('''5\n7 20 3 101 18\n11 11 10 234 2\n8 9 7 250 122\n19 41 21 321 10\n3 10 8 6 1\n''') == 'Yes'\nassert solution('''5\n7 20 3 101 18\n11 11 10 234 2\n8 9 7 250 122\n19 41 21 321 10\n3 10 8 6 1\n''') == 'No'\nassert solution('''5\n7 20 3 101 18\n11 11 10 234 2\n8 9 7 250 122\n19 41 21 321 10\n3 10 8 6 1\n''') == 'Yes'\n"
    },
    {
        "number": 2458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"3 2\") == \"5\"\n"
    },
    {
        "number": 2459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''\n6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''\n6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''\n6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''\n6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\n"
    },
    {
        "number": 2460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 2 3 10\n0 0 1 0\n''') == '3'\nassert solution('''3 2\n2 3 4 5 6\n1 0 0 0 1\n''') == '2 1'\nassert solution('''1 4\n2 4 6 10 15\n1 1 1 1 0\n''') == '0 0 0 1'\n"
    },
    {
        "number": 2461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6 6'\nassert solution('3') == '6 6 6'\nassert solution('1') == '10'\n"
    },
    {
        "number": 2462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n7\n23\n31\n36\n44\n100\n258\n''') == 'NO'\nassert solution('''\n7\n7\n23\n31\n36\n44\n100\n258\n''') == 'YES'\nassert solution('''\n7\n7\n23\n31\n36\n44\n100\n258\n''') == 'YES'\nassert solution('''\n7\n7\n23\n31\n36\n44\n100\n258\n''') == 'YES'\nassert solution('''\n7\n7\n23\n31\n36\n44\n100\n258\n''') == 'YES'\n"
    },
    {
        "number": 2463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2 3 1 4 5'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3 1 4 2 5'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2 3 1 4 5'\n"
    },
    {
        "number": 2464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n3 2 0\n4 2 1\n5 2 0\n6 7 1\n7 2 1\n''') == '34'\n\n'''"
    },
    {
        "number": 2465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n54\n50\n2\n178\n\"\"\") == \"10\"\nassert solution(\"\"\"\n4\n50\n2\n178\n\"\"\") == \"18\"\nassert solution(\"\"\"\n4\n2\n178\n\"\"\") == \"90\"\nassert solution(\"\"\"\n4\n2\n178\n\"\"\") == \"180\"\n"
    },
    {
        "number": 2466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n''') == '''\n1 2 3\n1 3 2\n2 1 3\n2 3 1\n3 1 2\n3 2 1\n'''\n"
    },
    {
        "number": 2467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7\n''') == '[[1,2,4]]'\nassert solution('''\n3\n9\n''') == '[[1,2,6], [1,3,5], [2,3,4]]'\n"
    },
    {
        "number": 2468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"(()\") == 2\nassert solution(\")()())\") == 4\nassert solution(\"\") == 0\n"
    },
    {
        "number": 2469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('1,1,1,3,3,2,2,2') == '1,2'\n"
    },
    {
        "number": 2470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5 3 6 7\n1 3 2 4\n''') == '1'\nassert solution('''\n1 5 3 6 7\n4 3 2 1\n''') == '2'\nassert solution('''\n1 5 3 6 7\n4 3 2 1\n''') == '-1'\nassert solution('''\n1 5 3 6 7\n4 3 2 1\n''') == '-1'\nassert solution('''\n1 5 3 6 7\n4 3 2 1\n''') == '-1'\n"
    },
    {
        "number": 2471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 8\") == \"0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0\"\nassert solution(\"4 5 7\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"4 5 6\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"4 5 5\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"4 5 4\") == \"0\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 2472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('1') == 'Yes'\n"
    },
    {
        "number": 2473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"21\"\nassert solution(\"5 5\") == \"21\"\nassert solution(\"6 6\") == \"21\"\nassert solution(\"7 7\") == \"21\"\nassert solution(\"8 8\") == \"21\"\n"
    },
    {
        "number": 2474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"999999993\"\nassert solution(\"2\") == \"999999993\"\n"
    },
    {
        "number": 2475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 2 5 1 0') == '3'\nassert solution('5\\n0 2 5 1 0') == '3'\nassert solution('5\\n0 2 5 1 0') == '3'\nassert solution('5\\n0 2 5 1 0') == '3'\nassert solution('5\\n0 2 5 1 0') == '3'\n"
    },
    {
        "number": 2476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 2477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 2478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '((()))'\nassert solution('4') == '(((()))'\nassert solution('5') == '((((()))'\nassert solution('6') == '((((((()))))'\nassert solution('7') == '((((((((())))))))))'\n"
    },
    {
        "number": 2479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n\"\"\""
    },
    {
        "number": 2480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 2 3 5') == '4'\nassert solution('5 4 2 3 1') == '4'\nassert solution('5 4 2 3 1 2') == '5'\nassert solution('5 4 2 3 1 2 3') == '5'\nassert solution('5 4 2 3 1 2 3 4') == '5'\n"
    },
    {
        "number": 2481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"12\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"5 5\") == \"12\"\nassert solution(\"6 6\") == \"12\"\n"
    },
    {
        "number": 2482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 1\") == \"1 2 2 1\"\nassert solution(\"4 3 2\") == \"1 2 2 1\"\nassert solution(\"4 3 3\") == \"1 2 2 1\"\nassert solution(\"4 3 4\") == \"1 2 2 1\"\nassert solution(\"4 3 5\") == \"1 2 2 1\"\n"
    },
    {
        "number": 2483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"3 6\") == \"3\"\n"
    },
    {
        "number": 2484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 5 4 6\") == \"5\"\nassert solution(\"4\\n2 5 4 6\") == \"5\"\nassert solution(\"4\\n2 5 4 6\") == \"5\"\nassert solution(\"4\\n2 5 4 6\") == \"5\"\nassert solution(\"4\\n2 5 4 6\") == \"5\"\n"
    },
    {
        "number": 2485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 3') == '3'\nassert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 3') == '0'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 2486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 2487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"7\"\n"
    },
    {
        "number": 2488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"9 2\") == \"1\"\n"
    },
    {
        "number": 2489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n24 11 8 3 16\n''') == '3'\nassert solution('''4\n1 2 3 4\n''') == '0'\nassert solution('''5\n1 2 3 4 5\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n''') == '0'\nassert solution('''5\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 2490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('36') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 2491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"3 1\") == \"inf\"\nassert solution(\"3 1 2 3\") == \"inf\"\nassert solution(\"3 1 2 3 4\") == \"inf\"\n"
    },
    {
        "number": 2492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '-6'\nassert solution('5 3') == '-12'\nassert solution('6 3') == '-12'\nassert solution('7 3') == '-12'\nassert solution('8 3') == '-12'\n"
    },
    {
        "number": 2493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\\n5\\n4\\n1\\n\"\nassert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"1\\n\"\nassert solution(\"4\") == \"1\\n\"\n"
    },
    {
        "number": 2494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('12') == '6'\nassert solution('123') == '12'\nassert solution('1234') == '12'\nassert solution('12345') == '12'\n"
    },
    {
        "number": 2495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 -3 1 0') == '4'\nassert solution('5\\n1 -3 1 0') == '5'\nassert solution('6\\n1 -3 1 0') == '4'\nassert solution('7\\n1 -3 1 0') == '5'\nassert solution('8\\n1 -3 1 0') == '5'\n"
    },
    {
        "number": 2496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 5') == 'pairwise coprime'\nassert solution('2\\n2 3') =='setwise coprime'\nassert solution('2\\n2 3') == 'not coprime'\nassert solution('2\\n2 3') == 'not coprime'\nassert solution('2\\n2 3') == 'not coprime'\n"
    },
    {
        "number": 2497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 2498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 50\") == \"2\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"4 10\") == \"1\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"6 10\") == \"1\"\n"
    },
    {
        "number": 2499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 2500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('7') == '5'\n"
    },
    {
        "number": 2501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 3 3 1 3 1\") == \"3\"\nassert solution(\"6\\n2 3 3 1 3 1\") == \"3\"\nassert solution(\"6\\n2 3 3 1 3 1\") == \"3\"\nassert solution(\"6\\n2 3 3 1 3 1\") == \"3\"\nassert solution(\"6\\n2 3 3 1 3 1\") == \"3\"\n"
    },
    {
        "number": 2502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcabab\") == \"3\"\nassert solution(\"ab\") == \"4\"\nassert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ababab\") == \"3\"\n"
    },
    {
        "number": 2503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n''') == '4'\nassert solution('''\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n''') == '4'\nassert solution('''\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n''') == '4'\nassert solution('''\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n''') == '4'\nassert solution('''\n4 3\n0 1 W\n1 2 W\n5 3 B\n5 4 B\n''') == '4'\n"
    },
    {
        "number": 2504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 2 3\\n2 3 3\\n2\\n3 2\\n1 3\") == \"0\\n1\\n\"\nassert solution(\"3 2 5\\n1 2 3\\n2 3 3\\n2\\n3 2\\n1 3\") == \"1\\n1\\n\"\nassert solution(\"3 2 5\\n1 2 3\\n2 3 3\\n2\\n3 2\\n1 3\") == \"1\\n1\\n\"\nassert solution(\"3 2 5\\n1 2 3\\n2 3 3\\n2\\n3 2\\n1 3\") == \"1\\n1\\n\"\nassert solution(\"3 2 5\\n1 2 3\\n2 3 3\\n2\\n3 2\\n1 3\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 2505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"13\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1 3\") == \"13\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 2506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"202\"\nassert solution(\"10 14 19 34 33\") == \"202\"\n"
    },
    {
        "number": 2507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"3 5\") == \"2\"\n"
    },
    {
        "number": 2508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2\") == \"5\"\nassert solution(\"3 5 2\") == \"5\"\nassert solution(\"3 5 2\") == \"5\"\nassert solution(\"3 5 2\") == \"5\"\nassert solution(\"3 5 2\") == \"5\"\n"
    },
    {
        "number": 2509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '7'\nassert solution('10 2') == '10'\nassert solution('10 3') == '10'\nassert solution('10 4') == '10'\nassert solution('10 5') == '10'\n"
    },
    {
        "number": 2510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 4') == '2'\nassert solution('5 1') == '1'\nassert solution('10 10') == '2'\nassert solution('10 20') == '1'\n"
    },
    {
        "number": 2511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"5 3\") == \"10\"\nassert solution(\"6 3\") == \"12\"\nassert solution(\"7 3\") == \"14\"\nassert solution(\"8 3\") == \"16\"\n"
    },
    {
        "number": 2512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\") == \"8\"\nassert solution(\"2 2 4\") == \"7\"\nassert solution(\"2 2 5\") == \"6\"\nassert solution(\"2 2 6\") == \"5\"\nassert solution(\"2 2 7\") == \"4\"\n"
    },
    {
        "number": 2513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\noxoxox\") == \"SSSWWS\"\nassert solution(\"5\\nxoxox\") == \"SSWWS\"\nassert solution(\"4\\nxoxox\") == \"SSWW\"\nassert solution(\"3\\nxoxox\") == \"SSWW\"\nassert solution(\"2\\nxoxox\") == \"SSWW\"\n"
    },
    {
        "number": 2514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4\\n3\\n1 2\\n3 4\\n2 4') == '11 12 16'\nassert solution('4\\n1 2 3 4\\n3\\n1 2\\n3 4\\n2 4') == '11 12 16'\nassert solution('4\\n1 2 3 4\\n3\\n1 2\\n3 4\\n2 4') == '11 12 16'\nassert solution('4\\n1 2 3 4\\n3\\n1 2\\n3 4\\n2 4') == '11 12 16'\nassert solution('4\\n1 2 3 4\\n3\\n1 2\\n3 4\\n2 4') == '11 12 16'\n"
    },
    {
        "number": 2515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 7\\n') == '2'\nassert solution('2\\n4 5\\n') == '1'\nassert solution('3\\n5 6\\n') == '0'\nassert solution('4\\n7 8\\n') == '1'\nassert solution('5\\n9 10\\n') == '0'\n"
    },
    {
        "number": 2516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"8 3\") == \"1\"\n"
    },
    {
        "number": 2517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 3 3\") == \"2\"\nassert solution(\"3 3 3\") == \"2\"\n"
    },
    {
        "number": 2518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"2\"\n"
    },
    {
        "number": 2519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '7.000000000000'\nassert solution('5 3\\n1 2 2 4 5\\n') == '7.000000000000'\nassert solution('5 3\\n1 2 2 4 5\\n1 2 2 2 4 5') == '7.000000000000'\nassert solution('5 3\\n1 2 2 4 5\\n1 2 2 2 4 5\\n1 2 2 2 4 5') == '7.000000000000'\nassert solution('5 3\\n1 2 2 4 5\\n1 2 2 2 4 5\\n1 2 2 2 4 5') == '7.000000000000'\n"
    },
    {
        "number": 2520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4 1\") == \"0 1 0 1\"\nassert solution(\"5 5 1\") == \"0 1 0 1 0\"\nassert solution(\"6 6 1\") == \"0 1 0 1 0 0\"\nassert solution(\"7 7 1\") == \"0 1 0 1 0 0 0\"\nassert solution(\"8 8 1\") == \"0 1 0 1 0 0 0 0\"\n"
    },
    {
        "number": 2521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 2522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"1 1 1 2 2 3\") == \"2 2 3 1 1 1\"\nassert solution(\"1 1 1 2 2 3\") == \"No\"\n"
    },
    {
        "number": 2523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('010') == '2'\nassert solution('101') == '1'\nassert solution('011') == '0'\nassert solution('000') == '0'\nassert solution('1011') == '1'\n"
    },
    {
        "number": 2524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 2525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ba\"\nassert solution(\"abc\") == \"cba\"\nassert solution(\"abcde\") == \"cbad\"\nassert solution(\"abcdef\") == \"cbadf\"\n"
    },
    {
        "number": 2526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 2 1\") == \"12\"\nassert solution(\"1 2 2 2 1\") == \"12\"\nassert solution(\"1 2 2 2 1\") == \"12\"\nassert solution(\"1 2 2 2 1\") == \"12\"\nassert solution(\"1 2 2 2 1\") == \"12\"\n"
    },
    {
        "number": 2527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('iloveyou') == 'happy'\nassert solution('ulrvysioqjifo') =='sad'\nassert solution('abcvleouioydef') == 'happy'\n"
    },
    {
        "number": 2528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 2529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('30 120.00') == '89.50'\nassert solution('42 120.00') == '120.00'\nassert solution('300 120.00') == '120.00'\n"
    },
    {
        "number": 2530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Germany\"\nassert solution(\"4 5\") == \"Italy\"\nassert solution(\"2 2\") == \"England\"\nassert solution(\"3 3\") == \"Italy\"\nassert solution(\"4 4\") == \"Italy\"\n"
    },
    {
        "number": 2531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n3\n7\n10\n17\n22\n15\n''') == '1'\nassert solution('''\n5\n3\n7\n10\n3\n18\n''') == '2'\nassert solution('''\n5\n3\n8\n11\n17\n30\n''') == '0'\n"
    },
    {
        "number": 2532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 2533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 2534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"2 2\") == \"10\"\n"
    },
    {
        "number": 2535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '85'\nassert solution('6 3') == '1'\nassert solution('3 2') == '360'\n"
    },
    {
        "number": 2536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"1 3\") == \"9\"\nassert solution(\"1 3\") == \"9\"\nassert solution(\"1 3\") == \"9\"\nassert solution(\"1 3\") == \"9\"\n"
    },
    {
        "number": 2537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa\n''') == 'YES'\nassert solution('''\naaaa\naaaa\naaaa\n''') == 'YES'\nassert solution('''\naaaa\naaaa\naaaa\n''') == 'NO'\nassert solution('''\naaaa\naaaa\naaaa\n''') == 'NO'\nassert solution('''\naaaa\naaaa\naaaa\n''') == 'NO'\n"
    },
    {
        "number": 2538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 4\n2 1 0\n3 5 5\n4 10 6\n''') == '3'\nassert solution('''\n5 3 4\n2 1 0\n3 5 5\n4 10 6\n''') == '2'\nassert solution('''\n5 3 4\n2 1 0\n3 5 5\n4 10 6\n''') == '1'\nassert solution('''\n5 3 4\n2 1 0\n3 5 5\n4 10 6\n''') == '0'\nassert solution('''\n5 3 4\n2 1 0\n3 5 5\n4 10 6\n''') == '0'\n"
    },
    {
        "number": 2539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n7 22 1\n7 22 2\n7 22 3\n''') == '9 13 15'\nassert solution('''\n5\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n''') == '187 87 139 128 141'\n"
    },
    {
        "number": 2540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3 4\n1 2\n2 3\n2 4\n''') == '10 9 3 4'\nassert solution('''\n15\n1 2 3 1 2 3 3 1 1 3 2 2 1 2 3\n1 2\n1 3\n1 4\n1 14\n1 15\n2 5\n2 6\n2 7\n3 8\n3 9\n3 10\n4 11\n4 12\n4 13\n''') == '6 5 4 3 2 3 3 1 1 3 2 2 1 2 3'\n"
    },
    {
        "number": 2541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4\n9 9\n5 7\n12 29\n137 591\n1 1000000\n''') == '2'\nassert solution('''\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n1 511\n1 512\n1 513\n1 514\n1 515\n1 516\n1 517\n1 518\n1 519\n1 520\n1 521\n1 522\n1 523\n1 524\n1 525\n1 526\n1 527\n1 528\n1 529\n1 530\n1 531\n1 532\n1 533\n1 534\n1 535\n1 536\n1 537\n1 538\n1 539\n1 540\n1 541\n1 542\n1 543\n1 544\n1 545\n1 546\n1 547\n1 548\n1 549\n1 550\n1 551\n1 552\n1 553\n1 554\n1 555\n1 556\n1 557\n1 558\n1 559\n1 560\n1 561\n1 562\n1 563\n1 564\n1 565"
    },
    {
        "number": 2542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n95831\n100120013\n252525252525\n''') == '3'\nassert solution('''\n1\n100120013\n252525252525\n''') == '5'\nassert solution('''\n1\n95831\n100120013\n252525252525\n''') == '0'\nassert solution('''\n1\n95831\n100120013\n252525252525\n''') == '0'\nassert solution('''\n1\n95831\n100120013\n252525252525\n''') == '0'\n"
    },
    {
        "number": 2543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1\n''') == '0'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1\n''') == '9'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1\n''') == '0'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1\n''') == '9'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1\n''') == '0'\n"
    },
    {
        "number": 2544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n1 3\n2 4\n2 5\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == '1 2\\n1 2\\n1 3\\n2 3'\nassert solution('''\n5\n1 2\n1 3\n2 4\n2 5\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == '1 2\\n1 2\\n1 3\\n2 3'\n"
    },
    {
        "number": 2545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n6 9\n1 1\n1 2\n''') == 'YES'\nassert solution('''\n3\n6 9\n1 1\n1 2\n''') == 'NO'\nassert solution('''\n3\n6 9\n1 1\n1 2\n''') == 'YES'\nassert solution('''\n3\n6 9\n1 1\n1 2\n''') == 'NO'\nassert solution('''\n3\n6 9\n1 1\n1 2\n''') == 'YES'\n"
    },
    {
        "number": 2546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7\n''') == '11'\nassert solution('''\n3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7\n''') == '1337'\nassert solution('''\n3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7\n''') == '6'\n"
    },
    {
        "number": 2547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3 1\n6 0 0\n11 1 0\n9 0 1\n21 1 1\n10 1 0\n8 0 1\n''') == '24'\nassert solution('''\n6 3 2\n6 0 0\n11 1 0\n9 0 1\n21 1 1\n10 1 0\n8 0 1\n''') == '39'\nassert solution('''\n6 3 1\n6 0 0\n11 1 0\n9 0 1\n21 1 1\n10 1 0\n8 0 1\n''') == '-1'\nassert solution('''\n6 3 2\n6 0 0\n11 1 0\n9 0 1\n21 1 1\n10 1 0\n8 0 1\n''') == '-1'\nassert solution('''\n6 3 1\n6 0 0\n11 1 0\n9 0 1\n21 1 1\n10 1 0\n8 0 1\n''') == '-1'\n"
    },
    {
        "number": 2548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n120\n5\n11011\n6\n600005\n''') == '3'\nassert solution('''\n3\n3\n120\n5\n11011\n6\n600005\n''') == '6'\nassert solution('''\n3\n3\n120\n5\n11011\n6\n600005\n''') == '1'\nassert solution('''\n3\n3\n120\n5\n11011\n6\n600005\n''') == '6'\nassert solution('''\n3\n3\n120\n5\n11011\n6\n600005\n''') == '1'\n"
    },
    {
        "number": 2549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 3 1\n2 1\n1 2\n''') == '665496237'\nassert solution('''\n3 3\n4 2 6\n3 1\n1 2\n2 3\n''') == '0'\n"
    },
    {
        "number": 2550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10\n1 2 3 4\n4 5\n1 2 3 4\n''') == '10'\nassert solution('''\n4 10\n1 2 3 4\n4 5\n1 2 3 4\n''') == '5'\nassert solution('''\n4 10\n1 2 3 4\n4 5\n1 2 3 4\n''') == '5'\nassert solution('''\n4 10\n1 2 3 4\n4 5\n1 2 3 4\n''') == '5'\nassert solution('''\n4 10\n1 2 3 4\n4 5\n1 2 3 4\n''') == '5'\n"
    },
    {
        "number": 2551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\naabce\nace\nabacaba\naax\nty\nyyt\n''') == '1'\nassert solution('''\naabce\nace\nabacaba\naax\nty\nyyt\n''') == '3'\nassert solution('''\naabce\nace\nabacaba\naax\nty\nyyt\n''') == '-1'\nassert solution('''\naabce\nace\nabacaba\naax\nty\nyyt\n''') == '-1'\nassert solution('''\naabce\nace\nabacaba\naax\nty\nyyt\n''') == '-1'\n"
    },
    {
        "number": 2552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4\n1 0 1 1 0 1 0\n4 0 0 -1 0 -1 0\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n5 11\n1 2 5 2 1\n-11 -2 -6 -2 -1\n1 2\n1 3\n1 4\n3 5\n''') == 'YES'\nassert solution('''\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n\n''') == 'NO'\n"
    },
    {
        "number": 2553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\n''') == 'Yes'\nassert solution('''\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\n''') == 'No'\nassert solution('''\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\n''') == 'Yes'\nassert solution('''\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\n''') == 'No'\nassert solution('''\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\n''') == 'Yes'\n"
    },
    {
        "number": 2554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1\n''') == '37'\nassert solution('''\n4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1\n''') == '5'\nassert solution('''\n4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1\n''') == '26'\nassert solution('''\n4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1\n''') == '5'\nassert solution('''\n4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1\n''') == '26'\n"
    },
    {
        "number": 2555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3\n''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\n"
    },
    {
        "number": 2556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\n1\n18\n10\n''')\n\nassert solution('''\n2 10000\n10000 1\n2 6\n4 6\n''') == '100000000\n1\n18\n10\n''')\n\nassert solution('''\n3 10000\n10000 1\n2 6\n4 6\n''') == '100000000\n1\n18\n10\n''')\n\nassert solution('''\n4 10000\n10000 1\n2 6\n4 6\n''') == '100000000\n1\n18\n10\n''')\n\nassert solution('''\n5 10000\n10000 1\n2 6\n4 6\n''') == '100000000\n1\n18\n10\n''')"
    },
    {
        "number": 2557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '3'\nassert solution('''\n4 6\n1 2\n1 4\n2 3\n2 4\n3 2\n3 4\n''') == '4'\nassert solution('''\n4 7\n1 2\n1 3\n1 4\n2 3\n2 4\n3 2\n3 4\n''') == '5'\nassert solution('''\n4 8\n1 2\n1 3\n1 4\n2 3\n2 4\n3 2\n3 4\n''') == '6'\nassert solution('''\n4 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 2\n3 4\n''') == '7'\n"
    },
    {
        "number": 2558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1\n''') == '1'\nassert solution('''\n1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1\n''') == '2'\nassert solution('''\n1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1\n''') == '1'\nassert solution('''\n1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1\n''') == '2'\nassert solution('''\n1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1\n''') == '1'\n"
    },
    {
        "number": 2559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 4\n2 4 3\n4 5 6\n5 6 5\n2\n1 2 1\n1 3 2\n1 4 3\n''') == '15 33'\nassert solution('''\n2\n1 2 1\n1 3 2\n1 4 3\n''') == '6 6'\n"
    },
    {
        "number": 2560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n6 4 5\n''') == 'Yes'\nassert solution('''\n5 2 3\n6 4 5\n''') == 'No'\nassert solution('''\n5 2 3\n6 4 5\n''') == 'Yes'\nassert solution('''\n5 2 3\n6 4 5\n''') == 'No'\nassert solution('''\n5 2 3\n6 4 5\n''') == 'Yes'\n"
    },
    {
        "number": 2561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1073741823\") == \"1073741824\"\n"
    },
    {
        "number": 2562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '12'\nassert solution('4') == '39'\n"
    },
    {
        "number": 2563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0709\n1337\n246432\n''') == '00791337234642'\nassert solution('''\n1\n0\n''') == '0'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n3\n1\n''') == '1'\nassert solution('''\n4\n1\n''') == '1'\n"
    },
    {
        "number": 2564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n5 4 100\n''') == '7'\nassert solution('''\n1 2 3\n5 4 100\n''') == '7'\nassert solution('''\n1 2 3\n5 4 100\n''') == '7'\nassert solution('''\n1 2 3\n5 4 100\n''') == '7'\nassert solution('''\n1 2 3\n5 4 100\n''') == '7'\n"
    },
    {
        "number": 2565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1\n''') == '4'\nassert solution('''\n2 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1\n''') == '2'\nassert solution('''\n2 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1\n''') == '0'\n"
    },
    {
        "number": 2566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 1 0 0 0 0 0\n100000000\n1 0 0 0 1 0 1\n1\n1 0 0 0 0 0 0''') == '8'\nassert solution('''3\n2\n0 1 0 0 0 0 0\n100000000\n1 0 0 0 1 0 1\n1\n1 0 0 0 0 0 0''') == '233333332'\nassert solution('''4\n2\n0 1 0 0 0 0 0\n100000000\n1 0 0 0 1 0 1\n1\n1 0 0 0 0 0 0''') == '1'\n"
    },
    {
        "number": 2567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"1\"\n"
    },
    {
        "number": 2568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+-\n---\n++-''') == '7'\nassert solution('''+--+\n---\n++--''') == '9'\nassert solution('''+--+\n---+-''') == '6'\nassert solution('''+--+\n---+--''') == '9'\nassert solution('''+--+\n---+--+''') == '7'\n"
    },
    {
        "number": 2569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\nassert solution('''\n1\n2\n3\n4\n5\n100\n2000000\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n100\n2000000\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n100\n2000000\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n100\n2000000\n''') == '4'\n"
    },
    {
        "number": 2570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes'\nassert solution('''3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'No'\nassert solution('''3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes'\n"
    },
    {
        "number": 2571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n1 100\n4\n1 2 3 6\n''') == '-100 1'\nassert solution('''\n2\n2\n1 100\n4\n1 2 3 6\n''') == '1 1 1 -1'\n"
    },
    {
        "number": 2572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18\n''') == '8'\nassert solution('''\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18\n''') == '42'\n"
    },
    {
        "number": 2573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '2'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '1'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '0'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '1'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '2'\n"
    },
    {
        "number": 2574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\n''') == '-120'\nassert solution('''\n4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\n''') == '12'\nassert solution('''\n4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\n''') == '0'\nassert solution('''\n4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\n''') == '945'\n"
    },
    {
        "number": 2575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n30\\n60\\n90\") == \"NO\"\nassert solution(\"3\\n30\\n60\\n90\") == \"YES\"\nassert solution(\"3\\n30\\n60\\n90\") == \"YES\"\nassert solution(\"3\\n30\\n60\\n90\") == \"YES\"\nassert solution(\"3\\n30\\n60\\n90\") == \"YES\"\n"
    },
    {
        "number": 2576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 2 1\n4 8 9 2\n''') == '12'\nassert solution('''1 2 2 1\n4 8 9 2\n''') == '12'\nassert solution('''1 2 2 1\n4 8 9 2\n''') == '12'\nassert solution('''1 2 2 1\n4 8 9 2\n''') == '12'\nassert solution('''1 2 2 1\n4 8 9 2\n''') == '12'\n"
    },
    {
        "number": 2577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2\n1 3\n2 2\n''') == '1 2\\n5 6\\n7 8\\n2 1\\n4 3\\n2 4\\n3 2\\n'''\n"
    },
    {
        "number": 2578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\n''') == '4 4 1 4 4 2 2'\nassert solution('''\n7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\n''') == '4 4 1 4 4 2 2'\nassert solution('''\n7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\n''') == '4 4 1 4 4 2 2'\nassert solution('''\n7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\n''') == '4 4 1 4 4 2 2'\nassert solution('''\n7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\n''') == '4 4 1 4 4 2 2'\n"
    },
    {
        "number": 2579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 1 10 1\") == \"YES\"\nassert solution(\"1 5 6 10 1\") == \"NO\"\n"
    },
    {
        "number": 2580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n1 2\n2 3\n3 4\n2\n2 2\n4\n3 4\n1 3\n3 2\n2\n3 2\n7\n6 1\n2 3\n4 6\n7 3\n5 1\n3 6\n4\n7 5 13 3\n''') == '17'\nassert solution('''\n3\n4\n1 2\n2 3\n3 4\n2\n2 2\n4\n3 4\n1 3\n3 2\n2\n3 2\n7\n6 1\n2 3\n4 6\n7 3\n5 1\n3 6\n4\n7 5 13 3\n''') == '18'\n"
    },
    {
        "number": 2581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 1\n2 1 1\n1 1 1\n\n''') == '12'\nassert solution('''\n4\n1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1\n\n''') == '12'\nassert solution('''\n5\n1 1 1 1 1\n2 1 1 0 0\n1 1 1 0 0\n1 0 0 1 0\n\n''') == '12'\nassert solution('''\n6\n1 1 1 1 1 1\n2 1 1 0 0 0\n1 1 1 0 0 0\n1 0 0 1 0 0\n\n''') == '12'\nassert solution('''\n7\n1 1 1 1 1 1 1\n2 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 0 0 1 0 0 0\n\n''') == '12'\n"
    },
    {
        "number": 2582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 4 1 5 2\n''') == '2'\nassert solution('''\n3\n1 3 2\n''') == '1'\n"
    },
    {
        "number": 2583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n12\n''') == 'Ashishgup'\nassert solution('''\n1\n2\n3\n4\n5\n6\n12\n''') == 'FastestFinger'\nassert solution('''\n1\n2\n3\n4\n5\n6\n12\n''') == 'Ashishgup'\nassert solution('''\n1\n2\n3\n4\n5\n6\n12\n''') == 'FastestFinger'\nassert solution('''\n1\n2\n3\n4\n5\n6\n12\n''') == 'Ashishgup'\n"
    },
    {
        "number": 2584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\n''') == '4'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\n''') == '3'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\n''') == '0'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\n''') == '4'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 2585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n''') == '1'\nassert solution('''\n2\n3\n''') == '2'\n"
    },
    {
        "number": 2586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 3\n''') == 'BW\\nWB\\nBB'\nassert solution('''\n3 2\n3 3\n''') == 'BWB\\nBWW\\nBWB'\n'''\n"
    },
    {
        "number": 2587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n''') == '998'\nassert solution('''\n2\n3\n''') == '100110011000'\n"
    },
    {
        "number": 2588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '94'\nassert solution('''\n8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '25'\nassert solution('''\n8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '2900000000'\nassert solution('''\n8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '13'\n"
    },
    {
        "number": 2589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6\n''') == '2'\nassert solution('''\n3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6\n''') == '3'\nassert solution('''\n3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6\n''') == '-1'\n"
    },
    {
        "number": 2590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2'\nassert solution('''\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '4'\nassert solution('''\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '0'\nassert solution('''\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '3'\n"
    },
    {
        "number": 2591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 -2 4 8 6 5\n4\n8 1 4 2\n''') == '5 5 4 6 8 -2'\nassert solution('''\n2\n6\n5 -2 4 8 6 5\n4\n8 1 4 2\n''') == '5 5 4 6 8 -2'\n"
    },
    {
        "number": 2592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n''') == '3'\nassert solution('''\n2\n1\n1\n''') == '0'\nassert solution('''\n3\n1\n1\n''') == '4'\nassert solution('''\n4\n1\n1\n1\n''') == '5'\nassert solution('''\n5\n1\n1\n1\n1\n''') == '5'\n"
    },
    {
        "number": 2593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '3'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '0'\n"
    },
    {
        "number": 2594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n1 3\n2 2\n3 3\n5 3\n''') == '1'\nassert solution('''\n1 1\n1 3\n2 2\n3 3\n5 3\n''') == '2'\nassert solution('''\n1 1\n1 3\n2 2\n3 3\n5 3\n''') == '5'\nassert solution('''\n1 1\n1 3\n2 2\n3 3\n5 3\n''') == '8'\nassert solution('''\n1 1\n1 3\n2 2\n3 3\n5 3\n''') == '8'\n"
    },
    {
        "number": 2595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8\n''') == '1'\nassert solution('''\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8\n''') == '1'\nassert solution('''\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8\n''') == '-1'\nassert solution('''\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8\n''') == '0'\nassert solution('''\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8\n''') == '2'\n"
    },
    {
        "number": 2596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2\n''') == '4 1'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2\n''') == '5 2'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2\n''') == '4 2'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2\n''') == '5 3'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2\n''') == '5 4'\n"
    },
    {
        "number": 2597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 3 1 4 5\n4\n4 4 4 4\n3\n1 1 1\n5\n5 5 1 1 5\n''') == '3'\nassert solution('''\n5\n4 3 1 4 5\n4\n4 4 4 4\n3\n1 1 1\n5\n5 5 1 1 5\n''') == '4'\nassert solution('''\n5\n4 3 1 4 5\n4\n4 4 4 4\n3\n1 1 1\n5\n5 5 1 1 5\n''') == '1'\nassert solution('''\n5\n4 3 1 4 5\n4\n4 4 4 4\n3\n1 1 1\n5\n5 5 1 1 5\n''') == '1'\nassert solution('''\n5\n4 3 1 4 5\n4\n4 4 4 4\n3\n1 1 1\n5\n5 5 1 1 5\n''') == '1'\n"
    },
    {
        "number": 2598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 B\n3 1 R\n3 2 B\n''') == '1'\nassert solution('''\n6 5\n1 3 R\n2 3 R\n3 4 B\n4 5 R\n4 6 R\n''') == '2 3 4'\nassert solution('''\n4 5\n1 2 R\n1 3 R\n2 3 B\n3 4 B\n1 4 B\n''') == '-1'\n"
    },
    {
        "number": 2599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n''') == '1'\nassert solution('''\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n''') == '0'\nassert solution('''\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n''') == '-1'\nassert solution('''\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n''') == '599998'\nassert solution('''\n1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2\n''') == '99999999999'\n"
    },
    {
        "number": 2600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n2 3\n1 1 0\n1 0 0\n3 7\n1 0 1 1 1 1 1\n0 0 0 0 0 0 0\n1 1 1 1 1 0 1\n3 5\n1 0 1 0 0\n1 1 1 1 0\n0 0 1 0 0\n''') == '0'\nassert solution('''\n2 2\n1 1\n0 1\n2 3\n1 1 0\n1 0 0\n3 7\n1 0 1 1 1 1 1\n0 0 0 0 0 0 0\n1 1 1 1 1 0 1\n3 5\n1 0 1 0 0\n1 1 1 1 0\n0 0 1 0 0\n''') == '4'\nassert solution('''\n2 2\n1 1\n0 1\n2 3\n1 1 0\n1 0 0\n3 7\n1 0 1 1 1 1 1\n0 0 0 0 0 0 0\n1 1 1 1 1 0 1\n3 5\n1 0 1 0 0\n1 1 1 1 0\n0 0 1 0 0\n''') == '3'\n"
    },
    {
        "number": 2601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1\n''') == 'YES'\nassert solution('''\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1\n''') == 'YES'\nassert solution('''\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1\n''') == 'NO'\nassert solution('''\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1\n''') == 'NO'\nassert solution('''\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1\n''') == 'NO'\n"
    },
    {
        "number": 2602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\n''') == 'Yes'\nassert solution('''\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\n''') == 'No'\nassert solution('''\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\n''') == 'Yes'\nassert solution('''\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\n''') == 'No'\nassert solution('''\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\n''') == 'Yes'\n"
    },
    {
        "number": 2603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 2604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 4\n7\n7 8 1\n-7 3 2\n0 2 1\n0 -2 2\n-3 -3 1\n0 6 2\n5 3 1\n''') == '2'\n\nassert solution('''10 8\n4\n0 0 9\n0 0 10\n1 0 1\n1 0 2\n\n''') == '0'\n\nassert solution('''10 8\n4\n0 0 9\n0 0 10\n1 0 1\n1 0 2\n\n''') == '0'\n\nassert solution('''10 8\n4\n0 0 9\n0 0 10\n1 0 1\n1 0 2\n\n''') == '0'\n\nassert solution('''10 8\n4\n0 0 9\n0 0 10\n1 0 1\n1 0 2\n\n''') == '0'"
    },
    {
        "number": 2605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n2 3 1 2\n3\n''') == '17'\nassert solution('''5 2\n3 5 2 2 4\n1 4\n''') == '71'\n"
    },
    {
        "number": 2606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n''') == '4'\nassert solution('''\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n''') == '12'\nassert solution('''\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n''') == '0'\nassert solution('''\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n''') == '2'\nassert solution('''\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n''') == '21'\n"
    },
    {
        "number": 2607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na???cb\na??bbc\na?b?c\n''') == 'ababcb'\nassert solution('''\na???cb\na??bbc\na?b?c\n''') == '-1'\nassert solution('''\na???cb\na??bbc\na?b?c\n''') == 'acbac'\n''')\n"
    },
    {
        "number": 2608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8'\n\nassert solution('''\n5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8'\n\nassert solution('''\n5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8'\n\nassert solution('''\n5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8'\n\nassert solution('''\n5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8'"
    },
    {
        "number": 2609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2'\nassert solution('''\n5\n1 5\n1 5\n2 2\n4 4\n''') == '1'\nassert solution('''\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '5'\nassert solution('''\n5\n1 5\n1 5\n2 2\n4 4\n''') == '4'\nassert solution('''\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '4'\n"
    },
    {
        "number": 2610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3\n5 5 3\n1 2 2 1 2\n''') == '3'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3\n5 5 3\n1 2 2 1 2\n''') == '4'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3\n5 5 3\n1 2 2 1 2\n''') == '1'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3\n5 5 3\n1 2 2 1 2\n''') == '0'\nassert solution('''\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3\n5 5 3\n1 2 2 1 2\n''') == '0'\n"
    },
    {
        "number": 2611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n1 2 6 8 10\n1 4\n1 9\n0 6\n0 10\n1 100\n1 50\n''') == '7'\nassert solution('''\n5 8\n5 1 2 4 3\n0 1\n0 2\n0 3\n0 4\n0 5\n1 1000000000\n1 1\n1 500000000\n''') == '2'\n"
    },
    {
        "number": 2612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2'\nassert solution('''\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '1'\nassert solution('''\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '1'\nassert solution('''\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '1'\nassert solution('''\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '1'\n"
    },
    {
        "number": 2613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4 0\n1 5 4 3 2\n5 4 1\n1 5 4 3 2\n5 4 4\n10 20 30 40 50\n10 7 3\n4 6 8 2 9 9 7 4 10 9\n''') == '15'\nassert solution('''\n5 4 0\n1 5 4 3 2\n5 4 1\n1 5 4 3 2\n5 4 4\n10 20 30 40 50\n10 7 3\n4 6 8 2 9 9 7 4 10 9\n''') == '19'\nassert solution('''\n5 4 0\n1 5 4 3 2\n5 4 1\n1 5 4 3 2\n5 4 4\n10 20 30 40 50\n10 7 3\n4 6 8 2 9 9 7 4 10 9\n''') == '150'\nassert solution('''\n5 4 0\n1 5 4 3 2\n5 4 1\n1 5 4 3 2\n5 4 4\n10 20 30 40 50\n10 7 3\n4 6 8 2 9 9 7 4 10 9\n''') == '56'\n"
    },
    {
        "number": 2614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7\n1 7 1 6 4 4 6\n8\n1 1 4 6 4 6 4 7\n3\n3 3 3\n6\n2 5 2 3 1 4\n''') == '3'\nassert solution('''\n4\n7\n1 7 1 6 4 4 6\n8\n1 1 4 6 4 6 4 7\n3\n3 3 3\n6\n2 5 2 3 1 4\n''') == '2'\nassert solution('''\n4\n7\n1 7 1 6 4 4 6\n8\n1 1 4 6 4 6 4 7\n3\n3 3 3\n6\n2 5 2 3 1 4\n''') == '0'\nassert solution('''\n4\n7\n1 7 1 6 4 4 6\n8\n1 1 4 6 4 6 4 7\n3\n3 3 3\n6\n2 5 2 3 1 4\n''') == '4'\nassert solution('''\n4\n7\n1 7 1 6 4 4 6\n8\n1 1 4 6 4 6 4 7\n3\n3 3 3\n6\n2 5 2 3 1 4\n''') == '4'\n"
    },
    {
        "number": 2615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2\\n72\\n10\") == \"2\\n1\\n61\\n6\"\n"
    },
    {
        "number": 2616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'First'\nassert solution('''\n7\n3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'Second'\nassert solution('''\n7\n3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'First'\nassert solution('''\n7\n3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'Second'\nassert solution('''\n7\n3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'First'\n"
    },
    {
        "number": 2617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1 0 2\"\nassert solution(\"1\") == \"0\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 2618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n100\n50 1\n49 1\n100\n8\n100 200 100 200 100 200 100 100\n10 2\n15 3\n107\n3\n1000000000 1000000000 1000000000\n50 1\n50 1\n3000000000\n5\n200 100 100 100 100\n69 5\n31 2\n90\n''') == '6'\nassert solution('''\n1\n100\n50 1\n49 1\n100\n8\n100 200 100 200 100 200 100 100\n10 2\n15 3\n107\n3\n1000000000 1000000000 1000000000\n50 1\n50 1\n3000000000\n5\n200 100 100 100 100\n69 5\n31 2\n90\n''') == '-1'\nassert solution('''\n4\n1\n100\n50 1\n49 1\n100\n8\n100 200 100 200 100 200 100 100\n10 2\n15 3\n107\n3\n1000000000 1000000000 1000000000\n50 1\n50 1\n3000000000\n5\n200 100 100 100 100\n69 5\n31 2\n90\n''') == '4'\n"
    },
    {
        "number": 2619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 3\n1 1 1\n3 2 0\n2 1 1 2 2\n0 2 1 4 5\n5 1 1 5 5\n''') == '3'\nassert solution('''\n3 4 5\n1 1 2\n2 3 0\n3 3 1\n0 1 1 100 100\n1 2 2 4 4\n2 2 1 4 7\n1 50 50 51 51\n''') == '3'\n"
    },
    {
        "number": 2620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 4\n2 3\n1 1 2\n1 3 4\n''') == '9'\nassert solution('''4 4\n1 2 4\n2 3\n1 1 2\n1 3 4\n''') == '4'\nassert solution('''4 4\n1 2 4\n2 3\n1 1 2\n1 3 4\n''') == '6'\nassert solution('''4 4\n1 2 4\n2 3\n1 1 2\n1 3 4\n''') == '9'\nassert solution('''4 4\n1 2 4\n2 3\n1 1 2\n1 3 4\n''') == '4'\n"
    },
    {
        "number": 2621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99\n''') == 'YES'\nassert solution('''\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99\n''') == 'NO'\nassert solution('''\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99\n''') == 'YES'\nassert solution('''\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99\n''') == 'NO'\nassert solution('''\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99\n''') == 'YES'\n"
    },
    {
        "number": 2622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5\\n'\n                'somer\\n'\n                'random\\n'\n                'noise\\n'\n                'mayth\\n'\n                'eforc\\n'\n                'ebewi\\n'\n                'tyou\\n'\n                'hctwo\\n'\n                'again\\n'\n                'noise\\n'\n                'somermayth\\n'\n                'andomeforc\\n'\n                'noiseebewi\\n'\n                'againthyou\\n'\n                'noisehctwo\\n') == '4 6'\n\nassert solution('10 5\\n'\n                'random\\n'\n                'noise\\n'\n                'mayth\\n'\n                'eforc\\n'\n                'ebewi\\n'\n                'tyou\\n'\n                'hctwo\\n'\n                'again\\n'\n                'noise\\n'\n                'somermayth\\n'\n                'andomeforc\\n'\n                'noiseebewi\\n'\n                'againthyou\\n'\n                'noisehctwo\\n') == '4 6'\n\nassert solution('10 5\\n'\n                'random\\n'\n                'noise\\n'\n                'mayth\\n'\n                'eforc\\n'\n                'ebewi\\n'\n                'tyou\\n'\n                'hctwo\\n'\n                'again\\n'\n                'noise\\n'\n                'somermayth\\n'\n                'andomeforc\\n'\n                'noiseebewi\\n'\n                'againthyou\\n'\n                'noisehctwo\\n') == '4 6'\n\nassert solution('10 5\\n'\n                'random\\n'\n                'noise\\n'\n                'mayth\\n'\n                'eforc\\n'\n                'ebewi\\n'\n                'tyou\\n'\n                'hctwo\\n'\n                'again\\n'\n                'noise\\n'\n                'somermayth\\n'\n                'andomeforc\\n'\n                'noiseebewi\\n'\n                'againthyou\\n'\n                'noisehctwo\\n') == '4 6'\n\nassert solution('10 5\\n'\n                'random\\n'\n                'noise\\n'\n                'mayth\\n'\n                'eforc\\n'\n                'ebewi\\n'\n                'tyou\\n'\n                'hctwo\\n'\n                'again\\n'\n                'noise\\n'\n                'somermayth\\n'\n                'andomeforc\\n'\n                'noiseebewi\\n'\n                'againthyou\\n'\n                'noisehctwo\\n') == '4 6'"
    },
    {
        "number": 2623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\nbaba\n5 2\nbaacb\n5 3\nbaacb\n5 3\naaaaa\n6 4\naaxxzz\n7 1\nphoenix\n''') == 'ab'\nassert solution('''\n4 2\nbaba\n5 2\nbaacb\n5 3\nbaacb\n5 3\naaaaa\n6 4\naaxxzz\n7 1\nphoenix\n''') == 'abbc'\nassert solution('''\n4 2\nbaba\n5 2\nbaacb\n5 3\nbaacb\n5 3\naaaaa\n6 4\naaxxzz\n7 1\nphoenix\n''') == 'ac'\nassert solution('''\n4 2\nbaba\n5 2\nbaacb\n5 3\nbaacb\n5 3\naaaaa\n6 4\naaxxzz\n7 1\nphoenix\n''') == 'aa'\nassert solution('''\n4 2\nbaba\n5 2\nbaacb\n5 3\nbaacb\n5 3\naaaaa\n6 4\naaxxzz\n7 1\nphoenix\n''') == 'az'\n"
    },
    {
        "number": 2624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 3\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n> 2\n> -4\n< 5\n''') == '5 4 -3 -2 -1 0 1 2 -3 4 5'\nassert solution('''5 5\n0 1 -2 -1 2\n< -2\n< -1\n< 0\n< 1\n< 2\n''') == '0 -1 2 -1 2'\n"
    },
    {
        "number": 2625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '5'\nassert solution('5 2') == '38'\nassert solution('3 1') == '19'\n"
    },
    {
        "number": 2626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1\n''') == '1'\n\nassert solution('''\n2\n2\n''') == '2'\n\nassert solution('''\n2\n3\n''') == '2'\n\nassert solution('''\n2\n4\n''') == '2'\n\nassert solution('''\n2\n5\n''') == '2'"
    },
    {
        "number": 2627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n''') == \"6\"\nassert solution('''\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n''') == \"6\"\nassert solution('''\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n''') == \"6\"\nassert solution('''\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n''') == \"6\"\nassert solution('''\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n''') == \"6\"\n"
    },
    {
        "number": 2628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0 1 3 2'\nassert solution('0') == '0'\n"
    },
    {
        "number": 2629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"[\\n[1, 2, 3],\\n[8, 9, 4],\\n[7, 6, 5]\\n]\"\nassert solution(\"5\") == \"[\\n[1, 2, 3, 4, 5],\\n[12, 13, 14, 15, 16],\\n[11, 16, 15, 14, 13],\\n[10, 9, 8, 7, 6],\\n[9, 8, 7, 6, 5]\\n]\"\nassert solution(\"10\") == \"[\\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\\n[16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\\n[15, 24, 23, 22, 21, 20, 19, 18, 17, 16],\\n[14, 13, 12, 11, 10, 9, 8, 7, 6, 5],\\n[13, 12, 11, 10, 9, 8, 7, 6, 5, 4],\\n[12, 11, 10, 9, 8, 7, 6, 5, 4, 3],\\n[11, 10, 9, 8, 7, 6, 5, 4, 3, 2],\\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1],\\n[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\\n]\"\n"
    },
    {
        "number": 2630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n  [0, 0, 0],\n  [0, 1, 0],\n  [0, 0, 0]\n]\n''') == 2\nassert solution('''\n[\n  [0, 0, 0, 0, 0, 0],\n  [0, 1, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0]\n]\n''') == 7\nassert solution('''\n[\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n''') == 11\nassert solution('''\n[\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n''') == 11\nassert solution('''\n[\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n''') == 11\n"
    },
    {
        "number": 2631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2, [[1,0]]') == 'true'\nassert solution('2, [[1,0],[0,1]]') == 'false'\n"
    },
    {
        "number": 2632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n''') == '7'\nassert solution('''\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n''') == '7'\nassert solution('''\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n''') == '7'\nassert solution('''\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n''') == '7'\nassert solution('''\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n''') == '7'\n"
    },
    {
        "number": 2633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n       \n               \n                       -2 (K)\n                       -3\n                       3\n               \n               \n                       -5\n                       -10\n                       1\n               \n               \n                       10\n                       30\n                       -5 (P)\n               \n       \n       \"\"\") == \"7\"\n\nassert solution(\"\"\"\n       \n               \n                       -2 (K)\n                       -3\n                       3\n               \n               \n                       -5\n                       -10\n                       1\n               \n               \n                       10\n                       30\n                       -5 (P)\n               \n       \n       \"\"\") == \"7\"\n\nassert solution(\"\"\"\n       \n               \n                       -2 (K)\n                       -3\n                       3\n               \n               \n                       -5\n                       -10\n                       1\n               \n               \n                       10\n                       30\n                       -5 (P)\n               \n       \n       \"\"\") == \"7\"\n\nassert solution(\"\"\"\n       \n               \n                       -2 (K)\n                       -3\n                       3\n               \n               \n                       -5\n                       -10\n                       1\n               \n               \n                       10\n                       30\n                       -5 (P)\n               \n       \n       \"\"\") == \"7\"\n\nassert solution(\"\"\"\n       \n               \n                       -2 (K)\n                       -3\n                       3\n               \n               \n                       -5\n                       -10\n                       1\n               \n               \n                       10\n                       30\n                       -5 (P)\n               \n       \n       \"\"\") == \"7\""
    },
    {
        "number": 2634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n''') == '''\n[\n  [3],\n\u00a0 [1],\n\u00a0 [2],\n\u00a0 [1,2,3],\n\u00a0 [1,3],\n\u00a0 [2,3],\n\u00a0 [1,2],\n\u00a0 []\n]\n'''\n"
    },
    {
        "number": 2635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n]\n''') == '1,2,3,6,9,8,7,4,5'\nassert solution('''\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\n''') == '1,2,3,4,8,12,11,10,9,5,6,7'\n'''\n"
    },
    {
        "number": 2636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n[2 9 10],\n[3 7 15],\n[5 12 12],\n[15 20 10],\n[19 24 8]\n]\n''') == '[[2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0]]'\nassert solution('''\n[\n[2 9 10],\n[3 7 15],\n[5 12 12],\n[15 20 10],\n[19 24 8]\n]\n''') == '[[2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0]]'\nassert solution('''\n[\n[2 9 10],\n[3 7 15],\n[5 12 12],\n[15 20 10],\n[19 24 8]\n]\n''') == '[[2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0]]'\nassert solution('''\n[\n[2 9 10],\n[3 7 15],\n[5 12 12],\n[15 20 10],\n[19 24 8]\n]\n''') == '[[2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0]]'\nassert solution('''\n[\n[2 9 10],\n[3 7 15],\n[5 12 12],\n[15 20 10],\n[19 24 8]\n]\n''') == '[[2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0]]'\n"
    },
    {
        "number": 2637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n2\n''') == '''\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]\n'''\n"
    },
    {
        "number": 2638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n    [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n''') == '11'\nassert solution('''\n[\n    [-1],\n    [2,3],\n   [-4,5,6],\n  [-7,8,9,10]\n]\n''') == '-1'\nassert solution('''\n[\n    [-1],\n    [-2,3],\n   [-4,5,6],\n  [-7,8,9,10]\n]\n''') == '-1'\nassert solution('''\n[\n    [-1],\n    [-2,3],\n   [-4,5,6],\n  [-7,8,9,10]\n]\n''') == '-1'\nassert solution('''\n[\n    [-1],\n    [-2,3],\n   [-4,5,6],\n  [-7,8,9,10]\n]\n''') == '-1'\n"
    },
    {
        "number": 2639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n2\n''') == '''\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n'''\n"
    },
    {
        "number": 2640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"8\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 2641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 2642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"2\"\nassert solution(\"2 -1\") == \"3\"\n"
    },
    {
        "number": 2643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n3 1 4\n5 3 2\n''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2\n''') == '0'\nassert solution('''3 1\n3 1 4\n5 3 2\n''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2\n''') == '0'\nassert solution('''3 1\n3 1 4\n5 3 2\n''') == '1'\n"
    },
    {
        "number": 2644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 1 5 3') == '4\\n2\\n3\\n1\\n'\nassert solution('5\\n1 2 3 4 5') == '-1'\n"
    },
    {
        "number": 2645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('gpg') == '0'\nassert solution('gpp') == '0'\nassert solution('gpgp') == '0'\nassert solution('gpgp') == '0'\nassert solution('gpgp') == '0'\n"
    },
    {
        "number": 2646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"Yes\\n1\\n2\\n2\\n\"\nassert solution(\"5 5\") == \"Yes\\n1\\n2\\n2\\n2\\n\"\nassert solution(\"10 10\") == \"Yes\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 2647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 2648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 3 7\") == \"3\"\nassert solution(\"5\\n1 2 1 3 7\") == \"3\"\nassert solution(\"5\\n1 2 1 3 7\") == \"3\"\nassert solution(\"5\\n1 2 1 3 7\") == \"3\"\nassert solution(\"5\\n1 2 1 3 7\") == \"3\"\n"
    },
    {
        "number": 2649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 2650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n8 1\\n6 2\\n9 3\\n1 1\\n2 2\\n1 3\\n4 3\\n2 1\\n1 2\\n\") == \"6\\n2\\n6\\n\"\nassert solution(\"6 3\\n8 1\\n6 2\\n9 3\\n1 1\\n2 2\\n1 3\\n4 3\\n2 1\\n1 2\\n\") == \"6\\n2\\n6\\n\"\nassert solution(\"6 3\\n8 1\\n6 2\\n9 3\\n1 1\\n2 2\\n1 3\\n4 3\\n2 1\\n1 2\\n\") == \"6\\n2\\n6\\n\"\nassert solution(\"6 3\\n8 1\\n6 2\\n9 3\\n1 1\\n2 2\\n1 3\\n4 3\\n2 1\\n1 2\\n\") == \"6\\n2\\n6\\n\"\nassert solution(\"6 3\\n8 1\\n6 2\\n9 3\\n1 1\\n2 2\\n1 3\\n4 3\\n2 1\\n1 2\\n\") == \"6\\n2\\n6\\n\"\n"
    },
    {
        "number": 2651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 3 4\n1 3 6\n''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6\n''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6\n''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6\n''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6\n''') == '60'\n"
    },
    {
        "number": 2652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 2653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"100 110 111 110\"\nassert solution(\"5 3\") == \"100 110 111 110 110\"\nassert solution(\"6 3\") == \"100 110 111 110 110 110\"\nassert solution(\"7 3\") == \"100 110 111 110 110 110 110\"\nassert solution(\"8 3\") == \"100 110 111 110 110 110 110 110\"\n"
    },
    {
        "number": 2654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n2 3\") == \"3\"\nassert solution(\"3\\n1 2\\n2 3\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\") == \"2\"\nassert solution(\"6\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 2655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 2 1 3') == '7'\nassert solution('5\\n2 2 1 3 4') == '7'\nassert solution('6\\n2 2 1 3 4 5') == '7'\nassert solution('7\\n2 2 1 3 4 5 6') == '7'\nassert solution('8\\n2 2 1 3 4 5 6 7') == '7'\n"
    },
    {
        "number": 2656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '575111451'\nassert solution('1') == '575111451'\nassert solution('2') == '575111451'\nassert solution('3') == '575111451'\nassert solution('4') == '575111451'\n"
    },
    {
        "number": 2657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n6 9 4 2 11') == '11 6'\nassert solution('5\\n6 9 4 2 11') == '11 6'\nassert solution('5\\n6 9 4 2 11') == '11 6'\nassert solution('5\\n6 9 4 2 11') == '11 6'\nassert solution('5\\n6 9 4 2 11') == '11 6'\n"
    },
    {
        "number": 2658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"3 2 4 1\") == \"4\"\n"
    },
    {
        "number": 2659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1'\nassert solution('100') == '2'\nassert solution('1000') == '3'\nassert solution('10000') == '4'\nassert solution('100000') == '5'\n"
    },
    {
        "number": 2660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4 2\") == \"4 2\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"1 1\"\n"
    },
    {
        "number": 2661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 1'\nassert solution('1') == '1 0'\nassert solution('2') == '1 0'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 2662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 2663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 4') == '18 7 4 4'\nassert solution('23 3') == '219 12 10'\n\n\"\"\""
    },
    {
        "number": 2664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"3 1 2 5\") == \"2\"\nassert solution(\"3 1 2 5\") == \"2\"\nassert solution(\"3 1 2 5\") == \"2\"\nassert solution(\"3 1 2 5\") == \"2\"\n"
    },
    {
        "number": 2665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 2666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 5\n10\n12\n8\n11\n11\n10\n12\n15\n13\n10''') == '9'\nassert solution('''10 6\n10\n12\n8\n11\n11\n10\n12\n15\n13\n10\n\n''') == '10'\n"
    },
    {
        "number": 2667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 2668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"Unlucky Chef\"\nassert solution(\"1 2 6\") == \"Lucky Chef\"\n"
    },
    {
        "number": 2669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n\n10 12 20\n\n20 25 30\n\n20 25 30\n''') == '0 2 3 5'\n\nassert solution('''\n6\n\n1 2 0 6 3 7\n\n2 4 5 7 9 10\n\n2 4 5 7 9 10\n''') == '0 1 3 5'\n\nassert solution('''\n6\n\n1 2 0 6 3 7\n\n2 4 5 7 9 10\n\n2 4 5 7 9 10\n''') == '0 1 3 5'\n\nassert solution('''\n6\n\n1 2 0 6 3 7\n\n2 4 5 7 9 10\n\n2 4 5 7 9 10\n''') == '0 1 3 5'\n\nassert solution('''\n6\n\n1 2 0 6 3 7\n\n2 4 5 7 9 10\n\n2 4 5 7 9 10\n''') == '0 1 3 5'"
    },
    {
        "number": 2670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nabgcd dchbag\\n\") == \"8\"\nassert solution(\"2\\naaa aaa\\n\") == \"6\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"0\""
    },
    {
        "number": 2671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\\n1\") == \"5\"\nassert solution(\"3 3\\n3 3 3\\n2 8 13\\n\") == \"3\"\n"
    },
    {
        "number": 2672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '3'\nassert solution('''\n2\n''') == '14'\nassert solution('''\n3\n''') == '0'\nassert solution('''\n4\n''') == '1'\nassert solution('''\n5\n''') == '2'\n"
    },
    {
        "number": 2673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('01234567890') == '1'\nassert solution('012134444444443') == '4'\n"
    },
    {
        "number": 2674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123') == 'Exclusive'\nassert solution('111') == 'Inclusive'"
    },
    {
        "number": 2675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 2676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\na\naa\naaa\naaaa\n5\naaaaa\n''') == '1'\n\nassert solution('''\n4\na\naa\naaa\naaaa\n5\naaaaa\n''') == '4'\n\nassert solution('''\n4\na\naa\naaa\naaaa\n5\naaaaa\n''') == '0'\n\nassert solution('''\n4\na\naa\naaa\naaaa\n5\naaaaa\n''') == '0'\n\nassert solution('''\n4\na\naa\naaa\naaaa\n5\naaaaa\n''') == '0'"
    },
    {
        "number": 2677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AMBITIOUSNESS') == 'GOOD'\nassert solution('COOEY') == '-1'\n"
    },
    {
        "number": 2678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 2679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9\n\n-1 2 3 4 -3 -5 6 7 1\n''') == '23'\nassert solution('''\n6\n\n-10 -1 -30 -40 -3 -11\n''') == '-4'\n"
    },
    {
        "number": 2680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 2681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"4.0\"\nassert solution(\"5\") == \"8.0\"\nassert solution(\"3\") == \"6.0\"\nassert solution(\"-\") == \"0.0\"\nassert solution(\"+\") == \"2.0\"\n"
    },
    {
        "number": 2682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 4\n3 3\n3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n64 11047805202224836936\n\"\"\") == \"1337369305470044825\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 2683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nXOX\nO.O\nXOX\n3 1\n...\n...\n...\n3 2\n...\n...\n...\n''') == 'YES'\nassert solution('''1\n4 4\nXOX\nOX..\nXO..\nOXOX\n''') == 'YES'\nassert solution('''1\n4 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'NO'\nassert solution('''1\n4 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'NO'\nassert solution('''1\n4 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'NO'\n"
    },
    {
        "number": 2684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '8'\nassert solution('abcbcabbacba') == 'bcabbacb'\n"
    },
    {
        "number": 2685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1001?11?') == '8'\nassert solution('1001?11?') == '8'\nassert solution('1001?11?') == '8'\nassert solution('1001?11?') == '8'\nassert solution('1001?11?') == '8'\n"
    },
    {
        "number": 2686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 3\n2 3\n1 2\n3 5\n4 5 \n1 4\n''') == '3'\nassert solution('''5 3\n1 3\n1 2\n4 5\n1 4\n\n''') == '0'\n"
    },
    {
        "number": 2687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '8'\nassert solution('4') == '16'\nassert solution('5') == '24'\n"
    },
    {
        "number": 2688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n2 4 5 1 7 6 3 8''') == '4\\n1 2 4 1\\n3 5 7 3\\n6 6\\n8 8'\n"
    },
    {
        "number": 2689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3+xy-bb3+yx-') == 'Return'\nassert solution('3+xy-bb3+xy-') == 'Continue'\n"
    },
    {
        "number": 2690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabcaaa') == '4'\nassert solution('aba') == '1'\n"
    },
    {
        "number": 2691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"6\"\n"
    },
    {
        "number": 2692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n3 2\n''') == '2'\nassert solution('''1\n11 2\n''') == '6'\n"
    },
    {
        "number": 2693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 48 3\") == \"3 4 4\"\nassert solution(\"11 100 3\") == \"NO\"\n"
    },
    {
        "number": 2694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"YES\"\nassert solution(\"5 5 2\") == \"YES\"\nassert solution(\"5 1 1 2\") == \"YES\"\nassert solution(\"5 1 1 2\") == \"YES\"\nassert solution(\"5 1 1 2\") == \"YES\"\n"
    },
    {
        "number": 2695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xxyxxy') == '_xyxxy'\nassert solution('jphokenixr') == '_jph_k_e_n_i_x_r'\nassert solution('joker') == '_j_o_r_k_e_r'"
    },
    {
        "number": 2696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('4') == '3'\nassert solution('4') == '3'\nassert solution('4') == '3'\nassert solution('4') == '3'\n"
    },
    {
        "number": 2697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n''') == '4'\nassert solution('''\n20\n''') == '8'\n"
    },
    {
        "number": 2698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 6\n2 5\n''') == '11'\nassert solution('''3 3\n1 4\n6 2\n5 3\n''') == '9'\n"
    },
    {
        "number": 2699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 4 10 22'\nassert solution('2') == '2 5 11 23'\nassert solution('3') == '4 10 22 46'\nassert solution('4') == '3 6 12 24'\n"
    },
    {
        "number": 2700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '3'\nassert solution('2 3 3 4') == '3'\nassert solution('2 999999 1 1000000') == '499998500001'\n"
    },
    {
        "number": 2701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n2 4 3 2 1') == '2'\nassert solution('5 5\\n2 4 9 2 5') == '-1'\n"
    },
    {
        "number": 2702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nT T T\nT T T\nF F T\nF F T\nF F T\n''') == '1'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '1'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '2'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '1'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '1'\n"
    },
    {
        "number": 2703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n4 6 5 8 7\n1\n2\n6\n13''') == '77'\nassert solution('''6 3 \n20 10 12 3 30 5 \n2\n6\n13\n''') == '62'\nassert solution('''6 3 \n20 10 12 3 30 5 \n2\n6\n13\n''') == '30'\n"
    },
    {
        "number": 2704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1\n1\n2\n3\n4\n''') == 'Yes'\nassert solution('''\n2 4\n1 3\n1\n2\n3\n4\n''') == 'Yes'\nassert solution('''\n1 2\n1\n1\n2\n3\n4\n''') == 'Yes'\nassert solution('''\n1 2\n1\n1\n2\n3\n4\n''') == 'Yes'\nassert solution('''\n1 2\n1\n1\n2\n3\n4\n''') == 'Yes'\n"
    },
    {
        "number": 2705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3 4\n8 2 3 7 8 1 1''') == '5'\nassert solution('''8 3 5\n7 2 1 3 6 5 6 2''') == '5'\n"
    },
    {
        "number": 2706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n2\\n3\\n2\\n-1\\n-1\\n1\\n-1\\n') == '3'\nassert solution('10\\n5\\n3\\n6\\n1\\n4\\n2\\n9\\n3\\n1\\n0\\n-1\\n') == '3'\n"
    },
    {
        "number": 2707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('10 3') == '379'\n"
    },
    {
        "number": 2708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 2709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 1\n1 2 3 4 5 6 7\n''') == '7'\nassert solution('''7 2\n1 2 3 4 5 6 7\n''') == 'Smaller'\nassert solution('''7 3\n1 2 3 4 5 6 7\n''') == '2'\nassert solution('''7 4\n1 2 3 4 5 6 7\n''') == '28'\nassert solution('''7 5\n1 2 3 4 5 6 7\n''') == '12'\n"
    },
    {
        "number": 2710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"2 0\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"3 5 3 1\") == \"YES\"\n"
    },
    {
        "number": 2711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb\n''') == \"acb\"\nassert solution('''\n3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb\n''') == \"IMPOSSIBLE\"\nassert solution('''\n3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb\n''') == \"acb\"\nassert solution('''\n3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb\n''') == \"acb\"\nassert solution('''\n3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb\n''') == \"acb\"\n"
    },
    {
        "number": 2712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n12 34 56\n''') == '4'\nassert solution('''\n1 2 3\n12 34 56\n''') == '42'\nassert solution('''\n1 2 3\n12 34 56\n''') == '4'\nassert solution('''\n1 2 3\n12 34 56\n''') == '42'\nassert solution('''\n1 2 3\n12 34 56\n''') == '4'\n"
    },
    {
        "number": 2713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WW') == '25'\nassert solution('WWW') == '24'\nassert solution('WWWW') == '23'\nassert solution('WLWLWLWL') == '24'\nassert solution('WWWWWWWWWLLWW') == '19'\n"
    },
    {
        "number": 2714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 2\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4'\nassert solution('''\n2 1\n1 2\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '0'\n"
    },
    {
        "number": 2715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '4'\nassert solution('1') == '3 3 3 3'\nassert solution('2') == '3 3 3 3'\nassert solution('3') == '3 3 3 3'\nassert solution('4') == '3 3 3 3'\n"
    },
    {
        "number": 2716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 1\n1 7770 3 4 5 6 7\n''') == 'Yes'\nassert solution('''\n7 2\n1 2 3 4 5 6 7\n''') == 'Unique'\nassert solution('''\n7 3\n1 1 1 1 2 2 2\n''') == '1'\nassert solution('''\n8 4\n8 1 4 3 6 7 5 2\n''') == '4 5'\n"
    },
    {
        "number": 2717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nABABC\n''') == '2'\nassert solution('''12\nABCABCABCABC\n''') == '6'\nassert solution('''4\nACBA\n''') == '0'\nassert solution('''6\nBABABA\n''') == '2'\n"
    },
    {
        "number": 2718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'lose'\nassert solution('3 3') == 'win'\nassert solution('5 2') == 'win'\nassert solution('5 3') == 'win'\n"
    },
    {
        "number": 2719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n12 12 8 10 5 11\\n12 12 8 4 14 21\\n12 12 8 12 20 8\\n4 14 21 10 5 21') == 'No true closed chains\\nFloor closed chains'\nassert solution('4\\n1 1 1 2 2 2\\n2 2 2 1 5 5\\n9 4 4 9 4 2\\n9 4 4 9 9 4') == 'No true closed chains\\nNo floor closed chains'\n"
    },
    {
        "number": 2720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n/\\\n\\/\n''') == '1'\nassert solution('''4 4\n/\\..\n\\.\\.\n.\\/\\\n..\\/\n''') == '2'\nassert solution('''2 2\n\\/\n/\\\n''') == '0'\n"
    },
    {
        "number": 2721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''-1 1\n-2 2\n6 6\n''') == 'possible'\nassert solution('''-1 1\n1 -1\n3 5\n''') == 'impossible'\n"
    },
    {
        "number": 2722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"........\\n........\\n........\\n...CC...\\n..C.DC..\\n.C..C...\\nC.IC....\\nT.C.....\\n\") == \"FLFRXFLFRFLFRF\"\nassert solution(\"........\\n........\\n........\\n...CCD..\\n..C..C..\\n.C..I...\\nC.IC....\\nT.C.....\\n\") == \"FLFRXFLXFRFLXFRF\"\nassert solution(\"........\\n........\\n........\\n...CCD..\\n..C..C..\\n.C..I...\\nC.IC....\\nT.C.....\\n\") == \"FLFRXFLFRFXFFFLFFLF\"\nassert solution(\"........\\n........\\n........\\n...CCD..\\n..C..C..\\n.C..I...\\nC.IC....\\nT.C.....\\n\") == \"FLFRXFLFRXFFFLFFLF\"\nassert solution(\"........\\n........\\n........\\n...CCD..\\n..C..C..\\n.C..I...\\nC.IC....\\nT.C.....\\n\") == \"FLFRXFLFRXFFFLFFLF\"\n"
    },
    {
        "number": 2723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 13\\n1 + 2 * 3 - 4') == '3'\nassert solution('2 16\\n
    },
    {
        "number": 2724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('3') == '5'\n"
    },
    {
        "number": 2725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('2') == 'impossible'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 2726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n0 1\n''') == '0.500000'\nassert solution('''\n4 2\n0 4 8 6\n''') == '5.500000'\nassert solution('''\n15 7\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '11.266667'\n"
    },
    {
        "number": 2727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '0'\nassert solution('5 1') == '24'\nassert solution('5 1') == '8'\n"
    },
    {
        "number": 2728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 3 3\n''') == '1 2'\nassert solution('''\n3\n9 10 11\n''') == '3 6'\nassert solution('''\n9\n1 2 3 1 2 3 1 2 3\n''') == '3 6'\n"
    },
    {
        "number": 2729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('92746237') == '927.46237'\nassert solution('100000') == '1000'\nassert solution('1234500') == '123.45'\n"
    },
    {
        "number": 2730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '0.416667'\nassert solution('6 5') == '0.833333'\nassert solution('137 42') == '0.029351'\n"
    },
    {
        "number": 2731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''{abc,ono,sto}''') == '{abc,ono,sto}'\nassert solution('''{}''') == '{}'\nassert solution('''{znakovi}''') == '{znakovi}'\n"
    },
    {
        "number": 2732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '1'\nassert solution('6.283185') == '1.5228490019'\nassert solution('42') == '1.5228490019'\n"
    },
    {
        "number": 2733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 1.0'\nassert solution('2') == '1 1.0'\nassert solution('4') == '2 0.0'\n"
    },
    {
        "number": 2734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('12 2') == '17'\nassert solution('1 5') == '31'\n"
    },
    {
        "number": 2735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ABCDEFCD\nBCEDEFCD\nBCEDEFCD''') == '2'\nassert solution('''DCDAFCBA\nECEABCCC\nDCDAFCBA''') == '4'\nassert solution('''ABCDEFCD\nABCDEFCD\nABCDEFCD''') == '0'\nassert solution('''DCDAFCBA\nECEABCCC\nDCDAFCBA''') == '4'\nassert solution('''ABCDEFCD\nABCDEFCD\nABCDEFCD''') == '0'\n"
    },
    {
        "number": 2736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 0 4 3\n0 2 2 3\n2 1 4 3\n''') == '4'\nassert solution('''\n7 2\n0 4 1 4 2 4 3\n0 4 1 4 2 4 3\nSample Output 2:\n8\n''') == '8'\nassert solution('''\n5 3\n1 1 1 1 1\n3 3 3 3 3\n5 5 5 5 5\nSample Output 3:\n5\n''') == '5'\n"
    },
    {
        "number": 2737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1\n3 2\n1 2 4\n1 6\n''') == '4'\nassert solution('''\n4 5 2\n2 0 0 2\n1 2 6\n1 3 2\n2 3 3\n3 4 4\n4 2 6\n3 2\n2 2\n''') == '5'\nassert solution('''\n7 8 3\n0 1 1 1 1 0 2\n1 2 1\n2 3 1\n3 1 1\n4 6 5\n4 3 1\n6 7 10\n7 5 3\n5 6 3\n6 5\n1 1\n2 1\n''') == '6'\n"
    },
    {
        "number": 2738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0 100\n0 300 200\n''') == '2 -1'\nassert solution('''\n2\n0 0 100\n0 300 100\n''') == '0'\nassert solution('''\n16\n10 10 5\n20 10 5\n30 10 5\n40 10 5\n10 20 5\n20 20 5\n30 20 5\n40 20 5\n10 30 5\n20 30 5\n30 30 5\n40 30 5\n10 40 5\n20 40 5\n30 40 5\n40 40 5\n''') == '1 1'\n"
    },
    {
        "number": 2739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 2740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25 5 5') == '7770'\nassert solution('15 5 5') == '6050'\nassert solution('10 10 1') == '1022'\n"
    },
    {
        "number": 2741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4444_8') == '924'\nassert solution('20') == '10'\nassert solution('3211') == '689'\n"
    },
    {
        "number": 2742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('83') == '6'\nassert solution('13') == '4'\nassert solution('0') == '0'\n"
    },
    {
        "number": 2743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n/-\\\n|.|\n"
    },
    {
        "number": 2744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 2 4\n2 3 7\n6 20 1 25\n''') == '6 14 1 25'\nassert solution('''\n3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\n''') == '12 10 12'\n"
    },
    {
        "number": 2745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"barfoothefoobarman\", [\"foo\", \"bar\"]) == [0, 9]\nassert solution(\"wordgoodstudentgoodword\", [\"word\", \"student\"]) == []\nassert solution(\"barfoofoobarthefoobarman\", [\"foo\", \"bar\"]) == [0, 9]\nassert solution(\"wordgoodstudentgoodword\", [\"word\", \"student\"]) == []\nassert solution(\"barfoofoobarthefoobarman\", [\"foo\", \"bar\"]) == [0, 9]\n"
    },
    {
        "number": 2746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0.1\") == -1\nassert solution(\"1.1\") == 1\nassert solution(\"1\") == 1\nassert solution(\"7.5.2.4\") == -1\nassert solution(\"7.5.3\") == 1\n"
    },
    {
        "number": 2747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n7\n7\n8\n8\n10\n''') == '3 4'\nassert solution('''\n5\n7\n7\n8\n8\n10\n''') == '-1 -1'\nassert solution('''\n5\n7\n7\n8\n8\n10\n''') == '-1 -1'\nassert solution('''\n5\n7\n7\n8\n8\n10\n''') == '-1 -1'\nassert solution('''\n5\n7\n7\n8\n8\n10\n''') == '-1 -1'\n"
    },
    {
        "number": 2748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"23\") == [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"]\nassert solution(\"12\") == [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\"]\nassert solution(\"21\") == [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\"]\nassert solution(\"10\") == [\"a\", \"b\", \"c\"]\nassert solution(\"11\") == [\"a\", \"b\", \"c\"]\n"
    },
    {
        "number": 2749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n3\n2 1 1\n''') == '1 1'\nassert solution('''\n2 2\n3\n2 1 1\n''') == '2 3'\nassert solution('''\n2 2\n3\n2 1 1\n''') == '1 2'\nassert solution('''\n2 2\n3\n2 1 1\n''') == '2 3'\nassert solution('''\n2 2\n3\n2 1 1\n''') == '1 2'\n"
    },
    {
        "number": 2750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n1 2 3 4 5\n''') == '2'\nassert solution('''\n6 3\n1 2 4 5 6 3\n''') == '1'\n"
    },
    {
        "number": 2751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 1'\nassert solution('3') == '2 1'\nassert solution('3') == '2 1'\nassert solution('3') == '2 1'\nassert solution('3') == '2 1'\n"
    },
    {
        "number": 2752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 2\nSSR\n''') == '3'\nassert solution('''\n2 3\n3 2\n3 1\nSRS\nSRR\n''') == '4'\n"
    },
    {
        "number": 2753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''02:20\n13:00\n05:50\n01:00''') == 'Saturday'\nassert solution('''02:20\n23:28\n00:40\n23:50''') == 'Never'\n"
    },
    {
        "number": 2754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('80 85 98') == '1 3'\nassert solution('98 98 100') == '0 inf'\n"
    },
    {
        "number": 2755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '3'\nassert solution('2 1') == 'impossible'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 2756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 1') == '119'\nassert solution('20 20 3') == 'you're toast'\nassert solution('5 5 2') == 'you are not the boss'\nassert solution('5 5 3') == 'you are not the boss'\nassert solution('5 5 4') == 'you are not the boss'\n"
    },
    {
        "number": 2757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 0 1') == '5'\nassert solution('0 0 0 0') == '1'\n"
    },
    {
        "number": 2758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Red\\nRed') == 'Red 0.937500000'\nassert solution('Lilac-Cream Tortie\\nBlue') == 'Blue 0.375000000'\nassert solution('Lilac-Cream Tortie\\nBlue-Cream Tortie') == 'Blue-Cream Tortie 0.187500000'\nassert solution('Lilac-Cream Tortie\\nBlue-Cream Tortie') == 'Blue-Cream Tortie 0.062500000'\nassert solution('Lilac-Cream Tortie\\nBlue-Cream Tortie') == 'Blue-Cream Tortie 0.062500000'\n"
    },
    {
        "number": 2759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5\n''') == '10'\nassert solution('''5\n2 3\n3 2\n3 3\n3 4\n4 3\n''') == '8'\n"
    },
    {
        "number": 2760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 2761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3.4142135624'\nassert solution('2') == 'no triangle'\nassert solution('1') == 'no triangle'\n"
    },
    {
        "number": 2762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 1') == '6'\nassert solution('5 1 2') == '10'\n"
    },
    {
        "number": 2763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nXX.X\nX.X.\nXXXX\n.XXX\nnoeesrksdmnyemoj\n''') =='sendmoremonkeysj'\nassert solution('''4\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop\n''') == 'invalid grille'\nassert solution('''5\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop\n''') == 'invalid grille'\nassert solution('''5\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop\n''') == 'invalid grille'\nassert solution('''5\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop\n''') == 'invalid grille'\n"
    },
    {
        "number": 2764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n........\n........\n........\n...CC...\n..C.DC..\n.C..C...\nC.IC....\nT.C.....\nFLFRXFLFRFLFRF\n\"\"\") == \"Diamond!\"\nassert solution(\"\"\"\n........\n........\n........\n...CC...\n..C.DC..\n.C..C...\nC.IC....\nT.C.....\nFLFRXFLFRFLFRF\n\"\"\") == \"Bug!\"\n"
    },
    {
        "number": 2765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 4 8') == 'canonical'\nassert solution('1 5 8') == 'non-canonical'\n"
    },
    {
        "number": 2766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 0.5') == '0.185185185'\nassert solution('2 2 0.8') == '0.056241426'\n"
    },
    {
        "number": 2767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '2'\nassert solution('3') == '0'\n"
    },
    {
        "number": 2768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 2769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5 10') == '2'\nassert solution('4 4 4 15') == '13'\nassert solution('3 3 3 15') == '-1'\nassert solution('4 4 4 15') == '13'\nassert solution('3 4 4 15') == '-1'\n"
    },
    {
        "number": 2770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5 7 9\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"1 10000\") == \"1\"\nassert solution(\"1375 1\") == \"36713\"\n"
    },
    {
        "number": 2771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '5'\n"
    },
    {
        "number": 2772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '5.238095'\nassert solution('3 1') == '4.200000'\n"
    },
    {
        "number": 2773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n0 2 5\n2 1 5\n0 3 10\n3 1 20\n3 2 5\n''') == '3 0 3 1'\nassert solution('''\n4 3\n0 1 10\n1 2 20\n2 3 30\n''') == 'impossible'\nassert solution('''\n4 5\n0 2 5\n2 1 5\n0 3 10\n3 1 20\n3 2 5\n''') == '3 0 3 1'\nassert solution('''\n4 3\n0 1 10\n1 2 20\n2 3 30\n''') == 'impossible'\nassert solution('''\n4 5\n0 2 5\n2 1 5\n0 3 10\n3 1 20\n3 2 5\n''') == '3 0 3 1'\n"
    },
    {
        "number": 2774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n1\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\n"
    },
    {
        "number": 2775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 6 6\n5 4\n2 6\n3 1\n''') == '2'\nassert solution('''\n5\n2 1 0 0\n0 0\n0 1\n2 0\n2 1\n3 1\n''') == '3'\n"
    },
    {
        "number": 2776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '5'\nassert solution('3 0') == '8'\n"
    },
    {
        "number": 2777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6\n1\n1\n2\n2\n3\n4\n5\n6\n''') == '4'\nassert solution('''\n2 3\n1\n2\n1\n3\n''') == '0'\n"
    },
    {
        "number": 2778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 6') == '5'\nassert solution('5 5 25') == '1'\n"
    },
    {
        "number": 2779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 1\naaaaa\na...a\na.B.a\na...a\naaaaa\n1\n''') == '12'\nassert solution('''\n2 2 1\naB\naa\n1\n''') == '-1'\n"
    },
    {
        "number": 2780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0.46410'\nassert solution('7 1') == '1.00000'\n"
    },
    {
        "number": 2781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 1 0 8\n3 7 3 5\n3 1 2 4\n9 0 4 6\n5 3 2 3''') == '3'\nassert solution('''5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 2782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '2'\nassert solution('3 3 1') == '3'\nassert solution('3 3 2') == '3'\nassert solution('3 3 3') == '3'\nassert solution('3 3 4') == '3'\n"
    },
    {
        "number": 2783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('8 2') == '1'\nassert solution('4 0') == '1'\nassert solution('8 0') == '1'\n"
    },
    {
        "number": 2784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Uptown Midtown Downtown'\nassert solution('6') == 'F E D B A'\n"
    },
    {
        "number": 2785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2'\nassert solution('4 10') == '1'\nassert solution('10 15') == '2'\nassert solution('10 100') == '6'\nassert solution('4 17') == '3'\n"
    },
    {
        "number": 2786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 2787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\nARN SCR\nARN 59.6467921 17.9370443\nSCR 61.156603 12.837360\nCPH 55.618023 12.650763\nOSL 60.197646 11.100008\nARN OSL\nARN CPH\nSCR OSL\nOSL CPH''') == '729.09706162045'\nassert solution('''2 1\nLAX AKL\nAKL -37.006131 174.783781\nLAX 33.941589 -118.408531\nLAX AKL\n''') == '10603.3297338597'\n"
    },
    {
        "number": 2788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n5 7 10 15 3 2 8\n20 3 30 40\n''') == '39'\nassert solution('''\n7\n5 7 10 15 3 2 8\n20 3 30 40\n''') == '36'\nassert solution('''\n7\n5 7 10 15 3 2 8\n20 3 30 40\n''') == 'impossible'\nassert solution('''\n7\n5 7 10 15 3 2 8\n20 3 30 40\n''') == 'impossible'\nassert solution('''\n7\n5 7 10 15 3 2 8\n20 3 30 40\n''') == 'impossible'\n"
    },
    {
        "number": 2789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 2790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 10 10000000') == '70000001'\nassert solution('10 10 3') == '39'\n"
    },
    {
        "number": 2791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n4 5 6 7 8''') == '6'\nassert solution('''5 1\n4 5 6 7 8''') == '0'\n"
    },
    {
        "number": 2792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '0 1 2 1'\n"
    },
    {
        "number": 2793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '2'\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '1'\n"
    },
    {
        "number": 2794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2\n2 3\n3 4\n4 5\n''') == '7'\nassert solution('''\n3 2\n1 1000\n1000 1\n''') == '1002'\n"
    },
    {
        "number": 2795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 0\n0.0 0.0\n2.0 0.0\n1.0 2.0\n''') == '4.236067'\nassert solution('''\n3 1 1\n0.0 0.0\n0.5 2.0\n2.5 2.0\n1 2\n''') == '2.000000'\n"
    },
    {
        "number": 2796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '0'\n"
    },
    {
        "number": 2797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 7') == '0'\n"
    },
    {
        "number": 2798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RUBEN\\n1\\n4 1 7\\n2 2 2') == 'RUBEN'\nassert solution('ALBERT\\n2\\n4 4 4\\n2 2 2') == 'ALBERT'\n"
    },
    {
        "number": 2799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 0 0 3') == '0.920138888889'\nassert solution('4 4 4 4 5') == '0.631357306601'\n"
    },
    {
        "number": 2800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n4 1 1 1 1\n6 2 1 2 1 2 1\n4 1 1 1 1\n6 2 1 2 1 2 1\n''') == 'Bob will win.'\nassert solution('''\n2 1\n1 1\n3 1 2 1\n''') == 'Alice can win.'\n"
    },
    {
        "number": 2801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 4 6 2 100\\n0 1\\n1 2\\n0 3\\n2 4\\n3 4\\n') == '100'\nassert solution('3 2\\n1 0 1\\n0 1\\n1 2\\n') == '1.5'\n"
    },
    {
        "number": 2802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6.38 7.20 6.95 8.11\\n7.53') == 'infinite'\nassert solution('6.38 7.20 6.95 8.11\\n6.99') == '6.82'\nassert solution('6.38 7.20 6.95 8.11\\n7.53\\n6.99') == 'infinite'\nassert solution('6.38 7.20 6.95 8.11\\n7.53\\n6.99\\n6.99') == 'infinite'\nassert solution('6.38 7.20 6.95 8.11\\n7.53\\n6.99\\n6.99\\n6.99') == 'infinite'\n"
    },
    {
        "number": 2803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pig') == 'pig'\nassert solution('dog') == 'dog'\nassert solution('snake') == '?'\nassert solution('emu') == '?'\nassert solution('goat') == 'goat'\n"
    },
    {
        "number": 2804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 7') == 'dobar je ovaj marko marulic'\nassert solution('26 30') == 'nama je profesor reko da to ne treba za lektiru al onda je bila buka i nisam ga cuo pa jel bi mi mogli dat bodove'\n"
    },
    {
        "number": 2805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '5'\n"
    },
    {
        "number": 2806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3 0'\nassert solution('4 3') == '2 1 3 4'\n"
    },
    {
        "number": 2807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abba') == 1\nassert solution('aabb') == 1\nassert solution('caxcab') == 2\nassert solution('cacxab') == 2\n"
    },
    {
        "number": 2808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 3\n1 2 3 4\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n5 4 6\n1 2 3 4 5\n1 4\n2 3\n3 5\n4 5\n''') == '5'\n"
    },
    {
        "number": 2809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n100\n''') == '1'\nassert solution('''\n4 3\n10\n''') == '1978'\n"
    },
    {
        "number": 2810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('8') == '3'\n"
    },
    {
        "number": 2811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '5'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 2812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('19') == 'at'\n"
    },
    {
        "number": 2813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20\\nva\\nfi\\nve\\nmor\\nlining\\nspe\\nin\\ni\\nsh\\nti\\nhard\\ncov\\near\\nfe\\nred\\nja\\nry\\nneed\\nly\\nning\\nspelling\\nvery\\nhard\\nearly\\nin\\nmorning\\ntired\\ni\\nneed\\ncompare\\nthe\\ntemplate\\nundecidable') == 'haiku'\nassert solution('22\\nq\\nc\\nda\\nplus\\nto\\nthe\\ne\\nthee\\nun\\nlate\\nci\\na\\nshall\\nby\\ncom\\ni\\nru\\npare\\ntemp\\nble\\nhi\\nde\\nshall\\ni\\ncompare\\nthe\\ntemplate\\nundecidable') == 'haiku'\n"
    },
    {
        "number": 2814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 2815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\n"
    },
    {
        "number": 2816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n+...\n....\n....\nV..J\n''') == '3'\nassert solution('''4 5\n.....\n.+++.\n.+.+.\nV+.J+\n''') == '0'\nassert solution('''4 5\n.....\n.+++.\n.+.+.\nV..J\n''') == '1'\nassert solution('''4 5\n.....\n.+++.\n.+.+.\nV..J\n''') == '2'\nassert solution('''4 5\n.....\n.+++.\n.+.+.\nV..J\n''') == '3'\n"
    },
    {
        "number": 2817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3') == '112.5'\nassert solution('12 3 3') == '13.333333333333334'\n"
    },
    {
        "number": 2818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '5'\nassert solution('5') == '5'\nassert solution('5') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 2819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2\\n1 0\\n0 -1') == 'Bob wins'\nassert solution('3 2\\n1 3\\n-2 1\\n1 1\\n1 0') == 'tie 3 1'\n"
    },
    {
        "number": 2820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n1\n1 1\n2 2 3\n2 2 3\n''') == '10'\nassert solution('''\n3\n5 5 5\n2\n2 1 2\n2 2 3\n2 2 3\n''') == '10'\nassert solution('''\n4\n5 5 5\n2\n2 1 2\n2 2 3\n2 2 3\n''') == '10'\nassert solution('''\n5\n5 5 5\n2\n2 1 2\n2 2 3\n2 2 3\n''') == '10'\nassert solution('''\n6\n5 5 5\n2\n2 1 2\n2 2 3\n2 2 3\n2 2 3\n''') == '10'\n"
    },
    {
        "number": 2821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 3 6') == '4'\nassert solution('3 4 3 5') == '6'\n"
    },
    {
        "number": 2822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 6\n1 1 5 4\n''') == 'Yes'\nassert solution('''\n2 6\n3 5 5 7\n''') == 'No'\n"
    },
    {
        "number": 2823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('GTA') == '10'\nassert solution('TATA') == '3'\n"
    },
    {
        "number": 2824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3\\n6\\n1\\n2') == '4'\nassert solution('4\\n11\\n8\\n3\\n10') == '10'\n"
    },
    {
        "number": 2825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 15 5') == '15'\nassert solution('4 1 2 7 10') == '17'\n"
    },
    {
        "number": 2826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 9\n01201\n21210\n''') == '24'\nassert solution('''\n4 6 5\n123031\n231222\n''') == '0'\n"
    },
    {
        "number": 2827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 2828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nab\\nbc\\n') == 'DA'\nassert solution('3\\nabc\\nbcd\\nadd\\n1 2 3\\n') == 'NE'\n"
    },
    {
        "number": 2829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ICPC') == '17'\nassert solution('A') == '1'\n"
    },
    {
        "number": 2830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n11\n11\n''') == '2'\nassert solution('''\n2 2\n22\n22\n''') == '-1'\n"
    },
    {
        "number": 2831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 2832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n50 20000\n150 10000\n''') == '66670000'\nassert solution('''\n2 2\n50 20000\n150 10000\n''') == '0'\n"
    },
    {
        "number": 2833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\ndamir\nmarko\ndarko\n45\n''') == 'dmd\\naaa\\nrrm\\nkki\\noor\\n'\nassert solution('''3 5\ndamir\nmarko\ndarko\n90\n''') == 'dmd\\naaa\\nrrm\\nkki\\noor\\n'\n"
    },
    {
        "number": 2834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '7'\n"
    },
    {
        "number": 2835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abcdefghijklmnopqrstuvwxyz\na\nSample Output 1:\n26\n\nSample Input 2:\nabcdefghijklmnopqrstuvwxyz\nm\nSample Output 2:\n182\n''') == '26'\n"
    },
    {
        "number": 2836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '49'\nassert solution('2') == '11'\nassert solution('3') == '11'\nassert solution('2') == '11'\nassert solution('3') == '11'\n"
    },
    {
        "number": 2837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '11.00000'\nassert solution('3') == '11.00000'\nassert solution('3') == '11.00000'\n"
    },
    {
        "number": 2838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(0/(0))''') == '(0/0)'\nassert solution('''(2+(2*2)+2)''') == '(2+2*2+2)'\nassert solution('''(2+2*2+2)''') == '(2+2*2+2)'\nassert solution('''(2+2*2+2)''') == '(2+2*2+2)'\nassert solution('''(2+2*2+2)''') == '(2+2*2+2)'\n"
    },
    {
        "number": 2839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 10\n0 1 26\n1 3 29\n1 5 9\n2 3 25\n2 4 43\n4 2 3\n5 0 13\n5 2 33\n5 3 18\n5 4 58\n5 1\n''') == '1'\nassert solution('''\n7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\n''') == '4'\n"
    },
    {
        "number": 2840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2h Th 8c Qh\n''') == '1'\nassert solution('''\n7\n9d As 2s Qd 2c Jd 8h\n''') == '2'\n"
    },
    {
        "number": 2841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '1'\nassert solution('''\n12\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '2'\n"
    },
    {
        "number": 2842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n....\n.OX.\n....\nO..X\n3\n2\n1\n''') == '132'\nassert solution('''\n4 4\n.X.X\n.XX.\n...X\n....\n1\n2\n3\n4\n''') == '6'\n"
    },
    {
        "number": 2843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('11') == '8'\n"
    },
    {
        "number": 2844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nD.*\n...\n.S.\n''') == '3'\nassert solution('''\n3 3\nD.*\n...\n..S\n''') == 'KAKTUS'\nassert solution('''\n3 3\nD.*\n...\n.S.\n''') == 'KAKTUS'\nassert solution('''\n3 3\nD.*\n...\n.S.\n''') == 'KAKTUS'\nassert solution('''\n3 3\nD.*\n...\n.S.\n''') == 'KAKTUS'\n"
    },
    {
        "number": 2845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n7\n''') == '6'\nassert solution('''\n3 6\n5 6 7 11 15 18\n''') == '24'\n"
    },
    {
        "number": 2846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 2847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 8\n4 5 2 1 6 8 3 7\n5 2 4 8 6 1 3 7\n2 5 4 8 1 6 3 7\n''') == '3\\n2 4 5\\n'\nassert solution('''\n2 8\n6 2 8 7 1 3 4 5\n2 8 7 1 3 4 5 6\n''') == '8\\n1 2 3 4 5 6 7 8\\n'''\n"
    },
    {
        "number": 2848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 6 1 2 1 8') == 'OVERFLOW'\nassert solution('10 6 1 4 1 8') == '79732'\n"
    },
    {
        "number": 2849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('4') == '227'\n"
    },
    {
        "number": 2850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '16'\nassert solution('7 4') == '9'\n"
    },
    {
        "number": 2851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 5\\n2\\n4 5\\n1\\n1') == '1'\nassert solution('4\\n6 2 3 4\\n1\\n1') == '1'\n"
    },
    {
        "number": 2852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2.220889579'\nassert solution('6') == '2.599738456'\n"
    },
    {
        "number": 2853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 4\n1 2\n2 3\n3 4\n5 6\n''') == '5 6'\nassert solution('''\n2 1\n2 1\n''') == 'Connected'\n"
    },
    {
        "number": 2854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n0 0\n-1 -1\n2 0\n1 2\n2 3\n''') == '0 0\\n1 0\\n2 0\\n'\nassert solution('''\n5 4\n0 0\n-1 -1\n-1 -1\n-1 -1\n4 0\n1 2\n2 3\n3 4\n4 5\n''') == '0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n'\n"
    },
    {
        "number": 2855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 1\n1 2\n0 2\n''') == '2.000000'\nassert solution('''\n5 6\n0 1\n0 2\n1 2\n2 4\n0 3\n3 4\n''') == '6.727273'\n"
    },
    {
        "number": 2856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\nABBA\n''') == '2'\nassert solution('''5\nBBABB\n''') == '2'\n"
    },
    {
        "number": 2857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '4'\n"
    },
    {
        "number": 2858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 2859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0\\n50 45\\n91 50\\n42 50 10') == '1'\nassert solution('0 0\\n50 50\\n141 50\\n41 50 10') == '3'\nassert solution('0 0\\n50 50\\n91 50\\n41 50 10') == '1'\nassert solution('0 0\\n50 50\\n91 50\\n41 50 10') == '3'\nassert solution('0 0\\n50 50\\n91 50\\n41 50 10') == '1'\n"
    },
    {
        "number": 2860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 24 24\nIN.HONOR.OF.THE.INTERNAT\nTEPMOC.GNIMMARGORP.LANOI\nITION''') == '3'\nassert solution('''3 24 20\nIN.HONOR.OF.THE.INTERNAT\nTEPMOC.GNIMMARGORP.LANOI\nITION''') == '4'\n"
    },
    {
        "number": 2861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nABC\\nABEF\\nDEF\\nABCDE\\nFGH') == '2'\nassert solution('6\\nBDE\\nFGH\\nDEF\\nABC\\nBDE\\nABEF') == '3'\n"
    },
    {
        "number": 2862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n0 0 0 0 3\n0 1 3\n1 4 1\n2 4 1\n3 4 2\n''') == '9 3 3 6 3'\nassert solution('''6 5\n0 0 0 0 0 3\n0 3 3\n1 4 3\n2 5 1\n3 5 1\n4 5 1\n''') == '9 9 3 3 3 3'\n"
    },
    {
        "number": 2863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 40\\n2 37 42') == '3'\nassert solution('1 1\\n3 1 3 2') == '2'\n"
    },
    {
        "number": 2864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nB I P C F\nA G M - - -\n''') == 'AGM'\nassert solution('''\n2\nA B C D H\nF G M M\nF H M - *\n''') == 'E??'\nassert solution('''\n1\nA B C D H\nF G M - - -\n''') == 'E??'\nassert solution('''\n1\nA B C D H\nF G M - - -\n''') == 'E??'\nassert solution('''\n1\nA B C D H\nF G M - - -\n''') == 'E??'\n"
    },
    {
        "number": 2865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 5') == 'bumper tap at time 6'\nassert solution('10 0') == 'bumper tap at time 8'\nassert solution('0 0') =='safe and sound'\n"
    },
    {
        "number": 2866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7129045863') == '11'\nassert solution('55') == '1'\n"
    },
    {
        "number": 2867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '51'\nassert solution('100') == '2207'\n"
    },
    {
        "number": 2868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'abcdef'\nassert solution('1000') == 'aaaaaa'\n"
    },
    {
        "number": 2869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('I') == 'I'\nassert solution('II') == 'II'\nassert solution('III') == 'III'\nassert solution('IV') == 'IV'\nassert solution('V') == 'V'\n"
    },
    {
        "number": 2870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 2871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n9 12 5 13\n''') == '1'\nassert solution('''\n6 2\n16 2 1 7 5 10\n''') == '1'\nassert solution('''\n4 1\n9 12 5 13\n''') == '1'\nassert solution('''\n6 2\n16 2 1 7 5 10\n''') == '1'\nassert solution('''\n4 1\n9 12 5 13\n''') == '1'\n"
    },
    {
        "number": 2872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 OCT') == ':(', '10 OCT'\nassert solution('2 JAN') == 'TGIF', '2 JAN'\nassert solution('2 JAN') == 'TGIF', '2 JAN'\nassert solution('2 JAN') == 'TGIF', '2 JAN'\nassert solution('2 JAN') == 'TGIF', '2 JAN'\n"
    },
    {
        "number": 2873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''L_V\nV__K''') == '5'\nassert solution('''V__K\nL_V''') == '10'\nassert solution('''V__K\nL_V''') == '10'\nassert solution('''V__K\nL_V''') == '10'\nassert solution('''V__K\nL_V''') == '10'\n"
    },
    {
        "number": 2874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 4\n2 4 5\n''') == '0'\nassert solution('''\n3 2\n1 5 10\n4 6\n''') == '1'\n"
    },
    {
        "number": 2875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n10 13 19 19 15 14 20\n''') == '3 6'\nassert solution('''\n6\n9 1 8 2 7 3\n''') == 'impossible'\n"
    },
    {
        "number": 2876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 2877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dcbagfekjih') == 'abcdefghijk'\nassert solution('mobitel') == 'bometil'\n"
    },
    {
        "number": 2878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n...D\n..C.\n.B..\nA...\n''') == '4'\nassert solution('''\n5\n..T..\nA....\n.FE.R\n....X\nS....\n''') == '3'\n'''\n"
    },
    {
        "number": 2879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n.X.\n.X.\n.X.\n''') == 'No solution'\nassert solution('''\n.X.\n.X.\n.X.\n''') == '123'\nassert solution('''\n.X.\n.X.\n.X.\n''') == 'No solution'\nassert solution('''\n.X.\n.X.\n.X.\n''') == 'No solution'\nassert solution('''\n.X.\n.X.\n.X.\n''') == 'No solution'\n"
    },
    {
        "number": 2880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6') == '0'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 2881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('60 58') == 'yes'\nassert solution('046 040') == 'yes'\nassert solution('1 2 3 4 5 6 7 8 9') == 'no'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'no'\nassert solution('1 2 3 4 5 6 7 8 9 10 11') == 'no'\n"
    },
    {
        "number": 2882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n''') == \"[(()), (()()), (()())], [(()()), (()())], [(()()), (()())], [(()()), (()())]\"\nassert solution('''\n2\n''') == \"[(())], [(()())]\"\nassert solution('''\n1\n''') == \"[()]\"\n"
    },
    {
        "number": 2883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[\n    [1,3],\n    [2,6],\n    [8,10],\n    [15,18]\n]\n''') == '[[1,6],[8,10],[15,18]]'\nassert solution('''\n[\n    [1,4],\n    [4,5]\n]\n''') == '[[1,5]]'\n'''"
    },
    {
        "number": 2884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nGiven a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates\u00a0where the candidate numbers sums to target.\n\nEach number in candidates\u00a0may only be used once in the combination.\n\nNote:\n\n\n       All numbers (including target) will be positive integers.\n       The solution set must not contain duplicate combinations.\n\nExample 1:\n\n\nInput: candidates =\u00a0[10,1,2,7,6,1,5], target =\u00a08,\nA solution set is:\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\n\n\nExample 2:\n\n\nInput: candidates =\u00a0[2,5,2,1,2], target =\u00a05,\nA solution set is:\n[\n\u00a0 [1,2,2],\n\u00a0 [5]\n]\n''') == '''[\n  [1, 2, 2],\n  [5]\n]'''\n"
    },
    {
        "number": 2885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[1,3]\n[6,9]\n''') == '[[1,3],[6,9]]'\nassert solution('''\n[1,2]\n[3,5]\n[6,7]\n[8,10]\n[12,16]\n''') == '[[1,2],[3,10],[12,16]]'\nassert solution('''\n[1,2]\n[3,5]\n[6,7]\n[8,10]\n[12,16]\n''') == '[[1,2],[3,16]]'\nassert solution('''\n[1,2]\n[3,5]\n[6,7]\n[8,10]\n[12,16]\n''') == '[[1,2],[3,5],[6,7],[8,10],[12,16]]'\nassert solution('''\n[1,2]\n[3,5]\n[6,7]\n[8,10]\n[12,16]\n''') == '[[1,2],[3,5],[6,7],[8,10],[12,16]]'\n"
    },
    {
        "number": 2886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"needed\") == \"2 5\"\nassert solution(\"\") == \"-\"\nassert solution(\"a\") == \"-\"\nassert solution(\"ab\") == \"-\"\nassert solution(\"abab\") == \"2 3\"\n"
    },
    {
        "number": 2887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5 12 4'\nassert solution('5') == '9 20 35 11 25'\n"
    },
    {
        "number": 2888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 12') == '390'\nassert solution('4 1') == '120'\n"
    },
    {
        "number": 2889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\n''') == 'Eco-cut X2'\nassert solution('''\n7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\n''') == 'Slow-Mowe'\nassert solution('''\n7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\n''') == 'Slow-Mowe'\nassert solution('''\n7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\n''') == 'Slow-Mowe'\nassert solution('''\n7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\n''') == 'Slow-Mowe'\n"
    },
    {
        "number": 2890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n''') == '2'\nassert solution('''\n4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n''') == '-1'\nassert solution('''\n4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n''') == '2'\nassert solution('''\n4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n''') == '-1'\nassert solution('''\n4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n''') == '2'\n"
    },
    {
        "number": 2891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 1') == '-0.001191480807419'\nassert solution('3\\n1 1 1') == '-0.0000489086'\nassert solution('4\\n1 1 1 1') == '-4.310614508857128'\nassert solution('5\\n1 1 1 1 1') == '-4.310614508857128'\nassert solution('6\\n1 1 1 1 1 1') == '-4.310614508857128'\n"
    },
    {
        "number": 2892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 3 2 4 1 3') == '7'\nassert solution('2\\n1 2 3 2 4 1 3') == 'impossible'\nassert solution('3\\n1 2 3 2 4 1 3') == 'impossible'\nassert solution('4\\n1 2 3 2 4 1 3') == 'impossible'\nassert solution('5\\n1 2 3 2 4 1 3') == 'impossible'\n"
    },
    {
        "number": 2893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n9\\n1\\n0\\n5\\n4\\n') == '6'\nassert solution('5\\n9\\n1\\n0\\n5\\n4\\n') == '6'\nassert solution('5\\n9\\n1\\n0\\n5\\n4\\n') == '6'\nassert solution('5\\n9\\n1\\n0\\n5\\n4\\n') == '6'\nassert solution('5\\n9\\n1\\n0\\n5\\n4\\n') == '6'\n"
    },
    {
        "number": 2894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('80.00 0.50 2.00 1.50 80.00') == '80.000000 80.759403'\nassert solution('80.00 0.50 2.00 1.50 80.00') == '80.000000 80.759403'\nassert solution('80.00 0.50 2.00 1.50 80.00') == '80.000000 80.759403'\nassert solution('80.00 0.50 2.00 1.50 80.00') == '80.000000 80.759403'\nassert solution('80.00 0.50 2.00 1.50 80.00') == '80.000000 80.759403'\n"
    },
    {
        "number": 2895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 100') == '60'\nassert solution('2') == '60'\nassert solution('50 1') == '60'\nassert solution('5 1') == '60'\nassert solution('0 0 0 100') == '60'\n"
    },
    {
        "number": 2896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AAAAA\") == \"3\"\nassert solution(\"AGCGAA\") == \"3\"\nassert solution(\"TTTTT\") == \"0\"\nassert solution(\"TTTTT\") == \"0\"\nassert solution(\"TTTTT\") == \"0\"\n"
    },
    {
        "number": 2897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\nassert solution('''\n1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'decimal'\nassert solution('''\n1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\nassert solution('''\n1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'decimal'\nassert solution('''\n1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\n"
    },
    {
        "number": 2898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6 6\n1 7\n3 5\n3 5\n''') == '1'\nassert solution('''\n4\n6 6\n1 7\n3 5\n3 5\n''') == '0'\nassert solution('''\n4\n6 6\n1 7\n3 5\n3 5\n''') == '1'\nassert solution('''\n4\n6 6\n1 7\n3 5\n3 5\n''') == '0'\nassert solution('''\n4\n6 6\n1 7\n3 5\n3 5\n''') == '1'\n"
    },
    {
        "number": 2899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == '23 42'\nassert solution('3\\n1 2 3\\n2 3 4\\n3 4 5') == '23 42 42 42'\nassert solution('4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '23 42 42 42 42 42'\nassert solution('5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9') == '23 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42"
    },
    {
        "number": 2900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BABA\") == \"2\"\nassert solution(\"AAAB\") == \"0\"\nassert solution(\"AAABB\") == \"1\"\nassert solution(\"AAABBB\") == \"2\"\nassert solution(\"AAABBBB\") == \"3\"\n"
    },
    {
        "number": 2901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15\\n0 1\\n1 2\\n2 3\\n0 4\\n1 5\\n2 6\\n3 7\\n4 5\\n5 6\\n6 7\\n4 8\\n5 8\\n6 9\\n7 9\\n8 9\\nGriezmann France LaLiga AtleticoMadrid\\nBenzema France LaLiga RealMadrid\\nNtep France Ligue1 StadeRennais\\nSissoko France PremierLeague Spurs\\nTolisso France Ligue1 Lyon\\nDiarra France Ligue1 OM\\nEvra France CalcioA Juventus\\nKoscielny France PremierLeague Arsenal\\nVarane France LaLiga RealMadrid\\nSagna France PremierLeague ManCity') == 'yes'\n"
    },
    {
        "number": 2902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 5 5\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5 10 20 40 80'\nassert solution('''1 5 5\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5 10 20 40 80'\nassert solution('''1 5 5\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5 10 20 40 80'\nassert solution('''1 5 5\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5 10 20 40 80'\nassert solution('''1 5 5\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5 10 20 40 80'\n"
    },
    {
        "number": 2903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n+ 1\\n? 2') == '3'\nassert solution('1\\n2\\n+ 1\\n? 2') == '3'\nassert solution('1\\n2\\n+ 1\\n? 2') == '3'\nassert solution('1\\n2\\n+ 1\\n? 2') == '3'\nassert solution('1\\n2\\n+ 1\\n? 2') == '3'\n"
    },
    {
        "number": 2904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n- - - - -\\n- - - - -\\n4 - - 1\\n5\\n1 (1,1)\\n2 (1,2) (1,3)\\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\\n4 (2,3) (2,4) (1,4) (1,5)\\n3 (3,4) (3,5) (2,5)\\n\") == \"1 2 1 2 1\\n3 5 3 4 3\\n4 2 1 2 1\\n3 5 3 4 3\\n4 2 1 2 1\\n3 5 3 4 3\\n\"\n"
    },
    {
        "number": 2905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10 10 10 10') == '4'\nassert solution('10 8 8 8 12 12 12 8 8 12 12') == 'impossible'\n"
    },
    {
        "number": 2906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2 3 1'\nassert solution('1 2') == '1 3 1'\nassert solution('2 3') == '2 3 1'\nassert solution('1 3') == '1 3 1'\nassert solution('2 3') == '2 3 1'\n"
    },
    {
        "number": 2907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Boris'\nassert solution('2') == 'Colleague'\nassert solution('3') == 'Boris'\nassert solution('4') == 'Colleague'\nassert solution('5') == 'Boris'\n"
    },
    {
        "number": 2908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 66') == 'NO'\nassert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 2909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 4 2') == 'Possible'\nassert solution('4 3 2 1') == 'Impossible'\n"
    },
    {
        "number": 2910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1\\n1 1 1\\n') == '3 3 3'\nassert solution('3\\n1 1 1\\n1 1 1\\n') == '3 3 3'\nassert solution('3\\n1 1 1\\n1 1 1\\n') == '3 3 3'\nassert solution('3\\n1 1 1\\n1 1 1\\n') == '3 3 3'\nassert solution('3\\n1 1 1\\n1 1 1\\n') == '3 3 3'\n"
    },
    {
        "number": 2911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '60'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 2912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\n''') == 'kattiscatiscute'\n\nassert solution('''\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\n''') == 'kattiscatiscute'\n\nassert solution('''\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\n''') == 'kattiscatiscute'\n\nassert solution('''\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\n''') == 'kattiscatiscute'\n\nassert solution('''\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\n''') == 'kattiscatiscute'"
    },
    {
        "number": 2913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n.....\n.....\n.. \\..\n. \\...\n.....''') == 'NO'\nassert solution('''5 2 3\n.....\n.....\n.....\n.....\n.....''') == 'YES'\nassert solution('''5 2 3\n.....\n.....\n.....\n.....\n.....''') == 'YES'\nassert solution('''5 2 3\n.....\n.....\n.....\n.....\n.....''') == 'NO'\nassert solution('''5 2 3\n.....\n.....\n.....\n.....\n.....''') == 'NO'\n"
    },
    {
        "number": 2914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '0.888888889'\nassert solution('1 1 1') == '0.0'\nassert solution('1 1 1') == '0.0'\nassert solution('1 1 1') == '0.0'\nassert solution('1 1 1') == '0.0'\n"
    },
    {
        "number": 2915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 100\n-10 50\n10 175\n25 20\n''') == '90'\nassert solution('''\n3 100\n-10 50\n10 175\n25 20\n''') == '90'\nassert solution('''\n3 100\n-10 50\n10 175\n25 20\n''') == '90'\nassert solution('''\n3 100\n-10 50\n10 175\n25 20\n''') == '90'\nassert solution('''\n3 100\n-10 50\n10 175\n25 20\n''') == '90'\n"
    },
    {
        "number": 2916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n''') == '0'\nassert solution('''\n5\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n''') == '1'\nassert solution('''\n10\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10 1 2 10\n10"
    },
    {
        "number": 2917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '10'\nassert solution('5') == '22'\n"
    },
    {
        "number": 2918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 0'\nassert solution('4') == '1 2 0 1 3'\nassert solution('5') == '1 2 0 1 3 4'\nassert solution('6') == '1 2 0 1 3 4 5'\nassert solution('7') == '1 2 0 1 3 4 5 6'\n"
    },
    {
        "number": 2919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SSSTTSNTNST') == '6'\nassert solution
    },
    {
        "number": 2920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n.....\\n#..#.\\n#..#.\\n...#.\\n.....') == '6'\nassert solution('5\\n.....\\n#..#.\\n#..#.\\n...#.\\n.....') == 'THE GAME IS A LIE'\nassert solution('5\\n.....\\n#..#.\\n#..#.\\n...#.\\n.....') == 'INCONCEIVABLE'\nassert solution('5\\n.....\\n#..#.\\n#..#.\\n...#.\\n.....') == '6'\nassert solution('5\\n.....\\n#..#.\\n#..#.\\n...#.\\n.....') == 'THE GAME IS A LIE'\n"
    },
    {
        "number": 2921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00''') == 'fire 2\\nwater 1'\nassert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00\nbeer 3 1/3 3.00\nwine 4 1/4 4.00\n''') == 'fire 2\\nwater 1\\nbeer 3\\nwine 4'\nassert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00\nbeer 3 1/3 3.00\nwine 4 1/4 4.00\n''') == 'fire 2\\nwater 1\\nbeer 3\\nwine 4'\nassert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00\nbeer 3 1/3 3.00\nwine 4 1/4 4.00\n''') == 'fire 2\\nwater 1\\nbeer 3\\nwine 4'\nassert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00\nbeer 3 1/3 3.00\nwine 4 1/4 4.00\n''') == 'fire 2\\nwater 1\\nbeer 3\\nwine 4'\n"
    },
    {
        "number": 2922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 4 3 12 13 1\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 2923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\n"
    },
    {
        "number": 2924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32\n''') == 'Ride on!'\nassert solution('''\n2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32\n''') == 'Time to change gears!'\n''')\n"
    },
    {
        "number": 2925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n30 one\\n30 two\\n15 three\\n25 four') == 'four'\nassert solution('4 2\\n30 one\\n30 two\\n15 three\\n25 four\\n25 five') == 'four'\nassert solution('4 2\\n30 one\\n30 two\\n15 three\\n25 four\\n25 five\\n25 six') == 'four'\nassert solution('4 2\\n30 one\\n30 two\\n15 three\\n25 four\\n25 five\\n25 six\\n25 seven') == 'four'\nassert solution('4 2\\n30 one\\n30 two\\n15 three\\n25 four\\n25 five\\n25 six\\n25 seven\\n25 eight') == 'four'\n"
    },
    {
        "number": 2926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('datastructure 3 query range sum\\ngraph 3 query vertex hamiltonian\\nmath 3 hamiltonian sum euclid') == 'geometry'\nassert solution('datastructure 3 query range sum\\ngraph 3 query vertex hamiltonian\\nmath 3 hamiltonian sum euclid\\nconsider the hamiltonian graph where each vertex corresponds\\n to an linear equation we can solve these using the euclid algorithm now you will receive a query corresponding to a range of vertices your task is to compute the sum of the minimum solution of those vertices') == 'geometry'\n"
    },
    {
        "number": 2927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9\n10 3 8 22 -4 16 8 3 14\n''') == 'Touchdown'\nassert solution('''\n9\n10 3 8 22 -4 16 8 3 14\n''') == 'Nothing'\nassert solution('''\n9\n10 3 8 22 -4 16 8 3 14\n''') == 'Safety'\nassert solution('''\n9\n10 3 8 22 -4 16 8 3 14\n''') == 'Nothing'\nassert solution('''\n9\n10 3 8 22 -4 16 8 3 14\n''') == 'Nothing'\n"
    },
    {
        "number": 2928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '500.000000'\nassert solution('2') == '624.875000'\nassert solution('3') == '625.000000'\n"
    },
    {
        "number": 2929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '7'\nassert solution('6') == '8'\n"
    },
    {
        "number": 2930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 2931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n250 180\\n250 132\\n220 123\\n132 194\\n220 105') == '1 3\\n1 3\\n3 5\\n1 5\\n3 5'\n"
    },
    {
        "number": 2932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('prognova 4') == 'Yes'\nassert solution('prognova 5') == 'No'\nassert solution('prognova 6') == 'Yes'\nassert solution('prognova 7') == 'No'\nassert solution('prognova 8') == 'Yes'\n"
    },
    {
        "number": 2933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n900\\n500\\n498\\n4') == '1002'\nassert solution('2\\n900\\n500\\n498\\n4') == '1002'\nassert solution('3\\n900\\n500\\n498\\n4') == '1002'\nassert solution('4\\n900\\n500\\n498\\n4') == '1002'\nassert solution('5\\n900\\n500\\n498\\n4') == '1002'\n"
    },
    {
        "number": 2934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7'\nassert solution('2') == '7'\nassert solution('2') == '7'\nassert solution('2') == '7'\nassert solution('2') == '7'\n"
    },
    {
        "number": 2935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7\n''') == '45'\nassert solution('''\n8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7\n''') == '45'\nassert solution('''\n8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7\n''') == '45'\nassert solution('''\n8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7\n''') == '45'\nassert solution('''\n8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7\n''') == '45'\n"
    },
    {
        "number": 2936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n-2 3 5 -7 8 13 -20 14 1\n''') == '22'\nassert solution('''\n-2 3 5 -7 8 13 -20 14 1\n''') == '22'\nassert solution('''\n-2 3 5 -7 8 13 -20 14 1\n''') == '22'\nassert solution('''\n-2 3 5 -7 8 13 -20 14 1\n''') == '22'\nassert solution('''\n-2 3 5 -7 8 13 -20 14 1\n''') == '22'\n"
    },
    {
        "number": 2937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 1\\nAlice\\nBob\") == \"2\\nAlice\\nBob\"\nassert solution(\"2 0 1\\nAlice\\nBob\\nAlice\\nBob\") == \"2\\nAlice\\nBob\"\nassert solution(\"2 0 1\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\") == \"2\\nAlice\\nBob\"\nassert solution(\"2 0 1\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\") == \"2\\nAlice\\nBob\"\nassert solution(\"2 0 1\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\\nAlice\\nBob\") == \"2\\nAlice\\nBob\"\n"
    },
    {
        "number": 2938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'Yes'\nassert solution('''\n........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\nassert solution('''\n........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\nassert solution('''\n........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\nassert solution('''\n........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\n"
    },
    {
        "number": 2939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1223\\n2123\\n2213\\n3212') == '3'\nassert solution('5\\n1223\\n2123\\n2213\\n3212\\n3123') == '4'\nassert solution('5\\n1223\\n2123\\n2213\\n3212\\n3123\\n3123') == '0'\nassert solution('5\\n1223\\n2123\\n2213\\n3212\\n3123\\n3123\\n3123') == '0'\nassert solution('5\\n1223\\n2123\\n2213\\n3212\\n3123\\n3123\\n3123\\n3123') == '0'\n"
    },
    {
        "number": 2940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 2\\n2 3 4\\n2 1 5\\n5 1 2 3 4 5\\n2 1 2') == '3'\nassert solution('5\\n2 1 2\\n2 3 4\\n2 1 5\\n5 1 2 3 4 5\\n2 1 2') == '2'\nassert solution('5\\n2 1 2\\n2 3 4\\n2 1 5\\n5 1 2 3 4 5\\n2 1 2') == '1'\nassert solution('5\\n2 1 2\\n2 3 4\\n2 1 5\\n5 1 2 3 4 5\\n2 1 2') == '0'\nassert solution('5\\n2 1 2\\n2 3 4\\n2 1 5\\n5 1 2 3 4 5\\n2 1 2') == '0'\n"
    },
    {
        "number": 2941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'Alice'\nassert solution('''\n5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\nassert solution('''\n5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\nassert solution('''\n5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\nassert solution('''\n5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\n"
    },
    {
        "number": 2942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 2943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''BBRRBRRBRB''') == '3 7'\nassert solution('''RBRRBRRBRB''') == '3 7'\nassert solution('''RBRRBRRBRB''') == '3 7'\nassert solution('''RBRRBRRBRB''') == '3 7'\nassert solution('''RBRRBRRBRB''') == '3 7'\n"
    },
    {
        "number": 2944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '1'\nassert solution('''\n3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '2'\nassert solution('''\n3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '3'\nassert solution('''\n3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '4'\nassert solution('''\n3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '5'\n"
    },
    {
        "number": 2945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12\n1\n3 1\n1\n5 1\n''') == '5'\nassert solution('''\n12\n1\n3 1\n1\n5 1\n''') == '5'\nassert solution('''\n12\n1\n3 1\n1\n5 1\n''') == '5'\nassert solution('''\n12\n1\n3 1\n1\n5 1\n''') == '5'\nassert solution('''\n12\n1\n3 1\n1\n5 1\n''') == '5'\n"
    },
    {
        "number": 2946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 10\n1000 980 960 940 10\n''') == '98950'\nassert solution('''\n5 10\n1000 980 960 940 10\n''') == '0'\nassert solution('''\n5 10\n1000 980 960 940 10\n''') == '0'\nassert solution('''\n5 10\n1000 980 960 940 10\n''') == '0'\nassert solution('''\n5 10\n1000 980 960 940 10\n''') == '0'\n"
    },
    {
        "number": 2947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 17 10\n1 5\n2 10 22\n3 17 22 9\n2 17 8\n3 9 22 16\n''') == 'impossible'\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == 'impossible'\nassert solution('''\n4\n1 2\n2 3\n3 4\n5 6\n''') == 'impossible'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n''') == 'impossible'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == 'impossible'\n"
    },
    {
        "number": 2948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n''') == 'ABBBBBA'\nassert solution('''\n3\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n''') == 'ABBBBBA'\nassert solution('''\n4\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n''') == 'ABBBBBA'\nassert solution('''\n5\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n''') == 'ABBBBBA'\nassert solution('''\n6\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n''') == 'ABBBBBA'\n"
    },
    {
        "number": 2949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\n1 0 1\\n3 0 2\\n0 1 1\\n2 1 2\\n4 1 2\\n1 2 2\\n2 3 1\\n4 3 1') == '4'\nassert solution('8\\n1 0 1\\n3 0 2\\n0 1 1\\n2 1 2\\n4 1 2\\n1 2 2\\n2 3 1\\n4 3 1') == '4'\nassert solution('8\\n1 0 1\\n3 0 2\\n0 1 1\\n2 1 2\\n4 1 2\\n1 2 2\\n2 3 1\\n4 3 1') == '4'\nassert solution('8\\n1 0 1\\n3 0 2\\n0 1 1\\n2 1 2\\n4 1 2\\n1 2 2\\n2 3 1\\n4 3 1') == '4'\nassert solution('8\\n1 0 1\\n3 0 2\\n0 1 1\\n2 1 2\\n4 1 2\\n1 2 2\\n2 3 1\\n4 3 1') == '4'\n"
    },
    {
        "number": 2950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n2 1 8 8 2 3') == '5'\nassert solution('6\\n2 1 8 8 2 3\\n') == '5'\nassert solution('6\\n2 1 8 8 2 3\\n1') == '4'\nassert solution('6\\n2 1 8 8 2 3\\n1\\n') == '4'\nassert solution('6\\n2 1 8 8 2 3\\n1\\n1') == '3'\n"
    },
    {
        "number": 2951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '8'\nassert solution('1') == '1'\n"
    },
    {
        "number": 2952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 2 2') == 'possible'\nassert solution('1 1 1 1') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\n"
    },
    {
        "number": 2953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n20180000 20180000\\n20180000 20182018\\n20182018 20180000\\n20182018 20182018') == '4'\nassert solution('5\\n20180000 20180000\\n20180000 20182018\\n20182018 20180000\\n20182018 20182018') == '5'\nassert solution('10\\n20180000 20180000\\n20180000 20182018\\n20182018 20180000\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018') == '10'\nassert solution('100\\n20180000 20180000\\n20180000 20182018\\n20182018 20180000\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n20182018 20182018\\n2018"
    },
    {
        "number": 2954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 3000') == '1'\nassert solution('4 4 3000') == '1'\nassert solution('4 4 3000') == '1'\nassert solution('4 4 3000') == '1'\nassert solution('4 4 3000') == '1'\n"
    },
    {
        "number": 2955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '00010'\nassert solution('5 2 4') == '00011'\nassert solution('5 2 5') == '00100'\nassert solution('5 2 6') == '00101'\nassert solution('5 2 7') == '00110'\n"
    },
    {
        "number": 2956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('LRRRSRL') == '44'\nassert solution('LRRRSRL?') == '44'\nassert solution('LRRRSRLA') == '44'\nassert solution('LRRRSRLA?') == '44'\nassert solution('LRRRSRLA??') == '44'\n"
    },
    {
        "number": 2957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('5 3') == '4'\nassert solution('5 4') == '5'\nassert solution('5 5') == '5'\nassert solution('5 6') == '5'\n"
    },
    {
        "number": 2958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n''') == '10'\nassert solution('''\n4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n''') == '-1'\nassert solution('''\n4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n''') == '-1'\nassert solution('''\n4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n''') == '-1'\nassert solution('''\n4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n''') == '-1'\n"
    },
    {
        "number": 2959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '...1.1......'\nassert solution('''\n6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '.1.2.2.1....'\nassert solution('''\n6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '.1.2.3.2.1..'\nassert solution('''\n6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '.1.1.2.1.1.1'\nassert solution('''\n6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '.....1......'\n"
    },
    {
        "number": 2960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '9'\nassert solution('5') == '10'\nassert solution('6') == '15'\nassert solution('7') == '21'\nassert solution('8') == '28'\n"
    },
    {
        "number": 2961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n4 4 4 4') == 'Yes'\nassert solution('5\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n4 4 4 4') == 'No'\nassert solution('5\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n4 4 4 4') == 'Yes'\nassert solution('5\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n4 4 4 4') == 'No'\nassert solution('5\\n1 1 1 2\\n2 2 2 3\\n3 3 3 4\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n4 4 4 4') == 'Yes'\n"
    },
    {
        "number": 2962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4200'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '4200'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '4200'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '4200'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '4200'\n"
    },
    {
        "number": 2963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2.0'\nassert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('3') == '3.0'\nassert solution('4') == '4.0'\n"
    },
    {
        "number": 2964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '5.0'\nassert solution('2 -1 -2') == '5.0'\nassert solution('1 -2') == '4.0'\nassert solution('1 -1') == '3.0'\nassert solution('1 -1 -1') == '2.0'\n"
    },
    {
        "number": 2965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 8') == '1'\nassert solution('3 2') == '2'\nassert solution('5 5') == '2'\nassert solution('4 3') == '1'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 2966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 10') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 2967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5\\n6 3\\n14 6') == '2'\nassert solution('2 5\\n6 3\\n14 6') == '1'\nassert solution('3 5\\n6 3\\n14 6') == '0'\nassert solution('4 5\\n6 3\\n14 6') == '1'\nassert solution('5 5\\n6 3\\n14 6') == '0'\n"
    },
    {
        "number": 2968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 0') == '1600'\nassert solution('3 1 0\\n40 60 90\\n18 20') == '1600'\nassert solution('3 1 0\\n40 60 90\\n18 20\\n18 20') == '1600'\nassert solution('3 1 0\\n40 60 90\\n18 20\\n18 20\\n18 20') == '1600'\nassert solution('3 1 0\\n40 60 90\\n18 20\\n18 20\\n18 20\\n18 20') == '1600'\n"
    },
    {
        "number": 2969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('28\\n1 C\\n2 C\\n3 C\\n4 C\\n5 C\\n6 C\\n7 C\\n1 D\\n2 D\\n3 D\\n4 D\\n5 D\\n6 D\\n7 D\\n1 H\\n2 H\\n3 H\\n4 H\\n5 H\\n6 H\\n7 H\\n1 S\\n2 S\\n3 S\\n4 S\\n5 S\\n6 S\\n7 S\\n') == 'possible'\nassert solution('28\\n1 C\\n2 C\\n3 C\\n4 C\\n5 C\\n6 C\\n7 C\\n1 D\\n2 D\\n3 D\\n4 D\\n5 D\\n6 D\\n7 D\\n1 H\\n2 H\\n3 H\\n4 H\\n5 H\\n6 H\\n7 H\\n1 S\\n2 S\\n3 S\\n4 S\\n5 S\\n6 S\\n7 S\\n') == 'impossible'\n"
    },
    {
        "number": 2970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 2') == '7'\nassert solution('5 1 2 1 1 1 1') == '7'\nassert solution('5 1 2 1 1 1 1 1') == '7'\nassert solution('5 1 2 1 1 1 1 1 1') == '7'\nassert solution('5 1 2 1 1 1 1 1 1 1') == '7'\n"
    },
    {
        "number": 2971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('spaghetti') == 4\nassert solution('already') == 1\nassert solution('confetti') == 4\nassert solution('serengeti') == 4"
    },
    {
        "number": 2972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 356 2') == '36'\nassert solution('1 1 1') == '3'\nassert solution('1 1 1 1') == '4'\nassert solution('1 1 1 1 1') == '5'\nassert solution('1 1 1 1 1 1') == '6'\n"
    },
    {
        "number": 2973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '3.000000000'\nassert solution('4 -1') == '3.000000000'\nassert solution('10 3') == '3.000000000'\nassert solution('10 0') == '0.000000000'\nassert solution('10 3') == '3.000000000'\n"
    },
    {
        "number": 2974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 4 1') == '2 3'\nassert solution('1 3 4 2') == '3 2'\nassert solution('1 2 3 4') == '2 3'\nassert solution('1 2 3 4 5') == '2 3'\nassert solution('1 2 3 4 5 6') == '2 3'\n"
    },
    {
        "number": 2975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n''') == '5'\nassert solution('''\n2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n''') == '5'\nassert solution('''\n2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n''') == '5'\nassert solution('''\n2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n''') == '5'\nassert solution('''\n2 100\n10 8 10 10 13 11\n12 20 6 10 17 24\n''') == '5'\n"
    },
    {
        "number": 2976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sampras agassi\\n6\\n6:2 6:4\\n3:6 7:5 2:6\\n6:5 7:4\\n7:6 7:6\\n6:2 3:6\\n6:2 1:6 6:8') == 'da'\nassert solution('sampras agassi\\n6\\n6:2 6:4\\n3:6 7:5 2:6\\n6:5 7:4\\n7:6 7:6\\n6:2 3:6\\n6:2 1:6 6:8') == 'ne'\nassert solution('sampras agassi\\n6\\n6:2 6:4\\n3:6 7:5 2:6\\n6:5 7:4\\n7:6 7:6\\n6:2 3:6\\n6:2 1:6 6:8') == 'da'\nassert solution('sampras agassi\\n6\\n6:2 6:4\\n3:6 7:5 2:6\\n6:5 7:4\\n7:6 7:6\\n6:2 3:6\\n6:2 1:6 6:8') == 'ne'\nassert solution('sampras agassi\\n6\\n6:2 6:4\\n3:6 7:5 2:6\\n6:5 7:4\\n7:6 7:6\\n6:2 3:6\\n6:2 1:6 6:8') == 'da'\n"
    },
    {
        "number": 2977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('The flag of the empire Angola?') == 'Red stripe, black stripe, yellow'\nassert solution('The flag of the empire France?') == 'Red stripe, black stripe, white'\nassert solution('The flag of the empire France?') == 'Red stripe, black stripe, white'\nassert solution('The flag of the empire France?') == 'Red stripe, black stripe, white'\nassert solution('The flag of the empire France?') == 'Red stripe, black stripe, white'\n"
    },
    {
        "number": 2978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'different'\nassert solution('1') =='same'\nassert solution('3') =='same'\n"
    },
    {
        "number": 2979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 1 4\\n0 1\\n1 2\\n2 3\\n') == '8'\nassert solution('4 3 1 4\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '10'\nassert solution('4 3 1 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '10'\nassert solution('4 3 1 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '10'\nassert solution('4 3 1 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '10'\n"
    },
    {
        "number": 2980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 5') == 'LWW'\nassert solution('3') == 'LWW'\nassert solution('2 5 12') == 'LWW'\nassert solution('3 2 4 7') == 'LWW'\nassert solution('4 2 3 7 12') == 'LWW'\n"
    },
    {
        "number": 2981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.00111219'\nassert solution('4') == '2.00111219'\nassert solution('5') == '2.00111219'\nassert solution('6') == '2.00111219'\nassert solution('7') == '2.00111219'\n"
    },
    {
        "number": 2982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 2983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 5') == '1.60965532263'\nassert solution('2 1 5') == 'impossible'\nassert solution('2 2 2') == 'impossible'\nassert solution('2 3 4') == 'impossible'\nassert solution('2 4 5') == 'impossible'\n"
    },
    {
        "number": 2984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n68 90 6\n3809\n288\n2306\n2215\n4211\n379\n''') == '27 1'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1 1'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1 1'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1 1'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1 1'"
    },
    {
        "number": 2985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('22 2 2') == '3'\nassert solution('11') == '1'\nassert solution('9') == '0'\nassert solution('1000000000 2 2') == '1000000000'\nassert solution('1000000000 1') == '1000000000'\n"
    },
    {
        "number": 2986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nmy ]]name]] is]] steva<en]<n halim]]]]]\n''') =='my name is steven halim'"
    },
    {
        "number": 2987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14\n''') == '23029'\nassert solution('''\n50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14\n''') == '437'\nassert solution('''\n50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14\n''') == '437'\nassert solution('''\n50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14\n''') == '437'\nassert solution('''\n50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14\n''') == '437'\n"
    },
    {
        "number": 2988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 9') == '6'\nassert solution('10 9') == '6'\nassert solution('10 9') == '6'\nassert solution('10 9') == '6'\nassert solution('10 9') == '6'\n"
    },
    {
        "number": 2989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\n1 3 10\n2 3 1\n2 3 15\n''') == '10'\nassert solution('''\n3 2 1\n1 3 10\n2 3 1\n2 3 15\n''') == '10'\nassert solution('''\n3 2 1\n1 3 10\n2 3 1\n2 3 15\n''') == '10'\nassert solution('''\n3 2 1\n1 3 10\n2 3 1\n2 3 15\n''') == '10'\nassert solution('''\n3 2 1\n1 3 10\n2 3 1\n2 3 15\n''') == '10'\n"
    },
    {
        "number": 2990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n0\\n0\\n6\\nShoresy\\nJonesy\\nReilly\\nSholtzy\\nFisky\\nYorkie') == 'Shoresy Reilly\\nJonesy Sholtzy\\n'\n"
    },
    {
        "number": 2991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"1, 4, 2\"\nassert solution(\"5 4\") == \"1, 3, 2\"\nassert solution(\"5 2\") == \"1, 3, 2\"\nassert solution(\"5 1\") == \"1, 3, 2\"\nassert solution(\"5\") == \"1, 2, 3, 4, 5\"\n"
    },
    {
        "number": 2992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '4'\nassert solution('1 2 3') == 'IMPOSSIBLE'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 2993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'A'\nassert solution('2') == 'AB'\nassert solution('3') == 'ABB'\nassert solution('4') == 'ABAB'\nassert solution('5') == 'ABABAB'\n"
    },
    {
        "number": 2994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\naaa\\n#..\\n..#\") == \"a..\\n#.a\\n.a#\"\nassert solution(\"3 3\\naaa\\n#..\\n..#\\n#..\\n#..\") == \"a..\\n#.a\\n.a#\\n.a#\\na..\"\nassert solution(\"3 3\\naaa\\n#..\\n..#\\n#..\\n#..\\n#..\\n#..\") == \"a..\\n#.a\\n.a#\\n.a#\\na..\\n#.a\\n.a#\\na..\"\nassert solution(\"3 3\\naaa\\n#..\\n..#\\n#..\\n#..\\n#..\\n#..\\n#..\") == \"a..\\n#.a\\n.a#\\n.a#\\na..\\n#.a\\n.a#\\na..\"\nassert solution(\"3 3\\naaa\\n#..\\n..#\\n#..\\n#..\\n#..\\n#..\\n#..\") == \"a..\\n#.a\\n.a#\\n.a#\\na..\\n#.a\\n.a#\\na..\"\n"
    },
    {
        "number": 2995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nbattery_acid\\ndrain_cleaner\\nantifreeze\\ncold_medicine\\nlantern_fuel\\n2\\ncold_medicine battery_acid\\nantifreeze lantern_fuel\\n') == 'lantern_fuel drain_cleaner battery_acid\\nantifreeze cold_medicine'\nassert solution('5\\nbattery_acid\\ndrain_cleaner\\nantifreeze\\ncold_medicine\\nlantern_fuel\\n2\\ncold_medicine battery_acid\\nantifreeze lantern_fuel\\n') == 'lantern_fuel drain_cleaner battery_acid\\nantifreeze cold_medicine'\nassert solution('5\\nbattery_acid\\ndrain_cleaner\\nantifreeze\\ncold_medicine\\nlantern_fuel\\n2\\ncold_medicine battery_acid\\nantifreeze lantern_fuel\\n') == 'lantern_fuel drain_cleaner battery_acid\\nantifreeze cold_medicine'\nassert solution('5\\nbattery_acid\\ndrain_cleaner\\nantifreeze\\ncold_medicine\\nlantern_fuel\\n2\\ncold_medicine battery_acid\\nantifreeze lantern_fuel\\n') == 'lantern_fuel drain_cleaner battery_acid\\nantifreeze cold_medicine'\nassert solution('5\\nbattery_acid\\ndrain_cleaner\\nantifreeze\\ncold_medicine\\nlantern_fuel\\n2\\ncold_medicine battery_acid\\nantifreeze lantern_fuel\\n') == 'lantern_fuel drain_cleaner battery_acid\\nantifreeze cold_medicine'\n"
    },
    {
        "number": 2996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n40 30 40\n50 10\n50\n''') == '80'\nassert solution('''\n3 2\n40 30 40\n50 10\n50\n''') == '80'\nassert solution('''\n3 2\n40 30 40\n50 10\n50\n''') == '80'\nassert solution('''\n3 2\n40 30 40\n50 10\n50\n''') == '80'\nassert solution('''\n3 2\n40 30 40\n50 10\n50\n''') == '80'\n"
    },
    {
        "number": 2997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0'\nassert solution('1 3') == '1'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 2998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('uu Friends m Romans ummuuummmuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuumm countrymen mmuummmuu') == 'icpc'\n"
    },
    {
        "number": 2999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 63') == 'BorgQueen'\nassert solution('5 7') == 'Terminator'\nassert solution('5 20') == 'Vader'\n"
    }
]