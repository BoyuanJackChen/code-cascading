[
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('[a:b:|]') == 4\nassert solution(']:[|:') == -1\nassert solution(']:[|:]]') == -1\nassert solution(']:[|:]]') == -1\nassert solution(']:[|:]]]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('][][|][|]') == 4\nassert solution(']:[|:[|]') == 4\nassert solution(']:[|]') == -1\nassert solution(']:[|:') == -1\n\n\"\"\"\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"[a:b:]\" == 4)\nassert solution(\"]:[|:\" == -1)\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"]]:[|:]\") == -1\nassert solution(\"a:b:|\") == 4\nassert solution(\"a:b|]\") == -1\nassert solution(\"a:b||]\") == -1\nassert solution(\"a:b|:\") == 5\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('][') == -1\nassert solution(']:[') == -1\nassert solution('][|:') == -1\nassert solution('[|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution(']:[|:]') == '-1'\nassert solution('|:|:|]') == '-1'\nassert solution('[|:|:|]') == '3'\nassert solution('[:||:||]') == '6'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(':|:') == '4'\nassert solution(':||:') == '6'\nassert solution(':|||:') == '7'\nassert solution(':|:') == '-1'\nassert solution(']::') == '2'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"][][][|]\") == 4\nassert solution(\"|:][:|||:][:|:]\") == -1\nassert solution(\"|:][:|||:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:|:][:"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('a:b:|') == '4'\nassert solution(']:[|:') == '-1'\nassert solution('[:||:]') == '6'\nassert solution('[:|||:]') == '7'\nassert solution('[:|||:]') == '7'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"[::]\") == 4\nassert solution(\"[:||:]\") == 6\nassert solution(\"[:|||:]\") == 7\nassert solution(\"[:|||:|:]\") == -1\nassert solution(\"[:|||:||:]\") == -1\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n\n\n\"\"\"\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('456') == '457'\nassert solution('100100') == '999'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('522') == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"521\") == \"499\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1021\") == \"999\"\nassert solution(\"8\") == \"9\"\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\""
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('100') == '99'\n\"\"\"\n\nx = int(input())\nmax_digit = 9\ndigits = [x // (10 ** i) % 10 for i in range(20)]\nfor num in range(x - 1, -1, -1):\n    digit = num % 10\n    if digit > max_digit:\n        break\n    else:\n        digits[digit] = min(digits[digit], num)\nmax_digit = 9\nfor i in range(9, -1, -1):\n    if digits[i]!= 10 ** i:\n        max_digit = i\n        break\nprint(max_digit)\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"100\") == '99'\nassert solution(\"48\") == '48'\nassert solution(\"521\") == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('100') == '99'\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\""
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\nimport io, pytest\n@pytest.mark.parametrize(('inp', 'out'), (\n    ('4', '1'),\n    ('201', '99'),\n    ('4000', '1000'),\n))\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n\"\"\""
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\n\"\"\""
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n\nprint(\"Check completed.\")\n\nsolution(stdin)\n\n\"\"\"\nfrom collections import deque\nimport sys"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\n\nassert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"2\"\n\nassert solution(\"4 4\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"3\""
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 4\\n4 5\\n5 6\\n6 7\\n3 5') == '7'\nassert solution('1 1\\n2 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''3 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\n\nassert solution('''4 4\n1 1\n2 2\n2 3\n3 4''') == '2'\n\nassert solution('''4 4\n1 1\n2 2\n2 3\n3 4\n3 5\n5 6''') == '3'\n\nassert solution('''3 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5\n1 4\n4 5\n5 6\n3 5\n1 5\n1 4\n4 5\n5 6\n3 5''') == '7'\n\nassert solution('''5 4\n1 3\n2 4\n1 5\n2 5\n3 4\n1 5\n3 4\n1 4\n2 5\n3 4\n1 5\n3 4\n2 4\n2 5\n3 4\n1 5\n2 4\n3 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n3 4\n2 5\n1 5\n3 4\n2 4\n1 5\n2 4\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 1\\n2 2\\n2 3\\n3 4\") == \"3\"\n\nassert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\") == \"7\"\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5') == '7'\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4') == '2'\nassert solution('4 4\\n1 1\\n2 2\\n2 3\\n3 4') == '3'\nprint('Test pass.')"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\"\n) == \"7\"\nassert solution(\n    \"4 3\\n1 1\\n2 2\\n2 3\\n3 4\"\n) == \"2\"\nassert solution(\n    \"4 4\\n1 1\\n2 2\\n2 3\\n3 4\"\n) == \"3\"\nassert solution(\n    \"4 4\\n1 1\\n2 2\\n2 3\\n3 4\"\n) == \"3\"\n\nprint(\"Successfully passed all tests\")\n\n\"\"\"\n\nn, q = map(int, input().split())\nl = list()\nfor i in range(q):\n    l.append(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    x = n - 1\n    for j in range(q - 2):\n        if (i >= l[j][0] - 1 and i <= l[j][1]) or (i >= l[j + 1][0] - 1 and i <= l[j + 1][1]):\n            x = x - 1\n    ans = max(ans, x)\nprint(ans)\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\") == \"7\"\nassert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4 4\\n1 1\\n2 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"4 4\\n1 1\\n2 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"4 4\\n1 1\\n2 2\\n2 3\\n3 4\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5') == '7'\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4') == '2'"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"7\"\nassert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\nassert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\nassert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\nassert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\n\nprint(\"Check done.\")"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3\\n11 23') == '2'\nassert solution('5\\n01 07') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"11 23\") == '2'\n\nassert solution(\"01 07\") == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\""
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"11 23\") == 2\nassert solution(\"01 07\") == 0\n\"\"\"\n\nimport os\nimport sys\nfrom typing import List\n\nsys.path.append(os.path.join(os.path.dirname(__file__), \"..\"))\nfrom prob_types import Problem"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('11 23') == 2\nassert solution('01 07') == 0"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n\n\"\"\"\n\nimport sys\n\nh, m = list(map(int, sys.stdin.readline().strip().split()))"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\nassert solution(\"01 02\") == \"2\"\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(\"11 23\"), \"2\")\n        self.assertEqual(solution(\"01 07\"), \"0\")\n        self."
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n\"\"\"\n\nimport time"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n11 23\") == \"2\"\nassert solution(\"5\\n01 07\") == \"0\"\nassert solution(\"1\\n05 00\") == \"0\"\n\"\"\"\nimport sys\n\nx = int(sys.stdin.readline().strip())\nh, m = map(int, sys.stdin.readline().strip().split())\n\ncount = 0\nwhile True:\n    if m == 0:\n        m = 59\n        h -= 1\n    else:\n        break\n    count += 1\n    m -= 1\n    if m < 10:\n        m = \"0\" + str(m)\n    if h < 10:\n        h = \"0\" + str(h)\n\nprint(count - 1 if m == 7 else count)\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('3 3 2 3') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('6 5 4 1') == '0'\n\n\"\"\""
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('5 2 1 5') == 0\nassert solution('5 3 1 3') == 0\nassert solution('6 3 1 3') == 1\nassert solution('6 3 2 4') == 5\n\n'''"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\""
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\nassert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\n'''"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"6 1 2 4\") == \"6\"\n\nprint('The solution is correct!')\n\n\"\"\""
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"6 3 2 4\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('5 2 1 5') == '0'"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '2'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '3'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '2\\n3\\n-1'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '2\\n3\\n-1'"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"2\"\nassert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"3\"\nassert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"3\"\n\"\"\"\nimport sys"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == '2\\n3\\n-1'\n\nassert solution(\"4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n\") == \"2\"\nassert solution(\"1 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n\") == \"-1\"\n\n\"\"\""
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == \"2\"\nassert solution(\"3\\n10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == \"3\"\nassert solution(\"3\\n10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == \"-1\"\n\n\"\"\"\n\n\nfrom collections import deque"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == -1\nassert solution(\"2\\n10 11\\n2 6\\n3 2\\n4 10\") == 2\nassert solution(\"3\\n10 11\\n2 6\\n3 2\\n4 10\") == 3\nassert solution(\"4\\n100\\n2 15\\n10 11\\n14 100\") == 3\nassert solution(\"5\\n100\\n2 15\\n10 11\\n14 100\") == 3\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 10\\n1 3\\n2 2\\n3 1\\n4 4\\n5 2\\n6 4\\n7 5\\n8 4\\n9 1\\n10 10\\n12 10\\n13 1\\n14 10\\n15 3\\n16 1\\n17 3\\n18 1\\n19 1\\n20 2\\n21 1\\n22 2\\n23 3\\n24 3\\n25 3\\n26 1\\n27 1\\n28 2\\n29 2\\n30 2\\n31 1\\n32 1\\n33 2\\n34 2\\n35 2\\n36 1\\n37 2\\n38 2\\n39 2\\n40 2\\n41 1\\n42 1\\n43 2\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 2\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 2\\n67 2\\n68 1\\n69 1\\n70 1\\n71 1\\n72 2\\n73 1\\n74 1\\n75 2\\n76 1\\n77 2\\n78 2\\n79 2\\n80 1\\n81 1\\n82 1\\n83 2\\n84 1\\n85 1\\n86 1\\n87 2\\n88 2\\n89 1\\n90 1\\n91 2\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 2\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 2\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 2\\n116 1\\n117 2\\n118 2\\n119 2\\n120 2\\n121 2\\n122 2\\n123 2\\n124 2\\n125 2\\n126 1\\n127 2\\n128 2\\n129 2\\n130 2\\n131 2\\n132 1\\n133 2\\n134 2\\n135 2\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 2\\n142 1\\n143 1\\n144 1\\n145 2\\n146 1\\n147 1\\n148 1\\n149 1\\n150 1\\n151 1\\n152 1\\n153 1\\n154 1\\n155 1\\n156 2\\n157 1\\n158 2\\n159 1\\n160 1\\n161 1\\n162 1\\n163 1\\n164 2\\n165 2\\n166 1\\n167 2\\n168 1\\n169 1\\n170 1\\n171 2\\n172 1\\n173 1\\n174 1\\n175 1\\n176 1\\n177 1\\n178 2\\n179 2\\n180 2\\n181 2\\n182 2\\n183 1\\n184 2\\n185 1\\n186 1\\n187 1\\n188 1\\n189 1\\n190 1\\n191 1\\n192 2\\n193 2\\n194 2\\n195 1\\n196 2\\n197 1\\n198 2\\n199 1\\n200 2\\n201 1\\n202 1\\n203 1\\n204 1\\n205 1\\n206 1\\n207 1\\n208 1\\n209 1\\n210 1\\n211 1\\n212 2\\n213 1\\n214 1\\n215 2\\n216 1\\n217 1\\n218 1\\n219 2\\n220 1\\n221 1\\n222 1\\n223 1\\n224 1\\n225 1\\n226 1\\n227 1\\n228 1\\n229 2\\n230 1\\n231 2\\n232 1\\n233 2\\n234 1\\n235 2\\n236 1\\n237 1\\n238 1\\n239 1\\n240 2\\n241 2\\n242 1\\n243 2\\n244 2\\n245 2\\n246 1\\n247 1\\n248 1\\n249 1\\n250 1\\n251 1\\n252 2\\n253 2\\n254 1\\n255 1\\n256 1\\n257 1\\n258 2\\n259 1\\n260 1\\n261 1\\n262 1\\n263 1\\n264 1\\n265 2\\n266 1\\n267 1\\n268 1\\n269 2\\n270 1\\n271 2\\n272 1\\n273 1\\n274 1\\n275 2\\n276 2\\n277 2\\n278 2\\n279 1\\n280 2\\n281 2\\n282 2\\n283 2\\n284 2\\n285 1\\n286 1\\n287 1\\n288 1\\n289 1\\n290 1\\n291 1\\n292 1\\n293 1\\n294 1\\n295 1\\n296 1\\n297 1\\n298 1\\n299 2\\n300 1\\n301 1\\n302 1\\n303 2\\n304 1\\n305 1\\n306 1\\n307 2\\n308 1\\n309 1\\n310 1\\n311 1\\n312 1\\n313 1\\n314 1\\n315 1\\n316 1\\n317 1\\n318 2\\n319 2\\n320 1\\n321 1\\n322 1\\n323 1\\n324 1\\n325 2\\n326 1\\n327 1\\n328 1\\n329 1\\n330 1\\n331 1\\n332 1\\n333 2\\n334 2\\n335 2\\n336 2\\n337 1\\n338 1\\n339 1\\"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '2'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n4 1\\n3 2\\n2 1\") == \"2\"\nassert solution(\"5 2\\n4 1\\n3 2\\n2 1\") == \"2\"\nassert solution(\"5 2\\n4 1\\n3 2\\n2 1\") == \"2\"\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"1\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"8 9\") == \"4\"\nassert solution(\"1 9\") == \"2\"\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n\"\"\"\n\nn, m = list(map(int, input().split()))\ncount = 0\nwhile n!= 0:\n    count += 1\n    n -= m\n    n += 1 if n < m else 0\nprint(count)\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"5\"\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2\\n') == '4'\nassert solution('8 1\\n') == '5'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 3\") == \"6\"\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"4\"\n\"\"\""
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1s 2s 3s\") == 0\nassert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1s2s3s') == 0\nassert solution('9m9m9m') == 0\nassert solution('3p9m2p') == 1\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nprint('test passed')\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\""
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"9m 8m 8m\") == \"0\"\nassert solution(\"1s 2s 3s\") == \"0\"\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"1s 2s 3s\") == 0\n\nprint(\"all tests passed.\")\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"1s 2s 3s\") == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4m 4m 4m\") == 0\nassert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"9m 9m 9m\") == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1s2s3s\") == \"0\"\nassert solution(\"9m9m9m\") == \"0\"\nassert solution(\"3p9m2p\") == \"1\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1') == '1'\n\nassert solution('2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0') == '-1'\n\n\"\"\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0') == '1'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0') == '2'\nassert solution('2\\n2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0') == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 2\\n3 1 3 2\\n1 2 2 2\") == \"1\"\nassert solution(\"2\\n2 2\\n2 1 1 1\\n1 2 2 2\") == \"2\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"1\\n2 2\\n2 1 1 1\\n1 2 2 2\") == \"2\"\nassert solution(\"2\\n2 2\\n2 1 1 1\\n1 2 2 2\") == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\") == \"1\"\nassert solution(\"3 10\\n3 1 1 3\\n5 5 6 5\\n6 4 5 4\") == \"2\"\nassert solution(\"3 10\\n3 1 1 3\\n5 5 6 5\\n6 4 5 4\") == \"2\"\nassert solution(\"3 10\\n3 1 1 3\\n5 5 6 5\\n6 4 5 4\") == \"2\"\nassert solution(\"3 10\\n3 1 1 3\\n5 5 6 5\\n6 4 5 4\") == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\") == \"1\"\nassert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0\") == \"2\"\nassert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0\") == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"1 2 1 1\") == \"1\"\nassert solution(\"5 5 6 5\") == \"2\"\nassert solution(\"6 4 5 4\") == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 1 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == '2'\n\nassert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\") == '1'\n\nassert solution(\"2 2\\n2 1 1 1\\n5 5 6 5\\n6 4 5 4\") == '-1'\n\nassert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0\") == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\") == \"1\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"2\\n2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\") == \"-1\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\") == \"2\"\nassert solution(\"2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\") == \"2\""
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\""
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(14) == 4, 'WA'\nassert solution(2) == 0, 'WA'\n\"\"\""
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n\"\"\"\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\nassert solution(\"100\") == \"0 4\"\nassert solution(\"200\") == \"0 2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\nprint('Success')\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n\n\"\"\"\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('3') == '0 2'\nassert solution('5') == '0 2'\nassert solution('0') == '0 0'\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('1') == '0 0'"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n\"\"\"\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\""
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2 3 12 15') == '39'\n\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 2 3 12 15') == '39'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''5 2 3 12 15''') == '39'\nassert solution('''20 2 3 3 5''') == '51'\n\n-----\n'''\n\n'''\n\n\n\nn,a,b,p,q=map(int,input().split())\nans=0\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2 3 12 15') == '39'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n\"\"\""
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n\n\"\"\"\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10GSSS') == '7'\nassert solution('10GSSS') == '4'\nassert solution('4GSS') == '0'"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10G\") == \"7\"\nassert solution(\"10S\") == \"4\"\nassert solution(\"3S\") == \"0\"\nassert solution(\"4G\") == \"3\"\nassert solution(\"6G\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10\\nGGGSGGGSG\\n\") == \"7\"\nassert solution(\"4\\nGGGG\\n\") == \"4\"\nassert solution(\"3\\nSSS\\n\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"GGGG\") == \"7\"\nassert solution(\"SSS\") == \"0\""
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10GSSS\") == \"7\"\nassert solution(\"GGGSSS\") == \"4\"\nassert solution(\"SSS\") == \"0\"\n\"\"\""
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('GGGGGGS') == '7'\nassert solution('G') == '1'\nassert solution('GGG') == '1'\nassert solution('GGGGG') == '2'\nassert solution('S') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10GGG\") == \"7\"\nassert solution(\"4SSS\") == \"0\"\nassert solution(\"1SSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10\\nGGG\\n\") == \"7\"\nassert solution(\"4\\nGGGG\\n\") == \"4\"\nassert solution(\"3\\nSSS\\n\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10\\nGGGSGGGSGG\") == \"7\"\nassert solution(\"4\\nGGGG\") == \"4\"\nassert solution(\"3\\nSSS\") == \"0\""
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\\n1 2 3 4 5\"\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\"\"\") == \"5\\n1 2 3 4 5\"\nassert solution(\"\"\"9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\"\"\") == \"6\\n1 2 9 4 5 3\"\nassert solution(\"\"\"3 3\n1 2 3\n1 2\n1 3\n1 1\"\"\") == \"-\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''\n9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '6\\n1 2 9 4 5 3'\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5') == '5\\n1 2 3 4 5'\nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2') == '6\\n1 2 9 4 5 3'\nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(example1) == 5\nassert solution(example2) == 6\nassert solution(example3) == -1\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"5\\n1 2 3 4 5\"\nassert solution(\"3 9 5\") == \"6\\n1 2 9 4 5 3\"\nassert solution(\"3 9 4 5\") == \"6\\n1 2 9 4 5 3\"\nassert solution(\"3 9 4 5\\n0\") == \"6\\n1 2 9 4 5 3\"\nassert solution(\"3 9 4 5\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == \"6\\n1 2 9 4 5 3\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n0\\n0\\n0\\n0\\n0\\n0\\n3\\n1 1\\n1 3\\n1 4\\n3 0\\n3 2\\n4 4\\n4 1\\n4 2\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n6\\n7\\n1 1\\n1 2\\n2 3\\n2 4\\n2 5\\n2 6\\n3 7\\n4 7\\n5 7\\n6 7\\n7 0\\n7 6\\n7 5\\n7 4\\n7 3\\n7 2\\n7 1\") == \"7\\n7 2 1 4 3 5 6\"\n\n\"\"\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n2 1\\n1 3\") == \"5\\n1 2 3\"\nassert solution(\"4 2\\n3 1\\n2 3\") == \"-1\"\nassert solution(\"3 2\\n1 3\\n3 1\") == \"6\\n1 2 3\"\nassert solution(\"3 3\\n1 2\\n1 3\\n1 1\") == \"6\\n1 2 3\"\nassert solution(\"5 2\\n2 1\\n1 2\\n1 1\\n2 3\\n4 1\") == \"5\\n1 2 3 4\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 2\\n3 9 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n') == '6\\n1 2 9 4 5 3'\n\nassert solution('7 5\\n3 9 4 5\\n0\\n0\\n0\\n2 2 1\\n') == '-1'\n\nassert solution('4 4\\n1 2\\n3 4\\n4 3\\n') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"5 3\\n2 3 1\") == \"-1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"3 4 1 2 5 6\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"5 1\") == \"3 2 1 5 4\"\nassert solution(\"5 5\") == \"3 4 1 2 5 6\"\nassert solution(\"5 5\") == \"3 4 1 2 5 6\"\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4 \"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4 \"\nassert solution(\"5 2\\n3 4\") == -1\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 3\\n3 2 1') == '3 2 1 5 4'\nassert solution('5 1\\n3') == '3 2 1 5 4'\nassert solution('5 2\\n3 4') == '-1'\n\"\"\"\n\nimport collections\nimport sys\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4 \"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4 \"\nassert solution(\"5 1\\n1\") == \"1 2 3 4 5 \""
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n3 2 1\\n\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\\n\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\\n\") == \"-1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\n\nprint(solution(stdin))\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----Test----\n\n----"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3 4 1 2\"\nassert solution(\"4 1\") == \"1 3 2 4\"\nassert solution(\"4 4\") == \"4 4\"\nassert solution(\"5 3\") == \"3 4 1 2 5\"\nassert solution(\"5 1\") == \"1 3 2 4 5\"\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 3\\n2 3 1\") == \"-1\"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4\"\n\nprint(solution(\"5 3\\n3 2 1\"))\nprint(solution(\"5 3\\n2 3 1\"))\nprint(solution(\"5 2\\n3 4\"))\nprint(solution(\"5 1\\n3\"))\n\nprint(solution(stdin))\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2 1 5 4') == '3 2 1 5 4'\nassert solution('5 3 1') == '3 2 1 5 4'\nassert solution('5 2 1') == '3 2 1 5 4'\n\nassert solution('5 1 3') == '3 2 1 5 4'\nassert solution('5 2 3') == '-1'\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\nassert solution(\"4 5 3\") == \"NO\"\n\nprint(solution(\"1 7 3\"))\nprint(solution(\"10 10 0\"))\nprint(solution(\"1 -4 5\"))\nprint(solution(\"0 60 50\"))\nprint(solution(\"4 5 3\"))"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 7 3') == \"YES\"\nassert solution('10 10 0') == \"YES\"\nassert solution('1 -4 5') == \"NO\"\nassert solution('0 60 50') == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n\"\"\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 7 3\\n') == 'YES'\nassert solution('10 10 0\\n') == 'YES'\nassert solution('1 -4 5\\n') == 'NO'\nassert solution('0 60 50\\n') == 'NO'\nprint('The local tests are done. Try Solution for exercise.txt file')\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''1 7 3''') == \"YES\"\nassert solution('''1 -4 5''') == \"NO\"\nassert solution('''0 60 50''') == \"NO\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"\") == 1\nassert solution(\"(()\") == 0\nassert solution(\"((()))\") == 1\nassert solution(\"(()())\") == 1\nassert solution(\"((()))(\") == 0\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('((()))') == '0'\nassert solution('()()()(()()())') == '1'\nassert solution('(()((((()())())())()))()(((()((()())())())())()))') == '0'\nassert solution('(()(())())(((()))(()(()(())))())') == '0'\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"0\") == 0\nassert solution(\"4\") == 1\nassert solution(\"1\") == 1\nassert solution(\"3\") == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 1\nassert solution(\"1\") == 0\nassert solution(\"2\") == 0\nassert solution(\"3\") == 0\nassert solution(\"4\") == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"(()())\") == \"1\"\nassert solution(\"((()()())()())\") == \"1\"\nassert solution(\"(()())(()())\") == \"0\"\nassert solution(\"((()(()))(\") == \"0\"\nassert solution(\"(()())(((((((((((())((((((((((((())()(()(()(()(()(()(((((((((((())((((((((((((())\") == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"(()))\") == 0\nassert solution(\"()))\") == 0\nassert solution(\"()())()((()()())(())(()(()(())()))\") == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"(())((()()()))\") == \"1\"\nassert solution(\"()\") == \"1\"\nassert solution(\"(()()())\") == \"1\"\nassert solution(\"((()()()))\") == \"1\"\nassert solution(\"((()()()))(())\") == \"1\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\") == \"0\"\nassert solution(\"0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"2\\n1\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == '1'\nassert solution(\"1\") == '1'\nassert solution(\"4\") == '1'\nassert solution(\"3\") == '0'\nassert solution(\"0\") == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"(())((())()())\") == \"1\"\nassert solution(\"(()(()))\") == \"0\"\nassert solution(\"((()))\") == \"1\"\nassert solution
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10 5 3') == 3\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3\n\n\n\"\"\""
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('10 5 3') == 3\nassert solution('10 5 7') == 5\nassert solution('10 5 12') == 3\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 7 4\") == \"0\""
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\"\"\"\n\nimport sys\nimport os\nimport math\nimport time\nimport random"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n\"\"\""
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(str = \"abc\") == \"abdc\"\nprint(solution(stdin))\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\n\"\"\"\n\nstdin = input()\nprint(stdin[0]+stdin[1::2])\nprint(stdin[-1]+stdin[-2::-2])\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\nassert solution('cadb') == 'acbd'\nassert solution('cdba') == 'bdac'\nassert solution('bcda') == 'bdca'\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\n\n\"\"\"\n\nimport collections\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n\"\"\"\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\n\nInput\nabc\n\nOutput\nabc\n\nInput\nabcd\n\nOutput\nabcd\n\nInput\naba\n\nOutput\nababa\n\nInput\nbcba\n\nOutput\nbcbaa\n\nInput\na\n\nOutput\na\n\n\"\"\"\ns = input()\nt = s[1:]\nu = t[:-1]\nprint(s[0] + u)\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"aa\") == \"aaa\"\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"acdb\") == \"abdc\"\nassert solution(\"cab\") == \"abc\"\nassert solution(\"\") == \"\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4\\n10 2\\n20 2\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n0\\n1\\n0\\n\") == \"NO\"\nassert solution(\"3\\n2\\n10 2\\n20 2\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2\\n0\\n0\\n0\\n0\") == \"YES\"\nassert solution(\"4\\n2\\n0\\n0\\n1\\n0\") == \"NO\"\nassert solution(\"4\\n1\\n0\\n0\\n0\\n0\") == \"NO\"\nassert solution(\"3\\n1\\n0\\n0\") == \"NO\"\nassert solution(\"3\\n0\\n0\\n0\") == \"YES\"\n\n\"\"\"\nimport sys\nfrom collections import deque\n\nT = int(sys.stdin.readline())\n\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    play_count, clear_count = 0, 0\n    queue = deque()\n    for _ in range(n):\n        count, played = map(int, sys.stdin.readline().split())\n        play_count += played\n        clear_count += count\n        queue.append((count, played))\n\n    if play_count!= clear_count:\n        print(\"NO\")\n        continue\n\n    queue = sorted(queue)\n    moves = 0\n    for count, played in queue:\n        if count < played:\n            moves += played - count\n        else:\n            break\n\n    print(\"YES\" if moves == 0 else \"NO\")\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n0 1\\n0 1\\n\") == \"YES\"\nassert solution(\"3\\n2\\n0 1\\n1 1\\n\") == \"NO\"\nassert solution(\"1\\n1\\n0 0\\n\") == \"YES\"\nassert solution(\"2\\n3\\n0 0\\n0 1\\n0 1\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'NO'\nassert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == 'YES'"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n1 0\\n1 0\") == 'NO'\nassert solution(\"1\\n2\\n1 1\") == 'YES'\nassert solution(\"1\\n2\\n3\") == 'NO'\nassert solution(\"1\\n2\\n4\") == 'NO'\nassert solution(\"2\\n3\\n4 0\\n4 0\") == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n2') == 'NO'\nassert solution('2\\n1\\n2\\n2') == 'NO'\nassert solution('2\\n4\\n4\\n4') == 'YES'\nassert solution('3\\n5\\n5\\n5') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2\\n1\\n2\\n\") == \"NO\"\nassert solution(\"4\\n2\\n2\\n1\\n\") == \"NO\"\nassert solution(\"3\\n2\\n1\\n2\\n\") == \"YES\"\nassert solution(\"3\\n1\\n1\\n1\\n\") == \"YES\"\nassert solution(\"3\\n2\\n2\\n2\\n\") == \"YES\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3\\n3\\n1 3') == 'NO'\nassert solution('3\\n1 1\\n2 2\\n3\\n3\\n1 2') == 'YES'\nassert solution('3\\n1 1\\n2 2\\n3\\n3\\n1 3') == 'NO'\nassert solution('3\\n1 1\\n2 2\\n3\\n3\\n1 3') == 'YES'\nassert solution('6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3') == 'NO'\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"13:31\") == \"0\"\nassert solution(\"05:39\") == \"11\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('13:31') == '0'\nassert solution('05:39') == '11'\nassert solution('23:59') == '1'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('05:39') == 11\nassert solution('13:31') == 0\nassert solution('23:59') == 1\n\nprint(solution('05:39'))\nprint(solution('13:31'))\nprint(solution('23:59'))\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n\"\"\""
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n\n\n\n----\n\nimport string\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n\"\"\"\n\nimport sys"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(5, \"4 5 1 3 2\") == 3\nassert solution(7, \"1 6 5 3 4 7 2\") == 6\nassert solution(6, \"6 5 4 3 2 1\") == 5\nassert solution(7, \"6 5 4 3 2 1\") == 5\nassert solution(7, \"1 6 5 3 4 7 2\") == 6\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1 3 2\") == \"3\"\nassert solution(\"7 6 5 4 3 2 1\") == \"6\"\nassert solution(\"6 5 4 3 2 1\") == \"5\"\n\n####################################################\n\nimport sys\nfrom collections import defaultdict\nfrom typing import Dict, List\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 6 5 4 3 2 1') == '5'\nassert solution('6 5 4 3 2 1') == '5'\n\"\"\""
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 5 1 3 2') == 3\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 5 1 3 2\") == \"3\"\nassert solution(\"6 5 4 3 2 1\") == \"5\"\nassert solution(\"6 7 5 4 3 2 1\") == \"6\"\nassert solution(\"7 6 5 4 3 2 1\") == \"5\"\nassert solution(\"7 1 6 5 4 3 2\") == \"5\"\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 6 5 4 3 2 1') == '5'\nassert solution('6 5 4 3 2 1') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\"\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(test_input) == expected_result\nprint(solution(input))\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"Ss\") == \"TAK\"\nassert solution(\"Ss
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\nassert solution('VVO') == 'NIE'\n\n\"\"\""
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\"\"\""
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(s=\"aa\") == \"NIE\"\nassert solution(s=\"aba\") == \"TAK\"\nassert solution(s=\"xaxa\") == \"NIE\"\nassert solution(s=\"aba\") == \"TAK\"\nassert solution(s=\"xaxa\") == \"NIE\"\n\n---"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n\"\"\"\n\ns = input()"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n\"\"\"\n\nimport math\nimport time\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(123) == '213'\nassert solution(222) == '132'\nassert solution(3921) == '9321'\nassert solution(10000) == '9910'\n\n\"\"\"\nimport itertools"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('123', '222') == '213'\nassert solution('3921', '10000') == '9321'\nassert solution('4940', '5000') == '4940'\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('123') == '321'\nassert solution('3921') == '9321'\nassert solution('4940') == '4940'\n\"\"\"\n\nimport itertools\n\nclass Solution:\n    def largest_per(self, a: str, b: str) -> str:\n        # Create permutations\n        # Join together to make the largest possible number\n        return max(itertools.permutations(a), key=lambda x: int(''.join(x)))[0]\n\na = '123'\nb = '222'\nprint(solution(a, b))\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"213\"\nassert solution(\"222\") == \"123\"\nassert solution(\"3921\") == \"9321\"\nassert solution(\"4940\") == \"4940\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('123', '222') == '213'\nassert solution('3921', '10000') == '9321'\nassert solution('4940', '5000') == '4940'\n\nprint('all tests passed')\n\"\"\""
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\n\"\"\"\nimport collections\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n\"\"\""
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"321\"\nassert solution(\"222\") == \"222\"\nassert solution(\"3921\") == \"9321\"\nassert solution(\"4940\") == \"4940\"\nassert solution(\"5349\") == \"5349\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"NO\""
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == 'YES'\nassert solution('XXOXXOXXO') == 'NO'\nassert solution('XOOOXXO.O') == 'YES'\nassert solution('XO.XOOOOO') == 'NO'\nassert solution('XXXXO.O') == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('XXOXX.....') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('.XX.....') == 'YES'\nassert solution('..OO......') == 'NO'\nassert solution('....X..X.') == 'YES'\nassert solution('O.O.X....X') == 'YES'\nassert solution('X.X.XXO.O.') == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"XX.XX.....O\") == \"YES\"\nassert solution(\"XXOXX.O...\") == \"NO\"\nassert solution(\"OO..XOOO....XOO\") == \"YES\"\nassert solution(\"OXOX.XO.OXOOO...\") == \"NO\"\nassert solution(\"OOOOXO....XOO\") == \"YES\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\"\n\nprint('Success')\n\n---------------------------------------------------------------------------------------------"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"XXOXX....\") == \"YES\"\nassert solution(\"XOX.......\") == \"NO\"\nassert solution(\"X.XX.......\") == \"YES\"\nassert solution(\"..XXO..X...\") == \"YES\"\nassert solution(\"..XXO..X....\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('OO.O......') == 'NO'\nassert solution('XOX....O.') == 'YES'\nassert solution('XOX..XO...') == 'NO'\nassert solution('..XX.....') == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"XX.XXO.XO.XO.X.OXOXX\") == \"YES\"\nassert solution(\"....OX.....O....OX\") == \"YES\"\nassert solution(\".........\") == \"YES\"\nassert solution(\"XXXXXXXXXX\") == \"NO\"\nassert solution(\"XXX.X.X.X.X.X.XO.X\") == \"NO\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n\"\"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\n\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution('2 5') == '-1'\n\nassert solution('3 5') == '-1'\n\nassert solution('2 1') == '1 0\\n0 0'"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 0\\n0 0\\n0 0\\n0 0\") == \"1 0 0 0 0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n0 1\\n0 0\") == \"1 0 0 0 0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n0 0\\n0 0\") == \"1 0 0 0 0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n0 0\\n0 1\") == \"-1\"\nassert solution(\"3 2\\n1 0\\n0 0\\n0 1\\n0 1\") == \"1 0 0 0 0\"\n\n\"\"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\") == \"3 4 0 0\""
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\nassert solution('5 3') == '-1'\nassert solution('7 2') == '-1'\n\nprint('All tests passed.')\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('2 5') == '-1'\nassert solution('3 4') == '1 0 0\\n0 1 0\\n0 0 1'\n\n\"\"\""
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('2 5') == '-1'\n\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1 0\\n0 0\"\nassert solution(\"3 2\") == \"1 0 0\\n0 1 0\\n0 0 0\"\nassert solution(\"2 5\") == \"-1\"\nassert solution(\"3 2\") == \"1 0 0\\n0 1 0\\n0 0 0\"\nassert solution(\"3 3\") == \"1 1 1\\n0 0 0\\n0 0 0\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\n\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution('2 5') == '-1'\n\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''2 1\n\nOutput\n1 0 \n0 0 ''') == '''1 0 \n0 0 ''','solution without spaces'\nassert solution('''3 2\n\nOutput\n1 0 0 \n0 1 0 \n0 0 0 \n\nInput\n1 2\n\nOutput\n1 0 \n0 0 \n\nInput\n3 5\n\nOutput\n1 0 0 0 \n0 1 0 0 \n0 0 0 0 \n\nInput\n4 2\n\nOutput\n1 1 1 1 \n1 0 0 0 \n0 0 0 0 \n1 1 1 1 ''') == '''1 0 0 1 \n1 1 0 0 \n0 0 0 0 \n1 1 1 1'''\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '3^2^1'\nassert solution('1.1 3.4 2.5') == '3^2^1'\nassert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('1.1 3.4 2.5') == 'z^y^x'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"(x^y)^z\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n'1.1 3.4 2.5'\n) == 'z^y^x'\n\n\"\"\"\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1.1 3.4 2.5') == \"z^y^x\"\nassert solution('2.0 2.0 2.0') == \"x^y^z\"\nassert solution('1.9 1.8 1.7') == \"((x^y)^z)\"\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    solution('1.1 3.4 2.5')\n    == 'z^y^x'\n    , '1.1 3.4 2.5'\n    )\n\nassert solution(\n    solution('2.0 2.0 2.0')\n    == 'x^y^z'\n    , '2.0 2.0 2.0'\n    )\n\nassert solution(\n    solution('1.9 1.8 1.7')\n    == '(x^y)^z'\n    , '1.9 1.8 1.7'\n    )\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\".1 3.4 2.5\") == \"z^y^x\"\nassert solution(\".2.2.2\") == \"x^y^z\"\nassert solution(\".1.1.1\") == \"((x^y)^z)\"\nassert solution(\".9.9.9\") == \"(((x^y)^z)^(x^z)^y)^x\"\n\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == 'x^y^z'\nassert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"((x^y))^z\"\n\nprint(solution(\"1.1 3.4 2.5\")) # \"z^y^x\"\nprint(solution(\"2.0 2.0 2.0\")) # \"x^y^z\"\nprint(solution(\"1.9 1.8 1.7\")) # \"((x^y))^z\"\n\"\"\"\n\nimport numpy\n\nlist = input().split()\nlist = list[0:3]\nlist = [float(i) for i in list]\nprint(numpy.max(list))\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\nprint('All tests passed.')\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"aaaaaaaa\") == 4\nassert solution(\"a\") == 0\n\nassert solution(\"aab\") == 1\nassert solution(\"ab\") == 1\nassert solution(\"b\") == 0"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 4\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 4\n\"\"\"\n\nimport sys"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 4\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"abcabca\") == 5\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 8\n\"\"\"\n\nn = int(input())\ns = input()"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 8\n\n\"\"\"\nimport time\nimport random"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 4\n\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('abcdefgh') == 8\n\nassert solution('a') == 1\nassert solution('aa') == 1\nassert solution('ab') == 2\nassert solution('abc') == 3\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('abcabca') == 5\nassert solution('aaaaaaaa') == 4\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n\"\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\") == \"4\"\nassert solution(\"2\\n1 0\\n2 1\") == \"3\"\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n\"\nassert solution(\"5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 111 4\\nmove 11111 3\\nmove 111 4\\n\"\nassert solution(\"1\\n0 0\") == \"1\\nmove 1 1\\n\"\nassert solution(\"5\\n01 0\\n111 1\\n1111 1\\n11111 1\\n111111 1\\n11111111 1\\n1111111111 1\\n11111111111 1\\n111111111111 1\\n1111111111111 1\\n11111111111111 1\\n1111111111111 1\\n1111111111111 1\\n1111111111111 1\\n1111111111111111 1\\n11111111111111111111 1\\n111111111111111111111111 1\\n111111111111111111111111 1\\n1111111111111111111111111 1\\n1111111111111111111111111 1\\n1111111111111111111111111 1\\n1111111111111111111111111 1\\n1111111111111111111111111 1\\n111111111111111111111111 1\\n1111111111111111111111111111 1\\n111111111111111111111111111111111111 1\\n11111111111111111111111111111111111111111 1\\n111111111111111111111111111111111111111111111111 1\\n11111111111111111111111111111111111111111111111111111 1\\n
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 0\\n2 1\\n3 0\\n4 1\\n5 0\\n6 1\\n7 0\\n8 1\\n9 0\\n10 1\\n\") == \"4\\nmove 1 3\\nmove 2 4\\nmove 3 2\\nmove 4 5\\nmove 5 6\\nmove 6 7\\nmove 7 8\\nmove 8 9\\nmove 9 10\\n\"\nassert solution(\"3\\n1 0\\n2 0\\n3 1\\n\") == \"3\\nmove 1 3\\nmove 2 3\\nmove 3 2\\n\"\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == '4\\nmove 1 3\\nmove 11 1\\nmove 1111 2\\nmove 111 4'\nassert solution(\"2\\n1 0\\n2 1\") == '3\\nmove 1 3'\n\n'''\n\nfrom collections import Counter\n\nclass Solution:\n    def __init__(self):\n        self.n = Counter()\n        self.moves = []\n\n    def solution(self, filename):\n        n = int(filename[0])\n        self.n.update(Counter(filename[1:]))\n        self.examples_counter = self.n.copy()\n        self.tests_counter = self.n.copy()\n        self.examples_counter.pop('0', None)\n        self.tests_counter.pop('0', None)\n        print(self.examples_counter, self.tests_counter)\n        print(self.n)\n        self.example_keys = sorted(list(self.examples_counter.keys()))\n        self.test_keys = sorted(list(self.tests_counter.keys()))\n        self.min_moves = self.examples_counter[self.example_keys[0]] + 1\n        for k, v in zip(self.example_keys, self.examples_counter.values()):\n            self.min_moves += v\n            self.moves.append('move {0} {1}'.format(k, self.min_moves))\n\n        for k, v in zip(self.test_keys, self.tests_counter.values()):\n            self.min_moves += v\n            self.moves.append('move {0} {1}'.format(k, self.min_moves))\n\n        print(self.moves)\n        return self.min_moves\n\n\n\ns = Solution()\n\nassert s.solution(\"5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == '4\\nmove 1 3\\nmove 11 1\\nmove 1111 2\\nmove 111 4'\nassert s.solution(\"2\\n1 0\\n2 1\") == '3\\nmove 1 3'\n\nassert s.solution(\"5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == '4\\nmove 1 3\\nmove 11 1\\nmove 1111 2\\nmove 111 4'\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\"\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n\"\n\nassert solution(\"5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 111 4\\nmove 1111 3\\nmove 11111 2\\n\"\nassert solution(\"2\\n1 0\\n11 1\\n\") == \"3\\nmove 1 3\\nmove 11 1\\nmove 3 2\\n\"\n\"\"\"\n\nfrom collections import defaultdict, OrderedDict\nimport re"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == \"4\\nmove 1 3\\nmove 11 1\\nmove 111 1\\nmove 11111 2\"\nassert solution(\"2\\n1 0\\n2 1\") == \"3\\nmove 1 3\"\nassert solution(\"1\\n1 0\") == \"2\\nmove 1 3\"\nassert solution(\"5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == \"4\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 11111 2\"\nassert solution(\"2\\n1 0\\n2 1\") == \"3\\nmove 1 3\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\"\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List\nfrom copy import deepcopy\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\nassert solution(\"111000\") == \"1\""
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('111111') == '0'\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"111000\") == 1\nassert solution(\"123456\") == 2\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"112233\") == 0\nassert solution(\"111122\") == 1\nassert solution(\"111000\") == 1\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('111000') == 1\nassert solution('123456') == 2\nassert solution('000000') == 0\nassert solution('711010') == 2\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"000000\") == '0'\nassert solution(\"123456\") == '2'\nassert solution(\"111000\") == '1'\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"111000\") == 1\nassert solution(\"123456\") == 2\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"111123\") == 1\nassert solution(\"111111\") == 0\nassert solution(\"123412\") == 0\nassert solution(\"123456\") == 2\nassert solution(\"1111\") == 1\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(5, 2) == 2\nassert solution(5, 3) == 2\nassert solution(5, 4) == 3\nassert solution(5, 5) == 1\nassert solution(5, 6) == 3\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == 3\n\"\"\"\n\n\"\"\"\nimport gcd"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_result\n\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\n\n\"\"\"\n\nimport gcd\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\n\nprint('The local tests are done. Click on \"Check\" for more details about case #1.')\nprint('Input:')\nprint('')\nprint('4 3')\nprint('')\nprint('Output:')\nprint('')\nprint('3')\nprint('')\nprint('Case #1: Ok')\nprint('')\nprint('Input:')\nprint('')\nprint('5 2')\nprint('')\nprint('Output:')\nprint('')\nprint('2')\nprint('')\nprint('Case #2: Ok')\nprint('')\n\nprint('More details:')\nprint('Input:')\nprint('')\nprint('5 2')\nprint('')\nprint('Output:')\nprint('')\nprint('2')\nprint('')\nprint('Explanation:')\nprint('')\nprint('In the first example you can, for example, put traps in rooms $0$, $2$, $3$. If the $x$-mouse starts in one of these rooms it will be caught immediately. If $x$-mouse starts in the $1$-st rooms then it will move to the room $3$, where it will be caught.')\nprint('')\nprint('In the second example you can put one trap in room $0$ and one trap in any other room since $x$-mouse will visit all rooms $1..m-1$ if it will start in any of these rooms.')\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\""
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\nassert solution('''5 3''') == '2'\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"4 3\") == \"23 128\"\n\n\"\"\"\nimport math\nimport gmpy2\n"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\n\nl = k - 1"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"23 128\"\n\"\"\"\nfrom math import gcd"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n\"\"\""
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1 8'\n\"\"\"\nfrom math import gcd"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n\"\"\""
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"1 8\"\n\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1 1\"\nassert solution(\"3 2\") == \"1 8\"\nassert solution(\"4 3\") == \"23 128\"\n\"\"\"\n\nimport sys\nimport itertools"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10000 South\\n10000 East\\n10000 North\\n10000 West\\n5\\n10000 South\\n10000 East\\n10000 North\\n10000 West\\n10000 South\\n10000 East\\n10000 North\\n\") == \"YES\"\nassert solution(\"2\\n10 South\\n10 North\\n5\\n10 South\\n10 North\\n\") == \"NO\"\nassert solution(\"5\\n1000 South\\n1000 North\\n10000 West\\n10000 East\\n1000 South\\n1000 North\\n\") == \"YES\"\nassert solution(\"2\\n10 South\\n10 North\\n5\\n10 South\\n10 North\\n\") == \"NO\"\nassert solution(\"4\\n5000 South\\n5000 North\\n15000 South\\n15000 North\\n\") == \"YES\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\n\"\"\""
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\\n\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\\n\") == \"NO\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\\n\") == \"NO\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\\n\") == \"YES\"\n\nassert solution(\"2\\n10 East\\n10 South\\n\") == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == 'YES'\nassert solution(\"2\\n15000 South\\n4000 East\") == 'NO'\nassert solution(\"5\\n20000 South\\n1000 North\\n20000 North\") == 'YES'\n\"\"\"\n\nimport sys\n\nimport itertools\n\nassert sys.version_info >= (3, 7)  # make sure we have Python 3.7+\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''\n7\n20000 South\n10000 East\n20000 North\n''') == \"YES\"\nassert solution('''\n7\n20000 South\n10000 East\n20000 North\n''') == \"NO\"\nassert solution('''\n7\n20000 South\n10000 East\n20000 North\n''') == \"YES\"\nassert solution('''\n7\n20000 South\n10000 East\n20000 North\n''') == \"YES\"\nassert solution('''\n7\n20000 South\n10000 East\n20000 North\n''') == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"15000 South\\n10000 East\") == \"YES\"\nassert solution(\"15000 South\\n10000 West\") == \"NO\"\nassert solution(\"20000 South\\n1000 North\") == \"YES\"\nassert solution(\"20000 South\\n1000 South\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\nassert solution(\"5\\n20000 South\\n1000 North\\n20000 North\") == \"YES\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\") == \"YES\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\") == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\n\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\n\n\n\nhttps://app.codility.com/demo/results/trainingR59GQ5-SJ3/\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\n\"\"\"\n\na, b, a1, b1, l, r = map(int, input().split())"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3 0 6 17\") == \"2\"\nassert solution(\"2 0 3 3 5 21\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n\n\"\"\"\n\nfrom __future__ import annotations\n\nimport re\nfrom dataclasses import dataclass\nfrom typing import Dict, Generator, List, Optional, Set, Union\n\n\n@dataclass\nclass Range:\n    start: int\n    end: int\n\n    def __init__(self, start: int, end: int) -> None:\n        self.start = start\n        self.end = end\n\n    @staticmethod\n    def from_string(string: str) -> Range:\n        numbers = list(map(int, re.findall(r\"\\d+\", string)))\n\n        return Range(*numbers)\n\n    @staticmethod\n    def from_ranges(ranges: List[str]) -> Generator[Range, None, None]:\n        for range_str in ranges:\n            yield Range.from_string(range_str)\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\n\n-----Hint-----\n\nThe task can be solved in O(L + R) time.\n\n\"\"\""
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3 0 6 17\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == ''\n\"\"\""
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3 0 6 17\") == \"2\"\nassert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"0 0 0 1 1 1\") == \"1\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 4 3 0 6 17\") == 2\nassert solution(\"2 4 3 0 6 3\") == 1\nassert solution(\"2 4 3 0 6 2\") == 0\nassert solution(\"2 4 3 0 6 1\") == 0\nassert solution(\"2 4 3 0 6 1\") == 0\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == '1'\nassert solution('''4 7 10''') == '3'"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 7 10\") == \"3\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 5\") == \"1\"\nassert solution(\"10 10 3\") == \"2\"\n\"\"\"\nimport sys"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == '1'\nassert solution(\"4 7 10\") == '3'\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 7 10') == '3'\nassert solution('7 7 10') == '2'\nassert solution('7 7 10') == '2'\nassert solution('7 7 10') == '2'\nassert solution('7 7 10') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 7 10') == '3'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 7 10') == '3'\n\nassert solution('5 2 3') == '1'\n\nassert solution('7 5 5') == '1'\n\nassert solution('5 6 2') == '2'\n\nassert solution('4 5 7') == '3'"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\""
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nRRR\\nRBR\\nRBR\") == \"YES\"\nassert solution(\"3 3\\nRRR\\nRBB\\nRBR\") == \"NO\"\n\nassert solution(\"3 3\\nRRR\\nRRR\\nRBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRBBB\\nRBBB\\nRRRR\") == \"YES\"\nassert solution(\"4 4\\nRRRR\\nRBBB\\nRBBB\\nRRRR\") == \"YES\"\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nBRG\\nBRG\\nBRG\\nBRG\") == \"YES\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\nassert solution(\"4 4\\nGGGG\\nGGGG\\nBBBB\\nGGGG\") == \"YES\""
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nBRG\\nBRG\\nBRG\\nBRG\") == \"YES\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\nprint(\"Well done!\")\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 4\\n'\n    'RRRR\\n'\n    'RRRR\\n'\n    'BBBB\\n'\n    'GGGG') == 'YES'\nassert solution('6 5\\n'\n    'RRRRR\\n'\n    'RRRRR\\n'\n    'BBBBB\\n'\n    'BBBBB\\n'\n    'GGGGG\\n'\n    'GGGGG') == 'NO'\nassert solution('6 7\\n'\n    'RRRGGGG\\n'\n    'RRRGGGG\\n'\n    'RRRGGGG\\n'\n    'RRRBBBB\\n'\n    'RRRBBBB\\n'\n    'RRRBBBB\\n') == 'NO'\nassert solution('4 3\\n'\n    'RRR\\n'\n    'RRR\\n'\n    'BBB\\n'\n    'BBB\\n') == 'YES'\nassert solution('6 5\\n'\n    'RRRRR\\n'\n    'RRRRR\\n'\n    'BBBBB\\n'\n    'BBBBB\\n'\n    'GGGGG\\n'\n    'GGGGG') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n\" + \\\n        \"RRRRR\\n\" + \\\n        \"RRRRR\\n\" + \\\n        \"BBBBB\\n\" + \\\n        \"BBBBB\\n\" + \\\n        \"GGGGG\\n\" + \\\n        \"GGGGG\") == \"YES\"\nassert solution(\"4 3\\n\" + \\\n        \"RRR\\n\" + \\\n        \"RRR\\n\" + \\\n        \"RRR\\n\" + \\\n        \"RRR\\n\" + \\\n        \"BBBB\\n\" + \\\n        \"GGGG\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\n\n\"\"\"\nimport os\nimport sys"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n') == 'YES'\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n') == 'NO'\nassert solution('4 3\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n') == 'NO'\n\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n4 3\nRRRR\nRRRR\nBBBB\nGGGG\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n\"\"\") == \"NO\"\n\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nRRR\\nRRR\\nBBB\\nBBB\") == \"YES\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\n\"\"\"\nimport numpy as np"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG') == 'NO'\nassert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG') == 'YES'\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB') == 'NO'\nassert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG') == 'YES'\nassert solution('4 4\\nRRRR\\nRRRR\\nGGGG\\nBBBB') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3\\n') == '-2 0'\nassert solution('7\\n') == '3 2'\nassert solution('23\\n') == '0 1'\nassert solution('100\\n') == '0 0'\nassert solution('142\\n') == '5 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"-2 0\"\nassert solution(\"7\") == \"3 2\"\nassert solution(\"11\") == \"3 2\"\n\n\"\"\"\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0 -2\"\nprint(solution(\"3\"))"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\n\"\"\"\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''3''') == '-2 0'\nassert solution('''7''') == '3 2'\n\n'''\n\u0415\u0441\u043b\u0438 \u0432\u044b\u043f\u0438\u0441\u0430\u0442\u044c \u0432\u0441\u0435 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 10, \u043a\u0440\u0430\u0442\u043d\u044b\u0435 3 \u0438\u043b\u0438 5, \u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043c 3, 5, 6 \u0438 9. \u0421\u0443\u043c\u043c\u0430 \u044d\u0442\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u0440\u0430\u0432\u043d\u0430 23.\n\n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0443 \u0432\u0441\u0435\u0445 \u0447\u0438\u0441\u0435\u043b \u043c\u0435\u043d\u044c\u0448\u0435 1000, \u043a\u0440\u0430\u0442\u043d\u044b\u0445 3 \u0438\u043b\u0438 5.\n'''\n\nprint(sum([x for x in range(1000) if (x % 3 == 0) or (x % 5 == 0)]))\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '-2 0'\nassert solution('7\\n') == '3 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3') == '-2 0'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"-2 0\"\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 1\"\nassert solution(\"3 3\") == \"0 0\"\nassert solution(\"5 5\") == \"2 2\"\nassert solution(\"7 5\") == \"3 0\"\n\"\"\""
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '-2 0'\nassert solution('7\\n') == '3 2'\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\"\n\nimport re\n\na, b, c = map(int, input().split())\nprint('Yes' if a * b == c * b else 'No')\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\n\"\"\"\n\n\"\"\"\nSample Tests\n1. Test that dice rolls have only the number of sides they should.\n    - If there is no negative value it should be the sum of all the values.\n    - Otherwise it should be the sum of non-negative values.\n2. Test that the sum of the roll is equal to the value of the die.\n    - The die value should be between 1 and the sum of the values.\n3. Test that the number of rolls is equal to the number of sides.\n    - The number of sides should be between 1 and the total value of the die.\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\"\nimport itertools\nfrom collections import Counter"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\"\n\nimport sys\nimport os\nfrom functools import reduce\nfrom operator import mul\n\nfrom collections import Counter"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"4 6 15\") == \"No\"\nassert solution(\"6 11 6\") == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(3, 2, 7) == 'Yes'\nassert solution(4, 6, 15) == 'No'\nassert solution(6, 11, 6) == 'Yes'\n\"\"\""
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\nprint(\"PASSED\")\n\n\n'''\nimport sys\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 8\\n2 4 6\\n1 5 7') == 'YES'\nassert solution('2 8\\n1 3 5 7') == 'YES'\nassert solution('2 8\\n1 3 5 6') == 'NO'\nassert solution('1 3\\n1 2') == 'NO'\nassert solution('2 6\\n1 3 5 7') == 'YES'\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 9\\n2 3 5 8\\n0 1 3 6') == 'YES'\n\n-----\n\n\u041a\u0430\u043a \u0438 \u0432 \u043b\u0435\u043a\u0446\u0438\u0438, \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u0440\u0443\u0433\u043e\u0432\u044b\u0445 \u0442\u0440\u0435\u043a\u043e\u0432 \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u043a\u043e\u043d\u0441\u0435\u0440\u0432\u0430\u0446\u0438\u044f \u0431\u044b\u043b\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430. \u041d\u0443\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a\u0438 \u0440\u0435\u0448\u0438\u043b\u0438 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0445\u043e\u0434 \u043f\u043e \u043a\u0440\u0443\u0433\u0443. \u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u0432\u0430 \u0438\u0433\u0440\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0442\u0440\u0435\u043a\u043e\u0432 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043b\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043d\u0441\u0435\u0440\u0432\u0430\u0446\u0438\u0438.\n\n\u0415\u0441\u0442\u044c \u0434\u0432\u0435 \u043a\u0440\u0443\u0433\u043e\u0432\u044b\u0435 \u0442\u0440\u0435\u043a\u0438 \u0434\u043b\u0438\u043d\u043e\u0439 L. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0437 n \u043f\u0440\u0435\u043f\u044f\u0442\u0441\u0442\u0432\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0435\u043d\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044e \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430. \n\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0432\u043e\u0438\u0445 \u0441\u0442\u0430\u0440\u0442\u043e\u0432 \u0438 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u0434\u043e \u043f\u0440\u0435\u043f\u044f\u0442\u0441\u0442\u0432\u0438\u0439 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0438\u0436\u0435. \u0418\u0433\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442 \u043f\u043e\u0445\u043e\u0434 \u0432 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0438.\n\n\u041e\u0434\u043d\u0430\u043a\u043e \u043e\u043d\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u043f\u043e\u0445\u043e\u0434 \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0436\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438, \u043a\u0430\u043a \u0438 \u0438\u0433\u0440\u043e\u043a\u0438 \u0432 \u0432\u044b\u0441\u0448\u0435\u0439 \u043a\u0430\u0444\u0435\u0434\u0440\u0435.\n\n\u0421\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u043f\u043e\u0445\u043e\u0434 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043e\u0431\u0435 \u0438\u0433\u0440\u043e\u043a\u0438 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0445\u043e\u0434\u043e\u0432. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0434\u0432\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0438\u0433\u0440\u043e\u043a\u0430 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0445\u043e\u0434\u043e\u0432 \u0438 \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0438 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u044e\u0442\u0441\u044f \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0445\u043e\u0434\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u0440\u0435\u043f\u044f\u0442\u0441\u0442\u0432\u0438\u044e \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n\n\n-----Input-----\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n (1 \u2264 n \u2264 50) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u043f\u044f\u0442\u0441\u0442\u0432\u0438\u0439 \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u0440\u0443\u0433\u043e\u0432\u043e\u043c \u0442\u0440\u0435\u043a\u0435. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b n \u0447\u0438\u0441\u0435\u043b \u2014"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('3\\n9\\n0 1 3 6') == 'YES'\nassert solution('3\\n9\\n0 1 3 6\\n0 1 3 6') == 'YES'\nassert solution('2\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''\n3 8\n2 4 6\n1 5 7\n''') == 'YES'\n\nassert solution('''\n4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\n\nassert solution('''\n2 4\n1 3\n1 2\n''') == 'NO'\n\nassert solution('''\n1 1\n1\n''') == 'NO'\n\nassert solution('''\n3 8\n2 4 6\n2 5 7\n''') == 'YES'"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n1 3\\n1 2\") == \"YES\"\nassert solution(\"3 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"1 1\\n1\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6') == 'YES'\nassert solution('2 4\\n1 3\\n1 2') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 9\\n2 3 5 8\\n0 1 3 6') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7''') == 'YES'\nassert solution('''4 9\n2 3 5 8\n0 1 3 6''') == 'YES'\nassert solution('''2 4\n1 3\n1 2''') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"uffuw\") == \"wuffuw\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"uffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\""
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"uffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n\"\"\""
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('mew') == '3'\nassert solution('wuffuw') == '5'\nassert solution('qqqqqqqq') == '0'\nassert solution('aaaaaaaa') == '0'\nassert solution('aaaaaab') == '3'\n\n\"\"\""
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('mew') == 3\nassert solution('uffuw') == 5\nassert solution('qqqqqqqq') == 0\nprint(solution(stdin))\n\n\n\"\"\"\n\nimport re\n\nstdin = input()\nnon_palindromes = []\n\nwords = stdin.split(\" \")\nfor word in words:\n    p = re.compile(r\"([a-zA-Z]+)\")\n    res = p.findall(word)\n    non_palindromes.append(res[0])\n    res = p.sub(r\"\\1\", word)\n    print(res)\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"uffuw\") == \"mew\"\nassert solution(\"qqqqqqqq\") == \"0\"\nassert solution(\"abcdedcba\") == \"abcdedcba\"\nassert solution(\"abb\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"uffuw\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('mew') == '3'\nassert solution('uffuw') == '5'\nassert solution('qqqqqqqq') == '0'\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('mew') =='mew'\nassert solution('uffuw') == 'uffuw'\nassert solution('qqqqqqqq') == '0'\nassert solution('abacaba') == 'abacaba'\nassert solution('r') == 'r'\n"
    }
]