[
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(':|:') == '-1'\nassert solution('[||:]]') == '-1'\nassert solution('[:||:||:|]') == '-1'\nassert solution('[:||:|||:]') == '3'\nassert solution('[:||:|||::]') == '4'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('][]|:') == -1\nassert solution('][:|:') == -1\nassert solution(']:[|:') == -1\nassert solution('][:|:][') == 5\nassert solution('][:|:][|') == 5\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(':||:|') == '2'\nassert solution('[::]') == '4'\nassert solution(']:[|:') == '-1'\nassert solution('|]') == '-1'\nassert solution(']:|:') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('[a:b:|]') == 4\nassert solution(']:[|:]') == -1\nassert solution('[a:b:|]') == 4\nassert solution(']:[|:]') == -1\n\"\"\""
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(':|:') == '-1'\nassert solution('[:|:]:[|:|:|]') == '6'\nassert solution('|:|:|:|:|:|:') == '-1'\nassert solution('[:||:]:[|:|:|]') == '6'\nassert solution('|:') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('][]') == -1\nassert solution('|:][') == 4\nassert solution('|:|:|:|:|:') == -1\nassert solution('|:|:|:|:|:||:|:|:|:|:') == 7\nassert solution('|||:||||||:||||||:|||||||:|||||') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == -1\nassert solution('::') == 4\nassert solution('[::]') == 4\nassert solution('[:||:]') == 6\nassert solution('[:|||:]') == 7\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('[a:b:|]') == '4'\nassert solution(']:[|:') == '-1'\nassert solution(']:[|:|:]') == '-1'\nassert solution(']:[:|:|:]') == '-1'\nassert solution(']:[:|:|:]') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"[::]\") == 4\nassert solution(\"[:|:]\") == 6\nassert solution(\"[:||:]\") == 7\nassert solution(\"[|:]\") == -1\n\nassert solution(\"[|:][|]\") == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"[:|:|]\") == 3\n\"\"\"\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n\nprint(\"Success\")\n\n\"\"\"\n\n\"\"\"\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0430 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \n\u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043d\u0443\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0447\u0438\u0441\u0435\u043b.\n\nSample Input 1:\n\n5\n-3\n8\n4\n0\nSample Output 1:\n\n14\nSample Input 2:\n\n0\nSample Output 2:\n\n0\nSample Input 3:\n\n1\nSample Output 3:\n\n1\n\"\"\"\n\nn = int(input())\ns = 0\nwhile n!= 0:\n    s += n\n    n = int(input())\nprint(s)\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('100') == '99'\nassert solution('521') == '499'\nassert solution('48') == '48'\nassert solution('10') == '10'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('521') == '499'\nassert solution('99') == '99'\nassert solution('48') == '48'"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\n\"\"\""
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(23) == 23\nassert solution(100) == 99"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n\"\"\"\n\nfrom typing import List, Dict\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n\"\"\"\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('2') == '1'\n\n\"\"\""
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"0\"\nassert solution(\"40000\") == \"100\"\nassert solution(\"5\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(4) == 1\nassert solution(201) == 99\nassert solution(4000) == 1000\n\n\n\"\"\"\n\n\nfrom math import floor\nfrom typing import Iterable\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"201\") == \"99\"\nassert solution(\"4000\") == \"1000\"\n\"\"\"\nfrom typing import List\n\nn = input().strip()\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('100') == '20'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\nprint(solution(input()))\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nprint('The local tests are done.')\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('12') == 1\nassert solution('12345') == 0\nassert solution('40000') == 9999\nassert solution('100') == 0\nassert solution('100') == 0\n\"\"\"\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 4\\n1 1\\n2 2\\n2 3\\n3 4') == '3'\nassert solution('5 4\\n1 1\\n2 2\\n2 3\\n3 4') == '2'\nassert solution('7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5') == '7'\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''\n7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n''') == '7'\nassert solution('''\n4 3\n1 1\n2 2\n2 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\") == 7\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == \"7\"\n\n\"\"\"\n\nimport sys\n\nassert sys.version_info >= (3, 7)\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 2\\n2 3\\n3 4\") == \"7\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4') == '2'\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def max_painted_sections(self, stdin: List[str]) -> str:\n        fence = [int(i) for i in stdin[0].strip().split()]\n        painters_num = fence[1]\n        if painters_num < 3:\n            return fence[0]\n        sections = [int(i) for i in stdin[1].strip().split()]\n        if sections[0] > sections[1]:\n            sections = [sections[1], sections[0]]\n        elif sections[1] > sections[0]:\n            sections = [sections[0], sections[1]]\n        painters = []\n        for i in stdin[2:]:\n            painters.append([int(j) for j in i.strip().split()])\n        painters.sort()\n        painted_sections = 0\n        for i in range(painters_num):\n            if sections[0] < painters[i][0]:\n                painters[i][0] = sections[0]\n            if sections[1] > painters[i][1]:\n                painters[i][1] = sections[1]\n            painted_sections += (painters[i][1] - painters[i][0]) + 1\n            if painted_sections > fence[0]:\n                return fence[0]\n        return painted_sections"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n') == '2'\nassert solution('4 4\\n1 1\\n2 2\\n2 3\\n3 4\\n') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n\") == 7\nassert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == 2\nassert solution(\"4 4\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == 3\n\nprint(\"Ok!\")\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u043a\u043e\u0434, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0432\u044b\u0432\u043e\u0434\u0438\u043b \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0434\u0432\u0443\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0446\u0438\u0444\u0440.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $q$, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b.\n\n\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 $q$ \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b. \u041a\u0430\u0436\u0434\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0434\u0432\u0443\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.\n\n\n-----Input-----\n\n7 3\n4 5\n\nOutput\n21\n\n-----Examples-----\nInput\n3 5\n1 2 3\n\nOutput\n6\n\nInput\n2 5\n10 20 30\n\nOutput\n200\n\nInput\n2 5\n1 2\n\nOutput\n2\n\nInput\n10 10\n2 4 6 8 10 12 14 16 18\n\nOutput\n160000\n\nInput\n3 3\n1 1\n2 2\n3 3\n\nOutput\n6\n\n-----Input-----\n\n4 5\n1 2\n2 3\n3 4\n\nOutput\n24\n\n-----Input-----\n\n4 4\n1 1\n2 2\n2 3\n3 4\n\nOutput\n24\n\n-----Input-----\n\n5 5\n1 2\n2 3\n3 4\n4 5\n5 6\n\nOutput\n120\n\n-----Input-----\n\n3 3\n1 2\n2 3\n\nOutput\n6\n\n-----Input-----\n\n4 4\n1 1\n2 2\n2 3\n3 4\n\nOutput\n12\n\nInput\n2 5\n3 5\n5 7\n\nOutput\n35\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n27\n\n-----Input-----\n\n1 3\n1 1\n\nOutput\n1\n\nInput\n2 3\n4 5\n6 7\n\nOutput\n70\n\n-----Input-----\n\n5 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n1\n\n-----Input-----\n\n2 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n1\n\nInput\n10 5\n10 9\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n\nOutput\n130600\n\n-----Input-----\n\n5 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n1\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n9\n\n-----Input-----\n\n2 4\n4 4\n\nOutput\n16\n\n-----Input-----\n\n1 1\n2 2\n\nOutput\n2\n\n-----Input-----\n\n10 5\n10 10\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n\nOutput\n130600\n\n-----Input-----\n\n1 1\n2 2\n\nOutput\n2\n\nInput\n7 5\n4 5\n4 5\n4 5\n4 5\n4 5\n4 5\n4 5\n4 5\n\nOutput\n256\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n27\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n9\n\nInput\n2 3\n3 3\n3 3\n3 3\n\nOutput\n9\n\n-----Input-----\n\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n\nOutput\n100\n\n-----Input-----\n\n1 1\n1 1\n\nOutput\n1\n\nInput\n1 1\n1 1\n\nOutput\n1\n\n-----Input-----\n\n7 5\n6 7\n6 7\n6 7\n6 7\n6 7\n6 7\n6 7\n6 7\n\nOutput\n504\n\nInput\n7 5\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n\nOutput\n49\n\n-----Input-----\n\n1 1\n1 1\n\nOutput\n1\n\nInput\n1 1\n1 1\n\nOutput\n1\n\nInput\n1 1\n1 1\n\nOutput\n1\n\nInput\n1 1\n1 1\n\nOutput\n1\n\n-----Input-----\n\n7 5\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n7 7\n\nOutput\n343\n\nInput\n7 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n7*7*7*7\n\n-----Input-----\n\n2 3\n3 3\n3 3\n3 3\n\nOutput\n81\n\n-----Input-----\n\n2 3\n3 3\n3 3\n3 3\n\nOutput\n81\n\n-----Input-----\n\n2 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n25\n\nInput\n2 2\n3 3\n3 3\n\nOutput\n12\n\nInput\n2 5\n5 5\n5 5\n5 5\n5 5\n\nOutput\n25\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n27\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n9\n\n-----Input-----\n\n3 3\n3 3\n3 3\n3 3\n\nOutput\n9\n\nInput\n2 2\n3 3\n3 3\n\nOutput\n12\n\n-----Input-----\n\n2 4\n4 4\n\nOutput\n8\n\n-----Input-----\n\n2 5"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\n"
    },
    {
        "number": 3,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5\\n') == 7\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n') == 2\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n11 23\") == \"2\"\nassert solution(\"5\\n01 07\") == \"0\"\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(test_input_0) == test_output_0"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"11 23\") == 2\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 11\") == \"2\"\nassert solution(\"5 01\") == \"0\"\n\"\"\"\n\nfrom datetime import datetime\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n\"\"\""
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 23') == 2\nassert solution('5 01') == 0\nassert solution('5 12') == 1\n\"\"\"\n\nimport sys\nimport math\n\nx = int(sys.stdin.readline())\nh, m = map(int, sys.stdin.readline().split())\n\ncnt = 0"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(3) == 2\n\nassert solution(5) == 0\n\nassert solution('hello') == 0\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"11 23\") == 2\nassert solution(\"11 22\") == 1\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"11 23\") == \"2\"\nassert solution(\"01 07\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\""
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"6 3 1 2\") == \"0\"\n\"\"\"\n\nfrom collections import deque\n\nn, pos, l, r = map(int, input().split())\n\nqueue = deque([(n, pos)])\n\nwhile queue:\n    size, pos = queue.popleft()\n\n    if pos < l:\n        queue.append((size, pos + 1))\n    elif pos > r:\n        queue.append((size, pos - 1))\n    else:\n        print(size)\n        break\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 3 2 4\") == 5\n\n\"\"\""
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1 4\") == \"1\"\nassert solution(\"3 2 1 3\") == \"0\"\nassert solution(\"5 2 1 5\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\n\n----"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2 4\") == 5\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n\nprint(\"Test passed\")\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\""
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '2'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '3'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '-1'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11') == '2'\n\"\"\"\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '2'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '3'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '-1'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '2'\nassert solution('3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n') == '3'\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n\") == \"2\\n3\\n-1\"\n\nassert solution(\"2 10\\n1 1\\n8 2\\n3 3\\n10 1\\n4 100\\n4 2\\n\") == \"-1\"\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\") == '2'\nassert solution(\"2\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\") == '3'\nassert solution(\"1\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\") == '-1'\nassert solution(\"1\\n1 1\\n1 1\") == '-1'\n\n\"\"\"\n\nimport math\nimport sys\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 10\"\n) == \"2\"\n\nassert solution(\n    \"6 3\"\n) == \"3\"\n\nassert solution(\n    \"8 2\"\n) == \"-1\"\n\nassert solution(\n    \"1 4\"\n) == \"3\"\n\nassert solution(\n    \"4 10\"\n) == \"4\""
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11'''\n) == '2'\n\n'''\n4\n10 6\n1 1\n1 3\n1 5\n1 7\n5 10\n4 1\n2 3\n3 4\n3 5\n3 6\n5 6\n4 7\n5 7\n6 8\n7 9\n8 10\n9 11\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n110 112\n110 113\n110 114\n110 115\n110 116\n110 117\n110 118\n110 119\n110 120\n110 121\n110 122\n110 123\n110 124\n110 125\n110 126\n110 127\n110 128\n110 129\n110 130\n110 131\n110 132\n110 133\n110 134\n110 135\n110 136\n110 137\n110 138\n110 139\n110 140\n110 141\n110 142\n110 143\n110 144\n110 145\n110 146\n110 147\n110 148\n110 149\n110 150\n110 151\n110 152\n110 153\n110 154\n110 155\n110 156\n110 157\n110 158\n110 159\n110 160\n110 161\n110 162\n110 163\n110 164\n110 165\n110 166\n110 167\n110 168\n110 169\n110 170\n110 171\n110 172\n110 173\n110 174\n110 175\n110 176\n110 177\n110 178\n110 179\n110 180\n110 181\n110 182\n110 183\n110 184\n110 185\n110 186\n110 187\n110 188\n110 189\n110 190\n110 191\n110 192\n110 193\n110 194\n110 195\n110 196\n110 197\n110 198\n110 199\n110 200\n110 201\n110 202\n110 203\n110 204\n110 205\n110 206\n110 207\n110 208\n110 209\n110 210\n110 211\n110 212\n110 213\n110 214\n110 215\n110 216\n110 217\n110 218\n110 219\n110 220\n110 221\n110 222\n110 223\n110 224\n110 225\n110 226\n110 227\n110 228\n110 229\n110 230\n110 231\n110 232\n110 233\n110 234\n110 235\n110 236\n110 237\n110 238\n110 239\n110 240\n110 241\n110 242\n110 243\n110 244\n110 245\n110 246\n110 247\n110 248\n110 249\n110 250\n110 251\n110 252\n110 253\n110 254\n110 255\n110 256\n110 257\n110 258\n110 259\n110 260\n110 261\n110 262\n110 263\n110 264\n110 265\n110 266\n110 267\n110 268\n110 269\n110 270\n110 271\n110 272\n110 273\n110 274\n110 275\n110 276\n110 277\n110 278\n110 279\n110 280\n110 281\n110 282\n110 283\n110 284\n110 285\n110 286\n110 287\n110 288\n110 289\n110 290\n110 291\n110 292\n110 293\n110 294\n110 295\n110 296\n110 297\n110 298\n110 299\n110 300\n110 301\n110 302\n110 303\n110 304\n110 305\n110 306\n110 307\n110 308\n110 309\n110 310\n110 311\n110 312\n110 313\n110 314\n110 315\n110 316\n110 317\n110 318\n110 319\n110 320\n110 321\n110 322\n110 323\n110 324\n110 325\n110 326\n110 327\n110 328\n110 329\n110 330\n110 331\n110 332\n110 333\n110 334\n110 335\n110 336\n110 337\n110 338\n110 339\n110 340\n110 341\n110 342\n110 343\n110 344\n110 345\n110 346\n110 347\n110 348\n110 349\n110 350\n110 351\n110 352\n110 353\n110 354\n110 355\n110 356\n110 357\n110 358\n110 359\n110 360\n110 361\n110 362\n110 363\n110 364\n110 365\n110 366\n110 367\n110 368\n110 369\n110 370\n110 371\n110 372\n110 373\n110 374\n110 375\n110 376\n110 377\n110 378\n110 379\n110 380\n110 381\n110 382\n110 383\n110 384\n110 385\n110 386\n110 387\n110 388\n110 389\n110 390\n110 391\n110 392\n110 393\n110 394\n110 395\n110 396\n110 397\n110 398\n110 399\n110 400\n110 401\n110 402\n110 403\n110 404\n110 405\n110 406\n110 407\n110 408\n110 409\n110 410\n110 411\n110 412\n110 413\n110 414\n110 415\n110 416\n110 417\n110 418\n110 419\n110 420\n110 421\n110 422\n110 423\n110 424\n"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == '2'"
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"2\"\nassert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"3\"\nassert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"-\"\nassert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"3\""
    },
    {
        "number": 6,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\") == \"2\"\n\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('10^18 1') == '10^18'\nassert solution('1 10^18') == '10^18'\nassert solution('10^18 10^18') == '10^18'\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 2') == '4'\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"4\"\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == '4'\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(5, 2) == 4\n\"\"\""
    },
    {
        "number": 7,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''5 2''') == '4'\n\"\"\"\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1s 2s 3s\") == 0\nassert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"9m 9m 2m 9p 9s 9m\") == \"0\"\nassert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"1m 9m 9m\") == \"0\"\n\nprint(\"Success!\")\n\n\n-----#-----\n-----MEMO-----\n\n\u89e3\u9898\u7684\u601d\u8def\uff1a\n\n\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u53ea\u9700\u8981\u627e\u5230\u81f3\u5c11\u4e00\u7ec4\u6570\u5b57\uff0c\u6bcf\u7ec4\u6570\u5b57\u4e2d\u5b58\u5728\u4e24\u79cd\u6570\u5b57\uff1a\u4e00\u79cd\u4e3a\u8fde\u7eed\u7684\u4e09\u4e2a\u6570\u5b57\uff0c\u53e6\u4e00\u79cd\u4e3a\u8fde\u7eed\u7684\u4e09\u4e2a\u6570\u5b57\uff0c\u5176\u4e2d\u4e3a\u540c\u4e00\u4e2a\u82b1\u8272\u3002\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u82b1\u8272\uff0c\u4e3a\u8fde\u7eed\u7684\u4e09\u4e2a\u6570\u5b57\u3002\n\n\u9996\u5148\u9700\u8981\u786e\u5b9a\u4e24\u79cd\u6570\u5b57\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u82b1\u8272\u7684\u5173\u7cfb\u3002\u8fd9\u4e24\u4e2a\u6570\u5b57\u5b58\u5728\u82b1\u8272\u7684\u5173\u7cfb\u7684\u5b9a\u4e49\u662f\uff1a\u82e5\u4ed6\u4eec\u90fd\u5728\u540c\u4e00\u4e2a\u82b1\u8272\u4e2d\uff0c\u5219\u8ba4\u4e3a\u5b83\u4eec\u5b58\u5728\u5173\u7cfb\uff0c\u800c\u82e5\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u82b1\u8272\u4e2d\uff0c\u5219\u4e0d\u5b58\u5728\u5173\u7cfb\u3002\n\n\u82e5\u5b58\u5728\u5173\u7cfb\uff0c\u5219\u5728\u540c\u4e00\u4e2a\u82b1\u8272\u4e2d\uff0c\u5219\u4ee5\u8fd9\u4e24\u4e2a\u6570\u5b57\u4e3a\u4e2d\u5fc3\uff0c\u589e\u52a0\u4e24\u4e2a\u6570\u5b57\uff0c\u4e3a\u53f3\u8fb9\u7684\u6570\u5b57\uff0c\u5219\u53ef\u4ee5\u5efa\u7acb\u4e09\u4e2a\u6570\u5b57\u7ec4\u6210\u7684\u73a9\u5bb6\u548c\uff0c\u5176\u4ed6\u4e09\u4e2a\u6570\u5b57\u90fd\u4e0d\u53ef\u80fd\u5efa\u7acb\u73a9\u5bb6\u548c\uff1b\u82e5\u4e0d\u5b58\u5728\u5173\u7cfb\uff0c\u5219\u4e24\u4e2a\u6570\u5b57\u4e0d\u80fd\u5efa\u7acb\u73a9\u5bb6\u548c\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u6570\u5b57\u95f4\u7684\u82b1\u8272\u7684\u5173\u7cfb\uff0c\u9700\u8981\u6392\u9664\u4e00\u4e2a\u6570\u5b57\u4e0d\u53ef\u80fd\u5efa\u7acb\u73a9\u5bb6\u548c\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u79fb\u9664\u8fd9\u4e2a\u6570\u5b57\u4f7f\u5f97\u4e0d\u5b58\u5728\u73a9\u5bb6\u548c\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u56e0\u4e3a\u5efa\u7acb\u73a9\u5bb6\u548c\u7684\u6570\u5b57\u4e0d\u53ef\u80fd\u7ec4\u6210\u4e09\u4e2a\u6570\u5b57\u3002\n\n\u540c\u6837\u9700\u8981\u79fb\u9664\u4e00\u4e2a\u6570\u5b57\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u8fb9\u754c\u6761\u4ef6\uff1a\n\n1. \u82e5\u79fb\u9664\u8fd9\u4e2a\u6570\u5b57\u4e0d\u4f1a\u51fa\u73b0\u73a9\u5bb6\u548c\u7684\u60c5\u51b5\uff0c\u5219\u4e0d\u9700\u8981\u79fb\u9664\uff0c\u56e0\u4e3a\u6b64\u65f6\u53ef\u4ee5\u5efa\u7acb\u4e09\u4e2a\u6570\u5b57\u7ec4\u6210\u73a9\u5bb6\u548c\uff1b\n\n2. \u82e5\u79fb\u9664\u8fd9\u4e2a\u6570\u5b57\u65f6\u62ff\u8d70\u8fd9\u4e2a\u6570\u5b57\uff0c\u5219\u9700\u8981\u6ce8\u610f\u53ef\u80fd\u4f1a\u62ff\u8d70\u4efb\u4f55\u4e00\u79cd\u6570\u5b57\uff0c\u540c\u65f6\u8fd8\u4f1a\u56e0\u4e3a\u79fb\u9664\u6570\u5b57\u800c\u6709\u53ef\u80fd\u4e0d\u8bba\u4ec0\u4e48\u6570\u5b57\u90fd\u6ca1\u6709\u5efa\u7acb\u73a9\u5bb6\u548c\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u8fd9\u4e2a\u6570\u5b57\u4e0d\u5b58\ufffd"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1m') == 0\nassert solution('1m2m') == 0\nassert solution('1m2m3m') == 0\nassert solution('1m2m3m4m') == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\n\nsolution(\"1s 2s 3s\")\nsolution('9m 9m 9m')\nsolution('3p 9m 2p')\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"1m 2m 3m\") == 0\nassert solution(\"1s 2s 3s\") == 0\nassert solution(\"1m 2m 3m 4m 5m 6m\") == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(1s 2s 3s) == 0\nassert solution(9m 9m 9m) == 0\nassert solution(3p 9m 2p) == 1\n\"\"\"\n\nimport re\nimport sys\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\n\"\"\"\n"
    },
    {
        "number": 8,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"9m 9m 9m\") == 0\nassert solution(\"3p 9m 2p\") == 1\nassert solution(\"1s 2s 3s\") == 0\nassert solution(\"1m 2m 3m\") == 0\nassert solution(\"1p 2p 3p\") == 0\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 2\\n3 1 3 2\") == '1'\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == '2'\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == '-1'\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 1 3 2\") == \"1\"\nassert solution(\"3 2\\n1 2 1 1\") == \"2\"\nassert solution(\"2 2\\n2 1 1 1\") == \"-1\"\nassert solution(\"2 2\\n1 2 2 2\") == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 2\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"2\\n2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\") == \"-1\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == '1'\nassert solution(\"10 10\") == '2'\nassert solution(\"1 2 1 1\") == '-1'\nassert solution(\"5 5 6 5\") == '-1'\nassert solution(\"6 4 5 4\") == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 2\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\") == \"1\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"2\\n2 2\\n2 1 1 1\\n1 2 2 2\") == \"-1\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 0\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n6 4 5 4\n2 1 2 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n6 4 5 4\n2 1 2 0\n\"\"\") == \"2\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n3 2\n3 1 3 2\n1 2 2 2\"\"\") == \"1\"\nassert solution(\"\"\"3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\"\"\") == \"2\"\nassert solution(\"\"\"2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\"\"\") == \"-\"\nassert solution(\"\"\"2\n2\n1 1 1 1\n1 2 2 2\"\"\") == \"-\"\nassert solution(\"\"\"1\n2\n1 1 1 1\"\"\") == \"1\"\n\n\"\"\"\nProblem: https://www.codewars.com/kata/54eb33e5bc1a25440d000891/train/python\n\nSolution:"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\") == \"1\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2 1 1 1\\n1 2 2 2') == '1'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0') == '2'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0') == '-1'\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2') == '0 2'\n\"\"\"\n\ndays_per_year_in_mars = int(input())\n\ndays_off_per_year = days_per_year_in_mars // 5\ndays_rest = days_per_year_in_mars % 5\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\nassert solution(\"1\") == \"0 1\"\n\nassert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\"\n\n\nprint(solution(\"14\"))\nprint(solution(\"2\"))\n\n\n    \n\n    \n    \n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n\"\"\"\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('1') == '0 0'\nassert solution('15') == '4 3'\nassert solution('13') == '4 3'\n\nprint('Success')"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('3') == '0 3'\nassert solution('4') == '0 4'\nassert solution('10') == '0 10'\n"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(14) == 4, 'WA'\nassert solution(2) == 0, 'WA'\nassert solution(3) == 1, 'WA'\n\nprint('OK')\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'"
    },
    {
        "number": 10,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"14\") == \"4 4\"\n\"\"\""
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''5 2 3 12 15''') == '39'\nassert solution('''20 2 3 3 5''') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\nassert solution(\"0 1 0 0\") == \"0\"\nassert solution(\"0 1 1 1 1\") == \"0\"\nassert solution(\"5 2 3 12 15\") == \"39\"\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n\n\"\"\""
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '2'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\n\"\"\"\n\nn, a, b, p, q = [int(x) for x in stdin.split()]\n\nprint(n * (p + q))"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 2 3 12 15') == '39'\n"
    },
    {
        "number": 11,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\n\na, b, p, q = [int(num) for num in stdin.split()]\nprint(sum([1 for i in range(1, a+1) if i % a == 0]))\nprint(sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]))\nprint(sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]))\nprint(sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]))\nprint(sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i % a == 0]) + sum([1 for i in range(1, q+1) if i % b == 0]))\nprint(sum([1 for i in range(1, a+1) if i % a == 0]) + sum([1 for i in range(1, b+1) if i % b == 0]))\nprint(sum([1 for i in range(1, p+1) if i"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10GGGSGGGS\") == \"7\"\nassert solution(\"4SSS\") == \"0\"\nassert solution(\"3SSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10GGGSSSS\") == \"7\"\nassert solution(\"4GGGG\") == \"0\"\nassert solution(\"1GGG1S1GGG1\") == \"5\"\nassert solution(\"3GGSGG\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('10\\nGGGSGGSGG') == '7'\nassert solution('3\\nS') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1G1S2S2') == '4'\nassert solution('1S1G2S2S') == '4'\nassert solution('1S1G1S2S') == '3'\n\"\"\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"GGGSGGGS\") == \"7\"\nassert solution(\"GGGG\") == \"4\"\nassert solution(\"SSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('10GGGSGGS') == '7'\nassert solution('4SSS') == '0'\nassert solution('3SSS') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10\\nGGGG\\n\") == \"7\"\nassert solution(\"3\\nSSS\\n\") == \"0\""
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10GSSSSSSSSS\") == \"7\"\nassert solution(\"4SGGGG\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('GGGSSSSSSSS') == '7'\nassert solution('GGGSSS') == '4'\n\"\"\"\n"
    },
    {
        "number": 12,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10\\nGGGG\\n\") == \"7\"\nassert solution(\"4\\nGGGG\\n\") == \"4\"\nassert solution(\"3\\nSSS\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(test_data) == solution_result\n\n\"\"\"\n\nimport sys\nimport queue\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == '5\\n1 2 3 4 5'\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == '6\\n1 2 9 4 5 3'\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\") == '-1'\n\"\"\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\\n1 2 3 4 5\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5''') == '5\\n1 2 3 4 5'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2''') == '6\\n1 2 9 4 5 3'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1''') == '-1'"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\\n1 2 3 4 5\"\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == '5\\n1 2 3 4 5'\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == '6\\n1 2 9 4 5 3'\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\") == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5') == '5\\n1 2 3 4 5'\nassert solution('9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2') == '6\\n1 2 9 4 5 3'\nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\\n1 2 3 4 5 \"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == \"6\\n1 2 9 4 5 3 \"\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\") == \" -1\"\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == '5\\n1 2 3 4 5'\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\") == '6\\n1 2 9 4 5 3'\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\") == '-1'\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution_output\n\nsolution(stdin)\n\n\n'''"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"4 3\\n3 2 1\") == \"-1\"\nassert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\n\"\"\""
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 2 1 5 4', '3 2 1 5 4') == '3 2 1 5 4'\nassert solution('5 3', '3 2 1') == '3 2 1 5 4'\nassert solution('5 2', '3 4') == -1"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''5 3\n3 2 1''') == '3 2 1 5 4'\n\nassert solution('''5 1\n3''') == '3 2 1 5 4'\n\nassert solution('''5 2\n3 4''') == '-1'\n\nassert solution('''5 3\n1 1 2''') == '1 2 1 5 4'\n\nassert solution('''5 2\n1 1 2''') == '1 2 1 5 4'"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"5 3\\n2 3 1\") == \"3 2 1 5 4\""
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\") == \"-1\"\nassert solution(\"5 2\\n2 3 1\") == \"-1\"\n\n\n    "
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution([\"3\", \"1\", \"2\"]) == \"3 2 1\"\nassert solution([\"1\", \"2\", \"3\"]) == \"3 2 1\"\nassert solution([\"2\", \"3\", \"1\"]) == \"3 2 1\"\nassert solution([\"1\", \"2\", \"3\", \"4\", \"5\"]) == \"3 2 1 5 4\"\nassert solution([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]) == \"6 5 4 3 2 1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n3 2 1\\n\") == \"3 2 1 5 4\"\nassert solution(\"5 1\\n3\\n\") == \"3 2 1 5 4\"\nassert solution(\"5 2\\n3 4\\n\") == \"-1\"\n\nprint(\"All tests passed.\")\n\n---\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 3\\n3 2 1') == '3 2 1 5 4'\nassert solution('5 3\\n2 3 1') == '-1'\nassert solution('5 1\\n3') == '3 2 1 5 4'\nassert solution('5 2\\n3 4') == '-1'\nassert solution('5 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5') == '1 5 2 3 4 5'\n"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\n\n\"\"\"\n\nfrom math import factorial as f\nimport math"
    },
    {
        "number": 14,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n3 2 1\") == \"3 2 1 5 4\"\n\"\"\"\n\nimport sys\n\n\"\"\"\nOn peut enlever les 2 premiers d'abord et relancer les fonctions, les k derniers seront l\u00e0\n\"\"\"\n\n\"\"\"\n1)\non place toutes les valeurs dans l'ordre\n\n2) on utilise une liste de taille k\non parcour tout le tableau et on place les k premiers dans la liste de taille k\n\n3) on parcour le tableau \u00e0 partir de la fin jusqu'au d\u00e9but et on place la derni\u00e8re valeur de la liste dans le tableau\n\n4) on utilise une variable resultat qui repr\u00e9sente le tableau tri\u00e9 le plus compl\u00e8tement\non met \u00e0 jour resultat si le tableau est plus grand ou \u00e9gale au tableau tri\u00e9\n\n5) on place tout les \u00e9l\u00e9ments dans le tableau resultat\n\n6) on sauvegarde le tableau resultat en sortie\n\"\"\"\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n\n'''\n\na,b,c=map(int,input().split())\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('0 0 0') == 'YES'"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 7 3\") == 'YES'\nassert solution(\"10 10 0\") == 'YES'\nassert solution(\"1 -4 5\") == 'NO'\nassert solution(\"0 60 50\") == 'NO'\nprint('Passed all test cases!')\n\n'''"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\n\n\"\"\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\n\"\"\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 7 3') == \"YES\"\nassert solution('10 10 0') == \"YES\"\nassert solution('1 -4 5') == \"NO\"\nassert solution('0 60 50') == \"NO\"\n\n\nimport re\n"
    },
    {
        "number": 15,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 7 3\") == 'YES'\nassert solution(\"10 10 0\") == 'YES'\nassert solution(\"1 -4 5\") == 'NO'\nassert solution(\"0 60 50\") == 'NO'\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n4\\n3\") == \"0\"\nassert solution(\"1\\n3\\n2\\n3\") == \"0\"\nassert solution(\"1\\n3\\n1\\n4\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\") == \"1\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n3\\n\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n4\\n3\\n') == '1'\nassert solution('0\\n0\\n0\\n0\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n') == '0'\n\n\"\"\""
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\")(\") == 1\nassert solution(\"\") == 1\nassert solution(\"()\") == 1\nassert solution(\"(()\") == 0\nassert solution
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"(()())()\") == \"1\"\nassert solution(\"(())()\") == \"1\"\nassert solution(\"((()((()())())))((()()))\") == \"1\"\nassert solution(\"(()())((()()))\") == \"0\"\nassert solution(\"((()()(()()))(()))\") == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\n\nassert solution(\"3\") == \"0\"\n\nassert solution(\"0\") == \"1\"\n\nassert solution(\"1\") == \"0\"\n\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('0 0 0 0') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('2 2') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == 1\nassert solution('()') == 1\nassert solution('(())') == 1\nassert solution('()(())') == 1\nassert solution('((()))') == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('11') == '1'\nassert solution('10') == '0'\nassert solution('00') == '0'\n\nassert solution('1111') == '0'\nassert solution('10101010') == '0'\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10 5 3\") == 3\n\"\"\"\nimport collections\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3\n\n\n\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n\"\"\"\n\nimport math\n\n\nclass Solution:\n    def solve(self, stdin):\n        n, k, t = tuple(map(int, stdin.split()))\n        res = t // (n + k)\n        res += math.ceil((t - res) / (n + k))\n        return res\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 5 3\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\""
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 5 3\") == 3\nassert solution(\"10 5 7\") == 5\nassert solution(\"10 5 12\") == 3\n\"\"\"\nimport math"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\nassert solution('5 5 1') == '0'\nassert solution('5 5 2') == '1'\n"
    },
    {
        "number": 17,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10 5 3\") == 3\n\n\"\"\""
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n\"\"\"\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('cab') == 'abc'\n\"\"\"\n\nimport sys\n\ninput_str = sys.stdin.readline().rstrip()\n\nt = []\nu = []\nfor s in input_str:\n    if len(t) == 0:\n        t.append(s)\n    elif t[-1] < s:\n        t.append(s)\n    else:\n        u.append(s)\n\nprint(''.join(t+sorted(u)))"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n\"\"\"\n\nimport string\n\nstdin = input()\n\nu = string.ascii_lowercase\n\nfor char in stdin[0:len(stdin)-1]:\n    u += char\n\nprint(u)\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('abc') == 'abc'\nassert solution('cab') == 'abc'\nassert solution('acb') == 'abd'\nassert solution('adb') == 'abd'\n\"\"\"\n\ns = input()\nt = s[0] + s[1:]\nu = s[-1] + s[:-1]\nprint(min(t, u))\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"acdb\") == \"abdc\"\nassert solution(\"bab\") == \"bab\"\nassert solution(\"ba\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"abdc\") == \"abdc\"\nassert solution(\"x\") == \"x\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nassert solution('bbbbbbbbb') == 'bbbbbbbbb'\nassert solution('aaaaaaaa') == 'aaaaaaaa'\nassert solution('baaba') == 'ababa'\n"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\n\"\"\"\n\nimport string"
    },
    {
        "number": 18,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\n    '6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'NO'\nassert solution(\n    '6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'YES'\nassert solution(\n    '1\\n2\\n1\\n1\\n0\\n0') == 'YES'\nassert solution(\n    '3\\n2\\n1\\n1\\n0\\n0') == 'NO'\nassert solution(\n    '5\\n1\\n1\\n0\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\") == 'NO\\nYES\\nNO\\nYES\\nNO\\nYES'\n\n\"\"\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n1 2\") == \"NO\"\nassert solution(\"6\\n3\\n0 0\\n1 1\\n1 2\\n2\") == \"NO\"\nassert solution(\"6\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\") == \"NO\"\nassert solution(\"6\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\") == \"YES\"\nassert solution(\"6\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\") == \"YES\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n1 2\n2\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n3\n0 0\n0 1\n0 2\n1\n1 2\n2\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n3\n0 0\n0 1\n0 2\n1\n1 2\n2\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n4\n0 0\n1 1\n1 2\n2\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"YES\""
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n\nassert solution('''\n6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\n\"\"\"\n\n\"\"\"\n\nimport collections\nimport itertools"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n2\\n1000 3\\n2\\n3 4\\n3 3\\n4\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n0\\n\") == \"NO\"\nassert solution(\"6\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n0\\n\") == \"NO\"\nassert solution(\"5\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n2\\n1000 3\\n2\\n3 4\\n3 3\\n4\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n0\\n\") == \"YES\"\nassert solution(\"3\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n2\\n1000 3\\n2\\n3 4\\n3 3\\n4\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n0\\n\") == \"NO\"\nassert solution(\"6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n2\\n1000 3\\n2\\n3 4\\n3 3\\n4\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n0\\n\") == \"NO\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\") == \"NO\\nYES\\nNO\\nYES\\nNO\\nYES\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO\\nNO\\nNO\\nYES\\nNO'\nassert solution('''\n3\n3\n0 0\n0 0\n0 0\n2\n0 0\n1000 0\n0 0\n1000 0\n0 0\n0 0\n1\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == 'NO\\nYES\\nNO'\n\n\"\"\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n1 2\") == \"NO\"\nassert solution(\"6\\n3\\n0 0\\n1 1\\n1 2\\n2\") == \"NO\"\nassert solution(\"6\\n3\\n0 0\\n1 0\\n1 0\\n1 0\") == \"NO\"\nassert solution(\"6\\n3\\n0 0\\n1 0\\n1 0\\n1 0\") == \"YES\"\nassert solution(\"6\\n3\\n0 0\\n1 0\\n1 0\\n1 0\") == \"NO\"\n"
    },
    {
        "number": 19,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0\\n1\\n1\\n2\") == \"NO\"\nassert solution(\"3\\n0\\n1\\n1\\n2\\n1000\\n3\") == \"YES\"\nassert solution(\"3\\n0\\n1\\n1\\n2\\n1\\n0\\n1\") == \"NO\"\nassert solution(\"3\\n0\\n1\\n1\\n2\\n1\\n0\\n1\\n0\\n1\") == \"YES\"\nassert solution(\"3\\n0\\n1\\n1\\n2\\n1\\n0\\n1\\n0\\n1\\n0\\n1\") == \"NO\"\n\n-----Explanation-----\n\nAll test cases are correct.\n\"\"\""
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n\n\"\"\"\n\nimport pytest\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\""
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n\n'''"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\""
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"23:59\") == 1\n"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 20,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"05:39\") == 11\nassert solution(\"13:31\") == 0\nassert solution(\"23:59\") == 1\nprint(\"Passed all tests!\")\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'\nprint('The local tests are done. Click on \"Check\" for more details on Pylint.')\n\"\"\"\nimport math\nimport collections\nimport itertools\nimport array"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\"\n\"\"\""
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == '3'\nassert solution(\"7\\n1 6 5 3 4 7 2\") == '6'\nassert solution(\"6\\n6 5 4 3 2 1\") == '5'\nassert solution(\"4\\n4 5 1 3 2\") == '1'\nassert solution(\"1\\n1\") == '0'\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\\n\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\\n\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\\n\"\n\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\na = min(arr)\nb = max(arr)\n\nprint(b - a)\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 6 5 4 3 2 1') == '6'\nassert solution('6 5 4 3 2 1') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 6 5 4 3 2 1') == '5'\nassert solution('6 5 4 3 2 1') == '5'\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\"\n\n\"\"\"\nfrom itertools import permutations\n\nn = int(input())\na = list(map(int, input().split()))\n\nl, r = min(a), max(a)\nans = abs(l - r)\n\nfor x in permutations(a):\n    x = list(x)\n    if max(x) - min(x) > ans:\n        ans = max(x) - min(x)\n\nprint(ans)\n"
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\""
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 6 5 4 3 2 1') == '5'\nassert solution('6 5 4 3 2 1') == '5'\n\"\"\""
    },
    {
        "number": 21,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 5 1 3 2\") == \"3\"\nassert solution(\"1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6 5 4 3 2 1\") == \"5\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\nprint(solution('oXoxoXo'))\nprint(solution('bod'))\nprint(solution('ER'))\n\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\nassert solution('abccba') == 'TAK'\nassert solution('abbbab') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n'oXoxoXo'\n) == 'TAK'\nassert solution(\n'bod'\n) == 'TAK'\nassert solution(\n'ER'\n) == 'NIE'\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n\nimport codewars_test as test\nfrom solution import solution\n\n@test.describe(\"Fixed Tests\")\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('abba') == 'TAK'\nassert solution('oHo') == 'TAK'\nassert solution('aaa') == 'NIE'\nassert solution('abc') == 'NIE'\n\n\"\"\""
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\nassert solution('jaja') == 'NIE'\nassert solution('obob') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'TAK'\nassert solution('ER') == 'NIE'\n\"\"\""
    },
    {
        "number": 22,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\n\"\"\"\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('123', '222') == '213'\nassert solution('3921', '10000') == '9321'\nassert solution('4940', '5000') == '4940'\n\"\"\"\n\na = input()\nb = input()\n\nfor i in range(len(a)):\n    if a[i] < b[i]:\n        print(a[i:])\n        print(b[i:])\n        break\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n\"\"\""
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\n\"\"\"\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"213\"\nassert solution(\"222\") == \"312\"\nassert solution(\"3921\") == \"9321\"\nassert solution(\"4940\") == \"4940\"\nassert solution(\"10000\") == \"10300\""
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\n\"\"\""
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"123\", \"222\") == \"213\"\nassert solution(\"3921\", \"10000\") == \"9321\"\nassert solution(\"4940\", \"5000\") == \"4940\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('123', '222') == '213'\n\n\"\"\"\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('123', '222') == '213'\nassert solution('3921', '10000') == '9321'\nassert solution('4940', '5000') == '4940'\n"
    },
    {
        "number": 23,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('123', '222') == '213'\nassert solution('3921', '10000') == '9321'\n\"\"\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"NO\"\nassert solution(\"X..X..X.X\\n.O....O...\\nO.......O\\n.O.......\\n.O.......\\n.O.......\\n.O.......\\nO.......O\\nO.......O\\nX..X..X.X\") == \"YES\"\nassert solution(\"X..X..X.X\\n.O....O...\\nO.......O\\n.O.......\\n.O.......\\n.O.......\\nO.......O\\nO.......O\\nX..X..X.X\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == 'YES'\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == 'NO'\n\nprint('Success')\n\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"XXOXXOXX\") == 'YES'\nassert solution(\"XX.XXOXX\") == 'YES'\nassert solution(\"XO..OOOX\") == 'YES'\nassert solution(\"XO.O.OOX\") == 'YES'\nassert solution(\"XO.O.O.X\") == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"XX.XX.....\\n\"\n\".....OOOO.\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\") == \"YES\"\n\nassert solution(\"XXOXX.....\\n\"\n\"OO.O......\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\\n\"\n\"..........\") == \"NO\"\n\nassert solution(\"XOOXX.OO.X\\n\"\n\"XO.XO..XO\\n\"\n\"XO.O.OXO\\n\"\n\"O.OOX.O.\\n\"\n\"OO..XO.O\\n\"\n\"O.O.XO.O\\n\"\n\"O.O.O.O.\\n\"\n\"..O.O.O.\\n\"\n\"..X.X.X..\\n\"\n\"..XO.XO..\") == \"YES\"\n\nassert solution(\"XO.O.OO.O\\n\"\n\"XOO..O.O.\\n\"\n\"O.O.O.OO\\n\"\n\"O.O.O.O.\\n\"\n\"OOO.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"OOO.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"X.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"OO.O.O.O\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\"\n\"O.O.O.O.\\n\""
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\"\nassert solution(\"XOOXXXO...\\n.O.O.OO..\\n.O.O.O.O.\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XOXOXOXOX.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\") == \"NO\"\nassert solution(\"XXXXXOXXOX.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\\n.O.O.O.O.\") == \"YES\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"XXX.XOOO.XOXX\") == \"NO\"\nassert solution(\"XXO.O.X.XO.OXXX\") == \"YES\"\nassert solution(\"XXXXXOOXXXOO\") == \"YES\"\nassert solution(\"OXOXOXOXO.X\") == \"YES\"\nassert solution(\"OOX.OXXOXXOXOOO\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"NO\"\n\nimport io, pytest, unittest\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"XX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n\"\"\"\n        output = \"\"\"YES\"\"\"\n        self.assertIO(input, output)\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"XXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n\"\"\"\n        output = \"\"\"NO\"\"\"\n        self.assertIO(input, output)\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"X.XXOXX.....\n.OXXOXXO..\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n\"\"\"\n        output = \"\"\"YES\"\"\"\n        self."
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('XX.XX.....') == 'YES'\nassert solution('XXOXX.....') == 'NO'\nassert solution('XOOXXX....') == 'YES'\nassert solution('XOXOXO....') == 'NO'\nassert solution('XO.OX.OX..') == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"XXXO.....\") == \"YES\"\nassert solution(\"XOOXO....\") == \"YES\"\nassert solution(\"OOXXO.OO.\") == \"YES\"\nassert solution(\"XXXOO....\") == \"NO\"\nassert solution(\"XOOXX.OO.\") == \"NO\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 0\\n0 0') == '1 0\\n0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == '1 0\\n0 0'\nassert solution(\"3 2\") == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution(\"2 5\") == '-1'\nassert solution(\"3 2\") == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution(\"2 1\") == '1 0\\n0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(answer)\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 1\\n1 1') == '1 1\\n0 1\\n1 1'\nassert solution('3 2\\n1 1 1') == '1 1 1\\n0 1 0\\n1 1 1'\n\n\"\"\""
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('1 1') == '-1'\n\"\"\""
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 0') == '1 0\\n0 0'\nassert solution('3 2\\n0 0 0') == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution('2 1\\n0 0') == '1 0\\n0 0'\nassert solution('3 2\\n0 0 0') == '1 0 0\\n0 1 0\\n0 0 0'\n\nassert solution('2 5\\n0 0 0') == '-1'\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '''1 0 0 \n0 1 0 \n0 0 0'''\nassert solution('''2 5''') == '''-1\n'''\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\n\"\"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1 0\"\n\"\"\"\n\nimport numpy as np\n\nn, m = list(map(int, input().split()))\n\nmatrix = np.zeros((n, n))\n\nfor _ in range(m):\n    matrix[int(input()) - 1, :] += 1\n\nmatrix_line = matrix.tolist()\nmatrix_line = matrix_line[0]\nmatrix_line = matrix_line[::-1]\n\nfor i in range(n):\n    if matrix_line[i] == 1:\n        matrix_line = matrix_line[:i] + ['1'] + matrix_line[i:]\n        break\n\nmatrix_line = matrix_line[::-1]\n\nprint(\" \".join(matrix_line))"
    },
    {
        "number": 25,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 0\\n0 0') == '1 0 0'\nassert solution('2 5\\n0 0\\n0 1') == '0 1 0'\nassert solution('3 5\\n0 0\\n0 0\\n0 1') == '1 0 0 0'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"(x^y)^z\"\n\"\"\"\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2.0 2.0 2.0\") == \"(x^y)^z\"\nassert solution(\"1.9 1.8 1.7\") == \"((x^y))^z\"\nassert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"0.0 0.0 0.0\") == \"x^y^z\"\nassert solution(\"0.0 0.0 0.0\") == \"x^y^z\"\n\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1.9 1.8 1.7') == '(x^y)^z'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"x^y^z\"\nassert solution(\"1.9 1.8 1.7\") == \"(x^y)^z\"\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"abcabca\") == \"5\"\nassert solution(\"aaaaaaaa\") == \"4\"\nassert solution(\"abcdefgh\") == \"8\"\nassert solution(\"abc\") == \"3\"\nassert solution(\"abcdef\") == \"4\"\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('abcabca') == 5\nassert solution('aaaaaaaa') == 4\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 8\n\"\"\"\n\nfrom itertools import chain"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"abcabca\") == \"5\"\nassert solution(\"abcdefgh\") == \"8\"\nassert solution(\"aaaaaaaa\") == \"4\"\nassert solution(\"abc\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('abcabca') == 5\nassert solution('aaaaaaaa') == 4\nassert solution('abcd') == 3\nassert solution('aaaa') == 4\nassert solution('abcde') == 4\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 3\nassert solution(\"abcabcabc\") == 5\nassert solution(\"abcabcabcabcabc\") == 8\nassert solution(\"aaaaaaaaa\") == 9\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"aaaaaaaa\") == 8\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(7) == 5\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 27,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"abcdefg\") == 8\n\nassert solution(\"abcabca\") == 5\n\nassert solution(\"aaaaaaaa\") == 4\n\nassert solution(\"abcd\") == 3\n\n\"\"\""
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\nassert solution('2\\n1 0\\n2 1\\n') == '3\\nmove 1 3\\nmove 2 1'\nassert solution('5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n') == '5\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 11111 2\\nmove 1114 3'\nassert solution('2\\n1 0\\n11 1\\n') == '3\\nmove 1 3\\nmove 11 1'\nassert solution('1\\n1 0\\n') == '2\\nmove 1 2'\n\nprint('Success')\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"5\\n1111 1\\n111111 0\\n11111 1\\n11111 2\\n11111 3\\n11111 4\\n11111 5\\n11111 6\\n1111111 1\\n11111111 2\\n11111111 3\\n11111111 4\\n11111111 5\\n11111111 6\\n\") == \"5\\nmove 111111 1\\nmove 1111111 2\\nmove 1111111 3\\nmove 1111111 4\\nmove 1111111 5\\nmove 1111111 6\\nmove 111111111 1\\nmove 1111111111 2\\nmove 1111111111 3\\nmove 1111111111 4\\nmove 1111111111 5\\nmove 1111111111 6\\n\"\nprint(\"Test pass.\")\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\"\nassert solution(\"2\\n1 0\\n2 1\\n\") == \"3\\nmove 1 3\\nmove 2 1\"\n\"\"\"\n\nlines = int(input())\n\nres = []\n\nfor i in range(lines):\n    x, y = map(str, input().split())\n    res.append(f\"move {x} {int(y)+len(res)}\")\n\nprint(len(res))\nfor i in res:\n    print(i)\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 1\") == \"move 2 1\\nmove 3 2\"\nassert solution(\"1 1\\n2 1\") == \"move 1 3\"\nassert solution(\"1 1\\n11 1\") == \"move 1 5\"\nassert solution(\"1 1\\n1111 1\") == \"move 1 6\"\nassert solution(\"1 1\\n11111 1\") == \"move 1 8\""
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\"\nassert solution(\"2\\n1 0\\n2 1\") == \"3\\nmove 1 3\\nmove 2 1\"\nassert solution(\"5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 11111 2\\nmove 111 4\"\nassert solution(\"6\\n111111 1\\n11111111 0\\n11111111 1\\n11111111 1\\n11111111 1\\n11111111 1\") == \"6\\nmove 11111 2\\nmove 1111111 3\\nmove 11111 4\\nmove 111111 5\\nmove 11111 6\"\nassert solution(\"5\\n11111 1\\n111111 1\\n111111 1\\n111111 1\\n111111 1\") == \"5\\nmove 11111 2\\nmove 111111 3\\nmove 11111 4\\nmove 11111 5\\nmove 11111 6\"\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\n\nassert solution('''2\n1 0\n2 1''') == '3\\nmove 1 3\\nmove 2 1'\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(test_input) == test_output\nprint(solution(input()))\n\n-----Notes-----\nYou should have used:\n\n-.strip() method on each line (for the first example, the second one, the third one)\n-.split() method\n- int() function\n\"\"\""
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\n\"\"\"\n\nimport collections"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n'\nassert solution('2\\n1 0\\n2 1\\n') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n'\nassert solution('5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\nassert solution('5\\n01 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n') == '5\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 11111 2\\nmove 111 1\\nmove 111 4\\nmove 11111 3\\n'\nassert solution('2\\n1 0\\n2 1\\n') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n'\n"
    },
    {
        "number": 28,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\"\nassert solution(\"2\\n1 0\\n2 1\") == \"3\\nmove 1 3\\nmove 2 1\"\nassert solution(\"5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 11111 2\\nmove 111 11\"\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('111000') == '1'\nassert solution('123456') == '2'\nassert solution('000000') == '0'"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('111000') == '1'\nassert solution('123456') == '2'\nassert solution('001110') == '0'\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"111000\") == \"1\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"011000\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('100100') == '0'\nassert solution('111111') == '2'\nassert solution('100010') == '1'\n\nprint('Success')"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('123456') == '2'\nassert solution('111111') == '1'\nassert solution('001111') == '0'\nassert solution('111000') == '1'\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"111000\") == \"1\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"000000\") == \"0\"\nassert solution(\"221333\") == \"2\"\nassert solution(\"555555\") == \"3\"\n"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"123456\") == '2'\nassert solution(\"111000\") == '1'\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n\"\"\""
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"2\"\n\"\"\""
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\nassert solution('''7 4''') == '3'\nassert solution('''10 6''') == '3'\nassert solution('''100 50''') == '6'\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == 3\nassert solution(\"5 2\") == 2"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3\"\n\nassert solution(\"5 2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 3\\n') == '3'\nassert solution('5 2\\n') == '2'\nassert solution('9 3\\n') == '5'\nassert solution('3 1\\n') == '1'\nassert solution('2 1\\n') == '2'\n\n'''\n"
    },
    {
        "number": 30,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == 3\nassert solution(\"5 2\") == 2\n\"\"\"\nimport math"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n\"\"\""
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\""
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 3\\n') == '1 8'\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\n\"\"\"\n\nfrom collections import Counter\nfrom functools import reduce\nimport math\nimport sys"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 2\\n') == '1 8\\n'\nassert solution('1 3\\n') == '1 1\\n'\nassert solution('4 3\\n') == '23 128\\n'\n\nprint('Success')\n\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"23 128\"\nassert solution(\"4 4\") == \"0 0\"\nassert solution(\"5 5\") == \"23 35\"\nassert solution(\"6 6\") == \"23 48\"\n\"\"\""
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1 8\"\n\"\"\"\n\nimport itertools\n\nfrom math import gcd\n\na, b = map(int, input().split())\n\nassert 1 <= a <= 10 ** 18 and 2 <= b <= 10 ** 18\n"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('4 3') == '23 128'"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 2\\n') == '1 8'\nassert solution('1 3\\n') == '1 1'\n\"\"\"\n\n\nfrom collections import Counter\nfrom math import gcd"
    },
    {
        "number": 31,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\nassert solution('5 3') == '5 35'\nassert solution('6 2') == '1 11'\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North') == \"YES\"\nassert solution('2\\n15000 South\\n4000 East') == \"NO\"\nassert solution('3\\n20000 South\\n10 East\\n20000 North') == \"NO\"\nassert solution('4\\n50 South\\n50 North\\n15000 South\\n15000 North') == \"YES\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n50 South\\n50 North\\n15000 South\\n15000 North') == 'YES'\nassert solution('2\\n1000 North\\n1000 South') == 'NO'\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\") == \"NO\"\nassert solution(\"5\\n20000 South\\n10 East\\n20000 North\") == \"NO\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\") == \"YES\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\") == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\\n\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\\n\") == \"NO\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\\n\") == \"NO\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North') == 'YES'\nassert solution('2\\n15000 South\\n4000 East') == 'NO'\nassert solution('5\\n20000 South\\n1000 North\\n1000000 West\\n9000 North\\n10000 North') == 'YES'\nassert solution('4\\n50 South\\n50 North\\n15000 South\\n15000 North') == 'NO'\nassert solution('2\\n1000 North\\n1000 South') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(5) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North') == 'YES'\nassert solution('2\\n15000 South\\n4000 East') == 'NO'\nassert solution('5\\n20000 South\\n1000 North\\n20000 North') == 'YES'\nassert solution('4\\n50 South\\n50 North\\n15000 South\\n15000 North') == 'YES'\nassert solution('3\\n20000 South\\n10 East\\n20000 North') == 'NO'\n\n\n\n-----Explanation-----\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\\n\") == \"YES\"\nassert solution(\"15000 South\\n4000 East\\n20000 North\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\\n\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\\n\") == \"NO\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\\n\") == \"NO\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 32,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n7500 South\\n10000 East\\n3500 North\\n4444 West\\n4000 North\\n\") == \"YES\"\nassert solution(\"2\\n15000 South\\n4000 East\\n\") == \"NO\"\nassert solution(\"5\\n20000 South\\n1000 North\\n1000000 West\\n9000 North\\n10000 North\\n\") == \"YES\"\nassert solution(\"4\\n50 South\\n50 North\\n15000 South\\n15000 North\\n\") == \"YES\"\nassert solution(\"3\\n20000 South\\n10 East\\n20000 North\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2 4 3 0 6 17') == '2'\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3 0 6 17\") == 2\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3 0 6 17\") == 2\n\"\"\"\n\nfrom math import gcd\nfrom collections import deque\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n\"\"\""
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\n\"\"\""
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 4 3 0 6 17') == 2\nassert solution('2 0 3 3 5 21') == 3\nassert solution('1 10 1 10 20') == 2\n\nprint(solution(stdin))\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == '2'\nassert solution('1 3 4 5') == '3'\nassert solution('4 4 2 3 3') == '4'\nassert solution('4 4 5 4 5') == '0'\n\"\"\"\nfrom typing import List, Dict\nimport time"
    },
    {
        "number": 33,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\"\n\na, b, c = [int(i) for i in input().split()]"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(4,7,10) == 3\nassert solution(5,2,3) == 1\n\"\"\"\n\nn, a, b = [int(i) for i in input().split()]\n\nprint(min(a//2, b//2))\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 7 10') == 3\nassert solution('5 2 3') == 1\nassert solution('4 7 9') == 5\n\n\"\"\"\n\n\nfrom math import factorial\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n') == '1'\nassert solution('4 7 10\\n') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 7 7\") == \"0\"\nassert solution(\"7 7 7\") == \"2\"\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 34,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 7 10\") == \"3\"\n\nprint(solution(\"4 7 10\"))"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG''') == 'YES'\nassert solution('''4 3\nRRR\nRRR\nBBB\nRRR''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG''') == 'NO'\n\n\"\"\"\n\nimport collections\n\nn, m = map(int, input().split())\nborders = [input() for _ in range(n)]\ncounts = collections.defaultdict(int)\nfor i in range(n):\n    for j in range(m):\n        counts[borders[i][j]] += 1\nfor _ in range(3):\n    if counts['R']!= 1 or counts['B']!= 1 or counts['G']!= n:\n        print('NO')\n        break\n    borders.append(input())\n    counts.clear()\n    for i in range(n):\n        for j in range(m):\n            counts[borders[i][j]] += 1\n    else:\n        if counts['R']!= 1 or counts['B']!= 1 or counts['G']!= n:\n            print('NO')\n            break\n\nprint('YES' if counts['R'] == 1 and counts['B'] == 1 and counts['G'] == n else 'NO')\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n') == \"YES\"\nassert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\\n') == \"YES\"\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n') == \"NO\"\nassert solution('4 3\\nRRR\\nRRR\\nBBBB\\nGGGG\\n') == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 3\\nRRR\\nBGGG\\nBBBB\\nRRRR\\nRRRR') == 'YES'\nassert solution('2 2\\nRBR\\nBGB\\nRRR\\nRRR') == 'YES'\nassert solution('2 4\\nRBR\\nRBR\\nRRR\\nRRR') == 'NO'\nassert solution('3 7\\nRBRG\\nRBRG\\nRBRG\\nRBRG\\nRBRG\\nRBRG') == 'NO'\nassert solution('4 4\\nRRRR\\nRRRR\\nRRRR\\nRRRR') == 'YES'\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == 'YES'\nassert solution(\"4 3\\nRRRR\\nRRRR\\nRRRR\\nRRRR\") == 'YES'\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == 'NO'\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == 'NO'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG') == \"YES\"\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB') == \"NO\"\nassert solution('4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG') == \"NO\"\n\n------End------\n\n'''\n\nfrom math import sqrt"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nRRR\\nRRR\\nBBBB\\nGGGG\") == \"NO\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\") == \"YES\"\nassert solution(\"4 3\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"YES\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\") == \"NO\"\n\n-----"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"YES\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"YES\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"YES\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"YES\"\n\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n\") == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'YES'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'YES'\nassert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''3 4\nRGGG\nRGGG\nBGBB\n''') == 'NO'\nassert solution('''3 2\nRGGG\nRGGG\n''') == 'YES'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\") == (\"-2 0\")\nassert solution(\"7\") == (\"3 2\")\nassert solution(\"1\") == (\"-2 -1\")\nassert solution(\"9\") == (\"3 0\")\n\"\"\""
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1') == '-1 -1'\nassert solution('2') == '0 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 -1'\nassert solution('5') == '0 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\nassert solution('8') == '0 1'\nassert solution('10') == '-8 1'\nassert solution('18') == '-9 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3') == '-2 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"-2 0\"\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == (-1, -1)\nassert solution('\\n') == (-1, -1)\nassert solution('\\n1\\n') == (-1, -1)\nassert solution('\\n100\\n') == (-1, -1)\nassert solution('\\n100\\n200\\n') == (-1, -1)\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0 1'\nassert solution('3') == '-1 0'\nassert solution('5') == '2 1'\nassert solution('7') == '1 2'\nassert solution('12') == '0 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '2 0'\nassert solution('5') == '3 0'\nassert solution('6') == '4 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"-2 0\""
    },
    {
        "number": 36,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\n\"\"\"\nimport sys\nfrom math import gcd"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\""
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 6 15\") == 'No'\nassert solution(\"3 2 7\") == 'Yes'\nassert solution(\"6 11 6\") == 'Yes'\n\n\n\n>>> \n= RESTART: C:\\Users\\User\\Desktop\\git\\Algorithms\\Dante.py =\nDante is engaged in a fight with \"The Savior\". Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non-negative number of shots.\n\nFor every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.\n\n4 6 15\nNo\n\n3 2 7\nYes\n\n6 11 6\nYes\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(4, 6, 15) == \"No\"\nassert solution(3, 2, 7) == \"Yes\"\nassert solution(6, 11, 6) == \"Yes\"\n\"\"\"\n\na, b, c = map(int, input().split())\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == 'Yes'\nassert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\n'''\n"
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n3 4 5') == 'Yes'\nassert solution('3 2 7\\n6 11 6') == 'Yes'\nassert solution('3 2 6\\n6 11 6') == 'No'\nassert solution('3 2 7\\n6 11 6') == 'No'\n\n\"\"\""
    },
    {
        "number": 37,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"3 2 1\") == \"Yes\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 3\\n1 2') == \"YES\"\nassert solution('2 4\\n1 3\\n2 3') == \"NO\"\n\"\"\""
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == 'YES'\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == 'YES'\nassert solution(\"2 4\\n1 3\\n1 2\") == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == 'YES'\n\nassert solution(\"3 8\\n2 4 6\\n1 5 7\") == 'YES'\n\nassert solution(\"2 4\\n1 3\\n1 2\") == 'NO'\n\nassert solution(\"1 1\\n1 1\") == 'NO'\n\n\"\"\""
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(str(input())) == str(output())\n\n\n---"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n1 3 6\\n1 2 3\") == \"YES\"\nassert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 8\\n0 1 3 6\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\nassert solution(\"4 10\\n3 4 6\\n7 8 9\\n0 1 2\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"uffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('mew') == 3\nassert solution('uffuw') == 5\nassert solution('qqqqqqqq') == 0\n\nsolution('mew')\n\nsolution('uffuw')\n\nsolution('qqqqqqqq')\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"uffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('mew') == '3'\nassert solution('wuffuw') == '5'\nassert solution('qqqqqqqq') == '0'\nassert solution('abb') == 'abb'\nassert solution('iq') == 'iq'\n\"\"\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"uffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"uffuw\"\nassert solution(\"qqqqqqqq\") == \"0\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('mew') == '3'\nassert solution('uffuw') == '5'\nassert solution('qqqqqqqq') == '0'\n\"\"\""
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('mew') == '3'\nassert solution('uffuw') == '5'\nassert solution('qqqqqqqq') == '0'\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == '0'\nassert solution('qqqwqqqqq') == '0'\nassert solution('mqrtwmqrr') == '0'\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\\n') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\\n') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\\n') =='maybe'"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n\"\"\") == 'rated'\n\nassert solution(\"\"\"\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n\"\"\") == 'unrated'\n\nassert solution(\"\"\"\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n\"\"\") =='maybe'\n\n\"\"\"\n\nfrom collections import defaultdict, deque\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\\n\") == \"rated\"\nassert solution(\"4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\\n\") == \"unrated\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\\n\") == \"maybe\"\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3000 3010\\n2800 2810\") == \"rated\"\nassert solution(\"5\\n1000 1000\\n1090 1090\\n1100 1100\\n1110 1110\\n1111 1110\") == \"unrated\""
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\") == \"rated\"\nassert solution(\"4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\") == \"unrated\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\"\n\n\"\"\"\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n\"\"\"\n) == \"maybe\"\n\nassert solution(\n\"\"\"\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n\"\"\"\n) == \"unrated\"\n\nassert solution(\n\"\"\"\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n\"\"\"\n) == \"rated\"\n\nassert solution(\n\"\"\"\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n\"\"\"\n) == \"unrated\"\n\nassert solution(\n\"\"\"\n4\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n\"\"\"\n) == \"unrated\""
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\") == \"rated\"\nassert solution(\"4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\") == \"unrated\"\nassert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\"\n\n\nimport collections\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n\"\"\") == \"rated\"\n\nassert solution(\"\"\"\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n\"\"\") == \"unrated\"\n\nassert solution(\"\"\"\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n\"\"\") == \"maybe\"\n\nassert solution(\"\"\"\n5\n2884 2884\n3123 3123\n2777 2777\n2246 2246\n1699 1699\n\"\"\") == \"rated\"\n\nassert solution(\"\"\"\n5\n3123 3123\n2884 2884\n2246 2246\n2246 2246\n1699 1699\n\"\"\") == \"maybe\"\n\n\"\"\"\nimport copy\n"
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\"\"\") == \"rated\"\n\nassert solution(\"\"\"4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\"\"\") == \"unrated\"\n\nassert solution(\"\"\"5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\"\"\") == \"maybe\"\n\nassert solution(\"\"\"5\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n3123 3123\"\"\") == \"rated\"\n\nassert solution(\"\"\"5\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n2777 2777\"\"\") == \"unrated\""
    },
    {
        "number": 40,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"rated\"\n"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 1 0 1 2 3 4\") == \"2 1 0 1 2 3 4\"\n\"\"\""
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\nprint(solution(stdin))\n\nassert solution(stdin) == stdout\nprint(solution(stdin))"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 1 0 3 0 0 3 2 4') == '2 1 0 1 0 0 1 2 3'\n\"\"\""
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"9 2 1 0 3 0 0 3 2 4\") == \"2 1 0 1 0 0 1 2 3\"\nassert solution(\"5 6 0 1 -2 3 4\") == \"0 1 2 3 4\"\nassert solution(\"7 6 0 1 -2 3 4\") == \"2 1 0 1 2 3 4\""
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1 2 3') == '0 1 2 3'\nassert solution('4\\n0 1 2 3 4') == '0 1 2 3 4'\nassert solution('5\\n0 1 2 3 4') == '0 1 1 2 3 4'\nassert solution('5\\n2 1 0 1 2 3 4') == '2 1 0 1 2 3 4'\nassert solution('5\\n2 1 3 4 0 1 2 3 4') == '2 1 3 4 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('9\\n2 1 0 3 0 0 3 2 4') == '2 1 0 1 0 0 1 2 3'\nassert solution('5\\n0 1 2 3 4') == '0 1 2 3 4'\nassert solution('7\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\nassert solution('9\\n0 1 2 3 4 5 6 7 8') == '0 1 2 3 4 5 6 7 8'\nassert solution('5\\n4 4 3 2 0') == '0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(str(input())) == str(expected)\n"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('4') == ''\nassert solution('6') == ''\n"
    },
    {
        "number": 41,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 1 0 3 0 0 3 2 4') == '2 1 0 1 0 0 1 2 3'\nassert solution('5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\nassert solution('7 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n\na = [2, 1, 0, 3, 0, 0, 3, 2, 4]\nfor i in range(len(a)):\n    print(i - a[i].index(0))\nassert solution('2 1 0 3 0 0 3 2 4') == '2 1 0 1 0 0 1 2 3'"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1010') == 2\nassert solution('11110') == 3\nassert solution('1110111110') == 4\n\"\"\"\nimport unittest\nfrom typing import Dict, List, Optional\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\n\"1010\"\n) == 3\nassert solution(\n\"01010\"\n) == 2\nassert solution(\n\"100\"\n) == 1\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"0\") == 3\nassert solution(\"1010\") == 2\nassert solution(\"101010101010\") == 962\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1010') == 2\nassert solution('0101') == 2\nassert solution('1111') == 1\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('0') == '3'\nassert solution('1010') == '2'\n\"\"\"\nimport math\nimport sys\n\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('101010') == 5\nassert solution('0101010') == 6\nassert solution('0111010') == 9\nassert solution('1111110') == 14\nassert solution('101') == 3\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"101010\") == 3\nassert solution(\"101010\") == 3\n\"\"\""
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10101') == 3\nassert solution('101010') == 2\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"000111\") == 2\nassert solution(\"11101\") == 4\nassert solution(\"11100\") == 4\nassert solution(\"11111\") == 6\n\nassert solution(\"110111\") == 4\n"
    },
    {
        "number": 42,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == 2\nassert solution(\"1111\") == 0\nassert solution(\"0100\") == 1\nassert solution(\"1010\") == 2\n\n\"\"\"\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\\n\"\nassert solution(\"3 2\\n4 1\\n1 4\\n2 1\\n\") == \"3 2\\n4 1\\n1 4\\n2 1\\n\"\nassert solution(\"3 2\\n4 1\\n1 4\\n2 1\\n5 3\\n\") == \"3 2\\n4 1\\n1 4\\n2 1\\n5 3\\n\"\nassert solution(\"2 1\\n3 1\\n1 2\\n1 2\\n3 1\\n\") == \"2 1\\n3 1\\n1 2\\n1 2\\n3 1\\n\"\nassert solution(\"2 1\\n1 2\\n1 2\\n2 1\\n\") == \"2 1\\n1 2\\n1 2\\n2 1\\n\"\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\\n\") == \"3 4\"\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\nprint(\"Passed\")\n\n----\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\n\"\"\"\n\nn = int(input())\n\nd = {}\nfor i in range(n):\n    x, y = map(int, input().split())\n    d[(x, y)] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        x_i, y_i = d[(i + 1, 0)]\n        x_j, y_j = d[(j + 1, 0)]\n        d[(i + 1, 0)] = (x_i + x_j, y_i + y_j)\n        d[(i + 1, 0)] = (x_i - x_j, y_i - y_j)\n        d[(i + 1, 0)] = (x_i + y_j, y_i - x_j)\n        d[(i + 1, 0)] = (x_i - y_j, y_i + x_j)\n\nsorted_d = sorted(d.items(), key=lambda x: x[1])\n\nprint(sorted_d[0][0][0], sorted_d[0][0][1])\nprint(sorted_d[1][0][0], sorted_d[1][0][1])"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''5\n0 0\n0 0\n0 0\n0 0\n0 0''') == '4 4'\n\"\"\"\n\n\nimport sys\nimport unittest\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\\n\") == \"3 4\"\n\"\"\""
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n-1 0\n0 -1\n1 0\n1 1\"\"\") == '3 4'\nassert solution(\"\"\"6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6\"\"\") == '6 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\n\"\"\"\n\nfrom math import atan2, degrees\n\nn = int(input())\ncoords = []\nfor i in range(n):\n    coords.append([int(x) for x in input().split()])\n\ndist = []\nfor i in range(n):\n    for j in range(i + 1, n):\n        dist.append(round(atan2(coords[i][1] - coords[j][1], coords[i][0] - coords[j][0]), 2))\n\nans = min(dist)\n\nprint(degrees(ans), degrees(360 - ans))\n"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''5 2 1 4 10''') == 14\nassert solution('''5 2 1 4 5''') == 13\nassert solution('''5 2 1 4 10''') == 14\n'''\n"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\"\nassert solution(\"1 2 4 4\") == \"8\"\nassert solution(\"3 1 1 1\") == \"6\"\nassert solution(\"1 1 1 1\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1 4 10\") == 14\nassert solution(\"5 2 1 4 5\") == 13\n"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\"\nprint('Test pass.')"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\n\"\"\"\n\nimport math"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(5, 2, 1, 4, 10) == 14\nassert solution(5, 2, 1, 4, 5) == 13\nassert solution(5, 2, 1, 4, 1) == 13\nassert solution(5, 2, 1, 4, 3) == 14\nassert solution(5, 2, 1, 4, 4) == 13\n"
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\"\n\"\"\""
    },
    {
        "number": 44,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\"\n\n\nfrom typing import Callable, List\nimport sys\nimport math\nimport collections\n"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == '1 2 3'\n\nassert solution(\"8 2\") == '2 6'\n\nassert solution(\"5 3\") == -1\n"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\n\"\"\"\n"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"10 10\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\n"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\nassert solution(\"5 3\") == \"-1\"\n\"\"\""
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\nassert solution(\"5 3\") == \"-1\"\n"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''6 3\n''') == '1 2 3'\n\"\"\"\n\nn, k = map(int, stdin.readline().split())"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1 2\"\n\nassert solution(\"5 3\") == \"1 2 3\"\n\nassert solution(\"8 2\") == \"2 6\"\n\nassert solution(\"2 1\") == \"-1\"\n\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''4 3''') == '-1'\nassert solution('''4 3\n1 2 3 4''') == '1 2 3'\nassert solution('''2 1\n3 2''') == '2'\nassert solution('''2 1\n3 2\n6 3\n7 5''') == '6 3'\nassert solution('''2 1\n3 2\n6 3\n7 5\n6 2\n3 1''') == '6 2'\n\n-----"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\n\nprint(solution(input()))"
    },
    {
        "number": 45,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 3') == '-1'\nassert solution('8 2\\n1 2 3') == '2 6'\nassert solution('5 3\\n1 2 5') == '2 5'\nassert solution('4 4\\n1 1 2 3') == '-1'\n\"\"\"\n\nn, k = map(int, input().split())\narr = [i for i in range(k, 0, -1) if n % i == 0]\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 12') == 14\nassert solution('11 14') == 31\nassert solution('1 5') == 1\nassert solution('3 8') == 5\nassert solution('5 7') == 7\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 7\") == \"7\"\nassert solution(\"6 12\") == \"14\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"21 21\") == \"88\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"5 7\") == \"7\"\n"
    },
    {
        "number": 46,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == 22\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == 42\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == 0\nprint('test passed')\n\n\"\"\""
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 -2\\n-3 8 -2 1 -6') == 22\nassert solution('12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7') == 42\nassert solution('5 10\\n-1 -2 -3 -4 -5') == 0\n"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 -2\\n-3 8 -2 1 -6') == 22\nassert solution('12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7') == 42\nassert solution('5 10\\n-1 -2 -3 -4 -5') == 0"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == 22\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == 42\n\"\"\""
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == '22'\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == '42'\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == '0'\nprint(\"You are good to go!\")"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 -2') == '22'\nassert solution('12 -3') == '0'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == \"22\"\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == \"42\"\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == \"0\"\n\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == \"22\"\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == \"42\"\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == \"0\"\n"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == \"22\"\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == \"42\"\nassert solution(\"5 10\\n-1 -2 -3 -4 -5\") == \"0\"\n\"\"\"\nimport sys"
    },
    {
        "number": 47,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 -2\\n-3 8 -2 1 -6\") == \"22\"\n\nassert solution(\"12 -3\\n1 3 3 7 1 3 3 7 1 3 3 7\") == \"42\"\n\n\"\"\""
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"1 10 5\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\nassert solution(\"1 10 6\") == \"6\"\n\n\"\"\"\n\n\nfrom typing import List, Set"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n\nprint(solution(\"2 3 4\"))\nprint(solution(\"1 10 5\"))\n"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 2 2\\n') == '2'\nassert solution('2 3 4\\n') == '3'\nassert solution('1 10 5\\n') == '5'\n\"\"\""
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n    '2 3 4'\n) == '3'\nassert solution(\n    '1 10 5'\n) == '5'\nassert solution(\n    '2 3 4'\n) == '2'\n"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 3 4\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 48,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 2 2\\n') == '2'\nassert solution('2 3 4\\n') == '3'\nassert solution('1 10 5\\n') == '5'\nassert solution('2 10 5\\n') == '5'\nassert solution('2 10 1\\n') == '2'\n"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"12\") == \"0\"\nassert solution(\"23\") == \"3\"\n\nimport math"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('21') == '5'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\""
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\n\nprint('The tests are done. Now train the model!')"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\n\"\"\"\n"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('1010') == '0'\nassert solution('100111011') == '9'\nassert solution('1001110110110') == '0'\n"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\n\"\"\"\n\n\"\"\"\nSolution 1\n\"\"\""
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(read_str(solution_input_1)) == \"8\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 49,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\n\n\"\"\"\nimport re"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4') == '26'\n\nassert solution('2 2 50\\n5 7\\n4 2') == '50'"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 4 11\\n4 2 5\\n4 4 5 4\") == '26'\n\"\"\"\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4') == '26'\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 4 11\\n4 2 5\\n4 4 5 4\") == \"26\"\nprint(\"PASSED\")\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '5'\nassert solution('2 3 2') == '6'\nassert solution('1 2 3') == '5'\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2 50\\n5 7\\n4 2\") == \"50\"\nassert solution(\"3 4 11\\n4 2 5\\n4 4 5 4\") == \"26\"\n\n\"\"\"\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3 4 11\n4 2 5\n4 4 5 4''') == '26'\nassert solution('''2 2 50\n5 7\n4 2''') == '50'\nassert solution('''3 2 10\n2 3\n3 2''') == '9'\nassert solution('''3 2 10\n2 3\n3 2''') == '9'\nassert solution('''3 2 10\n2 3\n3 2''') == '9'\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4') == '26'\n\nassert solution('2 2 50\\n5 7\\n4 2') == '50'\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 4 11\\n4 2 5\\n4 4 5 4\") == \"26\"\nassert solution(\"2 2 50\\n5 7\\n4 2\") == \"50\"\n"
    },
    {
        "number": 50,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4') == '26'\n\"\"\""
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"20\""
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"8\") == \"8\"\n\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"20\") == \"2\"\nassert solution(\"25\") == \"3\""
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"5\"\nassert solution(\"11\") == \"10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '4'\nassert solution('25') == '20'\nassert solution('2') == '-1'"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"2\"\nassert solution(\"9\") == \"2\"\nassert solution(\"9\") == \"2\"\n"
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"25\") == \"20\""
    },
    {
        "number": 52,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"7\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('8\\nabacabac\\n1 1 1 1 1 1 1 1') == 8\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abacabca\") == 17\nassert solution(\"abacabca\") == 17\n\"\"\""
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('abacabca\\n1 2 3 4 4 3 2 1') == '17'\n\"\"\"\nfrom math import inf\nimport unittest\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin.split()[0])\n        s = stdin.split()[1]\n        b = [int(i) for i in stdin.split()[2:]]\n        #print(s, b)\n        return self.max_beauty(s, b, n)\n\n    def max_beauty(self, s: str, b: list, n: int) -> int:\n        for i in range(n):\n            if b[i]!= (s.index(s[i]) + 1) % 2 + 1:\n                return 0\n        return sum(b)\n\n\n\nclass TestsForSolution(unittest.TestCase):\n    def test_1(self):\n        assert Solution().solution('8\\nabacabca\\n1 2 3 4 4 3 2 1') == '17'\n"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"8\\nabacabac\") == 8\nassert solution(\"8\\nabaccaba\") == 17"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\naaabacaba\") == \"17\"\nassert solution(\"8\\naaabaccaba\") == \"26\"\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('abacabac') == 8\nassert solution('abaccaba') == 17\nassert solution('abacabca') == 17\nassert solution('abaccaba') == 17\nassert solution('abaccaba') == 17\n\"\"\"\n\nimport sys"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\n\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\nprint(\"All cases passed\")"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"abacabac\") == 8\nassert solution(\"abaccaba\") == 17\nassert solution(\"abacccba\") == 11\nassert solution(\"abacbac\") == 6\nassert solution(\"abacbca\") == 10\n\nprint(\"PASSED\")\n"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"8\\nabaccaba\\n1 2 3 4 5 6 7 8\") == '17'\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 53,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('abacabac') == 8\n\"\"\"\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n\"\"\"\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nscale = sorted(list(map(int, sys.stdin.readline().split())))"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\""
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\"\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 7') == \"YES\"\nassert solution('100 99') == \"YES\"\nassert solution('100 50') == \"NO\"\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''100 99''') == 'YES'\nassert solution('''100 50''') == 'NO'\nassert solution('''1 1''') == 'NO'\nassert solution('''0 0''') == 'NO'\nassert solution('''2 9''') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10 10') == 'YES'\nassert solution('10 3') == 'YES'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"100 50\") == \"NO\"\nassert solution(\"3 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n\"\"\"\nimport sys"
    },
    {
        "number": 54,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\"\n\"\"\""
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n\"\"\"\nfrom math import log2\nimport heapq"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"23 5\") == \"Yes\\n3 3 2 1 0\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\\n-1 -1\"\n"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"-1 -1\") == \"No\"\n"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3 5\") == \"Yes\\n1 1 2 0\"\nassert solution(\"2 4 2 5\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\\n2 1 2 3\"\nassert solution(\"1 2 3 5\") == \"Yes\\n2 2 3 1 0\"\nassert solution(\"3 4 5 2 1\") == \"Yes\\n3 4 5 1 2 0\"\n"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('23 5') == 'Yes\\n3 3 2 1 0'\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"23 5\") == \"Yes\\n3 3 2 1 0\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\\n-1 -1\"\nassert solution(\"-1 -1\") == \"No\"\n\"\"\"\nimport sys\nfrom math import log"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('23 5') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes\\n-1 -1'"
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"23 5\") == \"Yes\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2\") == \"No\""
    },
    {
        "number": 55,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"23 5\\n\") == \"Yes\\n3 3 2 1 0\"\nassert solution(\"13 2\\n\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(3, 5) == 4\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\n\"\"\""
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 5\\n') == '4'\nassert solution('4 8\\n') == '6'\n\"\"\"\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 8\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 5\") == \"4\"\n\"\"\""
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == 4\nassert solution(\"3 5\") == 6\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(3, 5) == 4\nassert solution(4, 8) == 6"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 56,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 5') == 4\nassert solution('5 4') == 6\n\"\"\"\n\nimport math"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"-1\"\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"-1\"\nassert solution(\"3\\n1 1\\n1 1\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == '1'\nassert solution(\"1\\n1 1\") == '-1'"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == '1'\nassert solution(\"1\\n0 0\") == '-1'\nassert solution(\"0\\n0 0\") == '0'\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == '1'\nassert solution(\"3\\n1 1\\n1 1\\n2 2\") == '1'\nassert solution(\"1\\n1 1\") == '-1'\nassert solution(\"4\\n0 0\\n1 1\\n1 1\\n2 2\") == '2'"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n2 2\") == \"-1\"\nassert solution(\"0 0\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n\n-----\n\"\"\"\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"-1\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0 0') == '1'\nassert solution('2 2\\n0 0\\n0 0') == '1'\nassert solution('3 3\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('4 4\\n0 0\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('5 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1'\n"
    },
    {
        "number": 57,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n1 1\\n0 1\\n2 1\\n2 2\\n2 0\\n0 2\") == \"1\"\nassert solution(\"3\\n0 0\\n1 1\\n0 1\\n1 1\\n0 1\\n0 1\") == \"-1\"\nassert solution(\"1\\n0 0\\n1 1\") == \"1\"\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1\\n2\") == \"1\"\nassert solution(\"5\\n3\\n4\") == \"6\"\nassert solution(\"6\\n4\\n2\") == \"4\"\nassert solution(\"20\\n5\\n6\") == \"2\""
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1\\n2\\n\") == \"1\"\nassert solution(\"5\\n3\\n4\\n\") == \"6\"\nassert solution(\"6\\n4\\n2\\n\") == \"4\"\nassert solution(\"20\\n5\\n6\\n\") == \"2\"\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\\n2\") == \"1\"\nassert solution(\"5\\n3\\n4\") == \"6\"\nassert solution(\"6\\n4\\n2\") == \"4\"\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('8\\n1\\n2') == '1'\nassert solution('5\\n3\\n4') == '6'\nassert solution('6\\n4\\n2') == '4'\nassert solution('20\\n5\\n6') == '2'\n\"\"\""
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n\"8\\n1\\n2\\n\"\n) == \"1\"\nassert solution(\n\"5\\n3\\n4\\n\"\n) == \"6\"\nassert solution(\n\"6\\n4\\n2\\n\"\n) == \"4\"\nassert solution(\n\"20\\n5\\n6\\n\"\n) == \"2\"\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1\\n2\") == \"1\"\nassert solution(\"5\\n3\\n4\") == \"6\"\nassert solution(\"6\\n4\\n2\") == \"4\"\nassert solution(\"20\\n5\\n6\") == \"2\"\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(8) == 1\nassert solution(5) == 6\nassert solution(6) == 4\nassert solution(20) == 2\nassert solution(1) == 1\n\"\"\"\n\nimport math"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1\\n2\") == \"1\"\nassert solution(\"5\\n3\\n4\") == \"6\"\nassert solution(\"6\\n4\\n2\") == \"4\"\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8\\n1\\n2') == '1'\nassert solution('5\\n3\\n4') == '6'\nassert solution('6\\n4\\n2') == '4'\nassert solution('20\\n5\\n6') == '2'\nassert solution('8\\n1\\n2') == '1'\n\n-----\n\n'''\n"
    },
    {
        "number": 58,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8 1 2\") == \"1\"\nassert solution(\"5 3 4\") == \"6\"\nassert solution(\"6 4 2\") == \"4\"\nassert solution(\"20 5 6\") == \"2\"\n\n\"\"\"\n\nimport math\nimport sys\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('6\\n1 2 3 4 5 6') == 'YES'\nassert solution('6\\n1 2 3 5 4 6') == 'NO'\nassert solution('7\\n1 2 3 4 5 6 7') == 'YES'\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 4\\n101\\n') == 'YES'\nassert solution('3\\n1 2 3\\n010\\n') == 'YES'\nassert solution('2\\n1 2\\n11\\n') == 'NO'\n\n---\n\n>>> timeit.timeit(\"solution('4\\n1 2 3 4\\n101\\n')\", number=10000)\n0.001683999999999\n>>> timeit.timeit(\"solution('3\\n1 2 3\\n010\\n')\", number=10000)\n0.00242800000000038\n>>> timeit.timeit(\"solution('2\\n1 2\\n11\\n')\", number=10000)\n0.0021900000000002\n\n'''\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"YES\"\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 5 3 4 6\\n01110\") == \"YES\"\nassert solution(\"6\\n1 2 5 3 4 6\\n01010\") == \"NO\"\n\n----"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(test_input_1) == \"YES\"\nassert solution(test_input_2) == \"NO\"\n\n\"\"\""
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 2 5 3 4 6') == 'YES'\nassert solution('1 2 5 3 4 0') == 'NO'\nassert solution('1 2 3 4 0') == 'YES'\n\"\"\""
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(a) == expected_answer\n"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 5 3 4 6\\n01110\") == \"YES\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 59,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == 'YES'\nassert solution('2 1 3') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 5 3 4 6') == 'YES'\nassert solution('1 2 5 3 6 4') == 'NO'\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1a') == '1'\nassert solution('1f') == '1'\nassert solution('1d') == '10'\nassert solution('1b') == '11'\nassert solution('1e') == '18'\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n\n\"\"\""
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1a\") == \"1\"\nassert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1a') == '1'\nassert solution('2b') == '2'\nassert solution('3c') == '3'\nassert solution('4d') == '4'\nassert solution('5e') == '5'\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\n\nprint('Success')"
    },
    {
        "number": 60,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n1 0 1 1 1 1\\n2 10\") == \"=\"\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\") == \"<\"\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\") == \">\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1 1 1 1\") == \"=\"\nassert solution(\"2 10\") == \">\"\nassert solution(\"4 7\") == \"<\"\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\") == '<'\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\") == '>'\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 0 1 1 1') == '='\nassert solution('3 3\\n1 0 2') == '<'\nassert solution('7 16\\n15 15 4 0 0 7 10') == '>'\n\n\n------Problem------\n\nA Kaprekar number is a natural number with a special property: \n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1\\n2 10') == '='\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4') == '<'\n\n\"\"\""
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1') == '='\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4') == '<'\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0') == '>'\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 7') == '<'\nassert solution('2 5') == '>'\nassert solution('15 15 4 0 0 7 10') == '='\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1') == '='\nassert solution('3 3\\n1 0 2') == '<'\nassert solution('7 16\\n15 15 4 0 0 7 10') == '>'\n"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7 16\\n15 15 4 0 0 7 10\\n4 8 0 3 1 5 0\\n\") == '>'\n\"\"\"\n\nimport sys\nimport re"
    },
    {
        "number": 61,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n1 0 1 1 1 1\") == \"=\"\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\") == \"<\"\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\") == \">\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n\") == \"BitLGM\"\nassert solution(\"2 1\\n\") == \"BitAryo\"\nassert solution(\"2 1 2\\n\") == \"BitLGM\"\nassert solution(\"2 1 2\\n\") == \"BitAryo\"\nassert solution(\"3 1 2 1\\n\") == \"BitAryo\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"BitLGM\"\nassert solution(\"3 1 1\") == \"BitAryo\"\nassert solution(\"3 2 1\") == \"BitLGM\"\nassert solution(\"4 2 1\") == \"BitAryo\"\nassert solution(\"4 3 1\") == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"BitAryo\"\nassert solution(\"2 2\") == \"BitAryo\"\nassert solution(\"1 2 1\") == \"BitLGM\"\nassert solution(\"1 1 1\") == \"BitLGM\"\n\nassert solution(\"2 2 1\") == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1') == 'BitLGM'\nassert solution('1 1\\n2 1') == 'BitAryo'\nassert solution('1 1\\n2 2') == 'BitLGM'\nassert solution('1 1\\n2 2\\n1 2') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(1) == 'BitLGM'\nassert solution(2) == 'BitAryo'\nassert solution(3) == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"BitLGM\"\nassert solution(\"1 2\") == \"BitAryo\"\nassert solution(\"2 1 1\") == \"BitLGM\"\nassert solution(\"2 1 2\") == \"BitAryo\"\nassert solution(\"3 1 1\") == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 1''') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"BitLGM\"\nassert solution(\"1 2\") == \"BitAryo\"\nassert solution(\"1 1\") == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''2\n1 1''') == 'BitLGM'\nassert solution('''2\n1 2''') == 'BitAryo'\nassert solution('''3\n1 2 1''') == 'BitLGM'\nassert solution('''3\n1 1 2''') == 'BitAryo'\n\n\"\"\""
    },
    {
        "number": 62,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"BitLGM\"\nassert solution(\"1 2\") == \"BitLGM\"\nassert solution(\"1 2 1\") == \"BitAryo\"\n\n\"\"\""
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\n\n'''\n\nfrom collections import Counter\nfrom fractions import gcd\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 4\\n6 2 8') == '4'\nassert solution('3 6\\n9 1 14') == '1'\nassert solution('3 6\\n1 14 9') == '0'\nassert solution('3 6\\n1 14 9\\n8 2 9') == '0'\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"4\"\n\"\"\"\nimport itertools\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 4\\n6 2 8') == '4'\n\"\"\""
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n6 2 8\") == \"4\"\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n9 1 14\") == \"1\"\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(open('tests/0.in').read()) == open('tests/0.out').read()\n\nprint(solution(open('input.txt').read()))\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 2 8\") == \"4\"\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n6 2 8\") == \"4\"\nassert solution(\"3 6\\n9 1 14\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 63,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 4\\n6 2 8') == '4'\n\nassert solution('3 6\\n9 1 14') == '1'\n\n\"\"\""
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"aaaab\") == \"NO\"\nassert solution(\"aacaab\") == \"NO\"\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nab\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\n\nassert solution(\"4 2\\nab\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\naabb\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\n\"\"\""
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"aacaab\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"ab\\nbb\") == \"NO\"\nassert solution(\"a\\nb\\na\\nb\") == \"YES\"\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"aacaab\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 2\\naabb') == 'YES'\nassert solution('6 3\\naacaab') == 'NO'\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('aaabb') == 'YES'\nassert solution('aacaab') == 'NO'\nassert solution('bababa') == 'NO'\nassert solution('ababab') == 'YES'\nassert solution('baaabba') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 2 aabb') == 'YES'\nassert solution('6 3 aacaab') == 'NO'\n\"\"\"\n\nn, k = [int(num) for num in input().split()]\nstring = input()\n\nlist_1 = [char for char in string]\n\nfor i in range(n):\n    if list_1.count(list_1[i]) == 1:\n        continue\n    elif list_1.count(list_1[i]) > 1:\n        list_1.remove(list_1[i])\n    elif list_1.count(list_1[i]) < 1:\n        continue"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 1 3 5 4 1 2 3 1') == '3'\nassert solution('3 3') == '0'\nassert solution('5 6 5') == '2'\nassert solution('9 2 1 3 5 4 1 2 3 1') == '3'\n\"\"\"\n"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 6 5\") == '1'\nassert solution(\"9\\n2 1 3 5 4 1 2 3 1\") == '3'"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(solution(str(input())))\nprint(solution(str(input())))\n"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 6 5') == '2'\nassert solution('9 2 1 3 5 4 1 2 3 1') == '3'\n\"\"\"\n\nimport math\nimport sys\n"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == 1\n"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == '1'\nassert solution(\"3 5 6 5\") == '2'\nassert solution(\"9 2 1 3 5 4 1 2 3 1\") == '3'\n\"\"\""
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == 1\nassert solution(\"5 6 5\") == 2\nassert solution(\"9 2 1 3 5 4 1 2 3 1\") == 3\n\n\n\"\"\"\n\nimport math\nfrom collections import Counter\n"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n3') == '1'\nassert solution('3\\n5 6 5') == '2'\nassert solution('9\\n2 1 3 5 4 1 2 3 1') == '3'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3\\n5 6 5') == '1'\nassert solution('9\\n2 1 3 5 4 1 2 3 1') == '3'\nassert solution('2\\n3 3') == '1'\n\"\"\"\nimport sys"
    },
    {
        "number": 65,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 3\\n5 6 5') == '1'\nassert solution('9\\n2 1 3 5 4 1 2 3 1') == '3'\n\"\"\"\nimport sys"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 10 1') == '1/1'\nassert solution('10 3 5') == '1/2'\nassert solution('10 1 10') == '1/2'\n"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\""
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\n\n\n\nimport unittest\nfrom unittest.mock import patch\nfrom io import StringIO\nimport sys\nimport itertools\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        with patch('sys.stdin', StringIO('10 3 2\\n')):\n            sys.stdout = StringIO()\n            solution()\n            self.assertEqual(sys.stdout.getvalue().strip(), '3/10')\n"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\n"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(10, 3, 2) == \"3/10\"\nassert solution(7, 1, 2) == \"3/7\"\n\n\"\"\"\n"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\nassert solution(\"2 3 1\") == \"1/3\"\nassert solution(\"1 1 1\") == \"1/1\"\n"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\n\n-----Problem-----\n\nGiven: t, w, b \u2264 5\u00b710^18, L \u2264 1,000,000,000\n\nWhat is the probability that Willman and Bolt tie in the end?\n\n\n-----Answer-----\n\nLet us consider the probability of tie in the end in the case when the racetrack is length 1. \nFor this we will consider the following possibilities:\n\n* Willman will take steps of length 1, so the probability of winning will be 1/t\n\n* Willman will take steps of length 2, so the probability of winning will be 1/(t-1)\n\n* Willman will take steps of length 3, so the probability of winning will be 1/(t-2)\n\n* Willman will take steps of length 4, so the probability of winning will be 1/(t-3)\n\n* Willman will take steps of length 5, so the probability of winning will be 1/(t-4)\n\n* Bolt will take steps of length 1, so the probability of winning will be 1/t\n\n* Bolt will take steps of length 2, so the probability of winning will be 1/(t-1)\n\n* Bolt will take steps of length 3, so the probability of winning will be 1/(t-2)\n\n* Bolt will take steps of length 4, so the probability of winning will be 1/(t-3)\n\n* Bolt will take steps of length 5, so the probability of winning will be 1/(t-4)\n\nThe probability of winning in each case is given by:\n\n(1/t)(1/t-1)(1/t-2)...(1/t-5) = 1/t + 1/(t-1) + 1/(t-2) + 1/(t-3) + 1/(t-4) + 1/(t-5) = 1\n\nThe probability of winning in the case of length 1 equals 1, so the probability of the tie in the end is 1.\n\nIn the case of length 2, the probability of winning is equal to 2/(t-1), so the probability of the tie in the end is 2/(t-1) = 1/2 + 1/2 = 2/t\n\nSimilarly, in the case of length 3, the probability of winning is equal to 3/(t-2), so the probability of the tie in the end is 3/(t-2) = 1/3 + 1/3 = 2/t\n\nIn the case of length 4, the probability of winning is equal to 4/(t-3), so the probability of the tie in the end is 4/(t-3) = 1/4 + 1/4 = 2/t\n\nIn the case of length 5, the probability of winning is equal to 5/(t-4), so the probability of the tie in the end is 5/(t-4) = 1/5 + 1/5 = 2/t\n\nFinally, in the case of length 6, the probability of winning is equal to 6/(t-5), so the probability of the tie in the end is 6/(t-5) = 1/6 + 1/6 = 1\n\nIn the case of length 7, the probability of winning is equal to 7/(t-6), so the probability of the tie in the end is 7/(t-6) = 1/7 + 1/7 = 1\n\nTherefore, the probability of the tie in the end is:\n\n1 + 2/(t-1) + 3/(t-2) + 4/(t-3) + 5/(t-4) + 6/(t-5) + 7/(t-6) = 7/t + 7/(t-1) + 7/(t-2) +... + 7/(t-6) = 7/t + 6/t + 5/t + 4/t + 3/t + 2/t + 1/t\n\nIn the case of length 7, the probability of tie in the end is the same, so the total probability of the tie in the end is the same, so it is:\n\n7/t + 6/t + 5/t + 4/t + 3/t + 2/t + 1/t\n\nHence the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nThe probability of tie in the end in the case of length 1 equals 7/t, so the probability of tie in the end is 7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6) = 7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 2, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 3, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 4, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 5, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 6, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-5) + 1/(t-6)\n\nIn the case of length 7, the probability of tie in the end is:\n\n7/t + 6/(t-1) + 5/(t-2) + 4/(t-3) + 3/(t-4) + 2/(t-"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\n\"\"\"\n\nimport random"
    },
    {
        "number": 66,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 10 2') == '10/11'\nassert solution('5 10 2') == '0/1'\nassert solution('5 10 1') == '1/11'\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 7 0\") == \"-\", \"Wrong Answer\"\nassert solution(\"2 0 1\") == \"+\", \"Wrong Answer\"\nassert solution(\"1 1 0\") == \"0\", \"Wrong Answer\"\nassert solution(\"0 0 1\") == \"?\", \"Wrong Answer\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 7 0\") == \"-\"\nassert solution(\"2 0 1\") == \"+\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\n\"\"\"\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(3 7 0) == '-'\nassert solution(2 0 1) == '+'\nassert solution(1 1 0) == '0'\nassert solution(0 0 1) == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 7 0\") == \"-\"\nassert solution(\"2 0 1\") == \"+\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\") == \"0\"\nassert solution(\"1 1 0\") == \"+\"\nassert solution(\"1 2 1\") == \"?\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 7 0\") == '-'\nassert solution(\"2 0 1\") == '+'\nassert solution(\"1 1 0\") == '0'\nassert solution(\"0 0 1\") == '?'"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 7 0\") == \"-\"\nassert solution(\"2 0 1\") == \"+\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\nassert solution(\"0 0 0\") == \"+\"\n\n-----Resources-----\n\n'''\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 7 0\") == \"-\", \"First example\"\nassert solution(\"2 0 1\") == \"+\", \"Second example\"\nassert solution(\"1 1 0\") == \"0\", \"Third example\"\nassert solution(\"0 0 1\") == \"?\", \"Fourth example\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 7 0\") == \"-\"\nassert solution(\"2 0 1\") == \"+\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\n"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"RURUU\") == \"3\"\nassert solution(\"LUDD\") == \"0\"\nassert solution(\"RLLL\") == \"0\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"UDRRRUUDRLRRDDRDD\") == 6\nassert solution(\"DRRLDRDRRRDRULDDD\") == 1\nassert solution(\"UDDDRRRDRDDDRLLUUU\") == -1\nassert solution
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"RURUU\") == 3\n\nassert solution(\"UUUU\") == 0\n\nassert solution(\"LURD\") == 1\n\nassert solution(\"LDRDRDRRRRRRDRDRDRDRRRRRDRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRDRRRRRDRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRRRRDRDRDRDRRR"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('UUUU') == '-1'\nassert solution('UURUUU') == '3'\n\"\"\"\n"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('RURUU') == '3'\nassert solution('RULR') == '0'\nassert solution('UUU') == '-1'\nassert solution('RRRRRR') == '7'"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"RUDRDRUDDR\") == \"RDRDRDRDDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDR"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"URURRRUUUUURDUUUDRUURRU\") == 8\nassert solution(\"ULDRLLRUDRDRDRUR\") == -1\n\"\"\""
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('RURUU') == '3'\nassert solution('UUUU') == '0'\nassert solution('RULR') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"RURUU\") == \"3\"\nassert solution(\"LURDU\") == \"3\"\nassert solution(\"LRDDD\") == \"0\"\nassert solution(\"UUUUUU\") == \"-1\"\n\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 68,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('RUDRR') == '4'\nassert solution('RDRD') == '3'\nassert solution('DRURD') == '4'\nassert solution('UDDU') == '1'\nassert solution('DRDU') == '3'\n\n'''"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10010\") == \"3\"\nassert solution(\"10010\") == \"3\"\nassert solution(\"10010\") == \"3\"\nassert solution(\"10010\") == \"3\"\nassert solution(\"10010\") == \"3\"\n"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10010') == 3\nassert solution('10101010') == 2\nassert solution('1101010') == 2\nassert solution('10011010') == 2\nassert solution('10111010') == 2\n"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('10010') == 3\nassert solution('11100111011111101101111') == -1\n\"\"\"\n\n\nimport sys\nimport os\nimport datetime"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"010010\") == 3\nassert solution(\"10101\") == 1\nassert solution(\"10110\") == -1\n\"\"\"\nimport os\nimport sys"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('010') == 3\n\"\"\"\n"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"101010\") == 3\n\"\"\"\n"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('101010') == 3\n\"\"\""
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10110') == 3\n\"\"\"\n\nfrom typing import List\nimport unittest\n\n\nclass Solution:\n    def prefix_sum(self, s: str) -> List[int]:\n        ans = [0, 0]\n        for c in s:\n            ans[int(c)] += 1\n        return ans\n\n    def prefix_sum_calc(self, s: List[int]) -> List[int]:\n        ans = [0, 0]\n        for c in s:\n            ans[int(c)] += 1\n        return ans\n\n    def good_prefixes(self, s: str, balance: int) -> int:\n        good_prefixes = 0\n        if balance < 0:\n            return good_prefixes\n        prefix_sum = self.prefix_sum(s)\n        if prefix_sum[0] == 0:\n            return good_prefixes\n        if prefix_sum[0] == prefix_sum[1]:\n            return good_prefixes + 1\n        if prefix_sum[0] > prefix_sum[1]:\n            balance += prefix_sum[0] - prefix_sum[1]\n        return good_prefixes + self.good_prefixes(s, balance)\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        solution = Solution()\n        self.assertEqual(solution.good_prefixes('10110', 10), 3)\n        self.assertEqual(solution.good_prefixes('10110', -10), -1)\n        self.assertEqual(solution.good_prefixes('101101', 3), 0)\n        self.assertEqual(solution.good_prefixes('101101101010', 1), 1)\n        self."
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"010010\") == 3\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 69,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10010\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10203049 2\") == \"3\"\nassert solution(\"100 9\") == \"2\"\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"30020 3\") == \"1\"\n\"\"\""
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"0\"\n\nassert solution(\"100 9\") == \"2\"\n\nassert solution(\"10203049 2\") == \"3\"\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('1101011111111011011110011') == '7'\nassert solution('11') == '0'\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n\"\"\"\nimport re\n\nregex = r'^(?P<n1>\\d+) (?P<k>\\d+)$'\nmatcher = re.match(regex, stdin)\nn1 = int(matcher['n1'])\nk = int(matcher['k'])\n\nn1_len = len(str(n1))\ndelta = 0\n\nwhile n1_len > k:\n    n1 = n1 // 10\n    delta += 1\n    n1_len = len(str(n1))\n\nprint(delta)\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n\"\"\"\n\nn, k = [int(c) for c in input().split()]\n\ncount = 0\nwhile n!= 0:\n    if n % 10 ** k == 0:\n        break\n    n //= 10\n    count += 1\n\nprint(count)\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\"\n\n\nimport math\n"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'"
    },
    {
        "number": 70,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\""
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''1 3 8 1 1''') == '''3 2 3'''\nassert solution('''4 2 9 4 2''') == '''2 1 1'''\nassert solution('''5 5 25 4 3''') == '''1 1 1'''\nassert solution('''100 100 1000000000000000000 100 100''') == '''101010101010101 50505050505051 50505050505051'''\n\n\n\n'''\n\n\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u044b \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b\u0445 \u0442\u0435\u0441\u0442\u043e\u0432. \u0412\u0430\u0448\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043d\u0430 \u0432\u0445\u043e\u0434 \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430 n, m, k \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0438\u0437 n \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 1..m, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0443\u043c\u043c\u0430 \u043d\u0435 \u043a\u0440\u0430\u0442\u043d\u0430 k.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 n=2, m=3, k=4 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c 2 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 1+2, 1+3 \u0438 2+3, \u0447\u0442\u043e \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0441\u0443\u043c\u043c\u0430 1+2+3=6 \u0434\u0430\u0435\u0442 \u043d\u0435 \u043a\u0440\u0430\u0442\u043d\u043e 4.\n\n\u0412\u0430\u0448\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435. \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u0442\u043e\u0433\u0434\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0440\u0430\u0432\u043d\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0438\u0437 m \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439, \u0441\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u043a\u0440\u0430\u0442\u043d\u0430 k.\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n2 3 4\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n0\n\u041a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u0442.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n3 5 8\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n2\n\u041a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435:\n2 + 3 = 5\n2 + 5 = 7\n3 + 8 = 11\n\u041f\u043e \u0441\u0443\u043c\u043c\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043a\u0440\u0430\u0442\u043d\u043e k=4, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0440\u0430\u0432\u043d\u043e 2.\n\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n4 2 6\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n0\n\u041a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u0442.\n\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n7 2 7\n\n\u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n3\n\u041a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435:\n2 + 7 = 9\n2 + 2 = 4\n7 + 7 = 14\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\ufffd"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9 4 2\") == \"2 1 1\"\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\n\"\"\"\n\nstdin = \"4 2 9 4 2\"\nstdin = \"5 5 25 4 3\"\n\nn, m, k, x, y = map(int, stdin.split())\n\nm = m - 1\nn = n - 1\n\npre = k % m\nresult = [pre]\npre = (pre + m) % n\nresult.append(pre)\npre = (pre + n) % n\nresult.append(pre)\npre = (pre + n) % n\nresult.append(pre)\npre = (pre + m) % n\nresult.append(pre)\npre = (pre + m) % n\nresult.append(pre)\n\nprint(max(result), min(result), result.count(pre))\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\nn, m, k, x, y = map(int, input().split())"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\n\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n\nassert solution(\"4 2 9 4 2\") == \"2 1 1\"\n\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\n\nassert solution(\"1 1 1 1 1\") == \"1 1 1\"\n\nprint(\"Test finished\")\n\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 3 8 1 1\") == \"3 2 3\"\n\n\"\"\"\n\nn, m, k, x, y = map(int, input().split())\n"
    },
    {
        "number": 71,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9 4 2\") == \"2 1 1\"\nassert solution(\"5 5 25 4 3\") == \"1 1 1\"\nassert solution(\"100 100 1000000000000000000 100 100\") == \"101010101010101 50505050505051 50505050505051\"\n\n\n-----Explanation-----\n\nIf there is only one row in the class, then the teacher always asks children from this row.\n\n\n-----Solution-----\n\nThe idea is to use binary search to find the minimal and maximal number of questions and then to count how many times the teacher asked Sergei.\n\n\"\"\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == 'Kuro'\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == 'Shiro'\nassert solution(\"1\\nabcabc\\ncbabac\\nababca\") == 'Katie'\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == 'Draw'\n\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\n\"\"\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\naaab\") == \"Katie\"\nassert solution(\"2\\naaab\") == \"Katie\"\nassert solution(\"3\\naaa\") == \"Kuro\"\nassert solution(\"3\\naaa\") == \"Kuro\"\nassert solution(\"7\\naaaa\") == \"Kuro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"1\\nabcabc\\ncbabac\\nababca\") == \"Katie\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\nassert solution(\"8\\ntreasurehunt\\ntreasurehunt\\ntreasurehunt\\nthreefriends\\nthreefriends\\nthreefriends\\nhiCodeforces\") == \"Draw\""
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\\n\") == 'Kuro'\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\\n\") == 'Shiro'\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\\n\") == 'Draw'\nassert solution(\"1\\nabcabc\\ncbabac\\nababca\\n\") == 'Katie'\n\"\"\"\n\n\nimport sys\nfrom typing import Iterator, List, Tuple\n\nstdin = sys.stdin\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"Kuroo\") == \"Kuro\"\nassert solution(\"Shiro\") == \"Shiro\"\nassert solution(\"Katie\") == \"Katie\"\n\nassert solution(\"treasurehunt\") == \"Shiro\"\nassert solution(\"threefriends\") == \"Draw\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\n\"\"\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\nKuro\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\n\"\"\"\n"
    },
    {
        "number": 72,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\nKuroo\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"1\\nabcabc\\ncbabac\\nababca\") == \"Katie\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(5, 5, 10, 5, 4) == 1\nassert solution(12, 4, 12, 4, 1) == 3\nassert solution(15, 1, 100, 0, 0) == 15\n\n\"\"\"\n\n\nfrom math import ceil\nfrom typing import List, Tuple, Dict"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 5 10 5 4\"\n) == \"1\"\n\nassert solution(\n    \"12 4 12 4 1\"\n) == \"3\"\n\nassert solution(\n    \"15 1 100 0 0\"\n) == \"15\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\n\"\"\"\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 5 10 5 4\") == 1\n\nassert solution(\"12 4 12 4 1\") == 3\n\nassert solution(\"15 1 100 0 0\") == 15\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\"\nprint(\"\ud1b5\uacfc\")\n"
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\n\"\"\""
    },
    {
        "number": 73,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 5 10 5 4\") == \"1\"\nassert solution(\"12 4 12 4 1\") == \"3\"\nassert solution(\"15 1 100 0 0\") == \"15\"\n\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('25') == '2\\n5 11'\nassert solution('19') == '3\\n5 7'\nassert solution('1') == '1\\n'\n\"\"\"\nimport math\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"27\") == \"3 11 11\"\n\n\"\"\"\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"27\") == \"3 5 11 11\"\nprint('Tests passed!')\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3 2\"\nassert solution(\"15\") == \"5 7\"\nassert solution(\"23\") == \"3 5 7\"\nassert solution(\"101\") == \"2 3 5\"\nassert solution(\"1011\") == \"2 3 7 11\"\n\"\"\""
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(7) == [3, 5, 7]\nassert solution(8) == [3, 5, 5, 7]\nassert solution(9) == [3, 3, 5, 5, 7]\nassert solution(11) == [3, 3, 5, 7, 7]\nassert solution(13) == [3, 3, 5, 7, 7, 11]\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"27\") == \"3 1 1\"\n\"\"\"\nimport math"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('13') == '3 1 7'\nassert solution('31') == '3 1 1 1 1 1'\nassert solution('5') == '5'\nassert solution('8') == '1 1 1 1 1 1 1 1 1'\nassert solution('11') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1'\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"27\") == \"3 11 11\""
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"27\") == \"3 5 11 11\"\n\"\"\"\n"
    },
    {
        "number": 74,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('27') == '3\\n5 11 11'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\\n\") == \"YES\\n1 2\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\\n\") == \"NO\"\n\"\"\""
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\\n\") == \"YES\\n1 2\"\n\n\"\"\""
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\\n\") == 'YES\\n1 2'\nassert solution(\"3 3\\n..*\\n.*.\\n*..\\n\") == 'NO'\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\") == \"YES\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\") == \"NO\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\\n\") == \"YES\\n1 2\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\\n\") == \"NO\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\\n\") == \"YES\\n1 2\"\n\nprint(solution(\"3 4\\n.*..\\n....\\n.*..\\n\"))\nprint(solution(\"3 3\\n..*\\n.*.\\n*..\\n\"))\nprint(solution(\"6 5\\n.*..\\n..*\\n*****\\n..*..\\n..*..\\n..*..\\n\"))\n"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\\n\") == \"YES\\n1 2\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\\n\") == \"NO\"\nassert solution(\"6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n..*..\\n\") == \"YES\\n3 3\"\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == 'YES\\n1 2'\nassert solution(test_input_2) == 'NO'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\") == \"YES\\n1 2\"\nassert solution(\"3 3\\n..*\\n.*.\\n*..\") == \"NO\"\n"
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 4\\n.*..\\n....\\n.*..\\n') == 'YES\\n1 2'\nassert solution('3 3\\n..*\\n.*.\\n*..\\n') == 'YES\\n3 3'\nassert solution('6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n..*..\\n') == 'YES\\n2 4'\n\n\"\"\""
    },
    {
        "number": 75,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n.*..\\n....\\n.*..\") == \"YES\\n1 2\"\n\"\"\""
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n\"\"\""
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"9 7 3 8\") == '15'\nassert solution(\"2 7 3 7\") == '14'\nassert solution(\"30 6 17 19\") == '0'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n\"\"\""
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"9 7 3 8\") == '15'\nassert solution(\"2 7 3 7\") == '14'\nassert solution(\"30 6 17 19\") == '0'\n\"\"\"\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == ''\n\n\"\"\"\n\n\nfrom utils import *\n\n\n@timer\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"9 7 3 8\") == '15'\n\"\"\"\n\nn, m, a, b = map(int, input().split())\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\n\"\"\"\n\nimport sys\n\nn, m, a, b = sys.stdin.readline().split()\nn, m, a, b = int(n), int(m), int(a), int(b)\n\ncost = a * n\ncost += (b * n // m) * m\nprint(cost)\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\n\"\"\"\n"
    },
    {
        "number": 76,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n\"\"\""
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-2 2 -3 1\") == 3\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nsequence = list(map(int, sys.stdin.readline().strip().split()))\nodd_sum = 0\nmax_sum = -sys.maxsize\n\nfor i in range(n):\n    odd_sum += sequence[i]\n    if odd_sum % 2!= 0:\n        max_sum = max(sequence[i], max_sum)\n    for j in range(i + 1, n):\n        odd_sum += sequence[j]\n        if odd_sum % 2!= 0:\n            max_sum = max(max_sum, sequence[j])"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n-2 2 -3 1') == 3\n\"\"\"\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4\\n-2 2 -3 1') == '3'\nassert solution('3\\n2 -5 -3') == '-1'\n\"\"\"\n"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\n2 2 -3 1') == '3'\nassert solution('3\\n2 -5 -3') == '-1'\nassert solution('5\\n1 -5 3 4 2') == '9'\n\"\"\"\n"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 -5 -3\") == -1\n\"\"\"\n\nimport math\n\nn = int(input())\na = list(map(int, input().split(' ')))\n\nmax_sum = -math.inf\nbest_start = 0\nbest_end = 0\n\nsum_odd = 0\nfor i in range(0, n - 1):\n    sum_odd = sum_odd + a[i]\n    if sum_odd > max_sum:\n        max_sum = sum_odd\n        best_start = i\n        best_end = i\n    if sum_odd % 2 == 1:\n        if i + 1 < n:\n            sum_odd = sum_odd + a[i + 1]\n        else:\n            sum_odd = sum_odd\n    if sum_odd % 2 == 1:\n        if i + 2 < n:\n            sum_odd = sum_odd + a[i + 2]\n        else:\n            sum_odd = sum_odd"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(str(input())) == str(output())"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 2 -3 1\") == 3\nassert solution(\"3\\n2 -5 -3\") == -1"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2 1 3 1') == '1'\nassert solution('2 -3 1') == '3'\nassert solution('2 -3 1 -1') == '-1'\nassert solution('1 2 1 3 1 -1') == '3'\n"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 -2 2 -3 1\") == 3\nassert solution(\"3 2 -5 -3\") == -1\n"
    },
    {
        "number": 77,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-2 2 -3 1\") == \"3\"\n\"\"\""
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\\n\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\\n\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 1\\n1 2\\n1 3') == '6'\nassert solution('3 3\\n1 1\\n1 1\\n1 3') == '2'\nassert solution('4 10\\n5 3\\n2 1\\n3 2\\n5 1') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\n\"\"\""
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n 5 3\\n 2 1\\n 3 2\\n 5 1\") == \"10\"\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\n\"\"\"\n\nn, t = [int(x) for x in stdin.readline().split()]\nd = {1: 1, 2: 1, 3: 1}\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\\n\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 1\\n1 3\") == \"10\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\n"
    },
    {
        "number": 78,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''4 10\n5 3\n2 1\n3 2\n5 1''') == '10'\n\nassert solution('''3 3\n1 1\n1 2\n1 3''') == '2'\n\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1''') == '10'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n4 3\n3 4\n4 2\n5 2''') == '8'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n4 3\n3 4\n4 2\n5 2\n4 1''') == '8'\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"333333338\"\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '333333338'\nassert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('5') == '130'\n\"\"\"\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"333333338\"\n\n\"\"\"\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"333333338\"\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"333333338\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '333333338'\nassert solution('10') == '10'\nassert solution('100') == '10'\nassert solution('1000') == '10'\n"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"333333338\"\n\"\"\"\nimport sys\nimport random\nimport math"
    },
    {
        "number": 79,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\n\"\"\"\n\n\nimport unittest\n\nfrom gmpy2 import is_prime, invert, mpz\n\nMODULUS = 10 ** 9 + 7\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\n\"\"\"\n\na, b, x, y = [int(x) for x in stdin.split()]"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 2\") == 2\n\"\"\"\nimport math\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 2\") == 2\nassert solution(\"1 12 1 12\") == 4\nassert solution(\"50 100 3 30\") == 0\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2\") == 2\nassert solution(\"1 12 1 12\") == 4\n\"\"\"\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 2\") == 2\nassert solution(\"1 12 1 12\") == 4\nassert solution(\"50 100 3 30\") == 0\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\n\nassert solution(\"1 12 1 12\") == \"4\"\n\nassert solution(\"50 100 3 30\") == \"0\"\n"
    },
    {
        "number": 80,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 2\") == 2"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 10\") == \"2\"\n\nassert solution(\"21 31\") == \"9\"\n\nassert solution(\"5 10\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 10\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''6 10''') == '2'\nassert solution('''21 31''') == '9'\nassert solution('''5 10''') == '0'\n\n\n'''\nGiven a positive integer $a$, let's call $a$ an asymptotic expansion of a positive integer. Then $a$ is an asymptotic expansion of the non-negative integer $b$, if and only if there exists a non-negative integer $k$ such that $b + ak \\ge b$, and this $k$ is a positive integer.\n\nWe want to calculate a non-negative integer $k$, such that $a + k = b + ak$, where $k$ is a positive integer.\n\nLet's consider an example. Consider an asymptotic expansion of the non-negative integer 12. If we calculate a non-negative integer $k$, such that $12 + k = 24 + 2k$, then it turns out that $2k = 6$. This means that 12 is an asymptotic expansion of the non-negative integer 24.\n\nNow, let's consider another example. Consider an asymptotic expansion of the non-negative integer 39. If we calculate a non-negative integer $k$, such that $39 + k = 979 + 97k$, then it turns out that $97k = 30$. This means that 39 is an asymptotic expansion of the non-negative integer 979.\n\nGiven a positive integer $a$, let's call $a$ an asymptotic expansion of a positive integer. Find a non-negative integer $k$, such that $a + k = b + ak$, where $k$ is a positive integer.\n\n----Input Format----\n\nThe only line contains an integer $a$ ($1 \\le a \\le 10^9$).\n\n\n----Output Format----\n\nPrint a non-negative integer $k$, such that $a + k = b + ak$, where $k$ is a positive integer.\n\n----Sample Input----\n\n3\n\n----Sample Output----\n\n1\n\n----Explanation----\n\nGiven a = 3, there is only one possible value of k: k = 1. We can write a + k = 3 + 3k = 3 + 1k = 3 + 1 = 3 + 2 = 3 + 3.\n\n'''\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\nassert solution(\"1 3\") == \"0\"\n\n'''\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\n\n\"\"\"\n\n\nfrom math import gcd"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"0\"\nassert solution(\"21 31\") == \"9\"\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 10\") == \"0\"\n\n\"\"\"\n\na, b = [int(x) for x in input().split()]\nm = min(a, b)\n"
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\""
    },
    {
        "number": 81,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 10\") == \"4\"\nassert solution(\"3 5\") == \"3\"\n\"\"\""
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"4\"\nassert solution(\"3 5\") == \"3\"\n"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(test1) == \"4\"\nassert solution(test2) == \"3\"\nprint('Test finished')\n\n\n\"\"\""
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('2 10\\n8 9') == '4'\n\"\"\""
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('4 2\\n2 2 2') == '0'\nassert solution('3 10\\n1 2 3') == '0'\nassert solution('3 5\\n5 1 5') == '0'\n\nprint('Success')\n\n-----\n\nimport sys\nimport math"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n8 9\") == \"4\"\n"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''2 10\n8 9''') == '4'\nassert solution('''3 5\n4 4 4''') == '3'\nassert solution('''3 5\n5 5 5''') == '0'\nassert solution('''1 1\n1''') == '0'\n"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(test_input) == test_solution"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 10\\n8 9') == 4\n"
    },
    {
        "number": 82,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('5 5\\n1 2 3 4 5') == '0'\nassert solution('5 5\\n5 4 3 2 1') == '4'\nassert solution('5 5\\n5 5 5 5 5') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\n\"\"\""
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"7 0 1 -1 0 0 2\") == \"0\"\nassert solution(\"5 10 0 -7 2 6\") == \"4\"\n\"\"\"\n\nimport sys\nimport math\nfrom typing import List\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\\n\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\\n\") == \"0\"\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''5\n10 0 -7 2 6''') == '4'\nassert solution('''7\n0 0 1 -1 0 0 2''') == '0'\n\"\"\"\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == '4'\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\n\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 83,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(7) == 3\nassert solution(14) == 9\nassert solution(50) == 1\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('7777777') == '20'\nassert solution('987654321') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\nprint('Success')"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('7\\n') == '3'\nassert solution('14\\n') == '9'\nassert solution('50\\n') == '1'"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('14') == '9'\nassert solution('50') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\n\nprint('The script is working')"
    },
    {
        "number": 84,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('1\\n2\\n3\\n4\\n5') == 2\nassert solution('2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5') == 2\nassert solution('1\\n2\\n3\\n4\\n5') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 7\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 6\\n2 3') == '1\\n1 6'\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''2 6\n2 3''') == '1\\n1 6\\n2 3'\n\"\"\""
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 6') == '1'\nassert solution('36 5') == '3'\nassert solution('3 5') == '-1'\nassert solution('1 1') == '2 1'\n\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"36 5\\n10 16\") == \"3\\n16 5\"\nassert solution(\"2 6\\n2 3\") == \"1\\n1 6\"\n\"\"\""
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 6\\n2 3\") == \"1\\n1 6\\n2 3\"\nassert solution(\"36 5\\n10 16\") == \"3\\n16 5\\n5 16\"\nassert solution(\"3 5\\n2 1\") == \"-1\"\n\nprint('Success')\n\n\"\"\"\n\na, b = map(int, input().split())\nc, d = map(int, input().split())\na, b, c, d = sorted([a, b, c, d])\nprint(a * b + c * d)\nprint(a * d + c * b)\nprint(a * b + c * d)\nprint(a * d + c * b)\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 6\\n2 3\") == \"1\""
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 6\\n2 3\") == \"1\"\n\nassert solution(\"36 5\\n10 16\") == \"3\\n16 5\"\n\nassert solution(\"3 5\\n2 1\") == \"3\\n1 5\"\n\nassert solution(\"1 1\\n1 1\") == \"1\"\n\nprint(\"PASSED\")\n\n\"\"\""
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 6\\n2 3') == '1\\n1 6\\n2 3'\nassert solution('36 5\\n10 16') == '3\\n16 5\\n5 16'\nassert solution('3 5\\n2 1') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 6\"\n) == \"1\"\nassert solution(\n    \"36 5\"\n) == \"3\"\nassert solution(\n    \"3 5\"\n) == \"1\"\nassert solution(\n    \"2 1\"\n) == \"1\"\nassert solution(\n    \"18 5\"\n) == \"3\"\n"
    },
    {
        "number": 85,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 6\\n2 3\") == \"1\\n1 6\"\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 7 7 4') == 'Vasiliy'\nassert solution('2 1 2 2') == 'Polycarp'\n\"\"\"\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\""
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 7 7 4') == 'Vasiliy'\nassert solution('2 1 2 2') == 'Polycarp'\n\"\"\"\nfrom typing import Iterable, List\nfrom collections import defaultdict\nimport math\n\nfrom termcolor import colored"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Polycarp\"\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 86,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n\n\"\"\"\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 7\") == '6'\n\"\"\""
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 7') == 6\nassert solution('1 1') == 5\nassert solution('11 6') == 5\n\"\"\"\n\nimport math\n\n\"\"\"\ntest1:\n1 7\n\ntest2:\n1 1\n\"\"\"\n\nmonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 7\\n\") == \"6\"\nassert solution(\"1 1\\n\") == \"5\"\nassert solution(\"11 6\\n\") == \"5\"\nprint('All tests passed.')"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\""
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\n"
    },
    {
        "number": 87,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594 000000000 72057595 000000000') == '26'\n\nprint('Passed')\n\n\"\"\"\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 10\") == \"2\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594 000000000 72057595 000000000') == '26'"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"2015 2015\") == \"1\"\nassert solution(\"100 105\") == \"0\"\nassert solution(\"72057594 000000000 72057595 000000000\") == \"26\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"2015 2015\") == \"1\"\nassert solution(\"100 105\") == \"0\"\nassert solution(\"72057594 000000000 72057595 000000000\") == \"26\"\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 10') == '2'\n\"\"\"\n\na, b = [int(x) for x in stdin.split()]\ncnt = 0\nfor i in range(a, b + 1):\n    if bin(i)[2:].count(\"0\") == 1:\n        cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594 000000000 72057595 000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 10\") == 2\nassert solution(\"2015 2015\") == 1\nassert solution(\"100 105\") == 0\nassert solution(\"72057594000000000 72057595000000000\") == 26\n-----"
    },
    {
        "number": 88,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"2015 2015\") == \"1\"\nassert solution(\"72057594 000000 000 72057595 000000 000\") == \"26\"\n\n\"\"\"\n\n\n\"\"\"\nWrong Answer\nInput\n72057594000000000 72057595000000000\n\nOutput\n4\n"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 4\n\"\"\""
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 4\nassert solution(\"4\") == 6\n\"\"\"\n"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4') == '6'\nassert solution('3') == '4'\n\"\"\"\nimport sys"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 4\nassert solution(\"4\") == 6\n\"\"\"\nimport itertools\nfrom collections import defaultdict\n"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2') == 2\nassert solution('3') == 4\nassert solution('4') == 6\n\"\"\""
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '6'\n\"\"\"\n\n\"\"\"\nThe brute force solution here would be to put each segment on its own layer, and then delete any segments that overlap with any of the remaining segments in the current layer."
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\") == 2\nassert solution(\"8\") == 3\nassert solution(\"9\") == 4\nassert solution(\"10\") == 5\n\"\"\"\n"
    },
    {
        "number": 89,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2') == 2\nassert solution('3') == 4\nassert solution('4') == 6\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\n\"\"\"\n\nn, k, s = map(int, input().split())\na = list(map(int, input().split()))\n\nimport numpy as np\n\ndp = np.full((n + 1, k + 1), -1)\ndp[0][0] = 1\n\nfor i in range(1, n + 1):\n    for j in range(0, k + 1):\n        if dp[i - 1][j] >= 0:\n            if j - a[i - 1] >= 0:\n                dp[i][j] = dp[i - 1][j] + dp[i - 1][j - a[i - 1]]\n            else:\n                dp[i][j] = dp[i - 1][j]\n\nprint(dp[n][s])\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2 30\") == \"1\"\nassert solution(\"3 1 1\") == \"6\""
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\nassert solution(\"2 2 30\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2 30\\n4 3\") == \"1\"\nassert solution(\"3 1 1\\n1 1 1\") == \"6\"\nassert solution(\"3 1 1\\n1 1 1\") == \"6\"\nassert solution(\"3 1 1\\n1 1 1\") == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 2 30\\n4 3') == '1'\n\"\"\"\nimport math\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('3 1 1') == '6'\nassert solution('3 2 1') == '0'\nassert solution('2 3 1') == '0'\nassert solution('3 1 1') == '6'\n\n------END------\n\n\"\"\""
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2 30\") == 1\nassert solution(\"2 2 7\") == 1\nassert solution(\"3 1 1\") == 6\n\"\"\"\nfrom collections import defaultdict\nimport re"
    },
    {
        "number": 90,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 2 30\\n4 3') == '1'\nassert solution('3 1 1\\n1 1 1') == '6'\n\"\"\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\n\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\n\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\""
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5 10\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\\nNO\\nNO\\nNO\\nNO\"\nassert solution(\"1 100\\n0 0\\n0 0\") == \"YES\"\nassert solution(\"1 100\\n1 0\\n0 0\") == \"YES\"\nassert solution(\"1 100\\n0 1\\n0 0\") == \"YES\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(open(r\"D:\\Code\\Git\\kaggle_competitions\\bronze-medal-standings\\input\\input002\", \"r\").read()) == \"NO\"\nassert solution(open(r\"D:\\Code\\Git\\kaggle_competitions\\bronze-medal-standings\\input\\input005\", \"r\").read()) == \"NO\"\nassert solution(open(r\"D:\\Code\\Git\\kaggle_competitions\\bronze-medal-standings\\input\\input005\", \"r\").read()) == \"NO\"\nassert solution(open(r\"D:\\Code\\Git\\kaggle_competitions\\bronze-medal-standings\\input\\input005\", \"r\").read()) == \"NO\"\nassert solution(open(r\"D:\\Code\\Git\\kaggle_competitions\\bronze-medal-standings\\input\\input005\", \"r\").read()) == \"NO\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9') == 'YES'\nassert solution('4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9') == 'YES'\nassert solution('4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9') == 'YES'\nassert solution('4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9') == 'YES'\n\"\"\""
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"3 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\"\nassert solution(\"3 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\"\nassert solution(\"3 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\"\nassert solution(\"3 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"NO\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\") == \"NO\"\n\"\"\""
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\n\"\"\"\n"
    },
    {
        "number": 91,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\nassert solution(\"4 100\\n0 0 0 0\\n1 2\\n1\\n3 4\\n1 4 1\\n3 2\\n0 1 3\\n3 9\\n0 59049 810\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == 20\nassert solution('5 6 7') == 1520\n\"\"\""
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\n    '2 2 2'\n) == '20'\n\nassert solution(\n    '5 6 7'\n) == '1520'\n\n\"\"\""
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == 20\n\"\"\"\n\nimport unittest\n\nclass Solution:\n\n    def calculate_num_divisors(self, num):\n        count = 0\n        for i in range(1, int(num**0.5) + 1):\n            if num % i == 0:\n                count += 1\n\n        return count\n\n    def calculate_prod(self, num1, num2):\n        return self.calculate_num_divisors(num1) * self.calculate_num_divisors(num2)\n\n\n    def calculate_sum(self, num1, num2, num3):\n        return self.calculate_num_divisors(num1) * self.calculate_num_divisors(num2) * self.calculate_num_divisors(num3)\n\n    def solution(self, input: str) -> int:\n        a, b, c = [int(n) for n in input.split(\" \")]\n\n        return self.calculate_sum(a, b, c) % int(10 ** 9 + 7)\n\n\nclass TestSolution(unittest.TestCase):\n\n    def setUp(self):\n        self.solution = Solution()\n\n    def test_solution(self):\n        self.assertEqual(\n            self.solution(\"2 2 2\"),\n            20,\n        )\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == 20\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 2 2') == 20\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\"\n\nprint(solution(\"5 6 7\"))\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '20'\n\"\"\"\n\nimport math\na,b,c = map(int, input().split())"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == 20\n\"\"\"\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == 20\n"
    },
    {
        "number": 92,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == 20\nprint('OK!')\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n\n\n\n-----Notes-----\n\n1. Write your solution assuming that the initial configuration of both puzzles is a 2 x 2 grid, and that no tile is labeled 'X' except possibly for the empty cell. You can assume that all puzzles will be valid and that no puzzle contains a tile labeled 'X' except for the empty cell.\n\n2. In the case that Bessie and Elsie are not best friends, print \"NO\" (without quotes).\n\n3. If two puzzles can be made to have the same configuration, print \"YES\" (without quotes).\n\n4. HINT: Note that tiles with 'B' and 'C' have the same coordinates as tiles with 'A'.\n\n5. HINT: A word on terminology:\n        - \"Orientation\" (the way in which a puzzle is viewed) is the same as \"configuration\" (the way in which a puzzle is stored).\n        - A \"flip\" is a move where a tile is rotated 180 degrees.\n        - A \"rotate\" is a move where a tile is rotated clockwise or counter-clockwise.\n        - A \"reflect\" is a move where a tile is reflected vertically.\n        - A \"translate\" is a move where a tile is translated in one or both of the directions.\n\n\"\"\""
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''\nAB\nXC\nXB\nAC\n''') == 'YES'\nassert solution('''\nAB\nXC\nAC\nBX\n''') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('AB\\nXC\\nXB\\nAC') == 'YES'\nassert solution('AB\\nXC\\nAC\\nBX') == 'NO'\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n\"\"\""
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n\nassert solution(\"AB\\nBC\\nAC\") == \"YES\"\nassert solution(\"AB\\nBC\\nBA\") == \"NO\"\n\nassert solution(\"AC\\nBC\\nAC\") == \"YES\"\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\n\"\"\"\n\nimport copy\n\ngrid1 = []\ngrid2 = []\n\nfor i in range(2):\n    grid1.append([])\n    for j in range(2):\n        grid1[i].append(input())\n\nfor i in range(2):\n    grid2.append([])\n    for j in range(2):\n        grid2[i].append(input())\n\n\n\ngrid1_copy = copy.deepcopy(grid1)\ngrid2_copy = copy.deepcopy(grid2)"
    },
    {
        "number": 93,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('13\\n12') == '12'\nassert solution('16\\n11311') == '475'\nassert solution('20\\n999') == '3789'\n"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"12\"\nassert solution(\"16\") == \"475\"\nassert solution(\"20\") == \"3789\"\nassert solution(\"17\") == \"594\"\n\n\"\"\"\n\nfrom string import ascii_lowercase, ascii_uppercase\n\nfrom typing import Dict\n"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"13\\n12\") == '12'\nassert solution(\"16\\n11311\") == '475'\nassert solution(\"17\\n2016\") == '594'\n\n'''"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('13') == '12'\nassert solution('16') == '475'\nassert solution('17') == '594'\nassert solution('20') == '3789'\n\"\"\""
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('13') == '12'\nassert solution('16') == '475'\n\"\"\"\nimport math\n"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('13\\n12\\n') == '12'\n\"\"\"\n\n\n\nfrom fractions import Fraction\n\nn = int(stdin.readline())\n\nk = int(stdin.readline())\n\nres = 0\n\nx = k\n\nwhile True:\n    if k % n == 0:\n        res = k\n        break\n    else:\n        x = k // n\n        res = x * n + x\n        k = x\n\nprint(res)\n"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"13\\n12\") == \"12\"\nassert solution(\"16\\n11311\") == \"475\"\nassert solution(\"20\\n999\") == \"3789\"\nassert solution(\"17\\n2016\") == \"594\"\n\"\"\"\nimport sys"
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"13\\n12\\n\") == \"12\"\nassert solution(\"16\\n11311\\n\") == \"475\"\nassert solution(\"20\\n999\\n\") == \"3789\"\nassert solution(\"17\\n2016\\n\") == \"594\""
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"13\\n12\") == \"12\"\nassert solution(\"16\\n11311\") == \"475\"\nassert solution(\"20\\n999\") == \"3789\"\nassert solution(\"17\\n2016\") == \"594\""
    },
    {
        "number": 94,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"13\\n12\\n\") == \"12\\n\"\nassert solution(\"16\\n11311\\n\") == \"475\\n\"\nassert solution(\"20\\n999\\n\") == \"3789\\n\"\n\"\"\"\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 5 5 4 2\") == \"YES\"\nassert solution(\"5\\n10 20 30 20 10\") == \"YES\"\nassert solution(\"4\\n1 2 1 2\") == \"NO\"\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 5 5 4 2\") == \"YES\"\nassert solution(\"6 1 5 5 4 2\") == \"YES\"\nassert solution(\"5 1 5 5 4 2\") == \"YES\"\nassert solution(\"5 1 5 5 4 2\") == \"NO\"\nassert solution(\"5 1 5 5 4 2\") == \"YES\"\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 5 5 4 2\") == \"YES\"\nassert solution(\"1 2 1 2\") == \"NO\"\nassert solution(\"10 20 30 20 10\") == \"YES\"\nassert solution(\"3 3 3 3 3 3 3\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7\") == \"YES\"\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n1 5 5 5 4 2') == 'YES'\n\nassert solution('6\\n1 5 5 5 4 2') == 'YES'\n\nassert solution('6\\n1 5 5 5 4 2') == 'YES'\n\nassert solution('4\\n1 2 1 2') == 'NO'\n\nassert solution('7\\n3 3 3 3 3 3 3') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2 1 2') == 'YES'\nassert solution('6 2 2 1 2') == 'YES'\nassert solution('7 2 2 1 2') == 'YES'\n\n\"\"\"\nimport unittest\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 5 5 4 2\") == \"YES\"\nassert solution(\"5\\n10 20 30 20 10\") == \"YES\"\nassert solution(\"4\\n1 2 1 2\") == \"NO\"\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 5 5 4 2\\n\") == \"YES\"\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 5 5 4 2\") == \"YES\"\nassert solution(\"5\\n10 20 30 20 10\") == \"YES\"\nassert solution(\"4\\n1 2 1 2\") == \"NO\"\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"YES\"\n"
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n 1 5 5 5 4 2\") == \"YES\"\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 5 5 5 4 2\") == \"YES\"\nassert solution(\"4 2 1 2\") == \"NO\"\nassert solution(\"7 3 3 3 3 3 3\") == \"YES\"\n\"\"\""
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('1000000 100') == '31248'\nprint('Test passed')\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"1000000 100\") == \"31248\"\n\n\n\"\"\"\n\nimport numpy as np\nfrom typing import List, Dict\nfrom collections import defaultdict\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('11 3\\n') == '5'\nassert solution('11 6\\n') == '4'\nassert solution('20 20\\n') == '1'\nassert solution('1000000 100\\n') == '31248'\n\n\"\"\"\n\nfrom tools import timing"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"100 11\") == \"11\"\nassert solution(\"1000000 100\") == \"31248\"\nassert solution(\"11 3\") == \"5\"\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\"\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('1000000 100') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '1'\nassert solution('''2 3''') == '1'\nassert solution('''10 5''') == '4'\nassert solution('''1000000 100''') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\"\nprint('The code ran Correctly')\n\n------Solution------\n\nn, k = list(map(int, stdin.split()))\n\nnums = set()"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"1000000 100\") == \"31248\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 96,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"1000000 100\") == \"31248\""
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == '0 0'\nassert solution(\"4 4 2 0 1 1\") == '-1'\nassert solution(\"10 10 10 1 -1 0\") == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('4 6 4 4 1 1 1') == '0 0'\nassert solution('6 10 2 1 -1 0') == '-1'\n\"\"\""
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\n"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 3 2 2 -1 1\n\"\"\"\n) == \"0 0\"\nassert solution(\n\"\"\"\n4 4 2 0 1 1\n\"\"\"\n) == \"-1\"\nassert solution(\n\"\"\"\n10 10 10 1 -1 0\n\"\"\"\n) == \"-1\"\n"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 4 2 0 1 1') == '-1'\nassert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('10 10 10 1 -1 0') == '-1'\n\"\"\""
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('4 3 2 0 -1 1') == '0 0'\nassert solution('4 4 0 0 1 1') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 3\\n2 1') == 'YES'\nassert solution('5 5\\n3 3\\n3 3') == 'NO'"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3 3\") == \"YES\"\nassert solution(\"3 2 1 2\") == \"YES\"\nassert solution(\"5 5 3 3\") == \"NO\"\nassert solution(\"4 2 1 2\") == \"YES\"\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 3\\n2 1\") == \"YES\"\nassert solution(\"5 5\\n3 3\\n3 3\") == \"NO\"\nassert solution(\"4 2\\n2 3\\n1 2\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2\\n3 3\\n3 3') == 'YES'\nassert solution('5 5\\n3 3\\n3 3') == 'NO'\n\"\"\"\nfrom sys import stdin\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 4\\n4 3\\n3 3\") == \"YES\"\nassert solution(\"2 2\\n3 4\\n4 3\\n3 3\") == \"NO\"\nassert solution(\"3 2\\n1 2\\n1 2\") == \"YES\"\nassert solution(\"3 2\\n3 3\\n4 2\\n1 2\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n3 3\\n3 3\") == \"YES\"\nassert solution(\"5 5\\n3 3\\n3 3\") == \"NO\"\nassert solution(\"4 2\\n1 3\\n1 2\") == \"YES\"\n\n\n----"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 3\\n2 1') == 'YES'\nassert solution('4 2\\n2 3\\n1 2') == 'YES'\nassert solution('5 5\\n3 3\\n3 3') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n\"3 2\"\n\"1 3\"\n\"2 1\"\n) == \"YES\"\n\nassert solution(\n\"5 5\"\n\"3 3\"\n\"3 3\"\n) == \"NO\"\n\n\n\n\"\"\""
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 3\") == \"YES\"\nassert solution(\"5 5\\n3 3\\n3 3\") == \"NO\"\n\n\nfrom math import gcd"
    },
    {
        "number": 98,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 2\\n3 3\\n2 1') == 'YES'\nassert solution('5 5\\n3 3\\n3 3') == 'NO'\n\n\"\"\""
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\""
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"123 1 2143435 4\\n123 11 -5453 141245\\n\") == \"3\"\nassert solution(\"123 1 2143435 4\\n54343 -13 6 124\\n\") == \"inf\"\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n\nassert solution(\"3 1 2 4\") == \"3\"\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2 30 4\") == '3'\nassert solution(\"123 1 2143435 4\") == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('123 1 2143435 4') == 'inf'\nassert solution('123 1 2143435 4') == 'inf'\nassert solution('123 1 2143435 4') == 'inf'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n\"\"\"\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"123 1 2143435 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"3\"\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 2 30 4\") == 3\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n"
    },
    {
        "number": 99,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n\n\"\"\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 8\\n..w..w..\\n........\\n..w..w..\\n\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\\n\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\\n\"\nassert solution(\"2 4\\n....\\n.w..\\n\") == \"....\\n.w..\\n\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"-----1\\n\"\nassert solution(\"2 6\\nww..w\\n....w\\n\") == \"-----1\\n\"\n\"\"\""
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 8\n..w..w..\n........\n........\n..w..w..\n\"\"\") == \"\"\"\n..w++w..\n..+..+..\n..+..+..\n..w++w..\n\"\"\"\nassert solution(\"\"\"\n5 6\n......\n.w....\n......\n..w...\n......\n\"\"\") == \"\"\"\n......\n+w+...\n+.+...\n++w...\n......\n\"\"\"\nassert solution(\"\"\"\n2 4\n....\n.w..\n\"\"\") == \"\"\"\n....\n.w..\n\"\"\"\nassert solution(\"\"\"\n2 6\nw..w.w\n...w..\n\"\"\") == \"\"\"\n-1\n\"\"\"\nassert solution(\"\"\"\n1 1\nw\n\"\"\") == \"\"\"\nw\n\"\"\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n..w..w..\\n........\\n..w..w..\\n\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\\n\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\\n\"\nassert solution(\"2 4\\n....\\n.w..\\n\") == \"....\\n.w..\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"-1\"\nassert solution(\"2 4\\nw..w\\n...w\\n\") == \"w..w\\n+w..\\n.w..\"\nprint(\"You are good to go!\")\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n.w.w\\nw..w\\n.w.w\") == \"..w.w\\n.w.w\"\nassert solution(\"3 5\\n...w\\nw..w\\n.w.w\") == \"..w.w\\n.w.w\"\nassert solution(\"3 5\\n.w..\\nw..w\\n.w.w\") == \"..w..\\n.w.w\"\nassert solution(\"3 5\\n....\\nw..w\\n....\\n.w.w\") == \"....\\n.w.w\"\nassert solution(\"3 5\\n....\\nw..w\\n....\\n....\\n.w.w\") == \"....\\n....\\n....\\n.w.w\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 8\\n..w..w..\\n........\\n..w..w..\\n\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\\n\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\\n\"\nassert solution(\"2 4\\n....\\n.w..\") == \"....\\n.w..\\n\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"....\\n.w..\\n\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"....\\n.w..\\n\"\n\"\"\"\n\n\"\"\"\n\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u0432 \u0442\u0440\u0438 \u0441\u0442\u0440\u043e\u043a\u0438: \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u043a\u043d\u0430 n,m, \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u043c\u0435\u0440\u044b x \u0438 y \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435.\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c.\n\n-----\u0420\u0435\u0448\u0435\u043d\u0438\u0435-----\n\"\"\"\nn, m, x, y, k = int(input()), int(input()), int(input()), int(input()), int(input())\n\nprint('+' * n + '+' + '+' * m + '+')\nprint('|' +'' * n + '|' +'' * m + '|')\nprint('|' +'' * n + '|' +'' * m + '|')\nprint('|' +'' * n + '|' +'' * m + '|')\nprint('+' + '+' * n + '+' + '+' * m + '+')"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\".w..w..\\n........\\n........\\n..w..w..\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\"\nassert solution(\".w....w\\n.......w\\n......w\\n..w....\\n.w.....\") == \"..w....\\n+w...+w\\n+w...+w\\n..w....\\n..w....\"\nassert solution(\".w....w\\n...w....\\n..w....w\\n..w....w\\n..w.....\") == \"..w....\\n+w...+w\\n+w...+w\\n..w....\\n..w....\"\nassert solution(\".w....w\\n....w...\\n..w....w\\n..w....w\\n..w.....\") == \"..w....\\n....w...\\n....w...\\n..w....\\n..w....\"\nassert solution(\".w....w\\n.....w..\\n..w....w\\n..w....w\\n..w.....\") == \"..w....\\n.....w..\\n.....w..\\n..w....\\n..w....\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n..w..w..\\n........\\n..w..w..\\n\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\\n\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\\n\"\nassert solution(\"2 4\\n....\\n.w..\\n\") == \"....\\n.w..\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"-1\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n..w..w..\\n........\\n..w..w..\\n\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\\n\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\\n\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\\n\"\nassert solution(\"2 4\\n....\\n.w..\\n\") == \"....\\n.w..\\n\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"w..w.w\\n.w..w.\\n\"\nassert solution(\"1 1\\n.\") == \".\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n....\\n..w..\\n........\\n..w..w..\") == \"..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\"\nassert solution(\"5 6\\n......\\n.w....\\n......\\n..w...\\n......\") == \"......\\n+w+...\\n+.+...\\n++w...\\n......\"\nassert solution(\"2 4\\n....\\n.w..\") == \"....\\n.w..\"\nassert solution(\"2 6\\nw..w.w\\n...w..\\n\") == \"-1\"\n"
    },
    {
        "number": 100,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\".w...\") == \".w++w..\"\nassert solution(\"..w..w\") == \"..+..+..\"\nassert solution(\"......\") == \"......\"\nassert solution(\"w....w\") == \"w+...+w\"\nassert solution(\"....w.\") == \"....+w.\"\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('15\\n4\\n8') == 'NO'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('15\\n4\\n8') == 'NO'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"15\") == \"YES\\n2 1\"\nassert solution(\"100\") == \"YES\\n0 10\"\nassert solution(\"9960594\") == \"YES\\n1951 1949\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('7 2 3') == 'YES'\nassert solution('100 2551 2557') == 'YES'\nassert solution('15 4 8') == 'NO'\nassert solution('9960594 2551 2557') == 'YES'"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7\\n2\\n3\") == \"YES\\n2 1\"\nassert solution(\"100\\n2551\\n2557\") == \"YES\\n1951 1949\"\nassert solution(\"15\\n4\\n8\") == \"NO\"\nassert solution(\"9960594\\n2551\\n2557\") == \"YES\\n1951 1949\"\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 2 3\") == 'YES\\n2 1'\nassert solution(\"100 2551 2557\") == 'YES\\n1951 1949'\nassert solution(\"15 4 8\") == 'NO'\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('7') == 'YES\\n2 1'\nassert solution('100') == 'YES\\n0 10'\nassert solution('15') == 'YES\\n1951 1949'\nassert solution('9960594') == 'YES\\n1951 1949'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2\\n3\\n\") == \"YES\\n2 1\"\nassert solution(\"100\\n2551\\n2557\\n\") == \"YES\\n1951 1949\"\n\"\"\"\n\n\"\"\"\n\n\u0421\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443\n\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0433\u0440\u0430\u0444\u0430\n\n\u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 - \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0432\u0435\u0440\u0448\u0438\u043d\n\u0432\u0442\u043e\u0440\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 - \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0440\u0451\u0431\u0435\u0440\n\u0442\u0440\u0435\u0442\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 - \u0432\u0435\u0441 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n\n\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0433\u0440\u0430\u0444\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u0430\u0442\u0440\u0438\u0446. \u0422\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0451\u0431\u0435\u0440. \u041f\u043e\u043a\u0430 \u0447\u0438\u0441\u043b\u043e \u0440\u0435\u0431\u0435\u0440 \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 \u0432\u0435\u0440\u0448\u0438\u043d.\n\n\u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0443\u044e\u0441\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0440\u0435\u0431\u0435\u0440.\n\n\u041d\u0430\u0439\u0434\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438. \u041d\u0430\u0439\u0434\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438. \u041d\u0430\u0439\u0434\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 \u0438 \u043d\u043e\u043c\u0435\u0440 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438. \u0423\u0431\u0435\u0440\u0435\u043c \u0438\u0437 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0440\u0448\u0438\u043d\u0443 \u0441 \u044d\u0442\u0438\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c. \u0423\u0431\u0435\u0440\u0435\u043c \u0438\u0437 \u0440\u0435\u0431\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441 \u044d\u0442\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0438 \u0441\u043c\u0435\u0436\u043d\u0443\u044e \u0434\u0440\u0443\u0433\u043e\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u0443. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u043e\u043a\u0430 \u0432 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0431\u0443\u0434\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0440\u0435\u0431\u0435\u0440 \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 \u0432\u0435\u0440\u0448\u0438\u043d.\n\n\"\"\""
    },
    {
        "number": 101,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2\\n3\") == \"YES\\n2 1\"\nassert solution(\"100\\n2551\\n2557\") == \"YES\\n1951 1949\"\nassert solution(\"9960594\\n2551\\n2557\") == \"YES\\n1951 1949\"\n"
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(str(20)) == 'twenty'\nassert solution(str(0)) == 'zero'\nassert solution(str(5)) == 'five'\nassert solution(str(99)) == 'ninety-nine'\nassert solution(str(100)) == 'one hundred'\n"
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n\n\n\n\"\"\""
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('27') == 'twenty-seven'\n\"\"\""
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"69\") == \"six nine\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\nassert solution(\"1\") == \"one\"\nassert solution(\"0\") == \"zero\"\n"
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(6) =='six'\nassert solution(99) == 'ninety-nine'\nassert solution(20) == 'twenty'\nassert solution(3) == 'three'\nassert solution(1) == 'one'\n"
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\nassert solution(\"27\") == \"twenty-seven\""
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n\n\"\"\""
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\n\"\"\"\n"
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6') =='six'\nassert solution('20') == 'twenty'\nassert solution('99') == 'ninety-nine'\nassert solution('30') == 'thirty'\n\"\"\""
    },
    {
        "number": 102,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"20\") == \"twenty\"\nassert solution(\"99\") == \"ninety-nine\"\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5') == '0'\nassert solution('998 999 1000') == '2'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"999 999 1000\") == \"2\"\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 3 4 5 6 9\") == '2'\nassert solution(\"3\\n998 999 1000\") == '2'\nassert solution(\"5\\n1 2 3 4 5\") == '4'\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 3 4 5 6 9\") == \"2\"\nassert solution(\"3\\n998 999 1000\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\""
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 1 2 3 4') == '4'\nassert solution('3 1 2 4 5') == '2'\nassert solution('100 3 4 5 6') == '0'\n\"\"\""
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 3 4 5 6 9\") == \"2\"\nassert solution(\"3\\n998 999 1000\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"1\\n99999\") == \"0\"\nassert solution(\"5\\n99999999999\") == \"0\"\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 3 4 5 6 9\") == 2\n\"\"\"\nfrom math import ceil, log10\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('6\\n1 3 4 5 6 9') == '2'\nassert solution('3\\n998 999 1000') == '2'\nassert solution('5\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4 5 6 9\") == \"2\"\nassert solution(\"998 999 1000\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 103,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4 5 6 9\") == \"2\"\nassert solution(\"998 999 1000\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\nassert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"5\\n3 3 3 3 3\") == \"3\"\nassert solution(\"4\\n1 2 1 2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''4\n1 3 2 1''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''4\n1 2 3 1''') == '1'"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3 2 1\") == 2\n\nassert solution(\"6 2 2 2 2 2\") == 3\n\n\"\"\""
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\n\n\n-----Explanation-----\n\nIn the first example Polycarp will celebrate the equator on the evening of the second day, because up to this day (inclusive) he will solve $4$ out of $7$ scheduled problems on four days of the training.\n\nIn the second example Polycarp will celebrate the equator on the evening of the third day, because up to this day (inclusive) he will solve $6$ out of $12$ scheduled problems on six days of the training.\n\n\"\"\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\n\"\"\""
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 1\\n') == '2'\n\nassert solution('6\\n2 2 2 2 2 2\\n') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\") == \"1\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nm = 2 * sum(a) // n\ni = 0\nwhile m >= a[i]:\n    i += 1\nprint(i)\n"
    },
    {
        "number": 104,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 1\\n\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\\n\") == \"3\"\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5') == '12 1'\n\nassert solution('3\\n1 9 3\\n8 6 7\\n4 2 5') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\n\"\"\"\n\nfrom sys import stdin\nimport sys\n\nn = int(stdin.readline())\nrow = [int(x) for x in stdin.readline().split()]\npieces = [int(x) for x in stdin.readline().split()]\n\nmoves = [[2, 1], [2, -1], [-2, 1], [-2, -1], [1, 2], [-1, 2], [-1, -2], [1, -2]]\n\nvisited = [[0] * n for _ in range(n)]\n\nsteps = [sys.maxsize] * n\nsteps[0] = 0\n\nqueue = [(0, 0)]\nwhile queue:\n    i, j = queue.pop()\n    for x, y in moves:\n        if 0 <= i + x < n and 0 <= j + y < n:\n            if not visited[i + x][j + y] and row[i + x] - 1 == pieces[j + y]:\n                visited[i + x][j + y] = 1\n                queue.append((i + x, j + y))\n                if steps[i + x] + 1 < steps[j + y]:\n                    steps[j + y] = steps[i + x] + 1\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\n\"\"\"\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\nassert solution(\"3\\n1 2 1\\n8 6 7\\n4 2 5\") == \"11 1\"\n\n\"\"\""
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2 5\") == \"12 1\"\nassert solution(\"4 2 9\") == \"14 1\"\nassert solution(\"2 2 9\") == \"8 2\"\n\n\"\"\"\n"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\n\"\"\"\n\nN = int(stdin.readline().strip())\nsteps = 1\nboard = [[int(num) for num in stdin.readline().strip().split()] for _ in range(N)]"
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == '12 1'\n\"\"\""
    },
    {
        "number": 105,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 9 3\\n8 6 7\\n4 2 5\") == \"12 1\"\n"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\n\nprint(solution('100010001'))\nprint(solution('100'))\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\n\n\"\"\""
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('1111111111') == 'yes'\nassert solution('111111101110') == 'yes'\nassert solution('11111111111111111111111111111111111111111111111111111111111111111') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == \"yes\"\nassert solution('0') == \"no\"\nassert solution('11') == \"yes\"\nassert solution('1') == \"yes\"\nassert solution('01') == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\n\"\"\"\n\ns = input()\n\ncount = 0\nfor i in s:\n    if i == \"0\":\n        count += 1"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"100010001\") == 'yes'\nassert solution(\"100\") == 'no'\n\n\"\"\"\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"100010001\") == 'yes'\nassert solution(\"100\") == 'no'\n\"\"\"\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('100110101101110') == 'yes'\nassert solution('1101101111111') == 'no'\n\n\"\"\"\n\ns = input()"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\n\"\"\"\n"
    },
    {
        "number": 107,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('111111111111111111111111111111110') == 'yes'\n\"\"\"\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(aacceeggiikkmmooqqssuuwwyy) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(thereisnoanswer) == '-1'\n\"\"\""
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('hereisnoanswer') == '-1'\nprint('The local tests are done. Try Solution Online.')\n\n-----Solution-----\n\n\"\"\""
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\nprint(\"Example 1 is valid\")\n\n\"\"\"\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(aacceeggiikkmmooqqssuuwwyy) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(thereisnoanswer) == '-1'\n\n\"\"\""
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\nassert solution(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqq\") == \"-1\"\nassert solution(\"aacceeiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abccefg') == 'abcdefg'\nassert solution('aaaaaaaaaaaaaaaaaaaa') == 'aaaaaaaaaaaaaaaaaaaa'\nassert solution('abcd') == 'abcd'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aacceeiiikmmmooqssuuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aacceeiiikmmmooqssuuuuwy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aacceeiiikmmmooqssuuuy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('aacceeiiikmmmooqssuuuw') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 108,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz1\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 3 2 3') == 2\nassert solution('12 17 9 40') == 32.8333\n\"\"\""
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0000000000\"\n\"\"\"\n"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2 3\") == \"2.0\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\n"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2 3\") == 2\n"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0\"\nassert solution(\"12 17 9 40\") == \"32.833333333\"\n\"\"\"\n"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 10 3 3\") == \"6.0\"\n\"\"\"\n"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0 1 2') == ''\nassert solution('1 1 1 1') == '0'\nassert solution('0 1 0 1') == '0'\n\n'''\n\nfrom typing import Tuple\nfrom math import gcd"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0000000000\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\nassert solution(\"4 4 2 5\") == \"4.0000000000\"\n\"\"\""
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 3\") == '2.0'\nassert solution(\"12 17 9 40\") == '32.83333333333'\n\"\"\"\n\nfrom math import comb"
    },
    {
        "number": 109,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 4 2 2\") == \"2\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\""
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2 2 2\\n\") == \"3 3 3 3\\n\"\n\"\"\"\nimport sys"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"0 0 0 0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"3\\n-3 -3 2\") == \"-3 -3 2\"\n"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\nassert solution(\"1\\n0\") == \"0\""
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\n\"\"\""
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"3\\n-3 -3 2\") == \"-3 -3 2\""
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"3\\n-3 -3 2\") == \"-3 -3 2\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n2 2 2 2') == '-3 -3 -3 -3'\nassert solution('1\\n0') == '0'\nassert solution('3\\n-3 -3 2') == '-3 -3 2'\n\n-----Problem-----\n\nGiven an array of integers. Find the maximum possible product of the array elements where the operation allowed with the same array is to change one element by -1, e.g. change $a_1$ to $a_1 = -1 * a_1 - 1$.\n\nInput Format\n\nThe first line contains integer $n$ ($1 \\leq n \\leq 10^{5}$)\u00a0\u2014 number of integers in the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($-10^{6} \\leq a_i \\leq 10^{6}$)\u00a0\u2014 elements of the array.\n\nConstraints\n\n1 \\leq n \\leq 10^{5}$\n\n0 \\leq a_i \\leq 10^{6}$\n\nOutput Format\n\nPrint $n$ numbers\u00a0\u2014 elements of the array with the maximal possible product of elements which can be received using only this operation in some order from the given array.\n\nIf there are multiple answers, print any of them.\n\nSample TestCase 1\nTestCase Input\n\n5\n2 2 2 2\n\nTestCase Output\n\n-6 -6 -6 -6\n\"\"\"\n\nfrom functools import reduce\nn = int(input())\na = list(map(int, input().split()))\nx = list(map(lambda i: i * -1, a))\nprint(*x)\n"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 2\") == '-3 -3 -3 -3'\nassert solution(\"1\") == \"0\"\nassert solution(\"3 -3 2\") == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\n\"\"\"\n\na = [int(i) for i in stdin.split(\"\\n\")[1].split()]\nprint(*[-i - 1 for i in a], sep=\" \")\n"
    },
    {
        "number": 110,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''4\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''1\n0''') == '0'\nassert solution('''3\n-3 -3 2''') == '-3 -3 2'\n\n'''\n\u0412\u0430\u043c \u0434\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a.\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043b\u0435\u0448 \"\\\ufeff\".\nSample Input:\n\nwww.stepik.org\nstepic\nSample Output:\n\nstepic\nwww.stepik.org\n\n'''"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 2\\n') == '2\\n'\nassert solution('5 3\\n') == '-1\\n'\nassert solution('12 5\\n') == '6\\n'\n\"\"\"\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == -1\nassert solution(\"12 5\") == \"6\"\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('2 2') == '-1'\nassert solution('9 2') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 3''') == '-1'\nassert solution('''12 5''') == '6'\nassert solution('''22 5''') == '-1'\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n\") == \"-1\"\nassert solution(\"5 4\\n\") == \"2\"\nassert solution(\"1 10\\n\") == \"1\"\nassert solution(\"2 3\\n\") == \"2\"\nassert solution(\"7 8\\n\") == \"7\"\n\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 111,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\nassert solution(\"3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\") == \"98\"\n\"\"\"\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7') == '87'\n\"\"\"\nimport math\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\\n 6 7 8 9 0\\n 2 3 4 5 6 7\") == \"98\"\n\"\"\""
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 7 8 9 0 1\") == \"87\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\nassert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"98\"\n\"\"\""
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(3) == \"87\"\n\"\"\"\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\n\"\"\""
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7''') == '87'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9''') == '98'\n"
    },
    {
        "number": 112,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7') == '87'\n\nimport json\nfrom typing import Union, Dict, List\nfrom collections import defaultdict"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('375 4') == '30000'\nassert solution('4 0') == '4'\nassert solution('123456789 8') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 3') == '30000'\nassert solution('375 4') == '30000'\nassert solution('101 101') == '1010101010'\nassert solution('123456789 8') == '12345678900000000'\n\nprint(solution('4 3'))\nprint(solution('375 4'))\nprint(solution('101 101'))\nprint(solution('123456789 8'))\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"375 4\") == \"30000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"38101 0\") == \"38101\"\nassert solution(\"123456789 8\") == \"12345678900000000\"\n\n\"\"\"\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"375 4\") == \"30000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"38101 0\") == \"38101\"\nassert solution(\"123456789 8\") == \"12345678900000000\"\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(str(375)) == '30000'\nassert solution(str(10000)) == '10000'\nassert solution(str(38101)) == '38101'\nassert solution(str(123456789)) == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\n\n\"\"\"\n\nn, k = map(int, input().split(' '))\n\nm = 1\nwhile k > 0:\n    m *= 10\n    k -= 1\n\nwhile m % n!= 0:\n    m += 1\n\nprint(m)\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 3') == '30000'\nassert solution('1 2') == '2'\nassert solution('3 4') == '3'\nassert solution('1 9') == '1'\nassert solution('9 9') == '9999'\n"
    },
    {
        "number": 113,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"38101 0\") == \"38101\"\nassert solution(\"123456789 8\") == \"12345678900000000\""
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == '3\\n1 1\\n1 2\\n2 2'\n\"\"\""
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\\n\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\") == \"-1\""
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n\") == \"3\\n1 1\\n1 2\\n2 2\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n\") == \"1\\n2\\n2\\n\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\\n\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\\n\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\\n\""
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 3\\n0 1 1\\n1 1 1\\n0 0 0\\n\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\n\nimport timeit"
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 1 1\\n1 1 1\\n0 1 1') == '3\\n1 1\\n1 2\\n2 2'\nassert solution('3 3\\n1 0 1\\n1 0 1\\n0 0 0') == '-1'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\n\n\"\"\"\n\nfrom collections import deque\nimport sys"
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 1 1\\n1 1 1\\n0 1 1') == '3'\nassert solution('3 3\\n1 0 1\\n1 0 1\\n0 0 0') == '-1'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\n\n---\n\"\"\"\n\n\nclass Solution:\n    def __init__(self):\n        self.ans = -1\n\n    def solve(self, A, B):\n        for x in range(len(A)):\n            for y in range(len(A[0])):\n                if A[x][y] == B[x][y]:\n                    continue\n                else:\n                    B[x][y] = 1\n                    B[x][y + 1] = 1\n                    B[x + 1][y] = 1\n                    B[x + 1][y + 1] = 1\n                    if x >= 1:\n                        B[x - 1][y] = 1\n                        B[x - 1][y + 1] = 1\n                    if y >= 1:\n                        B[x][y - 1] = 1\n                        B[x + 1][y - 1] = 1\n                    break\n\n        for i in range(len(A)):\n            for j in range(len(A[0])):\n                if A[i][j]!= B[i][j]:\n                    return -1\n        return len(A)\n"
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\") == \"0\"\n\"\"\""
    },
    {
        "number": 114,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 1 1\\n1 1 1\\n0 1 1') == 3\nassert solution('3 2\\n0 0\\n0 0\\n0 0') == 0\nassert solution('3 2\\n0 0\\n0 0\\n0 0') == -1"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution(\"2 1 2\") == \"0.150000000000 0.300000000000 0.550000000000\"\nassert solution(\"1 1 3\") == \"0.057142857143 0.657142857143 0.285714285714\"\n\n\"\"\"\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\") == \"0.333333333333 0.333333333333 0.333333333333\"\n\n\"\"\""
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution(\"2 1 2\") == \"0.150000000000 0.300000000000 0.550000000000\"\nassert solution(\"1 1 3\") == \"0.057142857143 0.657142857143 0.285714285714\"\n\n'''\nfrom decimal import Decimal\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == '0.333333333333 0.333333333333 0.333333333333'\nassert solution(\"2 1 2\") == '0.150000000000 0.300000000000 0.550000000000'\nassert solution(\"1 1 3\") == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n\nimport sys\nfrom typing import Dict, List, Optional, Tuple\n\nPair = Tuple[str, str]\n\nclass Node:\n    def __init__(self, name: str, children: Optional[List[Node]] = None):\n        self.name: str = name\n        self.children: Optional[List[Node]] = children"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1 3\") == \"0.057142857143 0.657142857143 0.285714285714\"\n\"\"\"\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\n\n\"\"\"\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 115,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n\nprint(solution('2 2 2'))\nprint(solution('2 1 2'))\nprint(solution('1 1 3'))\n"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"100 100 10\") == \"110\"\nassert solution(\"100 100 1\") == \"100\"\n"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 10 9 20 2\") == \"1\"\nassert solution(\"1 10 9 20 3\") == \"0\"\n"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 10 9 20 1\") == 2\nassert solution(\"1 100 50 200 75\") == 50\n\"\"\""
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n\n\"\"\""
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''1 10 9 20 1''') == '2'\nassert solution('''1 100 50 200 75''') == '50'"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n\"\"\"\n\nimport sys\n\ninput = sys.stdin.readline\n"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''1 10 9 20 1''') == '2'\nassert solution('''1 100 50 200 75''') == '50'\nassert solution('''1 2 2 5 5''') == '0'\n\nimport sys\n\nl_1, r_1, l_2, r_2, k = map(int, sys.stdin.readline().split())\n\nminutes = (r_1 - l_1) * 2 + (r_2 - l_2) * 2 + k\nprint(minutes - 1 if minutes % 2!= 0 else minutes)"
    },
    {
        "number": 116,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n\") == \"13\"\n\"\"\"\n\nimport sys\nimport numpy"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\") == \"13\"\n\"\"\""
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3\\n1 3 1\\n2 2 4\\n2 3 1\\n1 3 3\\n1 2 4\\n2 3 1\") == \"0\"\n\"\"\"\nimport sys\n\nn, m = list(map(int, sys.stdin.readline().split()))\ninput = []\n\nfor _ in range(n):\n    input.append(list(map(int, sys.stdin.readline().split())))"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0 0\\n0 1\\n0 2\\n-1 -1\\n2 2\\n0 0\\n0 1\\n0 2\\n0 2\\n') == 'INF'\nassert solution('2 2\\n1 1 1\\n0 0 0\\n0 1 2\\n0 2 2\\n1 1 1\\n0 1 2\\n') == '5'\n\"\"\"\nimport math\n"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 3\\n1 2 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\") == \"13\"\n\"\"\"\n"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\") == \"13\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"11\"\n\"\"\"\n\nfrom collections import namedtuple\n\nCoords = namedtuple(\"Coords\", \"x y\")\n"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 1\\n0 3 2\\n0 4 3\\n-1 1 3\\n3 4 4\\n1 3 3\\n') == '13'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 1 1\\n0 0 0\\n0 1 2\\n0 0 0\\n-3 4 5\") == '6'\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 117,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 0\\n1 1 1\\n1 2 2\\n0 3 1\\n0 1 1\\n1 1 1\\n0 2 1\") == \"4\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 10 10\") == \"YES\"\nassert solution(\"1 10 5\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 10 20\") == \"YES\"\nassert solution(\"1 10 11\") == \"YES\"\n"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 10 4\") == 'NO'\nassert solution(\"3 10 3\") == 'YES'\nassert solution(\"3 8 51\") == 'YES'\nassert solution(\"3 8 52\") == 'YES'\n\n-----\n\nhttps://www.codewars.com/kata/578553c3a1b8d5c40300037c/python\n\n\"\"\""
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\n\"\"\"\nfrom datetime import datetime\nimport math"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 10 4\\n') == 'NO'\nassert solution('3 10 3\\n') == 'YES'\nassert solution('3 8 51\\n') == 'YES'\nassert solution('3 8 52\\n') == 'YES'\n\n\"\"\"\n\n\n\n\"\"\"\nThe first and only line of input contains three integers t, s and x (0 \u2264 t, x \u2264 10^9, 2 \u2264 s \u2264 10^9) \u2014 the time the pineapple barks for the first time, the pineapple barking interval, and the time Barney wants to eat the pineapple respectively.\n\"\"\""
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\nassert solution(\"1 1 1000000000\") == \"YES\"\n"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n\"\"\"\nimport sys"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\n    '3 10 4') == 'NO'\nassert solution(\n    '3 10 3') == 'YES'\nassert solution(\n    '3 8 51') == 'YES'\nassert solution(\n    '3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\nassert solution('''3 10 3''') == 'NO'\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\"\nassert solution(\"1\\n1 10\") == \"1 1\"\nassert solution(\"1\\n1 1\") == \"1 1\"\nassert solution(\"1\\n1 10\\n2 9\") == \"1 1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == '2 1'\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == '-1 -1'\n\n\"\"\"\n\nn = int(input())\n\nstarts = []\nends = []\n\nfor _ in range(n):\n    s, e = map(int, input().split())\n    starts.append(s)\n    ends.append(e)\n\nstarts.sort()\nends.sort()"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == '2 1'\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == '-1 -1'\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == '-1 -1'\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"1 2\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"1 2\"\n\nassert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n1 10\n2 9\n3 9\n2 3\n2 9\"\"\") == \"2 1\"\nassert solution(\"\"\"3\n1 5\n2 6\n6 20\"\"\") == \"-1 -1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\n\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\"\n\n\"\"\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 119,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\") == \"2 1\"\nassert solution(\"3\\n1 5\\n2 6\\n6 20\") == \"-1 -1\""
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AA??') == '==='\nassert solution('????G?') == '==='\n\n\"\"\""
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AA??') == '==='\nassert solution('????G?') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"AG?C??CT\") == \"AGACGTCT\"\nassert solution(\"AA??\") == \"===\"\nassert solution(\"????G??\") == \"===\", \"Challenge is impossible\""
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"AG?C??CT\") == \"AGACGTCT\"\nassert solution(\"AA??\") == \"===\"\nassert solution(\"????G??\") == \"==="
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"AG?C??CT\") == \"AGACGTCT\"\nassert solution(\"AA??\") == \"===\"\nassert solution(\"????G??\") == \"===\"\n"
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('????G?') == '==='\nassert solution('AA??') == '==='"
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"AG?C??CT\") == \"AGACGTCT\"\nassert solution(\"AA??\") == \"===\"\nassert solution(\"??G?\") == \"===\"\nassert solution(\"????G?\") == \"===\n\n\"\"\""
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n\"\"\"\n\nn = int(input())\ns = input()\n\nA = 0\nC = 0\nG = 0\nT = 0\n\nfor i in s:\n    if i == 'A':\n        A += 1\n    elif i == 'C':\n        C += 1\n    elif i == 'G':\n        G += 1\n    elif i == 'T':\n        T += 1\n\nsum = 0\nfor i in s:\n    if i == '?':\n        sum += 1"
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AA??') == '==='\nassert solution('????G?') == '==='\n\n\"\"\"\n"
    },
    {
        "number": 120,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"AG?C??CT\") == \"AGACGTCT\"\nassert solution(\"AGCT\") == \"AGCT\"\nassert solution(\"????G?\\n\") == \"===\\n\"\nassert solution(\"AA??\\n\") == \"===\\n\"\nassert solution(\"AAAA??\\n\") == \"===\"\n\n---\n\n\u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0430 \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0434\u0432\u0430 \u0432\u0435\u043a\u0442\u043e\u0440\u0430: \u043f\u0435\u0440\u0432\u044b\u0439 \u2014 \u044d\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e, \u0432\u0442\u043e\u0440\u043e\u0439 \u2014 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b \u0442\u0435\u043a\u0441\u0442\u0430. \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u0432 \u043e\u0431\u043e\u0438\u0445 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u0445.\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0432\u043e\u0434:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d]\n\n\u0412\u044b\u0432\u043e\u0434:\n    \u0412\u0435\u043a\u0442\u043e\u0440: [b, c, d]\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e: \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u044d\u0442\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u0447\u043a\u0443 \u043a\u043e\u0434\u0430 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u043e\u0432.\n\nSample Input 1:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d]\n\nSample Output 1:\n    \u0412\u0435\u043a\u0442\u043e\u0440: [b, c, d]\n\nSample Input 2:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d, e, f]\n\nSample Output 2:\n    ===\n\nSample Input 3:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d, e, f]\n\nSample Output 3:\n    ===\n\nSample Input 4:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f, g, h]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d, e, f, g, h]\n\nSample Output 4:\n    ===\n\nSample Input 5:\n    \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [a, b, c, d, f, g, h, i, j, k]\n    \u0412\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440: [b, c, d, e, f, g, h, i, j, k]\n\nSample Output 5:\n    ===\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u044d\u0442\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u043e\u0434\u0430 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u043e\u0432."
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"xx..\") == \"YES\"\nassert solution(\"x.ox\") == \"NO\"\nassert solution(\"x..x\") == \"YES\"\nassert solution(\"o.x.\\nx..x\\nx.o.\\no.x\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('xoxoxox') == \"YES\"\nassert solution('oxooxx') == \"NO\"\nassert solution('oxxoox') == \"NO\"\nassert solution('xoxoxox') == \"YES\"\nassert solution('ooxoxx') == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('.o.\\n.xo\\nxox\\n.x.') == 'YES'\n\nassert solution('ox.\\no..\\n.o.') == 'NO'\n\nassert solution('xox\\no..\\nxox\\nxox') == 'YES'\n\nassert solution('x.o.\\no.x\\nx.x\\no.x') == 'YES'\n\nassert solution('oxx\\n.xo\\no.x\\n.x.') == 'NO'"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\n    \"xx..\\n\"\n    \".oo.\"\n    \"x...\\n\"\n    \"oox.\"\n    ) == \"YES\"\n\nassert solution(\n    \"x.ox\\n\"\n    \"ox..\\n\"\n    \"x.o.\"\n    \"oo.x\"\n    ) == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nxoxo\noxxo\nxoxo\n\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"\nxoxo\noxxo\noxxx\n\"\"\"\n) == \"NO\"\n\n\"\"\"\n\nThe solution of the first input is YES.\nThe solution of the second input is NO.\n\"\"\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"x.o.\\n.o.x\\no.o.\\nx.o.\") == \"YES\"\nassert solution(\"x..x\\n..oo\\no...\\nx.xo\") == \"NO\"\nassert solution(\"x.ox\\nox..\\nx.o.\\no.x.\") == \"YES\"\nassert solution(\"o.x.\\no...\\nx.xo\\no.o.\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"xx..\") == \"YES\"\nassert solution(\"xoox\") == \"NO\"\nassert solution(\"x.ox\") == \"YES\"\nassert solution(\"o.x.\") == \"NO\"\nassert solution(\"o.x.xo.\") == \"YES\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('.x.\\n.o.\\n.x.') == 'NO'\nassert solution('xx..\\n.oo.\\nx...\\noox.') == 'YES'\nassert solution('x.ox\\nox..\\nx.o.\\nooxx') == 'NO'\nassert solution('o.x.\\no...\\n.x..\\nooxx') == 'YES'\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"xx..\") == \"YES\"\nassert solution(\"x.ox\") == \"NO\"\nassert solution(\"x..x\") == \"YES\"\nassert solution(\"o.x.x\") == \"YES\"\nassert solution(\"o...x\") == \"YES\"\n"
    },
    {
        "number": 121,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"xoox\") == \"YES\"\nassert solution(\"xooxo\") == \"NO\"\nassert solution(\"xooox\") == \"YES\"\nassert solution(\"xooxxo\") == \"YES\"\nassert solution(\"oxoox\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('3\\n1 3 2') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n2 2 3 4 5') == 'YES'\nprint('Success')"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"YES\"\nassert solution(\"5 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 5 2 3 4 2 1\") == 'YES'\nassert solution(\"2 2 3 4 5\") == 'NO'\nassert solution(\"1 2 3 4 5\") == 'YES'\n\"\"\""
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n2 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n2 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 5\") == \"YES\"\nassert solution(\"3\\n1 3 2\") == \"NO\"\nassert solution(\"3\\n1 1 3\") == \"YES\"\n\"\"\"\n\nimport sys\nfrom typing import List, Tuple\n\nn = int(sys.stdin.readline())\na = [int(x) for x in sys.stdin.readline().split()]"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n2 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n2 2 3 4 5\") == \"YES\""
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 5\") == \"NO\"\nassert solution(\"3\\n1 3 2\") == \"YES\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4 5\") == \"YES\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 122,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('1 3 2 5') == 'YES'\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n8 94 0 4\\n89\") == 'Yes'\nassert solution(\"4 2\\n11 0 0 14\\n5 4\") == 'Yes'\nassert solution(\"4 2\\n11 0 0 14\\n5 4\") == 'Yes'\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\") == 'Yes'\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n11 0 0 14\\n5 4\") == \"Yes\"\nassert solution(\"6 1\\n2 3 0 8 9 10\") == \"No\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\") == \"Yes\"\nassert solution(\"4 1\\n8 94 0 4\") == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''4 2\n11 0 0 14\n5 4''') == 'Yes'\nassert solution('''4 1\n8 94 0 4\n89''') == 'Yes'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7''') == 'Yes'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7''') == 'Yes'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7''') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10\\n5') == 'No'\nassert solution('7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10') == 'No'\nassert solution('7 7\\n0 0 0 0 0 0 0') == 'Yes'\nassert solution('4 1\\n8 94 0 4') == 'Yes'\nassert solution('7 7\\n0 0 0 0 0 0 0') == 'Yes'"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n11 0 0 14\\n5 4\") == \"Yes\"\nassert solution(\"6 1\\n2 3 0 8 9 10\") == \"No\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\") == \"Yes\"\nassert solution(\"4 1\\n8 94 0 4\") == \"Yes\""
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10') == 'No'\nassert solution('7 7\\n0 0 0 0 0 0 0') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n11 0 0 14\\n5 4\") == \"Yes\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\") == \"Yes\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\") == \"No\"\nassert solution(\"4 1\\n8 94 0 4\\n89\") == \"Yes\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\") == \"No\"\n\nprint('Successfully solved!')\n"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n8 94 0 4\\n89\") == \"Yes\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\") == \"Yes\"\nassert solution(\"4 1\\n2 3 0 8 9 10\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 123,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n8 94 0 4\\n89\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 6 2\\n4 3 3\") == \"YES\"\nassert solution(\"1 6 2\\n4 1 1\") == \"NO\"\nassert solution(\"1 6 2\\n4 4 3\") == \"NO\"\nassert solution(\"1 6 2\\n4 1 2\") == \"YES\"\nassert solution(\"1 6 2\\n4 2 3\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 6 2\\n4 3 3\") == \"YES\"\nassert solution(\"5 1 1\\n4 3 2\") == \"NO\"\nassert solution(\"3 4 1\\n4 3 2\") == \"YES\"\nassert solution(\"4 5 1\\n4 3 2\") == \"YES\"\nassert solution(\"1 3 2\\n4 3 2\") == \"NO\"\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 6 2\\n4 3 3\") == \"YES\"\nassert solution(\"5 1 1\\n4 3 2\") == \"NO\"\n\n\n\n-----Instructions-----\n\n1. Read 3 integers x, y and z from stdin.\n2. Read 3 integers a, b and c from stdin.\n3. Print 'YES' if it's possible to make everyone happy, otherwise print 'NO'.\n4. Do not print any leading and trailing spaces.\n\n-----Hints-----\n\nWrite the smallest possible amount of code to make your code work.\n\n\"\"\"\n\nx, y, z = (int(input()) for _ in range(3))\na, b, c = (int(input()) for _ in range(3))"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 6 2\\n4 3 3') == 'YES'\nassert solution('5 1 1\\n4 3 2') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 6 2\\n4 3 3') == 'YES'\nassert solution('5 1 1\\n4 3 2') == 'NO'\nprint(solution('1 6 2\\n4 3 3'))\nprint(solution('5 1 1\\n4 3 2'))\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n4 3 2\") == \"NO\"\nassert solution(\"1 6 2\\n4 3 3\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 6 2\\n4 3 3\") == \"YES\"\nassert solution(\"5 1 1\\n4 3 2\") == \"NO\""
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 6 2\\n4 3 3\") == \"YES\"\nassert solution(\"5 1 1\\n4 3 2\") == \"NO\"\n\"\"\""
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 6 2\\n4 3 3') == 'YES'\nassert solution('5 1 1\\n4 3 2') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 6 2\\n4 3 3') == 'YES'\nassert solution('5 1 1\\n4 3 2') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1 0\") == \"YES\"\nassert solution(\"0 0 1 0\") == \"NO\"\nassert solution(\"1 0 1 1\") == \"YES\"\nassert solution(\"1 0 0 1\") == \"NO\"\nassert solution(\"0 1 1 0\") == \"YES\"\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\") == \"YES\\n\"\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == \"NO\\n\"\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\") == \"NO\\n\"\n\n\"\"\""
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\") == 'YES'\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == 'NO'\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\") == 'NO'\nassert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\") == 'YES'\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1 0\\n0 0 1 0\\n0 0 1 0\\n0 0 0 1\") == \"YES\"\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\") == \"NO\"\nassert solution(\"0 0 1 1\\n0 1 0 0\\n1 0 0 0\\n0 0 0 1\") == \"NO\"\nassert solution(\"1 0 0 1\\n0 0 1 0\\n0 0 1 0\\n0 1 0 1\") == \"YES\"\nassert solution(\"1 1 1 1\\n0 1 1 1\\n0 1 1 1\\n1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1') == \"YES\"\nassert solution('0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1') == \"NO\"\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0') == \"NO\"\n\nprint(\"OK!\")\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1') == 'YES'\nassert solution('0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1') == 'NO'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0') == 'NO'\n\"\"\"\n\nimport unittest\nimport collections\nimport itertools\nfrom typing import List, Tuple, Generator, Dict\n\nclass Edge:\n    def __init__(self, left: int, straight: int, right: int, pedestrian: int) -> None:\n        self.left = left\n        self.straight = straight\n        self.right = right\n        self.pedestrian = pedestrian\n\nclass Graph:\n    def __init__(self, edges: List[Edge]) -> None:\n        self.edges = edges\n        self.vertices = set(itertools.chain.from_iterable(edges))\n        self.adj_list = collections.defaultdict(set)\n        for edge in edges:\n            self.adj_list[edge.left].add(edge)\n            self.adj_list[edge.right].add(edge)\n            self.adj_list[edge.straight].add(edge)\n        self.adj_list[0] = set()\n        self.adj_list[self.vertices - 1] = set()\n        self.adj_list[-1] = set()\n        self.adj_list[1] = set()\n    \n    def search(self, node: int) -> List[Edge]:\n        return [edge for edge in self.edges if edge.left == node or edge.right == node]\n    \n    def get_neighbours(self, node: int) -> List[Edge]:\n        return self.search(node)\n    \n    def get_red_neighbours(self, node: int) -> List[Edge]:\n        return [edge for edge in self.get_neighbours(node) if edge.pedestrian == 0]\n    \n    def get_green_neighbours(self, node: int) -> List[Edge]:\n        return [edge for edge in self.get_neighbours(node) if edge.pedestrian == 1]\n    \n    def is_neighbour(self, left: int, right: int) -> bool:\n        if left == right:\n            return True\n        return right in self.adj_list[left]"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\") == \"YES\"\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == \"NO\"\n\"\"\""
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\") == \"YES\"\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 1\\n0 0 0 0\\n0 0 1 0\\n0 0 0 1\") == \"YES\"\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0 0\\n0 0 0 1\\n0 0 0 1\\n0 0 0 1\") == \"YES\"\nassert solution(\"0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\") == \"NO\""
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\", \"586\") == \"NO\"\nassert solution(\"9\", \"09\") == \"NO\"\nassert solution(\"2\", \"09\") == \"NO\"\n\n\"\"\"\n\nimport collections"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''3\n586''') == \"NO\"\nassert solution('''2\n09''') == \"NO\"\nassert solution('''9\n123456789''') == \"YES\"\nassert solution('''3\n911''') == \"YES\"\n\n\n\"\"\"\n\nimport sys\n\nclass PhoneKeyboard:\n    def __init__(self, keyboard_string):\n        self.keyboard_string = keyboard_string\n\n    def __eq__(self, other):\n        # You could also use a hashtable\n        if len(self.keyboard_string)!= len(other.keyboard_string):\n            return False\n        for i in range(len(self.keyboard_string)):\n            if self.keyboard_string[i]!= other.keyboard_string[i]:\n                return False\n        return True\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"911\") == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\" + \"912\") == \"NO\"\nassert solution(\"9\\n\" + \"912\") == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"11\") == \"YES\"\nassert solution(\"123\") == \"YES\"\nassert solution(\"586\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('912') == 'NO'\nassert solution('123') == 'YES'\nassert solution('1') == 'YES'\nassert solution('0') == 'NO'\nassert solution('89') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"911\") == \"YES\"\nassert solution(\"912\") == \"NO\"\nassert solution(\"910\") == \"YES\"\nassert solution(\"891\") == \"NO\"\nassert solution(\"913\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3') == \"YES\"\nassert solution('2') == \"NO\"\nassert solution('9') == \"YES\"\nassert solution('1') == \"NO\"\n\n\"\"\""
    },
    {
        "number": 126,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\", \"586\") == \"NO\"\nassert solution(\"9\", \"123456789\") == \"YES\"\nassert solution(\"3\", \"911\") == \"YES\"\nassert solution(\"2\", \"09\") == \"NO\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == \"5\"\n\"\"\"\n\nn, f = map(int, input().split())\nd = {}\n\nfor _ in range(n):\n    a, b = map(int, input().split())\n    d[a] = b\n\nans = 0\nfor i in range(f):\n    a, b = map(int, input().split())\n    c = d.get(a, 0)\n    ans += c * (b * 2)\n\nprint(ans)\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 1\\n3 5\\n2 3\") == \"10\"\nassert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == \"5\""
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\\n\") == \"5\"\nassert solution(\"4 2\\n2 1\\n3 5\\n2 3\\n1 5\\n\") == \"10\"\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 1\\n3 5\\n2 3\\n1 5\") == \"10\"\nassert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 1\\n3 5\\n2 3\\n1 5\") == 10\nassert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == 5\n\"\"\""
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 1\\n3 5\\n2 3\\n1 5\\n') == 10\n\n---\nSolution for this problem\n---"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == 5\n\"\"\"\n\nn, f = map(int, input().split())\na, b = [], []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nfor i in range(n):\n    tmp = [0] * n\n    tmp[i] = 2 * a[i][1]\n    b.append(tmp)\n\nfor i in range(n):\n    for j in range(n):\n        if i < j:\n            b[i][j] += a[i][0] * a[j][1]\n\nfor i in range(f):\n    print(max(sum(b[i])))\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == 5\nassert solution(\"4 2\\n2 1\\n3 5\\n2 3\") == 10\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 127,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 5\\n2 3\") == \"10\"\nassert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\") == \"5\"\n\"\"\"\n\nn, f = map(int, stdin.readline().split())\nl = [list(map(int, stdin.readline().split())) for _ in range(n)]\na = [0] * n\na[0] = sum(l[0])\nfor i in range(1, n):\n    a[i] = l[i][0] + a[i - 1]\nfor i in range(n - 1):\n    a[i] += l[i][1]\n\nbest = 0\nfor i in range(f):\n    best += a[i]\n    if i > 0:\n        best += a[n - 1] - a[i - 1]\nprint(best)\n"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"0\"\nassert solution(\"2 10\") == \"0\"\nassert solution(\"3 10\") == \"0\"\nassert solution(\"4 10\") == \"0\"\nassert solution(\"5 10\") == \"0\""
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 2') == '10'\n\nimport os\nimport io\n"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"0\"\nassert solution(\"1 100\") == \"10\"\nassert solution(\"5 2\") == \"10\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == 10\n"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 10\") == \"10\"\nassert solution(\"1 10\\n\") == \"0\"\nassert solution(\"5 2\\n5 2\") == \"10\""
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 10') == '10'\n\"\"\""
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == 10\n\"\"\""
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == 10\nassert solution(\"1 10\") == 0\nassert solution(\"3 2\") == 4\nassert solution(\"5 1\") == 0\nassert solution(\"2 3\") == 0\n\nimport json"
    },
    {
        "number": 128,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == 10\nassert solution(\"1 10\") == 0\nassert solution(\"2 2\") == 0\nassert solution(\"3 2\") == 1\nassert solution(\"4 2\") == 2\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(1234567890) == 1234567890\nassert solution('1,2,3') == '1,2,3'\nassert solution('1 2 3') == '1,2,3'\nassert solution('1,2,3') == '1,2,3'\nassert solution('1,2,3,4') == '1,2,4'\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\"\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\"\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 11 2 4\") == \"1\"\nassert solution(\"20 15 2 3\") == \"1\"\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''20 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"20 15 2 3\") == '1'\nassert solution(\"10 11 2 4\") == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\nassert solution(test_input_3) == test_output_3\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\"\n\"\"\""
    },
    {
        "number": 129,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"20 15 2 3\") == \"1\"\nassert solution(\"10 11 2 4\") == \"-1\"\n\nimport sys\n\nassert solution(sys.stdin.readline()) == '1'\n\nsys.stdin = open(\"input.txt\", \"r\")\n\nimport sys\n\nassert solution(sys.stdin.readline()) == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\nWBBW\\nWBWB\\nWWWB\\nWBBW\\n\") == '5'\nassert solution(\"4 3\\nWBW\\nWBWB\\nWWWB\\nWBBW\\n\") == '-1'\nassert solution(\"1 1\\nB\\n\") == '-1'\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\\n\") == '1'\nassert solution(\"3 3\\nWWB\\nWWW\\nWWB\\n\") == '1'\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\\n\") == \"1\"\nassert solution(\"1 2\\nBB\\n\") == \"-1\"\n\n\"\"\"\n\nn, m = map(int, input().split())\n\na = []\nb = []\n\nfor i in range(n):\n    a.append(list(input()))\n\nfor i in range(n):\n    b.append(list(input()))"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('WWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\n\"\"\"\n\nimport math\n\nclass CheckSquare:\n\n    def __init__(self, size: int) -> None:\n        self._size = size\n        self._grid = [\n            [0 for _ in range(size)]\n            for _ in range(size)\n        ]\n        self._output = None\n\n\n    def set_cell(self, x: int, y: int, color: str) -> None:\n        if color == 'B':\n            self._grid[y][x] = 1\n\n    def __str__(self) -> str:\n        output = ''\n        for line in self._grid:\n            for cell in line:\n                output += '1' if cell else '0'\n            output += '\\n'\n        return output\n\n    def __repr__(self) -> str:\n        return str(self)\n\n    def is_square(self) -> bool:\n        for x in range(self._size):\n            for y in range(self._size):\n                if not self._is_square(x, y):\n                    return False\n        return True\n\n    def _is_square(self, x: int, y: int) -> bool:\n        if self._grid[y][x]:\n            return True\n\n        if x == 0 or x == self._size - 1 or y == 0 or y == self._size - 1:\n            return False\n\n        return self._is_square(x - 1, y - 1) and self._is_square(x - 1, y) and self._is_square(x - 1, y + 1) and self._is_square(x, y - 1) and self._is_square(x, y + 1)\n\n    def area(self) -> int:\n        count = 0\n        for x in range(self._size):\n            for y in range(self._size):\n                count += 1 if self._grid[y][x] else 0\n        return count\n\n    def get_square(self, x: int, y: int) -> str:\n        output = ''\n        for line in self._grid:\n            for cell in line:\n                output += '1' if cell else '0'\n        return output\n\n    def search_area(self, x: int, y: int, output: str) -> None:\n        if self._is_square(x, y):\n            output += self.get_square(x, y)\n            return output\n\n        for i in range(-1, 2):\n            for j in range(-1, 2):\n                if i == j or i + j == 0:\n                    continue\n                self.search_area(x + i, y + j, output)\n        return output\n\n    def get_output(self) -> int:\n        output = ''\n        if not self.is_square():\n            return -1\n        if not self._output:\n            self._output = self.search_area(0, 0, output)\n        return int(self._output)\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\nassert solution(\"1 2\\nBB\") == \"-1\"\nassert solution(\"1 2\\nB\") == \"1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"1 2\\nBB\") == \"1\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n\"\"\""
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nWWW\\nWWW\\nWWW\\n\") == \"1\"\nassert solution(\"1 2\\nBB\\n\") == \"-1\"\nassert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\\n\") == \"5\"\n\nimport numpy as np\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"1 2\\nBB\") == \"-1\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n\nassert solution(\"5 5\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n\"\n\"WBBB\\n\"\n\"WWWW\\n\"\n\"WWWB\\n\"\n\"WWWW\\n\") == \"5\"\n\nassert solution(\"4 3\\n\"\n\"WWW\\n\"\n\"WWW\\n\"\n\"WWW\\n\") == \"1\"\n\nassert solution(\"5 4\\n\"\n\"BWWW\\n\"\n\"BWWW\\n\"\n\"BWWW\\n\"\n\"BWWW\\n\") == \"1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 130,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\nassert solution(\"1 2\\nBB\") == \"1\"\nassert solution(\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n\"\"\"\n\nfrom sys import stdin\n\nn, m = list(map(int, stdin.readline().split()))\narr = []\nfor i in range(n):\n    arr.append(stdin.readline().strip())\n\ndp = [[0 for j in range(m)] for i in range(n)]\ndp[0][0] = 1 if arr[0][0] == \"B\" else -1\n\nfor i in range(n):\n    for j in range(m):\n        if arr[i][j] == \"B\":\n            if i == 0 and j == 0:\n                continue\n            if i == 0:\n                dp[i][j] = dp[i][j - 1] + 1 if arr[i][j - 1] == \"W\" else -1\n            elif j == 0:\n                dp[i][j] = dp[i - 1][j] + 1 if arr[i - 1][j] == \"W\" else -1\n            else:\n                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) + 1\n        else:\n            if i == 0 and j == 0:\n                continue\n            if i == 0:\n                dp[i][j] = dp[i][j - 1] - 1 if arr[i][j - 1] == \"B\" else -1\n            elif j == 0:\n                dp[i][j] = dp[i - 1][j] - 1 if arr[i - 1][j] == \"B\" else -1\n            else:\n                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) - 1\n\nprint(dp[-1][-1])\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 3 4 5\") == \"Yes\"\nassert solution(\"5 1 1 1 1 5\") == \"Yes\"\nassert solution(\"3 2 9\") == \"No\"\nassert solution(\"1 7 9\") == \"No\"\n\n\n\"\"\"\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\") == \"Yes\"\nassert solution(\"3\\n2 3 9\") == \"No\"\n\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('1 1 1 1 1') == 'Yes'\nassert solution('1 0 1 0 1') == 'No'\nassert solution('1 0 1 0 1') == 'Yes'\nassert solution('1 1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 3 4 5\\n2 1 4 3 5\") == \"Yes\"\nassert solution(\"5 1 1 1 1 5\\n1 0 1 0 1 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\\n2 1 4 3 5\") == \"No\"\nassert solution(\"5 1 2 3 4 5\\n2 1 2 4 3 5\") == \"No\"\n\n\"\"\"\n\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 1 2 3 4 5') == 'Yes'\nassert solution('5 1 2 3 4 5') == 'Yes'\nassert solution('5 1 2 3 4 5') == 'Yes'\nassert solution('5 1 2 3 4 5') == 'Yes'\nassert solution('5 1 2 3 4 5') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\") == \"Yes\"\nassert solution(\"3\\n2 3 9\\n1 7 9\") == \"No\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\") == \"Yes\"\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5') == 'Yes'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9') == 'No'\n\"\"\"\n\n\n\"\"\"\n\u041a\u0430\u043a \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438? \u041d\u0443\u0436\u043d\u043e \u0440\u0430\u0441\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u0441 \u0431\u0430\u0437\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u043c. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440, \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043c\u0435\u0447\u0430\u044e\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0431\u0430\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0448\u0438\u0442\u044c.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0432\u0432\u043e\u0434:\n\n2\n1 2 3\n2 1 4\n\n\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0432\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443, \u043f\u043e\u0434\u0443\u043c\u0430\u0432 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0432\u0432\u043e\u0434 \u0438 \u0437\u0430\u0442\u0435\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043c\u0435\u0447\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u0441\u0432\u043e\u0435\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435.\n\n\u0418 \u0432 \u043a\u043e\u043d\u0446\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043e\u0442\u0432\u0435\u0442:\n\nNo\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u0432\u043e\u0434 \u0432 \u0444\u043e\u0440\u043c\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n\n-----\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445-----\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $n$, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0435 5000.\n\n\u0414\u0430\u043b\u0435\u0435 \u0432 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f $n$ \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438. \u0412\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0442 5000.\n\n-----\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445-----\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u0437\u0430\u0434\u0430\u0447\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0432\u043e\u0434\u0430 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430.\n\n-----Sample Input-----\n\n3\n1 2 3\n2 1 4\n\n-----Sample Output-----\n\nNo\n\n\"\"\""
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2 3 4 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\") == \"Yes\"\n"
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 3 4 5\\n2 1 4 3 5\") == \"Yes\"\nassert solution(\"5 1 2 3 4 5\\n2 1 4 3 5\") == \"No\""
    },
    {
        "number": 131,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == \"Yes\"\nassert solution(\"1 1 1 1 1\") == \"Yes\"\nassert solution(\"2 1 4 3 5\") == \"No\"\nassert solution(\"1 0 1 0 1\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n90 90 90 90\") == \"0\"\nassert solution(\"3\\n100 100 160\") == \"40\"\nassert solution(\"1\\n360\") == \"360\"\nassert solution(\"4\\n170 30 150 10\") == \"0\"\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n170 30 150 10') == '0'\nassert solution('3\\n100 100 160') == '40'\nassert solution('4\\n100 100 160') == '40'\nassert solution('4\\n180 30 150 10') == '90'\n\"\"\""
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n90 90 90 90\") == \"0\"\nassert solution(\"4\\n100 100 160\") == \"40\"\nassert solution(\"3\\n100 100 160\") == \"0\"\nassert solution(\"1\\n360\") == \"360\"\n\nassert solution(\"4\\n170 30 150 10\") == \"0\"\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n100 100 160\\n\") == \"0\"\nassert solution(\"3\\n100 100 160\\n\") == \"40\"\nassert solution(\"1\\n360\\n\") == \"360\"\nassert solution(\"4\\n170 30 150 10\\n\") == \"0\"\n\nassert solution(\"4\\n90 90 90 90\\n\") == \"0\"\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4\\n100 100 160\\n') == '0'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('1\\n360\\n') == '360'\nassert solution('4\\n170 30 150 10\\n') == '0'\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n90 90 90 90') == '0'\nassert solution('4\\n100 100 100 100') == '0'\nassert solution('1\\n360') == '360'\nassert solution('3\\n100 100 160') == '40'\nassert solution('4\\n170 30 150 10') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n90 90 90 90\") == \"0\"\nassert solution(\"1\\n360\") == \"360\"\nassert solution(\"4\\n170 30 150 10\") == \"0\"\nassert solution(\"3\\n100 100 160\") == \"40\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nprint(min(a[i] - a[i - 1] for i in range(1, n)) - min(a[i] - a[i - 1] for i in range(1, n)) if min(a[i] - a[i - 1] for i in range(1, n)) else 360 - min(a[i] - a[i - 1] for i in range(1, n)))\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n100 100 160\\n\") == \"0\"\nassert solution(\"1\\n360\\n\") == \"360\"\nassert solution(\"4\\n170 30 150 10\\n\") == \"0\"\n\n\"\"\"\nfrom collections import Counter, defaultdict\nfrom typing import List, Dict, Set, Tuple\nimport math\n"
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n170 30 150 10\") == \"0\"\n\nassert solution(\"3\\n100 100 160\") == \"40\"\n\nassert solution(\"4\\n90 90 90 90\") == \"0\"\n\nassert solution(\"1\\n360\") == \"360\"\n\nassert solution(\"4\\n170 30 150 10\") == \"0\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 132,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n90 90 90 90\") == \"0\"\nassert solution(\"3\\n100 100 160\") == \"40\"\nassert solution(\"1\\n360\") == \"360\"\nassert solution(\"4\\n170 30 150 10\") == \"0\""
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"9\"\nassert solution(\"3 3\") == \"18\"\nassert solution(\"4 3\") == \"35\"\nassert solution(\"5 3\") == \"54\"\nassert solution(\"6 3\") == \"84\"\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(str(TESTS[0][0])) == TESTS[0][1]"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\"\"\"\n\nimport sys\nfrom collections import Counter, defaultdict"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\"\"\"\nimport itertools\n\nn, m = [int(x) for x in stdin.split()]\ncount = itertools.product([i for i in range(n)], repeat=m)\nprint(len(list(count)))\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''1 3''') == '7'\nassert solution('''2 2''') == '9'\n\"\"\"\n\nimport math\nimport sys\n\nfrom utils import check\n"
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\"\"\""
    },
    {
        "number": 133,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6') == '8 10'\nassert solution('3') == '4 5'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4 5\"\n"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\n\n---"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\n\nprint(solution(stdin))\n'''\n\nfrom math import gcd\nfrom functools import reduce\n"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"4 5\"\n\"\"\"\n\nimport math\n\na = int(input())\n\nc = 1\nwhile c ** 2 < a:\n    c += 1"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\n\n---\n"
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4 5\"\n\"\"\""
    },
    {
        "number": 134,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3') == '4 5'\n\nassert solution('6') == '8 10'\n\nassert solution('1') == '-1'\n\nassert solution('17') == '144 145'\n\nassert solution('67') == '2244 2245'\n\nprint(solution('67'))\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n\n\n\"\"\"\n\nimport numpy as np\nimport itertools"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 4') == 'No'\n\"\"\"\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(test_0) == test_0_result\nassert solution(test_1) == test_1_result\n\nprint('Hooray!')\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"Yes\"\nassert solution(\"4 4\") == \"No\"\nassert solution(\"5 5\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == 'No'\nassert solution(\"5 3\") == 'Yes'\n\"\"\"\n\n\nimport math\nimport collections\n"
    },
    {
        "number": 135,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"9\\n10\") == \"<\"\nassert solution(\"11\\n10\") == \">\"\nassert solution(\"00012345\\n12345\") == \"=\"\nassert solution(\"0123\\n111\") == \">\"\n\"\"\"\n\nimport sys\n\na, b = sys.stdin.readline().split()"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\">\") == \">\"\nassert solution(\"=\") == \"=\"\nassert solution(\"<\") == \"<\"\n\"\"\"\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345') == '='\nassert solution('0123\\n111') == '>'\n\nprint('Success')\n\n\n\n-----\n9\n10\n\n<\n\n11\n10\n\n>\n\n00012345\n12345\n\n=\n\n0123\n111\n\n>\n\nSuccess\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(a) == b\nassert solution(a) == b\nassert solution(a) == b\n\"\"\"\n\na = int(input())\nb = int(input())"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"9\\n10\") == \"<\"\nassert solution(\"11\\n10\") == \">\"\nassert solution(\"0123\\n12345\") == \"=\"\nassert solution(\"00012345\\n12345\") == \">\"\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345') == '='\nassert solution('0123\\n9') == '>'\nassert solution('0123\\n111') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"9\\n10\") == \"<\"\nassert solution(\"11\\n10\") == \">\"\nassert solution(\"00012345\\n12345\") == \"=\"\n\n\"\"\"\nfrom math import log10\nimport unittest\n\nTEST_INPUTS = [\n    \"9\\n10\",\n    \"11\\n10\",\n    \"00012345\\n12345\",\n    \"0123\\n9\",\n]\n\nTEST_OUTPUTS = [\n    \"<\",\n    \">\",\n    \"=\",\n]\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        for test_input, test_output in zip(TEST_INPUTS, TEST_OUTPUTS):\n            assert solution(test_input) == test_output\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(str(input())) == str(input())\n\nsolution(stdin)\n\n----\n"
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345') == '='\nassert solution('0123\\n111') == '>'\n\n\"\"\""
    },
    {
        "number": 136,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"9\\n10\") == \"<\"\nassert solution(\"11\\n10\") == \">\"\nassert solution(\"00012345\\n12345\") == \"=\"\nassert solution(\"0123\\n9\") == \">\"\n\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == 6\n\nsolution(\"2 1\\n1 0\") == 1\n\nassert solution(\"1 1\\n-1\") == 2\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == 6\n\"\"\"\n\nimport sys"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == \"6\"\nassert solution(\"2 1\\n1 0\") == \"1\"\n\"\"\""
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == 6\nassert solution(\"2 1\\n-1 0 1\") == 1\nassert solution(\"1 1\\n-1\") == 2\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0 0\\n\") == \"2\"\nassert solution(\"2 1\\n-1 1\\n\") == \"2\"\nassert solution(\"3 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"3 1\\n0 1\\n0 1\\n1 1\\n\") == \"0\"\nassert solution(\"3 1\\n0 1\\n0 1\\n1 1\\n\") == \"0\"\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 1\\n-1 0 1') == '6'\nassert solution('2 1\\n1 0') == '1'\nassert solution('1 1\\n-1') == '2'\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3 1\n-1 0 1''') == '6'\nassert solution('''2 1\n1 0''') == '1'\nassert solution('''1 1\n-1''') == '2'\nassert solution('''1 1\n-1''') == '2'\nassert solution('''1 1\n0''') == '0'\n"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\n'''"
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == 6\nassert solution(\"2 1\\n1 0\") == 1\nassert solution(\"1 1\\n-1\") == 2\n\"\"\""
    },
    {
        "number": 137,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1\") == \"2\"\nassert solution(\"1 1\\n1 0\") == \"1\"\nassert solution(\"1 1\\n0 1\") == \"2\"\nassert solution(\"1 1\\n-1\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n\"\"\"\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 4 4 4') == '0'\nassert solution('6 2 1 1') == '1'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n\nprint(\"Tests passed\")\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"12 9 4 2\") == \"10\"\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n\n\"\"\""
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\""
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 138,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\n\"\"\""
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2\n2 3\n3 2\n3 1''') == 'YES'\nassert solution('''5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5''') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4\n1 2\n2 3\n3 2\n3 1\"\"\") == \"YES\"\nassert solution(\"\"\"5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\"\"\") == \"NO\""
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\") == \"NO\"\n\n-----\nhttps://www.codewars.com/kata/54c45be3b2079eccff0007a9\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 'YES'\nassert solution('1\\n2\\n3\\n3\\n1') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1') == 'NO'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n2\\n3') == 'YES'\nassert solution('1\\n2\\n3\\n2\\n3\\n3\\n4\\n4\\n5') == 'YES'\n\n\"\"\"\n\n\"\"\"\nSolution for:\nhttps://codeforces.com/contest/1385/problem/B\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 2\\n3 1\\n\") == 'YES'\nassert solution(\"1 2\\n2 3\\n3 2\\n3 1\\n4 5\\n\") == 'NO'\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\") == \"26\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 50\\n20 0\\n3 1\") == \"30\"\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 50\\n20 0\\n3 1\") == \"30\"\nassert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\") == \"26\"\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\\n\") == \"281\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\"\nassert solution(\"2 50\\n20 0\\n3 1\\n\") == \"30\"\nassert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n\") == \"26\"\n\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 1\\n1 2\\n2 3\\n3 4\\n4 5\") == '2'\n\nassert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == '281'\n\nassert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\") == '26'\n\n\"\"\"\n\nimport sys\nimport typing\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 50\\n3 1\\n') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n') == '26'\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"2 50\\n20 0\\n3 1\") == \"30\"\nassert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\") == \"26\"\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n\"\"\"\nimport sys"
    },
    {
        "number": 140,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 595\\n43 2\\n300 4\\n554 10\") == \"281\"\nassert solution(\"1 1\\n1 1\") == \"0\"\nassert solution(\"2 50\\n20 0\\n3 1\") == \"30\"\nassert solution(\"5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\") == \"26\"\nassert solution(\"1 1\\n1 1\") == \"0\""
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8\\n') == 10\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0 4 1 0 0 9 8 3\") == '3'\nassert solution(\"1 2 3 4 5 6 7 8\") == '8'\nassert solution(\"1 2 3 4 5 6 7 8 0\") == '7'\nassert solution(\"1 2 3 4 5 6 7 8 9\") == '9'\nassert solution(\"0 0 0 0 0 0 0 0\") == '0'\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8\") == \"10\"\nassert solution(\"0\\n0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"3\\n0 4 1 0 0 9 8 3\") == \"3\"\n\nprint(solution(\"10\\n1 2 3 4 5 6 7 8\"))\nprint(solution(\"0\\n0 0 0 0 0 0 0 0\"))\nprint(solution(\"3\\n0 4 1 0 0 9 8 3\"))\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3') == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"10\n1 2 3 4 5 6 7 8\"\"\"\n) == \"10\"\nassert solution(\n    \"\"\"0\n0 0 0 0 0 0 0 0\"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"3\n0 4 1 0 0 9 8 3\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '10'\nassert solution('1 2 3 4 5 6 7 8') == '10'\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0 4 1 0 0 9 8 3\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"10\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 0 0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6') == '7'\n"
    },
    {
        "number": 141,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8\") == 10\nassert solution(\"0\\n0 0 0 0 0 0 0 0\") == 0\nassert solution(\"3\\n0 4 1 0 0 9 8 3\") == 3\n\"\"\"\n"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 12\") == \"150\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"5 787787787\") == \"44981600785557577\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"4 3\") == \"10\""
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"150\"\n\"\"\"\n"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 12\\n20 30 70 90\\n\") == \"150\"\nassert solution(\"4 3\\n10 100 1000 10000\\n\") == \"30\"\nassert solution(\"5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n\") == \"44981600785557577\""
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 12\\n20 30 70 90\\n\") == 150\nassert solution(\"4 3\\n10 100 1000 10000\\n\") == 30\nassert solution(\"5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n\") == 44981600785557577"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 12') == '150'\nassert solution('4 3') == '10'\nassert solution('5 787787787') == '44981600785557577'\n"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 12\\n20 30 70 90') == 150\nassert solution('4 3\\n10 100 1000 10000') == 30\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321') == 44981600785557577"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 12\\n20 30 70 90') == 150\nassert solution('4 3\\n10 100 1000 10000') == 30\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321') == 44981600785557577"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"150\"\n\"\"\"\n\nfrom functools import reduce\nfrom operator import add\n"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"150\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"5 787787787\") == \"44981600785557577\"\n"
    },
    {
        "number": 142,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''4 12\n20 30 70 90''') == '150'\nassert solution('''4 3\n10 100 1000 10000''') == '30'\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321''') == '44981600785557577'\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 3 3 6\") == \"5\"\n\n\"\"\"\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn = int(stdin.readline())\nlst = list(map(int, stdin.readline().split()))\n\nc = defaultdict(int)\nm = defaultdict(int)\n\nfor i in range(n):\n    if lst[i] == c[i]:\n        c[i] = m[i] + 1\n    else:\n        c[i] = 1\n    m[i] = max(m[i], c[i])\n\nprint(max(m.values()))\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\n\nassert solution('2\\n2 1') == '3'\n\"\"\"\n\nn = int(stdin.readline().strip())\narr = [int(i) for i in stdin.readline().strip().split()]\n\nmx = -1\nfor i in range(n):\n    if arr[i] > mx:\n        mx = arr[i]\n\nfor i in range(n):\n    if arr[i] < mx:\n        mx = arr[i]\n\nprint(mx)\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\nassert solution('2\\n2 1') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\"\n\"\"\""
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\"\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\nassert solution('2\\n2 1') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\nassert solution('2\\n2 1') == '3'\nassert solution('6\\n1 1 2 3 4 6') == '5'\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4\\n2 5 6 7') == 3\nassert solution('4\\n1 3 4 5') == 2\n\"\"\""
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\"\nassert solution(\"2\\n2 1\") == \"3\"\nassert solution(\"3\\n2 1 3\") == \"3\"\nassert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 143,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\nassert solution('2\\n2 1') == '3'\nprint('Test pass.')\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('350178') == 'YES'\nassert solution('1248') == 'NO'\nassert solution('3399') == 'YES'\nassert solution('1234') == 'NO'\nassert solution('1011') == 'NO'\n\nprint('Well done!')\n\"\"\"\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"567\") == \"YES\"\nassert solution(\"346\") == \"NO\"\nassert solution(\"123\") == \"NO\"\nassert solution(\"974\") == \"YES\"\nassert solution(\"753\") == \"NO\"\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n73452') == 'YES'\nassert solution('4\\n1248') == 'NO'\nassert solution('4\\n1558') == 'YES'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('73452') == 'YES'\nassert solution('1248') == 'NO'"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('73452') == 'YES'\nassert solution('1248') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('73452') == \"YES\"\nassert solution('1248') == \"NO\"\n\n\"\"\""
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('73452') == 'YES'\nassert solution('1248') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5,73452\") == \"YES\"\nassert solution(\"4,1248\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"350178\") == \"YES\"\nassert solution(\"12345\") == \"NO\"\nassert solution(\"1325\") == \"YES\"\nassert solution(\"1235\") == \"YES\"\nassert solution(\"2345\") == \"NO\"\n\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 144,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n73452\") == \"YES\"\nassert solution(\"4\\n1248\") == \"NO\"\n"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('wjmzbmr') == \"CHAT WITH HER!\"\nassert solution('xiaodao') == \"IGNORE HIM!\"\nassert solution('sevenkplus') == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\n\"\"\""
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\"\"\""
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\"\"\""
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\""
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\nassert solution('sevenkplus') == 'CHAT WITH HER!'\n\"\"\"\nimport collections"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\nassert solution(\"x\") == \"IGNORE HIM!\"\nassert solution(\"name\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\nprint('Success')"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 1 -1 1') == '2'\nassert solution('1 1 1 -1 1') == '1'\nassert solution('1 -1 1 1 -1 1 -1 1 -1 1 -1 1 1 -1 1 1 -1 1 1') == '9'\nassert solution('1 1 1 1 -1 1 1 1 1 -1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1') == '8'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 1 -1 1') == '2'\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == '9'\n\"\"\""
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 1 -1 1\") == 2\nassert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\") == 9\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 1 -1 1') == 2\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == 9\n\"\"\"\n\nimport sys"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 1 -1 1\\n\") == \"2\"\nassert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n\") == \"9\"\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 1 -1 1\") == \"2\"\n\"\"\"\n\na, b = list(map(int, stdin.split()))\ns, e = 0, 0\nlst = list(map(int, stdin.split()))\nfor i in range(len(lst)):\n    if lst[i] == 1:\n        s += 1\n    else:\n        e += 1\nprint(max(abs(s - e), abs(s - b), abs(e - b)))\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 1 -1 1\") == \"2\"\nassert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\") == \"9\"\n\n\n\"\"\""
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1 -1 1\") == '2'\nassert solution(\"2 2\\n1 1 -1 1\\n1 1 -1 1\") == '1'\nassert solution(\"2 2\\n1 1 1 -1\\n1 1 1 1\") == '0'\nassert solution(\"2 2\\n1 1 1 -1\\n1 1 1 1\") == '1'\nassert solution(\"2 2\\n1 1 1 -1\\n1 1 1 1\") == '2'\n\"\"\"\n\nn, k = list(map(int, stdin.readline().split()))\ntypes = list(map(int, stdin.readline().split()))\n\ncnt = 0\nfor i in range(len(types)):\n    if types[i] == 1:\n        cnt += 1\n    if i % k == 0:\n        cnt -= 1\n\nprint(abs(cnt - len(types)))\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 1 -1 1\\n') == '2'\n"
    },
    {
        "number": 146,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\") == 9\nassert solution(\"14 2\\n1 1 -1 1\") == 2\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '12'\nassert solution('0 1 0') == '6'\nassert solution('0 1 1') == '12'\nassert solution('1 1 1') == '12'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 1 2') == 12"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\") == 12\nprint(solution(\"4 1 2\"))\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == 12\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\") == \"12\"\nassert solution(\"4 3 2\") == \"20\"\nassert solution(\"9 9 9\") == \"36\"\nassert solution(\"0 1 2\") == \"4\"\nassert solution(\"10 10 10\") == \"100\"\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == 12\n\n\"\"\"\nimport math\nfrom collections import defaultdict"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 1 2') == 12\n\"\"\""
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\") == 12\n\"\"\"\n\nimport sys"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(3 1 2) == 4\n\"\"\"\n\nimport sys\nimport math\nfrom typing import Dict\n\n\nclass Solution:\n    def solution(self, stdin: str) -> int:\n        n, c0, c1 = [int(x) for x in stdin.split()]\n\n        total_cost = 0\n\n        for i in range(n):\n            total_cost += min(c1, c0)\n\n            c0, c1 = c1, c0 + c1\n\n        return total_cost\n"
    },
    {
        "number": 147,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(3, 1, 2) == 4\nassert solution(1, 0, 10) == 10\nassert solution(2, 1, 0) == 2\nassert solution(1, 10, 20) == 10\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\"\"\"\n\nimport collections\nimport typing"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('4 7 7 1') == 'NO'\nassert solution('4 5 7 1') == 'YES'\nassert solution('7 5 4 3 2') == 'YES'\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(5, 1, 4, 3, 2) == 'YES'\nassert solution(10, 2, 1, 9, 10) == 'NO'\nassert solution(10, 2, 1, 10, 9) == 'NO'\n\"\"\"\nimport math"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\""
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('10 2 9 10 1') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\n\"\"\""
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\n\n\"\"\""
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n\nprint(\"Success!\")\n\"\"\""
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\""
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''2 3 1 10''') == '1'\nassert solution('''3 5 10 22''') == '8'\n\nprint('Success')\n"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\n\n---"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 149,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('27') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\n\"\"\""
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('27') == '3'\n\"\"\"\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 0\n\"\"\"\n\nn = int(input())\ncnt = 0\nfor i in range(2, n + 1):\n    if n % i == 0:\n        cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"8\") == \"3\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"27\") == \"3\"\n\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == 1\n\n\"\"\""
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4') == 2\n\nassert solution('6') == 3\n\nassert solution('25') == 5\n\nassert solution('27') == 3\n\n\"\"\"\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"3\"\n\"\"\"\n\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n"
    },
    {
        "number": 150,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == 2\nassert solution('1\\n2\\n4\\n2\\n3\\n1') == 1\n\"\"\""
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"asdfa\") == \"asdf a\"\nassert solution(\"asdfaaaa\") == \"asdf a a\"\n"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"helllllooooo\") == \"hello\"\nassert solution(\"tobeornottobe\") == \"to be or not to be\"\nassert solution(\"backtothefutttture\") == \"back to the future\"\nassert solution(\"hello\") == \"hello\"\n\"\"\"\n\nimport sys\n\nVOWELS = {\"a\", \"e\", \"i\", \"o\", \"u\"}"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\nassert solution('Hello') == 'H e l l o'\nassert solution('hello') == 'h e l l o'\n"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\n    \"asdfasdf\"\n) == \"asd fasd f\"\nassert solution(\n    \"hellno\"\n) == \"hell no\"\nassert solution(\n    \"hellno worlk\"\n) == \"hell no worlk\"\n\n-----Problem-----\nRUSSIAN BEROFFICE\n\"\"\"\n\nimport string"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\n\nimport sys\n\nvowels = {\n    \"a\", \"e\", \"i\", \"o\", \"u\",\n    \"A\", \"E\", \"I\", \"O\", \"U\",\n    \"\u0430\", \"\u0435\", \"\u0451\", \"\u0438\", \"\u043e\", \"\u0443\", \"\u044b\",\n    \"\u0410\", \"\u0415\", \"\u0401\", \"\u0418\", \"\u041e\", \"\u0423\", \"\u042b\"\n}\n\nfor line in sys.stdin:\n    line = line.strip()\n    cnt = 1\n    while cnt < len(line):\n        if line[cnt] in vowels and line[cnt - 1] in vowels:\n            line = line[:cnt] + \" \" + line[cnt:]\n            cnt += 2\n        else:\n            cnt += 1\n    print(line)\n"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'abacaba'\nassert solution('hellno') == 'hell no'\nassert solution('asdfasdf') == 'asd fasd f'\n\nprint(solution('abacaba'))\nprint(solution('hellno'))\nprint(solution('asdfasdf'))"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"asdfasdf\") == \"as d f s d f\"\n\n\"\"\""
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\n\"\"\"\n\nfrom typing import List\n\nVOWELS = set(\"aeiou\")"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"hellnoooo\") == \"hell no oo o\"\nassert solution(\"hellnoooo\") == \"hell no oo o\"\n"
    },
    {
        "number": 151,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == \"20\"\n\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n10 80''') == \"200\"\n\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n10 80''') == \"200\"\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n10 80''') == \"200\"\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n10 80''') == \"200\"\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80') == '200'\n\n\"\"\"\n\nimport math\n\nn, m, k = map(int, input().split())\nx, s = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = list(map(int, input().split()))\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n200 100 400\\n4 15\\n10 80\") == \"200\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\n\n\"\"\"\n\n\nfrom typing import List\nfrom collections import defaultdict\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\\n') == '200'\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\\n\") == \"20\"\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\") == \"200\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n100 800\") == \"200\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\\n10 40\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\\n4 15\") == \"20\"\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\\n6 10 2\\n1 2 3\\n4 15\") == \"9\"\n"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\") == \"200\""
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"200\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\") == \"200\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 152,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\\n20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\") == \"200\\n200\"\n\n-----Test 1-----\nprint(solution(\"10 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\"))\n\n-----Test 2-----\nprint(solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\"))\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 2 5') == '2'\nassert solution('5 4 6') == '2'\nassert solution('5 3 6') == '2'\nassert solution('4 3 6') == '2'\nassert solution('5 5 6') == '3'\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\n\"\"\"\n\nn, k, m = input().split()\nn = int(n)\nk = int(k)\nm = int(m)\n\nt = [int(i) for i in input().split()]\n\npoints = 0\nfor i in range(n):\n    subtasks = t[i] // m\n    if t[i] % m == 0:\n        points += subtasks + 1\n    else:\n        points += subtasks + 2\n\nprint(points)\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4 11\\\\n1 2 3 4\\\\n\") == \"6\"\nassert solution(\"5 5 10\\\\n1 2 4 8 16\\\\n\") == \"7\"\n\"\"\"\n\nimport sys\n\nn, k, m = map(int, sys.stdin.readline().split())\nt = list(map(int, sys.stdin.readline().split()))\n\nscore = 0\nfor i in range(k):\n    score += (t[i] * (m // t[i])) + (t[i] * (m % t[i]))\n\nprint(score)\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''3 4 11''') == '6'\nassert solution('''5 5 10''') == '7'\nassert solution('''3 3 6''') == '3'\nassert solution('''5 5 6''') == '3'\n\n'''\n\n'''"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 5 10\") == \"7\"\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 5 10\") == \"7\"\n\"\"\"\n\nn, k, m = map(int, input().split())\ntasks = list(map(int, input().split()))\n\npoints = 0\nfor i in range(k):\n    points += tasks[i] * (i+1)\n    if tasks[i] == 1:\n        points += 1\n    if points > m:\n        print(i+1)\n        break"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 4 11\\n1 2 3 4') == '6'\n\"\"\"\n\nimport math\n\nn, k, m = map(int, input().split())\nt = list(map(int, input().split()))\n\npoints = 0\ni = 0\n\nwhile i < k:\n    points += 1\n    m -= t[i]\n    if m <= 0:\n        break\n    i += 1"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 5 10\\n1 2 4 8 16\\n\") == \"7\"\nassert solution(\"3 4 11\\n1 2 3 4\\n\") == \"6\"\nassert solution(\"4 3 12\\n1 2 3 4\\n\") == \"5\"\nassert solution(\"4 3 1\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"5 5 10\\n1 2 3 4 5\\n\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(test_input) == test_output\n"
    },
    {
        "number": 153,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 4 11\\n1 2 3 4') == '6'\nassert solution('5 5 10\\n1 2 4 8 16') == '7'\n\n\n-----Big O Notation-----\n\nO(nkM)\n\n\n-----Citations-----\n\n\"\"\"\n\nimport unittest\nimport sys\nfrom typing import List"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 1\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '0'\nassert solution('4\\n') == '1'\nassert solution('5\\n') == '26'\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 1\nassert solution('3\\n4') == 0\n\n[Image]\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n\n\n'''\n\nimport sys"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\n\"\"\"\nimport sys\nfrom collections import deque\nfrom itertools import product\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"3 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\n\n'''"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\"\"\"\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\n\"\"\"\n\nn, m, k = map(int, input().split())"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3 0') == '1 1'\n\nassert solution('4 3 11') == '3 2'\n\nassert solution('4 3 7') == '3 2'\n\n\"\"\""
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\n\n\"\"\"\n"
    },
    {
        "number": 155,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '3 2'\nassert solution('4 3 7') == '3 2'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\n\"\"\"\nfrom math import gcd\n\nX = int(input())\n\na = 1\nb = X // a\n\nwhile a * b < X:\n    if gcd(a, b) == 1:\n        break\n    else:\n        a += 1\n        b = X // a\n\nprint(a, b)\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == '1 2'\n\"\"\""
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('11') == '5 7'\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\""
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1 2'\n\n\"\"\"\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\"\n\nprint(\"All cases passed!\")\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\"\n\nprint(solution(\"2\"))\nprint(solution(\"6\"))\nprint(solution(\"4\"))\nprint(solution(\"1\"))\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('4') == '1 4'\nassert solution('6') == '2 3'\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('8') == '2 4'\n"
    },
    {
        "number": 156,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1 2\"\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n7\") == \"7\"\nassert solution(\"4\\n7\\n13\") == \"21\"\nassert solution(\"2\\n3\\n2\") == \"0\""
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('1\\n7\\n11') == '0'\nassert solution('0\\n4\\n0') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\n\"\"\""
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n7') == \"7\"\nassert solution('4\\n7\\n13') == \"21\"\nassert solution('2\\n3\\n2') == \"0\"\nprint(\"Check Passed\")\n\n\"\"\""
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('4\\n7\\n12') == '21'\n\nimport sys\nassert sys.version_info >= (3, 7)\n\nimport pytest\nfrom m01_basics.practice_2 import solution\n\n\n@pytest.mark.parametrize('input_value, expected_value', [\n    ('2\\n5\\n7', '7'),\n    ('4\\n7\\n13', '21'),\n    ('2\\n3\\n2', '0'),\n    ('4\\n7\\n12', '21'),\n])\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n4') == '7'\nassert solution('1\\n1\\n1') == '0'\n\nassert solution('4\\n7\\n13') == '21'\n\n\"\"\"\n\nfrom math import *\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n7\") == \"7\"\n\nassert solution(\"4\\n7\\n13\") == \"21\"\n\nassert solution(\"2\\n3\\n2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(int(input()))\n"
    },
    {
        "number": 157,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n7\") == \"7\\n\"\nassert solution(\"4\\n7\\n13\") == \"21\\n\"\nassert solution(\"2\\n3\\n2\") == \"0\\n\"\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n1 3 2 4\"\"\") == \"YES\"\nassert solution(\"\"\"2\n3 3\"\"\") == \"NO\"\nassert solution(\"\"\"2\n3 2\"\"\") == \"NO\"\nassert solution(\"\"\"3\n1 2 4 5 6\"\"\") == \"YES\"\nassert solution(\"\"\"3\n3 2 5 1 6\"\"\") == \"YES\"\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2\\n1 3 2 4') == 'YES'\n\"\"\""
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 3 2 4\") == \"YES\"\nassert solution(\"2\\n3 3\") == \"NO\""
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 3 2 4\") == 'YES'\nassert solution(\"2\\n1 3 1 4\") == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 3\") == \"YES\"\nassert solution(\"2 2 1 3\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"NO\"\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 3 2 4\") == \"YES\"\nassert solution(\"1\\n3 3\") == \"NO\"\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2\\n1 3 2 4') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2 4\") == \"YES\"\n\"\"\""
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 3\") == \"YES\"\nassert solution(\"2\\n2 2\") == \"NO\"\nassert solution(\"3\\n4 7 6\") == \"NO\"\nassert solution(\"3\\n5 9 8\") == \"NO\"\nassert solution(\"1\\n3 5\") == \"NO\"\n"
    },
    {
        "number": 158,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2\\n1 3 2 4') == 'YES'\nassert solution('1\\n3 3') == 'NO'\n\"\"\""
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 7 28\") == \"1\\n2 7 9 28\"\n\"\"\"\n\nn = int(input())\na = input()\na = list(map(int, a.split()))\nb = []\n\nfor i in range(len(a)):\n    for j in range(i+1, len(a)):\n        if not gcd(a[i], a[j]) == 1:\n            b.append(max(a[i], a[j]))\n\nb = list(set(b))\nprint(len(b))\nprint(\" \".join(list(map(str, b + a))))\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 7 28\") == '1'\nassert solution(\"2 7 1 1\") == '0'\nassert solution(\"2 7 2 7\") == '1'\nassert solution(\"2 7 2 6 7\") == '2'\nassert solution(\"2 7 2 6 8 7\") == '0'\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 7 28\") == \"1\"\n\nassert solution(\"1 7 9 28\") == \"2\"\n\nassert solution(\"1 3 8\") == \"0\"\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''3\n2 7 28''') == '1'\nassert solution('''4\n2 7 28 9''') == '2'\nassert solution('''1\n1 2 3 4''') == '0'\nassert solution('''2\n1 2 3 4''') == '1'\nassert solution('''4\n2 7 28 9''') == '2'\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 2 1 9 3') == 2\nassert solution('6 9 2 3') == 1\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7\\n28\") == \"1\\n2 7 9 28\"\n\"\"\"\nimport functools\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 7 28') == '1'\nassert solution('2 7 21') == '0'\n\nassert solution('2 7 21') == '0'\nassert solution('2 7 21') == '0'\n\nassert solution('2 7 21') == '0'\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''4\n2 7 27\n''') == '2'\n\nassert solution('''4\n2 7 27\n''') == '2'\n\nassert solution('''4\n2 7 27\n''') == '2'\n\nassert solution('''3\n2 7 28\n''') == '1'\n\nassert solution('''3\n2 7 28\n''') == '1'"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 7 28\") == \"1\"\nassert solution(\"3 17 45\") == \"3\"\nassert solution(\"4 11 16 45\") == \"4\"\nassert solution(\"2 7 28\") == \"1\"\nassert solution(\"4 11 16 45\") == \"4\"\n"
    },
    {
        "number": 159,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 7 28\") == \"1\\n2 7 9 28\"\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(test_input_0) == test_output_0\n\nprint('Test 0: OK')\nprint(solution(test_input_0))\nprint(solution(test_input_1))\nprint(solution(test_input_2))\nprint(solution(test_input_3))\nprint(solution(test_input_4))\n\n\"\"\"\nimport math\nfrom typing import List\nimport unittest\n\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8 20\") == 7\nprint(solution(\"8 20\"))\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 1\\n2 3 4 5') == '1'\nassert solution('4 1\\n9 5 3') == '4'\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n12 22 33 44 55\n''') == '12'\n\n---\n6/6 test cases passed.\nStatus: Accepted\nRuntime: 28 ms\nMemory Usage: 14.5 MB"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 3\\n8 20') == '7'\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 3\\n8 20\\n') == '7'\n\"\"\""
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\n\") == \"7\"\n\n\"\"\"\n\nfrom typing import List, Tuple\nimport math\nimport unittest\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 3\\n8 20') == '7'\n\n\"\"\"\n\nfrom sys import stdin\n\nN, K = map(int, stdin.readline().split())\nA = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n5 4 9\") == \"1\"\nassert solution(\"2 1\\n10 20\") == \"1\"\nassert solution(\"4 3\\n8 20 3\") == \"3\"\n\"\"\"\n\nfrom __future__ import print_function\n"
    },
    {
        "number": 160,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 3\\n8 20') == '7'\n\"\"\""
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"39\") == \"4\"\nassert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"0\"\n\"\"\""
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n\nfrom itertools import combinations\n\nx = int(stdin.readline())\nmax_m = 40\ncount = 0\n\nwhile True:\n    if x == 0:\n        break\n    elif x == 1:\n        break\n\n    elif max_m <= 40:\n        count += 1\n        break\n\n    elif x % 2 == 1:\n        x = x + 2 ** (max_m - 1) - 1\n        count += 1\n        max_m -= 1\n    else:\n        x = x + 1\n        count += 1\n        max_m -= 1\n\nprint(count)\n\nfor i in combinations(list(range(1, max_m + 1)), count):\n    print(' '.join(map(str, i)))\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"7\") == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"0\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\n\n\nimport sys"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"8\") == \"0\"\n\"\"\""
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"56\") == \"4 5 3\"\nassert solution(\"7\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\n"
    },
    {
        "number": 161,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"39\") == \"4 5 3\"\nassert solution(\"56\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"15\") == \"0\"\n\"\"\"\nfrom sys import stdin\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(2,3,5) == 2\nassert solution(6,7,1,2,3,4,5,6) == 7\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n2 3 5\") == \"2\"\nassert solution(\"6 7\\n1 2 3 4 5 6\") == \"7\"\n\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n2 3 5\") == 2\nassert solution(\"6 7\\n1 2 3 4 5 6\") == 7\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 3') == '1'\nassert solution('1 3 3 3 3') == '3'\n'''\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 7\\n1 2 3 4 5 6') == 7\n\"\"\"\n\n\"\"\"\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\narr = list(map(int, sys.stdin.readline().split()))\nres = 0\nfor i in range(len(arr)):\n    if arr[i] <= k:\n        res += 1\nprint(res)\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\narr = list(map(int, sys.stdin.readline().split()))\nres = 0\nfor i in range(len(arr)):\n    res = max(res, arr[i] // k + (1 if arr[i] % k > 0 else 0))\nprint(res)\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"6 7\\n1 2 3 4 5 6\\n\") == \"7\"\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 7\\n1 2 3 4 5 6\") == \"7\"\n\"\"\"\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\n\ndp = [[0] * (k + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        dp[i][j] = dp[i - 1][j] + 1\n        if j - l[i - 1] >= 0 and dp[i - 1][j - l[i - 1]]!= 0:\n            dp[i][j] = min(dp[i][j], dp[i - 1][j - l[i - 1]] + 1)\n\nprint(dp[n][k])\n"
    },
    {
        "number": 162,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 6\\n2 3 5') == '2'\nassert solution('6 7\\n1 2 3 4 5 6') == '7'\n\"\"\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\nassert solution(\"6 2\\n..GT..\") == \"NO\"\nassert solution(\"7 2\\n....T\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 2\\n#G#T#') == 'YES'\nassert solution('6 1\\nT..G') == 'YES'\nassert solution('7 3\\nT..#..G') == 'NO'\n\"\"\"\n\nimport re\nfrom typing import List\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\n\"\"\""
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT..G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\nassert solution(\"6 2\\n..GT..\") == \"NO\"\nassert solution(\"7 4\\n..#..G\") == \"NO\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n.##.G\\n.#.#.\\n###.#\") == \"YES\"\nassert solution(\"6 2\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\nassert solution(\"5 2\\n.#G#T\") == \"YES\"\nassert solution(\"4 2\\n.T#.\\n.#G\") == \"YES\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\nassert solution(\"6 2\\n..GT..\") == \"NO\"\nprint(\"Passed all tests\")\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n#G#T#\") == \"YES\"\nassert solution(\"6 1\\nT....G\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\") == \"NO\"\nassert solution(\"6 2\\n..GT..\") == \"NO\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"6 1\") == \"YES\"\nassert solution(\"7 3\") == \"NO\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n#G#T#\\n\") == \"YES\"\nassert solution(\"6 1\\nT....G\\n\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\\n\") == \"NO\"\nassert solution(\"6 2\\n..GT..\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 163,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2 #G#T#\") == \"YES\"\nassert solution(\"6 1 #T..G\") == \"YES\"\nassert solution(\"7 3 #T..G\") == \"NO\"\nassert solution(\"6 2 #..GT\") == \"NO\"\n\n\"\"\"\n\nfrom itertools import product\n"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 10 13 10 3 1\") == '4.375'\nassert solution(\"1 4 6 2 2 1\") == '-1'\nassert solution(\"3 10 15 17 9 2\") == '11.3333333333'\n\n\"\"\"\n"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.375\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\n\"\"\""
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.3750000000\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"2 10 9 2 2 1\") == \"7.03333333333333\""
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(r'4 10 13 10 3 1') == r'4.3750000000'\nassert solution(r'1 4 6 2 2 1') == r'-1'\nassert solution(r'3 10 15 17 9 2') == r'11.3333333333'\n\"\"\""
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 10 13 10 3 1\") == '4.375'\nassert solution(\"1 4 6 2 2 1\") == '-1'\nassert solution(\"3 10 15 17 9 2\") == '11.3333333333'\n\"\"\"\nimport math"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.375\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.33333333\"\n"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.375\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\n"
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 10 13 10 3 1\") == '4.375'\nassert solution(\"1 4 6 2 2 1\") == '-1'\nassert solution(\"3 10 15 17 9 2\") == '11.3333333333'\n\"\"\""
    },
    {
        "number": 164,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.375\"\n\"\"\"\n\nfrom typing import Dict\nfrom math import sqrt\n\ncoordinates = [int(i) for i in stdin.split()]\nradius = coordinates.pop()\n\nfield_size = 100\ndist_to_goal = radius * 2\ndist_between_goalposts = field_size * sqrt(3) / 2\n\nhit_x_to_y = lambda x: field_size / 2 * sqrt(3) - dist_between_goalposts - x\n\ny_1 = min(coordinates[0], coordinates[1])\ny_2 = max(coordinates[0], coordinates[1])\ny_w = coordinates[2]\nx_b = coordinates[3]\ny_b = coordinates[4]\n\nx_w = hit_x_to_y(y_w - y_b)\n\nresult = 1 if x_b - x_w <= dist_to_goal else -1\n\nprint(format(result, '.8f'), end=\"\")\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1'\n\nassert solution('1 0 0') == '0'\n\nassert solution('1 1 1') == '0'\n\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == 1\nassert solution('1 0 0') == 0\nassert solution('1 1 1') == 0\nassert solution('1000000000000000000 0 1000000000000000000') == 9999999999999999999"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(1 0 0) == 0\nassert solution(1 1 1) == 0\nassert solution(1000000000000000000 0 1000000000000000000) == 9999999999999999999\n\n\"\"\""
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 2 1\"\n) == \"1\"\nassert solution(\n    \"1 0 0\"\n) == \"0\"\nassert solution(\n    \"1 1 1\"\n) == \"0\"\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1000000000000000000 0 1000000000000000000\") == \"999999999999999999\"\n"
    },
    {
        "number": 165,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1000000000000000000 0 1000000000000000000\") == \"999999999999999999\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1 2 3 6 9 8 5 2\") == 'YES\\n3 3'\nassert solution(\"6\\n1 2 1 2 5 3\") == 'NO'\nassert solution(\"2\\n1 10\") == 'YES\\n4 9'\n\n\"\"\""
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 2 3 6 9 8 5 2\\n\") == \"YES\\n3 3\"\nassert solution(\"6\\n1 2 1 2 5 3\\n\") == \"NO\\n\"\nassert solution(\"2\\n1 10\\n\") == \"YES\\n4 9\"\n\"\"\""
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 2 3 6 9 8 5 2\") == \"YES\\n3 3\"\nassert solution(\"6\\n1 2 1 2 5 3\") == \"NO\"\nassert solution(\"2\\n1 10\") == \"YES\\n4 9\"\n\"\"\""
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('8\\n1 2 3 6 9 8 5 2') == 'YES\\n3 3'\nassert solution('6\\n1 2 1 2 5 3') == 'NO'\n"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 5 6 9\\n\") == \"YES\\n3 3\"\nassert solution(\"6\\n1 2 1 2 5 3\\n\") == \"NO\"\nassert solution(\"2\\n1 10\\n\") == \"YES\\n4 9\"\n\"\"\"\nimport math"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4 5 6 7 8') == 'YES\\n3 3'\nassert solution('5\\n1 2 3 6 5 4\\n2 3 4 5 8 9\\n1 4 2 6 7 1\\n1 2 3 4 5 8\\n4 5 2 7 9 1') == 'YES\\n3 3'\nassert solution('6\\n1 2 1 2 5 3\\n2 3 4 5 8 9\\n1 4 2 6 7 1\\n1 2 3 4 5 8\\n4 5 2 7 9 1') == 'NO'\n\n\"\"\"\nimport sys\nfrom collections import Counter\n"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('8\\n1 2 3 6 9 8 5 2') == 'YES\\n3 3'\nassert solution('6\\n1 2 1 2 5 3') == 'NO'\nassert solution('2\\n1 10') == 'YES\\n4 9'\nassert solution('1\\n10') == 'YES\\n1 1'\n"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\") == \"YES\\n4 9\"\nassert solution(\"1 10\") == \"YES\\n4 9\"\nassert solution(\"1 20\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2\\n1 10') == 'YES\\n4 9'\n\nassert solution('6\\n1 2 1 2 5 3') == 'NO'\n\nassert solution('8\\n1 2 3 6 9 8 5 2') == 'YES\\n3 3'\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 166,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4') == 'YES\\n3 2'\nassert solution('3\\n1 2 3') == 'NO'\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"hi\") == \"-\", \"Longest subsequence should be the empty string\"\nassert solution(\"bob\") == \"\", \"Longest subsequence should be the empty string\"\nassert solution(\"abacaba\") == \"abacaba\", \"Longest subsequence should be abacaba\"\nassert solution(\"abcdcba\") == \"ac\", \"Longest subsequence should be ac\"\nassert solution(\"abacaba\") == \"ac\", \"Longest subsequence should be ac\"\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abcdefghijklm\") == \"abcdefg\"\nassert solution(\"abcdefghijklm\") == \"abcdefg\"\nassert solution(\"abcdefghijklm\") == \"abcdefg\"\nassert solution(\"abcdefghijklm\") == \"abcdefg\"\nassert solution(\"abcdefghijklm\") == \"abcdefg\"\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"hi\", \"bob\") == \"-\"\nassert solution(\"abca\", \"abcdcba\") == \"abcba\""
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(a) == b\n\n\"\"\""
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"hi\", \"bob\") == \"-\"\nassert solution(\"abca\", \"abcdcba\") == \"abcba\"\n\"\"\"\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('hi', 'bob') == '-'\nassert solution('abca', 'abcdcba') == 'abcba'\nassert solution('hi', 'hi') == '-'\nassert solution('abb', 'aab') == 'aab'\nassert solution('aab', 'abb') == 'aab'\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(a=\"hi\", b=\"bob\") == \"-\", \"No consecutive chars\"\nassert solution(a=\"abca\", b=\"abcdcba\") == \"abcba\"\nassert solution(a=\"abacaba\", b=\"abcdcba\") == \"abacaba\"\nassert solution(a=\"aaaaaaaaaa\", b=\"a\") == \"-\"\nassert solution(a=\"aaaaaaaaaa\", b=\"aaaaaaaaaaa\") == \"aaaaaaaaaaa\"\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('hi') == '-'\nassert solution('bob') == '-'\nassert solution('abca') == 'abcba'\nassert solution('abcdcba') == 'abccba'\n\nassert solution('a') == 'a'\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"hi\", \"bob\") == \"-\"\nassert solution(\"abacaba\", \"abcdcba\") == \"abcba\"\n\n\"\"\"\n"
    },
    {
        "number": 167,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('abcdcba') == 'abcba'\nassert solution('hi') == '-'\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 2\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == '0'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '3'\nassert solution(\"2\") == '1'\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4--\") == \"0\"\nassert solution(\"5+5+5+5\") == \"8\"\nassert solution(\"5+5+5+5\") == \"8\"\nassert solution(\"5-5-5-5\") == \"0\"\nassert solution(\"5+5+5+5\") == \"8\"\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"++-\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5') == '3'\n\"\"\"\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\n\"\"\""
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 2\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('---') == 0\nassert solution('+++') == 0\nassert solution('++++') == 0\nassert solution('--') == 1\nassert solution('++-') == 1\n"
    },
    {
        "number": 168,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''10\n11\n9\n8''') == '2'\nassert solution('''10\n5\n6\n1''') == '2'\nassert solution('''10\n5\n6\n1\n''') == '1'\nassert solution('''10\n5\n5\n5''') == '0'\n\n------end-------\n\n\n\n-----Output-----\n10\n5\n6\n1\n\n-----Note-----\n\nIn the first sample, Kolya can buy one glass bottle, then return it and buy one more glass bottle. Thus he will drink 2 liters of kefir.\n\nIn the second sample, Kolya can buy two plastic bottle and get two liters of kefir, or he can buy one liter glass bottle, then return it and buy one plastic bottle. In both cases he will drink two liters of kefir.\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10 11 9 8') == '2'\nassert solution('10 5 6 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 11 9 8\") == \"2\"\nassert solution(\"10 5 6 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 11 9 8\") == \"2\"\nassert solution(\"10 5 6 1\") == \"2\"\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5\\n6\\n1\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\nassert solution('10\\n5\\n9\\n1\\n') == '2'\nassert solution('10\\n11\\n9\\n8\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''10''') == 2\nassert solution('''11''') == 2\nassert solution('''9''') == 1\nassert solution('''8''') == 1\n\n'''\n3\n9 8\n5 7\n2 6\n3\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n3\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7\n9 7"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 11 9 8\") == \"2\"\nassert solution(\"10 5 6 1\") == \"2\"\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10\\n5\\n6\\n1\") == 2\nassert solution(\"10\\n8\\n9\\n7\") == 1\nassert solution(\"10\\n10\\n11\\n5\\n6\") == 2\n\n\"\"\"\nimport sys\n\nstdin = sys.stdin\n\nn = int(stdin.readline())\na, b, c = [int(i) for i in stdin.readline().strip().split()]\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10\\n11\\n9\\n8\\n\") == \"2\"\nassert solution(\"10\\n5\\n6\\n1\\n\") == \"2\"\nassert solution(\"10\\n5\\n5\\n1\\n\") == \"1\"\nassert solution(\"10\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"10\\n1\\n1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 3\\n2 4 2\") == \"6 2\"\n\"\"\"\n"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2\\n') == '6 2'\nassert solution('3\\n1 2\\n2 1 3\\n') == '-1'\n\"\"\"\nfrom collections import deque\n\nn = int(input())\n\ndeck_1 = deque(map(int, input().split()))\ndeck_2 = deque(map(int, input().split()))\n\nwar_count = 0\nwhile len(deck_1) > 0 and len(deck_2) > 0:\n    war_count += 1\n    card_1 = deck_1.popleft()\n    card_2 = deck_2.popleft()\n    if card_1 > card_2:\n        deck_1.append(card_1)\n        deck_1.append(card_2)\n    elif card_1 < card_2:\n        deck_2.append(card_2)\n        deck_2.append(card_1)\n    else:\n        raise ValueError('This should not happen')"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('4\\n1 2 3\\n2 4 2') == '-1'\n\"\"\""
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 3\\n2 4 2\") == \"6 2\"\nassert solution(\"3\\n1 2\\n2 1 3\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 3\\n2 4 2\") == \"6 2\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\n\ncards = sys.stdin.readline().split()\n\nm = int(sys.stdin.readline())\n\nnumbers = sys.stdin.readline().split()\n\ncnt = 0\n\nfor i in range(m):\n    for j in range(m):\n        if int(cards[i]) < int(cards[j]):\n            cnt += 1"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('3\\n1 2\\n2 1 3') == '-1'\n\n\"\"\""
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\n\"\"\"\n"
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 3\") == \"6 2\"\nassert solution(\"1 2 3 4\") == \"1\"\n\"\"\""
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 3\") == \"6 2\"\nassert solution(\"3 2 1 2\") == \"-1\"\n\"\"\""
    },
    {
        "number": 170,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == \"6 2\"\nassert solution('3\\n1 2\\n2 1 3') == \"-1\"\n\"\"\"\n\nn = int(stdin.readline())\nk1 = list(map(int, stdin.readline().split()))\nk2 = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\n\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\nassert solution(\"a1b2c3\") == \"Too weak\"\nassert solution(\"a1b2c3d4e\") == \"Correct\"\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('qwe!@#!3') == 'Too weak'\nassert solution('qwe123!@#!3') == 'Correct'\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('X12345') == 'Correct'\nassert solution('X,.-') == 'Too weak'\nassert solution('X,._') == 'Too weak'\nassert solution('X,._1') == 'Correct'\nassert solution('abacaba') == 'Correct'\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\nassert solution(\"aA!123\") == \"Too weak\"\nassert solution(\"A!123\") == \"Correct\"\n\"\"\""
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\nassert solution(\"A1A2A3A4A5\") == \"Correct\"\nassert solution(\"\") == \"Too weak\"\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\n\n\"\"\"\n\nimport re"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"Correct\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\n\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Correct'\nassert solution('Gg!vc_Fz#d') == 'Correct'\nassert solution('!1') == 'Too weak'\n"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 1 1 1 1 1\\n5 5 5 5 5 5\") == \"3\"\nassert solution(\"4\\n5 4 4 4\\n5 5 4 5\") == \"1\"\nassert solution(\"1\\n5\\n3\") == \"-1\"\nassert solution(\"9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1\") == \"4\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na_sum = sum(a)\nb_sum = sum(b)"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 5 4 5\\n3 2 4 1\") == \"3\"\nassert solution(\"1\\n5\\n3\\n\") == \"-1\"\nassert solution(\"4\\n4 4 4 4\\n5 5 5 5 5\") == \"1\"\nassert solution(\"1\\n5\\n3\") == \"0\"\n\n\"\"\"\n\nimport collections"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 4 4 4') == '1'\nassert solution('5 5 4 5') == '3'\nassert solution('6 1 1 1 1 1 1') == '-1'\nassert solution('9 3 2 5 5 2 3 3 2') == '4'"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5 4 4 4\\n5 5 4 5\") == \"1\"\nassert solution(\"6\\n1 1 1 1 1 1\\n5 5 5 5 5 5\") == \"3\"\nassert solution(\"1\\n5\\n3\") == \"-\"\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str):\n        a = list(map(int, stdin.split('\\n')[0].split(' ')))\n        b = list(map(int, stdin.split('\\n')[1].split(' ')))\n        exchanges = 0\n        sums = [0] * 6\n        for i in range(len(a)):\n            sums[a[i]] += 1\n            sums[b[i]] += 1\n        for i in range(6):\n            if sums[i] % 2!= 0:\n                exchanges += 1\n        return exchanges"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n5 4 4 4\\n5 5 4 5\") == '1'\n\nassert solution(\"6\\n1 1 1 1 1 1\\n5 5 5 5 5 5\") == '3'\n\nassert solution(\"1\\n5\\n3\") == '-1'\n\nassert solution(\"9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1\") == '4'\n"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n5 4 4 4\\n5 5 4 5') == '1'\nassert solution('6\\n1 1 1 1 1 1\\n5 5 5 5 5 5') == '3'\nassert solution('1\\n5\\n3') == '-1'\nassert solution('9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1') == '4'\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n\"\"\"\n"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n5 4 4 4\\n5 5 4 5') == '1'\nassert solution('6\\n1 1 1 1 1 1\\n5 5 5 5 5 5') == '3'\nassert solution('1\\n5\\n3') == '-1'\nassert solution('9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1') == '4'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(4) == 1\nassert solution(6) == 3\nassert solution(9) == 4"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4 4\") == \"1\"\nassert solution(\"5 5 4 5\") == \"1\"\nassert solution(\"5 5 5 5 5\") == \"-1\"\nassert solution(\"1 1 1 1 1 1\") == \"1\"\nassert solution(\"5 5 5 5 5 5\") == \"-1\"\n"
    },
    {
        "number": 172,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4 4\") == \"1\"\nassert solution(\"5 5 4 5\") == \"3\"\nassert solution(\"1 1 1 1 1 1\") == \"0\"\nassert solution(\"5 5 4 5\") == \"1\"\nassert solution(\"1 1 1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\">><>><>>\") == \"NO\"\nassert solution(\">><<><>>\") == \"NO\"\nassert solution(\">>><<<>>><<<<<\") == \"YES\"\nassert solution(\"<><>><<<<><><><\") == \"NO\"\nassert solution(\"<><<><><><><><><\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"><><v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3 <><>\") == 'YES'\nassert solution(\"4 6 <><> v^v\") == 'YES'\nassert solution(\"4 6 <><> v^v^v^\") == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 2 <><>') == 'NO'\nassert solution('4 6 <><> v^v^v^') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n><>\\nvvv\") == \"NO\"\n\"\"\""
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('><>') == 'NO'\nassert solution('v^v') == 'YES'\n\n\"\"\""
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\">><v\") == \"NO\"\nassert solution(\">><v^v\") == \"YES\"\nassert solution(\">><v^v^v^\") == \"NO\"\nassert solution(\">><v^v^v^v^v^v^v^v^v^\") == \"NO\"\nassert solution(\">><v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\">><\") == \"NO\"\nassert solution(\"vvvv^v\") == \"YES\"\nassert solution(\"^v^^v^v^v^v\") == \"YES\"\nassert solution(\"^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^"
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\">><\") == \"NO\"\nassert solution(\"^v^v\") == \"YES\"\n\"\"\""
    },
    {
        "number": 173,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('<><>') == 'NO'\nassert solution('v^v') == 'YES'\nassert solution('><><><><><>') == 'NO'\n\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 0\") == \"YES\\n0\"\n"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"1\\n0\") == \"YES\\n0\""
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"2 1 1 0\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n0\"\nassert solution(\"1 0\") == \"YES\\n0\"\nassert solution(\"0 1\") == \"NO\""
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\n\n\"\"\"\n\nfrom typing import Dict, List, Tuple, Set, Union\nimport collections"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\\n1\"\nassert solution(\"1\\n0\") == \"YES\\n0\"\nassert solution(\"1\\n0\") == \"YES\\n0\"\n\nprint(\"Well done!\")\n"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\n\nassert solution(\"2 1 1 0\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n0\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 0\") == \"YES\\n1\"\n"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"2 1 1\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 0\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\""
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\\n(((0)->1)->(1->0))\"\nassert solution(\"2\\n1 1\") == \"NO\"\n\nassert solution(\"1\\n1\") == \"YES\\n1\"\nassert solution(\"1\\n0\") == \"YES\\n0\"\nassert solution(\"1\\n0\\n1\") == \"YES\\n(((0)->1)->1)\"\n"
    },
    {
        "number": 174,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 0\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 0\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''12 5''') == '0 1'\nassert solution('''31 12''') == '7 12'\n\"\"\"\nimport math\n\na, b = map(int, input().split())"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nprint('all tests passed')\n\"\"\"\n\nimport math"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n\"\"\"\n\na, b = map(int, input().split())\n\nwhile a!= 0 and b!= 0:\n    a, b = a % (2 * b), b % (2 * a)\n\nprint(a, b)"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"12 5\\n\") == \"0 1\"\nassert solution(\"31 12\\n\") == \"7 12\"\n\"\"\"\n\nimport sys\n\n\"\"\"\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\na - 2 b\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nprint('All tests passed.')\n\n\"\"\"\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\n\"\"\"\n\nn, m = map(int, input().split())\n\na = 0\nb = 0\n\nwhile n!= 0 and m!= 0:\n    if n >= 2*m:\n        a += n - 2*m\n        n = 2*m\n    else:\n        b += m - 2*n\n        m = 2*n\n\nprint(a, b)\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\n\"\"\"\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(str(12) +'' + str(5)) == '0 1'\nassert solution(str(31) +'' + str(12)) == '7 12'\nassert solution(' '.join(input().split())) ==''.join(solution(input()).split())\n"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'"
    },
    {
        "number": 175,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"12 5\\n\") == \"0 1\"\nassert solution(\"31 12\\n\") == \"7 12\"\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\n\n'''\n\na, b, k = [int(x) for x in stdin.split()]\n\ncount = 0\nfor i in range(a, b + 1):\n    if i % k == 0:\n        count += 1\n\nprint(count)\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"2 -4 4\") == \"5\"\nassert solution(\"1 1 1000000000\") == \"10000000\"\n\"\"\""
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 1 10') == '10'\n\"\"\"\n\n\"\"\"\n1 2 5\n2 3 10\n3 4 15\n4 5 25\n5 6 35\n6 7 55\n7 8 70\n8 9 90\n9 10 100\n10 11 110\n11 12 125\n12 13 135\n13 14 155\n14 15 175\n15 16 190\n16 17 200\n17 18 210\n18 19 230\n19 20 260\n20 21 300\n21 22 330\n22 23 390\n23 24 410\n24 25 450\n\"\"\"\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''1 1 10''') == 10\nassert solution('''2 -4 4''') == 5\nassert solution('''1 1 10''') == 10\nassert solution('''2 -4 4''') == 5\nassert solution('''3 -4 4''') == 2\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 1 10\\n') == '10'\n\"\"\""
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\nassert solution('1 1 1') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1 10\") == \"10\"\n\n\"\"\""
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 1 10\") == \"10\"\n"
    },
    {
        "number": 176,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n\"1 1 10\"\n) == \"10\"\nassert solution(\n\"2 -4 4\"\n) == \"5\"\n\"\"\""
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('22') == '4'\nassert solution('23') == '3'\nassert solution('24') == '2'\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''7''') == '7'\nassert solution('''') == '0'\nassert solution('''\\n''') == '0'\nassert solution('''\\n''\\n''') == '0'\n\n\"\"\"\n\n\n\nk = int(stdin.readline())\ni = 0\nresult = 0\nwhile i < 9:\n    i += 1\n    result += int(str(k)[i - 1])\n    if i >= k:\n        break\n\nprint(result % 10)\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\n\"\"\""
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"123456789101112131415161718192021222324252627282930313233343536\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7\") == '7'\nassert solution(\"21\") == '5'\n\n\n----\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\n\nprint(solution(\"7\"))\nprint(solution(\"21\"))\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\nassert solution(\"28\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"12\") == 2"
    },
    {
        "number": 177,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"123456789101112131415161718192021222324252627282930313233343536\") == '7'\n\n\"\"\""
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"YES\"\nassert solution(\"15\") == \"NO\"\n\nassert solution(\"8380011223344\") == \"YES\"\nassert solution(\"807345619350641\") == \"NO\"\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8380011223344\") == \"YES\"\nassert solution(\"807345619350641\") == \"NO\"\n\"\"\""
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('13','8380011223344') == \"YES\"\nassert solution('15', '807345619350641') == \"NO\"\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('13\\n8380011223344') == 'YES'\nassert solution('15\\n807345619350641') == 'NO'\n\n\"\"\""
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('383800111223344') == \"YES\"\nassert solution('8073456193506419') == \"NO\"\n\"\"\""
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('8380013223344') == 'YES'\nassert solution('8380011223344') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"83800111223344\") == \"YES\"\nassert solution(\"807345619350641\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('13\\n8380011223344') == 'YES'\nassert solution('15\\n807345619350641') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\n\"\"\"\n\nn = int(stdin.readline().strip())\ns = stdin.readline().strip()\n"
    },
    {
        "number": 178,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('8380111223344') == 'YES'\nassert solution('80734561935064') == 'NO'\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\") == \"8\"\nassert solution(\"123 4 2\") == \"824071958\"\n\n'''\n\nimport itertools\n\nimport sys\n\nn, x, pos = [int(i) for i in input().split()]\na = list(range(1, n+1))\nx_in_perm = [i for i, v in enumerate(list(itertools.permutations(a))) if v[pos] == x]\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\""
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\nassert solution(\"2 4 1 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"3 1 2 4\") == \"2\"\nassert solution(\"3 1 4 2\") == \"1\"\nassert solution(\"4 1 2 3\") == \"3\"\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n    [4, 1, 2]\n) == 6\n\"\"\"\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\n\"\"\""
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\nassert solution(\"3 4 1\") == \"6\"\n\"\"\"\nfrom itertools import permutations\n"
    },
    {
        "number": 179,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 1 2') == '824071958'\nassert solution('123 42 24') == '824071958'\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ababb\") == \"ababb\"\nassert solution(\"ab?a\") == \"Impossible\"\nassert solution(\"ab?a\") == \"Impossible\"\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ababb\") == \"ababb\"\nassert solution(\"ab?a\") == \"Impossible\"\n\"\"\"\n\n\nfrom collections import Counter\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ababb\") == \"ababb\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\n    \"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\n    \"ab?a\") == \"aa\"\nassert solution(\n    \"ab?a\") == \"aba\"\nassert solution(\n    \"ababb\") == \"ababb\"\nassert solution(\n    \"ab?a\") == \"Impossible\"\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"abab\") == \"Impossible\"\n\nprint(solution(\"ab?a\"))\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"Impossible\"\nassert solution(\"ab?a\") == \"Impossible\"\n\n\"\"\"\n\nimport unittest\n\nfrom utils import *\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\nassert solution(\"ab?a\") == \"aba\"\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"h*w?a*yn?e*w?r\") == \"happynewyear\"\nassert solution(\"*?e*?e?*?e*?e*?e\") == \"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('hw*ap?yn?eww?ye*ar') == 'happynewyear'\n\"\"\"\n"
    },
    {
        "number": 180,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n    'hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution(\n    'ab?a') == 'aa'\nassert solution(\n    'ab?a') == 'aba'\nassert solution(\n    'ababb') == 'ababb'\nassert solution(\n    'ab?a') == 'Impossible'\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"60\") == \"3\"\nassert solution(\"-60\") == \"3\"\nassert solution(\"100\") == \"1\"\nassert solution(\"-100\") == \"1\"\nassert solution(\"110\") == \"2\"\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"-60\") == \"3\"\nassert solution(\"60\") == \"1\"\nassert solution(\"-1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('60') == '3'\nassert solution('-60') == '3'\nassert solution('0') == '0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('60') == '3'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"60\") == \"1\"\nassert solution(\"-60\") == \"3\"\nprint('Hooray!')\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"60\") == \"3\"\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('-60') == '3'\nassert solution('60') == '1'\n"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('60') == '3'\nassert solution('-60') == '3'\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('-60') == 3\nassert solution('60') == 1\n\"\"\"\n\nx = int(stdin.readline().rstrip())"
    },
    {
        "number": 181,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('60') == '3'\nassert solution('-60') == '3'\nassert solution('-10') == '0'\n\nprint(solution(input().strip()))\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 6 1\") == \"Yes\"\nassert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 4 0\\n2 1 2') == 'Yes'\nassert solution('5 6 1\\n2 7 2') == 'No'\nassert solution('3 3 3\\n2 2 2') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 4 0\\n2 1 2') == 'Yes'\nassert solution('5 6 1\\n2 7 2') == 'No'\nassert solution('3 3 3\\n2 2 2') == 'Yes'\nassert solution('10 10 10\\n2 2 2') == 'No'\nassert solution('1 0 1\\n1 0 1') == 'No'\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('2 1 2') == 'Yes'\nassert solution('5 6 1') == 'No'\n\"\"\"\n\na, b, c = input().split()\na = int(a)\nb = int(b)\nc = int(c)\nx, y, z = input().split()\nx = int(x)\ny = int(y)\nz = int(z)"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\""
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n\n'''\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 4 0\\n2 1 2\\n') == 'Yes'\nassert solution('5 6 1\\n2 7 2\\n') == 'No'\nassert solution('3 3 3\\n2 2 2\\n') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n\"\"\"\nfrom typing import Tuple, List\n\nDEBUG = False\n"
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('2 1 2') == 'No'\n\"\"\""
    },
    {
        "number": 182,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n\n\"\"\"\n\na, b, c = list(map(int, input().split()))\n\nx, y, z = list(map(int, input().split()))\n\ntotal = a + b + c"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\n\n\"\"\""
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1103\") == \"590\"\nassert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\nassert solution(\"5 3 1103\") == \"590\"\n"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '32'\nassert solution('1 2 1 2') == '0'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6') == '10'\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1000\") == 4\n\"\"\"\n"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\n"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1103\") == \"590\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\n"
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\n\"\"\""
    },
    {
        "number": 183,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 2 1000') == 4\nassert solution('2 2 1000') == 45\nassert solution('5 3 1103') == 590\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 5 3\") == \"5\"\nassert solution(\"1 4 2\") == \"6\"\nassert solution(\"0 2 0\") == \"0\"\nassert solution(\"10 10 10\") == \"14\"\nassert solution(\"5 5 5\") == \"14\"\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 5 5\") == 14\nassert solution(\"0 2 0\") == 0\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 4 2\") == 6\nassert solution(\"5 5 5\") == 14\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nprint('Test passed')\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\n\"\"\"\n\nfrom math import ceil, floor"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 4 2\") == 6\nassert solution(\"5 5 5\") == 14\n\"\"\"\n"
    },
    {
        "number": 184,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\n\"\"\""
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"4 1\") == \"10\"\nassert solution(\"2 2\") == \"6\"\n\n\"\"\"\n\nn, k = map(int, input().split())\n\ncoins = 0\n\nwhile n > 0 and k > 0:\n    if n % 2 == 0 and k % 2 == 0:\n        coins += n * 2 + n - k\n        n = n - k\n        k = 0\n    elif n % 2!= 0 and k % 2 == 0:\n        coins += n + n - k + 1\n        n = n - k\n        k = 0\n    elif n % 2 == 0 and k % 2!= 0:\n        coins += n + n - k + 1\n        n = n - k\n        k = 0\n    elif n % 2!= 0 and k % 2!= 0:\n        coins += n + n - k + 1\n        n = n - k\n        k = 0\n\nprint(coins)\n"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\n\"\"\"\nimport sys\nfrom itertools import permutations\n"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n\"\"\""
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n\n\"\"\"\n\nn, k = map(int, stdin.readline().strip().split(' '))\n\ncount = 0\nfor i in range(1, n + 1):\n    if i!= k:\n        count += 1\n    if i > k:\n        count += i\n        break\n\nfor i in range(1, n):\n    if i == k:\n        count += i\n    if i < k:\n        count += i\nprint(count)"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"13\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"5 1\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(str(TEST_CASE['input'])) == TEST_CASE['output']\nprint('Success!')\n\n\n\"\"\"\n\n\nimport sys\nimport math\nimport operator"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\"\"\"\n\n\"\"\"\nhttps://codeforces.com/contest/1340/problem/A\n\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == 6\n"
    },
    {
        "number": 185,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\"\"\""
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"8\"\nassert solution(\"1 2\") == \"4\"\n\"\"\""
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 3\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3') == '9'\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 0\") == \"10\"\nassert solution(\"3 2\") == \"8\"\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 3\\n') == '9'\nassert solution('3 2\\n') == '8'\nassert solution('5 0\\n') == '10'\nprint('Success')\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\""
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\n\"\"\"\n\nn, m = map(int, input().split())"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == '9'\nassert solution(\"3 2\") == '8'\nassert solution(\"5 0\") == '10'\n\nprint('Success')\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11') == 'YES\\n11 27'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3') == 'NO'\n\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\\n6\\n6\\n\") == 'NO'\nassert solution(\"4\\n27\\n27\\n11\\n\") == 'YES\\n11 27'\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == 'NO'"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''4\n11\n27\n27\n11''') == 'YES\\n11 27'\nassert solution('''2\n6\n6''') == 'NO'\nassert solution('''6\n10\n20\n30\n20\n10\n20''') == 'NO'\nassert solution('''6\n1\n1\n2\n2\n3\n3''') == 'NO'\n\nassert solution('''6\n1\n1\n2\n2\n3\n3''') == 'YES\\n1 1'\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'YES\\n11 27\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\") == 'YES\\n11 20'\n\nassert solution(\"1\\n1\") == 'NO'\nassert solution(\"1\\n2\") == 'NO'\nassert solution(\"2\\n2\") == 'YES\\n1 1'\nassert solution(\"4\\n2\\n3\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11') == \"YES\\n11 27\"\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3') == \"NO\"\nassert solution('6\\n6\\n6\\n6\\n6\\n6') == \"NO\"\nassert solution('6\\n10\\n20\\n30\\n20\\n10') == \"NO\"\nassert solution('6\\n20\\n30\\n20\\n20\\n20') == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'YES\\n11 27'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n6\\n6\\n6\\n6\\n6\\n') == 'NO\\n'\nassert solution('2\\n6\\n6\\n') == 'NO\\n'\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\") == \"YES\\n11 27\"\nassert solution(\"2\\n6\\n6\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\") == \"NO\""
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\") == \"YES\\n11 27\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\nassert solution(\"4\\n11\\n27\\n27\\n11\") == \"YES\\n11 27\"\n"
    },
    {
        "number": 187,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"YES\\n11 27\"\nassert solution(\"2\\n6\\n6\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\n\"\"\"\n\nfrom collections import Counter\n\nn = int(input())\nl = []\nfor _ in range(n):\n    l.append(int(input()))\n\nn_petya = Counter(l).most_common(1)[0][0]\n\nl = [item for item in l if item!= n_petya]\nl_vsya = Counter(l).most_common(1)[0][0]"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n5 8\\n\") == \"YES\"\nassert solution(\"1 2\\n7 1\\n\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\\n\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2 1 2\\n\") == \"YES\"\nassert solution(\"1 2\\n7 1\\n\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\\n\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 2\\n\") == \"YES\"\nassert solution(\"1 4\\n4 2 1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n5 8\\n\") == \"YES\"\nassert solution(\"1 2\\n7 1\\n\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\\n\") == \"YES\"\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n5 8\") == \"YES\"\nassert solution(\"1 2\\n7 1\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\") == \"YES\"\nassert solution(\"1 4\\n1 2\") == \"YES\"\n\"\"\"\n\na = list(map(int, stdin.split('\\n')[0].split()))\nb = list(map(int, stdin.split('\\n')[1].split()))\ncount = 0\nfor i in b:\n    if i % 8 == 0:\n        count += 1\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(2, 2, [5, 8]) == \"YES\"\nassert solution(1, 2, [7, 1]) == \"NO\"\nassert solution(1, 4, [2, 2, 1, 2]) == \"YES\"\nassert solution(1, 4, [2, 2, 1, 2, 3]) == \"NO\"\nassert solution(2, 4, [2, 2, 1, 2, 3]) == \"YES\"\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n5 8\") == \"YES\"\nassert solution(\"1 2\\n7 1\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 4\") == \"NO\"\n\n\"\"\"\n\nfrom collections import Counter\nimport sys"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\n\"\"\"\n\nSome of the answer to this question is found in the josephus problem.\n\nDaenerys Targaryen has an army consisting of k groups of soldiers, the i-th group contains a_{i} soldiers. She wants to bring her army to the other side of the sea to get the Iron Throne. She has recently bought an airplane to carry her army through the sea. The airplane has n rows, each of them has 8 seats. We call two seats neighbor, if they are in the same row and in seats {1, 2}, {3, 4}, {4, 5}, {5, 6} or {7, 8}.\n\nYour task is to determine if there is a possible arranging of her army in the airplane such that the condition above is satisfied.\n\nYour task is to determine if there is a possible arranging of Daenerys Targaryen's army in the airplane such that the condition above is satisfied.\n\n-----Input-----\n\nThe first line contains two integers n and k (1 \u2264 n \u2264 10000, 1 \u2264 k \u2264 100) \u2014 the number of rows and the number of groups of soldiers, respectively.\n\nThe second line contains k integers a_1, a_2, a_3,..., a_{k} (1 \u2264 a_{i} \u2264 10000), where a_{i} denotes the number of soldiers in the i-th group.\n\nIt is guaranteed that a_1 + a_2 +... + a_{k} \u2264 8\u00b7n.\n\n-----Output-----\n\nIf we can place the soldiers in the airplane print \"YES\" (without quotes), and if we cannot place her army in the plane print \"NO\" (without quotes).\n\nYou can choose the case (lower or upper) for each letter arbitrary.\n\n\"\"\""
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 2\\n5 8') == 'YES'\nassert solution('1 2\\n7 1') == 'NO'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 4\\n2 3 2 1') == 'YES'\nassert solution('1 4\\n2 2 1 2') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n5 8\") == \"YES\"\nassert solution(\"1 2\\n7 1\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 4\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 6\") == \"NO\"\n"
    },
    {
        "number": 188,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n5 8\") == \"YES\"\nassert solution(\"1 2\\n7 1\") == \"NO\"\nassert solution(\"1 4\\n2 2 1 2\") == \"YES\"\n\n\"\"\"\n\nn, k = [int(i) for i in stdin.readline().split()]\narr = [int(i) for i in stdin.readline().split()]\narr.sort()\nr = n - k\ni = 0\nwhile i < len(arr) - 1 and arr[i] + 1!= arr[i + 1]:\n    i += 1\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 2 2 3\\n\") == '2\\n0'\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n10 1 4\\n') == '3\\n7'\nassert solution('5\\n1 1 2 2 3\\n') == '2\\n0'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 2 2 3\") == \"2 0\"\nassert solution(\"3\\n1 1 4\") == \"3 7\"\nassert solution(\"7\\n1 1 2 2 3 3 4\") == \"2 0\"\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(test_input) == expected_result\nprint(solution(test_input))\n\n=====\n[SOLUTION]\n=====\n\nprint(f'{(test_input[1] + test_input[2] + test_input[3]) // 2}')\n\n>>>>>>> 5ddacd6dd611b8b4fc843c2b76fdfd8d50b0c40d"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1 4\") == \"3 7\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2 0\"\nassert solution(\"3\\n10 1 4\") == \"3 7\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2 1\") == \"2 1\"\nassert solution(\"5 2 3 9 4 5\") == \"5 1\"\nassert solution(\"10 9 8 7 6 5 4 3 2 1\") == \"5 1\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 2 2 3') == '3 7'\nassert solution('5\\n1 1 2 2 3') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 1 4\") == \"3 7\"\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1 4\") == \"3 7\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2 0\"\n\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10 1 4\") == \"3 7\"\nassert solution(\"1 1 2 2 3\") == \"2 0\"\n\"\"\"\n\nfrom typing import List\nimport sys\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        # get number of sticks\n        n = int(stdin.split()[0])\n\n        # get sticks length\n        sticks = [int(i) for i in stdin.split()[1:]]\n\n        # sort sticks in reverse order\n        sticks.sort(reverse = True)\n\n        # Initialize minimum cost\n        minimum = sys.maxsize\n\n        for i in range(1, n):\n            # Calculate minimum cost by modifying sticks[0]\n            if (abs(sticks[0] - i) <= 1):\n                minimum = min(minimum, abs(sticks[0] - i))\n            # Calculate minimum cost by modifying sticks[1]\n            if (i <= abs(sticks[1] - sticks[0]) + 1):\n                minimum = min(minimum, abs(sticks[1] - sticks[0]) + i)\n\n        # return the result\n        return str(minimum)"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n....\\n..*\\n...*\\n..**\") == \"3\"\n\nassert solution(\"1 3\\n.\\n*\\n\") == \"1\"\n\nassert solution(\"2 1\\n.\\n*\") == \"1\"\n\nassert solution(\"5 4\\n....\\n..*.\\n...*\\n..**\\n.....\") == \"2\"\n\nassert solution(\"5 5\\n....\\n...*\\n.*..\\n.*.*\\n.*.*\") == \"5\""
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 4\\n....\\n..*.\\n...*\\n..**') == 3\nassert solution('1 3\\n.\\n*') == 1\nassert solution('2 1\\n.\\n*') == 1\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\".*..*\") == 3\nassert solution(\"**.*\") == 3\nassert solution(\"**.*\") == 3\nassert solution(\"****\") == 1\nassert solution(\"*.*.*\") == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 4\n....\n..*.\n...*\n..**\") == 3\nassert solution(\"1 3\n*.*\n\") == 1\nassert solution(\"2 1\n.\n*\n\") == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n....\\n..*.\\n...*\\n..**\") == 3\n\n---\n\u0414\u043b\u044f \u0447\u0438\u0441\u043b\u0430 n \u0438 m \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0439\u0442\u0435 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043b\u0438\u043f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b \u043d\u0430 \u043a\u0430\u0440\u0442\u0435 \u0437\u0432\u0451\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430.\n\"\"\""
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n\n\nassert solution(\"4 3\") == \"3\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 4\n....\n..*.\n...*\n..**\") == \"3\"\nassert solution(\"1 3\n*.*\n\") == \"1\"\nassert solution(\"2 1\n.\n*\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 1\\n.\\n*') == '1'\nassert solution('3 2\\n***\\n.\\n**\\n.\\n***\\n.\\n*') == '3'\nassert solution('4 4\\n....\\n..*.\\n...*\\n..**\\n') == '3'\nassert solution('1 3\\n.*\\n') == '3'\nassert solution('2 1\\n.\\n*') == '1'\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''4 4\n....\n..*.\n...*\n..**''') == '3'\nassert solution('''1 3\n*.*\n\n''') == '1'\nassert solution('''2 1\n.\n*\n\n''') == '1'\nassert solution('''2 2\n.\n*\n\n''') == '2'\nassert solution('''1 1\n*\n\n''') == '1'\n"
    },
    {
        "number": 190,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n....\\n..*.\\n...*\\n..**\") == \"3\"\nassert solution(\"1 3\\n*.\\n\") == \"1\"\nassert solution(\"2 1\\n.\\n*\") == \"1\"\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2\\n0 1 0') == '333333336'\nassert solution('5 1\\n1 1 1 0 0') == '0'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\n\"\"\"\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1 0\\n0 1 0\") == \"16666666\"\nassert solution(\"3 2\\n0 1 0\") == \"33333333\"\nassert solution(\"3 2\\n1 0 1\") == \"33333333\"\nassert solution(\"3 2\\n0 0 1\") == \"33333333\"\nassert solution(\"3 2\\n0 1 0\") == \"33333333\"\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"10 5\") == \"34\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"6 4\") == \"968493834\"\n\"\"\""
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 1 0\") == '333333336'\nassert solution(\"5 1\\n1 1 1 0 0\") == '0'\nassert solution(\"6 4\\n1 0 0 1 1 0\") == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''3 2\n0 1 0''') == '333333336'\nassert solution('''5 1\n1 1 1 0 0''') == '0'\nassert solution('''6 4\n1 0 0 1 1 0''') == '968493834'\n\"\"\"\n\na = [int(c) for c in stdin.split(\"\\n\")[0].split()]\nn = len(a)\nk = int(stdin.split(\"\\n\")[1])\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 2\\n0 1 0') == '333333336'\nassert solution('5 1\\n1 1 1 0 0') == '0'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 2\\n0 1 0') == '333333336'\nassert solution('5 1\\n1 1 1 0 0') == '0'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1 0\") == '333333336'\nassert solution(\"5 1\\n1 1 1 0 0\") == '0'\nassert solution(\"6 4\\n1 0 0 1 1 0\") == '968493834'\n\n\n\"\"\"\nimport sys\nfrom typing import Tuple, List\n\nsys.setrecursionlimit(10 ** 9)\n"
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1 0\") == \"333333336\"\nassert solution(\"5 1\\n1 1 1 0 0\") == \"0\"\nassert solution(\"6 4\\n1 0 0 1 1 0\") == \"968493834\""
    },
    {
        "number": 191,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 0 0\") == \"333333336\"\nassert solution(\"0 1 0 1 1 0\") == \"0\"\nassert solution(\"1 0 0 1 1 0\") == \"968493834\"\n\"\"\"\nimport collections\nimport itertools\nfrom typing import List\n\nimport pytest\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\n\"\"\"\n\nimport sys\nfrom collections import Counter\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == 4\nassert solution(\"8 5\") == 3\nassert solution(\"22 4\") == 6\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('8 2') == '3'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\n\n\"\"\"\nimport sys\nimport math\nimport time\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n\n\"\"\"\n\nimport math\n\nx, y = map(int, input().split())\n\na = int(math.sqrt(y*y - (x/3)**2))\n\nprint(a)"
    },
    {
        "number": 192,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\n\nprint(\"Successfully passed all test cases!\")\n"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == '0.2000000000'\nassert solution('1 0\\n0 1') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0.5000000000'\nassert solution('1 0') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == 0.8\nassert solution(\"1 1\") == 0.0\nassert solution(\"5 5\") == 1.0\n"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == '0.2000000000'\nassert solution('1 0\\n0 1') == '0.5000000000'"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0.2000000000\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''1 2\n3 4''') == '0.2000000000'\nassert solution('''1 0\n0 1''') == '0.5000000000'\n\n\"\"\"\nimport numpy as np"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 3\\n3 4') == 0.2000000000\nassert solution('2 0\\n0 1') == 0.5000000000\n"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3 4\") == \"0.2000000000\"\n\"\"\"\n"
    },
    {
        "number": 193,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(stdin) == answer, f\"expected: {answer}, got: {solution(stdin)}\"\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 1 2\\n1 2 1 1') == '2'\nassert solution('4 1 1\\n1 1 2 1') == '2'\nassert solution('4 1 1\\n1 1 1 1') == '2'\nassert solution('4 2 1\\n1 1 1 1') == '0'\nassert solution('4 1 1\\n1 1 1 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 2 1\") == \"2\"\nassert solution(\"1 2 2\") == \"1\"\n"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 1 2\\n1 2 1 1') == '0'\nassert solution('4 1 1\\n1 1 2 1') == '2'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1 1\") == \"2\"\nassert solution(\"4 1 2\") == \"0\"\nassert solution(\"5 1 1\") == \"3\"\nassert solution(\"5 2 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\nassert solution(\"4 1 1\\n2 1 2 1\") == \"0\"\nassert solution(\"4 1 1\\n2 2 2 1\") == \"0\"\nassert solution(\"4 1 1\\n2 2 1 1\") == \"0\"\n"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == '0'\nassert solution(\"4 1 1\") == '2'\n\"\"\""
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\n\"\"\"\nimport sys\nfrom collections import deque"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\nassert solution(\"4 1 1\\n2 1 1\") == \"2\"\n\n\"\"\"\n\nfrom collections import deque\nfrom typing import Deque\n\nn, a, b = map(int, input().split())\ngroups = deque(map(int, input().split()))\n\none_seaters = 0\ntwo_seaters = 0\none_or_two_seaters: Deque[int] = deque()\n\nfor group in groups:\n    if group == 1:\n        one_seaters += 1\n    elif group == 2:\n        two_seaters += 1\n        one_or_two_seaters.append(1)\n    else:\n        one_or_two_seaters.append(2)\n\nwhile one_seaters > 0 and two_seaters > 0:\n    if one_or_two_seaters.popleft() == 1:\n        one_seaters -= 1\n    else:\n        two_seaters -= 1\n        one_or_two_seaters.popleft()\n\nprint(n - one_seaters - two_seaters)\n"
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\nassert solution(\"4 1 1\\n1 1 1 1\") == \"2\"\n\"\"\"\n\n\"\"\"\nThe restaurant is of two types: one-seater and two-seater. \n\nThe number of one-seater tables is a, the number of two-seater tables is b. \n\nWhen a group of one person arrives, they are seated at the one-seater table. \n\nWhen a group consists of two people, they are seated at the two-seater table. \n\nWhen there are no one-seater tables, the group is seated at the two-seater table and it is rejected. \n\nWhen there are no two-seater tables, the group is rejected.\n\nYou are given a chronological order of groups coming to the restaurant. \n\nYou are to determine the total number of people the restaurant denies service to.\n\n-----Input-----\n\nThe first line contains three integers n, a and b (1 \u2264 n \u2264 2\u00b710^5, 1 \u2264 a, b \u2264 2\u00b710^5) \u2014 the number of groups coming to the restaurant, the number of one-seater and two-seater tables.\n\nThe second line contains a sequence of integers t_1, t_2,..., t_{n} (1 \u2264 t_{i} \u2264 2) \u2014 the description of clients in chronological order. If t_{i} is equal to one, then the i-th group consists of one person, otherwise the i-th group consists of two people.\n\n-----Output-----\n\nPrint the total number of people the restaurant denies service to.\n\n\n-----Examples-----\nInput\n3 2 1\n1 2 1 1\n\nOutput\n0\n\nInput\n3 2 1\n1 1 2 1\n\nOutput\n2\n\nInput\n3 1 2\n1 2 1 2\n\nOutput\n0\n\nInput\n3 1 1\n1 1 2 1\n\nOutput\n2\n\nInput\n4 1 1\n1 1 2 1\n\nOutput\n2\n\"\"\""
    },
    {
        "number": 194,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == '0'\nassert solution(\"4 1 1\\n1 1 2 1\") == '2'\nassert solution(\"4 1 1\\n2 2 2 2\") == '0'\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10 10 5 20\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n2 2 0 4\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n2 2 2 1\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n2 2 2 5\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n2 2 0 2\n\"\"\") == \"-1\"\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2 2 1\") == -1\nassert solution(\"2 2 2 1\") == -1\nassert solution(\"2 2 0 4\") == 5\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(input()) == answer\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\n\n\n\n2)\n\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 Road (\u0434\u043e\u0440\u043e\u0433\u0430), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b: length (\u0434\u043b\u0438\u043d\u0430), width (\u0448\u0438\u0440\u0438\u043d\u0430). \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430. \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u043c\u0438. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u0440\u0430\u0441\u0447\u0435\u0442\u0430\n\u043c\u0430\u0441\u0441\u044b \u0430\u0441\u0444\u0430\u043b\u044c\u0442\u0430, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0434\u043b\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u0434\u043e\u0440\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u043e\u0442\u043d\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u043e\u0440\u043c\u0443\u043b\u0443: \u0434\u043b\u0438\u043d\u0430 * \u0448\u0438\u0440\u0438\u043d\u0430 * \u043c\u0430\u0441\u0441\u0430 \u0430\u0441\u0444\u0430\u043b\u044c\u0442\u0430\n\u0434\u043b\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043a\u0432 \u043c\u0435\u0442\u0440\u0430 \u0434\u043e\u0440\u043e\u0433\u0438 \u0430\u0441\u0444\u0430\u043b\u044c\u0442\u043e\u043c, \u0442\u043e\u043b\u0449\u0438\u043d\u043e\u0439 \u0432 1 \u0441\u043c * \u0447\u0438 \u0441\u043b\u043e \u0441\u043c \u0442\u043e\u043b\u0449\u0438\u043d\u044b \u043f\u043e\u043b\u043e\u0442\u043d\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043c\u0435\u0442\u043e\u0434\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: 20\u043c * 5000\u043c * 25\u043a\u0433 * 5\u0441\u043c = 12500 \u0442\n\n\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430: \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u0434\u0435:\n\u043c\u043e\u0434\u0443\u043b\u044c math: https://docs.python.org/3/library/math.html\n\n** \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043c\u0435\u043c \u0434\u043b\u0438\u043d\u0443 \u0438 \u0448\u0438\u0440\u0438\u043d\u0443 \u0432 \u043c\u0435\u0442\u0440\u0430\u0445\n\n\"\"\"\nfrom dataclasses import dataclass\n\nclass Road:\n    _length: float\n    _width: float\n\n    def __init__(self, length: float, width: float) -> None:\n        self._length = length\n        self._width = width\n\n    def get_mass(self, thickness: float, depth: float):\n        return (self._length * self._width * thickness * depth) / 1000\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n\"\"\""
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\n\"\"\"\n"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 0\\n') == '4'\nassert solution('2 1\\n') == '7'\nassert solution('3 2\\n') == '21'\n\n\"\"\"\n\n\"\"\"\n\ud480\uc774\n\ud0c0\uc784\ub9ac\ubc0b\uc774 \ub108\ubb34 \uc624\ub798\uac78\ub824\uc11c \ucc3d\uc601\uc774\ub294 \uc544\ub798\uc640 \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \ud480\uc5c8\ub2e4.\n\n1. \ub098\uba38\uc9c0 \uc5f0\uc0b0\uc73c\ub85c \ud480\uae30.\n2. \ub098\uba38\uc9c0 \uc5f0\uc0b0\uc758 \ub2e4\ub978 \uc774\uc720\ub85c \ub098\ub204\uc5b4 \uc2dc\uac04 \ucd08\uacfc\uac00 \ub0ac\ub2e4.\n\n\"\"\""
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\n\n\n\"\"\"\n\nimport math\nimport sys\nimport collections"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('\\n') == 0\nassert solution('1 0\\n') == 0\nassert solution('2 0\\n') == 0\nassert solution('2 1\\n') == 7\n"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 1\\n') == '7'\nassert solution('3 2\\n') == '21'\n\n\"\"\""
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 0\\n') == 4\n\"\"\""
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 0\") == 4\nassert solution(\"2 1\") == 7\nassert solution(\"3 2\") == 21\n"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n"
    },
    {
        "number": 196,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"1\"\n\"\"\"\n\nimport sys\nimport numpy as np\n\nstdin = sys.stdin.read()\ninputs = stdin.split('\\n')\n\nN = int(inputs[0])\nproblems = []\n\nfor i in range(1, N + 1):\n    # convert string to list of ints\n    problem = list(map(int, inputs[i].split()))\n    problems.append(problem)"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 2\\n1 2\") == \"1\"\nassert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\n\"\"\"\n\nn = int(input())\nL = []\nfor i in range(n):\n    L.append(list(map(int, input().split())))\n\nans = 1\nfor i in range(n):\n    tmp = 1\n    l, r = L[i]\n    for j in range(n):\n        if j!= i:\n            l_j, r_j = L[j]\n            if l_j > l:\n                tmp *= l_j - l + 1\n                tmp %= 98245353\n            if r_j >= r:\n                tmp *= r_j - r + 1\n                tmp %= 98245353\n    ans *= tmp\n    ans %= 98245353\nprint(ans)\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 1') == 1\nassert solution('42 1337') == 9832411\nassert solution('13 420') == 142811\nassert solution('1 2') == 1\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"2\\n42 1337\\n13 420\\n\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\\n\") == \"1\"\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2') == '499122177'\n\"\"\"\nimport math\n\nn = int(input())\nl, r = [int(x) for x in input().split()]\n\nprobs = []\nfor i in range(n):\n    probs.append([l, r])\n\nprobs.sort(key=lambda x: x[0])\n\nflag = 0\nfor i in range(n):\n    if i == 0:\n        l, r = probs[i][0], probs[i][1]\n    else:\n        if probs[i][0] > r:\n            l, r = probs[i][0], probs[i][1]\n            flag += 1\n        else:\n            if probs[i][1] > r:\n                l, r = probs[i][0], probs[i][1]\n                flag += 1\n            else:\n                if flag == 0:\n                    l, r = probs[i][0], probs[i][1]\n                else:\n                    l, r = r, probs[i][1]\n                    flag = 0\n\nans = 0\nfor i in range(n):\n    if probs[i][0] <= l and probs[i][1] >= r:\n        ans += (r - l + 1) * (r - l) // 2\n        ans %= 998244353\n        l, r = probs[i][0], probs[i][1]"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 197,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\n\n\n----- Solution -----\n\"\"\"\nimport sys"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n\"\"\"\n"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n\"\"\"\n\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(6) == 1\nassert solution(20) == 4\n"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\nassert solution(\"40\") == \"10\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"20\") == \"4\"\n"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('10') == '1'\nassert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('13') == '5'\nassert solution('14') == '7'\n"
    },
    {
        "number": 198,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\n\"\"\""
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n4 3 5\") == \"3\"\nassert solution(\"3 4\\n5 3 4\") == \"2\"\nassert solution(\"3 7\\n1 2 3\") == \"-1\"\nassert solution(\"2 3\\n1 2 3\") == \"2\""
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n4 3 5\") == '3'\nassert solution(\"3 4\\n5 3 4\") == '2'\nassert solution(\"3 7\\n1 2 3\") == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n4 3 5\\n\") == '3'\nassert solution(\"3 4\\n5 3 4\\n\") == '2'\nassert solution(\"3 7\\n1 2 3\\n\") == '-1'\n\nprint(\"Successfully tested.\")\n\n\n\"\"\""
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 3\\n4 3 5') == '3'\nassert solution('3 4\\n5 3 4') == '2'\nassert solution('3 7\\n1 2 3') == '-1'"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 3\\n4 3 5') == 3\nassert solution('3 4\\n5 3 4') == 2\nassert solution('3 7\\n1 2 3') == -1\nassert solution('3 7\\n1 2 3') == -1\nassert solution('3 7\\n1 2 3') == -1\n"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n4 3 5\") == \"3\"\nassert solution(\"3 4\\n5 3 4\") == \"2\"\nassert solution(\"3 7\\n1 2 3\") == \"-\"\nassert solution(\"4 5\\n1 2 3 4\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n4 3 5\") == \"3\"\nassert solution(\"3 4\\n5 3 4\") == \"2\"\nassert solution(\"3 7\\n1 2 3\") == \"-1\"\nassert solution(\"3 7\\n1 2 3\\n2 2 4\\n3 2 5\") == \"2\"\n"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n\"3 3\\n4 3 5\"\n) == \"3\"\n\nassert solution(\n\"3 4\\n5 3 4\"\n) == \"2\"\n\nassert solution(\n\"3 7\\n1 2 3\"\n) == \"-1\"\n\nprint('Success')"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n4 3 5\") == \"3\\n\"\nassert solution(\"3 4\\n5 3 4\") == \"2\\n\"\nassert solution(\"3 7\\n1 2 3\") == \"-1\\n\"\n\n\"\"\"\n\nimport sys\nimport re"
    },
    {
        "number": 199,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n'3 3\\n4 3 5') == '3\\n'\nassert solution(\n'3 4\\n5 3 4') == '2\\n'\nassert solution(\n'3 7\\n1 2 3') == '-1\\n'\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(10, 30) == 1\nassert solution(10, 13) == 0\nassert solution(1, 50) == 1\nassert solution(5, 4) == 1\nassert solution(10, 19) == -1\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10 13\") == \"1\"\nassert solution(\"10 19\") == \"0\"\nassert solution(\"1 50\") == \"-1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''10 13''') == '1'\nassert solution('''10 19''') == '-1'\nassert solution('''1 50''') == '1'\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 13\") == \"1\"\nassert solution(\"10 19\") == \"0\"\nassert solution(\"1 50\") == \"1\"\n\"\"\"\nimport math"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('10 13') == '1'\nassert solution('1 1') == '0'\nassert solution('10 19') == '-1'\n\nSolution:"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('10 13\\n1 1') == '1'\nassert solution('10 19\\n1 2') == '-1'\nassert solution('1 50\\n5 4') == '1'\n\nprint(\"Successfully tested.\")\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(solution.test_cases[0]) == 1\n\nsolution.test_cases = [\n    (10, 30, 1),\n    (10, 13, 0),\n    (1, 50, 1),\n    (10, 19, -1)\n]\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 13\\n1 1\") == \"1\"\nassert solution(\"10 19\\n1 2\") == \"0\"\nassert solution(\"1 50\\n5 4\") == \"1\"\n\nimport os, sys, re, math\nfrom math import inf, ceil, floor\nfrom collections import Counter, defaultdict, deque\nfrom copy import copy, deepcopy\nfrom itertools import combinations, permutations, accumulate, \\\n                      combinations_with_replacement, groupby\nfrom functools import lru_cache, cmp_to_key, partial as functools_partial\nfrom operator import itemgetter as op_itemgetter, methodcaller as op_methodcaller\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush, heapify\nfrom fractions import gcd\nfrom math import log, sqrt, pi, factorial, ceil, floor, sin, cos, tan, asin, acos, atan, atan2, hypot, erf, erfc, inf, nan\n"
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\n    \"10 13\"\n) == \"1\"\n\nassert solution(\n    \"10 19\"\n) == \"0\"\n\nassert solution(\n    \"1 50\"\n) == \"1\"\n\n\"\"\""
    },
    {
        "number": 200,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 13\\n1 1') == '1'\nassert solution('10 19\\n1 2') == '-1'\nassert solution('1 50\\n5 4') == '1'\n\"\"\"\n\nfrom collections import namedtuple\nimport re\n\ncaterpillar = namedtuple('caterpillar', ('height','slip'))\n"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10 3 5 2 3\") == 16\nprint('OK')\n\n\"\"\"\nimport sys"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10 3 5 2 3\") == 16\n\"\"\"\n\n\"\"\"\nhttps://www.codewars.com/kata/5dc13c8c2ff8bb8cc0001b8/train/python\n\nConsider a list (list = []). You can perform the following commands:\n\ninsert i e: Insert integer  at position.\nprint: Print the list.\nremove e: Delete the first occurrence of integer.\nappend e: Insert integer  at the end of the list.\nsort: Sort the list.\npop: Pop the last element from the list.\nreverse: Reverse the list.\nInitialize your list and read in the value of  followed by  lines of commands where each command will be of the  types listed above. Iterate through each command in order and perform the corresponding operation on your list.\n\nInput Format\n\nThe first line contains an integer,, denoting the number of commands. \nEach line  of the  subsequent lines contains one of the commands described above.\n\nConstraints\n\nThe elements added to the list must be integers.\nOutput Format\n\nFor each command of type print, print the list on a new line.\n\nSample Input 0\n\n12\ninsert 0 5\ninsert 1 10\ninsert 0 6\nprint\nremove 6\nappend 9\nappend 1\nsort\nprint\npop\nreverse\nprint\n\nSample Output 0\n\n[6, 5, 10]\n[1, 5, 9, 10]\n[9, 5, 1]\n\"\"\"\n\na = [int(i) for i in input().split()]\nl = []\nfor i in range(a[0]):\n    b = input().split()\n    l.append(b)\nfor i in l:\n    if i[0] == 'insert':\n        l.insert(int(i[1]), int(i[2]))\n    elif i[0] == 'print':\n        print(l)\n    elif i[0] =='remove':\n        l.remove(int(i[1]))\n    elif i[0] == 'append':\n        l.append(int(i[1]))\n    elif i[0] =='sort':\n        l.sort()\n    elif i[0] == 'pop':\n        l.pop()\n    elif i[0] =='reverse':\n        l.reverse()\n"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 3 5 2 3\"\n) == 16\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '10'\nassert solution('2 2 2 2') == '0'\nassert solution('10 3 5 2 3') == '16'\nassert solution('10 3 5 2 3', 1) == '15'\nassert solution('10 3 5 2 3', 2) == '17'\n"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 3 5 2 3\") == 16\n\"\"\""
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\n"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 3 5 2 3\") == 16\n\"\"\"\n\nimport sys\nfrom math import ceil"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\""
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10 3 5 2 3\") == 16\n\"\"\"\n\nfrom typing import Tuple\n\nSTDIN_SCHEMA = [int, int, int, int, int]\n"
    },
    {
        "number": 201,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2 1 3\") == \"16\"\n\"\"\""
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n6 1\") == \"3\"\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n6 1\") == \"3\"\nassert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"0 0\\n6 1\") == \"5\"\n\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\n\"\"\"\n\nfrom typing import List, Tuple\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n\"\"\"\n\nfrom sys import stdin\n\nx1, y1 = map(int, stdin.readline().split())\nx2, y2 = map(int, stdin.readline().split())\n\nres = abs(x2 - x1) + abs(y2 - y1)\nprint(res)\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n4 5\") == \"5\"\nassert solution(\"3 4\\n6 1\") == \"3\"\n"
    },
    {
        "number": 202,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"DDRRR\") == \"D\"\n\nassert solution(\"DDRRRR\") == \"R\"\n\nassert solution(\"RRDRDRDRR\") == \"D\"\n\nassert solution(\"DRDRDRDRRR\") == \"R\"\n\nassert solution(\"DDRRRRRRRR\") == \"D\""
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\nDRRR\") == \"D\"\nassert solution(\"6\\nDRRRR\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\nDDRRR\") == \"D\"\nassert solution(\"6\\nDDRRRR\") == \"R\""
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\nDDRRR') == 'D'\n\"\"\""
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\nDDRRR\") == \"D\"\nassert solution(\"6\\nDDRRRR\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\nDRRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\n\"\"\""
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\nDDRRR\") == \"D\"\nassert solution(\"6\\nDDRRRR\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('4\\nDRRDR') == 'D'\n\"\"\"\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('RR') == 'R'\nassert solution('RRR') == 'R'\nassert solution('DRDRDRDDRR') == 'R'\nassert solution('DDRDRRDR') == 'R'\n"
    },
    {
        "number": 203,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\nDRRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\n\"\"\""
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n\"\"\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n2\n3\n4\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4\n2\n6\n4\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1000000000000000000\n1000000000000000000\n999999866000004473\n99999922000007597\n\"\"\") == \"1000000063\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"17 15 5 3\") == '3'\nassert solution(\"4 2 6 4\") == '1'\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"4 2 6 4\") == \"1\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"17 15 5 3\") == '3'\nassert solution(\"14 16 7 22\") == '0'\nassert solution(\"4 2 6 4\") == '1'\n\"\"\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''\n4 2 6 4\n''') == '1'\nassert solution('''\n1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\n''') == '1000000063'\n\n\"\"\""
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"4 2 6 4\") == \"1\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n\n\"\"\"\n"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"17 15 5 3\") == 3\nassert solution(\"14 16 7 22\") == 0\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == 100000000063\nprint('Success')"
    },
    {
        "number": 204,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('17 15 5 3') == '3'\n\"\"\"\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n\n\"\"\"\n\nimport unittest\nfrom math import factorial as f\nfrom math import log as l"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == 3\nassert solution(\"6 9\") == 1\nassert solution(\"38 11\") == 3\nassert solution(\"5 10\") == 1\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 9') == '1'\nassert solution('3 9') == '2'\nassert solution('4 9') == '2'\nassert solution('6 9') == '3'\nassert solution('8 9') == '3'\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"5 100\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n\"\"\""
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"9 2\") == '1'\nassert solution(\"38 11\") == '3'\nassert solution(\"5 2\") == '3'\nassert solution(\"5 10\") == '1'\nassert solution(\"2 2\") == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"5 10\") == \"1\"\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 9\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"5 10\") == \"1\"\n\n'''\n"
    },
    {
        "number": 205,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"38 11\") == \"3\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"6 9\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 5 3\") == 19\nassert solution(\"1000000000 1 2019\") == 500000001500000001\nassert solution(\"100 100000 1\") == 101\nassert solution(\"6 4 5\") == 10\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 4 5\") == 10\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\"\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7 5 3\") == 19\nassert solution(\"1 1000000000 1\") == 500000001500000001\nassert solution(\"100 100000 1\") == 101\nassert solution(\"6 4 5\") == 10\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"1000000000 1 2019\") == \"500000001500000001\"\nassert solution(\"100 100000 1\") == \"101\"\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 5 3\") == \"19\"\nassert solution(\"100 100000 1\") == \"101\"\nassert solution(\"6 4 5\") == \"10\""
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\n\n---Problem---\n\nA snail is an infinite row of houses, where each house has a different value. \nThe snail takes a step to the right every minute, starting at the house on its left, and ends with the house on its right. \nIt moves one house at a time, and it will never visit the same house twice.\n\nFor example, here is a snail's journey:\n\nThe values of the houses are $2,3,1,4,5,7,6,8,9,10$ \n(the house numbers are 1-indexed).\n\nThe first minute the snail will be at the house with value 3.\n\nThe second minute it will be at the house with value 4.\n\nThe third minute it will be at the house with value 5.\n\nThe fourth minute it will be at the house with value 6.\n\nThe fifth minute it will be at the house with value 7.\n\nThe sixth minute it will be at the house with value 8.\n\nThe seventh minute it will be at the house with value 9.\n\nThe eighth minute it will be at the house with value 10.\n\nThe ninth minute it will be at the house with value 8.\n\nThe tenth minute it will be at the house with value 7.\n\nThe eleventh minute it will be at the house with value 6.\n\nThe twelfth minute it will be at the house with value 5.\n\nThe thirteenth minute it will be at the house with value 4.\n\nThe fourteenth minute it will be at the house with value 3.\n\nThe fifteenth minute it will be at the house with value 2.\n\nThe sixteenth minute it will be at the house with value 1.\n\nThe seventeenth minute it will be at the house with value 1.\n\nThe eightheenth minute it will be at the house with value 2.\n\nThe nineteenth minute it will be at the house with value 3.\n\nThe twentieth minute it will be at the house with value 4.\n\nGiven the initial value of the leftmost house, return the house number of the snail after it has toured the whole yard once."
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7 5 3\") == 19\n"
    },
    {
        "number": 206,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7 5 3\") == '19'\nassert solution(\"1000000000 1 2019\") == '500000001500000001'\nassert solution(\"100 100000 1\") == '101'\nassert solution(\"6 4 5\") == '10'\n\"\"\"\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 9 9 3') == 'No'\nassert solution('1 0 1 5 1') == 'Yes'\nassert solution('4 3 1') == 'No'"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 9 9 3\") == \"No\"\nassert solution(\"4 3 1\") == \"No\"\nassert solution(\"5 9 9 3\") == \"Yes\"\nassert solution(\"1 0 1 5 1\") == \"Yes\"\nassert solution(\"3 9 9 3\") == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 9 9 3') == 'No'\nassert solution('4 3 1') == 'No'\nassert solution('5 9 9 3') == 'Yes'\nassert solution('4 9 9 3') == 'Yes'\nassert solution('4 3 9 9 3') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 3 5') == 'Yes'\nassert solution('5 1 1') == 'Yes'\nassert solution('3 9 9 3') == 'No'\nassert solution('4 3 1') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 9 9 3\") == \"No\"\nassert solution(\"4 3 1\") == \"No\"\n\"\"\"\n\nn = int(input())\nseq = list(map(int, input().split()))"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 9 9 3\") == \"No\"\nassert solution(\"1 0 1 5 1\") == \"Yes\"\nassert solution(\"4 3 1\") == \"No\"\n\nassert solution(\"5 9 9 3\") == \"No\"\n\"\"\""
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 9 9 3') == 'No'\nassert solution('4 3 1') == 'Yes'\nassert solution('5 9 9 3') == 'Yes'\nassert solution('4 3 1') == 'No'\n\n\"\"\""
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3 9 9 3') == 'No'\nassert solution('5 9 9 3') == 'No'\nassert solution('4 9 9 3') == 'No'\nassert solution('3 9 9 3') == 'No'\nassert solution('1 0 1 5 1') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 9 9 3\") == \"No\"\nassert solution(\"1 0 1 5 1\") == \"Yes\"\nassert solution(\"4 3 1\") == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 9 9 3\") == 'No'\nassert solution(\"1 0 1 5 1\") == 'Yes'\nassert solution(\"3 9 9 3\") == 'No'\n\"\"\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 1 3\") == \"0 0 1 3\"\nassert solution(\"0 0 1 4\") == \"0 1 1 0\"\nassert solution(\"0 0 1 5\") == \"1 1 1 0\"\n\"\"\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1 1\") == \"0 1 1 1\"\nassert solution(\"0 0 1 2\") == \"1 1 0 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 1\"\nassert solution(\"0 0 1 2\") == \"1 1 0 1\"\nassert solution(\"0 0 2 1\") == \"0 1 1 1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 1 3\") == \"1 1 0 1\"\n\"\"\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1\\n') == '1 0 1 1'\nassert solution('0 0 1 1\\n') == '0 1 1 0'\nassert solution('0 0 1 2\\n') == '-1'\nassert solution('0 0 1 1\\n') == '0 1 1 0'\nassert solution('0 0 2 2\\n') == '0 0 1 1'\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 1\") == '1 0 1 1'\nassert solution(\"0 0 1 2\") == '0 1 1 0'\n\"\"\""
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 1 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 2 1\") == \"1 0 1 1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('0 0 1 1') == '1 0 1 1'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 1 3') == '0 1 1 0'\nassert solution('0 0 2 3') == '0 1 1 0'\nassert solution('0 0 2 4') == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 3\\n3') == 1\nassert solution('0 -1\\n2') == 1000000006\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('0 -1\\n2') == '1000000006'\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3') == 1\nassert solution('0 -1\\n2') == 1000000006\n\"\"\"\n\nx, y = map(int, input().split())\nn = int(input())"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3') == '1'\nassert solution('0 -1\\n2') == '1000000006'\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\nassert solution('4 2') == '1'\nassert solution('0 1') == '1'\n\n\"\"\"\n\nx, y = map(int, stdin.strip().split())\nn = int(input())"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3\") == 1\nassert solution(\"0 -1\\n2\") == 1\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 -1 2\") == \"1000000006\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\"\nassert solution(\"0 0\") == \"1000000006\"\nassert solution(\"0 0 0\") == \"1000000006\"\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n3\") == \"1\"\nassert solution(\"0 -1\\n2\") == \"1000000006\"\n"
    },
    {
        "number": 209,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 3') == 1\nassert solution('0 -1') == 1000000006\nassert solution('0 -1 2') == 1000000006\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 -5\") == \"YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 1\\n2 8\\n3 9\\n3 9\\n4 10\\n4 10\"\nassert solution(\"1\\n0\") == \"NO\"\nassert solution(\"1\\n3\") == \"YES\\n2\\n1 2\\n3 3\"\nassert solution(\"4\\n1 2 3 -5\") == \"YES\\n2\\n1 1\\n2 2\\n3 3\\n4 4\"\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 -3\\n\") == \"YES\\n2\\n1 2\\n3 3\"\n\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\\n\") == \"YES\\n2\\n1 2\\n3 8\\n4 9\"\n\nassert solution(\"1\\n0\\n\") == \"NO\"\n\nassert solution(\"4\\n1 2 3 -5\\n\") == \"YES\\n4\\n1 1\\n2 2\\n3 3\"\nprint(\"OK\")\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\") == 'YES'\n\nassert solution('3\\n2\\n1\\n0') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 -3\") == 'YES\\n2\\n1 2\\n3 3'\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == 'YES\\n2\\n1 2\\n3 8\\n4 9\\n5 10'\nassert solution(\"1\\n0\") == 'NO'\nassert solution(\"4\\n1 2 3 -5\") == 'YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4'\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 2 3 -5') == 'YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4'\n\nsolution = lambda s: '\\n'.join(map(lambda x: str(x), solution(s.split('\\n'))))\nprint(solution(input()))\n\n==================================================\nGiven a positive integer n, find the smallest positive integer m, such that n is divisible by m. If n is not divisible by m, then m is the largest possible divisor of n.\n\nInput Format\n\nA single integer n.\n\nConstraints\n\n1 \u2264 n \u2264 10^6\n\nOutput Format\n\nPrint m.\n\nSample Input 0\n\n7\nSample Output 0\n\n7\n\nSample Input 1\n\n8\nSample Output 1\n\n2\n\nExplanation\n\n8 is divisible by 1, 2, 4, 5, 6, and 7.\n\nSample Input 2\n\n13\nSample Output 2\n\n13\n\nExplanation\n\n13 is divisible by 1, 2, 3, 4, 6, 8, 9, 10, 12, and 13.\n\nSample Input 3\n\n4\nSample Output 3\n\n2\n\nExplanation\n\n4 is divisible by 1, 2, and 4.\n\nSample Input 4\n\n1\nSample Output 4\n\n1\n\nExplanation\n\n1 is divisible by itself.\n\nSolution:\n\nn = int(input())\nfor i in range(1, n + 1):\n    if n % i == 0:\n        print(i)\n        break\n\n==================================================\nGiven an array of n positive integers, print the smallest positive integer (greater than 0) that does not occur in the array.\n\nThere may be multiple solutions, print any of them.\n\nIf the array is empty, print \"1\".\n\nInput Format\n\nThe first line of input contains T denoting the number of testcases. T testcases follow. Each testcase contains two lines of input. The first line contains n denoting the size of the array. The second line contains n space separated integers denoting the elements of the array.\n\nConstraints\n\n1 \u2264 T \u2264 100\n1 \u2264 n \u2264 100\n1 \u2264 Ai \u2264 103\n\nOutput Format\n\nFor each testcase, in a new line, print the required answer.\n\nSample Input 0\n\n2\n5\n2 3 4 10 11\n4\n1 2 3 4\nSample Output 0\n\n7\n1\nExplanation 0\n\nTestcase 1: The only positive integer which is not present in the array is 7.\n\nSample Input 1\n\n2\n6\n1 2 3 9 10 11\n6\n1 2 3 4 5 6\nSample Output 1\n\n7\n1\nExplanation 1\n\nTestcase 1: The only positive integer which is not present in the array is 7.\n\nSample Input 2\n\n2\n5\n12 31 41 59 63\n5\n12 31 41 59 63\nSample Output 2\n\n2\n1\nExplanation 2\n\nTestcase 1: The only positive integer which is not present in the array is 2.\n\nn = int(input())\nfor i in range(1, n + 1):\n    a = list(map(int, input().split()))\n    l = []\n    for j in a:\n        if j in l:\n            pass\n        else:\n            l.append(j)\n    for j in l:\n        if j == i:\n            pass\n        else:\n            print(j)\n            break\n==================================================\nGiven an array of integers. Find the first missing positive integer in linear time and constant space. In other words, find the lowest positive integer that does not exist in the array. The array can contain duplicates and negative numbers as well.\n\nFor example, the input[3, 4, -1, 1] should give 2. The input [1, 2, 0] should give 3.\n\nYou can modify the input array in-place.\n\nInput Format:\n\nThe first line of input contains an integer, T, denoting the number of test cases. The description of T test cases follows.\nEach test case contains a single line of input containing N space-separated integers.\n\nOutput Format:\n\nFor each testcase, print an single line denoting the lowest positive integer which is missing in the input.\n\nSample Input:\n\n3\n1 2 3 4 -1\n3\n10 20 30 40\n7\n1 -1 2 3 -1 4 -1\nSample Output:\n\n2\n3\n7\nExplanation:\n\nTestcase 1: First missing positive integer is 2.\n\nTestcase 2: First missing positive integer is 3.\n\nTestcase 3: First missing positive integer is 7.\n\nSolution:"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 2 3 -5') == 'YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4'\n\nassert solution('9 -12 3 4 -4 -10 7 3') == 'YES\\n2\\n1 2\\n3 8'\n\nassert solution('8 -12 3 4 -4 -10 7 3') == 'YES\\n2\\n1 2\\n3 8'\n\nassert solution('8 -12 3 4 -4 -10 7 3') == 'YES\\n2\\n1 2\\n3 8'\n\nassert solution('8 -12 3 4 -4 -10 7 3') == 'YES\\n2\\n1 2\\n3 8'"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\"\nassert solution(\"1\\n0\") == \"NO\"\nassert solution(\"7\\n-12 -7 -3 7 -5 0 -6\") == \"YES\\n4\\n1 1\\n3 9\"\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(3) == 'YES'\nassert solution(8) == 'YES'\nassert solution(1) == 'NO'\nassert solution(4) == 'YES'\nprint('All tests passed.')\n\n\"\"\"\n\n\nfrom itertools import accumulate, chain\nfrom math import gcd"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 2 -3\") == \"YES\\n2\\n1 1\\n2 2\"\nassert solution(\"9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\"\nassert solution(\"1 2 3 -5\") == \"YES\\n4\\n1 1\\n2 2\\n3 3\"\n"
    },
    {
        "number": 210,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 -3\") == \"YES\\n2\\n1 2\\n3 3\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\\n4 9\\n7 7\"\nassert solution(\"1\\n0\") == \"NO\"\nassert solution(\"4\\n1 2 3 -5\") == \"YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4\"\n\"\"\""
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 3 0\") == \"0\"\nassert solution(\"0 1 0\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == 3\nassert solution('5 4 2') == 6\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\nassert solution('5 5 2') == '0'\nassert solution('5 4 2') == '6'\nassert solution('5 5 2') == '0'\n"
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\n\"\"\""
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\nassert solution(\"5 5 2\") == \"0\"\nassert solution(\"6 4 2\") == \"0\"\n"
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\nassert solution('5 5 2') == '0'\n"
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 3 2') == '3'\n\"\"\""
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == '3'\nassert solution(\"5 4 2\") == '6'\n\"\"\""
    },
    {
        "number": 211,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\n\"\"\"\n\nn, m, k = [int(x) for x in input().split()]\nscore = (m * 2) + 1"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3454') == 'YES 344'\nassert solution('111111') == 'NO 0'\nassert solution('17') == 'YES 17'\nassert solution('98765432') == 'NO 0'\nassert solution('99999999') == 'NO 0'\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3454\") == \"YES\"\nassert solution(\"111111\") == \"NO\"\nassert solution(\"223450\") == \"NO\"\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3454') == 'YES\\n344'\nassert solution('111111') == 'YES\\n0'\nassert solution('101') == 'NO'\nassert solution('1234567890') == 'YES\\n12345678'\nassert solution('110111101010') == 'NO'\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3454\") == \"YES\\n344\"\nassert solution(\"111111\") == \"NO\\n0\"\nassert solution(\"4060\") == \"YES\\n39\"\nassert solution(\"1359\") == \"NO\\n0\"\nassert solution(\"3453\") == \"YES\\n343\"\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4245\") == \"YES\"\nassert solution(\"111111\") == \"NO\"\nassert solution(\"123456\") == \"NO\"\nassert solution(\"6245\") == \"NO\"\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"YES\\n1234\"\nassert solution(\"1234\") == \"NO\\n100101\"\nassert solution(\"111111\") == \"NO\\n100101\"\nassert solution(\"100101\") == \"NO\\n100101\"\nassert solution(\"111111\") == \"NO\\n100101\"\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"111111\") == \"NO\"\nassert solution(\"4332\") == \"YES\"\nassert solution(\"4321\") == \"NO\"\n\nprint(\"All tests passed.\")\n\n\n\"\"\"\n"
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3454') == 'YES'\nassert solution('111111') == 'NO'\n\"\"\""
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3454\") == \"YES\", \"case: 1\"\nassert solution(\"10\") == \"YES\", \"case: 2\"\nassert solution(\"111111\") == \"NO\", \"case: 3\""
    },
    {
        "number": 212,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3454') == 'YES\\n344'\nassert solution('111111') == 'NO\\n0'\n\"\"\""
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2\\n3 2\\n4 1\\n5 1\\n5 3\") == \"3\"\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\\n\") == \"4\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\\n\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-\"\nassert solution(\"2 2\\n1 1\") == \"-\"\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-\"\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-\"\nassert solution(\"1 1\\n1 1\") == \"-\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-\"\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\\n7 3\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-\"\nassert solution(\"5 3\\n5 4\") == \"-\"\nassert solution(\"3 2\\n2 1\") == \"-\"\n\"\"\"\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nfloors = set()\n\nfor i in range(m):\n    k, f = map(int, sys.stdin.readline().split())\n    floors.add(k)\n\nfor i in range(1, n + 1):\n    if i not in floors:\n        print(i)\n        break\nelse:\n    print(-1)\n"
    },
    {
        "number": 213,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 3\\n6 2\\n2 1\\n7 3') == '4'\nassert solution('8 4\\n3 1\\n6 2\\n5 2\\n2 1') == '-1'"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('00X00X0XXX0\\n0XXX0X00X00') == 4\n\"\"\"\n\nimport sys"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"00X0X0\") == \"0\"\nassert solution(\"0X0X0\") == \"0\"\nassert solution(\"0XX0X0\") == \"0\"\nassert solution(\"00X0X0X0\") == \"1\"\nassert solution(\"0X0X0X0\") == \"2\"\n"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"0XXX0\\n00000\") == 2\nassert solution(\"0X0X0\\n0X0X0\") == 0\nassert solution(\"0X0X0\\n0X0X0\") == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"00X0X0\") == 2\nassert solution(\"00X00X0XXX0\") == 4\nassert solution(\"0XXX0X00X00\") == 4\nassert solution(\"0X0X0\") == 0\nassert solution(\"0X0X0\") == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"00X00X0XXX0\") == 4\n\"\"\""
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"0X0X0\") == \"0\"\nassert solution(\"0X0X0X0\") == \"2\"\nassert solution(\"0X0X0X0X0\") == \"4\"\n\"\"\""
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"0X0X0\") == \"2\"\nassert solution(\"0X0X0X00X0X0\") == \"4\"\n\"\"\""
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"00X0X0\") == 2\nassert solution(\"0XXX0\") == 0\n\"\"\""
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"00\") == 1\nassert solution(\"00X0X0\") == 4\nassert solution(\"0X0X0\") == 0\nassert solution(\"0XXX0\") == 2\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 214,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('0XXX0\\n00000\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"aaaaBaabAbA\") == 2\nassert solution(\"zACaAbbaazzC\") == 3\nassert solution(\"ABC\") == 0\n\"\"\"\nimport string"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"aaaaBaabAbA\") == \"2\"\nassert solution(\"zACaAbbaazzC\") == \"3\"\nassert solution(\"ABC\") == \"0\"\nassert solution(\"zzzzz\") == \"0\"\nassert solution(\"1234\") == \"0\"\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('aabABaa') == 2\n\"\"\"\n\nn = int(input())\ns = input()\n\nprint(s.lower().count(\"a\") - s.lower().count(\"A\"))\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"aaaaBaabAbA\") == \"2\"\nassert solution(\"zACaAbbaazzC\") == \"3\"\nassert solution(\"ABC\") == \"0\"\n\n\"\"\"\nimport re\nfrom collections import defaultdict\nfrom itertools import combinations"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('aaaaBaabAbA') == 2\nassert solution('zACaAbbaazzC') == 3\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"aaaaBaabAbA\") == 2\nassert solution(\"zACaAbbaazzC\") == 3\nassert solution(\"ABC\") == 0\nassert solution(\"AAAAaaaa\") == 4\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"AAAAAAAA\") == 5\nassert solution(\"AaBbCc\") == 2\nassert solution(\"AAabBA\") == 0\nassert solution(\"abbaBB\") == 4\n\"\"\"\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('zABaAbbaazzC') == 3\nassert solution('ABC') == 0\n\n\"\"\"\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"aaaaBaabAbA\") == \"2\"\nassert solution(\"zACaAbbaazzC\") == \"3\"\nassert solution(\"ABC\") == \"0\"\n"
    },
    {
        "number": 215,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('aaaaBaabAbA') == 2\nassert solution('zACaAbbaazzC') == 3\nassert solution('ABC') == 0\n"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n\nprint(\"You all set. Click 'Check' to review your tests and earn cool rewards!\")"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n1 -2 0') == 3\nassert solution('6\\n16 23 16 15 42 8') == 120"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 -2 0\") == \"3\"\nassert solution(\"6\\n16 23 16 15 42 8\") == \"120\"\n\n\"\"\""
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 -2 0') == '3'\nassert solution('16 23 16 15 42 8') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n\nprint('The solution is correct!')\n"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 -2 0\") == \"3\"\nassert solution(\"16 23 16 15 42 8\") == \"120\"\n"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 -2 0') == '3'\nassert solution('16 23 16 15 42 8') == '120'\nprint(solution(input()))"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 -2 0\\n\") == \"3\"\nassert solution(\"6\\n16 23 16 15 42 8\\n\") == \"120\""
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 -2 0\") == \"3\"\nassert solution(\"6\\n16 23 16 15 42 8\") == \"120\"\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\ns = set(arr)\n\nmin_diff = 0\n\nfor i in s:\n    if arr.count(i) > 1:\n        for j in range(len(arr)):\n            if arr[j] == i:\n                arr[j] = 0\n        min_diff += i\n\nprint(min_diff)\n"
    },
    {
        "number": 216,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 -2 0\") == 3\nassert solution(\"16 23 16 15 42 8\") == 120\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('10 11 11 2 1') == '-1'\nassert solution('6 6 3 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n\n\"\"\"\n\na, b, f, k = map(int, input().split())"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 10 3 4') == '-1'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\""
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''6 9 2 4''') == 4\nassert solution('''6 10 2 4''') == 2\nassert solution('''6 5 4 3''') == -1\nassert solution('''6 5 4 6''') == -1\nassert solution('''6 5 4 10''') == -1\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n"
    },
    {
        "number": 217,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\n\nassert solution(\"6 10 2 4\") == \"2\"\n\nassert solution(\"6 5 4 3\") == \"-1\"\n\"\"\"\n\na, b, f, k = map(int, input().split())"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"Hello\") == \"2\"\nassert solution(\"Codeforces\") == \"2\"\nassert solution(\"abacabac\") == \"8\"\n\"\"\"\n\nn, p, q = map(int, input().split())\ns = input()\nl = len(s)"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"Hello\") == [[\"H\", \"e\"], [\"He\"], [\"ll\", \"o\"]]\nassert solution(\"Codeforces\") == [[\"C\", \"o\", \"d\"], [\"F\", \"o\", \"r\"], [\"e\", \"s\"]]\nassert solution(\"Privet\") == [-1]\nassert solution(\"abacabac\") == [[\"a\", \"b\", \"a\"], [\"c\", \"a\", \"b\", \"a\"], [\"b\", \"a\", \"c\", \"a\", \"b\", \"a\"]]\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\nsys.path.insert(1, '../../../')\n\nfrom aoc_utils import *"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"Hello\") == 2\n\nassert solution(\"Codeforces\") == 8\n\nassert solution(\"Privet\") == -1\n\n\n\n-----Explanation-----\n\nWe must split the string 'Hello' into two parts: 'He' and 'lo'.\n\nFor 'Codeforces', it's not possible to split it into parts of length p = 2 and q = 3, so we print -1.\n\nFor 'Privet', we can split it into 4 parts: 'Pr', 'vi', 'e', 't'.\n\"\"\"\n"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('Hello') == 2\nassert solution('Codeforces') == 2\nassert solution('abacabac') == 8\nassert solution('Privet') == -1\nassert solution('aaaa') == 1\n"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"Hello\") == 2\nassert solution(\"Codeforces\") == 2\nassert solution(\"Privet\") == -1\nassert solution(\"abacabac\") == 8\nassert solution(\"abacabac\") == 8\n\"\"\"\nimport sys\n\nlines = [line.strip() for line in sys.stdin.readlines()]\nn, p, q = map(int, lines[0].split())\nlines = lines[1:]\n\nwhile len(lines) > 0 and len(lines[0]) == p:\n    lines = lines[1:]\n\nwhile len(lines) > 0 and len(lines[0]) == q:\n    lines = lines[1:]"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('Hello') == 2\nassert solution('Codeforces') == 2\nassert solution('Privet') == -1\n\"\"\""
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"Hello\") == 2\nassert solution(\"Codeforces\") == -1\nassert solution(\"Privet\") == 8\n\"\"\"\n"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"Hello\") == 2\nassert solution(\"Codeforces\") == -1\nassert solution(\"abacabac\") == 8\n"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('abacabac') == '3'\nassert solution('abc') == '1'\nassert solution('aaaaaaaa') == '5'\nassert solution('codeforces') == '2'\nassert solution('abcdef') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"Hello\") == 2\nassert solution(\"Codeforces\") == -1\nassert solution(\"Privet\") == 8\nassert solution(\"abacabac\") == 8\n\"\"\"\n\nimport sys\n\ninput = sys.stdin.readlines()\nn, p, q = list(map(int, input[0].split()))\n\nstring = input[1].rstrip()"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 10 1 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\\n\"\nassert solution(\"2 9 2 3\") == \"IMPOSSIBLE\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 10 1 3\") == \"RUN 2\"\nassert solution(\"3 10 1 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 0 3\") == \"IMPOSSIBLE\""
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution('''2 9 2 3\n6 4''') == \"IMPOSSIBLE\"\nassert solution('''3 10 1 3\n3 4 7''') == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution('''3 10 1 3\n3 4 7''') == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution('''3 10 1 3\n3 4 7''') == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\n"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 10 1 3\\n3 4 7\") == \"\"\"RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2\"\"\"\n\nassert solution(\"2 9 2 3\\n6 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 1 3\\n3 4 1\") == \"\"\"RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2\"\"\"\n\"\"\"\nTest\nTime limit: 1.0 sec(s) for the C language\nMemory limit: 512 MB\nInput\n10 10 3 2 4\n1 2 5 7 10 11 12 13 14 15\n\nOutput\nRUN 2\nRUN 1\nRUN 2\nRUN 2\nRUN 2\nRUN 2\nRUN 2\nRUN 2\nRUN 2\nRUN 2\nRUN 2\n\"\"\"\n\nassert solution(\"3 10 1 3\\n3 4 1\") == \"\"\"RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2\"\"\"\n\n\n\n\"\"\"\nYou are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water.\n\nGrid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).\n\nThe island doesn't have \"lakes\" (water inside that isn't connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\n\n \n\nExample:\n\nInput:\n[[0,1,0,0],\n [1,1,1,0],\n [0,1,0,0],\n [1,1,0,0]]\n\nOutput: 16\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''\n\nassert solution('''2 9 2 3\n6 4''') == '''IMPOSSIBLE'''\n\nassert solution('''5 5 2 1\n5 4 5 4 6''') == '''RUN 1\nJUMP 1\nRUN 2\nJUMP 2\nRUN 4\nJUMP 3\nRUN 3\nJUMP 3\nRUN 2\nJUMP 2'''\n\n\"\"\"\nimport sys\nimport re\nimport math\nimport queue\n\nclass Hiker:\n\n    def __init__(self, obstacles):\n        self.obstacles = set(obstacles)\n\n    def go_over_obstacles(self, x, y):\n        self.obstacles.discard((x, y))\n\n    def is_solution(self, x, y):\n        return not (x, y) in self.obstacles"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 10 1 3\\n3 4 7\\n') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3\\n6 4\\n') == 'IMPOSSIBLE'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 10 1 3\\n3 4 7\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\\n6 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 9 1 3\\n6 4\") == \"RUN 2\\nJUMP 2\\nRUN 1\\nJUMP 2\\nRUN 2\"\n"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''\n\nassert solution('''2 9 2 3\n6 4''') == 'IMPOSSIBLE'"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 10 1 3\\n3 4 7') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3\\n6 4') == 'IMPOSSIBLE'"
    },
    {
        "number": 219,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 10 2 3\") == \"JUMP 1\\nRUN 1\\nJUMP 4\"\nassert solution(\"2 9 2 3\") == \"IMPOSSIBLE\"\n\"\"\"\nfrom copy import deepcopy\n\nn, m, s, d = [int(x) for x in stdin.readline().split()]\na = [int(x) for x in stdin.readline().split()]\n\ndif = m - s\n\nmoves = []\njumps = []\n\ncur = 0\nprev = 0\n\nfor a_ in a:\n    if cur + dif >= a_ and prev + dif < a_:\n        moves.append(a_ - prev)\n        prev = a_\n        cur = a_\n    elif cur + dif < a_:\n        cur += dif\n        moves.append(a_ - prev)\n        prev = a_\n        jumps.append(a_ - prev)\n        prev = a_\n    elif cur + dif >= a_:\n        prev = a_\n        cur = a_"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"9 5\") == '4'\nassert solution(\"3 3\") == '2'\nassert solution(\"5 2\") == '0'\n\n\n-----"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('9 5\\n') == '4'\nassert solution('3 3\\n') == '2'\nassert solution('5 2\\n') == '0'"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('9 5') == 4\nassert solution('3 3') == 2\nassert solution('5 2') == 0\n"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"8 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\n\"\"\""
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"9 5\") == \"4\"\n\"\"\"\n\ns, x = map(int, stdin.strip().split(' '))\n\nd = {i: 2 ** i for i in range(31)}\n"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"9 5\\n\") == \"4\"\n\"\"\"\n\nfrom collections import deque\nfrom itertools import combinations"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"9 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\n\"\"\"\nimport sys\nfrom collections import defaultdict\nfrom typing import List\n\n\nclass Solution:\n    def __init__(self, stdin: str):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        self.sum, self.xor = map(int, stdin.split(\" \"))\n\n    def solution(self) -> str:\n        \"\"\"\n        {k: v} for k, v in dict.items()\n        \"\"\"\n        res = defaultdict(int)\n        for k in range(1, self.sum + 1):\n            for j in range(k, self.sum + 1):\n                res[k + j] += 1\n\n        return res[self.xor]\n"
    },
    {
        "number": 220,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"5 1\") == \"2\""
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"2 1 6\"\n\"\"\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 1\\n2 3') == '1 6'\nassert solution('5 1\\n5 3') == '2 4'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"2 1 4\"\nassert solution(\"7 2\") == \"2 1 6\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"2 1\"\nassert solution(\"4 1\") == \"2 1\"\nassert solution(\"5 2\") == \"3 1\"\nassert solution(\"7 2\") == \"2 1 6\"\nassert solution(\"7 3\") == \"1 3 6\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 2\") == \"2 1 6\"\nassert solution(\"5 1\") == \"2 1 4\"\nassert solution(\"1 3\") == \"1 3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 2\") == \"2 1 6\"\n\"\"\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 1\\n2 4\\n') == '2 1 4'\nassert solution('7 2\\n1 6\\n') == '2 1 6'\nassert solution('7 1\\n1 6\\n') == '1 6'\n\n\"\"\"\n\nfrom typing import List\n\nclass Skewer:\n    def __init__(self, num: int, status: str):\n        self.num = num\n        self.status = status\n\nclass Solution:\n    def __init__(self, n: int, k: int):\n        self.skewers: List[Skewer] = [Skewer(i, 'initial') for i in range(1, n + 1)]\n        self.k = k\n        self.n = n\n\n    def run(self) -> List[int]:\n        skewers = self.skewers\n        k = self.k\n        n = self.n\n\n        def get_first_skewer(num: int) -> int:\n            for i in range(len(skewers)):\n                if skewers[i].num == num:\n                    return i\n            return -1\n\n        def get_distance_to_turn(from_skewer: int, to_skewer: int) -> int:\n            distance = 0\n            while skewers[from_skewer].status!= 'initial':\n                from_skewer -= 1\n                distance += 1\n            while skewers[to_skewer].status!= 'initial':\n                to_skewer += 1\n                distance += 1\n            return distance\n\n        def search_skewers_to_turn() -> List[int]:\n            result = [0]\n            for i in range(1, n):\n                if i + k < n + 1:\n                    result.append(get_distance_to_turn(get_first_skewer(i), get_first_skewer(i + k)))\n                elif i - k > 0:\n                    result.append(get_distance_to_turn(get_first_skewer(i), get_first_skewer(i - k)))\n            return result\n\n        result = search_skewers_to_turn()\n        print(result)\n        return result\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 221,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"2 1 4\"\nassert solution(\"7 2\") == \"2 1 6\"\nassert solution(\"3 2\") == \"2 1 4\"\nassert solution(\"7 1\") == \"2 1 6\"\n"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\"\nassert solution
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n\n\"\"\""
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n\n\n\n-----Hint----\n\nThe main idea is to apply operations only to the last two digits and test if it is the square.\n\n\n\"\"\""
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"8314\") == '2'\nassert solution(\"625\") == '0'\nassert solution(\"333\") == '-1'"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('8314') == 2\nassert solution('625') == 0\nassert solution('333') == -1\n"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-\"\n"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('8') == '319927983'\n\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(2) == \"1\"\nassert solution(3) == \"4\"\nassert solution(6) == \"120\"\n\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"6\") == \"120\"\n\n\n\n-----Explanation-----\n\nConsider the third example: these are the permutations of length $2$:  $[1,2]$, $[2,1]$, $[3,1]$, $[3,2]$, $f(p)=1$.  $[1,3]$, $[2,3]$, $[3,1]$, $[3,2]$, $f(p)=2$.  $[1,2,3]$, $[1,3,2]$, $[2,1,3]$, $[2,3,1]$, $[3,1,2]$, $[3,2,1]$, $f(p)=3$.  $[1,2,1]$, $[1,2,3]$, $[1,3,2]$, $[2,1,1]$, $[2,1,3]$, $[2,3,1]$, $[3,1,1]$, $[3,1,2]$, $[3,2,1]$, $f(p)=4$.  $[1,3,3]$, $[1,3,2]$, $[2,1,2]$, $[2,1,3]$, $[2,3,1]$, $[3,1,3]$, $[3,1,2]$, $[3,2,1]$, $f(p)=5$.  $[1,3,1]$, $[1,3,3]$, $[1,2,3]$, $[2,1,1]$, $[2,1,3]$, $[2,3,1]$, $[3,1,1]$, $[3,1,2]$, $[3,2,1]$, $f(p)=6$.  $[1,2,2]$, $[1,2,3]$, $[1,3,2]$, $[2,1,2]$, $[2,1,3]$, $[2,3,1]$, $[3,1,2]$, $[3,2,1]$, $f(p)=7$.  $[1,3,2,3]$, $[1,2,3,2]$, $[1,3,2,1]$, $[1,2,2,3]$, $[1,2,3,2]$, $[1,3,2,1]$, $[1,3,2,2]$, $[1,2,3,2]$, $f(p)=8$.  $[1,3,1,3]$, $[1,3,1,2]$, $[1,3,2,1]$, $[1,3,2,3]$, $[1,2,1,3]$, $[1,2,3,1]$, $[1,2,3,2]$, $[1,2,2,3]$, $f(p)=9$, and $[1,2,2,2]$, $[1,2,2,3]$, $[1,2,3,2]$, $[1,2,3,2]$, $[1,3,2,2]$, $[1,3,2,2]$, $[1,3,3,2]$, $[1,2,2,3]$, $f(p)=10$, and $[1,2,3,3]$, $[1,2,2,3]$, $[1,2,3,2]$, $[1,3,2,2]$, $[1,3,3,2]$, $[1,2,3,2]$, $[1,3,2,2]$, $[1,3,3,2]$, $[1,2,2,3]$, $[1,3,3,3]$, $f(p)=11$, and $[1,3,2,3,3]$.\n\nThe maximum value $f_{max}(2) = 2$, and there are $4$ permutations $p$ of length $2$ such that $f(p)=2$.\n\"\"\"\nimport math\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\n\"\"\"\n\n\"\"\"\nGiven a permutation, write a function that finds the maximum value of f(p), where f(p) is the number of distinct elements among the prefixes of p.\n\nFor example, the prefixes of [1,2,2,3,1,2] are [1,2,2,2], [1,2,2,3], [1,2,3], and [1,2,1,2]. The prefix [1,2,3] has 4 distinct elements, so f(p) = 4.\n\nInput:\n\nThe first line contains an integer t (1 <= t <= 10) \u2014 the number of test cases. The description of the t cases follows.\nThe first line of each test case contains a single integer n (1 <= n <= 10^6) \u2014 the length of the permutation.\nThe second line of each test case contains n integers x_1, x_2,..., x_n (1 <= x_i <= n) \u2014 the permutation.\n\nOutput:\n\nFor each test case, print a single line containing one integer \u2014 the maximum value of f(p).\n\nNote: The answer is guaranteed to fit in a 32-bit integer.\n\nInput\n\nThe first line contains an integer t (1 <= t <= 10) \u2014 the number of test cases. The description of the t cases follows.\nThe first line of each test case contains a single integer n (1 <= n <= 10^6) \u2014 the length of the permutation.\nThe second line of each test case contains n integers x_1, x_2,..., x_n (1 <= x_i <= n) \u2014 the permutation.\nOutput\n\nFor each test case, print a single line containing one integer \u2014 the maximum value of f(p).\nSample Input\n\n2\n4\n1 3 2 4\n5\n1 1 2 3 3\nSample Output\n\n4\n6\n\"\"\""
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"6\") == \"120\"\n\"\"\"\nfrom tools import timing"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('6') == '120'\n\n\n\n-----Test_cases-----\n\nInput\n1\n3\n\nOutput\n4\n\nInput\n2\n2\n\nOutput\n2\n\nInput\n3\n1\n\nOutput\n1\n\nInput\n4\n3\n\nOutput\n8\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(ABABBBACFEYUKOTT) == 4\n\"\"\"\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\nassert solution(\"AAA\") == 1\nprint('The code ran Correctly')\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('ABABBBACFEYUKOTT') == '4'\nassert solution('AAA') == '1'\nprint(\"All cases passed\")"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('ABABCDEFG') == 3\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\nassert solution(\"AAA\") == 1\nassert solution(\"ABCD\") == 0\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\n\"\"\"\n\nfrom math import inf"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('AAB') == 1\nassert solution('ABA') == 1\nassert solution('ABABC') == 2\nassert solution('ABABCD') == 2\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\n"
    },
    {
        "number": 224,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\n\n\"\"\"\n\n\"\"\"\n\nThe solution is not complete yet. Do not submit until you have implemented the entire code and checked the test cases.\n\nYour task is to complete the function solve() which takes the string s as its only input and returns a string containing the minimum number of vowels that must be jumped to be able to move from the beginning of the string to its end.\n\nFor example, the string \"ABACABAB\" can be jumped on the vowels. Thus, the function should return the string \"4\".\n\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('7 3 2 5') == 'NO'\nassert solution('1 7 11 5') == 'YES'\n\n\"\"\""
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\nprint(solution('1 7 11 5'))\nprint(solution('7 3 2 5'))"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\n\n----Solution----\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\"\"\"\n\nimport sys\n\nnums = [int(i) for i in sys.stdin.readline().split()]"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(test_str) == test_res\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n141 592 653') == '653 733'\nassert solution('5\\n10 21 10 21 10') == '31 41'\n\"\"\""
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n141 592 653\") == \"653 733\"\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n141 592 653\") == \"653 733\"\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n141 592 653') == '653 733'\n\nassert solution('5\\n10 21 10 21 10') == '31 41'\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\n10 21 10 21 10\\n') == '31 41'\n\"\"\""
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n141 592 653\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\") == \"31 41\"\n\"\"\"\n\nfrom collections import deque\n\n\"\"\"\nA queue in the worst case is O(n) time and O(n) space for n slices.\n\"\"\"\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n141 592 653\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\") == \"31 41\"\nassert solution(\"5\\n3 2 1 3 2\") == \"4 4\"\nassert solution(\"3\\n2 1 3\") == \"4 4\"\nassert solution(\"5\\n2 2 3 2 2\") == \"5 5\"\n"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''3\n141 592 653\n''') == '653 733'\n\nassert solution('''5\n10 21 10 21 10\n''') == '31 41'\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 226,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n141 592 653') == '653 733'\n\"\"\"\n\n\n\"\"\"\n\"Complete the superDigit function below.\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 6 8') == 2\n\nassert solution('3\\n3 6 5') == -1\nassert solution('6\\n2 4 8 6 10 18') == 3"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '2'\nassert solution('''5\n1 2 3 6 8''') == '2'\nassert solution('''6\n2 4 8 6 10 18''') == '3'\n\n\"\"\""
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(a) == b\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nm = 0\nd = {}\n\nfor i in arr:\n    d[i] = True\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if arr[i] + arr[j] not in d:\n            m = max(m, j - i)"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 3 6 8\") == 2\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 6 8''') == '2'\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == 2\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().strip().split()))\n\nm = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] + a[j] == a[j] + a[i]:\n            m = max(m, j - i)\n\nprint(m + 1 if m else -1)\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 227,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == 2\nassert solution(\"3\\n3 6 5\") == -1\nassert solution(\"6\\n2 4 8 6 10 18\") == 3\n"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"8 8\") == \"Bob\"\nassert solution(\"4 1 4 1\") == \"Alice\"\nassert solution(\"4 3 4 1\") == \"Bob\"\nassert solution(\"4 3 2 1\") == \"Alice\"\nassert solution(\"7 4 6 2 1\") == \"Bob\"\n\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 1 4 1\") == \"Alice\"\nassert solution(\"8 8\") == \"Bob\"\n\n\"\"\""
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8 8\n\"\"\") == \"Bob\"\nassert solution(\"\"\"4 1 4 1\n\"\"\") == \"Alice\"\nassert solution(\"\"\"3 1 4 1\n\"\"\") == \"Alice\"\nassert solution(\"\"\"2 1 2 1\n\"\"\") == \"Bob\"\nassert solution(\"\"\"1 1 2 1\n\"\"\") == \"Alice\"\n"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"8 8\") == \"Bob\"\nassert solution(\"4 1 4 1\") == \"Alice\"\nassert solution(\"3 1 4 1\") == \"Alice\"\n\"\"\"\n\nfrom collections import defaultdict\n\n\"\"\"\nn = int(stdin.readline())\nstones = list(map(int, stdin.readline().split()))\n\nd = defaultdict(int)\n\nfor s in stones:\n    d[s] += 1"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"8 8\") == \"Bob\"\nassert solution(\"4 1 4 1\") == \"Alice\"\n\n\n----\n\n\nclass Solution:\n    def solve(self, input_string):\n        nums = [int(s) for s in input_string.split()]\n        n = nums[0]\n        nums = nums[1:]\n        if n & 1:\n            return \"Bob\"\n        return \"Alice\" if sum(nums[n // 2::2]) < sum(nums[n // 2 + 1::2]) else \"Alice\"\n\n\nassert Solution().solve(\"8 8\") == \"Bob\"\nassert Solution().solve(\"4 1 4 1\") == \"Alice\"\n"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('8 8\\n8 8') == 'Bob'\nassert solution('4 1 4 1\\n3 1 4 1') == 'Alice'\n\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 8') == 'Bob'\nassert solution('4 3 1 4 1') == 'Alice'"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n3 1 4 1\") == \"Alice\"\nassert solution(\"8 8\\n5 5 5 5 5 5\") == \"Bob\"\n\n\"\"\"\n\nimport math\n\nn = int(input().strip())\na = [int(x) for x in input().strip().split()]\n\nAlice = 0\nBob = 0\n\nwhile True:\n    if n < math.ceil(len(a) / 2):\n        Alice += 1\n        break\n\n    Bob += 1\n    n = sum(a) - 2 * sum([a[i] for i in range(n) if i % 2 == 0])\n    a = [i for i in a if i % 2 == 1]"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 8\\n') == 'Bob'\nassert solution('4 3 1 4 1\\n') == 'Alice'\n\nprint('Success')"
    },
    {
        "number": 228,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1 4 1\") == \"Alice\"\nassert solution(\"8 8\") == \"Bob\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3 2 1\") == 'YES'\nassert solution(\"1 2 3 4 5\") == 'NO'\n\n---Problem description---\n\nhttps://codeforces.com/problemset/problem/1541/A\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 3 2 1') == \"YES\"\nassert solution('5\\n1 2 3 4 5') == \"NO\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\n\"\"\"\n\n\"\"\"\nSolution:\nThis is a pretty simple problem, it's easy to grasp but the solution is rather long and requires some bit of explanation.\n\nFirst, we need to know what is the maximum number among the numbers in the array. We will put it in the maximum variable.\n\nThen, we know that Filya can subtract x from the array and add x to the array. To solve this problem, we need to iterate through the array twice.\n\nIn the first loop, we subtract x from every number in the array so that we can add x to the maximum value.\n\nIn the second loop, we add x to every number in the array so that we can subtract x from the maximum value.\n\nNow, we need to check if all numbers in the array are equal.\n\nWe can make an array of n zeros and a value of 1. If all numbers in the array are not equal, then we will return False, because no changes were made to the array.\n\nOtherwise, if all numbers in the array are equal, then we will subtract x from every number in the array, add x to the maximum value, subtract x from every number in the array and add x to the maximum value.\n\nNow, if all numbers in the array are equal, then we know that the maximum value will be 0, so we need to check if all numbers in the array are equal to 0.\n\nIf so, then we know that all numbers in the array are 0, so we need to return True, because no changes were made to the array.\n\nIf not, then we need to add x to every number in the array and subtract x from the maximum value, so that the maximum value will be equal to 0.\n\nThen, we need to subtract x from every number in the array and add x to the maximum value.\n\nThe end of our solution is returning False if all numbers in the array are equal to 0, and returning True if all numbers in the array are not equal to 0.\n\n\"\"\""
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\n\n\"\"\"\nimport itertools\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3 2 1\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'YES'\nassert solution('5\\n1 2 3 5 4') == 'NO'\n"
    },
    {
        "number": 229,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 3 2 1') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('ababa') == '2'\n\"\"\"\nimport sys"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('ababa') == 2\n\"\"\"\n"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"ababa\") == 2\n\"\"\"\nimport sys\nimport string\n"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"ababa\") == 2\n\"\"\"\n\nimport sys"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"ababa\") == 2\n\n\"\"\"\n\n\"\"\"\nWe define a string S is non-empty if S has length greater than 0.\nGiven a string S, find the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping.\nMore formally, find the maximum positive integer length such that there exist integers l_1 and l_2 (1 \\leq l_1, l_2 \\leq N - length + 1) that satisfy the following:\n- l_1 + length \\leq l_2\n- S[l_1+i] = S[l_2+i] (i = 0, 1,..., length - 1)\nIf there is no such integer length, print 0.\n\nInput Specification:\n\nEach input file contains one test case. For each case, the first line contains an integer N (5 \\times 10^3 \\leq N \\leq 10^5), the length of a string S in the input file.\nThe second line contains a string S of length N.\n\nOutput Specification:\n\nFor each test case, print in a line the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping.\n\nSample Input:\n5\nababa\n\nSample Output:\n2\n\nExplanation:\nThe strings satisfying the conditions are a, b, ab, and ba. The maximum length among them is 2, which is the answer.\n\"\"\""
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"ababa\") == 2\n\"\"\"\n"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ababa\") == 2"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('ababa') == 2\nassert solution('aa') == 0\n\n\"\"\"\n\n\"\"\"\nGiven is a string S of length N. Find the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping.\n\nMore formally, find the maximum positive integer len such that there exist integers l_1 and l_2 ( 1 \\leq l_1, l_2 \\leq N - len + 1 ) that satisfy the following:\n - l_1 + len \\leq l_2\n - S[l_1+i] = S[l_2+i] (i = 0, 1,..., len - 1)\nIf there is no such integer len, print 0.\n\n-----Constraints-----\n - 2 \\leq N \\leq 5 \\times 10^3\n - |S| = N\n - S consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nS\n\n-----Output-----\nPrint the maximum length of a non-empty string that occurs twice or more in S as contiguous substrings without overlapping. If there is no such non-empty string, print 0 instead.\n\n-----Sample Input-----\n5\nababa\n\n-----Sample Output-----\n2\n\nThe strings satisfying the conditions are: a, b, ab, and ba. The maximum length among them is 2, which is the answer.\nNote that aba occurs twice in S as contiguous substrings, but there is no pair of integers l_1 and l_2 mentioned in the statement such that l_1 + len \\leq l_2.\n\"\"\""
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"ababa\") == 2\n"
    },
    {
        "number": 230,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('ababa') == '2'\n\nprint(solution('ababa'))\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\""
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n\") == \"2\"\nassert solution(\"8 5\\n\") == \"3\"\nprint(\"You are awesome!\")"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 2\\n') == '2\\n'\nassert solution('8 5\\n') == '3\\n'\nassert solution('7 6\\n') == '3\\n'\nassert solution('8 1\\n') == '5\\n'\nassert solution('4 1\\n') == '1\\n'\n"
    },
    {
        "number": 231,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 5\") == \"3\"\n"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 2 2 1''') == 'YES'"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == \"YES\"\nassert solution(\"5 2\\n1 2 2 1 1\\n1 2\") == \"NO\"\n"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 'YES'\nassert solution('5 2\\n1 1 2 2 1') == 'YES'\nassert solution('5 2\\n1 2') == 'NO'\nassert solution('5 2\\n2 2') == 'NO'\nassert solution('5 2\\n1 1 1 2 2 1') == 'YES'\n\n\"\"\""
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2') == 'YES'\nassert solution('5 2\\n1 2\\n1 2') == 'NO'\n\n'''"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == \"YES\"\n\"\"\""
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == 'YES'\nassert solution(\"5 2\\n1 2 2 1 1\\n1 2\") == 'NO'\n\"\"\"\n"
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == \"YES\"\nassert solution(\"5 2\\n3 3 2 2 1\\n1 2\") == \"NO\"\n\"\"\""
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 2 1\") == \"YES\"\nassert solution(\"5 1 1 2 2\") == \"NO\"\nassert solution(\"1 2 2 3 1\") == \"YES\"\nassert solution(\"5 5 5 5 5\") == \"NO\"\nassert solution(\"7 5 1 3 1 2 1\") == \"NO\"\n\"\"\""
    },
    {
        "number": 232,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 1\\n1 2\") == \"YES\"\n\"\"\"\n\n\"\"\"\n\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e solution(str), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0443 str \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0451 \u0434\u043b\u0438\u043d\u0443 L, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 'a' \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 'b' \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\n-----Input-----\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u0430:\nstr = \"ababa\"\n\n-----Output-----\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u0430:\nL = 6\na: 3\nb: 2\n\n\n-----Example-----\n\nstr = \"ababa\"\nsolution(str)\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Friendship is magic!^^\"\nassert solution(\"3 5\") == \"Mishka\"\nassert solution(\"3 3\") == \"Friendship is magic!^^\"\nassert solution(\"1 5\") == \"Chris\"\nassert solution(\"6 1\") == \"Mishka\"\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5\\n2 1\\n4 2\\n\") == \"Mishka\"\nassert solution(\"2\\n6 1\\n1 6\\n\") == \"Friendship is magic!^^\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\\n\") == \"Chris\"\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n2 1\\n4 2\") == \"Mishka\"\nassert solution(\"2\\n6 1\\n1 6\") == \"Friendship is magic!\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\") == \"Chris\"\n\"\"\""
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(3) == \"Mishka\"\nassert solution(2) == \"Friendship is magic!\"\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n2 1\\n4 2') == 'Mishka'\nassert solution('2\\n6 1\\n1 6') == 'Friendship is magic!^^'\nassert solution('3\\n1 5\\n3 3\\n2 2') == 'Chris'\nassert solution('1\\n6 1\\n1 6') == 'Friendship is magic!^^'\nassert solution('2\\n6 1\\n1 6') == 'Friendship is magic!^^'\n\nprint('Success')\n\nYou can also use `stdin` to get input in interactive mode (in this case you should enter the numbers, each on a separate line)\n\n\"\"\""
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5\\n2 1') == \"Mishka\"\nassert solution('2\\n6 1\\n1 6') == \"Friendship is magic!^^\"\nassert solution('3\\n1 5\\n3 3\\n2 2') == \"Chris\"\n\"\"\"\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 1\\n4 2\") == \"Mishka\"\nassert solution(\"2 6\\n1 6\\n3 3\") == \"Friendship is magic!^^\"\nassert solution(\"3 5\\n1 5\\n3 3\") == \"Chris\"\nassert solution(\"3 5\\n1 5\\n3 4\") == \"Chris\"\n\"\"\"\n\n\nimport sys\n\nN = int(input())\n\nwin_mishka = 0\nwin_chris = 0\nfor i in range(N):\n    mishka, chris = map(int, input().split())\n    if mishka > chris:\n        win_mishka += 1\n    elif mishka < chris:\n        win_chris += 1\n    else:\n        pass\n\nprint(\"Mishka\" if win_mishka > win_chris else \"Chris\" if win_chris > win_mishka else \"Friendship is magic!\")\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 1\\n4 2\") == \"Mishka\"\nassert solution(\"2 6\\n1 6\\n3 3\") == \"Friendship is magic!^^\"\nassert solution(\"3 5\\n2 1\\n4 2\") == \"Chris\"\n\"\"\"\nimport re"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n2 1\\n4 2\") == \"Mishka\"\nassert solution(\"2\\n6 1\\n1 6\") == \"Friendship is magic!\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\") == \"Chris\"\nassert solution(\"1\\n6 1\") == \"Friendship is magic!\"\n"
    },
    {
        "number": 233,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n2 1\\n4 2') == 'Mishka'\nassert solution('2\\n6 1\\n1 6') == 'Friendship is magic!^^'\nassert solution('3\\n1 5\\n3 3\\n2 2') == 'Chris'\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 3\n111\n1*1\n111\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n2 4\n*.*.\n1211\n\"\"\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1111\\n*1*1\\n1111\") == \"YES\"\nassert solution(\"2 4\\n*.*.\\n1211\") == \"NO\"\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n111\\n1*1\\n111\\n\") == \"YES\"\nassert solution(\"3 3\\n111\\n1*1\\n111\\n\") == \"YES\"\nassert solution(\"2 4\\n*.*.\\n1211\\n\") == \"NO\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(input) == expected_result\n\n'''"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n'3 3\\n111\\n1*1\\n111\\n') == 'YES'\nassert solution(\n'2 4\\n1211\\n1211\\n') == 'NO'\n\"\"\""
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1111\\n1111\\n1111') == 'YES'\nassert solution('2 4\\n*.*.\\n1211') == 'NO'\nassert solution('3 3\\n111\\n111\\n111') == 'YES'\nassert solution('4 4\\n1234\\n1234\\n1234\\n1234') == 'YES'\nassert solution('3 2\\n11\\n12\\n13') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n111\\n1*1\\n111\") == \"YES\"\nassert solution(\"2 4\\n*.*.\\n1211\") == \"NO\"\nassert solution(\"3 4\\n1.1.\\n1*1\\n11*\") == \"YES\"\nassert solution(\"3 4\\n*.*.\\n1211\") == \"NO\"\nassert solution(\"2 4\\n*.*.\\n1211\") == \"NO\"\n\"\"\"\nimport numpy as np"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('.12*3.') == 'YES'\nassert solution('.2*2.') == 'YES'\nassert solution('.*.*') == 'YES'\nassert solution('1**1') == 'YES'\nassert solution('.**') == 'YES'\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n111\\n1*1\\n111\") == \"YES\"\nassert solution(\"2 4\\n1211\\n*.*.\\n1211\") == \"NO\"\n"
    },
    {
        "number": 234,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\".*..*.*\") == \"YES\"\nassert solution(\".*.*.*\") == \"YES\"\nassert solution(\".*.*.*\") == \"NO\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('68') == 3\nassert solution('9') == 1\n\"\"\""
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"68\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('68') == '3'\nassert solution('97') == '7'\nassert solution('102') == '3'\nassert solution('99') == '5'\nassert solution('100') == '9'\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('68') == '3'\n\"\"\"\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('68') == 3\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"68\") == \"3\"\nassert solution(\"9\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"42\") == \"42\"\nassert solution(\"200\") == \"1\"\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('68') == '3'\nassert solution('49') == '4'\nassert solution('7') == '1'\nassert solution('91') == '9'\nassert solution('13') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"68\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"101\") == \"1\"\nassert solution(\"1010\") == \"2\"\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8') == '3'\n\"\"\"\n"
    },
    {
        "number": 235,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('68') == 3\nassert solution('97') == 9\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('-o---o-') == 'YES'\nassert solution('o-o') == 'YES'\nassert solution('oo') == 'YES'\nassert solution('oo-o') == 'YES'\nassert solution('oo-ooo') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\n\nprint(solution(\"-o-o--\"))\nprint(solution(\"-o---\"))\nprint(solution(\"ooo\"))\n\nprint(solution(\"-o-o--\"))\nprint(solution(\"-o---\"))\nprint(solution(\"ooo\"))\n\nassert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('oooo') == 'NO'\nassert solution('ooo-o-o') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('-oo') == 'NO'\nassert solution('o') == 'YES'\nassert solution('oo-oo') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o-o-oo') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"--o-o\") == \"NO\"\nassert solution(\"-o-o--o\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-o--o-\") == \"NO\"\nassert solution(\"o--o\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"o-o-o\") == \"NO\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n-o-o--\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n-o---\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\nooo\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n-o-o-o\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\no-o-o-\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"ooooo\") == \"NO\"\n\"\"\"\n\nimport collections\nimport re\n"
    },
    {
        "number": 236,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"-o-o-o-o-o\") == \"YES\"\nassert solution(\"-o--o--o\") == \"YES\"\nassert solution(\"-o-o-o-o-o-o\") == \"YES\"\nassert solution(\"-o-o--o-o-o\") == \"NO\"\nassert solution(\"-o-o-o--o-o-o\") == \"NO\"\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 6 2\") == 2\nassert solution(\"3 10 3\") == 4\nassert solution(\"3 6 1\") == 3\n\"\"\"\nfrom typing import List, Tuple\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 6 2\") == \"2\"\nassert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 6 2\") == 2\nassert solution(\"3 10 3\") == 4\nassert solution(\"3 6 1\") == 3\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 10 3\") == \"4\"\nassert solution(\"4 6 2\") == \"2\"\nassert solution(\"3 6 1\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 6 2') == 2\nassert solution('3 10 3') == 4\nassert solution('3 6 1') == 3\n\"\"\""
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('4 6 2') == '2'\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 6 2\") == \"2\"\n\nassert solution(\"3 10 3\") == \"4\"\n\nassert solution(\"3 6 1\") == \"3\"\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 6 2') == 2\nassert solution('3 10 3') == 4\nassert solution('3 6 1') == 3\n\n\"\"\""
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('7 3 10\\n2 -4 15 -3 4 8 3') == 7\n"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3 10\") == \"7\"\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()]\n\ncost_sum = 0\nstart = 0\nend = 0\n\nfor i in range(n):\n    #print(\"i:\", i)\n    while cost_sum < k:\n        #print(\"start:\", start, \" end:\", end, \" i:\", i, \" cost_sum:\", cost_sum)\n        if i == n-1:\n            if cost_sum + a[i] - k >= 0:\n                cost_sum += a[i] - k\n                break\n            else:\n                break\n        if cost_sum + a[i] - k < 0:\n            cost_sum = 0\n            start = i+1\n            end = start\n        else:\n            cost_sum += a[i] - k\n            end += 1\n    print(\"i:\", i, \"cost_sum:\", cost_sum)\n\nprint(sum(a[start:end]))\n\n\n\"\"\"\n"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3 1000\\n-13 -4 -9 -20 -11\") == '0'\nprint(\"All tests passed.\")\n\n\"\"\"\n"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0\\n1\\n2\\n3\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"\"\"7 3 10\n2 -4 15 -3 4 8 3\"\"\") == '7'\nassert solution(\"\"\"5 2 1000\n-13 -4 -9 -20 -11\"\"\") == '0'\n\n\"\"\"\n\u041f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 - \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u044b\n\n\u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n ^ 2)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u0430\u043c\u044f\u0442\u044c: O(n)\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\\n\") == '7'\nprint('The local tests are done. Click on \"Check\" for more details about tests.')"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\") == 7\n"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\") == \"7\"\nassert solution(\"5 2 1000\\n-13 -4 -9 -20 -11\") == \"0\"\n"
    },
    {
        "number": 238,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7 3 10\\\\n2 -4 15 -3 4 8 3\") == '7'\n\"\"\""
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1') == '0 0\\n1 0\\n1 1'\n\"\"\"\n\nn, m = map(int, input().split())\npoints = []\nmin_point = None\nmax_len = 0\nfor i in range(n):\n    for j in range(m):\n        points.append((i, j))\nfor p in points:\n    dist = 0\n    for q in points:\n        dist += abs(p[0] - q[0]) + abs(p[1] - q[1])\n    if dist > max_len:\n        max_len = dist\n        min_point = p\nfor p in points:\n    dist = 0\n    for q in points:\n        dist += abs(p[0] - q[0]) + abs(p[1] - q[1])\n    if dist > max_len:\n        max_len = dist\n        min_point = p\nfor p in points:\n    dist = 0\n    for q in points:\n        dist += abs(p[0] - q[0]) + abs(p[1] - q[1])\n    if dist > max_len:\n        max_len = dist\n        min_point = p\nfor p in points:\n    dist = 0\n    for q in points:\n        dist += abs(p[0] - q[0]) + abs(p[1] - q[1])\n    if dist > max_len:\n        max_len = dist\n        min_point = p\nprint(*min_point, sep=' ')\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0 0\\n1 0\\n0 1\\n') == '1 1 0 0 1 0 0 1 0 0'\nassert solution('1 1\\n0 0\\n1 0\\n0 1\\n') == '1 1 0 0 1 0 0 1 0 0'\nassert solution('2 1\\n0 0\\n0 0\\n') == '0 0 0 0 0 1 0 0 0 0 0'\nassert solution('2 1\\n0 0\\n0 0\\n') == '0 0 0 0 0 1 0 0 0 0 0'\nassert solution('2 1\\n0 0\\n0 0\\n') == '0 0 0 0 0 1 0 0 0 0 0'\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0 0\\n1 0\\n0 1\\n') == '1 1 0 0\\n0 1\\n0 1'\n\"\"\"\n\nn, m = list(map(int, input().split()))"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == '''1 1 0 0'''\n\"\"\"\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == '0 1 0 0'\nassert solution('0 1') == '0 0 1 0'\nassert solution('0 0') == '0 0 0 0'\nassert solution('1 1') == '1 1 0 0'\nassert solution('1 0') == '0 1 0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1 1 0 0 1 0'\nassert solution('0 10') == '0 0 0 9 9 9'\nassert solution('10 10') == '0 0 0 0 0 9'\nassert solution('1 1') == '1 1 0 0 1 0'\nassert solution('1 1') == '1 1 0 0 1 0'\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"0 1\\n0 0\\n1 0\\n0 1\") == \"0 1\\n0 0\\n1 0\\n0 1\"\n\"\"\"\n\nimport sys\nimport math\n\n\nclass MyClass:\n    def __init__(self, n, m):\n        self.n = n\n        self.m = m\n\n    def solution(self):\n        pass\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0 0\\n1 0\\n0 1\\n0 1\") == \"1 1 0 0 1 0\\n0 1 0 1 0 1 0\\n1 0 1 1 0 1 0\\n0 1 0 1 0 1 0\"\nassert solution(\"0 10\\n0 0\\n0 0\\n0 9\") == \"0 1 0 10 0 9 0\\n0 10 0 0 0 1 9 0\\n0 0 0 0 10 0 1 9\\n0 9 0 0 0 1 10 0\"\n\n\"\"\"\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"0 10\") == \"0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"1 1\") == \"0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 239,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n    \"0 10\"\n) == \"0 1 0 0\"\n\"\"\""
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('003512') == '30021'\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\n\"\"\"\n\nimport re"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(003512) == \"30021\"\nassert solution(199966633300) == \"3036366999\"\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\n\"\"\"\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"12345678\") == \"12345678\"\nassert solution(\"0012345678\") == \"12345678\"\nassert solution(\"001234567\") == \"1234567\"\nassert solution(\"00123456\") == \"123456\"\nassert solution(\"0012345\") == \"12345\"\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"123456789\"\nassert solution(\"0123456789\") == \"23456789\"\nassert solution(\"43210987654321\") == \"4321\"\nassert solution(\"0123456789\") == \"23456789\"\nassert solution(\"001234\") == \"1234\"\n\n\"\"\"\nimport random\n"
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"003512\") == \"30021\"\nprint('The local tests are done. Try Solution to check if your solution is correct')\n\n-----Explanation-----\n\nIn the first test case, the number 3512 can be written as 123, 532, or 3512. These numbers are the smallest.\n\nIn the second test case, the number 6633300 can be written as 633, 3666, or 633300. These numbers are the smallest.\n\"\"\""
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"003512\") == \"30021\"\n\"\"\""
    },
    {
        "number": 240,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3213\") == \"321\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"9\") == \"99\"\nassert solution(\"1010\") == \"1010\"\nassert solution(\"123\") == \"321\"\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\n    '2 1 1 2'\n) == 'Correct'\nassert solution(\n    '3 1 1 3'\n) == 'Correct'\nassert solution(\n    '2 1 1 3'\n) == 'Incorrect'\nassert solution(\n    '3 1 1 2'\n) == 'Incorrect'\nassert solution(\n    '3 1 1 3'\n) == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3\\n2') == 'Correct'\nassert solution('2 1 1 3\\n3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == 'Incorrect'\nassert solution('3 1 1 3') == 'Correct'\n\"\"\"\n\nimport numpy as np\n\nn, m, min, max = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\na.sort()\na = np.unique(a)\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"Correct\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"3 1 1 3\") == \"Incorrect\"\n\"\"\"\n\nn, m, min, max = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\ntemp = set(t)\ntemp.add(min)\ntemp.add(max)"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"3 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 2\") == \"Correct\"\n\"\"\"\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"Correct\"\nassert solution(\"3 1 1 3\") == \"Incorrect\""
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"Correct\"\nassert solution(\"3 1 1 3\") == \"Incorrect\"\n\n\"\"\"\n"
    },
    {
        "number": 241,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == 'Incorrect'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n\"\"\"\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('5') == '0 1 2 3 4 5 6 7 8 9 10'\n\"\"\"\n\nn = int(input())\n\ncount = 0\n\nfor i in range(1, 10000):\n    x = str(i)\n    x = x * n\n    if x[-1] == '0':\n        count += 1\n\nprint(count)\n\nfor i in range(0, count):\n    print(i)\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '0'\nassert solution('100') == '5 6 7 8 9'\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5') == '5 6 7 8 9'\nassert solution('6') == '0'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1') == '5 6 7 8 9'\nassert solution('5') == '0'\n\"\"\""
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"0 5 6 7 8 9\"\n\"\"\"\n\nm = int(input())\ni = 0\nk = 0\narr = []\nwhile True:\n    if i == 0:\n        while i + m <= 9:\n            if i + m == 0:\n                k += 1\n            i += 1\n        print(k)\n        for j in range(k):\n            print(i, end=' ')\n        break\n    else:\n        i -= 1\n        while i + m <= 9:\n            if i + m == 0:\n                k += 1\n            i += 1\n        print(k)\n        for j in range(k):\n            print(i, end=' ')\n        break\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"5\") == \"0\"\nassert solution(\"100\") == \"8\"\nassert solution(\"2\") == \"1\"\nassert solution(\"100000000\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0 5 6 7 8 9\"\n\"\"\"\n\nm = int(input())\n\nk = 0\nfor n in range(1, m+1):\n    if len(str(n)) % 2 == 0:\n        k += 1\n\nprint(k)\nprint(*[n for n in range(1, m+1) if len(str(n)) % 2 == 0], sep=\" \")\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1') == '5\\n5 6 7 8 9'\nassert solution('5') == '0\\n0 1 2 3 4'\nassert solution('0') == '0\\n'\nassert solution('100000') == '0\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 100 1000'\n\n\"\"\"\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1') == '5'\n\nassert solution('5') == '0'\nassert solution('0') == '5'\nassert solution('1') == '5'\nassert solution('1') == '5'\n"
    },
    {
        "number": 242,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '0'\nassert solution('3') == '5'\nassert solution('4') == '0'\nassert solution('5') == '6'\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 1\\n1 2 1') == '2'\nassert solution('2 2\\n1 2 1') == '2'\nassert solution('3 5 3\\n1 2 1\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4') == '3 3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2\\n2 1\\n1 2 3\\n1 2 2\\n2 2 1\") == \"2 2\"\nassert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\nassert solution(\"5 4 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\nassert solution(\"4 3 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n\"\"\"\n\n\nimport sys\nimport unittest\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        assert solution(\"2 3 2\\n2 1\\n1 2 3\\n1 2 2\\n2 2 1\") == \"2 2\"\n        "
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\\n2 1\\n1 2 3\\n1 2 2\") == \"2 2\"\nassert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 3 2\\n2 1\\n1 2 3\\n1 2 2\") == \"2 2\"\nassert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n\n\n-----Hint-----\n\nFor each special vertex find the farthest vertex using breadth-first search.\n\nTo do that we can use the built-in Python functions.\n\nIf you want to know more, read the Wikipedia article on Breadth-first search.\n\nThe general idea for the implementation is very simple:\n\nFor each special vertex, use the built-in Python functions breadth_first_search and depth_first_search to find the farthest vertex.\n\nDon't forget to add the source vertex into the set of visited nodes.\n\nThe code is simple enough. The only question is how to implement breadth_first_search and depth_first_search.\n\nIn the first one, the only problem is how to return the set of visited nodes.\n\nThe other one is how to calculate the distances. You can't traverse all the edges in one step so you need to find the weight of the edges in the path to the farthest vertex from the current vertex.\n\nThe code is simple enough. The only question is how to calculate the weight of the path.\n\nThe first example is the only one which is easy to implement. You can use the built-in Python function distance to calculate the weight of the edges.\n\nThe other two examples are implemented as a graph using the adjacency list and adjacency matrix.\n\nYou can use the adjacency list to implement the breadth-first search.\n\nYou can use the adjacency matrix to implement the depth-first search.\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\\n2 1\\n1 2 3\\n1 2 2\") == \"2 2\"\nassert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\\n1 2 3\\n1 2 2\") == \"2 2\"\nassert solution(\"4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\") == \"3 3 3\"\n\"\"\"\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 3 2\\n2 1\\n1 2 3\\n1 2 2') == '2 2\\n1 2 2'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''\n5 7 2\n1 2 3\n1 3 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1\n3 5 3\n1 2 2\n1 3 2\n2 4 2\n1 4 4\n3 4 1"
    },
    {
        "number": 243,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 5 3\\n1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3') == '3 3 3'\nassert solution('3 2 1\\n1 2 2\\n1 3 3') == '2 2'\n\n-----Challenge-----\n\nIn the previous challenge, the distance to the farthest special vertex was calculated from the vertex to the farthest vertex. Is it possible to calculate distance to all special vertices from the vertex to the farthest vertex without repeating the same calculations?\n\n-----Note-----\n\nIf you are ready to solve this challenge, go ahead! Just go ahead!\n\nI think the above explanation is really helpful and will help you to solve the challenge.\n\"\"\"\n\nimport sys\nimport collections\n\n\"\"\"\nThe algorithm is like the following:\n\nInitialize an empty distance list.\nFor each vertex, we check if it is special.\nIf it is special, add it to the distances list.\nFor each vertex, we search all of its neighbours.\nWe calculate the distance between each of them and the vertex.\nWe take the max distance between all neighbours.\n\nFor the special vertex, we search all of its neighbours.\nWe calculate the distance between each of them and the vertex.\nWe take the max distance between all neighbours.\n\"\"\""
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"5\\n1\") == \"0\"\nassert solution(\"2\\n1\") == \"0\"\nassert solution(\"6\\n2\") == \"1\"\n"
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n0\") == \"1\"\n\"\"\"\n\n\"\"\"\n\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 \u0438 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0441\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430. \u041e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0430\u0441\u0441\u043e\u043c.\n\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 \u0441\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430.\n\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u044b \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\n\u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0420\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0412\u0440\u0435\u043c\u0435\u043d\u0438. \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043a\u0438 \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u044b \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\n\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u043b\u0430\u0441\u0441\u0430 \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043d\u0443\u0436\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u0432\u0438\u0434\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.\n\nclass Super:\n    def __init__(self, var):\n        self.var = var\n\n    def s_method(self):\n        print('Super method called', self.var)\n\nclass RealTime:\n    def __init__(self, var):\n        self.var = var\n\n    def r_method(self):\n        print('RealTime method called', self.var)\n\nclass SuperRealTime(Super, RealTime):\n    def __init__(self, var, **kwargs):\n        Super.__init__(self, var)\n        RealTime.__init__(self, var)\n        self.kwargs = kwargs\n\n    def rt_method(self):\n        print('RealTime method called', self.var)\n        print('Arguments:', self.kwargs)\n\nrt = SuperRealTime(1, two=2, three=3)\nrt.rt_method()\n\n\"\"\"\n\n\"\"\"\n\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 \u0441\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u044b \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\n\u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u0420\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0412\u0440\u0435\u043c\u0435\u043d\u0438. \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043a\u0438 \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u044b \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u044d\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\n\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u043a\u043b\u0430\u0441\u0441\u0430 \u0421\u0443\u043f\u0435\u0440\u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0443\u0436\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0432 \u0432\u0438\u0434\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.\n\nclass Super:\n    def __init__(self, var):\n"
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2\") == \"1\"\n\"\"\""
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\n2') == '1'\nassert solution('1\\n1') == '0'\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\n\"\"\""
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\n\"\"\""
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\""
    },
    {
        "number": 244,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4\\n2') == '1'\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == 'YES'\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\n\n\n\n-----Test Code-----\n\nInput:\n5\n0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\nOutput:\nYES\n\nInput:\n4\n0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\nOutput:\nNO\n\n'''"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\nassert solution(\"3\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\nprint(\"Test Completed\")\n\n\n\n\"\"\""
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\n\"\"\"\n\nn = int(input())\n\ncoordinates = []\nfor _ in range(n):\n    x1, y1, x2, y2 = map(int, input().split())\n    coordinates.append([x1, y1, x2, y2])\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\nprint('The code ran Correctly')"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3') == 'YES'\nassert solution('4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"NO\""
    },
    {
        "number": 245,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\") == \"YES\"\n\nassert solution(\"5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"12 1\") == \"3\"\nassert solution(\"25 20\") == \"0\"\nassert solution(\"10 9\") == \"1\"\n\"\"\"\n\nfrom math import log2"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"12 1\") == \"3\"\nassert solution(\"25 20\") == \"0\"\nassert solution(\"10 9\") == \"1\"\n\"\"\"\n\nfrom tools import timing\n\nimport numpy as np\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n\"\"\"\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1\\n3\\n6\\n10\\n12\\n14\\n15') == '4'\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('10 1') == '1'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 1\") == \"1\"\nassert solution(\"25 20\") == \"0\"\nassert solution(\"10 9\") == \"1\""
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('12 1\\n') == '3'\nassert solution('25 20\\n') == '0'\nassert solution('10 9\\n') == '1'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 246,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == \"YES\"\nassert solution('5\\n0 0\\n0 1\\n1 1\\n2 2\\n') == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2') == 'YES'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 2\") == \"YES\"\nassert solution(\"1\\n1 1\") == \"YES\"\nassert solution(\"1\\n1 1\\n1 3\") == \"NO\"\nassert solution(\"1\\n1 1\\n1 3\\n1 3\") == \"YES\"\nassert solution(\"1\\n1 1\\n1 3\\n2 2\") == \"YES\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\") == \"YES\"\nassert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"NO\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\n\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\n\"\"\"\n\nimport math"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\") == \"YES\"\nassert solution(\"5\\n0 0\\n0 1\\n1 1\\n2 3\") == \"NO\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == 'YES'\nassert solution('1\\n2\\n3\\n1\\n2\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'NO'\n\"\"\"\nfrom typing import List\n\nfrom collections import Counter\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0') == 'YES'\nassert solution('3 4\\n5 -1\\n3 0') == 'YES'\nassert solution('1 3\\n0 1') == 'YES'\nassert solution('3 4\\n5 1\\n3 0') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == \"YES\"\nassert solution('1') == \"YES\"\nassert solution('0') == \"NO\"\nassert solution('0 0') == \"YES\"\nassert solution('0 0\\n0 1') == \"NO\"\n"
    },
    {
        "number": 247,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\") == \"YES\"\nassert solution(\"5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\") == \"NO\"\n\n\"\"\"\n\n\nimport sys\n\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\n\n-----"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\"\n"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1') == 6\n"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 1\") == '6'\nassert solution(\"1 1 1 2\") == '31'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 2 2 1') == '6'\n\"\"\""
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\n\n\"\"\"\n\nfrom math import factorial, sqrt, ceil\n\na, b, k, t = map(int, input().split())\n\nprint((k ** 2 * t * 2) + ((k ** 2) * ceil(sqrt(t))) + (k * t) * (2 * a + b))\n"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 12 3 1\") == \"0\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"1 2 2 1\") == \"6\""
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 2 2 1') == 6\n\"\"\"\n\nimport sys"
    },
    {
        "number": 248,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 1\") == 6\n\"\"\"\nfrom sys import stdin\n\na, b, k, t = map(int, stdin.readline().split())\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 250 185 230') == '1 2'\n\"\"\"\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 250 185 230\") == \"1\"\nassert solution(\"4 250 185 230\") == \"0\"\nassert solution(\"2 300 185 230\") == \"2\"\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 250 185 230\") == '1\\n230'\nassert solution(\"4 250 185 230\") == '0\\n185 230'\nassert solution(\"2 300 185 230\") == '2\\n185 230'"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 250 185 230') == '1'\nassert solution('2 300 185 230') == '2'\nassert solution('4 250 185 230') == '0'\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n\nhttps://www.codewars.com/kata/5ccd78bfce8ef1bbd600001a/train/python"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 250 185 230') == '1\\n230'\nassert solution('4 250 185 230') == '0\\n185 230'\nassert solution('2 300 185 230') == '2\\n185 230'\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 200 185 230') == '1 230'\nassert solution('2 300 185 230') == '0 185 230'\nassert solution('4 250 185 230') == '0 20 185 250'\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 250 185 230') == '1'\nassert solution('4 250 185 230') == '0'\nassert solution('2 300 185 230') == '2'\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''3 300 185 230''') == '2'\nassert solution('''4 300 185 230''') == '0'\nassert solution('''2 300 185 230''') == '2'\n"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 250 185 230') == '1'\nassert solution('4 250 185 230') == '0'\nassert solution('2 300 185 230') == '2'"
    },
    {
        "number": 249,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 200 230 250\") == \"1 0 230 250\"\nassert solution(\"4 200 230 250\") == \"0 0 230 250\"\nassert solution(\"2 300 230 250\") == \"2 230 250\"\n\n\"\"\"\n\nimport sys\nfrom typing import Tuple\n\nINPUT_LINES = sys.stdin.read().splitlines()\nINPUT_LINES = INPUT_LINES[1:]\n\nN, L, x, y = map(int, INPUT_LINES[0].split())\nruler = list(map(int, INPUT_LINES[1].split()))\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\nassert solution(\"100\\n30\") == \"942477.796077\"\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n3') == '3'\nassert solution('3\\n4') == '3'\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"100 30\\n40 10\\n1 4\\n10 7\") == \"942477.796077\"\n\"\"\"\n\nfrom typing import List\nimport math\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 30\") == \"942477.796077000\"\nassert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 30\\n40 10\") == \"942477.796077000\"\nassert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\n\"\"\""
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\"\"\""
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 250,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n100 30\\n40 10\\n1 1\\n9 7\\n1 4\\n10 7\") == \"3983.539484752\"\n\"\"\"\n\n\nimport sys\nfrom math import *\n\nn = int(input())\ncakes = []\nmax_r = 0\nmax_h = 0\nfor _ in range(n):\n    r, h = map(int, sys.stdin.readline().split())\n    cakes.append([r, h])\n    max_r = max(max_r, r)\n    max_h = max(max_h, h)\n\ncakes.sort(key=lambda x: x[1])\n\ndp = [[0 for _ in range(max_r+1)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][0] = 0\n    for j in range(1, max_r+1):\n        if j >= cakes[i][0]:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j - cakes[i][0]] + cakes[i][1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n-1][max_r])\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\") == '2'\n\nassert solution(\"4 5\\n2 3 4 5\") == '2'\n\"\"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\") == 2\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\nh = list(map(int, sys.stdin.readline().split()))\n\nh.sort()"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 3 4 5') == '2'\n\"\"\"\n\nfrom typing import List, Dict"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 4 5') == '2'\nassert solution('5 5\\n3 1 2 2 4') == '2'\nassert solution('5 5\\n4 1 2 3 4') == '1'\nassert solution('5 5\\n5 1 2 3 4') == '0'\nassert solution('5 5\\n4 4 4 4 4') == '0'\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 4 5\") == 2\n\"\"\""
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 4 5\") == \"2\"\nassert solution(\"5 5\\n3 1 2 2 4\") == \"2\"\nassert solution(\"4 5\\n2 3 4 5\") == \"2\"\nassert solution(\"5 5\\n1 1 2 2 4\") == \"0\"\nassert solution(\"5 5\\n2 3 4 5\") == \"0\""
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\") == 2\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 5\\n3 1 2 2 4') == '2'\nassert solution('4 5\\n2 3 4 5') == '2'\n\"\"\"\n\nn, k = tuple(map(int, input().split(' ')))\nh = tuple(map(int, input().split(' ')))\ncost = 0\n\nfor i in range(n):\n    cost += abs(h[i] - max(h))\n\nprint(cost - k)\n"
    },
    {
        "number": 251,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 4 5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 -2 10 -1 4\") == 6\nassert solution(\"8 5 2 5 3 -30 -30 6 9\") == 10\nassert solution(\"3 -10 6 -15\") == 0\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\"\n    \"5 -2 10 -1 4\"\n) == \"6\"\n\nassert solution(\n    \"8\\n\"\n    \"5 2 5 3 -30 -30 6 9\"\n) == \"10\"\n\nassert solution(\n    \"3\\n\"\n    \"-10 6 -15\"\n) == \"0\"\n\nassert solution(\n    \"4\\n\"\n    \"-1 -2 -3 -4\"\n) == \"0\"\n\nassert solution(\n    \"1\\n\"\n    \"1\"\n) == \"0\""
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 -2 10 -1 4\") == 6\nassert solution(\"8 -2 3 -30 6 9\") == 10\nassert solution(\"3 -10 6 -15\") == 0\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 -2 10 -1 4\") == \"6\"\nassert solution(\"8 5 2 5 3 -30 -30 6 9\") == \"10\"\nassert solution(\"3 -10 6 -15\") == \"0\"\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 -2 10 -1 4') == '6'\nassert solution('5 2 5 3 -30 -30 6 9') == '10'\n\"\"\"\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\n-2 10 -1 4') == 6\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == 10\nassert solution('3\\n-10 6 -15') == 0\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('\\n') == '\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('1\\n1') == '1\\n'\nassert solution('2\\n1\\n1') == '1\\n'\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 -2 10 -1 4\") == 6\nassert solution(\"8 5 2 5 3 -30 -30 6 9\") == 10\nassert solution(\"3 -10 6 -15\") == 0\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 -3 2 4\") == \"6\"\nassert solution(\"5\\n5 -2 10 -1 4\") == \"6\"\nassert solution(\"8\\n5 2 5 3 -30 -30 6 9\") == \"10\"\n"
    },
    {
        "number": 252,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 -2 10 -1 4\") == \"6\"\nassert solution(\"5 2 5 3 -30 -30 6 9\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\") == \"NO\"\nassert solution(\"4 2 3\") == \"YES\"\n"
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\""
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n\n\"\"\""
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == 'NO'\nassert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n\"\"\"\n\nimport sys\n\nT = [int(i) for i in sys.stdin.readline().split()]\nprint('YES' if T[0] * T[1] * T[2] >= (T[1] + T[2]) * max(T[0], T[1], T[2]) and T[0] * T[1] * T[2] >= (T[0] + T[2]) * max(T[0], T[1], T[2]) and T[0] * T[1] * T[2] >= (T[0] + T[1]) * max(T[0], T[1], T[2]) else 'NO')\n"
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 2 3') == 'YES'\nassert solution('2 2 3') == 'NO'\n\n\"\"\""
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\""
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\n\"\"\""
    },
    {
        "number": 253,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\n\n\"\"\"\n\nimport math\nimport sys\nimport re\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(None) == None\nassert solution('a') == 0\nassert solution('aaa') == 0\nassert solution('aaaa') == 0\nassert solution('abcddcba') == 4\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abbbcc\") == 2\n\"\"\"\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"abaca\") == 3\nassert solution(\"abcddcba\") == 4\n\"\"\""
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"abaca\") == 3\nassert solution(\"abcddcba\") == 4\n\"\"\"\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"abaca\") == 3\nassert solution(\"abcddcba\") == 4\n\nprint(solution(\"abaca\"))\nprint(solution(\"abcddcba\"))\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\n\nprint(solution('abcddcba'))\nprint(solution('abcddcba'))\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n\"abaca\"\n) == 3\nassert solution(\n\"abcddcba\"\n) == 4\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"abbbbbaccdd\") == 3\nassert solution(\"abaca\") == 3\nassert solution(\"a\") == 0\nassert solution(\"aaa\") == 0\nassert solution(\"ccccccccc\") == 0\n\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def delete_whole_string(self, s: str) -> int:\n        n: int = len(s)\n        result: int = 0\n        i: int = 0\n        while i < n - 1:\n            j: int = i + 1\n            while j < n and s[i] == s[j]:\n                j += 1\n            result += j - i\n            i = j\n        return result\n    def delete_substring(self, s: str) -> int:\n        n: int = len(s)\n        result: int = 0\n        i: int = 0\n        while i < n - 1:\n            j: int = i + 1\n            while j < n and s[i] == s[j]:\n                j += 1\n            if j - i > 1:\n                result += (j - i - 1)\n            i = j\n        return result"
    },
    {
        "number": 254,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('a') == 1\nassert solution('bbbb') == 0\nassert solution('abbcccdddd') == 3\nassert solution('abbccdddd') == 4\nassert solution('abac') == 1\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\nprint(\"Teste unit\u00e1rio passou com sucesso!\")\nassert solution(\"4\\n5\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\nprint(\"Teste unit\u00e1rio passou com sucesso!\")\nassert solution(\"4\\n5\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\nprint(\"Teste unit\u00e1rio passou com sucesso!\")\nassert solution(\"5\\n5\\n1 5 7 9 11 13\\n5\\n5 1 5 7 9 11 13\") == \"4\"\nprint(\"Teste unit\u00e1rio passou com sucesso!\")\nassert solution(\"5\\n5\\n1 5 7 9 11 13\\n5\\n5 1 5 7 9 11 13\") == \"4\"\nprint(\"Teste unit\u00e1rio passou com sucesso!\")\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == 3\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == '3'\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\") == '0'\nassert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\") == '2'"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n1 4 6 2\\n5\\n5 1 5 7 9\") == 3\n\n\"\"\"\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4 6 2\\n5\\n5 1 5 7 9') == '3'\n\nassert solution('4\\n1 2 3 4\\n4\\n10 11 12 13') == '0'\n\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == 3\n\"\"\"\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5\\n5\\n5\\n5\") == \"3\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"0\"\n\"\"\"\n\nfrom typing import List\nimport unittest\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 255,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == 3\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\") == 0\nassert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\") == 2\n\n\"\"\"\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 100\\\\n100 1\\\\n99 99\\\\n99 99\") == \"Team 1\"\n\"\"\"\n\nimport sys\nfrom collections import namedtuple\n\n(a, b) = (int(x) for x in sys.stdin.readline().split())\n(a_, b_) = (int(x) for x in sys.stdin.readline().split())\n\n(a_, b_) = sorted([(a, b), (a_, b_)])\nprint(\"Team 2\" if a_ > b_ else \"Team 1\" if b_ > a_ else \"Draw\")\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 100\n100 1\n99 99\n99 99\n\"\"\") == \"Team 1\"\n\nassert solution(\"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\") == \"Team 2\"\n\nassert solution(\"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\") == \"Draw\"\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1 1\n    2 2\n    3 3\n    2 2\n    \"\"\"\n) == \"Team 1\"\n\nassert solution(\n    \"\"\"\n    1 100\n    100 1\n    99 99\n    99 99\n    \"\"\"\n) == \"Team 1\"\n\nassert solution(\n    \"\"\"\n    1 1\n    2 2\n    3 3\n    2 2\n    \"\"\"\n) == \"Draw\"\n\nassert solution(\n    \"\"\"\n    3 3\n    2 2\n    1 1\n    2 2\n    \"\"\"\n) == \"Team 2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    2 2\n    1 1\n    2 2\n    \"\"\"\n) == \"Draw\""
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 100\\\\n100 1\\\\n99 99\\\\n99 99\") == 'Team 1'\nassert solution(\"1 1\\\\n2 2\\\\n3 3\\\\n2 2\") == 'Team 2'\nassert solution(\"1 1\\\\n2 2\\\\n3 3\\\\n2 2\") == 'Draw'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(stdin_1) == \"Team 1\"\nassert solution(stdin_2) == \"Team 2\"\nassert solution(stdin_3) == \"Draw\"\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 1\\n2 2\\n2 2\") == \"Team 2\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 2\") == \"Team 1\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 2\") == \"Draw\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 2\") == \"Draw\"\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''3 3\n2 2\n1 1\n2 2''') == 'Team 1'\nassert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''1 1\n2 2\n3 3\n2 2''') == 'Draw'\nassert solution('''1 1\n100 100\n99 99\n99 99''') == 'Team 2'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_result\n\nprint(solution(input_data))\n\n\"\"\""
    },
    {
        "number": 256,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''3 3\n2 2\n1 1\n2 2''') == 'Team 2'\nassert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''1 1\n2 2\n3 3\n2 2''') == 'Draw'\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == \"2.4\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == \"2.4\"\n\"\"\"\n\nfrom collections import Counter\nfrom math import sqrt\nfrom sys import stdin\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == '2.4'\n\"\"\"\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == \"2.4\"\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == \"2.4\"\n\"\"\"\n\nimport math\n\nn, k = tuple(map(int, input().split()))"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '2.4'\n\n\"\"\""
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40') == '2.4'\nassert solution('4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40') == '2.4'\n\n\"\"\"\n\n\"\"\"\nIn the first line, print the number of pairs. In the second line, print the coordinates of the first pair (x1, y1) and the hardness of the first pair c1. In the third line, print the coordinates of the second pair (x2, y2) and the hardness of the second pair c2. In the fourth line, print the coordinates of the third pair (x3, y3) and the hardness of the third pair c3. In the fifth line, print the coordinates of the fourth pair (x4, y4) and the hardness of the fourth pair c4.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 30\n - 1 \\leq K \\leq N\n - \\left(-1000 \\leq x_i \\leq 1000\\right)\n - \\left(-1000 \\leq y_i \\leq 1000\\right)\n - \\left(x_i, y_i\\right) \\neq \\left(x_j, y_j\\right) \\left(i \\neq j \\right)\n - 1 \\leq c_i \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nx_1 y_1 c_1\n\\vdots\nx_N y_N c_N\n\n-----Output-----\nPrint the answer.\nIt will be considered correct if its absolute or relative error from our answer is at most 10^{-6}.\n\n-----Sample Input-----\n4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n\n-----Sample Output-----\n2.4\n\nIf we put the heat source at \\left(-0.2, 0\\right), the 1-st, 2-nd, and 3-rd pieces of meat will be ready to eat within 2.4 seconds. This is the optimal place to put the heat source.\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40\") == \"2.4\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 257,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40') == '2.4'\n\"\"\"\n\nimport sys\n\nlines = [line.split() for line in sys.stdin]\nN, K = [int(lines[0][i]) for i in range(2)]\n\nmeat = []\nfor line in lines[1:]:\n    meat.append([int(line[i]) for i in range(2, len(line))])\n\nfrom math import sqrt"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"???00?0\") == \"Monocarp\"\nassert solution(\"0523?\") == \"Bicarp\"\nassert solution(\"0523\") == \"Bicarp\"\n\"\"\"\n\nn = int(stdin.readline())\nticket = stdin.readline().strip()\nsum_first = 0\nsum_last = 0\nfor i in range(n // 2):\n    sum_first += int(ticket[i])\n    sum_last += int(ticket[-(i + 1)])\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0523\") == \"Bicarp\"\nassert solution(\"?054??0?\") == \"Bicarp\"\nassert solution(\"?054??0?1?\") == \"Monocarp\"\nassert solution(\"?054??0?1?1?\") == \"Bicarp\"\nassert solution(\"?054??0?1?1?1?\") == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"0523\") == \"Bicarp\"\nassert solution(\"?054??0?\") == \"Bicarp\"\nassert solution(\"???00?\") == \"Monocarp\"\nassert solution(\"000??0\") == \"Bicarp\"\nassert solution(\"?0???0\") == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"0523\") == \"Bicarp\"\nassert solution(\"?????0\") == \"Bicarp\"\nassert solution(\"???00?\") == \"Bicarp\"\nassert solution(\"054??0?\") == \"Bicarp\"\nassert solution
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"??0?0\") == \"Monocarp\"\nassert solution(\"???00?\") == \"Bicarp\"\nassert solution(\"?054??0?\") == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('0523??0?') == 'Bicarp'\nassert solution('??0?0523') == 'Monocarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n    \"??123456?7????\") == \"Bicarp\"\nassert solution(\n    \"112234567??1234567??\") == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(2) == \"Bicarp\"\nassert solution(8) == \"Bicarp\"\nassert solution(6) == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('????') == \"Bicarp\"\nassert solution('054??0?') == \"Bicarp\"\nassert solution('?????') == \"Bicarp\"\nassert solution('4???') == \"Bicarp\"\nassert solution('8??0?') == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('0523') == 'Bicarp'\nassert solution('054??0?') == 'Bicarp'\nassert solution('???00?') == 'Monocarp'\n\"\"\"\nimport sys\nfrom itertools import product\n\nfrom util import *\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n6 4\\n9 5\") == \"1\"\nassert solution(\"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\") == \"3\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 2\\n6 4\\n9 5') == '1'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1') == '3'\nassert solution('3 7\\n2 2\\n2 3\\n2 4') == '1'"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n6 4\\n9 5\") == \"1\"\nassert solution(\"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\") == \"3\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"3 10\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n3 1\\n3 2\\n3 3\\n3 4\\n4 1\\n4 2\\n4 3\\n4 4\") == \"1\"\n\n\"\"\"\n\n\nimport itertools\nimport operator\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n6 4\\n9 5\\n\") == \"1\"\n\"\"\"\nimport math\nimport collections\nimport sys\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\") == \"3\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"7 7\\n2 2\\n2 3\\n2 4\\n5 6\\n4 9\\n6 1\") == \"3\"\n\"\"\"\n\n\nimport unittest\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n9 5\\n\") == \"1\"\nassert solution(\"7 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\") == \"3\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 2\\n6 4\\n9 5\\n') == '1'\n\"\"\"\n\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == '1'\nassert solution(\"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\") == '3'\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\") == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\n        \"\"\"\n        2 2\n        6 4\n        9 5\n        \"\"\"\n    ) == '1'\n\nassert solution(\n        \"\"\"\n        5 5\n        3 3\n        2 5\n        5 6\n        4 9\n        6 1\n        \"\"\"\n    ) == '3'\n\nassert solution(\n        \"\"\"\n        3 7\n        2 2\n        2 3\n        2 4\n        \"\"\"\n    ) == '1'\n\n\nassert solution(\n        \"\"\"\n        3 7\n        2 2\n        2 3\n        2 4\n        \"\"\"\n    ) == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 4\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"5 6\") == \"1\"\nassert solution(\"4 9\") == \"3\"\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"1 2\") == \"10\"\n\"\"\"\nimport math\n\nm, k = list(map(int, input().split(' ')))\np = (2 ** m - 1) // (2 ** k - 1)\nn = (p + 1) * (p - 1) // 2\nprint(n)"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"7 2\") == \"8\"\nassert solution(\"8 64\") == \"32\""
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"5\"\nassert solution(\"0 0\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 1') == 1\nassert solution('3 2') == 5\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\n\"\"\"\n\nfrom typing import List\n\nfrom helpers import print_vars\n\n__author__ = 'Daniil Kulyukin'\n\nm, k = [int(x) for x in input().split()]\n\ncount_of_numbers = 0\ncount_of_digits = 0\n\nn = 0\nwhile count_of_numbers <= m:\n    n += 1\n    count_of_digits = n * (2 ** n)\n    count_of_numbers = count_of_digits - k + 1\n\nprint(n)"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\n\"\"\"\n"
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"5\""
    },
    {
        "number": 260,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\n\"\"\"\n\nimport unittest\nfrom collections import defaultdict\nimport re\n"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"16\\n.*.*...*.*.\\n\") == \"yes\"\nassert solution(\"11\\n.*.*...*.*.\\n\") == \"no\"\nassert solution(\"20\\n
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('.'**3) == 'yes'\nassert solution('*.*...*.*') == 'no'\n\"\"\""
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"..*.*\") == \"no\"\nassert solution(\"**.*..*.***.**.**\") == \"yes\""
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\".*.*...*.*.\") == \"yes\"\nassert solution(\"**.**.**.**.**.**\") == \"yes\"\nassert solution(\"**.**.*.*.**.*.**\") == \"no\"\nassert solution(\"*.**.*.*.**.*.**\") == \"yes\"\n\n\"\"\"\nimport re\nfrom functools import lru_cache"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"..*...*.*.\") == \"yes\"\nassert solution(\"**..**.*\") == \"yes\"\nassert solution(\"*.***.*.\") == \"no\"\nassert solution(\"****.*.*\") == \"yes\"\nassert solution(\"****.*.**\") == \"yes\"\n"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('.**.*..***.**.\\n') == 'yes'\nassert solution('.*.*...*.*.\\n') == 'no'\nassert solution('.*.*...*.*.\\n') == 'yes'\nassert solution('.*.*...*.*.\\n') == 'no'\nassert solution('.**.*..***.**.\\n') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"16.**.*..*.***.**.\\n\") == 'yes'\nassert solution(\"11.**.*.*.*.*.\\n\") == 'no'"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\".*.*...*.*.\\n\") == \"yes\"\nassert solution(\"*.**.*..*.***.**.\\n\") == \"yes\"\nassert solution(\".*.*...*.*.\\n\") == \"no\"\nassert solution(\".*.*..*.*.\\n\") == \"no\"\nassert solution(\"...*...*.*.\\n\") == \"yes\"\n\n\"\"\"\n"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('**.*.') == 'yes'\nassert solution('**.*..*') == 'yes'\nassert solution('***.**.**') == 'yes'\nassert solution('**.*.*') == 'yes'\nassert solution('**.*.*.') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('16.**.**.**.***.**.\\n**.**.*..*.***.**.\\n') == 'yes'\nassert solution('11.**.*...*.*.\\n**.**.*..*.***.**.\\n') == 'no'\n\n\"\"\"\n"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '9'"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 0 2\\n3 5 7\\n8 1 6\") == \"9\"\nassert solution(\"4 0 2\\n3 5 7\\n8 1 6\") == \"1\""
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 0 2\\n3 5 7\\n8 1 6') == '9'\nassert solution('1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1') == '1'\nassert solution('1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\n\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 0 2\\n3 5 7\\n8 1 6\") == \"9\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"-\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 0 2\") == \"9\"\nassert solution(\"4 1 1 1\") == \"1\"\nassert solution(\"4 1 1 1\") == \"1\"\nassert solution(\"4 1 1 1\") == \"1\"\nassert solution(\"4 1 1 1\") == \"1\"\n\"\"\"\n\n\"\"\"\n-   If the given numbers are greater than 10^9, there is no answer.\n\n-   The main idea is to form the required number by solving the problem of squares: n(n + 1) / 2 = (n * (n + 1) / 2) + 1. The numbers in the magic grid are stored in the matrix, each of them corresponds to a row and a column of the matrix.\n\n-   The magic grid must be a magic square, so for each column in the grid there must be the same number. For each row in the grid there must be the same number. Also, the numbers in the main diagonal of the grid must be the same.\n\n-   If the matrix is not a magic square, there is no answer. Otherwise, we can fill in any number to make the matrix a magic square.\n\n-   To make the grid a magic square, we need to fill in the number for the empty cell so that the sum of each row, each column, and the two diagonals are equal.\n\n-   To fill in a number, we try to divide the number by the smallest possible power of 10 (e.g., if the number is 12, try to divide the number by 10^3 and then by 10^2 and so on).\n\n-   For example, if the number is 11122233, we try to divide it by 10^3, which gives 111122 (111222 has length 4). Then we try to divide it by 10^2 which gives 111222 (111222 has length 4). If we divide the number by 10^1, which gives 11122 (11122 has length 4), then the number is already a magic number.\n\n-   If the number cannot be divided by 10^x such that the remaining number has the same length as the original number, the number is not a magic number.\n\n-   If we cannot form a magic number for the empty cell, the magic number cannot be formed.\n\n-   Because the numbers in the grid must be positive, the number is positive if it is in the magic grid, and 0 if it is not.\n\n-   Then, we can solve the problem of squares with a bit of math.\n\n-   We have that:\n\n    n(n + 1) / 2 = (n * (n + 1) / 2) + 1\n\n-   If we simplify the right side:\n\n    (n * (n + 1) / 2) + 1 = n^2 + n + 1\n\n-   Then we have:\n\n    n^2 + n + 1 = (n + 1)(n + 2) / 2\n\n-   If we simplify the right side:\n\n    (n + 1)(n + 2) / 2 = n^2 + n + 1\n\n-   We have:\n\n    n^2 + n + 1 = (n + 1)(n + 2) / 2\n\n-   Then, we can simplify this by simplifying the n^2 and n^2 terms:\n\n    (n + 1)(n + 2) / 2 = n(n + 1) / 2 + n + 1\n\n-   The sum of the n terms on the right side is equal to the sum of the n + 1 terms on the left side:\n\n    n(n + 1) / 2 = n(n + 1) / 2 - n + 1\n\n-   From this we get:\n\n    n(n + 1) / 2 = n(n + 1) / 2 - n + 1\n\n-   We substitute n = x - 1:\n\n    n(n + 1) / 2 = x - 1(x + 1) / 2 - 1 + 1\n\n-   We substitute x = n^2 + n + 1:\n\n    n(n + 1) / 2 = n^2 + n + 1\n\n-   We substitute n = x - 1:\n\n    n(n + 1) / 2 = x - 1(x + 1) / 2 - 1 + 1\n\n-   We substitute x = n(n + 1) / 2:\n\n    n(n + 1) / 2 = n(n + 1) / 2 * n\n\n-   Let's simplify the expression:\n\n    n(n + 1) / 2 = n(n + 1) / 2 * n = n^3\n\n-   We substitute n = x - 1:\n\n    n(n + 1) / 2 = x - 1(x + 1) / 2 * x = x^3 + x^2 + x + 1\n\n-   We substitute x = n^3 + n^2 + n + 1:\n\n    n(n + 1) / 2 = n^3 + n^2 + n + 1\n\n-   We substitute n = x - 1:\n\n    n(n + 1) / 2 = x - 1(x + 1) / 2 * x = x^3 + x^2 + x + 1\n\n-   We substitute x = n^3 + n^2 + n + 1:\n\n    n(n + 1) / 2 = n^3 + n^2 + n + 1 = x\n\n-   We solve n = x:\n\n    n = x = 5\n\n-   We got the correct answer: n = 5.\n\n-   Note that if the initial number is 11122233, n = x = 5, and the magic number is 11122233.\n\n\"\"\"\n"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 0 2\\n3 5 7\\n8 1 6\") == '9'\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == '1'\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == '-1'"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 0 2\\n3 5 7\\n8 1 6\\n') == '9'\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n    '4\\n'\n    '1 1 1 1\\n'\n    '1 1 0 1\\n'\n    '1 1 1 1\\n'\n    '1 1 1 1'\n) == '1'\n\nassert solution(\n    '4\\n'\n    '1 1 1 1\\n'\n    '1 1 0 1\\n'\n    '1 1 1 1\\n'\n    '1 1 1 1'\n) == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 1 1\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '9'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '1'\n\n'''\n\n\n\n\n\n\n\nimport math"
    },
    {
        "number": 262,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 0 2\\n3 5 7\\n8 1 6\") == \"9\"\nassert solution(\"4 0 2\\n3 5 7\\n8 1 6\") == \"1\"\nassert solution(\"1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\\n\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\n\n\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n1\\n6\\n5\\n\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\nassert solution(\"1\\n5\\n1\\n4\\n1\\n\") == \"2 6\"\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == '3 7'\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1\n''') == '3 7'\nassert solution('''1\n10\n5\n''') == '15 15'\nassert solution('''3\n7\n1\n6\n5\n''') == '6 12'\nassert solution('''3\n7\n1\n6\n5\n''') == '7 13'\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\") == \"6 12\"\n\"\"\""
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1') == '3 7'\nassert solution('1\\n10\\n5\\n') == '15 15'\nassert solution('3\\n7\\n1\\n6\\n5\\n') == '6 12'\nassert solution('3\\n7\\n1\\n6\\n5\\n') == '6 12'"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\\n\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\n\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\nn = int(stdin.split()[0])\nm = int(stdin.split()[1])\nb = [int(el) for el in stdin.split()[2:]]\nb.sort()\n\nk = m\nfor i in range(len(b)):\n    k -= b[i]\n"
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == \"3 7\"\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\\n\") == \"6 12\"\nassert solution(\"3\\n7\\n1\\n6\\n5\") == \"7 13\"\n\n-----\n\n\u0420\u0430\u0437 \u0432 \u0432\u0435\u043a \u0431\u0440\u0435\u043d\u0434 \u041b\u0443\u043a\u0430 \u0441 \u041a\u043e\u0441\u0442\u0438\u043d\u043e\u0439 \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u043d\u0430\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0431\u0435\u0437\u0432\u043e\u0437\u043c\u0435\u0437\u0434\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0430\u043f\u0442\u0435\u0447\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0446\u0438\u0438. \u0412 \u0431\u0430\u0437\u0435 \u0443 \u043d\u0438\u0445 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0432\u0441\u0435\u0433\u043e $n$ \u043c\u0435\u0441\u0442\u0430, \u043f\u043e\u043a\u0430 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445 \u0441\u0442\u043e\u0438\u0442 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0430\u043f\u0442\u0435\u0447\u043d\u044b\u0439 \u0441\u043f\u0438\u0440\u0442. \u0417\u0430 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u0441\u0435\u043c \u0431\u0440\u0435\u043d\u0434\u043e\u043c \u041b\u0443\u043a\u0430 \u0437\u0430\u043a\u0430\u0437\u0430\u043b\u0438 $m$ \u043d\u043e\u0432\u044b\u0445 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439. \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 $n$ \u043c\u0435\u0441\u0442, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u0431\u044b\u043b\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043d\u043e\u0432\u043e\u0439 \u0434\u0435\u0442\u0430\u043b\u0438. \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0430 \u0437\u0430\u043f\u0430\u0441\u044b \u0441\u043f\u0438\u0440\u0442\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0440\u0435\u043d\u0434\u0430.\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0447\u0438\u0441\u043b\u043e $n$, \u0437\u0430\u0442\u0435\u043c \u0441\u0430\u043c\u043e \u0447\u0438\u0441\u043b\u043e $n$ \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0435, \u0437\u0430\u0442\u0435\u043c \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e $m$, \u0437\u0430\u0442\u0435\u043c \u0441\u0430\u043c\u0438 $m$ \u043d\u043e\u0432\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 $m$ \u0441\u0442\u0440\u043e\u0447\u043a\u0430\u0445, \u0438 \u0437\u0430\u0442\u0435\u043c \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u0442\u0430\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u043f\u0440\u0438\u043d\u044f\u043b \u043f\u0440\u0438\u043e\u0431\u0440\u0435\u0441\u0442\u0438. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0432 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u0442\u0430\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435\u043c\u0438 \u0431\u0440\u0435\u043d\u0434\u0430\u043c\u0438 \u041b\u0443\u043a\u0430. \u0414\u0435\u0442\u0430\u043b\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442 \u0438\u0445 \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, \u0432\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442 \u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u0442\u0443 \u0430\u043f\u0442\u0435\u0447\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0440\u0442\u0430 \u0438 \u0442\u0440\u0435\u0442\u044c\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u044b\u0432\u0435\u0434\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u043c\u0435\u0441\u0442, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u0431\u044b\u043b\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043d\u043e\u0432\u043e\u0439 \u0434\u0435\u0442\u0430\u043b\u0438. \u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n\n\n-----\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $n$, \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u2014 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $m$ \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f "
    },
    {
        "number": 263,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == \"3 7\"\n\nassert solution(\"1\\n10\\n5\\n\") == \"15 15\"\n\nassert solution(\"3\\n7\\n1\\n6\\n5\") == \"6 12\"\n\nassert solution(\"3\\n7\\n1\\n6\\n5\") == \"6 12\"\n"
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"128\"\nassert solution(\"3 3\") == \"128\"\n\"\"\""
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"128\"\n\"\"\"\n\nimport unittest\n\n\nclass Solution:\n    def solution(self, n, m):\n        return (self.mod_n_choose_k(n, m) + self.mod_n_choose_k(n, m - 1)) % (10 ** 9 + 7)\n\n    def mod_n_choose_k(self, n, k):\n        return ((n * self.mod_n_choose_k(n - 1, k)) - self.mod_n_choose_k(n - 1, k - 1)) % (10 ** 9 + 7)\n\n    # For the nth row, the number of ways to choose k seats from the m slots is nCk * (mC(n-1) + k)\n    # For the (n-1)th row, the number of ways to choose k seats from the m slots is nCk * (mC(n-2) + k)\n    #...\n    # For the 1st row, the number of ways to choose k seats from the m slots is nCk * m\n\n    # This solution uses a recursive formula for each row, starting from the bottom.\n    # It calculates the ways to choose k seats from m slots in the (n+1)th row by adding the ways to choose k seats from m slots\n    # in the nth row with the ways to choose k seats from m slots in the nth row.\n    # Since the ways to choose k seats from m slots is equal to the number of ways to choose k seats from (m-1) slots,\n    # the recursion is then mC(n-1) + k.\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(\"3 3\"), \"128\")\n        self.assertEqual(solution(\"6 3\"), \"314\")\n        self.assertEqual(solution(\"6 6\"), \"12\")\n        self.assertEqual(solution(\"5 10\"), \"12\")\n        self."
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"128\"\n"
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"128\""
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"3 3\\n2 1\") == \"64\"\n\"\"\""
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 3\\n') == '128'\n\"\"\""
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == '1353'\nprint(solution(stdin))\n\n\"\"\"\n\nfrom collections import defaultdict\n\nmodulo = 10 ** 9 + 7\n\nN, M = [int(i) for i in stdin.strip().split()]\n\ndp = defaultdict(int)\ndp[0] = 1\ndp[1] = 2\n\nfor i in range(2, N + 1):\n    dp[i] = dp[i - 1] * 2 + dp[i - 2]"
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"128\"\n\"\"\"\n"
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"128\"\n\"\"\"\n\nfrom collections import Counter, defaultdict\n\n\nclass Seat:\n    def __init__(self, c: str, is_row: bool):\n        self.c = c\n        self.is_row = is_row\n        self.row_idx = -1\n        self.col_idx = -1\n\n    def set_idx(self, row_idx: int, col_idx: int):\n        self.row_idx = row_idx\n        self.col_idx = col_idx\n\n\nclass Plane:\n    def __init__(self, n_rows: int, n_cols: int, n_passengers: int):\n        self.n_rows = n_rows\n        self.n_cols = n_cols\n        self.n_passengers = n_passengers\n        self.seats = [Seat(c, is_row=i % 2 == 0) for i, c in enumerate([\"F\" for i in range(n_cols)] + [\"B\" for i in range(n_cols)])]\n\n    def assign_passenger(self, passenger_id: int, row_idx: int, col_idx: int):\n        self.seats[passenger_id].set_idx(row_idx, col_idx)\n\n    def _get_count(self, row_idx: int, col_idx: int, row_count: int, col_count: int, is_row: bool):\n        row_count = self.n_rows if is_row else row_count\n        col_count = self.n_cols if not is_row else col_count\n        row_diff = max(0, row_idx - row_count)\n        col_diff = max(0, col_idx - col_count)\n\n        count = 0\n        for i in range(row_count):\n            for j in range(col_count):\n                seat = self.seats[row_idx + i + col_diff + j * row_count]\n                if seat.is_row == is_row:\n                    count += 1\n        return count\n\n    def get_count(self, row_idx: int, col_idx: int):\n        return self._get_count(row_idx, col_idx, row_count=self.n_rows, col_count=self.n_cols, is_row=True) \\\n            + self._get_count(row_idx, col_idx, row_count=self.n_rows, col_count=self.n_cols, is_row=False)\n\n    def is_seat_occupied(self, row_idx: int, col_idx: int):\n        return self.get_count(row_idx, col_idx) > 0\n\n    def is_all_seats_occupied(self):\n        return all([self.is_seat_occupied(i, j) for i, j in zip([i for i in range(self.n_rows)], [j for j in range(self.n_cols)])])\n\n    def solve(self):\n        occupied_seats_count = 0\n        n_occupied_seats = defaultdict(int)\n        occupied_seats = []\n\n        for passenger_id in range(1, self.n_passengers + 1):\n            if self.is_all_seats_occupied():\n                break\n\n            seats_to_choose = []\n            for seat in self.seats:\n                if seat.is_row == True:\n                    occupied_seats_count += 1\n                else:\n                    occupied_seats_count += (seat.row_idx + seat.col_idx)\n\n                if seat.is_row == True and seat.row_idx > 0:\n                    if seat.row_idx - 1 == self.n_rows - 1:\n                        continue\n                    if self.is_seat_occupied(seat.row_idx - 1, seat.col_idx):\n                        seats_to_choose.append(seat)\n\n                if seat.is_row == False and seat.col_idx > 0:\n                    if seat.col_idx - 1 == self.n_cols - 1:\n                        continue\n                    if self.is_seat_occupied(seat.row_idx, seat.col_idx - 1):\n                        seats_to_choose.append(seat)\n\n            if len(seats_to_choose) == 0:\n                return 0\n\n            seat = min(seats_to_choose, key=lambda s: s.get_count(s.row_idx, s.col_idx))\n            seat.set_idx(seat.row_idx + 1, seat.col_idx)\n            occupied_seats.append(seat)\n\n            occupied_seats_count -= seat.get_count(seat.row_idx, seat.col_idx)\n            n_occupied_seats[seat.c] += 1\n\n        return n_occupied_seats['F'] * n_occupied_seats['B'] % (10**9 + 7)\n"
    },
    {
        "number": 264,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"128\"\n"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\"\"\"\n) == \"2 3\"\n\n\"\"\"\n3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n3 2 3 9\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n\"\"\"\n\nassert solution(\"\"\"5 3\n1 1\n1 2\n1 3\n1 4\n1 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n4 4 1 3 5\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1 9 2 8\n5 4 1"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9''') == '2 3'\n\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4''') == '1 2'\n\nassert solution('''1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8''') == '2 4'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('\\n') == '\\n'\nassert solution('5\\n4\\n1\\n2\\n3\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n') == '4\\n2\\n'\nassert solution('5\\n4\\n1\\n2\\n3\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n') == '4\\n2\\n'\n"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4''') == '1 2'\n\nassert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9''') == '1 2'\n\nassert solution('''5 5\n1 1\n1 2\n1 3\n1 4\n1 5\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n40 5 1 2 3 4\n50 5 1 2 3 4''') == '2 4'\n\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n1 5\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4') == '1 2'\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\nf = [[int(i) for i in stdin.readline().split()] for j in range(n)]\nb = [[int(i) for i in stdin.readline().split()] for j in range(m)]\n\nf = [list(set(j)) for j in f]"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(input) == expected_result, 'Expected: {}, Actual: {}'.format(expected_result, actual_result)\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4') == '1 2'\n\"\"\"\nimport heapq\nimport math\nimport sys"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4') == '2 3'\nassert solution('5 3\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '1 2'\nassert solution('5 3\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '2 4'\nassert solution('5 3\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '1 2'\nassert solution('5 3\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '2 4'\nassert solution('3 4\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\\n') == '1 2'\nassert solution('4 4\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\\n') == '1 2'\n\n\"\"\"\n\n\nimport sys\nfrom itertools import combinations\nfrom typing import List, Tuple\n"
    },
    {
        "number": 265,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('1') == '1'\nassert solution('1 2') == '2 1'\nassert solution('2 1') == '1 2'\n"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 0\") == \"-1 -1\"\nprint(\"Passed\")"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 15\") == \"69 96\"\n\"\"\"\n"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 15\") == '69 96'\n\"\"\""
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 0') == '-1 -1'\nassert solution('2 15') == '69 96'\nassert solution('1 1') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 15\") == \"69 96\"\n\"\"\"\n\nlength, sum_of_digits = [int(el) for el in stdin.split()]\n\nmin_num = -1\nmax_num = -1\n\nfor i in range(1, length + 1):\n    for j in range(10 ** (i - 1), 10 ** i):\n        if sum(int(digit) for digit in str(j)) == sum_of_digits:\n            if j < min_num or min_num == -1:\n                min_num = j\n            if j > max_num or max_num == -1:\n                max_num = j"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 0\") == \"-1 -1\"\nassert solution(\"100 90\") == \"22 89\"\nassert solution(\"101 99\") == \"11 88\"\nassert solution(\"101 101\") == \"11 99\"\n"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(2, 15) == \"69 96\"\nassert solution(3, 0) == \"-1 -1\"\n\n---"
    },
    {
        "number": 266,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\n\"\"\""
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('10 50 2') == 1230\nassert solution('1 2345 10') == 2750685\nassert solution('101 154 2') == 2189\nassert solution('10 9 20') == 15\nassert solution('10 9') == 9\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 50 2\") == '1230'\nassert solution(\"1 2345 10\") == '2750685'\nassert solution(\"101 154 2\") == '2189'"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n\n\"\"\"\n"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\nassert solution
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''10 50 2''') == '1230'\nassert solution('''1 2345 10''') == '2750685'\nassert solution('''101 154 2''') == '2189'"
    },
    {
        "number": 267,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\n"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 3 10\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\n"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(test_input) == test_result\n"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 2 5\\n10 16 22') == 'YES'\nassert solution('6 2 3\\n4 5 3 13 4 10') == 'YES'\nassert solution('6 2 3\\n7 2 7 7 4 2') == 'NO'\nassert solution('4 2 4\\n4 5 3 13 4 10') == 'NO'\n\nprint(solution(input()))\n"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 3 10\\n7 2 7 7 4 2\") == 'YES'\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == 'YES'\nassert solution(\"3 2 5\\n10 16 22\") == 'NO'\n"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 3 10\\n7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == \"YES\"\nassert solution(\"3 2 5\\n10 16 22\") == \"NO\""
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 3 10\\n7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\\n10 16 22\") == \"NO\"\nassert solution(\"3 2 5\\n10 16 22\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 3 10\\\\n7 2 7 7 4 2\\\\n\") == \"YES\"\nassert solution(\"6 2 3\\\\n4 5 3 13 4 10\\\\n\") == \"YES\"\nassert solution(\"3 2 5\\\\n10 16 22\\\\n\") == \"NO\"\n\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 3 10\\n7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == \"YES\"\nassert solution(\"3 2 5\\n10 16 22\") == \"NO\""
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('7 2 7 7 4 2') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('6 3 5') == 'NO'"
    },
    {
        "number": 268,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('6 3 10\\n7 2 7 7 4 2') == \"YES\"\nassert solution('6 2 3\\n4 5 3 13 4 10') == \"YES\"\nassert solution('3 2 5\\n10 16 22') == \"NO\"\n"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"RYBGRYBGR\") == (0, 0, 0, 0)\nassert solution(\"!RGYB\") == (0, 1, 0, 0)\nassert solution(\"!!!!YGRB\") == (1, 1, 1, 1)\nassert solution(\"!GB!RG!Y!\") == (2, 1, 1, 0)\n\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"RYBGRYBGR\") == (0, 0, 0, 0)\nassert solution(\"!RGYB\") == (0, 1, 0, 0)\nassert solution(\"!!!!!YGRB\") == (1, 1, 1, 1)\nassert solution(\"!GB!RG!Y!\") == (2, 1, 1, 0)\n\n\n\"\"\"\n\nimport re"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n\nprint(\"The local tests are done.\")"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!GB!RG!Y!\") == \"1 1 1 1\"\n"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!GB!RG!Y!\") == \"1 1 1 1\"\n\n\"\"\"\n"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"RBYG\") == \"0 1 0 1\"\nassert solution(\"RRRR\") == \"0 0 0 0\"\n\"\"\"\n\nfrom collections import defaultdict\nimport re\n\ns = input()"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('RBYGGYBBRRB') == '0 0 0 0'\nassert solution('YBRYYYBBRYB') == '1 1 1 1'\nassert solution('BBRRYYBYYGB') == '0 1 1 0'\nassert solution('RRYGGGGBBBRRB') == '0 1 1 0'\nassert solution('BBRRYRBRYGG') == '1 1 1 1'\n"
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"RYBGRYBGR\") == (0, 0, 0, 0)\nassert solution(\"!RGYB\") == (0, 1, 0, 0)\nassert solution(\"!!!!YGRB\") == (1, 1, 1, 1)\n\"\"\""
    },
    {
        "number": 269,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y! \") == \"2 1 1 0\"\n\"\"\""
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(test_input) == test_output\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\\n\") == \"1.5\"\n\"\"\""
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\") == \"1.5\"\n\"\"\""
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\") == \"1.5000000000\"\n\"\"\"\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nrooms = []\nfor _ in range(N):\n    rooms.append(list(map(int, sys.stdin.readline().split())))\n\nans = 0\n\nfor a, b in rooms:\n    ans += b/a\n\nprint(ans)\n"
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 2\n3 1\n2 3\n\"\"\"\n) == \"2.0\"\nassert solution(\n\"\"\"\n3 3\n1 2\n3 1\n2 3\n\"\"\"\n) == \"1.5\"\nassert solution(\n\"\"\"\n3 3\n1 3\n2 3\n1 2\n\"\"\"\n) == \"1.5\"\n\n\"\"\"\n100/100 - 5.89s\n\"\"\"\n"
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\"\"\"\n\nimport sys\n\nfrom math import sqrt\n"
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\") == \"1.5000000000\"\n\"\"\""
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\") == \"1.5000000000\"\n\"\"\"\n\nn, m = map(int, stdin.readline().strip().split())\ns, t = [], []\nfor i in range(m):\n    a, b = map(int, stdin.readline().strip().split())\n    s.append(a)\n    t.append(b)\n\nfrom collections import defaultdict\n\ndd = defaultdict(int)\nfor i in range(1, n):\n    for j in range(i):\n        dd[i, j] = dd[j, i]\n\ndd.default_factory = lambda: None\n\nans = 1.0\nfor i in range(m):\n    ans = min(ans, dd[s[i], t[i]])\n\nprint(ans / m)\n"
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\\n\") == '1.5000000000'\n\"\"\"\nimport math\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\npassages = [list(map(int, input().split())) for _ in range(M)]"
    },
    {
        "number": 270,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\") == \"1.5\"\n\"\"\"\n\nfrom collections import defaultdict, deque\nfrom decimal import Decimal\nfrom math import gcd\nimport numpy as np\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\n\"\"\"\n\nn = input()\nn = int(n)"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4722\") == \"4720\"\nassert solution(\"5432359\") == \"5432360\"\n\"\"\""
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5') == 0\nassert solution('113') == 110\nassert solution('1000000000') == 1000000000\nassert solution('5432359') == 5432360\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\""
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\n"
    },
    {
        "number": 271,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('5432359') == '5432360'\nassert solution('0') == '0'\nassert solution('534') == '534'\n"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('helloworld') == 'ehoolwlroz'\nassert solution('hastalavistababy') == '0'\n"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"helloworld\") == \"h e l l o w l o r l d\"\nassert solution(\"hastalavistababy\") == \"h a s t a l a v i s t a b a y\"\nassert solution(\"merrychristmas\") == \"m e r r y c h i s t a b a y\"\nassert solution(\"aaaabaaaabaaa\") == \"a a a b a b a a b a a a a b a a b a a a b a a a b a a b a a a b a b a a b a a a b a b a b a a a b a a b a a a b a b a b a a b a b a b a a b a a b a b a a b a a b a b a b a a b a b a b a a b a b a b a a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('helloworld') == 'h e l l o w l o r l d'\nassert solution('hastalavistababy') == 'h a s t a l a v i s t a b a'\nassert solution('merrychristmas') == 'c h i s t a m e r r y'\n\nprint('Success')"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('helloworld') == 'h e l l o w l o r l d'\nassert solution('hastalavistababy') == 'h e l l o w l o r l d'\nassert solution('merrychristmas') == 'h e l l o w l o r l d z'\n\"\"\""
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e'\nassert solution('merrychristmas') == '-1'\nprint('Success')\n"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('helloworld') == 'h e l l o w l o r l d'\nassert solution('hastalavistababy') == 'h a s t a l a v i s t a b a'\n\nprint('The code ran Correctly')"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"hello world\") == \"h e\"\nassert solution(\"hastalavistababy\") == \"0\"\nassert solution(\"merrychristmas\") == \"0\"\n\"\"\"\n\ns1, s2 = (input() for _ in range(2))\n\nd = set()\nfor i in range(len(s1)):\n    if s1[i]!= s2[i]:\n        d.add((s1[i], s2[i]))"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('helloworld') == 'h e l l o w'\nassert solution('hastalavistababy') == 'h a t a l a v i s t a b a'\nassert solution('merrychristmas') =='m e r r y'\nassert solution('hastalavistababy') == 'h a t a l a v i s t a b a'\nassert solution('christmasmerry') == 'c i s t m e r r y'\n"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"helloworld\") == \"h e l l o w l o r l d\"\nassert solution(\"hastalavistababy\") == \"h a s t a l a v i s t a b a y\"\n"
    },
    {
        "number": 272,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"helloworld\") == \"h e l l o w o r l d\"\nassert solution(\"merrychristmas\") == \"m e r r y c h i s t a l a v i s t a b a y\"\nassert solution(\"hastalavistababy\") == \"h a s t a l a v i s t a b a\"\n\"\"\""
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"harry potter\") == \"hap\"\n\nassert solution(\"tom riddle\") == \"tomr\"\n\"\"\"\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n\n------Problem 1------\nWrite a function that reverses a list of elements in place.\n\nThe function will take in a list and return a new list in the same order.\n\nFor example, given the following list:\n\n[\"two\", \"elements\"]\nthe function will return:\n\n[\"elements\", \"two\"]\n\nThe list will be modified in place.\n\nTest Input\n[\"two\", \"elements\"]\n\n-----Problem 1 Answer-----\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(    'harry potter'    ) == 'hap'\nassert solution(    'tom riddle'    ) == 'tomr'\nassert solution(    'chris evans'    ) == 'csev'\n\"\"\"\n\nfrom itertools import chain\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nassert solution(\"julia julia\") == \"julia\"\nassert solution(\"jack jack\") == \"jack\"\n\"\"\"\n\n\"\"\"\nimport unittest\n\nclass TestSum(unittest.TestCase):\n    def test_case_0(self):\n        self.assertEqual(solution(\"harry potter\"), \"hap\")\n    def test_case_1(self):\n        self."
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n\"\"\""
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"[[][]][]\") == \"+-\\n|+- -+\\n||   ||\\n|+- -+|\\n+-\\n\", \"Test 1\"\nassert solution(\"[[][]]\") == \"+-\\n|+- -+\\n||   ||\\n|+- -+|\\n+-\\n\", \"Test 2\"\nassert solution(\"[][]\") == \"+- -+\\n|   ||\\n+- -+\\n\", \"Test 3\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('8\\n[[][]][]') == '+-\\n|+- -+\\n||   ||\\n|+- -+\\n+-\\n'\nassert solution('6\\n[[[]]]') == '+-\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-\\n'\nassert solution('6\\n[[][]]') == '+-\\n|+-   -+|\\n||   |||\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-\\n'\nassert solution('2\\n[]') == '+- -+\\n|   |\\n+- -+\\n'\nassert solution('4\\n[][]') == '+- -+\\n|   ||\\n+- -+\\n'\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8\\n[[][]][]\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\\n\"\nassert solution(\"6\\n[[[]]]\") == \"+-     -+\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-     -+\\n\"\nassert solution(\"6\\n[[][]]\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\\n\"\nassert solution(\"2\\n[]\") == \"+- -+\\n|   |\\n+- -+\\n\"\nassert solution(\"4\\n[][]\") == \"+- -+\\n|   ||\\n+- -+\\n\"\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('8\\n[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('6\\n[[][]]') == '+-     -+\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-     -+'\nassert solution('6\\n[[][]]') == '+-     -+\\n|+-   -+|\\n||   -1 ||\\n||+- -+||\\n|||   2 ||\\n||+- -+||\\n|+-   3 ||'\nassert solution('2\\n[]') == '+- -+\\n|   |\\n+- -+'\nassert solution('4\\n[][]') == '+- -++- -+\\n|   ||   |\\n+- -++- -+'\n\n\"\"\"\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(str(sys.stdin.readline())) == str(sys.stdin.readline())\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"8\\n[[][]][]\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\"\nassert solution(\"6\\n[[][]]\") == \"+-     -+\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-     -+\"\nassert solution(\"6\\n[[][]]\") == \"+-     -+\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-     -+\"\nassert solution(\"6\\n[[][]]\") == \"+-     -+\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-     -+\"\nassert solution(\"4\\n[][]]\") == \"+- -+\\n|   ||\\n+- -+\\n|   ||\\n+- -+\"\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"[[][]][]\") == \"+- -+\\n|   |\\n+- -+\"\nassert solution(\"[[]][]\") == \"+- -+\\n|   |\\n+- -+\"\nassert solution(\"[][][][][][]\") == \"+- -+ -+ -+\\n|   |   |   |\\n+- -+ -+ -+\"\nassert solution(\"[[][]][][]\") == \"+- -+ -+ -+\\n|   |   |   |\\n+- -+ -+ -+\"\nassert solution(\"[][][][][][]\") == \"+- -+ -+ -+\\n|   |   |   |\\n+- -+ -+ -+\"\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('8\\n[[][]][]') == '+-\\n|+- -+\\n||   ||\\n|+- -+\\n+-\\n'\nassert solution('6\\n[[[]]]') == '+-\\n|+-   -+|\\n||+- -+||\\n|||   |||\\n||+- -+||\\n|+-   -+|\\n+-\\n'\nassert solution('6\\n[[][]]') == '+-\\n|+-   -|\\n||   ||\\n|||   ||\\n||+- -+||\\n|+-   -|\\n+-\\n'\nassert solution('2\\n[]') == '+- -+\\n|   |\\n+- -+\\n'\nassert solution('4\\n[][]') == '+- -+\\n|   ||\\n+- -+\\n|   ||\\n'\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('[[[]]]') == '+- -+\\n|   |\\n+- -+'\nassert solution('[[[]]]') == '+- -+\\n|   |\\n+- -+'\nassert solution('[[[]]]') == '+- -+\\n|   |\\n+- -+'\nassert solution('[[[]]]') == '+- -+\\n|   |\\n+- -+'\nassert solution('[[[]]]') == '+- -+\\n|   |\\n+- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"[[][]]\") == '+-\\n|+- -+\\n||   ||\\n|+- -+\\n+-\\n'\nassert solution(\"[[][]]\") == '+-\\n|+- -+\\n||   ||\\n|+- -+\\n+-\\n'\nassert solution(\"[[][]]\") == '+-\\n|+- -+\\n||   ||\\n|+- -+\\n+-\\n'\n\nassert solution(\"[][]\") == '+- -+\\n|   |\\n+- -+\\n'\nassert solution(\"[][]\") == '+- -+\\n|   |\\n+- -+\\n'\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1110\") == \">\"\nassert solution(\"11\") == \">\"\nassert solution(\"01\") == \">\"\nassert solution(\"00\") == \">\"\nassert solution(\"11110\") == \">\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \">\"\nassert solution(\"11\") == \"<\"\nassert solution(\"11\") == \"=\"\nassert solution(\"00100\") == \"<\"\nassert solution(\"101\") == \"=\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \">\"\nassert solution(\"1100\") == \"=\"\nassert solution(\"11\") == \"<\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"<\"\nassert solution(\"11\") == \"=\"\nassert solution(\"110\") == \">\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1000') == '<'\nassert solution('11') == '='\nassert solution('101') == '>'\n\"\"\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\">\") == \">\"\nassert solution(\"<\") == \"<\"\nassert solution(\"=\") == \"=\"\n\n\"\"\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1110101') == '>'\nassert solution('1110') == '='\nassert solution('11001001101110111101110111010') == '<'\nassert solution('1111111011111111111101110111010') == '>'\nassert solution('10111101111011110111101110111010') == '>'\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"<\"\nassert solution(\"111\") == \">\"\nassert solution(\"00100\") == \"=\"\nassert solution(\"110\") == \"<\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"<\"\nassert solution(\"00100\") == \"=\"\nassert solution(\"110\") == \">\"\n"
    },
    {
        "number": 275,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \">\"\nassert solution(\"101\") == \"<\"\nassert solution(\"1100\") == \">\"\n\n\"\"\""
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\") == \"2\\nSpace\\nTime\"\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\") == \"2\\nSpace\\nTime\"\n\"\"\""
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\") == \"2\\nSpace\\nTime\"\nassert solution(\"0\") == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\"\nprint(\"You are awesome!\")\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange\\n') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    0\n    \"\"\"\n) == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    red\n    purple\n    yellow\n    orange\n    \"\"\"\n) == \"2\\nSpace\\nTime\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    purple\n    yellow\n    orange\n    red\n    blue\n    reality\n    \"\"\"\n) == \"0\\nTime\\nMind\\nSoul\\nPower\\nReality\\n\"\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\\nSpace\"\nassert solution(\"4\") == \"2\\nSpace\\nTime\"\n\"\"\"\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\") == \"2\\nSpace\\nTime\"\nassert solution(\"0\") == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\\nSpace\"\n\"\"\"\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"6\\ntime\\nsoul\\npower\\nreality\\nspace\"\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == 2\nassert solution('0') == 6\n"
    },
    {
        "number": 276,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\nred\\npurple\\nyellow\\norange\\n\") == \"2\\nSpace\\nTime\"\nassert solution(\"0\\n\") == \"6\\nTime\\nMind\\nSoul\\nPower\\nReality\"\n\"\"\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n\") == \"1\\n\"\nassert solution(\"8 2 6\\n\") == \"Final!\\n\"\nassert solution(\"8 7 5\\n\") == \"2\\n\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\""
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2 1\\n0 1 1 1\") == 2\n\nassert solution(\"3 2 1\\n0 0 0\") == 1\n\nassert solution(\"3 2 1\\n1 1 1\") == 0\n\nassert solution(\"2 2 1\\n0 0\") == 0\n\nassert solution(\"2 2 1\\n0 0 0\") == 0"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2 1\") == \"2\"\nassert solution(\"3 2 1\") == \"1\"\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2 1\") == \"2\"\nassert solution(\"3 2 1\") == \"1\"\n"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1') == '2'\nassert solution('3\\n2 3 1\\n0 0 0') == '1'\nassert solution('10\\n1 5 4 0 7 9 2 3 6 8') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2 1\\n0 1 1 1\") == \"2\"\nassert solution(\"3 2 1\\n0 0 0\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3 2 1\\n0 1 1 1\\n') == 2\nassert solution('3 2 1\\n0 0 0\\n') == 1\nassert solution('2 3 1\\n0 0 0\\n') == 0\n"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3 2 1\\n0 1 1 1') == '2'\nassert solution('3 2 1\\n0 0 0') == '1'\nassert solution('1\\n1') == '0'\n\"\"\"\n\nfrom operator import xor\n\nn = int(input())\np = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2 1\\n0 1 1 1\") == \"2\"\nassert solution(\"3 2 1\\n0 0 0\") == \"1\"\n"
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2 1\\n0 1 1 1\") == \"2\"\nassert solution(\"3 2 1\\n0 0 0\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 278,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(test_data.splitlines()[0]) == test_data.splitlines()[1]\n\n\nimport unittest\nfrom collections import Counter, defaultdict\nfrom itertools import permutations, combinations\nimport math\nimport numpy as np\nfrom scipy.special import binom\nfrom scipy.stats import hypergeom"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"26\"\n\"\"\"\n\nimport math\n\nv_1, v_2, d, t = [int(n) for n in input().split()]"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\nassert solution('5 6\\n4 3') == '33'\nassert solution('10 10\\n10 0') == '100'\nassert solution('5 6\\n1 3') == '26'\n"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\nprint('Test passed')"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 6\\n4 2') == '26'\n\"\"\"\n\nimport math"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n4 2\") == \"26\"\nassert solution(\"10 10\\n10 0\") == \"100\"\n\n\n\"\"\"\n\nfrom math import inf\n\nv_1, v_2, d, t = map(int, input().split())"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 6') == '26'\nassert solution('10 10') == '100'\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n\"\"\""
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 10\\n10 0') == '100'\nassert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\nassert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\nassert solution(\"3 2\\n1 4 2\\n2 6\") == \"10\"\nassert solution(\"3 2\\n1 4 2\\n2 6\") == \"10\""
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\nassert solution(\"5 4\\n1 4 2 3\\n5 2\") == \"0\"\nassert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\n\"\"\""
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2') == '2'\nassert solution('1 1 1') == '-1'\nassert solution('1 2 5') == '3'\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\\n2 6\") == 10\n\"\"\"\n\nfrom sys import stdin\n\nN, M = map(int, stdin.readline().split())\n\nweights = list(map(int, stdin.readline().split()))\nlengths = list(map(int, stdin.readline().split()))\ncapacities = list(map(int, stdin.readline().split()))\n\nweights = [0] + weights\nlengths = [0] + lengths\ncapacities = [0] + capacities\n\nfor i in range(1, N + 1):\n    weights[i] += weights[i - 1]\n\nfor i in range(1, M + 1):\n    lengths[i] += lengths[i - 1]\n\nfor i in range(1, N + 1):\n    capacities[i] += capacities[i - 1]\n\nweights_sum = [0 for _ in range(N + 1)]\n\nfor i in range(1, N + 1):\n    weights_sum[i] += weights_sum[i - 1] + weights[i]\n\nfor i in range(1, M + 1):\n    for j in range(1, N + 1):\n        if lengths[i] > j:\n            continue\n        if weights_sum[j] - weights_sum[j - lengths[i]] + capacities[i] >= capacities[i]:\n            print(-1)\n            exit()\n\nfor i in range(1, N + 1):\n    if weights_sum[i] + weights[i] - capacities[i] >= 0:\n        print(weights_sum[i] - weights_sum[i - 1])\n        break\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('5 2\\n1 4 2\\n10 4') == '10'\nassert solution('5 2\\n1 4 2\\n10 4\\n1') == '-1'\nassert solution('5 2\\n1 4 2\\n10 4\\n1\\n2') == '-1'"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\\n2 6\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 3 4 5 6') == ''\n\nassert solution('1 4 2') == '-1'\nassert solution('1 2 2') == '-1'\n"
    },
    {
        "number": 280,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 4 2\\n10 4\\n2 6') == '10'\nassert solution('3 2\\n1 4 2\\n10 4\\n2 6\\n0 6') == '-1'\n"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\nassert solution('1 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n\"\"\"\n\nimport math"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('0 10') == '0'\nassert solution('2 4') == '2'\nassert solution('107 109') == '2'\nassert solution('14 78') == '7'"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(str(2) + \" \" + str(4)) == \"2\"\nassert solution(str(0) + \" \" + str(10)) == \"0\"\nassert solution(str(107) + \" \" + str(109)) == \"2\"\nprint('Success')\n\n\"\"\"\nfrom math import factorial\nfrom typing import List, Union\n\nfrom tools import timing\n"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n\"\"\""
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"11 100\") == \"0\"\n"
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n\"\"\""
    },
    {
        "number": 281,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"2\"\n\nassert solution(\"0 10\") == \"0\"\n\nassert solution(\"107 109\") == \"2\"\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"8 4 11100101\") == \"3\"\nassert solution(\"12 3 101111100101\") == \"4\"\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8 4\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"10010101\") == \"2\"\nassert solution(\"11100101\") == \"-1\"\nassert solution(\"101111100101\") == \"4\"\nprint('Passed')\n\n\"\"\""
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10010101\") == \"2\"\nassert solution(\"1001\") == \"1\"\nassert solution(\"11100101\") == \"3\"\nassert solution(\"101111100101\") == \"4\"\nassert solution(\"12\") == \"1\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n\"8 4\",\n\"10010101\") == \"2\", \"1st example\"\nassert solution(\n\"4 2\",\n\"1001\") == \"-1\", \"2nd example\"\nassert solution(\n\"8 4\",\n\"11100101\") == \"3\", \"3rd example\"\nassert solution(\n\"12 3\",\n\"101111100101\") == \"4\", \"4th example\"\n\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('8 4') == '2'\nassert solution('12 3') == '4'\nassert solution('10010101') == '2'\n\"\"\"\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('10010101') == '2'\nassert solution('11100101') == '-1'\nassert solution('101111100101') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"8 4\\n10010101\") == '2'\nassert solution(\"4 2\\n100101\") == '-1'\nassert solution(\"8 4\\n11100101\") == '3'\nassert solution(\"12 3\\n101111100101\") == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('11100101') == '4'\nassert solution('10010101') == '2'\nassert solution('101111100101') == '4'\n\"\"\"\n"
    },
    {
        "number": 282,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('8 4') == '2'\nassert solution('8 4') == '2'\nassert solution('8 2') == '-1'\nassert solution('8 2') == '-1'\nassert solution('8 4') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n\"\"\"\n\nfrom itertools import count"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n\n\"\"\"\nimport math"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"9\") == \"5\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n\"\"\"\n\n\nimport itertools\nimport math\n"
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n\"\"\""
    },
    {
        "number": 283,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == '1'\nassert solution(\"4\") == '2'\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\nassert solution(\"356907\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1359257') == 'YES'\n\nassert solution('17851817') == 'NO'\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n\n\"\"\"\nimport unittest\nfrom collections import defaultdict\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(1359257) == 'YES'\nassert solution(17851817) == 'NO'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\nprint(\"YES\" if n % 1234567 == 0 else \"NO\")\n"
    },
    {
        "number": 284,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\\n\") == \"NO\"\n\"\"\""
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\\n') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n-1 3\\n') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''\n2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''\n2\n1 3\n1 0\n0 3\n''') == 'NO'\n\"\"\"\n\n\nfrom typing import List"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n-1 3') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3') == 'YES'\n\"\"\"\n\n\nimport sys\n\ninput_lines = open(sys.argv[1], 'r').readlines()\n\nn = int(input_lines[0])\n\nlines = []\nfor line in input_lines[1:]:\n    lines.append([int(x) for x in line.split()])\n\nx1, x2 = [int(x) for x in input_lines[1].split()]\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\") == 'NO'\nassert solution(\"2\\n1 3\\n1 0\\n-1 3\") == 'YES'\nassert solution(\"2\\n1 3\\n1 0\\n0 3\") == 'YES'\nassert solution(\"2\\n1 3\\n1 0\\n0 3\\n0 2\") == 'NO'\nassert solution(\"1\\n1 2\\n1 0\") == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n-1 3\") == \"YES\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n-1 3\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 3\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 2\") == \"NO\"\n\"\"\"\n\nn = int(input())\nx1, x2 = map(int, input().split())\n\nd = {}\nfor i in range(n):\n    k, b = map(int, input().split())\n    if k == 0:\n        if x1 <= b <= x2:\n            print('YES')\n            break\n        else:\n            continue\n    if b == 0:\n        if x1 <= k <= x2:\n            print('YES')\n            break\n        else:\n            continue\n    if x1 <= k * x1 + b <= x2:\n        d[i] = 1\n    if x1 <= k * x2 + b <= x2:\n        d[i] = 2\n    if x1 <= k * x2 + b <= x2:\n        d[i] = 3\n    if x1 <= k * x1 + b <= x2:\n        d[i] = 4\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n-1 3') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n0 1') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\\n\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n-1 3\\n\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 3\\n\") == \"YES\"\n\n-----\n\"\"\"\n"
    },
    {
        "number": 285,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n-1 3\\n\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 3\\n\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 3\\n\") == \"NO\"\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('8') == 5\nassert solution('7') == 4\nassert solution('9') == 5\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('7') == 4\nassert solution('8') == 5\nassert solution('9') == 5\n\n\"\"\""
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"8\") == 5\nassert solution(\"9\") == 5\n\n\"\"\"\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8') == 5\nassert solution('7') == 4\nassert solution('9') == 5\n\n-----\n7\n-----\n8\n-----\n9\n-----\n"
    },
    {
        "number": 286,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\n\"\"\""
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2 3 4') == '1 3'\nassert solution('5 2\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"1 3\"\nassert solution(\"20 2\") == \"2 10\"\nassert solution(\"100 10\") == \"1 100\"\nassert solution(\"10 10\") == \"1 10\"\nassert solution(\"0 10\") == \"0 10\"\n"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1 3\"\nassert solution(\"5 0\") == \"1\"\nassert solution(\"6 1\") == \"1 6\"\nassert solution(\"7 1\") == \"1 6\"\nassert solution(\"5 7\") == \"1 6\"\n"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''\n7 3\n''') == '1 3'\n\nassert solution('''\n7 4\n''') == '2 2'\n\nassert solution('''\n12 4\n''') == '2 8'\n\nassert solution('''\n8 5\n''') == '4 2'\n\nassert solution('''\n9 4\n''') == '5 1'"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('8 2') == '4 6'\n\"\"\"\n\nimport sys\nimport math\n\nT = sys.stdin.readlines()\nn, k = list(map(int, T[0].split()))\n\ngood = []\n\nfor i in range(n):\n    if i < k:\n        good.append(1)\n    else:\n        good.append(0)\n\ngood[k - 1] += 1\n\nfor i in range(k + 1, n):\n    good[i] += 1\n    good[i - 1] += 1\n\nprint(min(good), max(good))\n"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == '1 3'\n\"\"\""
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n\") == \"1 3\"\nassert solution(\"7 2\\n\") == \"0 0\"\n"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3') == '1 3'\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"1 3\"\n\"\"\""
    },
    {
        "number": 287,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"3 2\") == \"1 2\"\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '2'\nassert solution('10\\n') == '4'\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 2"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\n\"\"\"\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(    '2'    ) ==    '1'\nassert solution(    '3'    ) ==    '2'\nassert solution(    '4'    ) ==    '2'\nassert solution(    '10'    ) ==    '4'\nassert solution(    '1'    ) ==    '1'"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('10') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 288,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 2 1') == '2'\nassert solution('4\\n2 3 2 1\\n1 3 4') == '2'\nassert solution('3\\n2 1 2') == '1'\n"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\n\n\"\"\"\n"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"VK\") == \"1\"\nassert solution(\"VV\") == \"1\"\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == \"3\"\n\"\"\""
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"VVVVVVVVVK\") == 3\n\"\"\""
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1\nassert solution(\"VKKVKKKKKKKVVVVVVVVK\") == 0\n\n\"\"\"\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\ns_list = list(s)\n\nans = 0\n\nfor i in range(len(s)):\n    if s_list[i] == \"V\":\n        s_list[i] = \"K\"\n        ans = max(ans, s.count(\"VK\") + s.count(\"KV\"))\n        s_list[i] = \"V\"\n\nfor i in range(len(s)):\n    if s_list[i] == \"K\":\n        s_list[i] = \"V\"\n        ans = max(ans, s.count(\"VK\") + s.count(\"KV\"))\n        s_list[i] = \"K\"\n\nprint(ans)\n"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"VK\") == 1"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"VV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"VK\") == 1\n"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"VK\") == \"1\"\nassert solution(\"VV\") == \"1\"\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1\n\n\"\"\""
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVVK\") == 3\n"
    },
    {
        "number": 289,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('VK') == 1\nassert solution('VV') == 1\nassert solution('VKKKKKKKKKVVVVVVVVVK') == 3\nassert solution('KVKV') == 1\nassert solution('VKKV') == 0\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\n\"\"\""
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1') == 2\n\"\"\"\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\") == 3\nassert solution(\"8\") == 5\nassert solution(\"8\") == 5\nassert solution(\"12\") == 6\nassert solution(\"100\") == 30\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\n\"\"\""
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\n\"\"\"\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('10') == '10'\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2') == 3\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '2'\nassert solution('4') == '4'\n\nprint(solution(stdin.readlines()[0]))\n"
    },
    {
        "number": 290,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2') == 3\nassert solution('3') == 4\nassert solution('4') == 4\n\"\"\""
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 7\") == '2'\nassert solution(\"1 1\") == '1'\nassert solution(\"4 9\") == '3'\nassert solution(\"4 1\") == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 7\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'"
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\nprint('all tests have passed successfully')\n\n\"\"\""
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n\"\"\""
    },
    {
        "number": 291,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '4'\nassert solution('3 6') == '10'\nassert solution('4 16') == '16'\nassert solution('4 1024') == '2046'\n\n\"\"\""
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(str(sys.stdin.read())) == str(sys.stdin.read())\n\n\"\"\"\n\nfrom math import log2, ceil"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 6') == '10'\nassert solution('5 10') == '15'\nassert solution('10 1024') == '2046'\n\n\"\"\""
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '5'\nassert solution('1 2 3 4 5 6') == '10'\n\"\"\"\n\nclass Node:\n    def __init__(self, value, left=None, right=None):\n        self.value = value\n        self.left = left\n        self.right = right\n        self.is_leaf = True\n\n    def __repr__(self):\n        return str(self.value)"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"7\"\nassert solution(\"1 2 4\") == \"12\"\nassert solution(\"1 2 4 5\") == \"15\"\nassert solution(\"1 2 4 5 6\") == \"22\"\n\"\"\""
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 2') == 2\n\"\"\"\n"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 2') == 2\n\nassert solution('2 3') == 5\n\nassert solution('3 6') == 10\n\"\"\"\n\n\nfrom typing import List, Dict\n\n\nclass Node:\n    def __init__(self, data: int) -> None:\n        self.data = data\n        self.children: List[Node] = []\n"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"1 2 3 5\") == \"7\"\nassert solution(\"2 4 6 8 10\") == \"14\"\n\"\"\"\n"
    },
    {
        "number": 292,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(4, 8) == 6\n\"\"\""
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"26\") == \"6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\"\nassert solution(\"2\") == \"2\\n1 2\\n2 1\"\nassert solution(\"8\") == \"4\\n1 8\\n2 3\\n3 2\\n8 1\"\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('6') == '26'\nassert solution('8') == '4'\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('8') == '4\\n1 8\\n2 3\\n3 2\\n8 1'\nassert solution('26') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'\n\n\"\"\""
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('26') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'\n\nassert solution('2') == '2\\n1 2\\n2 1'\n\nassert solution('8') == '4\\n1 8\\n2 3\\n3 2\\n8 1'"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1 26\"\nassert solution(\"6\") == \"2 9\"\nassert solution(\"8\") == \"3 5\"\nassert solution(\"9\") == \"5 3\"\nassert solution(\"10\") == \"9 2\"\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"26\") == \"6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\"\nassert solution(\"2\") == \"2\\n1 2\\n2 1\"\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('26') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'\nassert solution('2') == '2\\n1 2\\n2 1'\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"26\") == \"6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1\"\nassert solution(\"2\") == \"2\\n1 2\\n2 1\"\nassert solution(\"8\") == \"4\\n1 8\\n2 3\\n3 2\\n8 1\"\n\"\"\""
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n2') == '1\\n2'\nassert solution('2\\n1\\n1\\n3\\n2\\n1\\n2') == '1\\n1\\n2\\n2\\n3\\n3\\n2\\n1'\n"
    },
    {
        "number": 293,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('26') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'\nassert solution('2') == '2\\n1 2\\n2 1'\nassert solution('8') == '4\\n1 8\\n2 3\\n3 2\\n8 1'\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 31 31 30 31\") == \"Yes\"\nassert solution(\"2 30 30\") == \"No\"\nassert solution(\"5 29 31 30 31 30\") == \"Yes\"\nassert solution(\"3 31 28\") == \"No\"\nassert solution(\"3 31 31 28\") == \"Yes\"\n\"\"\"\n\nn = int(input())\nnumbers = [int(x) for x in input().split()]"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('31 31 30 31') == 'Yes'\nassert solution('31 31 30 32') == 'No'\n"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 31 31 30 31\") == \"Yes\"\nassert solution(\"2 30 30\") == \"No\"\nassert solution(\"5 29 31 30 31 30\") == \"Yes\"\nassert solution(\"3 31 28\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"31 31 30 31\") == \"YES\"\nassert solution(\"29 31 30 31 30\") == \"NO\"\nassert solution(\"31 31 28\") == \"YES\"\nassert solution(\"31 31 28 31\") == \"NO\""
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 31 30 31\") == \"Yes\"\nassert solution(\"2 30\") == \"No\"\nassert solution(\"5 29 31 30 31 30\") == \"Yes\"\nassert solution(\"3 31 28\") == \"No\"\nassert solution(\"3 31 31 28\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 31 30 31\") == 'YES'\nassert solution(\"2 30 30\") == 'NO'\nassert solution(\"5 29 31 30 31 30\") == 'YES'\nassert solution(\"3 31 28\") == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n31 31 30 31 30') == 'Yes'\nassert solution('2\\n30 30') == 'No'\nassert solution('3\\n31 31 28') == 'Yes'\n\"\"\""
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n31 31 30 31\\n\") == \"YES\"\nassert solution(\"2\\n30 30\\n\") == \"NO\"\nassert solution(\"5\\n29 31 30 31 30\\n\") == \"YES\"\nassert solution(\"3\\n31 31 28\\n\") == \"NO\"\nassert solution(\"3\\n31 31 28\\n\") == \"YES\"\n"
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n31 31 30 31\") == \"YES\"\nassert solution(\"2\\n30 30\") == \"NO\"\nassert solution(\"5\\n29 31 30 31 30\") == \"YES\"\nassert solution(\"3\\n31 31 28\") == \"NO\"\nassert solution(\"3\\n31 31 28\") == \"NO\""
    },
    {
        "number": 294,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('31 31 30 31') == \"Yes\"\nassert solution('30 30') == \"No\"\nassert solution('29 31 30 31 30') == \"Yes\"\nassert solution('31 28 30') == \"No\"\nassert solution('31 31 28') == \"Yes\"\n\n\"\"\"\n\n\nfrom typing import List, Tuple\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"YES\\n2\\n1 2\\n1 3\"\nprint(solution(\"6\"))\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES\\n2\\n1 3'\nassert solution('10') == 'YES\\n3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"YES\\n2\\n1 2\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\\n1\\n1\"\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('6') == 'YES'\nassert solution('8') == 'NO'\n\n\"\"\"\nimport math\nfrom typing import List"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 'NO'\nassert solution(\"6\") == 'YES'\nassert solution(\"10\") == 'NO'\nassert solution(\"10**9\") == 'NO'\n\"\"\""
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES\\n2\\n1 3'\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n\nassert solution(\"2\") == \"NO\"\nassert solution(\"6\") == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"YES\\n2\\n1 2\"\nassert solution(\"2\") == \"NO\"\nprint(solution(\"6\"))\nprint(solution(\"2\"))\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3\"\n\nassert solution(\"3 3 4 1\") == \"3\"\n\nassert solution(\"3 3 4 1\") == \"3\"\n\nassert solution(\"3 3 4 1\") == \"3\"\n\nassert solution(\"3 3 4 1\") == \"3\""
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n2 3 1\") == \"3\"\nassert solution(\"3 3\\n2 2 2\") == \"2\"\nassert solution(\"3 3\\n1 3 1\") == \"2\"\nassert solution(\"3 3\\n1 2 1\") == \"2\"\nassert solution(\"3 3\\n1 1 1\") == \"2\"\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('5 7 3 3 4 1') == 3\nassert solution('3 3 4 1') == 2\nassert solution('2 3 1 3 1') == 2\nassert solution('1 3 1 3 1') == 2\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n3 3 4 1\") == '3'\nassert solution(\"3 3 4 1\") == '2'\n\n\"\"\"\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3 4 1\") == 3\nassert solution(\"2 3 4 1\") == 2\nassert solution(\"2 3 3 1\") == -1\nassert solution(\"2 3 2 1\") == 2\nassert solution(\"2 3 2 1\") == 2\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"1 2\") == \"-1\"\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 5\\n3 3 4 1') == '3'\nassert solution('3 3 4 1') == '-1'\n\"\"\"\n\nn = int(input())\na, b = map(int, input().split())\narr = list(map(int, input().split()))\n\nans = 0\ncurrent_color = 'r'\nprevious_color = 'r'\nfor height in arr:\n    if current_color == 'r':\n        ans += height - 1\n        current_color = 'g'\n        previous_color = 'r'\n    else:\n        ans += height - 1\n        current_color = 'r'\n        previous_color = 'g'"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 3 4 1\") == 3\nassert solution(\"3 3 4 1\") == 2\nassert solution(\"3 3\\n2 2 2\") == -1\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 3 1\") == \"2\"\nassert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"3 3\\n1 1 2\") == \"1\"\nassert solution(\"3 3\\n2 1 3\") == \"0\"\nassert solution(\"3 3\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 296,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 7\") == \"3\"\nassert solution(\"3 3 4 1\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 3 3') == 'NO'\nassert solution('4 4 7') == 'YES'\nassert solution('10 10 10') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('10 10 10') == 'NO'\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3 3') == \"YES\\n1 0\\n2 3\\n4 1\\n\"\nassert solution('4 4 7') == \"NO\\n\"\nassert solution('1 1 1') == \"NO\\n\"\nassert solution('5 1 5') == \"NO\\n\"\nassert solution('2 1 10') == \"NO\\n\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\n\n\"\"\""
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\""
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 4 7\") == \"NO\"\nassert solution(\"4 3 3\") == \"YES\"\nassert solution(\"5 5 6\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('1 1 1') == 'NO'\nassert solution('4 3 3') == 'YES'\nassert solution('4 4 7') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 4 7\") == \"NO\"\nassert solution(\"2 4 2\") == \"NO\"\nassert solution(\"3 1 2\") == \"YES\"\n\"\"\"\n\nn, m, k = [int(x) for x in input().split()]\ncount = 0\nfor i in range(n):\n    for j in range(m):\n        if i+j >= k:\n            count += 1\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 1\\n') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('1000 1\\n') == 'YES'\nassert solution('10000 1\\n') == 'NO'\nassert solution('1 10\\n') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 1\\n') == \"YES\"\nassert solution('10 4\\n') == \"NO\"\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 1\\n') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('2 5\\n') == 'YES'\nassert solution('6 4\\n') == 'NO'\n\"\"\""
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"9 5\") == \"NO\"\nassert solution(\"20 10\") == \"NO\"\n\"\"\""
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"1 100\") == \"YES\"\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 1\\n') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('5 7\\n') == 'NO'\nassert solution('1 10\\n') == 'NO'\nassert solution('1 1000000000\\n') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n\"\"\""
    },
    {
        "number": 298,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 1\\n') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('2 2\\n') == 'NO'\nassert solution('5 4\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 8\") == \"biceps\"\nassert solution(\"3 5 1 10\") == \"back\"\n\"\"\""
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"7 2 1 4 7 8 2 8\") == \"back\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 8\") == \"biceps\"\nassert solution(\"3 5 1 10\") == \"back\"\nassert solution(\"7 3 3 2 7 9 6 8\") == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n8\\n\") == \"biceps\"\nassert solution(\"3\\n5 1 10\\n\") == \"back\"\nassert solution(\"7\\n3 3 2 7 9 6 8\\n\") == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n\"2\\n\"\n\"2 8\\n\"\n) == \"biceps\"\n\nassert solution(\n\"3\\n\"\n\"5 1 10\\n\"\n) == \"back\"\n\nassert solution(\n\"7\\n\"\n\"3 3 2 7 9 6 8\\n\"\n) == \"chest\"\n\n\"\"\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 8\\n3 9 1\") == \"biceps\"\nassert solution(\"7\\n3 3 2 7 9 6 8\") == \"chest\"\nassert solution(\"7\\n3 9 1 2 5 6 8\") == \"back\"\n\n\"\"\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n8\n\"\"\") == \"biceps\"\nassert solution(\"\"\"3\n5 1 10\n\"\"\") == \"back\"\nassert solution(\"\"\"7\n3 3 2 7 9 6 8\n\"\"\") == \"chest\"\n\n\"\"\""
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 8\\n\") == \"biceps\"\nassert solution(\"3 5 10\\n\") == \"back\"\nassert solution(\"7 3 2 7 9 6 8\\n\") == \"chest\"\n\n\"\"\""
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 8\") == \"biceps\"\nassert solution(\"3 5 10\") == \"back\"\nassert solution(\"7 3 2 7 9 6 8\") == \"chest\"\n"
    },
    {
        "number": 299,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 8\") == \"biceps\"\nassert solution(\"3 5 1 10\") == \"back\"\n"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3\\n4 4 4') == '2'\nassert solution('4\\n5 3 3 5') == '1'\n\"\"\"\n\nN = int(input())\nnums = list(map(int, input().split()))"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"5 4 5 5\") == \"0\"\nassert solution(\"5 3 3 5\") == \"1\"\n\"\"\"\n\n\n\n\"\"\"\n\uac04\ub2e8\ud558\uac8c \ud480\uc5c8\uc9c0\ub9cc, \ubc30\uc5f4\uc744 \uc0ac\uc6a9\ud558\uba74 \ub354 \ud3b8\ub9ac\ud558\uac8c \ud480\uc218 \uc788\uc744\uac70\uac19\uc740\ub370\n\uc544\ubb34\ub9ac \uace0\ubbfc\ud574\ub3c4 \uc774 \ubb38\uc81c\ub294 \uac04\ub2e8\ud55c \uc18c\uc218\uc810 \uc815\uc218\ud615\uc73c\ub85c \ubcc0\ud658\ud558\uc9c0 \uc54a\uc744\uac70\uac19\uc544 \uc54c\uace0\ub9ac\uc998\uc740 \uad6c\ud604\ud558\ub294 \uac83\ub3c4 \ud3ec\uc778\ud2b8\uc778\ub370\n\uadf8\ub807\uac8c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\ub2e4.\n\n\ud480\uc774 \ud574\uc11d:\n\ubc30\uc5f4\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc218\uc810 \uc815\uc218\ud615\uc73c\ub85c \ubcc0\ud658\uc744 \uc2dc\ud0a4\uba74 \uac04\ub2e8\ud558\uac8c \ud480 \uc218 \uc788\ub2e4.\n\uc8fc\uc5b4\uc9c4 \uc785\ub825\ubc30\uc5f4\uc758 \ub9c8\uc9c0\ub9c9 \uc6d0\uc18c\ub97c \uc0ad\uc81c\ud558\uace0 \uc774\ud6c4\uc758 \ubaa8\ub4e0 \uc6d0\uc18c\ub4e4\uc744 \ubc30\uc5f4\uc758 \uc6d0\uc18c\ub4e4\uc758 \ud3c9\uade0\uc73c\ub85c \ub098\ub208 \ubaab\uc744 \uad6c\ud55c \ub4a4, \uadf8 \uac12\uc758 \uc6d0\uc18c\ub97c \uac00\uc7a5 \ud070 \uc6d0\uc18c\uc640 \uac00\uc7a5 \uc791\uc740 \uc6d0\uc18c\ub85c \ubc14\uafb8\uc5b4\uc900\ub2e4.\n\uc774 \uacfc\uc815\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc870\uac74\uc740 \ucd5c\uc885 \ubc30\uc5f4\uc758 \uc6d0\uc18c\uc758 \ucd5c\ub313\uac12\uacfc \ucd5c\uc19f\uac12\uc774 \ubb34\uc870\uac74 5 \uc774\uc0c1\uc774 \ub418\ub294 \uc870\uac74\uc774\ub2e4.\n\ubb38\uc81c \uac19\uc740\ub370 \uc774\ub7f0 \uc870\uac74\uc744 \uc124\uba85\ud558\uba74 \uc544\uc8fc \uac04\ub2e8\ud558\uac8c \ud574\uacb0\uc774 \uac00\ub2a5\ud560\uac70\uac19\uc740\ub370, \uc544\ub798\uc640 \uac19\uc740 \ucf54\ub4dc\ub97c \uace0\ubbfc\ud558\uba70 \ud480\uc5b4\ubcf4\uc558\uc9c0\ub9cc\n\ud6a8\uc728\uc131\uacfc \ucf54\ub4dc\uc758 \uc5ec\uc9c0\uac00 \uc788\uc5c8\ub2e4.\n\n\ub9e8 \ub9c8\uc9c0\ub9c9 \uc6d0\uc18c\ub97c \uc0ad\uc81c\ud558\uace0 \ub098\uba38\uc9c0 \uc6d0\uc18c\ub4e4\uc744 \ubaa8\ub450 \ud3c9\uade0\uc73c\ub85c \ub098\ub204\uc5b4\uc8fc\ub294 \uc2dd\uc744 \uc9c1\uc811 \uad6c\ud604\ud558\uc600\ub2e4.\n\uc5ec\uc9c0\ub294 \ub450 \uac00\uc9c0\uc774\ub2e4.\n\uccab\ubc88\uc9f8\ub85c, \ud3c9\uade0\uc73c\ub85c \ub098\ub204\uc5b4\uc900 \ubaab\uc744 \uc800\uc7a5\ud574\ub193\uace0, \ub098\uba38\uc9c0\uac00 \uc544\uc9c1 \ud558\ub098 \ub0a8\uc558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc2dd\uc774\ub77c\uace0 \uc0dd\uac01\ud588\ub294\ub370,\n\uc5ec\uc9c0\uac00 \uc788\ub294 \uc870\uac74\uc744 \uad6c\ud604\ud558\ub294\ub370 \uc5b4\ub824\uc6e0\uc9c0\ub9cc \uc774\ub807\uac8c \ud558\ub098\uc758 \uc2dd\uc744 \ub9cc\ub4e4\uc5b4 \uc900 \uac83\uc774\ub2e4.\n\ub450\ubc88\uc9f8\ub85c \uc784\uc758\ub85c \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\uace0 \ubc18\uc601\ud574\uc57c \ud558\ub294 \uc870\uac74\uc774 \uc788\uc5c8\ub2e4.\n\n\uc784\uc758\ub85c \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\ub294 \uc2dd\uc744 \uc124\uba85\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4.\n\uc6b0\ub9ac\uac00 \ud574\uacb0\ud558\uace0\uc790 \ud558\ub294 \ubb38\uc81c\uc5d0 \uc874\uc7ac\ud558\ub294 \ufffd"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 4 4\") == \"2\"\nassert solution(\"4\\n5 4 5 5\") == \"0\"\nassert solution(\"4\\n5 3 3 5\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 4 4\") == \"2\"\nassert solution(\"4\\n5 3 3 5\") == \"1\"\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n4 4 4') == '2'\nassert solution('4\\n5 3 3 5') == '0'\nassert solution('4\\n5 3 3 5') == '1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n4 4 4\\n') == '2'\nassert solution('4\\n5 3 3 5\\n') == '0'\nassert solution('4\\n5 4 4 5\\n') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 4 4\") == \"2\"\nassert solution(\"4\\n5 3 3 5\") == \"0\"\nassert solution(\"4\\n5 3 3 5\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('5 3 3 5') == '1'\nassert solution('4 5 3 5') == '0'\nassert solution('3 3 3 3') == '0'\nassert solution('5 4 5 4') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4\\n4 4 4') == '2'\nassert solution('4\\n5 3 3 5') == '0'\nassert solution('4\\n5 4 4 5') == '1'"
    },
    {
        "number": 300,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('5 3 3 5') == '0'\nassert solution('4 5 4 5') == '1'\n"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('2 4') == '2'\nassert solution('1 3') == '3'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n3 1\") == \"2\\n3 1\"\nassert solution(\"1 3\\n1 1 1\") == \"3\\n1 1 1\"\nassert solution(\"8 5\\n\") == \"-1\"\nassert solution(\"0 0\\n\") == \"0\"\n\"\"\""
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"1 3\") == \"3 1\"\nassert solution(\"8 5\") == \"-1\"\nassert solution(\"0 0\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 4') == '2\\n3 1'\nassert solution('1 3') == '3\\n1 1 1'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"4 4\") == \"2 1\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"8 5\") == \"1\"\n"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(2,4) == \"2\"\nassert solution(1,3) == \"3 1\"\nassert solution(8,5) == \"-1\"\nassert solution(0,0) == \"0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"8 5\") == \"-1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\n\n\"\"\"\n\n\"\"\"\nimport re\nimport sys\n\nT = int(sys.stdin.readline())"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3 1'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\nprint('Test pass.')"
    },
    {
        "number": 301,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == '2'\nassert solution(\"1 3\") == '3 1'\nassert solution(\"8 5\") == '-1'\nassert solution(\"0 0\") == '0'"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(121) == 6\nassert solution('121') == 6\nassert solution(11) == 1\nassert solution('11') == 1\nassert solution(0) == 0\n\"\"\"\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"121\") == \"6\"\n\"\"\""
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\n\n\"\"\""
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('121') == 6\n\"\"\""
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('121') == 6\n\"\"\"\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(str(input())) == str(len(str(input())))\n\"\"\"\nimport sys\nfrom typing import List\n\nN = sys.stdin.readline().strip()\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\u2018121\u2019) == 6\n\"\"\"\n\n\"\"\"\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b \u043e\u0442 1 \u0434\u043e n:\n\n1\n12\n123\n1234\n\u2026\nn\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0443\u044e\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c n, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.\n\"\"\"\n\nn = int(input())\ni = 1\nwhile i <= n:\n    print(i, end=' ')\n    i = i + 1\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"121\") == 6\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('121') == 6\nassert solution('11') == 0\nassert solution('1') == 0\nassert solution('10') == 1\nassert solution('101') == 2\n"
    },
    {
        "number": 302,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('121') == 6\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 6\") == 'YES'\n\"\"\"\n\n\nfrom collections import deque"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\n\n-----Hint----\nThis is a simulation problem. It is necessary to find the way to reach the treasure.\n\"\"\"\n\nfrom typing import List, Tuple\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\nassert solution('2 3') == 'YES'\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2 3') == 'YES'\nassert solution('1 1 3 6') == 'NO'\n\n'''"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"97\") == 2\nassert solution(\"2028\") == 13\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2028\") == \"13\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2028\") == \"13\"\nassert solution(\"157\") == \"5\"\nassert solution(\"15734\") == \"11\"\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2028\") == 13\nassert solution(\"22208\") == 2\nassert solution(\"5555\") == 0\nassert solution(\"33\") == 1\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2028\") == 13\nassert solution(\"97\") == 2\n\"\"\""
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('97') == 2\nassert solution('2028') == 13"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2028\") == 13\nassert solution(\"97\") == 2\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"157\") == 1\nassert solution(\"1571\") == 2\nassert solution(\"6715\") == 2\nassert solution(\"71512\") == 3\nassert solution(\"97549\") == 2\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\nassert solution('7994') == '4'\nassert solution('74281') == '11'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 304,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2028') == 13\nassert solution('97') == 2\nassert solution('8022') == 8\nassert solution('0') == 1\nassert solution('8000') == 2\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == \"325\"\n\nassert solution(\"3\\n1\\n2\") == \"3\"\n\nassert solution(\"3\\n2\\n1\") == \"3\""
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2') == '6'\n\nassert solution('12\\n11\\n13\\n20\\n4\\n6') == '102'\n\nassert solution('17\\n14\\n5\\n21\\n15\\n17') == '325'\n\nassert solution('100\\n4\\n1') == '5'\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == '6'\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\") == '102'\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == '325'\nassert solution(\"1\\n3\\n2\") == '5'\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == \"325\"\n\nprint(\"Success!\")\n\n\"\"\"\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    '4\\n5\\n6\\n3\\n1\\n2'\n) == '6'\n\nassert solution(\n    '12\\n11\\n13\\n20\\n4\\n6'\n) == '325'"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\") == \"325\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == \"325\"\n\n\nassert solution(\"10\\n12\\n14\\n20\\n4\\n6\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\") == \"325\"\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2') == '6'\nassert solution('12\\n11\\n13\\n20\\n4\\n6') == '325'\nassert solution('17\\n14\\n5\\n21\\n15\\n17') == '325'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2') == '6'\n\nassert solution('12\\n11\\n13\\n20\\n4\\n6') == '102'\n\nassert solution('17\\n14\\n5\\n21\\n15\\n17') == '325'\n\"\"\"\n\nimport sys\nimport os\nimport re\nfrom operator import itemgetter\n\nsys.stdin = open(os.path.join(sys.path[0], \"in\", \"5.in\"), \"r\")\n\nclass IntPuter:\n    def __init__(self, data):\n        self.data = data\n\n    def intcode_computer(self, position, data):\n        while data[position]!= 99:\n            if data[position] == 1:\n                data[data[position + 3]] = data[data[position + 1]] + data[data[position + 2]]\n            elif data[position] == 2:\n                data[data[position + 3]] = data[data[position + 1]] * data[data[position + 2]]\n            else:\n                break\n            position += 4\n        return data"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2') == 6\n\"\"\"\n\n\"\"\"\n\ud480\uc774 \ubc29\ubc95\n\n\ubd80\ubd84\uc9d1\ud569\uc744 \uc774\uc6a9\ud55c \uc911\ubcf5\uc21c\uc5f4 \ud480\uc774\ub85c \ud574\uacb0\ud560 \uc218 \uc788\ub2e4.\n\uc911\ubcf5\uc21c\uc5f4\uc758 \uacbd\uc6b0 \uc21c\uc11c\uac00 \uc0c1\uad00\uc5c6\uc774 \uac19\uc740 \ubd80\ubd84\uc774 \uc5ec\ub7ec\ubc88 \ub098\uc628\ub2e4.\n\uc774\ub97c \uc774\uc6a9\ud558\uba74 \ucd5c\ub300 \uc911\ubcf5\uc21c\uc5f4\uc758 \uac1c\uc218\ub294 \uc57d 2^n\n\uc774 \ub54c \uc120\ud0dd\ud55c \ubd80\ubd84\uc9d1\ud569\uc758 \uc21c\uc11c\uc640 \ub2e4\ub978 \uc608\uc81c\ub85c \ubc14\ub010 \uc21c\uc11c\ub294 \uc911\ubcf5\uc774 \uc5c6\ub2e4.\n\n\uadf8\ub7ec\ubbc0\ub85c \uc21c\uc11c\ub97c \uc0c1\uad00\uc5c6\uc774 \uc911\ubcf5\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \ubaa8\ub4e0 \uacbd\uc6b0\uc758 \uc218\ub97c \uad6c\ud558\uace0 \uadf8 \uc911 \ucd5c\ub300 \uac12\uc744 \uad6c\ud558\uba74 \ub41c\ub2e4.\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nt_list = [int(sys.stdin.readline()) for _ in range(n)]\n\nt_list.sort()\n\nfirst_max_cost = t_list[n-1] * n\n\nt_list.reverse()\n\nsecond_max_cost = t_list[n-1] * n\n\nresult = max(first_max_cost, second_max_cost)\n\nprint(result)\n"
    },
    {
        "number": 305,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('a\\n') == ''\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 6 7 13') == '1'\nassert solution('2 3 5 8') == '2'\n\"\"\"\n\n\nimport time\nimport math\n"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 3 5 8\") == \"2\"\nassert solution(\"4 6 7 13\") == \"1\"\n\n\n-----Problem-----\n\nFind the sum of the first $n$ natural numbers.\n\n-----Solution-----"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(test_stdin) == test_stdout\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 3 5 8\") == 2\nassert solution(\"4 6 7 13\") == 1\nassert solution(\"233 233 10007 1\") == 1\n"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 3 5 8\") == \"2\"\n\"\"\""
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 6 7 13\") == \"1\"\n\"\"\"\n\nimport math\n\na, b, p, x = map(int, input().split())\n\nans = 0\n\nfor i in range(1, p):\n    if math.gcd(i, p) == 1:\n        if pow(i, x, p) == b:\n            ans += 1\n\nprint(ans)"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 8\") == \"2\"\nassert solution(\"4 6 7 13\") == \"1\"\nassert solution(\"233 233 10007 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(2,3,5,8) == 2\nassert solution(4,6,7,13) == 1\nassert solution(233,233,10007,1) == 1\n\"\"\""
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 3 5 8') == 2\nassert solution('4 6 7 13') == 1\n"
    },
    {
        "number": 306,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 3 5 8') == '2'\n\"\"\"\n\n\nfrom sys import stdin\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\n\"\"\"\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"6 6 5 4\") == \"67104\"\n\"\"\""
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 1 3 4') == 800\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"3 5 6 10\") == \"700\"\n\"\"\"\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\n\"\"\"\n\nimport math\nimport sys\nimport numpy as np\nfrom typing import List\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"1 1 1 1\") == \"256\"\n"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'"
    },
    {
        "number": 307,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\n\"\"\"\nimport sys\nimport itertools\n\n\nclass Switch:\n    def __init__(self, n, x, y, c):\n        self.n = n\n        self.x = x\n        self.y = y\n        self.c = c\n\n    def __repr__(self):\n        return f\"Switch({self.n}, {self.x}, {self.y}, {self.c})\"\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n\"\"\"\n\nfrom collections import defaultdict\nfrom math import inf\n\nfrom helpers import chronometric\n\n__author__ = 'Dmitrii Gusev'\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\n\nassert solution(\"9 3 8 10\") == \"2\"\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9 3 8 10\") == \"2\"\nassert solution(\"6 4 3 1\") == \"0\"\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('9 3 8 10') == '2'\nassert solution('6 4 3 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n\"\"\"\n\n\nimport sys\n\na = sys.stdin.readline().split()\nN, x, y, C = [int(i) for i in a]\n"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6 4 3 1') == '0'\nassert solution('9 3 8 10') == '2'\n\n-----\n\nhttps://www.codewars.com/kata/5d3da9e4951c02970e50018d/train/python\n\n*Notes*\n\nThis problem is about the \"number of seconds\" needed to get at least c cells painted, the number of seconds will be an integer (0 or positive).\n\nSo, you have to write a function that will return the number of seconds, when you have to paint on a table of nxn cells so that at least c cells will be painted.\n\nThe table has n rows (from 1 to n) and n columns (from 1 to n).\n\n1<=n<=100\n1<=c<=n^2\n1<=x<=n\n1<=y<=n\n\nSo, if n=5, c=3, x=4, y=2, then the cell (4,2) will be painted in the second.\n\n*Input/Output*\n\n[execution time limit] 4 seconds (py3)\n\n[input] string input\n\nConstraints:\n\n3 \u2264 n \u2264 100\n3 \u2264 c \u2264 n^2\n1 \u2264 x \u2264 n\n1 \u2264 y \u2264 n\n\n[output] string\n\nThe amount of seconds needed to get at least c painted cells.\n\n*Examples*\n\ninput:\n6 4 3 1\n\noutput:\n0\n\ninput:\n9 3 8 10\n\noutput:\n2"
    },
    {
        "number": 308,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('9 3 8 10') == 2\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == 3\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"8 16\") == \"31\"\nprint(\"Test 1 passed.\")\n\n\"\"\"\nfrom unittest import TestCase, main\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''1 2''') == 3\n\"\"\"\nimport math\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2\\n') == '3'\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1 2') == 3\n\n\"\"\""
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == 3\nassert solution('''8 16''') == 31\nassert solution('''1 1''') == 0\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 2\\n') == '3'\n\"\"\""
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == 3\nassert solution(\"8 16\") == 31\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('2 3') == 5\nassert solution('1 1') == 0\n"
    },
    {
        "number": 309,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('8 16\\n') == '31'"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\n\"\"\""
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\n\"\"\"\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\n\"\"\""
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"1\"\n\nassert solution(\"4 12\") == \"3\"\n\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\n\nassert solution(\"4 10000\") == \"10\"\n\nassert solution(\"1 1000000000\") == \"1\"\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''999999999999999999 999999999999999986''') == '1'\n\nassert solution('''4 4''') == '0'\nassert solution('''4 7''') == '2'\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"10 7\") == \"0\"\n"
    },
    {
        "number": 310,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\n"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\"\"\"\n\n\"\"\"\n\u0417\u0430\u0434\u0430\u0447\u0430 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0441\u0447\u0435\u0442 \u043e\u0431 \u044d\u0442\u043e\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430 Python. \n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f. \n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \u0442\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0435\u0433\u043e \u0442\u043e\u0447\u043a\u0430 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f. \n\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0420\u0435\u0437\u044c\u0431\u0435 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0435\u0433\u043e \u0442\u043e\u0447\u0435\u043a \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0438 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u0434\u043e\u043c\u0435. \n\u0417\u0430\u0442\u0435\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u043e\u0447\u0435\u043a \u043e\u0442\u043c\u0435\u0442\u043a\u0438. \n\u041f\u043e\u0441\u043b\u0435 \u0432\u0441\u0435\u0445 \u0432\u0432\u043e\u0434\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0445 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u0435\u043a \u043e\u0442\u043c\u0435\u0442\u043a\u0438. \n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0445 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.\n\n\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0420\u0435\u0437\u044c\u0431\u0435 \u043d\u0430\u0439\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a, \n\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043f\u0430\u0432\u0448\u0438 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435, \n\u0435\u0441\u043b\u0438 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \n\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u043e\u0447\u0435\u043a \u043e\u0442\u043c\u0435\u0442\u043a\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0445\u0435\u043c\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f.\n\n\u0420\u0435\u0437\u044c\u0431\u0435 \u0440\u0435\u0448\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\"\"\"\nimport sys\nimport math\n\nx, y, z, t_1, t_2, t_3 = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\"\"\""
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 1 4 4 2 1') == \"YES\"\nassert solution('1 6 6 2 1 1') == \"NO\"\nassert solution('4 1 7 4 1 2') == \"YES\"\n\n\"\"\""
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 1 4 4 2 1') == 'YES'\nassert solution('1 6 6 2 1 1') == 'NO'\nassert solution('4 1 7 4 1 2') == 'YES'"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''5 1 4 4 2 1''') == 'YES'\nassert solution('''1 6 6 2 1 1''') == 'NO'\nassert solution('''4 1 7 4 1 2''') == 'YES'\nassert solution('''100 100 100 50 5 5''') == 'YES'\nassert solution('''100 100 100 50 1 1''') == 'YES'\n"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"2 7 7 2 1 1\") == \"YES\"\nassert solution(\"8 1 2 3 9 3 6\") == \"YES\"\n"
    },
    {
        "number": 311,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 1 4 4 2 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n4 1 7 4 1 2\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n1 6 6 2 1 1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n4 1 7 4 1 2\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n\"\"\"\n\nimport math\nimport itertools\nimport re\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\n\"4 3\"\n) == \"2\"\n\nassert solution(\n\"1 1\"\n) == \"1\"\n\nassert solution(\n\"3 1\"\n) == \"2\"\n\nassert solution(\n\"4 1\"\n) == \"1\"\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 1\\n3 1') == '2'\nassert solution('1 2\\n3 1') == '2'\nassert solution('1 1\\n1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''3 1''') == '2'\nassert solution('''4 3''') == '2'\n\"\"\""
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n\"\"\"\n\nfrom itertools import product\nfrom math import gcd"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(3, 1) == 2\n\nassert solution(4, 3) == 2\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 1 0 1 1\\n\") == \"4\"\nassert solution(\"7\\n1 0 1 0 0 1 0\\n\") == \"4\"\nassert solution(\"1\\n0\\n\") == \"0\"\n"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 1 0 1 1 1\") == \"4\"\nassert solution(\"7\\n1 0 1 0 0 1 0\") == \"4\"\nassert solution(\"1\\n0\") == \"0\"\n"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 0 1 0 1\") == \"4\"\nassert solution(\"7\\n1 0 1 0 0 1 0\") == \"4\"\nassert solution(\"1\\n0\") == \"0\""
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n0 1 0 1 1 1\\n') == 4\n\n'''\n\nimport sys\nimport os"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 1 0 1 1\\n\") == \"4\"\nassert solution(\"7\\n1 0 1 0 0 1 0\\n\") == \"4\"\nassert solution(\"1\\n0\\n\") == \"0\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 1 0 1 1\\n\") == '4'\nassert solution(\"7\\n1 0 1 0 0 1 0\\n\") == '4'\nassert solution(\"1\\n0\\n\") == '0'\n\n\"\"\"\n\nfrom itertools import groupby\nfrom functools import partial"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n0 1 0 1 1 1') == '4'\nassert solution('7\\n1 0 1 0 0 1 0') == '4'\nassert solution('1\\n0') == '0'\n\"\"\"\n"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 0 1 1 1') == '4'\nassert solution('7\\n1 0 1 0 0 1 0') == '4'\nassert solution('1\\n0') == '0'"
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 1 0 1 1\\n\") == \"4\"\nassert solution(\"7\\n1 0 1 0 0 1 0\\n\") == \"4\"\nassert solution(\"1\\n0\\n\") == \"0\""
    },
    {
        "number": 313,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n0 1 0 1 1 1\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('1\\n0\\n') == '0'\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 9\") == \"-1\"\nassert solution(\"4 17\") == \"3\"\nassert solution(\"3 17\") == \"2\"\nassert solution(\"1 9\") == \"-1\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 17\\n10 10 10\\n\") == \"3\"\nassert solution(\"1 9\\n10\\n\") == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 17\") == \"3\"\nassert solution(\"1 9\") == \"1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2\") == \"2\"\nassert solution(\"3 17\\n10 10 10\") == \"3\"\nassert solution(\"1 9\\n10\") == \"-1\"\nassert solution(\"2 3\\n1 2\") == \"2\"\nassert solution(\"3 17\\n10 10 10\") == \"3\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2') == '2'\nassert solution('3 17\\n10 10 10') == '3'\nassert solution('1 9\\n10') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2\") == \"2\"\nassert solution(\"3 17\\n10 10 10\") == \"3\"\nassert solution(\"1 9\\n10\") == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(1, 9) == -1\n\"\"\"\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 3') == 3\nassert solution('1 9') == -1\nassert solution('10 10 10') == 3\nassert solution('7 9') == -1\nassert solution('7 5') == -1"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(1,2) == 2\nassert solution(3,17) == 3\nassert solution(1,9) == -1\nassert solution(10,10,10) == -1\nassert solution(3,10,10,10) == -1\n"
    },
    {
        "number": 314,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == '2'\nassert solution(\"5 2\") == '-1'\nassert solution(\"4 9\") == '3'\nassert solution(\"5 19\") == '3'\nassert solution(\"3 7\") == '-1'\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 0 1\\n\") == \"4\\n2 3 2\"\n\"\"\"\n\nn, k = list(map(int, input().split()))\n\ncount = 0\n\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] < k:\n        count += k - a[i]\n\nprint(count)\n\nfor i in range(n):\n    print(k - a[i] if a[i] < k else 0, end=\" \")\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 6\") == \"2 4 3 5\"\n\"\"\"\n\nimport sys\n\nn, k = [int(n) for n in input().split()]\na = [int(n) for n in input().split()]"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\\n\") == \"2\"\nassert solution(\"4 6\\n\") == \"0\"\nassert solution(\"4 2\\n\") == \"2\"\nassert solution(\"5 6\\n\") == \"0\"\nassert solution(\"4 2\\n\") == \"2\"\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4', 'wrong result'\nassert solution('''4 6\n2 4 3 5\n''') == '0', 'wrong result'\nassert solution('''4 6\n0 0 0\n''') == '1', 'wrong result'\nprint('Success')\n\"\"\"\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 0 1\\n\") == \"4\\n2 3 2\"\nassert solution(\"3 1\\n0 0 0\\n\") == \"1\\n0 1 0\"\nassert solution(\"4 6\\n2 4 3 5\\n\") == \"0\\n2 4 3 5\"\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 0 1\") == \"4\"\nassert solution(\"3 1\\n0 0 0\") == \"1\"\nassert solution(\"4 6\\n2 4 3 5\") == \"0\"\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 5\\n2 0 1\\n') == '4\\n2 3 2\\n'\nassert solution('4 6\\n2 4 3 5\\n') == '0\\n2 4 3 5\\n'\nassert solution('3 1\\n0 0 0\\n') == '1\\n0 1 0\\n'\nassert solution('3 1\\n0 1 0\\n') == '0\\n0 1 0\\n'\nassert solution('4 6\\n2 4 3 5\\n') == '0\\n2 4 3 5\\n'\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 0 1\\n\") == \"4\\n2 3 2\"\nassert solution(\"3 1\\n0 0 0\\n\") == \"1\\n0 1 0\"\nassert solution(\"4 6\\n2 4 3 5\\n\") == \"0\\n2 4 3 5\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 0 1\") == \"4\\n2 3 2\"\nassert solution(\"4 6\\n2 4 3 5\") == \"0\\n2 4 3 5\"\n\"\"\"\n"
    },
    {
        "number": 315,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 0 1\") == \"4\"\nassert solution(\"4 6\\n2 4 3 5\") == \"0\"\n\"\"\"\nimport math"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\"\n\"\"\"\nimport math\n\nn = int(input())\na = math.sqrt(2) * n\nprint(a)\n"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"13\"\nassert solution(\"4\") == \"8\"\n\"\"\""
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 5\nassert solution(\"3\") == 13\n\"\"\"\n"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"13\"\nassert solution(\"4\") == \"21\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 5\nassert solution(\"3\") == 13\nassert solution(\"4\") == 21\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 5\nassert solution(\"3\") == 13\n\nprint(solution(\"3\"))\n\"\"\""
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '27'\nassert solution('5') == '41'\n"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 5\nassert solution('3') == 13\nassert solution('4') == 29\nassert solution('5') == 97\n"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\n\"\"\"\n\nn = int(input())\n\nans = 2\n\nfor i in range(n - 1):\n    ans += 4 * (i + 1)\n\nprint(ans)\n"
    },
    {
        "number": 316,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '13'\n\"\"\"\n\nfrom itertools import combinations\nfrom itertools import chain"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('toosmallword') == \"NO\"\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == \"YES\"\nassert solution('abcd') == \"NO\"\nassert solution('abcdefghijklmnopqrstuvwxyz') == \"YES\"\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == \"YES\"\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('The quick brown fox jumps over the lazy dog') == 'YES'\nassert solution('The quick brown fox jumps over the lazy cog') == 'NO'\nassert solution('The quick brown fox jumps over the Lazy cog') == 'NO'\n\"\"\"\nimport string\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"The quick brown fox jumps over the lazy dog\") == \"YES\"\n\nassert solution(\"toosmallword\") == \"NO\"\n\"\"\"\n\nimport string\n\ns = stdin.split()\n\nprint('YES') if all(x in string.ascii_lowercase for x in s) else print('NO')"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nassert solution(\"abbcc\") == \"NO\"\nassert solution(\"thequickbrownfoxjumpsoverthelazydog\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n\"\"\""
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('12asd') == \"NO\"\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == \"YES\"\n\n\"\"\""
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('toosmallword') == 'NO'\nassert solution('qpipzsmpmlmmovvsdpswmuyyqmwzzl') == 'NO'\nassert solution('a') == 'NO'\nassert solution('aaaaa') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"The quick brown fox jumps over the lazy dog\") == 'YES'\nassert solution(\"The quick brown fox jumps over the lazy cog\") == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nassert solution(\"toosmallword\") == \"NO\"\nassert solution(\"\") == \"YES\"\n"
    },
    {
        "number": 317,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:10\") == \"10:10\"\n\"\"\"\n\nfrom datetime import datetime"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"00:00\") == \"00:00\"\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20:20\", \"121\") == \"22:21\"\nassert solution(\"23:59\", \"10\") == \"00:09\"\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"23:59\") == \"00:09\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('1:1') == '02:02'\nassert solution('1:1') == '02:02'\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"23:59\") == \"00:09\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"00:00\"\nassert solution(\"1:1\") == \"01:01\"\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n    \"23:59\"\n) == \"00:09\"\n\nassert solution(\n    \"20:20\"\n) == \"22:21\"\n\nassert solution(\n    \"10:10\"\n) == \"10:10\"\n\n\"\"\""
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\n\"\"\"\n"
    },
    {
        "number": 318,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"0:0\"\n\"\"\"\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\\n\") == \"YES\"\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"10101\\n01000\\n00111\\n10000\\n\") == \"YES\"\nassert solution(\"10100\\n01000\\n00110\\n00101\\n\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\") == \"YES\"\n\nassert solution(\"4 5\\n10100\\n01000\\n00110\\n00101\") == \"NO\""
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10101\\n01000\\n00111\\n10000\") == \"YES\"\n\"\"\""
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\n\"\"\"\n\nn, m = [int(num) for num in input().split()]\n\nmatrix = []\nfor i in range(n):\n    matrix.append([num for num in input().split()])\n\ncolon = [0 for i in range(m)]\n\nfor i in range(n):\n    for j in range(m):\n        colon[j] += int(matrix[i][j])\n\nfor i in colon:\n    if i > 1:\n        print(\"YES\")\n        exit()\nprint(\"NO\")\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 5\\n10101\\n01000\\n00111\\n10000\\n') == 'YES'\n\nassert solution('4 5\\n10100\\n01000\\n00110\\n00101\\n') == 'NO'\n\n\"\"\"\nimport numpy\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10101\\n01010\\n00110\\n10000\") == \"YES\"\n\nassert solution(\"10101\\n01010\\n00110\\n10001\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\\n\") == \"YES\"\nassert solution(\"4 5\\n10100\\n01000\\n00110\\n00101\\n\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 5\\n10101\\n01000\\n00111\\n10000') == \"YES\"\nassert solution('4 5\\n10100\\n01000\\n00110\\n00101') == \"NO\"\n\nassert solution('4 4\\n10111\\n10010\\n10010\\n10010') == \"YES\"\nassert solution('4 4\\n10111\\n10010\\n10010\\n10010') == \"YES\"\nassert solution('4 4\\n10011\\n10010\\n10010\\n10010') == \"NO\""
    },
    {
        "number": 319,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(a) == b\n\"\"\""
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == '0'\nassert solution(\"6 4\") == '0'\nassert solution(\"1 4\") == '-1'\nassert solution(\"2 3\") == '-1'\nassert solution(\"4 4\") == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 2\\n6 4') == '0'\nassert solution('1 2\\n3 4') == '-1'\nassert solution('3 1\\n2 3\\n4 4') == '1'\nprint(\"Passed\")\n\"\"\"\n"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n6 4\") == \"0\"\nassert solution(\"1 4\\n2 3\") == \"1\"\nassert solution(\"3 1\\n4 4\") == \"1\"\nassert solution(\"3 1\\n2 3\") == \"1\"\n\nimport numpy as np"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n2 3\\n4 4\") == 1\nassert solution(\"1 4\\n2 3\") == -1\n\"\"\""
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n6 4\") == \"0\"\nassert solution(\"1 4\\n2 3\") == \"-1\"\nassert solution(\"3 1\\n4 4\") == \"1\"\nprint('The code ran Correctly')\n\n\"\"\"\n"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n6 4\") == \"0\"\nassert solution(\"1 4\\n2 3\") == \"1\"\nassert solution(\"3 1\\n2 3\\n4 4\") == \"1\"\n\"\"\"\n\nn = int(input())\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nm = 100\nf = 0\nfor i in range(n):\n    b = [0] * 6\n    for j in range(n):\n        b[a[j][0]-1] += 1\n        b[a[j][1]-1] += 1\n\n    for x in b:\n        if x % 2!= 0:\n            m = min(m, j)\n    if m!= 0:\n        f = 1\n        break\n\nprint(m if f == 0 else -1)\n"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3\\n1 4\\n2 3\\n4 4') == '1'\nassert solution('3\\n1 4\\n2 3\\n4 4') == '-1'\nassert solution('2\\n1 4\\n2 3') == '1'"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 3\\n4 4') == '1'\nassert solution('1 4\\n2 3') == '-1'\nassert solution('3 1\\n4 4') == '0'\n"
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4') == '1'\nassert solution('1 4\\n2 3') == '-1'\nassert solution('3 1\\n4 4') == '1'\n\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u2014 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c\u0430 \u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0440\u043e\u0442\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u044f.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n (1 \u2264 n \u2264 100), \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 n \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0434\u0432\u0430 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 x_{i} (1 \u2264 x_{i} \u2264 6) \u0438 y_{i} (1 \u2264 y_{i} \u2264 6), \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0445 \u0434\u043b\u0438\u043d\u044b \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043e\u0441\u043a\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u0430-\u0432\u044b\u0445\u043e\u0434\u0430:\n\n\u0412\u0432\u043e\u0434:\n4\n2 3\n4 4\n\n\u0412\u044b\u0432\u043e\u0434:\n0\n\n\u0412\u0432\u043e\u0434:\n1\n2 3\n\n\u0412\u044b\u0432\u043e\u0434:\n-1\n\n\u0412\u0432\u043e\u0434:\n3\n1 4\n2 3\n4 4\n\n\u0412\u044b\u0432\u043e\u0434:\n1\n\n\"\"\""
    },
    {
        "number": 320,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n6 4\") == \"0\"\nassert solution(\"1 4\\n2 3\") == \"-1\"\nassert solution(\"3 1\\n2 3\\n4 4\") == \"1\"\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n16 13\") == \"YES\"\nassert solution(\"6 1690850361 24777622630\\n34 33\") == \"NO\"\nassert solution(\"6 1690850361 24777622630\\n34 33\") == \"NO\"\nassert solution(\"6 1690850361 24777622630\\n34 33\") == \"NO\"\n\"\"\""
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"YES\\nNO\\nNO\\nYES\"\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n16 13\") == \"YES\"\nassert solution(\"6 1690850361 24777622630\\n34 33\") == \"NO\"\nassert solution(\"61690850361 24777622630\\n34 33\") == \"YES\"\nassert solution(\"34 33\") == \"YES\"\n\"\"\""
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\"\nassert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"NO\"\n\"\"\"\n\nt = int(input())\nfor i in range(t):\n    a, b = list(map(int, input().split()))\n    x = (b*b-a*a)\n    if x == 0:\n        print(\"NO\")\n    elif x > 0:\n        for i in range(2, x//2+1):\n            if x % i == 0:\n                print(\"NO\")\n                break\n        else:\n            print(\"YES\")\n    elif x < 0:\n        for i in range(2, abs(x)//2+1):\n            if x % i == 0:\n                print(\"NO\")\n                break\n        else:\n            print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"NO\"\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"YES\"\nassert solution(\"5\\n16 13\\n61690850361 24777622630\\n34 33\\n\") == \"NO\"\nassert solution(\"2\\n5 6\\n9 12\\n12 9\\n3 3\\n\") == \"NO\"\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5\") == \"YES\"\nassert solution(\"4\\n16 13\") == \"NO\"\nassert solution(\"4\\n61690850361 24777622630\") == \"YES\"\nassert solution(\"4\\n34 33\") == \"NO\"\n\"\"\""
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\\nNO\\nNO\\nYES\"\n\"\"\"\nimport sys\nfrom typing import Callable\n"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\") == \"YES\\nNO\\nNO\\nYES\"\nprint(\"Test 1 passed\")\n\n\"\"\"\nimport math"
    },
    {
        "number": 321,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n16 13\") == \"YES\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"No\"\nassert solution(\"3\\n1 2\\n2 1\\n4 60\") == \"Yes\"\n\"\"\"\n\nimport sys\n\ninput = sys.stdin.readline\n\nN = int(input())"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n-1 1\\n4 60\") == \"Yes\"\nassert solution(\"2 2\\n-1 1\\n2 -1\") == \"No\"\nassert solution(\"1 1\\n-1 1\") == \"Yes\"\n\n\"\"\"\n\nfrom math import fabs"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"No\"\nassert solution(\"3\\n1 1\\n2 2\\n4 60\") == \"Yes\""
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 2\\n1 2') == 'No'\nassert solution('1 1\\n2 2\\n1 2') == 'No'\n"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n-1 1\\n-2 2\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n2 1\\n4 60\\n-1 1\\n-2 2\\n\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"No\"\nassert solution(\"3\\n1 2\\n2 1\\n4 60\") == \"Yes\"\n"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\") == \"No\"\nassert solution(\"3\\n1 1\\n2 2\\n4 60\") == \"Yes\""
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('0 0 0 0') == 'Yes'\nassert solution('1 1 1 1') == 'No'\nassert solution('0 0 1 0') == 'No'\nassert solution('0 1 0 1') == 'Yes'\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 322,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\\n4 60\") == \"Yes\"\nassert solution(\"3\\n1 1\\n2 2\\n-1 1\\n-2 2\\n4 60\") == \"No\"\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\n\nprint(solution('4 3'))\n\n-----Problem-----\n\n\u041b\u0435\u0433\u043a\u0438\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442:\n\nimport math\n\nn, k = map(int, input().split())\n\nprint(math.gcd(n, k))\n\n\n-----Solved by---\n\nMateusz Szyszkowski s184407\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 3') == '6'\n\n\"\"\"\n\nA, B = map(int, input().split())\n\nA_factorial = 1\nfor i in range(1, A+1):\n    A_factorial *= i\n\nB_factorial = 1\nfor i in range(1, B+1):\n    B_factorial *= i\n\ngcd_factorial = 1\nfor i in range(1, min(A_factorial, B_factorial) + 1):\n    if A_factorial % i == 0 and B_factorial % i == 0:\n        gcd_factorial = i\n\nprint(gcd_factorial)"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3') == 6\nassert solution('4 6') == 6\nassert solution('10 3') == 3\nassert solution('100 10') == 10\nassert solution('1 1') == 1\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 8\") == \"2\"\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"0 3\") == \"3\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 4\") == \"2\"\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3') == '6'\n\"\"\""
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3') == '6'\nassert solution('4 4') == '1'\nassert solution('2 7') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == 6\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 323,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\n\"\"\"\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"13\"\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '3 1'\nassert solution('5') == '5 4'\nassert solution('8') == '8 7'\nassert solution('7') == '7 3'\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"9 8\"\n\"\"\"\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"1 9\"\nassert solution(\"512\") == \"4608 4096\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"10\") == \"10 10\"\nassert solution(\"11\") == \"11 11\"\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2 1\"\nassert solution(\"512\") == \"4608 4096\"\n\"\"\""
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1') == '2 1'\nassert solution('2') == '3 1'\nassert solution('4') == '7 3'\nassert solution('13') == '18 9'\nassert solution('1024') == '1025 9'\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('512') == '4608 4096'\nprint(solution(input()))\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4608\") == '4096'\n\"\"\"\n\nn = int(input())\na = 2 * n - 1\nb = 2 * n\nprint(a, b)\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4') == '8 1'\nassert solution('5') == '9 4'\nassert solution('13') == '9 7'\n"
    },
    {
        "number": 324,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"3 8\"\nassert solution(\"2\") == \"1 3\"\n\"\"\"\n"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n\") == \"35\""
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n    '3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n'\n) == '35'\n"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''3 3 10\n1 2 20\n2 3 30\n1 3 45''') == '35'\n\n\"\"\"\n\nimport sys\nimport re\nimport itertools\nfrom math import factorial\nfrom collections import defaultdict\nfrom functools import lru_cache\n\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n\") == \"35\"\nprint(\"Test PASSED\")\n"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n\"\"\"\n\nfrom math import inf"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('3 3 10\\n1 2 20\\n2 3 30') == '-1'\nassert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\n\"\"\"\nimport sys"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('5 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n') == '35'\n"
    },
    {
        "number": 325,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n:\") == \"7\"\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\nba 3\\nabc 4\\n') == 7\nassert solution('3\\nba 2\\nabc 3\\n') == 8\nassert solution('3\\nba 5\\nabc 3\\n') == 9\nassert solution('3\\nba 5\\nabc 3\\n') == 9\nassert solution('3\\nba 5\\nabc 4\\n') == 12\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n\") == 7\nassert solution(\"3\\nba 5\\nabc 4\\n\") == -1\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3\\nba 3\\nabc 4') == '7'\n\"\"\"\nimport sys\nimport math\nimport re\n\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n\") == 7\nassert solution(\"3\\nabc 4\\n\") == -1\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n\") == 7\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ba 3\") == \"7\"\nassert solution(\"abc 4\") == \"9\"\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n:\") == \"7\"\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(1000000)\n\nclass MinCostString:\n    def __init__(self, stdin: str) -> None:\n        self.input = stdin\n        self.strings = []\n        self.costs = []\n        self.index = 0\n\n    def process(self) -> None:\n        strings = self.strings\n        costs = self.costs\n        index = self.index\n        self.check_input()\n        if index >= len(self.input):\n            return\n        inputs = self.input[index:]\n        costs = self.costs\n        strings = self.strings\n        index = self.index\n        splited = inputs.split(\"\\n\")\n        for i in range(len(splited)):\n            string = splited[i]\n            string = string.split()\n            if len(string) == 1:\n                cost = int(string[0])\n                costs.append(cost)\n                strings.append(\"\")\n                index += 1\n                if index >= len(self.input):\n                    return\n                self.process()\n                break\n            else:\n                string[0] = string[0].replace(\"\\n\", \"\")\n                cost = int(string[1])\n                costs.append(cost)\n                strings.append(string[0])\n                index += 1\n                if index >= len(self.input):\n                    return\n                self.process()\n\n    def check_input(self) -> None:\n        while not self.input[self.index].isspace():\n            self.index += 1\n\n    def get_strings(self) -> str:\n        return \"\".join(self.strings)\n\n    def get_costs(self) -> int:\n        return sum(self.costs)\n\n    def get_min_cost_string(self) -> int:\n        self.process()\n        return self.get_costs()"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5\\nabc 4\\na 3\\nacb 4\\nacb 5\\nbc 3\\n') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\n\") == 7\nassert solution(\"3\\nba 3\\nabc 4\\n\") == 7\nassert solution(\"3\\nba 3\\nabc 4\\n\") == 7\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"6 6\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == '7'\nassert solution(\"6 6\") == '7'\nassert solution(\"4 3\") == '7'\nassert solution(\"6 5\") == '7'\nassert solution(\"7 7\") == '0'\n\"\"\""
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3 2') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\n\"\"\"\n\nfrom typing import Dict, List, Tuple\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2 2') == '0'\nassert solution('3 3') == '7'\nassert solution('4 3') == '7'\nassert solution('6 6') == '7'\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"10\"\n\"\"\""
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"8 10\") == \"15\"\nassert solution(\"10 5\") == \"0\"\nassert solution(\"1 10\") == \"9\"\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 327,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('6 6') == '7'\nassert solution('4 3') == '7'\nassert solution('4 4') == '0'\n\"\"\"\nfrom typing import List\n\nfrom numpy import uint64\n\nN_MAX = 10 ** 18\nK_MAX = 10 ** 18\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\n\n\n---Problem---\n\nhttps://www.codewars.com/kata/5f2b1d5db6a2d8c5c2a9c56/train/python\n\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1\\n2 2\\n') == '3'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2\\n') == '4'\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n2 1\") == \"3\"\nassert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1\\n2 2\\n') == '3'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2\\n') == '4'\n\n'''\n\nfrom math import sqrt"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n2 1\\n2 2\") == \"4\"\nassert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == \"4\"\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1\\n1 2\\n2 1\\n2 2\\n3 2\") == \"4\"\nassert solution(\"6\\n1 1\\n1 2\\n2 1\\n2 2\\n3 2\\n4 2\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(test_stdin) == test_stdout\nprint(solution(input_stdin), file=output_stdout)\n"
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n2 1\\n2 2\") == \"3\"\nprint(\"All tests passed.\")\n\"\"\""
    },
    {
        "number": 328,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n2 1\\n2 2\") == \"3\"\nassert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == \"4\"\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"nineteenineteen\") == 2\n\"\"\"\n\n\nfrom collections import Counter"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('nineteenineteen') == 2\nassert solution('xiineteenppnnnewtnee') == 2\n\"\"\"\n\ns = input()\n\nn_twenty = s.count('nineteen')\nn_ninety = s.count('ninety')\n\nprint(n_twenty + n_ninety)\n"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"xiinne\") == \"n\"\nassert solution(\"nineteen\") == \"2\"\nassert solution(\"ninetenine\") == \"1\"\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcn\") == \"2\"\nassert solution(\"nineteenineteen\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"xiineteenppnnnewtnee\") == \"xnineteenppnineteenw\"\nassert solution(\"nineteen\") == \"nineteen\"\nassert solution(\"nineteen\") == \"nineteen\"\nassert solution(\"nineteen\") == \"nineteen\""
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('nineteenineteen') == 2\n\"\"\""
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"xiinneeeneeenn\") == '2'\nassert solution(\"nineteeninneeen\") == '2'\nassert solution(\"nneteeneeenn\") == '1'\nassert solution(\"nineteeneeenn\") == '0'\nassert solution(\"nninneeeenn\") == '1'\n"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"xiineteenppnnnewtnee\") == \"xnineteenppnineteenw\"\n\"\"\"\n"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"xiineteenppnnnewtnee\") == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\n\"\"\"\n\nfrom collections import Counter\nfrom typing import List\n\ns = input()\n\ncounter = Counter(s)"
    },
    {
        "number": 329,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(nineteenineteen) == 2\n\n\"\"\""
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n3 4\") == \"5\"\nassert solution(\"3 4\\n3 4\") == \"-1\"\nassert solution(\"3 4\\n3 4\\n3 4\") == \"-1\"\nassert solution(\"3 4\\n3 4\\n3 4\\n3 4\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-\"\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"4 4\") == \"-1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n\"\"\"\n\np, y = [int(i) for i in input().split()]\n"
    },
    {
        "number": 330,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 6\") == \"5\"\nassert solution(\"3 4\") == \"-1\"\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\") == \"40\"\nassert solution(\"7 3 50\\n62 0 0 0 99 33 22\") == \"30\"\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\") == \"20\"\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('0 0 0 0 0 0 0 0 0 0 0 0') == '0'\nassert solution('1 0 0 0 0 0 0 0 0 0 0 0') == '10'\nassert solution('0 0 0 0 0 0 0 0 0 0 0 1') == '10'\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\") == '40'\n\"\"\"\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\") == \"40\"\nassert solution(\"7 3 50\\n62 0 0 0 99 33 22\") == \"30\"\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\") == \"20\"\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19') == '40'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 3 50\\n62 0 0 0 99 33 22\\n\") == \"20\"\nassert solution(\"7 3 100\\n62 0 0 0 99 33 22\\n\") == \"30\"\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n\") == \"20\"\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n\") == \"20\""
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 1 20\") == \"40\""
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\\n\") == \"40\"\n\nassert solution(\"10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n\") == \"20\""
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 20\\n0 27 32 21 19\") == \"40\"\nassert solution(\"7 3 50\\n62 0 0 0 99 33 22\") == \"30\"\n\"\"\""
    },
    {
        "number": 331,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\") == \"3\"\nassert solution(\"5 2 4\") == \"4\"\nassert solution(\"7 3 5\") == \"4\"\nassert solution(\"5 5 5\") == \"3\"\nassert solution(\"7 5 5\") == \"5\"\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\"\nassert solution(\"4 4\\n4 5 6\\n5 4 7\\n6 3 8\\n7 2 9\\n3 8 9\") == \"YES\"\nassert solution(\"2 2\\n1 1\\n6 1\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\") == 'YES'\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'YES'\nassert solution('''2 2\n4 4\n5 4\n4 4\n''') == 'YES'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n''') == 'NO'\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2\\n3 5 6\\n2 5 4\\n3 1 2\\n') == 'YES'\nassert solution('4 4\\n7 8 9\\n4 5 6\\n5 4 3\\n') == 'NO'\n\n\"\"\""
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n6 1\") == \"YES\"\nassert solution(\"2 2\\n4 4\\n4 5\") == \"NO\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"YES\"\n\nsolution(stdin.read())\n\n\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n6 1\\n1 6\\n1 1\") == \"YES\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n\") == \"YES\"\n\"\"\"\n\nn_m = input().split()\nn = int(n_m[0])\nm = int(n_m[1])\n\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\n\nmatrix = []\n\nfor i in range(n):\n    for j in range(m):\n        matrix.append(a[i][j])\n\nfor i in range(m):\n    for j in range(n):\n        matrix.append(b[i][j])\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n6 1\\n1 6\\n1 1\") == \"YES\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\"\nassert solution(\"2 2\\n4 5\\n5 4\") == \"NO\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\""
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 1\\n6 1\\n1 6\\n1 1') == 'YES'\nassert solution('2 2\\n4 4\\n4 5\\n5 4\\n4 4') == 'NO'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9') == 'YES'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9') == 'NO'"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2\n1 1\n6 1\n1 6\n1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 2\n4 4\n4 5\n5 4\n4 4\n\"\"\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n6 1\") == 'YES'\nassert solution(\"2 2\\n4 5\\n4 5\") == 'YES'\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == 'YES'\nassert solution(\"2 2\\n4 5\\n5 4\") == 'NO'\nassert solution(\"2 2\\n4 5\\n5 4\\n1 1\\n6 1\") == 'NO'\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('abcd', 'defgh') == '5'\nassert solution('abcd', 'defghh') == '3'\nassert solution('a', 'a') == '-1'\n\"\"\"\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"abcd\") == \"abcd\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"ac\") == \"-1\"\nassert solution(\"abbc\") == \"b\"\nassert solution(\"abbcd\") == \"b\"\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"abcdefg\", \"abc\") == \"cde\"\nassert solution(\"abc\", \"abcdefg\") == \"cde\"\nassert solution(\"ac\", \"bc\") == \"a\"\nassert solution(\"a\", \"b\") == \"-1\"\n\"\"\""
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"abcd\", \"defgh\") == \"5\"\nassert solution(\"abc\", \"def\") == \"1\"\nassert solution(\"abcd\", \"e\") == \"-1\"\nassert solution(\"bcad\", \"bacc\") == \"3\"\nassert solution(\"sdfsdfs\", \"sdfsdfs\") == \"0\"\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"abcd\", \"defgh\") == 5\nassert solution(\"a\", \"a\") == -1\n\"\"\"\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(s1) == s2\n\n\"\"\"\n\nfrom typing import Dict\n\na = input()\nb = input()\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"abcd\", \"defgh\") == \"5\"\nassert solution(\"a\", \"a\") == \"-\"\nassert solution(\"abcd\", \"ghjd\") == \"3\"\n\n\"\"\"\n\nfrom typing import List\nimport collections\n\n\nclass Solution:\n    def solution(self, a: str, b: str) -> int:\n        a_dict, b_dict = collections.defaultdict(int), collections.defaultdict(int)\n        max_len = 0\n        for i, letter in enumerate(a):\n            a_dict[letter] = i + 1\n        for i, letter in enumerate(b):\n            b_dict[letter] = i + 1\n        for a_letter, a_index in a_dict.items():\n            if b_dict.get(a_letter):\n                b_index = b_dict[a_letter]\n                max_len = max(max_len, a_index - b_index)\n        return max_len if max_len >= 0 else -1\n\n\nclass Solution2:\n    def solution(self, a: str, b: str) -> int:\n        a_dict, b_dict = collections.defaultdict(int), collections.defaultdict(int)\n        max_len = 0\n        for i, letter in enumerate(a):\n            a_dict[letter] = i + 1\n        for i, letter in enumerate(b):\n            b_dict[letter] = i + 1\n        for i, letter in enumerate(b):\n            if a_dict.get(letter):\n                if b_dict[letter] >= i + 1:\n                    return max(max_len, i + 1 - b_dict[letter])\n                else:\n                    max_len = max(max_len, i + 1 - b_dict[letter])\n        return max_len if max_len >= 0 else -1\n\n\nassert Solution().solution(\"abcd\", \"defgh\") == \"5\"\nassert Solution().solution(\"a\", \"a\") == \"-\"\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"abcde\", \"ace\") == 3\n\n\"\"\"\n\nfrom typing import List\nfrom itertools import combinations\nfrom collections import Counter\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        a = stdin[0]\n        b = stdin[1]\n        a_list = list(a)\n        b_list = list(b)\n        a_counter = Counter(a)\n        b_counter = Counter(b)\n\n        a_comb = []\n        b_comb = []\n\n        for i in a_list:\n            if i not in b_list:\n                a_comb.append(i)\n\n        for j in b_list:\n            if j not in a_list:\n                b_comb.append(j)\n\n        lcs_list = []\n        i = 0\n        j = 0\n        while i < len(a_list) and j < len(b_list):\n            if a_list[i] == b_list[j]:\n                lcs_list.append(a_list[i])\n                i += 1\n                j += 1\n            elif a_list[i] in b_comb and b_list[j] in a_comb:\n                i += 1\n                j += 1\n            elif a_list[i] in b_comb:\n                i += 1\n            else:\n                j += 1\n\n        max_len = 0\n        for comb in combinations(lcs_list, 2):\n            if comb[0] not in b_counter or comb[1] not in a_counter:\n                max_len = max(max_len, 1)\n            else:\n                max_len = max(max_len, abs(a_counter[comb[0]] - b_counter[comb[1]]))\n\n        if max_len == 0:\n            return \"-1\"\n        return str(max_len)\n"
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"abcd\", \"defgh\") == 5\n\"\"\""
    },
    {
        "number": 333,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"abcd\", \"defgh\") == 5\nassert solution(\"aaaa\", \"b\") == -1\nassert solution(\"bb\", \"bb\") == 0\nassert solution(\"a\", \"a\") == 0\nassert solution(\"\", \"\") == -1\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"20 2\\n9 19\") == \"82\"\nassert solution(\"2 1\\n16 12\") == \"-1\""
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"20 2\\n9 19\") == 82\n\nassert solution(\"2 1\\n16 12\") == -1\n"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20 2\\\\n9 19\") == 82\n\"\"\"\n\nfrom __future__ import annotations\n\nclass Solution:\n    def solve(self, a: int, b: int, c: int, d: int) -> int:\n        a = a - c\n        b = b - d\n        if a == 0:\n            return b\n        \n        if a < 0:\n            a = -a\n            b = -b\n\n        if b < 0:\n            return -1\n\n        if a % 2 == 0:\n            return (a//2 + b)\n        else:\n            return ((a//2 + b) + (a//2 + 2*b))\n\n\ntest = Solution()\nprint(test.solve(20, 2, 9, 19))\n"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"12 34\") == \"2\"\nassert solution(\"12 5\") == \"1\"\nassert solution(\"12 34 56\") == \"-1\""
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"20 2\\n9 19\") == \"82\"\n\"\"\""
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"20 2\") == \"82\"\nassert solution(\"2 1\") == \"-1\""
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('20 2\\n9 19') == 82\n\"\"\"\n\na, b = [int(x) for x in stdin.split()]\nc, d = [int(x) for x in stdin.split()]"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"20 2\\n9 19\") == 82\n\n\"\"\"\n\na, b = [int(x) for x in stdin.split(\"\\n\")[0].split(\" \")]\nc, d = [int(x) for x in stdin.split(\"\\n\")[1].split(\" \")]"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('20 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'"
    },
    {
        "number": 334,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('20 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'\n\n\"\"\""
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"233\") == \"77 77 79\"\nprint(solution(\"233\"))\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('99999') == '77 77 79'\n\"\"\"\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('1') == '1 1 1'\nassert solution('99') == '33 33 33'\nassert solution('5') == '1 3 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\n\nimport sys"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(233) == '77 77 79'\n\"\"\"\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\n\"\"\""
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('7') == '3 3 3'\nassert solution('8') == '3 3 3'\nassert solution('9') == '4 4 4'\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(233) == \"77 77 79\"\nassert solution(3) == \"1 1 1\"\n"
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\n\"\"\""
    },
    {
        "number": 335,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 1 1 1 2') == 2\nassert solution('3 3 1 2 3') == 6\nassert solution('8 5 1 2 4') == 2\nassert solution('9 10 2 9 2') == 6\nassert solution('10 10 2 9 2') == 6\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 1 2\") == 2\nassert solution(\"3 3 1 2 3\") == 6\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 1 2\") == 2\n\n\"\"\"\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(stdin) == output\nprint(solution(stdin))\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 1 1 1 2') == 2\nassert solution('3 3 1 2 3') == 6\n\"\"\"\n\na, b, c, d = map(int, input().split())\ns = set()\nfor i in range(a):\n    for j in range(b):\n        for k in range(c):\n            if i + j + k not in s:\n                s.add(i + j + k)\n\nfor i in range(d):\n    for j in range(c):\n        if a + j + j not in s:\n            s.add(a + j + j)\nprint(len(s))\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2 3\") == \"6\"\n\n\"\"\"\n\nn, a, b, c, d = list(map(int, stdin.split()))"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2 3\") == 6\nassert solution(\"2 1 1 1 2\") == 2\n\"\"\"\n"
    },
    {
        "number": 336,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 1 2\") == 2\nassert solution(\"3 3 1 2 3\") == 6\nassert solution(\"3 3 3 3 3\") == 10\nassert solution(\"4 4 1 2 3\") == 0\nassert solution(\"4 4 4 4 4\") == 0\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == 0\n'''"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\nassert solution(\"4 3\\n9 2\\n8 4\") == \"0\"\n\"\"\"\nimport unittest"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == 8\n\"\"\""
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2\\n') == '8'\nassert solution('5 3\\n1 1\\n1 2\\n') == '0'\n\n'''\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 1\\n1 2') == '8'\nassert solution('4 3\\n9 2\\n0 1') == '1'\nassert solution('4 3\\n9 2\\n9 3') == '1'\n\nsolution:\nw, h = map(int, stdin.readline().split())\nu1, d1 = map(int, stdin.readline().split())\nu2, d2 = map(int, stdin.readline().split())\n\nu1 = u1 if u1 > d1 else d1\nd1 = d1 if d1 > u1 else u1\nu2 = u2 if u2 > d2 else d2\nd2 = d2 if d2 > u2 else u2\n\ns = (w + d2) - (u1 + u2)\nh = (u1 + u2) - (d1 + d2)"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3 1 1 2') == 8\n\"\"\"\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\n\"\"\"\n\nw, h = map(int, input().split())\nu1, d1 = map(int, input().split())\nu2, d2 = map(int, input().split())\n\nn = d1 - u1 + 1\n\ns = h - u1\n"
    },
    {
        "number": 337,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 3 1 1 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3 2 1\\n6 8\\n3 10\") == '3'\nassert solution(\"5 4 3 2 1\\n6 8\\n3 10\") == '4'\n\"\"\"\n\nm = int(stdin.readline().strip())\nc = list(map(int, stdin.readline().split()))\nx, y = list(map(int, stdin.readline().strip().split()))\n\nfor i in range(m):\n    if c[i] < x:\n        c[i] = 0\n    elif c[i] > y:\n        c[i] = y\n\nc.sort()\nc.reverse()\nfor i in c:\n    print(i, end=\" \")\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\\n\") == \"3\"\nassert solution(\"2\\n2 5\\n3 6\\n\") == \"0\""
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4 3 2 1 6 8\") == \"3\"\n\"\"\"\n\nm = int(input())\nc = list(map(int, input().split()))\nx, y = list(map(int, input().split()))\n\nc.sort()"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n3 4 3 2 1\\n6 8\\n\"\n) == \"3\"\n\nassert solution(\n    \"5\\n0 3 3 4 2\\n3 10\\n\"\n) == \"4\"\n\nassert solution(\n    \"2\\n2 5\\n3 6\\n\"\n) == \"0\"\n\"\"\"\n\nimport math\n\nm = int(input())\nc = list(map(int, input().split()))\nx, y = map(int, input().split())\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\\n\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\\n\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\\n\") == \"0\"\nprint(\"Passed!\")\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 3 4 3 2 1\") == \"3\"\nassert solution(\"6 8\") == \"4\"\nassert solution(\"2 5\") == \"0\"\nassert solution(\"2 5 3 6\") == \"0\"\nassert solution(\"3 6\") == \"1\""
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('7 3 1 6 4 2 5') == '2'\nassert solution('6 8') == '0'\nassert solution('3 5') == '0'\nassert solution('2 5') == '4'\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\\n\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\\n\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\\n\") == \"0\"\n"
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 338,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\") == \"3\"\nassert solution(\"2\\n2 5\\n3 6\") == \"0\"\nassert solution(\"5\\n0 3 4 3 2\\n6 8\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\") == \"0\"\nassert solution(\"2\\n10 10\\n3 6\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(9) == 6\nassert solution(5) == 8"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"9\\n2\\n3\\n1\") == \"6\"\nassert solution(\"5\\n5\\n2\\n20\") == \"8\"\nassert solution(\"19\\n3\\n4\\n2\\n\") == \"12\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"9\\n2\\n3\\n1\") == 6\nassert solution(\"5\\n5\\n2\\n20\") == 8\n\"\"\"\n\nfrom sys import stdin\n\nn = int(stdin.readline())\nk = int(stdin.readline())\nA = int(stdin.readline())\nB = int(stdin.readline())"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('5\\n5\\n2\\n20\\n') == '8'\n\"\"\"\n"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('9 2 3 1') == '6'\nassert solution('5 5 2 20') == '8'\nassert solution('19 3 4 2') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9\\n2\\n3\\n1\\n\") == \"6\"\nassert solution(\"5\\n5\\n2\\n20\\n\") == \"8\"\nassert solution(\"19\\n3\\n4\\n2\\n\") == \"12\"\n\"\"\""
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('5\\n5\\n2\\n20\\n') == '8'\nassert solution('19\\n3\\n4\\n2\\n') == '12'\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('9 2 3 1') == '6'\n\n\"\"\"\n\nfrom itertools import count\nimport numpy as np\n\nn = int(input().strip())\nk = int(input().strip())\nA = int(input().strip())\nB = int(input().strip())"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n3\\n1\") == \"6\"\nassert solution(\"5\\n5\\n2\\n20\") == \"8\"\nassert solution(\"19\\n3\\n4\\n2\\n\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 339,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(9, 2, 3, 1) == 6\nassert solution(19, 5, 2, 20) == 8\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"10 2\"\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('20') == '10 2'\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('20') == \"10 2\"\nassert solution('5184') == \"6 4\"\nassert solution('1') == \"1 0\"\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\n\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(100) == 10 2\nassert solution(5184) == 6 4\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5184\") == (6, 4)\nassert solution(\"20\") == (10, 2)\n\"\"\"\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5184') == '6 4'\nassert solution('20') == '10 2'"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'\n"
    },
    {
        "number": 340,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"1\") == \"1 0\"\n\"\"\""
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n8 7 6\\nrsrpr\\n\") == \"27\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n\"\n                 \"p p\\n\"\n                 \"p\") == '0'\nassert solution(\"3 1\\n\"\n                 \"r p\\n\"\n                 \"p r\\n\"\n                 \"p p\\n\"\n                 \"r\") == '5'\n\"\"\"\n\nimport sys\nfrom itertools import combinations\nfrom collections import defaultdict\n"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nr s p\\nrsrpr\") == \"27\"\n\"\"\""
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr\n''') == '27'\nprint('OK!')\n\n-----TEST-----\nimport sys, traceback\n\nassert str(solution('''5 2\n8 7 6\nrsrpr\n''')) == '27'\nprint('OK!')\n\nassert str(solution('''5 2\n7 5 2\nrprrs\n''')) == '15'\nprint('OK!')\n\nassert str(solution('''5 2\n8 7 6\nrsrrr\n''')) == '0'\nprint('OK!')\n\nassert str(solution('''5 2\n8 7 6\nrsrrr\n''')) == '0'\nprint('OK!')"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2\\nrr\\nrs\\nrr') == '6'\nassert solution('6 5\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp\\nppp"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 2\\n8 7 6\\nrsrpr') == '27'\n\"\"\"\n\nimport math\nimport itertools"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nrspr\\nr\") == \"27\"\nprint(solution(stdin))"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nr\\np\\nr\\ns\\nr\") == \"27\"\n\"\"\""
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('8 7 6\\nrsp\\nrsp\\nrp\\nrpr\\n') == '27'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 341,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8 7 6\\nrsrpr\") == \"27\"\n\"\"\""
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\""
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == 1\nassert solution(\"ababab\") == 7\nassert solution(\"aab\") == 2\nassert solution(\"bba\") == 2\nassert solution(\"bbaa\") == 2\n"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\"\n\nprint(solution(input()))"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"b\") == 1\nassert solution(\"ab\") == 2\nassert solution(\"ba\") == 2\nassert solution(\"aa\") == 0\n"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"2 2 1\") == \"6\"\nassert solution(\"10000000 10000000 10000000\") == \"4000000000\"\n\nimport itertools"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\n\"\"\"\nimport sys"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"1 1 1\") == 4\n\nassert solution(\"3 5 2\") == 11\n\nassert solution(\"2 1 2\") == 7\n"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 1 1\\n') == '4'\nassert solution('2 1 2\\n') == '7'\nassert solution('3 5 2\\n') == '11'\nassert solution('1000000000 1000000000 1000000000\\n') == '4000000000'\n"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1 1 1\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"4\"\n\n\nfrom typing import List"
    },
    {
        "number": 342,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"1 1 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 3 5 18 4\"\n) == \"4 1\"\n\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\nassert solution(\"3 5 4\") == \"1 3\"\nassert solution(\"5 3 5 16 4\") == \"4 1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 3 5 16 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"4 1\"\nassert solution(\"5 3 5 16 5\") == \"4 1\"\nassert solution(\"5 3 5 16 6\") == \"4 1\"\nassert solution(\"5 3 5 16 7\") == \"4 1\""
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 3 5 16 4\") == '4 1'\nassert solution(\"5 3 5 15 4\") == '-1'\n\"\"\""
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3 5 18 4\") == '4 1'\nassert solution(\"5 3 5 16 4\") == '-1'\nassert solution(\"5 3 5 16 15\") == '-1'\nassert solution(\"5 3 5 18 17\") == '4 1'\nassert solution(\"5 3 5 18 18\") == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\n\"\"\"\n\nimport collections"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 3 5 18 4\\n3 5 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\\n5 5 5\") == \"-1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5 16 4\") == \"1 3\"\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3 2 16 4\") == \"-1\"\nassert solution(\"4 5 3 2 16 6\") == \"3 6\"\nassert solution(\"4 5 3 2 16 7\") == \"4 7\"\n\"\"\""
    },
    {
        "number": 343,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 3 5 16 4') == '4 1'\nassert solution('5 3 5 16 6') == '-1'\n\n\"\"\"\n\nn, k, p, x, y = (int(i) for i in input().split())\nmarks = [int(i) for i in input().split()]\n\nmarks.sort()\n\nres = []\nfor i in range(n - k):\n    res.append(marks[i + k] - marks[i])"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('anime') == 'NO'"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\nprint(\"Success\")\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\"\"\"\n\nimport sys\nimport string"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"sumimasen\") == 'YES'\nassert solution(\"ninja\") == 'YES'\nassert solution(\"codeforces\") == 'NO'\nprint(\"tests passed\")\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"codeforces\") == \"NO\"\nassert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n\"\"\"\n\ns = input()\nprev = '_'\nfor char in s:\n    if char in 'aeiou':\n        if prev!= 'n':\n            print('NO')\n            exit()\n    elif char!= 'n':\n        print('NO')\n        exit()\n    prev = char\nprint('YES')\n"
    },
    {
        "number": 344,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(\"sumimasen\"), \"YES\")\n        self.assertEqual(solution(\"ninja\"), \"YES\")\n        self."
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"4\"\n\"\"\"\n\nfrom typing import Tuple\nfrom collections import defaultdict\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"4\"\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\") == \"16\"\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"4\"\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n\") == \"16\"\n\n\"\"\"\n\nfrom typing import Tuple, List, Set, Dict\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"4\"\n\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n\") == \"16\"\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"4\"\n\"\"\"\n\nfrom collections import Counter, defaultdict\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == '4'\nassert solution('''7 0\n''') == '0'\nassert solution('''3 1\n1 3\n''') == '1'\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '4'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n') == '16'\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"4\"\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\") == \"16\"\n"
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '4'\n\"\"\""
    },
    {
        "number": 345,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1') == '4'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '16'\nassert solution('7 20\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '16'\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3') == '18'\nassert solution('3 2\\n10 3 8\\n2 3') == '40'\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\nd = {}\n\nfor i, v in enumerate(b):\n    if v not in d.keys():\n        d[v] = i\n\nprint(sum(a[d[i]:]))"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3\\n') == '18'\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\n\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\"\n\nassert solution(\"2 2\\n100 200\\n1 2\\n\") == \"400\"\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('2 4') == '8'\nassert solution('8 5') == '24'\nassert solution('3 1') == '9'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3\\n') == '18'\nassert solution('3 2\\n10 3 8\\n2 3\\n') == '40'\n\"\"\"\n\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nprint(sum([max(0, arr[i] - b[i]) for i in range(n - m)]))\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\"\n\n\"\"\"\n\nimport math\nimport sys\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3\\n') == '18'\n"
    },
    {
        "number": 346,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\n\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\"\n\nassert solution(\"2 2\\n100 200\\n1 2\\n\") == \"400\"\n\n\"\"\""
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4900\"\n\"\"\""
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n\") == \"4930\"\nassert solution(\"0 0 0 0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"4930\"\nassert solution(\"0 0 0 0 0\\n1 0\\n0 0\\n0 0\\n0 0\\n\") == \"4930\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\") == \"4930\"\n"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\") == \"4930\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\") == \"4930\"\n\"\"\"\n\nfrom typing import Tuple\n\nm: Tuple[int,...] = tuple(map(int, input().split()))\nw: Tuple[int,...] = tuple(map(int, input().split()))\nh: Tuple[int,...] = tuple(map(int, input().split()))"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == ''"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0') == '4930'\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"20 40 60 80 100\") == \"4900\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\nassert solution(\"0 0 0 0 0\") == \"4930\"\nassert solution(\"10 0\") == \"4930\"\nassert solution(\"0 0 0 0 0\") == \"4930\"\n"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4930\"\n"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"20 40 60 80 100\") == \"4900\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\n"
    },
    {
        "number": 347,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\") == '4900'\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\") == '4930'\n\"\"\""
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\\n1 1 1 1\") == 1\nassert solution(\"1 1 1 2\") == 2\nassert solution(\"3 5 5 1\\n2 3 3 4\") == 6\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('2 2 1 1') == '1'\nassert solution('2 2 1 2') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1 1\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\"\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    '2 2 1 1'\n) == '1'\n\nassert solution(\n    '1 2 1 2'\n) == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 2 1 1') == 1\nassert solution('1 2 1 2') == 2\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 1''') == 1\nassert solution('''1 2 1 2''') == 2\n\n'''\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 2\") == 2\n\"\"\"\n\nimport sys\n\nn, m, l, r = map(int, sys.stdin.readline().split())\n\nnum = 0\nfor i in range(n):\n    for j in range(m):\n        if (j - 1 >= 0 and j + 1 < m):\n            if (i - 1 >= 0 and i + 1 < n):\n                if (j - 1 >= 0 and j + 1 < m):\n                    if (i - 1 >= 0 and i + 1 < n):\n                        if (i - 1 >= 0 and i + 1 < n):\n                            if (j - 1 >= 0 and j + 1 < m):\n                                num += 1\n\nprint(num)\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 348,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == 1\nassert solution(\"2 2 1 1\") == 1\nassert solution(\"1 2 1 2\") == 2\nassert solution(\"2 2 1 2\") == 2\nassert solution(\"3 3 1 1\") == 6\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Impossible\"\n\n\"\"\"\n\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n') == \"Possible\"\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == \"Possible\"\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n') == \"Impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n\") == \"Impossible\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 'Impossible'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12') == 'Impossible'\nassert solution('1\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n9\\n10') == 'Impossible'\nassert solution('1\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n9\\n10') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\") == \"Impossible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\") == \"Possible\"\nassert solution(\"2 2\\n1 3\\n2 4\") == \"Impossible\"\n\"\"\""
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12') == 'Possible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n') == 'Impossible'\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10000000)\n\nn, m = map(int, sys.stdin.readline().split())\na = [0] + list(map(int, sys.stdin.readline().split()))\nb = [0] + list(map(int, sys.stdin.readline().split()))\n\ndp = [[False] * (m + 1) for _ in range(n + 1)]\ndp[0][0] = True\nfor i in range(1, n + 1):\n    dp[i][0] = dp[i - 1][0] and a[i] <= a[i - 1]\nfor j in range(1, m + 1):\n    dp[0][j] = dp[0][j - 1] and b[j] <= b[j - 1]\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Impossible\"\n\n\"\"\"\n\nfrom collections import deque\nimport sys\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\") == 'Impossible'\nassert solution(\"2\\n10\\n11\\n5\") == 'Possible'\nassert solution(\"1\\n10\\n11\\n5\") == 'Possible'\nassert solution(\"1\\n10\\n11\\n5\\n5\") == 'Possible'\nassert solution(\"1\\n10\\n11\\n5\\n5\\n5\") == 'Possible'\n\n\"\"\"\n\n\n\n\"\"\"\nintuition\n\ndp[i][j] is the minimum swap to make the i-th row and j-th column increasing\n\nfirst line and last line are increasing\n\nfor each row and column:\n  if the next number is smaller than current number, it is ok\n  if the next number is bigger than current number, we should swap\n\ndp[i][j] = min(dp[i][j], dp[i - 1][j] + 1, dp[i][j - 1] + 1)\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n\") == \"Possible\"\nassert solution(\"3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n\") == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 5 5\") == \"11\"\nassert solution(\"3\\n1 1 2\") == \"3\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n2 5 5\") == \"11\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 2 5') == '11'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 5 5\") == \"11\"\nassert solution(\"3 1 1 2\") == \"3\"\n\"\"\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 2\\n') == 3\n\"\"\"\n\nimport sys\n\nALPHABET = \"abcdefghijklmnopqrstuvwxyz\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 2 5') == '11'\nassert solution('3 1 1') == '3'\nassert solution('1 1 2') == '3'\n"
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\") == \"11\"\nassert solution(\"3\\n1 1 2\") == \"11\"\n\n\"\"\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2 5\") == \"11\"\nassert solution(\"3 1 5\") == \"3\"\nassert solution(\"3 1 1\") == \"3\"\n\"\"\""
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 5 5\\n\") == 11\nassert solution(\"3\\n1 1 2\\n\") == 3\n\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 350,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\") == \"11\"\nassert solution(\"3 2 5\") == \"11\"\nassert solution(\"3 5 5\") == \"11\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"1 1 1\") == \"3\"\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 20\\n10 3 6 3\") == '0'\nassert solution(\"3 3\\n2 1 9\") == '1'\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1\\n3') == '1\\n'\nassert solution('1\\n2\\n3') == '1\\n2\\n'\nassert solution('1\\n2\\n3\\n') == '1\\n2\\n3\\n'\nassert solution('2\\n3') == '1\\n2\\n'\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\n\"\"\""
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 1 9\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 20\") == \"0\"\nassert solution(\"10 3 6 3\") == \"0\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 20\\n10 3 6 3') == '0'\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 1 9\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 20\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 20\\n10 3 6 3') == '0'\n\nassert solution('3 3\\n2 1 9') == '1'\nassert solution('4 20\\n10 3 6 3') == '0'\nassert solution('5 20\\n1 2 3 4 5') == '0'\nassert solution('6 20\\n1 2 3 4 5 6') == '0'\n"
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\"\"\""
    },
    {
        "number": 351,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5\\n2 6\\n3 7\") == \"1 2 3\"\nassert solution(\"10\\n1 2\\n1 3\\n1 5\\n\") == \"2 3 5\"\nassert solution(\"6\\n1 3\\n2 2\\n2 2\\n\") == \"2 2 2\"\nassert solution(\"10\\n1 3\\n1 5\\n1 5\\n\") == \"2 3 5\"\n\nprint(\"Successfully solved!\")\n"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 6\") == \"2 2 2\"\nassert solution(\"10 6\") == \"2 2 3\"\n\"\"\"\n\n\"\"\"\n\u0417\u0430 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0435\u0439 \u0412\u0430\u0441\u0438\u043b\u044c \u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u0437\u0430\u0434\u0430\u0447\u0443 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c, \u0447\u0442\u043e \u0441\u043b\u043e\u0432\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0438 \u0447\u0442\u043e \u0432 \u0441\u043b\u043e\u0432\u0430 \u043d\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432.\n\n\u0412\u0430\u0441\u0438\u043b\u044c \u0438 \u0435\u0433\u043e \u0441\u043e\u043f\u0435\u0440\u043d\u0438\u043a \u043f\u043e\u043c\u043e\u0433\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u0434\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u0432\u0438\u0434\u0435 \u0447\u0438\u0441\u043b\u0430 n, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u044f. \u0412\u0430\u0441\u0438\u043b\u044c \u0438 \u0435\u0433\u043e \u0441\u043e\u043f\u0435\u0440\u043d\u0438\u043a \u043e\u0436\u0438\u0434\u0430\u044e\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 n1 \u0438 n2, \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435. \u0412\u0430\u0441\u0438\u043b\u044c \u0442\u0430\u043a\u0436\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0447\u0438\u0441\u043b\u0430 m \u0438 k, \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d.\n\n\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0441\u0442\u0440\u043e\u043a \u0432\u0432\u043e\u0434\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c.\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 n1 \u0438 n2 (3 \u2264 n1, n2 \u2264 10^6) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0414\u0430\u043b\u0435\u0435 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f n \u0441\u0442\u0440\u043e\u043a. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 m \u0438 k (1 \u2264 m \u2264 100) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0445 \u0440\u0430\ufffd"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 5 1\") == \"1 2 3\"\nassert solution(\"1 5\") == \"1 2 3\"\nassert solution(\"3 5 6\") == \"1 2 3\"\n"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('6\\n1 5\\n2 6\\n3 7') == '1 2 3'\nassert solution('10\\n1 2\\n1 3\\n1 5') == '2 3 5'\nassert solution('6\\n1 2\\n2 3') == '2 2 2'\nassert solution('10\\n1 5\\n1 5') == '2 2 2'\nassert solution('10\\n1 2\\n2 3') == '2 3 3'\n"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''6\n1 5\n2 6\n3 7''') == '1 2 3'\nassert solution('''10\n1 2\n1 3\n1 5''') == '2 3 5'\nassert solution('''6\n1 3\n2 2\n2 2''') == '2 2 2'"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 6\") == \"2 3\"\nassert solution(\"1 5\") == \"1 2\"\n\"\"\"\n"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n1 1\") == \"1 1 1\"\n\nassert solution(\"4\\n2 5\\n2 5\") == \"2 2 2\"\n\nassert solution(\"4\\n1 1\\n1 1\") == \"1 1 1\"\n\nassert solution(\"4\\n1 5\\n1 5\") == \"1 1 1\"\n\nassert solution(\"5\\n1 3\\n1 3\") == \"1 1 1\""
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6\\n1 5\\n2 6\\n3 7\\n') == '1 2 3'\nassert solution('10\\n1 2\\n1 3\\n1 5\\n') == '2 3 5'\nassert solution('6\\n1 3\\n2 2\\n2 2\\n') == '2 2 2'\n\nprint('The local tests are done. Click on \"Check\" for more real tests.')"
    },
    {
        "number": 352,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1 1 1\"\nassert solution(\"5\") == \"1 1 1\"\nassert solution(\"10\") == \"1 1 1\"\nassert solution(\"6\") == \"1 2 2\"\nassert solution(\"7\") == \"1 2 2\"\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"UP\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1\\n8\") == \"-1\"\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"UP\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1\\n8\") == \"UP\"\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n3 4 5 6 7') == 'UP'\nassert solution('7\\n12 13 14 15 14 13 12') == 'DOWN'\nassert solution('1\\n8') == '-1'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"UP\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1\\n8\") == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"UP\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1\\n8\") == \"-1\"\n\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"DOWN\"\nassert solution(\"2 3 4 5 6 7 8\") == \"UP\"\nassert solution(\"3 4 5 6 7 8 9\") == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n3 4 5 6 7') == 'UP'\nassert solution('7\\n12 13 14 15 14 13 12') == 'DOWN'\nassert solution('1\\n8') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == \"UP\"\nassert solution(\"7\\n12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1\\n8\") == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 4 5 6 7\") == 'UP'\nassert solution(\"7\\n12 13 14 15 14 13 12\") == 'DOWN'\nassert solution(\"1\\n8\") == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 5 6 7\") == \"UP\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299\") == \"DOWN\"\nassert solution(\"7 12 13 14 15 14 13 12\") == \"DOWN\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299\") == \"DOWN\"\nassert solution(\"4 5 6 7\") == \"UP\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('ua') == 'No'\nassert solution('akm') == 'No'"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"ua\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"ukm\") == \"No\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"ua\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"ukm\") == \"Yes\"\nassert solution(\"akm\") == \"No\""
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"ua\") == \"No\"\nassert solution(\"au\") == \"No\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"ua\") == \"No\"\n\nassert solution(\"a\") == \"Yes\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('a') == 'No'\nassert solution('a') == 'No'\n\n\"\"\"\nimport string\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"ukm\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"ua\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\n\"\"\"\nimport collections\nimport re\nimport sys\n"
    },
    {
        "number": 354,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('akm') == 'No'\nassert solution('a') == 'Yes'\n\"\"\"\n\n\nimport re"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"A\"\nassert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\".B....B\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"A\"\nassert solution(\"........\\n..W.....\\n......B.\\n........\\n...B....\\n..B.....\\n........\\n........\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"........\\n\"\n\"........\\n\"\n\".B....B.\\n\"\n\"....W...\\n\"\n\"........\\n\"\n\"..W.....\\n\"\n\"........\\n\"\n\"........\") == \"A\"\nassert solution(\"........\\n\"\n\"........\\n\"\n\".B....B.\\n\"\n\"....W..\\n\"\n\"........\\n\"\n\"..W.....\\n\"\n\"........\\n\"\n\"........\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"........\\n\"\n                \"........\\n\"\n                \".B....B.\\n\"\n                \"....W...\\n\"\n                \"........\\n\"\n                \"..W.....\\n\"\n                \"........\\n\"\n                \"........\\n\") == \"A\"\nassert solution(\"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"......B.\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\") == \"B\"\nassert solution(\"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\") == \"B\"\nassert solution(\"......B.\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\") == \"A\"\nassert solution(\"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\"\n                \"........\\n\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\") == \"A\"\nassert solution(\"...B....\\n...W....\\n........\\n...W....\\n........\\n...B....\\n........\\n........\") == \"B\"\nassert solution(\"...B....\\n...W....\\n........\\n...W....\\n........\\n...B....\\n........\\n........\") == \"A\"\nassert solution(\"...B....\\n...W....\\n........\\n...W....\\n........\\n...B....\\n........\\n........\") == \"B\"\nassert solution(\"....B...\\n....W...\\n...B....\\n...W....\\n......B.\\n......W.\\n........\\n........\") == \"A\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(stdin) == output\n\"\"\"\n\nimport sys"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"A\"\nassert solution(\"........\\n........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"B\"\nassert solution(\"........\\n........\\n........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"A\"\nassert solution(\"........\\n........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"........\") == \"A\"\nassert solution(\"........\") == \"B\"\nassert solution(\"B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n\") == \"A\"\nassert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\") == \"B\"\n\"\"\""
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\".B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n\") == \"A\"\nassert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\\n\") == \"B\"\n"
    },
    {
        "number": 355,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n\") == \"A\"\nassert solution(\"........\\n........\\n.W....B.\\n....W...\\n........\\n..B.....\\n........\\n........\\n\") == \"B\"\nassert solution(\"........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n\") == \"A\"\n\"\"\"\nimport sys\nfrom collections import deque\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n2\") == \"2\\n3\\n3\\n0\"\nassert solution(\"5\\n1 2 3 5 7\\n4\\n11 7 3 7\\n\") == \"4\\n11 7 3 7\\n3\\n0\"\n\"\"\"\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(None) == None\n\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 2 2 3') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n11 2 3 5 7\") == 3\nassert solution(\"4\\n11 7 3 7\") == -1\nassert solution(\"2\\n1 2\\n1\\n100\") == 3\nassert solution(\"3\\n1 2 3\\n1 2 3\") == 3\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n11 2 3 5 7\\n4\\n11 7 3 7') == '3'\n\n\"\"\""
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n11 2 3 5 7\\n4\\n11 7 3 7\") == \"3\"\nassert solution(\"5\\n11 2 3 5 7\\n4\\n11 7 3 7\") == \"3\"\nassert solution(\"5\\n11 2 3 5 7\\n4\\n1 2 3 4\") == \"-1\"\nassert solution(\"5\\n11 2 3 5 7\\n4\\n1 2 3 4\") == \"-1\"\n\nprint(solution(\"5\\n11 2 3 5 7\\n4\\n11 7 3 7\"))\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n11 2 3 5 7\\n4\\n11 7 3 7\") == 3\n\"\"\"\nimport sys"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n11 2 3 5 7\\n4\\n11 7 3 7\") == '3'\nassert solution(\"2\\n1 2\\n1\\n100\") == '-1'\nassert solution(\"3\\n1 2 3\\n3\\n1 2 3\") == '3'\nassert solution(\"1\\n10\\n10\") == '1'\nassert solution(\"3\\n10 10 3\\n10 10 3\") == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(    \"5\\n11 2 3 5 7\\n4\\n11 7 3 7\\n\") == 3\n\"\"\""
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5\\n11 2 3 5 7\\n4\\n11 7 3 7') == '3'\nassert solution('2\\n1 2\\n1\\n100') == '-1'\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 356,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n1 2 3\") == '3'\nassert solution(\"5\\n1 2 3 5 7\\n4\\n11 7 3 7\") == '3'\nassert solution(\"5\\n1 2 3 5 7\\n4\\n11 7 3 7\") == '3'\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_string\") == \"YES\"\nassert solution(\"Nikita_and_string\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n\nprint(\"All test cases passed.\")\n\n-----\n"
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('NikitaAndString') == 'YES'\nassert solution('NikitaAndString') == 'YES'\nassert solution('NikitaAndString') == 'YES'\nassert solution('NikitaAndString') == 'YES'\nassert solution('NikitaAndString') == 'YES'\n"
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nassert solution(\"Nikita_and_string\") == \"NO\"\nassert solution(\"Danil_and_olya\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\""
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nassert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Nikita_and_String\") == \"NO\"\nassert solution(\"Nikita_and_String\") == \"YES\"\n"
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\n\"\"\"\nimport re\n"
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_string\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nprint(\"Passed all tests\")\n"
    },
    {
        "number": 357,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('NikitaAndString') == 'YES'\nassert solution('Alex_and_broken_contest') == 'NO'\nassert solution('Danil_and_Olya') == 'NO'\nprint('Passed')\n\n\n\n\n\"\"\""
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\nassert solution(\"1 4 3\") == \"1\"\nassert solution(\"6 13\") == \"4\"\n\n\"\"\"\nfrom math import sqrt\nfrom itertools import combinations_with_replacement\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 4 2\") == 3\n\"\"\""
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 4 2') == '3'"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''2 4 2''') == '3'\n\"\"\"\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 4 2\") == \"3\"\n\"\"\"\n\nimport sys\n\na, b, k = list(map(int, sys.stdin.readline().split()))\n\ncount = 0\ncount_prime = 0\nprime = [True for i in range(b+1)]\n\nfor i in range(2, b+1):\n    if prime[i]:\n        count_prime += 1\n        for j in range(i, b+1, i):\n            if prime[j]:\n                prime[j] = False\n                count += 1\n                if count == k:\n                    print(j)\n                    exit()\n\nprint(-1)\n"
    },
    {
        "number": 358,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == -1\nassert solution('2 4 2') == 3\nassert solution('6 13 1') == 4\n'''\n\n\nimport math\n"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1, 1, 1\\n10, 1, 1\") == \"0.5\"\nassert solution(\"2, 2, 1\\n20, 2, 2\") == \"0\"\nassert solution(\"3, 3, 3\\n10, 1, 1\") == \"-1\""
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 18 13\") == \"0.5\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"3 4 3\") == \"-1\"\n\"\"\""
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 4 5\") == \"10\"\nassert solution(\"6 7 9\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 18 13\") == '0.5'\nassert solution(\"4 4 4\") == '0'\nassert solution(\"3 4 3\") == '-1'\nprint(\"You are awesome!\")"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\") == \"0\"\nassert solution(\"2 18 13\") == \"0.5\"\n"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\") == -1\nassert solution(\"4 4 4\") == 0\nassert solution(\"2 18 13\") == 0.5\n\nimport sys\n"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 18 13\") == \"0.5\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"3 4 3\") == \"-1\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(2, 18, 13) == '0.5'\n\nassert solution(4, 4, 4) == '0'\n\nassert solution(3, 4, 3) == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 18 13\") == '0.5'\nassert solution(\"4 4 4\") == '0'\nassert solution(\"3 4 3\") == '-1'\n\"\"\"\n\na,h,w = map(int,input().split())\na /= 2\nh /= 2\nw /= 2\n\nprint(a+h+w-2 if a+h+w > 2 else \"-1\")\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3\\n4 7\\n8 11\\n2\") == \"3\"\n\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\") == \"2\"\n\nassert solution(\"1\\n1 7\\n4\") == \"1\"\n\n\"\"\"\n\nimport sys\nfrom typing import Iterator, List, Tuple\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('1 7\\n4') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\") == \"2\"\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n5\") == \"2\"\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n5\") == \"2\"\nassert solution(\"1\\n1 7\\n4\") == \"1\"\nassert solution(\"2\\n1 4\\n5 9\\n10 12\\n5\") == \"1\"\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\") == \"2\"\nassert solution(\"1\\n1 7\\n4\") == \"1\"\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n2\") == \"3\"\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\\n\") == \"2\"\n\"\"\""
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n5 9\\n10 12\\n9\") == \"2\"\nassert solution(\"1 4\\n5 9\\n10 12\\n9\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('1\\n1 7\\n4') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(open(\"ex.txt\").read()) == 3\nassert solution(open(\"ex2.txt\").read()) == 2"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\") == \"2\"\nassert solution(\"1\\n1 7\\n4\") == \"1\"\n"
    },
    {
        "number": 360,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\\n\") == \"2\"\nassert solution(\"1\\n1 7\\n4\\n\") == \"1\"\nassert solution(\"3\\n1 4\\n5 9\\n10 12\\n9\\n\") == \"3\"\nassert solution(\"2\\n1 4\\n5 9\\n10 12\\n9\\n\") == \"1\"\nassert solution(\"1\\n1 7\\n4\\n\") == \"1\""
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n\n\"\"\"\n\nimport re"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(stdin='CODEWAITFORITFORCES') == 'YES'\nassert solution(stdin='BOTTOMCODER') == 'NO'\nassert solution(stdin='DECODEFORCES') == 'YES'\nassert solution(stdin='DOGEFORCES') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"TEMPLATE\") == \"TEMPLE\"\nassert solution(\"CODEFORCES\") == \"CODEFORCES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\n\nprint('Success')\n\"\"\""
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\"\n\"\"\""
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"CODEWAITFORITFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\"\nprint(\"Passed\")\n"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('BOTTOMCODER') == 'NO'\nassert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n\n'''\nimport string\n"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('CODEWAITFORITFORCES') == 'YES'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 361,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\"\"\"\n\nfrom math import ceil, floor\n"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\n---\n\n## KMP\n\nhttps://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching-2/\n\n### Implementation\n\nhttps://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching/\n\n### Test\n\n```bash\n$ cat input.txt\n4\n\n$ cat input2.txt\n5\n\n$ python3 kmp.py < input.txt\n1\n\n$ python3 kmp.py < input2.txt\n0"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"18\"\nassert solution(\"3\") == \"6\"\n\"\"\""
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\nprint(solution(stdin.readline()))\n"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"6\"\nassert solution(\"4\\n\") == \"18\"\n"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\"\"\""
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3\\n') == '6'\nassert solution('4\\n') == '18'\n"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '6'\nassert solution('4\\n') == '18'"
    },
    {
        "number": 362,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == '6'\nassert solution(\"4\") == '18'\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\"\"\"\n\nimport math"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\""
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"17\"\n\nassert solution(\"4\") == \"4\"\n\nassert solution(\"10\") == \"1\"\n\nassert solution(\"100\") == \"2\"\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"17\"\n\nassert solution(\"4\") == \"4\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-2\") == \"0\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\"\"\"\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 363,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_stdout"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == \"2\"\nassert solution(\"5 2\\n2 2 4 5 3\") == \"-1\"\nassert solution(\"3 10\\n1 2 3\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 1\\n2 1 4 2') == '2'\nassert solution('5 2\\n2 2 4 5 3') == '-1'\nassert solution('3 10\\n1 2 3') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == \"2\"\nassert solution(\"5 2\\n2 2 4 5 3\") == \"4\"\nassert solution(\"3 10\\n1 2 3\") == \"4\"\n\"\"\""
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''4 1\n2 1 4 2''') == '2'\nassert solution('''5 2\n2 2 4 5 3''') == '-1'\nassert solution('''3 10\n1 2 3''') == '4'\nassert solution('''5 10\n2 2 4 5 3''') == '2'\nassert solution('''5 10\n2 4 5 3''') == '4'\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == -1\nassert solution('7 4') == 4\nassert solution('3 10') == 10\nassert solution('5 2') == -1\nassert solution('3 10 10 10 10') == 10\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == \"2\"\nassert solution(\"5 2\\n2 2 4 5 3\") == \"-1\"\nassert solution(\"3 10\\n1 2 3\") == \"4\"\n\"\"\"\n\n\n\"\"\"\n\nThe game rules are like this. Firstly Alice chooses some color A, then Bob chooses some color B (A \u2260 B). After each car they update the number of cars of their chosen color that have run past them. Let's define this numbers after i-th car cnt_{A}(i) and cnt_{B}(i).\n\n  If cnt_{A}(i) > cnt_{B}(i) for every i then the winner is Alice.  If cnt_{B}(i) \u2265 cnt_{A}(i) for every i then the winner is Bob.  Otherwise it's a draw. \n\nBob knows all the colors of cars that they will encounter and order of their appearance. Alice have already chosen her color A and Bob now wants to choose such color B that he will win the game (draw is not a win). Help him find this color.\n\nIf there are multiple solutions, print any of them. If there is no such color then print -1.\n\n\n-----Input-----\n\nThe first line contains two integer numbers n and A (1 \u2264 n \u2264 10^5, 1 \u2264 A \u2264 10^6) \u2013 number of cars and the color chosen by Alice.\n\nThe second line contains n integer numbers c_1, c_2,..., c_{n} (1 \u2264 c_{i} \u2264 10^6) \u2014 colors of the cars that Alice and Bob will encounter in the order of their appearance.\n\n\n-----Output-----\n\nOutput such color B (1 \u2264 B \u2264 10^6) that if Bob chooses it then he will win the game. If there are multiple solutions, print any of them. If there is no such color then print -1.\n\nIt is guaranteed that if there exists any solution then there exists solution with (1 \u2264 B \u2264 10^6).\n\n\n-----Examples-----\nInput\n4 1\n2 1 4 2\n\nOutput\n2\n\nInput\n5 2\n2 2 4 5 3\n\nOutput\n-1\n\nInput\n3 10\n1 2 3\n\nOutput\n4\n\n\n\n-----Note-----\n\nLet's consider availability of colors in the first example:   cnt_2(i) \u2265 cnt_1(i) for every i, and color 2 can be the answer.  cnt_4(2) < cnt_1(2), so color 4 isn't the winning one for Bob.  All the other colors also have cnt_{j}(2) < cnt_1(2), thus they are not available. \n\nIn the third example every color is acceptable except for 10.\n\n\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == 2\nassert solution(\"5 2\\n2 2 4 5 3\") == -1\nassert solution(\"3 10\\n1 2 3\") == 4\n"
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == \"2\"\nassert solution(\"5 2\\n2 2 4 5 3\") == \"-1\"\nassert solution(\"3 10\\n1 2 3\") == \"4\""
    },
    {
        "number": 364,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 1 4 2\") == 2\nassert solution(\"5 2\\n2 2 4 5 3\") == -1\nassert solution(\"3 10\\n1 2 3\") == 4\n\n\"\"\"\nimport math"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 10\\n3 3 2') == 'YES'\nassert solution('2 10\\n3 3 3') == 'NO'\nassert solution('3 10\\n1 3 2') == 'NO'\nassert solution('1 10\\n3') == 'NO'\nassert solution('1 10\\n2') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(test_input_0) == test_output_0\nassert solution(test_input_1) == test_output_1\nprint(\"Test PASSED\")\n\n\"\"\""
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"NO\"\nassert solution(\"3 10\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"NO\"\nassert solution(\"2 10\") == \"YES\"\nassert solution(\"2 10\") == \"YES\"\nassert solution(\"2 10\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n1 2 3 4\\n2 3 4 1\") == \"YES\"\nassert solution(\"4 10\\n2 3 4 1\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 10\\n2 3 4 1\\n3 4 1 2\") == \"NO\"\n\nassert solution(\"5 10\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"YES\"\nassert solution(\"5 10\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 1 2 3\") == \"NO\""
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n1 3\") == \"NO\"\nassert solution(\"3 10\\n3 3 2\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n1 3\\n\") == 'NO'\nassert solution(\"8 5\\n1 3\\n\") == 'YES'\n\"\"\""
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3\") == \"NO\"\nassert solution(\"3 10\\n3 3 2\") == \"YES\"\n\"\"\"\n\n\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        x, a = map(int, stdin.split(\" \"))\n        if sum([1 for i in a if i == 0]) == 0:\n            return \"YES\" if x == len(a) else \"NO\"\n        else:\n            return \"NO\"\n"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3\") == \"NO\"\nassert solution(\"3 10\\n3 3 2\") == \"YES\"\nassert solution(\"2 10\\n1 3\") == \"NO\"\n\n\"\"\"\n\nn, x = [int(i) for i in input().split()]\nenc = [int(i) for i in input().split()]"
    },
    {
        "number": 365,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(solution) == \"YES\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('6 16') == '3'\n\nprint('Test passed')"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"5 8\") == \"2\"\nassert solution(\"7 3\") == \"1\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n\"\"\""
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\nassert solution(\"3 9\") == \"0\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"10 100\") == \"10\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 11\\n') == '3'\nassert solution('6 16\\n') == '3'\n\"\"\""
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\n"
    },
    {
        "number": 366,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 11') == 3\n\"\"\"\nimport sys"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"kazak\") == \"kazak\"\nassert solution(\"abc\") == \"abccba\"\nassert solution(\"aabcd\") == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"aabcd\") == \"abcba\"\nassert solution(\"abb\") == \"abab\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aabb\") == \"abba\"\nassert solution(\"abac\") == \"abca\"\n\"\"\"\n"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"a\") == \"a\"\n\n---Problem 2---\nWrite a function:"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\n\nimport itertools\nimport math\nimport random\nimport time\n\nfrom typing import Generator, List, Tuple, Union\n"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"baaaa\") == \"abaab\"\nassert solution(\"aabbcc\") == \"abbcba\"\nassert solution(\"ba\") == \"ba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\""
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\n\n\"\"\""
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"aabcd\") == \"abcba\"\nassert solution(\"kazak\") == \"kazak\"\nassert solution(\"oop\") == \"oo\"\nassert solution(\"r\") == \"r\"\nassert solution(\"mikhailrubinchikkihcniburliahkim\") == \"mikhailrubinchikkihcniburliahkim\"\n"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('abcd') == 'bacd'\nassert solution('aabc') == 'abba'\nassert solution('kazak') == 'kazak'\nassert solution('mikhailrubinchikkihcniburliahkim') =='mikhailrubinchikkihcniburliahkim'\nassert solution('abc') == 'abcc'\n\"\"\"\n\n\nfrom itertools import permutations"
    },
    {
        "number": 367,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('aabcd') == 'abcba'\nassert solution('abcd') == 'abcd'\nassert solution('kazak') == 'kazak'\nassert solution('aabbc') == 'abac'\nassert solution('aabbcd') == 'abba'\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"...K....\") == \"Black\"\nassert solution(\"rpppk...\") == \"White\"\nassert solution(\".....Q.\") == \"Black\"\nassert solution(\"...p....\") == \"White\"\nassert solution(\"ppppkppp\") == \"Draw\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"rnbqkbnr\") == \"Draw\"\nassert solution(\"rppppppr\") == \"Black\"\nassert solution(\"rrpppppp\") == \"Black\"\nassert solution(\"rnbqkbnr\") == \"Draw\"\nassert solution(\"rppp1ppr\") == \"White\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"rppppppr\\n.k....\\n........\\n........\\n........\\nK...Q...\\n........\") == \"Black\"\nassert solution(\"rppppppr\\n.k....\\n........\\n........\\n........\\nK...Q...\\n........\") == \"Draw\"\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\") == \"White\"\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\") == \"Draw\"\n\"\"\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"rppppppr/b.k..../pppppppp/q...q/RNBQKBNR w KQkq - 0 1\") == \"Black\"\nassert solution(\"rppppppr/b.k..../pppppppp/q...q/RNBQKBNR w KQkq - 0 1\") == \"Black\"\nassert solution(\"rppppppr/b.k..../pppppppp/q...q/RNBQKBNR w KQkq - 0 1\") == \"Black\"\nassert solution(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\") == \"Draw\"\nassert solution(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\") == \"Draw\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"QK\") == \"White\"\nassert solution(\"..qk\") == \"Black\"\nassert solution(\"rpppk\") == \"Black\"\nassert solution(\"QQRK\") == \"Draw\"\nassert solution(\"kqrkqrp\") == \"Black\"\n\"\"\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\") == \"White\"\nassert solution(\"rppppppr\\nk....\\n........\\n........\\n........\\n........\\nKQ....\\npppppppp\") == \"Black\"\nassert solution(\"....\\nq......\\nppppppp\\n.......\\nk......\\n......\\n........\\n.........\\n........\\nP.......\\n\") == \"Draw\"\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"rppppppr\") == \"Black\"\nassert solution(\"rnbqkbnr\") == \"Draw\"\nassert solution(\"...K...r\") == \"White\"\nassert solution(\"...r...K\") == \"Black\"\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\nassert solution('rppppppr\\n..k......\\n........\\n........\\n........\\nK......\\n........\\n') == 'Black'\nassert solution('rppppppr\\n..k......\\n........\\n........\\n........\\nK.....\\n........\\n') == 'White'\nassert solution('rppppppr\\n..k......\\n........\\n........\\n........\\nK.....\\n...Q...\\n') == 'White'\nassert solution('rppppppr\\n..k......\\n........\\n........\\n........\\nK.....\\n...Q...\\n') == 'White'\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('QK...') == 'White'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rppppppr') == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('.QK...') == 'White'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rppppppr') == 'Black'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''9 3\n0001000100''') == '1 3 2 3'\n\"\"\"\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('9 3\\n0001000100') == '1 3 2 3'\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"9 3\\n0001000100\") == \"1 3 2 3\"\n\"\"\"\n\nn, m = stdin.split()\nn, m = int(n), int(m)\n\ns = list(stdin)\ns[0] = '0'\ns.append('0')\n\ndist = [[0]*(n+2) for _ in range(n+2)]\nfor i in range(n+2):\n    dist[i][0] = n+2\n    dist[i][n+1] = n+2\nfor j in range(n+2):\n    dist[0][j] = n+2\n    dist[n+1][j] = n+2\n\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if s[i] == '1':\n            dist[i][j] = min(dist[i][j], dist[i-1][j]+1)\n        else:\n            dist[i][j] = min(dist[i][j], dist[i-1][j]+1)\n        if s[j] == '1':\n            dist[i][j] = min(dist[i][j], dist[i][j-1]+1)\n        else:\n            dist[i][j] = min(dist[i][j], dist[i][j-1]+1)\n\nfor i in range(n+2):\n    for j in range(n+2):\n        print(dist[i][j], end=' ')\n    print()\n\nans = []\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('9 3\\n0001000100') == '1 3 2 3'\n\"\"\""
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"9 3\\n0001000100\") == \"1 3 2 3\"\n\"\"\""
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9 3\\n0001000100\") == \"1 3 2 3\"\nassert solution(\"9 5\\n111001110111100\") == \"1 3 2 3 5\"\nassert solution(\"9 5\\n11101111001111110\") == \"1 5 9\"\nassert solution(\"9 5\\n1111111111111111111111111111111111111\") == \"1\"\nassert solution(\"9 8\\n11101111111111111111111111111111111111\") == \"-1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('9 3\\n000100010') == '1 3 2 3'\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n    \"9 3\\n\"\n    \"0001000100\") == \"1 3 2 3\"\nassert solution(\n    \"9 3\\n\"\n    \"10001\") == \"10001\"\nassert solution(\n    \"9 3\\n\"\n    \"100010\") == \"10001\"\nassert solution(\n    \"9 3\\n\"\n    \"100100\") == \"10001\"\nassert solution(\n    \"9 3\\n\"\n    \"100101\") == \"10001\"\n"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n0 0 0\n''') == '1 3 2'\n\nassert solution('''\n1 0\n0 0\n''') == '-1'\n\nassert solution('''\n5 4\n0 0 0 1\n''') == '1 3 2 3'\n\nassert solution('''\n7 7\n0 0 0 0 0 0 1\n''') == '1 3 2 4 5 6'\n\nassert solution('''\n8 4\n1 0 0 0 0 0 1\n''') == '1 3 4 5 6 7'"
    },
    {
        "number": 369,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''9 3\n0001000100''') == '1 3 2 3'\n\n'''\n4 8\n110111100\n110111110\n1101111100\n1101111110\n'''\n"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\n\"\"\"\n"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\n\nprint(solution(\"11\\n-1 2\"))\n\n\"\"\""
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('0\\n0 0') == '0\\n0 0'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('11\\n-1 2\\n') == '3\\n7 4\\n2 10\\n-1 2'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"11\\n-1 2\") == \"3\\n7 4\"\n\"\"\""
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"11\\n-1 2\\n\") == \"3\\n7 4\\n2 10\\n-1 2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4'\n\"\"\""
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\n\"\"\"\n"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"11\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"10\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"9\\n-1 2\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"11\\n3 4\") == \"1\\n5 7\\n3 4\"\nassert solution(\"9\\n3 4\") == \"1\\n5 7\\n3 4\"\n"
    },
    {
        "number": 370,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4'\nassert solution('5\\n1 3') == '-1'\n\nprint(solution(stdin))\n\n-----\n\n\"\"\"\n\nimport math\nfrom itertools import chain"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == '8'\nassert solution(\"8\") == '54'\nassert solution(\"10\") == '-1'\n\nassert solution(\"12\") == '54'\nassert solution(\"15\") == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"8\") == \"5\"\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('10') == '-1'\nassert solution('8') == '8'\nassert solution('54') == '54'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"8\") == \"8\"\nassert solution(\"7\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1\") == '8'\nassert solution(\"8\") == '54'\nassert solution(\"10\") == '-1'\n\"\"\""
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"8\"\n\nassert solution(\"9\") == \"54\"\n\nassert solution(\"10\") == \"1\"\n\nassert solution(\"11\") == \"2\"\n\nassert solution(\"12\") == \"6\""
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"8\") == \"8\"\nassert solution(\"10\") == \"8\"\nassert solution(\"11\") == \"-1\"\nassert solution(\"54\") == \"54\"\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"8\") == \"54\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 371,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10') == '-1'\nassert solution('8') == '8'\nassert solution('1') == '8'\nassert solution('4') == '4'\nassert solution('2') == '4'\n\"\"\"\n"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4\\n6 0 4\") == '7.25298806364175601379'\nassert solution(\"0 0 5\\n11 0 5\") == '0.00000000000000000000'\nassert solution(\"0 0 4\\n1 1 2\") == '0.25298806364175601379'\nassert solution(\"0 0 4\\n1 1 4\") == '0.5298806364175601379'\nassert solution(\"0 0 4\\n1 1 5\") == '0.07659294815673846379'\n"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\n\"\"\"\n\nimport math"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4\\n6 0 4\") == \"7.25298806364175601379\"\nassert solution(\"0 0 5\\n11 0 5\") == \"0.00000000000000000000\"\n\"\"\"\n\nx1, y1, r1 = map(int, input().split())\nx2, y2, r2 = map(int, input().split())\n"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\n\"\"\"\n\nfrom math import sqrt, pi\n\nx_1, y_1, r_1 = map(int, input().split())\nx_2, y_2, r_2 = map(int, input().split())\n\ndistance_sqr = (x_1 - x_2) ** 2 + (y_1 - y_2) ** 2"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\n\"\"\"\n\nimport math"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5\\n11 0 5\") == \"0.00000000000000000000\"\n\"\"\"\nfrom math import sqrt\n\na, b, r1 = map(int, input().split())\nc, d, r2 = map(int, input().split())\n\nx1, y1 = a, b\nx2, y2 = c, d\n\nd = sqrt((x1-x2)**2 + (y1-y2)**2)\nprint((r1**2 + r2**2 - d**2)/(2*r1*r2))\n"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\n\"\"\"\n\nx1, y1, r1 = map(int, stdin.split())\nx2, y2, r2 = map(int, stdin.split())\n\ndist = ((x1-x2)**2 + (y1-y2)**2)**0.5"
    },
    {
        "number": 372,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(open(r'D:\\Git\\Algorithms\\Labs\\1\\input.txt').read()) == open(r'D:\\Git\\Algorithms\\Labs\\1\\output.txt').read()"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('8\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('7\\n') == '1'\nassert solution('6\\n') == '1'\nassert solution('5\\n') == '1'\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"8\") == 1\nassert solution(\"1\") == 1\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('8') == '1'\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"8\") == \"1\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(8) == 1\n\n\"\"\""
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"8\") == 1\nassert solution(\"1\") == 1\nassert solution(\"4\") == 2\nassert solution(\"8\") == 3\nassert solution(\"15\") == 5\n"
    },
    {
        "number": 373,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 1 1\\n3 1 3') == '4'\nassert solution('3 1 1\\n3 1 3\\n3 1 2') == '3'\nassert solution('3 1 1\\n3 1 3\\n3 1 2\\n3 1 3') == '4'\nassert solution('3 1 1\\n3 1 3\\n3 1 2\\n3 1 3\\n2 1 2\\n2 1 3\\n3 1 3') == '4'\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n3 1 3') == '4'\n\n-----Python solution-----\n\nfrom collections import Counter"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == 3\nassert solution(\"1 1\") == 1\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n3 1 3''') == '3'\nassert solution('''3\n1 1\n3 1 3''') == '4'\nassert solution('''3\n1 1\n3 1 1''') == '3'\nassert solution('''3\n1 1\n3 1 3''') == '4'\nassert solution('''3\n1 1\n3 2 3''') == '5'\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n3 1 3\") == '3'\nassert solution(\"3\\n1 1\\n3 1 3\") == '4'\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n3 1 3') == 3\nassert solution('3\\n1 1\\n3 1 2') == 4\nassert solution('3\\n1 1\\n3 1 3') == 3\nassert solution('3\\n1 1\\n3 1 2') == 4\nassert solution('3\\n1 1\\n3 1 2') == 4\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n1 1\n3 1 3\"\"\") == '4'\nassert solution(\"\"\"3\n1 1\n3 1 3\"\"\") == '4'\nassert solution(\"\"\"3\n1 1\n3 1 3\"\"\") == '4'\n\"\"\"\n"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n3 1 3') == '3', 'Test 1'\nassert solution('3\\n1 1\\n3 1 3') == '3', 'Test 2'"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 1 2\\n3 1 3') == '4'\nassert solution('3 1 1\\n3 1 3') == '3'\n\"\"\"\nimport sys\nimport itertools"
    },
    {
        "number": 374,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 3\") == 4\n\"\"\"\nfrom collections import defaultdict\n\nfrom math import inf"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"reading\") == \"1\"\nassert solution(\"treading\") == \"1\"\nassert solution(\"trading\") == \"0\"\nassert solution(\"sweet\") == \"0\"\nassert solution(\"sheep\") == \"0\"\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3 4\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"20\"\nassert solution(\"1 2 3 4 5 6 7 8 9 0\") == \"20\"\nassert solution(\"0 0 0 1 2 3 4\") == \"10\"\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"reading\", \"reading\") == \"0\"\nassert solution(\"toy\", \"try\") == \"2\"\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"reading\") == \"1\"\nassert solution(\"treading\") == \"1\"\nassert solution(\"sheep\") == \"0\"\nassert solution(\"toy\") == \"2\"\nassert solution(\"try\") == \"2\"\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(['1', '0', '0']) == '1'\nassert solution(['1', '1', '0']) == '0'\n\nassert solution(['1', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0']) == '0'\nassert solution(['1', '1', '1', '1']) == '0'"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('7\\nreading\\ntrading') == '1'\nassert solution('5\\nsweet\\nsheep') == '0'\nassert solution('3\\ntoy\\ntry') == '2'\n\nassert solution('5\\npreciou\\nprecious') == '1'\nassert solution('3\\ntoy\\ntry') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\", \"hello\") == \"8\"\nassert solution(\"7\", \"aaaaa\") == \"27\"\nassert solution(\"2\", \"hii\") == \"6\"\nassert solution(\"3\", \"aabb\") == \"3\"\nassert solution(\"6\", \"stqp\") == \"8\""
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"reading\") == \"treading\"\nassert solution(\"sheep\") == \"sheep\"\nassert solution(\"toy\") == \"troy\"\nassert solution(\"try\") == \"try\"\nassert solution(\"zebra\") == \"zebra\"\n"
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"2\"\nassert solution(\"4 1 2\") == \"1\"\nassert solution(\"4 3 2\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 375,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\ntoy\\ntry\") == \"2\"\n\"\"\""
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5''') == '5'\nassert solution('''5\n5 5 2 2 5 5\n5 2\n2 2\n3 3\n2 2\n2 2\n2 3\n2 5\n5 2\n5 2\n5 2\n5 2''') == '10'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''7\n7 7 6 7 7\n1 5\n5 3\n3 4\n2 4\n1 7\n7 6\n''') == '8'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\nassert solution(\"5 1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\nassert solution(\"5 1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"5\"\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline())\narr = [int(i) for i in sys.stdin.readline().split()]\narr = sorted(list(set(arr)))\n\nfor i in range(1, n):\n    arr[i] = max(arr[i] + arr[i - 1], arr[i])\nprint(arr[-1])\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '5\\n'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93\\n'\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"7\\n38 -29 87 93 39 28 -55\") == \"93\"\nassert solution(\"5\\n1 2 7 6 7\") == \"8\"\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"5\"\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n\") == \"93\"\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"5\"\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n\") == \"93\"\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\"\"\") == \"93\"\n\"\"\"\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '5'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == '5'\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\") == '93'\nassert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == '5'\nassert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == '5'\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\") == '93'\n"
    },
    {
        "number": 376,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"5\"\nassert solution(\"5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n\") == \"93\""
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('7 4') == 3\nassert solution('6 2') == 2\nassert solution('3 0') == 1\n\"\"\""
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\"\"\"\n\nn, m = map(int, input().split())\n\nprint(min(n // 2, m))\n\n\"\"\"\nimport itertools\n\nn, m = map(int, input().split())\n\ngroups = []\nfor i in range(m):\n    groups.append(list(range(1 + i * n, 1 + (i + 1) * n)))\n\nfor group in itertools.combinations(groups, n // 2):\n    first = True\n    for i in group:\n        if first:\n            first = False\n        else:\n            print(i, end=' ')\n    print()\n\"\"\""
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\n\"\"\""
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\n\"\"\"\n\nn, m = map(int, stdin.readline().split())"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('2 1') == '0'\n\"\"\"\n"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(5, 0) == 0\nassert solution(5, 3) == 1\nassert solution(5, 4) == 0\nassert solution(7, 4) == 3\nassert solution(7, 3) == 1\n"
    },
    {
        "number": 377,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''7 4''') == 3\nassert solution('''6 2''') == 2\nassert solution('''3 0''') == 1\nassert solution('''2 2''') == 0\nassert solution('''7 8''') == 2\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('237 7') == '1'\nassert solution('117 3') == '9'\nassert solution('15 2') == '2'\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('117 3\\n') == \"9\"\nassert solution('237 7\\n') == \"1\"\nassert solution('15 2\\n') == \"2\""
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('117 3') == \"9\"\nassert solution('237 7') == \"1\"\nassert solution('15 2') == \"2\"\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\n\"\"\""
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\""
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\nprint('All tests passed.')\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('117 3') == \"9\"\nassert solution('237 7') == \"1\"\nassert solution('15 2') == \"2\"\n\"\"\"\n\nimport sys\nimport math\n\nK, R = map(int, sys.stdin.readline().split())\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\n"
    },
    {
        "number": 378,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"117 3\\n\") == \"9\"\nassert solution(\"237 7\\n\") == \"1\"\nassert solution(\"15 2\\n\") == \"2\"\n\"\"\"\n\nk, r = [int(x) for x in input().split()]\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 3\\nXXX\\nXXX') == 'YES'\nassert solution('2 2\\n.X\\nXX') == 'NO'\nassert solution('5 5\\n.....\\n..X..\\n.....\\n.....\\n.....') == 'YES'\nassert solution('5 5\\n.....\\n..X..\\n.....\\n.....\\n.....') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"XXX\\nXXX\") == \"YES\"\nassert solution(\"XXX\\nXXX\") == \"NO\"\nassert solution(\"XXX\\nX.X\") == \"NO\"\nassert solution(\"XXX\\n..X\") == \"NO\"\nassert solution(\"XXX\\n.X.\") == \"YES\"\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\".X\") == \"YES\"\nassert solution(\"XXX\") == \"YES\"\nassert solution(\"..X..\") == \"NO\"\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"XXX\\nXXX\") == \"YES\"\nassert solution(\"XXX\\nXXX\") == \"YES\"\nassert solution(\"XXX\\nXXX\") == \"YES\"\n\"\"\""
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 5\\n....\\n..X..\\n....\\n....\\n....\") == \"YES\"\n\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nXXX\\nXXX\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\") == \"NO\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nXXX\\nXXX\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\") == \"NO\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\") == \"YES\"\nassert solution(\"3 5\\n.X\\nXX\\n.X\\nXX\") == \"NO\"\nassert solution(\"2 5\\n..X\\nXX\\n..X\\nXX\") == \"NO\"\n"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\".X.\") == \"YES\"\nassert solution(\"XXX\") == \"YES\"\nassert solution(\"X..\") == \"YES\"\nassert solution(\"..X\") == \"YES\"\nassert solution(\"..XX\") == \"NO\"\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n.X\\nXX\") == \"YES\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\") == \"YES\"\nassert solution(\"2 3\\n.X\\nXXX\") == \"NO\"\nassert solution(\"2 2\\n.X\\nXX\") == \"YES\""
    },
    {
        "number": 379,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"XXX\\nXXX\") == \"YES\"\nassert solution(\"XXX\\nXX.\") == \"NO\"\nassert solution(\"X..\\n..X\") == \"YES\"\nassert solution(\"X..\\n..X\\n..X\") == \"YES\"\nassert solution(\"X..\\n..X\\n..X\\n..X\") == \"NO\"\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(1, -1) == 1\nassert solution(1, 1) == 1\nassert solution(1, 2) == 2\n\"\"\"\n\nimport math"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\") == 1\nassert solution(\"-1 -1\\n-1 3\\n4 3\") == 2\nassert solution(\"1 1\\n2 3\\n3 2\") == 3\nassert solution(\"1 2\\n2 3\\n3 1\") == 2\n\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\") == \"1\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 -1\\n1 1\\n1 2') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"0 -1 0\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 -1 0\") == \"2\"\n\nprint(\"Example 1 passed\")\n\n\n\n\"\"\"\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n\"\"\"\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('-1 -1\\n-1 3\\n4 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 -1\\\\n1 1\\\\n1 2\") == \"1\"\nassert solution(\"-1 -1\\\\n-1 3\\\\n4 3\") == \"2\"\nassert solution(\"1 1\\\\n2 3\\\\n3 2\") == \"3\"\n\"\"\"\n\nimport sys\nimport unittest\n"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\") == \"1\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\") == \"2\"\nassert solution(\"1 1\\n2 3\\n3 2\") == \"3\"\n\n\"\"\"\n\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 380,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('0 0') == '1'\nassert solution('0 1') == '2'\nassert solution('1 2') == '3'\nassert solution('1 1') == '0'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\\n2 1\\n1 2\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\\n3 2\\n2 3\"\nassert solution(\"4\") == \"YES\\n4 3\\n3 1\\n1 4\\n2 2\\n1 2\"\nassert solution(\"5\") == \"YES\\n5 4\\n4 2\\n2 3\\n3 5\\n5 1\\n1 3\\n2 4\\n1 2\\n2 4\"\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"YES\\n2 1\\n1 2\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"6\") == \"YES\\n3 2\\n3 1\\n1 2\"\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('3 1') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('2 3') == 'NO'\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n\"\"\"\n\nfrom collections import defaultdict, deque\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == 'NO'\nassert solution('1\\n') == 'YES'\nassert solution('2 1\\n1 2') == 'YES'\nassert solution('2 1\\n1 2\\n2 1') == 'NO'\nassert solution('2 1\\n1 2\\n2 1\\n1 2\\n1 2') == 'YES'\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == 'NO'\n\nassert solution('1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('2 2') == 'NO'\n\nassert solution('3 2') == 'YES'\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"YES\\n2 1\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1\") == \"YES\\n2 0\"\nassert solution(\"2\") == \"YES\\n2 1\"\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('2 2') == 'YES\\n2 1'\nassert solution('1') == 'YES\\n2 0'\nassert solution('4 1') == 'YES\\n3 2'\nassert solution('4 3') == 'YES\\n4 2'\n"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\\n2 1\\n1 2\"\nassert solution(\"2\") == \"NO\"\n\"\"\"\n\nfrom collections import defaultdict, deque\nfrom typing import List"
    },
    {
        "number": 381,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\\n2 1\\n1 2\"\n\n\n\"\"\"\nfrom collections import defaultdict\n\nclass Graph:\n    def __init__(self):\n        self.graph = defaultdict(list)\n        self.is_visited = {}\n    \n    def add_edge(self, u, v):\n        self.graph[u].append(v)\n        self.graph[v].append(u)\n\n    def dfs(self, v, parent):\n        self.is_visited[v] = True\n        for u in self.graph[v]:\n            if u == parent:\n                continue\n            if not self.is_visited[u]:\n                self.dfs(u, v)\n            \n            \n\n\nclass Solution:\n    def find_k_regular(self, k):\n        g = Graph()\n        for i in range(1, k+1):\n            g.add_edge(i, i+1)\n            if i < k:\n                g.add_edge(i, i+k)\n        g.dfs(1, None)\n        self.is_regular = True\n        for v in g.graph.keys():\n            if not g.is_visited[v]:\n                self.is_regular = False\n                break\n        \n        if self.is_regular:\n            g.dfs(1, None)\n            print(f\"YES\\n{len(g.graph)}\\n{len(g.graph.keys())}\")\n            for u, v in g.graph.items():\n                print(f\"{u} {v}\")\n        else:\n            print(\"NO\")\n        \n        \n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"codeforces\", \"for\") == 1\nassert solution(\"abacabadabacaba\", \"ba\") == 1\nassert solution(\"aaa\", \"baaab\") == 3\n\"\"\"\n\nimport sys"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"codeforces\", \"for\", [1,3]) == 0\nassert solution(\"codeforces\", \"for\", [3, 10]) == 1\nassert solution(\"codeforces\", \"for\", [5, 6]) == 0\nassert solution(\"codeforces\", \"for\", [5, 7]) == 1\n\n\n\n\"\"\""
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"codeforces\", \"for\") == \"1\", \"case1, codeforces, for\"\nassert solution(\"codeforces\", \"fo\") == \"0\", \"case2, codeforces, fo\"\nassert solution(\"codeforces\", \"for\") == \"1\", \"case3, codeforces, for\"\nassert solution(\"codeforces\", \"fo\") == \"0\", \"case4, codeforces, fo\"\nassert solution(\"codeforces\", \"abcdef\") == \"0\", \"case5, codeforces, abcdef\"\n\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"codeforces\") == \"1\"\nassert solution(\"abacabadabacaba\") == \"4\"\nassert solution(\"aaa\") == \"0\"\nassert solution(\"baaab\") == \"3\"\n\n---\n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('codeforces', 'for', 1) == 1\nassert solution('codeforces', 'for', 0) == 0\nassert solution('codeforces', 'ba', 1) == 2\nassert solution('codeforces', 'ba', 0) == 3"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\", \"for\", 3) == '1'\nassert solution(\"codeforces\", \"fo\", 2) == '0'\nassert solution(\"codeforces\", \"for\", 1) == '1'\nassert solution(\"codeforces\", \"fo\", 0) == '0'\n\"\"\""
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"codeforces\", \"for\", 3) == '0'\nassert solution(\"codeforces\", \"for\", 4) == '1'\nassert solution(\"abacabadabacaba\", \"ba\", 1) == '0'\nassert solution(\"abacabadabacaba\", \"ba\", 2) == '0'\nassert solution(\"abacabadabacaba\", \"ba\", 3) == '3'\n\n-----TEST LESSON-----\n\nimport unittest\n\n\nclass Tests(unittest.TestCase):\n    def test_1(self):\n        solution(\"codeforces\", \"for\", 3) == '0'\n\n    def test_2(self):\n        solution(\"codeforces\", \"for\", 4) == '1'\n\n    def test_3(self):\n        solution(\"abacabadabacaba\", \"ba\", 1) == '0'\n\n    def test_4(self):\n        solution(\"abacabadabacaba\", \"ba\", 2) == '0'\n\n    def test_5(self):\n        solution(\"abacabadabacaba\", \"ba\", 3) == '3'\n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"codeforces\", \"for\", \"1 3\") == \"0\"\nassert solution(\"abacabadabacaba\", \"ba\", \"1 15\") == \"4\"\n\"\"\"\n\ns, t, q = map(int, input().split())\ns = input()\nt = input()\n\nfor _ in range(q):\n    l, r = map(int, input().split())\n    print(s[l - 1:r].count(t))\n"
    },
    {
        "number": 382,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"codeforces\") == \"1\"\nassert solution(\"baaab\") == \"3\"\n"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\") == 3\nassert solution(\"4 3 2\") == 6\nassert solution(\"4 5 2\") == 7\nassert solution(\"3 3 3\") == 1\n"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\") == 3\n\"\"\"\n\nimport sys\n\ninput = sys.stdin.readline\n\nn, k, d = list(map(int, input().strip().split(\" \")))\n\nmod = 1000000007"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == 3\n\"\"\"\n"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 5 2\") == \"7\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\n\"\"\""
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 5 2') == '7'\n"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 5 2') == 7\nassert solution('3 3 2') == 3\n"
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == 3\n\"\"\""
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3 2') == '6'\n\n\"\"\""
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\n\"\"\""
    },
    {
        "number": 383,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == 3\n"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBWB\") == \"1 2\"\nassert solution(\"5\\nBWB\") == \"3 1 1\"\nassert solution(\"4\\nBBBB\") == \"0\"\nassert solution(\"13\\nWBBBBWWBWBBBW\") == \"3 4 1 3\"\nassert solution(\"13\\nWWWWWWWWWWWW\") == \"0 0 0 0\"\n"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 2\"\nassert solution(\"5\") == \"1 1 1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"13\") == \"3 4 1 3\"\n\n\n'''\n"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\nBWB\\n\") == \"1\\n2\\n\"\nassert solution(\"5\\nBWBW\\n\") == \"3\\n1 1 1\\n\"\nassert solution(\"4\\nBWB\\n\") == \"1\\n4\\n\"\nassert solution(\"13\\nWBBBBWWBWBBBW\\n\") == \"3\\n4 1 3\\n\"\nassert solution(\"6\\nWWWW\\n\") == \"0\\n\"\n"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3\\nBWB') == '1\\n2\\n1'\nassert solution('5\\nWWWW') == '1\\n4\\n1\\n1'\nassert solution('4\\nBBBB') == '1\\n0'\nassert solution('13\\nWBBBBWWBWBBBW') == '3\\n4\\n1\\n3'\n\"\"\""
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\nWWWW\") == \"1 1 1\"\nassert solution(\"4\\nBBBB\") == \"1 4\"\nassert solution(\"13\\nWBBBBWWBWBBBW\") == \"3 4 1 3\"\n\"\"\""
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\nBBW\") == \"1\\n2\"\nassert solution(\"5\\nBWBW\") == \"1\\n1 1\\n1\"\nassert solution(\"4\\nBBBB\") == \"0\"\nassert solution(\"4\\nWWWW\") == \"1\\n1 1\\n1\"\nassert solution(\"13\\nWBBBBWWBWBBBW\") == \"3\\n4 1 3\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\nBBW\") == \"1\\n2\"\nassert solution(\"5\\nBWBWB\") == \"3\\n1 1 1\"\nassert solution(\"4\\nWWWW\") == \"0\"\nassert solution(\"4\\nBBBB\") == \"1\\n4\"\nassert solution(\"13\\nWBBBBWWBWBBBW\") == \"3\\n4 1 3\"\n\n\n\n-----\n\n3\nBBW\n\n1\n\n2\n\n4\nWWWW\n\n0\n\n4\nBBBB\n\n1\n\n4\n\n13\nWBBBBWWBWBBBW\n\n3\n\n4 1 3\n\"\"\""
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\", \"BWBW\") == \"1\\n2\\n1\"\nassert solution(\"4\", \"BBBB\") == \"1\\n4\"\nassert solution(\"5\", \"BWBWBW\") == \"3\\n1 1 1\"\nassert solution(\"13\", \"WBBBBWWBWBBBW\") == \"3\\n4 1 3\""
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\nBBW\\n\") == \"1\\n2\\n\"\nassert solution(\"5\\nBWBW\\n\") == \"3\\n1 1 1\\n\"\nassert solution(\"4\\nBBBB\\n\") == \"1\\n4\\n\"\nassert solution(\"13\\nWBBBBWWBWBBBW\\n\") == \"3\\n4 1 3\\n\"\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n"
    },
    {
        "number": 384,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\nBWBB\") == \"1 1 1\"\nassert solution(\"6\nBWWBWWB\") == \"0 0 1 1 1\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRRDLD\") == \"()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()(()))\"\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\") == \"()\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nLLLD\") == \"(()())\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()(()))\"\n\"\"\"\n\nimport sys\n\nN, M, P = [int(x) for x in sys.stdin.readline().split()]\nL = sys.stdin.readline()\nD = sys.stdin.readline()"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRDLD\") == \"(()(()))\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRRDD\\n\") == \"()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\\n\") == \"(()(()))\"\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\\n\") == \"(()())\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('8 4 5') == '(()()())'\nassert solution('12 5 3') == '(()(()))'\nassert solution('8 8 8') == '(()()())'"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRRDLD\") == \"()\\n\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()())\\n\"\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\") == \"(()())\\n\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"8 4 5\") == \"()\"\n\n\"\"\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('8 4 5 (())()()') == '()'\nassert solution('12 5 3 (((()())(())))('LLLLLLDD' == '(()(()))')\nassert solution('8 8 8 (())()()'RRLLLLLLDD' == '(()(()))')\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRRDLD\") == '()'\nassert solution(\"12 5 3\\n((()())(()))\\nLLLLLLDD\") == '(()(())'\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\") == '()()'\nassert solution(\"12 5 3\\n((()())(()))\\nRRRLLLLLLDD\") == '(()(())(()))'\n\"\"\"\n"
    },
    {
        "number": 385,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8 4 5 (())()()\") == \"()\"\nassert solution(\"12 5 3 (((()())(()))\") == \"((()()))\"\nassert solution(\"8 8 8 (())()()\") == \"()()\"\nassert solution(\"12 8 9 (())(()))()(()(()))\") == \"((()()))()(()(()))\"\nassert solution(\"9 8 7 (())((()))()()()()(())()()()()())()(()())()(())(()())((()))(())((()))(())\") == \"((()))()()()(())\"\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N') == '17'\n\"\"\""
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == \"17\"\n\"\"\"\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2> 100 Y\\n<-100 Y\") == \"Impossible\"\n\"\"\"\nimport re"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == \"17\"\nassert solution(\"2\\n> 100 Y\\n< -100 Y\") == \"Impossible\"\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(test_0) == \"17\"\nassert solution(test_1) == \"Impossible\"\n\"\"\"\n\nimport sys\nfrom typing import List, Dict, Tuple"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\">= 1 Y\") == \"Y\"\nassert solution(\">= 1 Y\") == \"Y\"\nassert solution(\">= 1 Y\") == \"Y\"\nassert solution(\">= 1 Y\") == \"Y\"\nassert solution(\">= 1 Y\") == \"Y\"\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == '17'\n\"\"\"\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"> 100 Y\") == \"Impossible\"\n\"\"\"\n\n\nimport sys\nfrom typing import List\n\n\nclass Solution:\n    # Time: O(N) where N is the number of questions\n    # Space: O(N)\n    def solve(self, stdin: str) -> str:\n        n: int = int(stdin.readline())\n        \n        questions: List[str] = []\n        for i in range(n):\n            question: str = stdin.readline().rstrip()\n            questions.append(question)\n        \n        # print(\"n=%s\" % n)\n        # print(questions)\n        \n        if n == 1:\n            return \"Impossible\"\n        \n        # Check if any of the questions is \"> 100 Y\"\n        # If so, return \"Impossible\"\n        greater_than_100: bool = False\n        for question in questions:\n            if question == \"> 100 Y\":\n                greater_than_100 = True\n                break\n        \n        # print(\"greater_than_100=%s\" % greater_than_100)\n        \n        if greater_than_100:\n            return \"Impossible\"\n        \n        # If not, then the answer must be equal to \n        # some value from [1, n]\n        for i in range(1, n + 1):\n            if self.is_correct(i, questions):\n                return str(i)\n        \n        return \"Impossible\"\n    \n    def is_correct(self, x: int, questions: List[str]) -> bool:\n        for question in questions:\n            if question.startswith(\">\"):\n                if question.startswith(\"> \"):\n                    if x < int(question[2:]):\n                        continue\n                elif question.startswith(\">\"):\n                    if x <= int(question[1:]):\n                        continue\n                return False\n            elif question.startswith(\"<\"):\n                if question.startswith(\"< \"):\n                    if x > int(question[2:]):\n                        continue\n                elif question.startswith(\"<\"):\n                    if x >= int(question[1:]):\n                        continue\n                return False\n            elif question.startswith(\"<=\"):\n                if question.startswith(\"<=\"):\n                    if x > int(question[2:]):\n                        continue\n                elif question.startswith(\"<=\"):\n                    if x >= int(question[1:]):\n                        continue\n                return False\n            elif question.startswith(\">=\"):\n                if question.startswith(\">=\"):\n                    if x < int(question[2:]):\n                        continue\n                elif question.startswith(\">=\"):\n                    if x <= int(question[1:]):\n                        continue\n                return False\n            return False\n        return True\n    \n    # The following methods can be used to check the correctness of solution\n\n    def check_correct(self, stdin: str) -> bool:\n        \n        n: int = int(stdin.readline())\n        \n        questions: List[str] = []\n        for i in range(n):\n            question: str = stdin.readline().rstrip()\n            questions.append(question)\n        \n        # print(\"n=%s\" % n)\n        # print(questions)\n        \n        if n == 1:\n            return False\n        \n        # Check if any of the questions is \"> 100 Y\"\n        # If so, return False\n        greater_than_100: bool = False\n        for question in questions:\n            if question == \"> 100 Y\":\n                greater_than_100 = True\n                break\n        \n        # print(\"greater_than_100=%s\" % greater_than_100)\n        \n        if greater_than_100:\n            return False\n        \n        # If not, then the answer must be equal to \n        # some value from [1, n]\n        for i in range(1, n + 1):\n            if self.is_correct(i, questions):\n                return True\n        \n        return False\n"
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == '17'\n\"\"\""
    },
    {
        "number": 386,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == '17'\n\"\"\""
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AB') == 1\nassert solution('AA') == 2\nassert solution('AAB') == 2\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n\n\n\"\"\""
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == 4\nassert solution(\"5 3\") == 5\nassert solution(\"5 5\") == 1\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"5 7\") == \"5\"\nassert solution(\"5 8\") == \"5\""
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == 4\nassert solution(\"5 3\") == 5\n\n\"\"\"\nimport re\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 2\") == \"1\"\n\na = int(stdin.readline())\nb = int(stdin.readline())\nperiods = []\nfor i in range(1, b+1):\n    if (a+b)%i!= 0:\n        continue\n    if i%a == 0:\n        periods.append(i)\n\nprint(len(periods))\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n"
    },
    {
        "number": 387,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == 4\nassert solution(\"5 3\") == 5\n\n\n---\nfrom collections import defaultdict"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport math\nimport re\n\nn, k = [int(i) for i in input().split(' ')]\nstdin = input().split(' ')"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\\n\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\n\"\"\"\n\nn, k = map(int, input().split())\n\nnotes = [input() for _ in range(n - k + 1)]\n\nfor i in range(n - k + 1):\n    print(\"\".join([s.capitalize() for s in notes[i:i + k]]))\n"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\\n\") == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution(\"9 8\\nYES NO\\n\") == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution(\"3 2\\nNO NO\\n\") == 'Na Na Na'\n"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\n\"\"\"\n\nimport io\nimport sys"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\n\n\"\"\"\nimport sys\nfrom typing import List"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n"
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\n\"\"\""
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\n\"\"\""
    },
    {
        "number": 388,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('15 20') == 3\nassert solution('14 8') == -1\n\n'''\n\na, b = [int(x) for x in stdin.strip().split()]\nc = b - a\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 6\") == '0'\nassert solution(\"15 20\") == '3'\nassert solution(\"14 8\") == '-1'\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"15 20\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"14 8\") == \"3\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"15 20\") == \"3\"\n\"\"\"\n\na, b = map(int, input().split())\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"15 20\") == 3\nassert solution(\"14 8\") == -1\nassert solution(\"6 6\") == 0\n\nprint(\"It is all good. Let's check it now\")"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"15 20\") == \"3\"\nassert solution(\"14 8\") == \"-\"\nassert solution(\"6 6\") == \"0\"\n\nprint(\"The code is working\")"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 6\") == \"0\"\nassert solution(\"14 8\") == \"2\"\nassert solution(\"15 20\") == \"3\"\nassert solution(\"10 8\") == \"-1\"\nassert solution(\"15 15\") == \"0\"\n"
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"15 20\") == \"3\"\n\nassert solution(\"14 8\") == \"0\"\n\nassert solution(\"6 6\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 389,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"15 20\") == \"3\"\nassert solution(\"14 8\") == \"-1\"\nassert solution(\"6 6\") == \"0\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 10 12\") == \"-1\"\nassert solution(\"3 12 1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 100 1\\n0 1 2 1 2\\n\") == \"101\"\nassert solution(\"3 10 12\\n1 2 0\\n\") == \"-1\"\nassert solution(\"3 12 1\\n0 1 0\\n\") == \"0\"\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 100 1\") == \"101\"\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 100 1\\n0 1 2 1 2') == '101'\nassert solution('3 10 12\\n1 2 0') == '-1'\nassert solution('3 12 1\\n0 1 0') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''5 100 1\n0 1 2 1 2\n''') == '101'\n\nassert solution('''3 10 12\n1 2 0\n''') == '-1'\n\nassert solution('''3 12 1\n0 1 0\n''') == '0'\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n\n\"\"\""
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 10 12\\n1 2 0') == '101'\nassert solution('3 10 12\\n0 1 2') == '101'\nassert solution('3 10 12\\n1 0 2') == '101'\nassert solution('3 10 12\\n1 1 2') == '101'\nassert solution('3 10 12\\n2 2 1') == '101'\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 10 12\") == \"-1\"\nassert solution(\"3 12 1\") == \"0\"\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n\nwhite = []\nblack = []\n\n_n, _a, _b = map(int, sys.stdin.readline().split())\nfor i in range(0, _n):\n    if int(sys.stdin.readline().strip()) == 0:\n        white.append(i)\n    elif int(sys.stdin.readline().strip()) == 1:\n        black.append(i)\n"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 10 12\") == \"0\"\nassert solution(\"3 12 1\") == \"0\"\n\"\"\""
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 10 12\") == \"101\"\nassert solution(\"3 12 1\") == \"0\"\nassert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 12 1\") == \"0\"\n\n\"\"\"\n\nimport collections\nfrom functools import reduce\nimport operator"
    },
    {
        "number": 390,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 12 1\\n0 1 0\\n\") == \"0\"\nassert solution(\"3 10 12\\n1 2 0\\n\") == \"-1\"\nassert solution(\"3 10 12\\n1 2 1\\n\") == \"101\"\n\"\"\"\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"bb\"\nassert solution(\"2\") == \"bb\\nw\"\nassert solution(\"3\") == \"bb\\nw\\nww\"\nassert solution(\"4\") == \"bb\\nw\\nww\\nwb\\nw\"\nassert solution(\"5\") == \"bb\\nw\\nww\\nwb\\nw\\nwb\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"bb\\nww\"\n\"\"\"\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"bb\\nww\"\nassert solution(\"3\") == \"bb\\nww\\nbb\\nww\\nbb\\nww\"\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == 'bb\\nww\\nbb\\nww\\nww\\nbb\\nww\\nbb\\nww\\n'\n\nassert solution('2') == 'bb\\nww\\nbb\\nww\\nww\\nbb\\nww\\nbb\\nww\\n'\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"bb\\nww\\nww\"\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\nbb\\nww\") == 'bb\\nww'\nassert solution(\"1\\nbb\") == '-1'\nassert solution(\"4\\nww\\nbb\\nww\\nbb\\nww\\nww\\nbb\") == 'ww\\nbb\\nww\\nbb'\nassert solution(\"1\\nww\\nbb\") == '-1'\nassert solution(\"3\\nwb\\nbb\\nww\") == 'wbb\\nwbb\\nwbb'\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('aa') == 'a'\nassert solution('ba') == 'b'\nassert solution('ab') == 'ab'\nassert solution('ba') == 'b'\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 'bb\\nw\\nw\\nw\\nww\\nww\\nww\\nbb\\nw\\nw\\nw\\nww\\n'\n\nassert solution(\"1\") == 'ww\\nww\\nww\\nw\\nw\\nww\\nww\\nww\\nww\\n'\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\n\nassert solution(\"2\") == \"bw\\nww\"\n\nassert solution(\"3\") == \"bb\\nww\\nwb\\nwb\\nww\"\n"
    },
    {
        "number": 391,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(1) == '-1'\nassert solution(2) == 'bb\\nw\\nw'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"6\"\nassert solution(\"20\") == \"16\"\nassert solution(\"100\") == \"32\"\nassert solution(\"250\") == \"125\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('100') == '10'\nassert solution('1000') == '100'\nassert solution('10000000') == '100'\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('2') == '2'\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"6\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1234\") == \"6\"\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '10'\nassert solution('12') == '6'\n\"\"\"\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"6\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\nassert solution(\"13\") == \"6\"\nassert solution(\"16\") == \"12\"\nassert solution(\"20\") == \"16\"\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\nassert solution(\"20\") == \"16\"\nassert solution(\"16\") == \"20\"\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(12) == 6\nassert solution(0) == 1\n\"\"\"\nimport math\nn = int(input())\nmax_beauty = 1\n\nfor i in range(n+1):\n    j = 1\n    while j**2 <= i:\n        if i%j == 0:\n            max_beauty = max(max_beauty, j)\n        j += 1\n\nprint(max_beauty)\n"
    },
    {
        "number": 392,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n    \"10\"\n    ) == \"10\"\nassert solution(\n    \"12\"\n    ) == \"6\"\nassert solution(\n    \"19\"\n    ) == \"19\""
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('101') == 'Yes'\nassert solution('10111') == 'No'\nassert solution('1111') == 'Yes'\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"Yes\"\nassert solution(\"10111\") == \"No\"\nassert solution(\"11111\") == \"Yes\"\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"Yes\"\nassert solution(\"1011\") == \"No\"\nassert solution(\"10001\") == \"No\"\nassert solution(\"11001\") == \"No\"\n\nassert solution(\"10011\") == \"Yes\""
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"Yes\"\nassert solution(\"1010\") == \"Yes\"\nassert solution(\"10111\") == \"No\"\nassert solution(\"11010\") == \"No\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n    '101'\n) == 'Yes'\n\nassert solution(\n    '10001'\n) == 'No'\n\nassert solution(\n    '10111'\n) == 'No'\n\nassert solution(\n    '10111'\n) == 'No'"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('101') == \"Yes\"\nassert solution('1011') == \"No\"\nassert solution('10001') == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"Yes\"\nassert solution(\"1011\") == \"No\"\nassert solution(\"10001\") == \"No\"\nprint('Test pass.')\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"Yes\"\nassert solution(\"10001\") == \"No\"\nassert solution(\"1011\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('101') == \"Yes\"\nassert solution('1011') == \"No\"\nassert solution('11101') == \"No\"\n\"\"\"\n\n\nfrom typing import List\n\n\nclass Seating:\n    def __init__(self, n: int, seats: str):\n        self.n = n\n        self.seats = seats\n\n    def is_maximal(self) -> bool:\n        maximal = True\n        for i in range(1, self.n - 1):\n            if self.seats[i - 1] == 1 or self.seats[i + 1] == 1:\n                continue\n            elif self.seats[i] == 0:\n                maximal = False\n                break\n\n        if self.n > 2 and self.seats[0] == 1 or self.seats[self.n - 1] == 1:\n            maximal = False\n\n        return maximal\n\n\nassert Seating(3, \"101\").is_maximal() is True\nassert Seating(4, \"1011\").is_maximal() is False\n"
    },
    {
        "number": 393,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('101') == 'Yes'\nassert solution('1011') == 'No'\nassert solution('10001') == 'No'\n\n\"\"\""
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5'\nassert solution('3\\n1 5 3') == '1\\n3'\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('5\\n1 3 5 6 8') == '2'\nassert solution('3\\n1 5 3') == '1'\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\nassert solution(\"5\\n1 3 5 6 8\") == \"2\\n3 5\"\nassert solution(\"3\\n1 5 3\") == \"1\\n3\"\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"5\\n1 2 3 4\"\nassert solution(\"4\\n0 1 2 3\\n5 7 8 9\") == \"1\\n3\"\nassert solution(\"4\\n0 1 2 3\\n5 7 8 9\\n3 4 5 6\") == \"1\\n3\"\nassert solution(\"2\\n0 5\\n7 11\") == \"2\\n3\"\nassert solution(\"1\\n0\") == \"1\\n1\"\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == '5\\n1 2 3 4 5'\nassert solution(\"5\\n1 3 5 6 8\") == '2\\n3 5'\nassert solution(\"3\\n1 5 3\") == '1\\n3'\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2 3 4 5\") == \"5\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"1 3 5\") == \"1\"\nassert solution(\"1 3 5 6 8\") == \"2\"\nassert solution(\"1 3 5 6 8 10\") == \"3\"\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5 \"\nassert solution(\"5\\n1 3 5 6 8\") == \"2\\n3 5 \"\nassert solution(\"3\\n1 5 3\") == \"1\\n3 \"\n\"\"\"\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2 3\") == \"1 2 3 4\"\nassert solution(\"5 1 2 3 4\") == \"1 2 3 4 5\"\nassert solution(\"3 1 5 3\") == \"3 5\"\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\nassert solution(\"5\\n1 3 5 6 8\") == \"2\\n3 5\"\nassert solution(\"3\\n1 5 3\") == \"1\\n3\"\n"
    },
    {
        "number": 394,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 -3') == '1 2 -3'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('1 2 3 -4 5') == '1 2 3 -4 5'\n"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"2 2 2 1 1 2 1\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"YES\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\n\n\"\"\"\n\na = list(map(int, input().split()))"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\""
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(str([1,3,2,1,2,1])) == 'YES'\nassert solution(str([1,1,1,1,99])) == 'NO'\n\n\"\"\"\n\nfrom collections import Counter\nimport typing\n"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 3 2 1 2 1') == \"YES\"\nassert solution('1 1 1 1 1 99') == \"NO\"\n\"\"\""
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 3 2 1 2 1\") == \"YES\"\n\"\"\""
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n\"\"\""
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 3 2 1 2 1\") == \"YES\"\n\n\"\"\"\n\n\"\"\"\n\u0414\u0430\u043d\u043d\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u0441\u0442\u0430 \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0437 \u0441\u0430\u0439\u0442\u0430 \u0448\u043a\u043e\u043b\u044b \u0431\u0438\u043e\u043b\u043e\u0433\u0438\u0438 (https://www.school.org.ru/education/scholarships/bio/teacher-student-relations-at-school-bio.html).\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0430\u0439\u0442:\nhttps://www.ruswizard.org/courses/python3/\n\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0448\u043a\u043e\u043b\u044b \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u0435, \u043e\u0434\u043d\u0430\u043a\u043e \u0435\u0441\u0442\u044c \u0432\u0435\u0441\u044c \u043a\u0443\u0441\u043e\u043a \u043a\u043e\u0434\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0442\u0430\u043a \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e.\n\n\u041f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u043a\u0430\u043a \u0440\u0435\u0448\u0430\u044e\u0449\u0443\u044e \u0434\u043b\u044f \u043c\u0435\u043d\u044f:\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0434\u0432\u0443\u0445 \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u043e\u0433\u043e \u0432 \u0437\u0430\u0434\u0430\u043d\u0438\u0438, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u043e\u0439 \u0434\u0432\u0443\u0445 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0445 \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u0435 \u0434\u0432\u0443\u0445 \u0434\u0432\u0443\u0437\u043d\u0430\u0447\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u0434\u043d\u043e \u0438\u0437 \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u043e\u0433\u043e \u0432 \u0437\u0430\u0434\u0430\u043d\u0438\u0438, \u0440\u0430\u0432\u043d\u043e \u0441\u0443\u043c\u043c\u0435 \u0434\u0432\u0443\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u043e\u0433\u043e \u0432 \u0437\u0430\u0434\u0430\u043d\u0438\u0438.\n\"\"\"\n\na = input()\na = a.split()\na = [int(x) for x in a]"
    },
    {
        "number": 395,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"100 200\") == \"5\"\nassert solution(\"1 2000000000\") == \"326\"\n\n\"\"\""
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n\n\"\"\"\n\nfrom math import log2, ceil"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(str(1) + \" \" + str(10)) == \"7\"\nassert solution(str(1) + \" \" + str(2000000000)) == \"326\"\n"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 2') == ''\nassert solution('1 10') == '7'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"1 2000000000\") == \"326\"\n\"\"\"\nfrom math import ceil, log"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == 7\nassert solution(\"100 200\") == 5\n"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1 10\n\"\"\"\n) == '7'\n\"\"\"\nassert solution(\n\"\"\"\n100 200\n\"\"\"\n) == '5'\nassert solution(\n\"\"\"\n1 2000000000\n\"\"\"\n) == '326'\n"
    },
    {
        "number": 396,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 10') == '7'\nassert solution('1 20') == '5'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"6 7\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == 3\nassert solution(\"9 11\") == 4\nassert solution(\"3 2\") == 1\nassert solution(\"5 0\") == 3\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\n\"\"\"\n\n\n\nimport sys\nfrom collections import deque\n"
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\n\"\"\""
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\n\n\"\"\""
    },
    {
        "number": 397,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\"\n\"\"\""
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n1 5 3 2 4') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1 2\") == \"YES\"\nassert solution(\"5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\nassert solution(\"5\\n1 5 3 2 4\") == \"NO\"\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(test_data) == test_result\n\n\"\"\"\n\n\nfrom typing import List\nimport unittest\n\nclass Solution:\n    def triangle_with_three_segments(self, nums: List[int]) -> bool:\n        nums.sort()\n\n        for i in range(len(nums) - 2):\n            if nums[i] == 0:\n                continue\n            for j in range(i + 1, len(nums) - 1):\n                k = j + 1\n                while k < len(nums):\n                    if nums[i] + nums[j] > nums[k]:\n                        break\n                    k += 1\n                if k == len(nums):\n                    return True\n        return False\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.solution = Solution()\n    def testTriangleWithThreeSegments(self):\n        test_data = 5\n        test_result = True\n        self.assertEqual(self.solution.triangle_with_three_segments(test_data), test_result)"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 5 3 2 4\\n\") == \"YES\"\nassert solution(\"3\\n4 1 2\\n\") == \"NO\"\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n1 5 3 2 4') == 'YES'\n\nassert solution('3\\n4 1 2') == 'NO'\n\nassert solution('6\\n2 1 3 4 5 6') == 'NO'\n\nassert solution('8\\n1 1 1 1 1 1 1 1') == 'YES'\n\nassert solution('8\\n1 1 1 1 1 1 1 1 1') == 'NO'"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 100\") == \"Yes\"\nassert solution(\"1 1000\") == \"No\"\nassert solution(\"1 10\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"10 1001\") == \"Yes\"\nassert solution(\"100 1001\") == \"Yes\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\n\"\"\""
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(str(input())) == 'Yes' or solution(str(input())) == 'No'"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"1000 1001\") == \"Yes\"\n\nimport numpy as np\n"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\n\"\"\"\n\nfrom collections import deque\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom copy import deepcopy"
    },
    {
        "number": 399,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\n\"\"\"\n\n\nfrom typing import List\nfrom collections import deque\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n7 9\") == \"2\"\nassert solution(\"3 8\\n17 15 19\") == \"5\"\nassert solution(\"2 2\\n99 100\") == \"20\"\nassert solution(\"1 1\\n11\") == \"10\"\n\nprint(\"PASSED\")\n\n'''\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 4\\n7 9') == '2'\nassert solution('3 8\\n17 15 19') == '5'\nassert solution('2 2\\n99 100') == '20'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7 9\") == \"2\"\nassert solution(\"17 15 19\") == \"5\"\nassert solution(\"99 100\") == \"20\"\nassert solution(\"99 99 99\") == \"20\"\nassert solution(\"2 2\") == \"20\"\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n7 9\") == \"2\"\nassert solution(\"3 8\\n17 15 19\") == \"5\"\nassert solution(\"2 2\\n99 100\") == \"20\"\nassert solution(\"1 2\\n98 99\") == \"100\""
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 9\") == \"2\"\nassert solution(\"17 15 19\") == \"5\"\nassert solution(\"99 100\") == \"20\"\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n7 9\") == \"2\"\nassert solution(\"3 8\\n17 15 19\") == \"5\"\nassert solution(\"2 2\\n99 100\") == \"20\"\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 4\\n7 9\\n') == '2'\nassert solution('3 8\\n17 15 19\\n') == '5'\nassert solution('2 2\\n99 100\\n') == '20'\nassert solution('1 5\\n99 98\\n') == '99'\nassert solution('2 2\\n0 0\\n') == '0'\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n7 9\") == \"2\"\nassert solution(\"3 8\\n17 15 19\") == \"5\"\nassert solution(\"2 2\\n99 100\") == \"20\"\nassert solution(\"1 1\\n100\") == \"100\"\nassert solution(\"3 5\\n8 10 19 4 14\") == \"4\"\n"
    },
    {
        "number": 400,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"2 2\") == \"5\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 2\") == \"5\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n4 2\n5 7 6\n''') == '25'\n\nassert solution('''\n8 8\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1\n''') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\") == \"1\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\") == \"1\"\nassert solution(\"4 2\\n4 2\\n4 2\") == \"4\"\nassert solution(\"4 2\\n4 2\\n4 2\") == \"4\"\nassert solution(\"2 2\\n1 2\\n1 2\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n5 7 6\\n\") == \"25\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\nassert solution(\"2 2\\n4 7 6\\n5 7 6\\n\") == \"1\"\nassert solution(\"5 5\\n1 2 3 4 5\\n5 7 6\\n\") == \"11\"\nassert solution(\"4 8\\n1 2 3 4 5\\n5 7 6 8 9\\n\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('2 3') == '5'\nassert solution('8 8') == '1'\nassert solution('8 7') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n1 2 3 4 5 6 7\\n9 8 7 6 5 4 3\\n\") == \"1\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\nassert solution(\"8 7\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\""
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 2\\n5 7 6\") == \"25\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\n\"\"\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n4 2\\n5 7 6\") == \"25\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6\\n') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 401,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 222\") == 2\nassert solution(\"4 190\") == 4\nassert solution(\"7 1\") == 7\n\"\"\""
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 222') == 2\nassert solution('4 190') == 4\nassert solution('7 1') == 7\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4190') == 4\n\"\"\"\n\nn, k = map(int, input().split())\na = [int(x) for x in range(1, n + 1)]\nb = sum(a)\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''3 222\n''') == 2\nassert solution('''4 190\n''') == 4\nassert solution('''7 1\n''') == 7\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 222\") == \"2\"\nassert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n\"\"\""
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 222\") == 2\nassert solution(\"4 190\") == 4\nassert solution(\"7 1\") == 7\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 190\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 402,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2') == 2\nassert solution('4 190') == 4\nassert solution('7 1') == 7\n\"\"\"\n\nn, k = input().split()\nk = int(k)\nproblems = []\nfor i in range(int(n)):\n    problems.append(5 * i)\n\nproblems.sort()\nprint(sum(problems[:k]))\n"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '1'\n\nassert solution('''\n2\n''') == '2'\n\nassert solution('''\n10\n''') == '6'\n\nassert solution('''\n100\n''') == '30'\nassert solution('''\n5\n''') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('8') == '8'\nassert solution('10') == '10'\nassert solution('5') == '5'\n\"\"\""
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '6'\nassert solution('5') == '3'\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\"\"\"\nimport math"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n\"\"\"\n"
    },
    {
        "number": 404,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"<<<<<\") == 0\nassert solution(\"<<<<<<\") == 0\nassert solution(\">>>>>>\") == 0\nassert solution(\">>>>>\") == 0\nassert solution(\"<<<<<><<<<<<><>>>>>>>\") == 1\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('<<<>><<') == 2\nassert solution('>>>><<') == 2\nassert solution('<<<<>>') == 0\nassert solution('>>>>>>') == 0\nassert solution('<<<<<') == 0\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"<<<<<\") == 0\nassert solution(\">>>>>\") == 0\nassert solution(\">>>>><<<\") == 1\nassert solution(\"<<<<<<\") == 2\nassert solution(\">>>>>>>>\") == 1\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"<<><>>\") == 2\nassert solution(\"<<>>><><\") == 5\n\nprint(\"All tests passed.\")\n\"\"\"\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"<>\") == \"0\"\nassert solution(\"<<<<>\") == \"0\"\nassert solution(\"<<>><\") == \"3\"\nassert solution(\"<><>\") == \"2\"\nassert solution(\"<><><\") == \"3\"\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"<<<<<><>>>>\") == \"5\"\nassert solution(\"<<<><><><<<>>>>>\") == \"10\"\nassert solution(\"<<<><<<><><>>>>\") == \"0\"\nassert solution(\"<><><><><><><>\") == \"0\"\nassert solution(\"<<<<<<><><><><><><>\") == \"10\"\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4<<<<<<\") == \"2\"\nassert solution(\"<<<<<\") == \"0\"\nassert solution(\"<<<<\") == \"0\"\nassert solution(\"<<<><<<<><<<<\") == \"0\"\nassert solution(\"<><<<<\") == \"0\"\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"<<<>><>>\") == 1\nassert solution(\">>>><\") == 0\n\"\"\""
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"><\") == 1\nassert solution(\">><<\") == 5\n"
    },
    {
        "number": 405,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"><<\") == 2\nassert solution(\">><<\") == 0\nassert solution(\"<<<<\") == 0\nassert solution(\">>>>\") == 3\nassert solution(\"<<>>\") == 2\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == '2'\nassert solution('2 2 3 5') == '0'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 2 3 5 5 6') == '3'\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 2\\n\") == \"8\"\n\n\"\"\"\n\nfrom math import factorial\n\nN = int(stdin.readline())\nA = list(map(int, stdin.readline().split()))\n\ndp = [0] * (N + 1)\ndp[0] = 1\n\nfor a in A:\n    dp[a] = 1\n    dp[a + 1] += dp[a]\n    dp[a] += dp[a - 1]\n    dp[a + 2] += dp[a - 1]\n\nprint(dp[-1] % int(1e9 + 7))"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2 4 2\") == \"8\"\nassert solution(\"4 100003 100004 100005 100006\") == \"10000800015\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5 5\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"15\"\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 2\") == \"8\"\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\n\"\"\"\n\n\"\"\"\ninput:\n4\n2 4 4 2\n\noutput:\n8\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_area = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if a[i] <= a[j]:\n            max_area = max(max_area, a[j]*(j-i+1))\n\nprint(max_area)\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4\\n2 4 4 2') == '8'\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 2\") == \"8\"\nassert solution(\"4\\n2 2 3 5\") == \"0\"\n\"\"\"\n\nfrom math import inf\n\nn = int(input())\nsticks = list(map(int, input().split()))"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('5 5 4 4') == '0'\nassert solution('4 5 3 7 2 4 6') == '7'\nassert solution('8 5 4 7 2 9 3 5 7 8 3 5') == '16'\n\n\"\"\"\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 4 4 2\") == \"8\"\n\nassert solution(\"4\\n2 2 3 5\") == \"0\"\n\nassert solution(\"4\\n100003 100004 100005 100006\") == \"10000800015\"\n"
    },
    {
        "number": 406,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 4 4 2\") == '8'\n\"\"\""
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\nab\\nde\\naj\") == \"47\"\nassert solution(\"5\\nabcdef\\nghi\\nbdef\\naccbd\\ng\") == \"136542\"\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\nab\\ncd\\nef\\n\") == \"47\\n\"\nassert solution(\"4\\nabc\\ndef\\ng\\n\") == \"136542\\n\"\nassert solution(\"5\\nabcde\\nfghij\\nbdef\\naccbd\\ng\\n\") == \"136542\\n\"\nassert solution(\"1\\nab\\nj\\na\\n\") == \"44\\n\"\nassert solution(\"1\\nab\\nj\\n\") == \"44\\n\"\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 aa aa\") == 3\nassert solution(\"6 ab aa\") == 136542\nassert solution(\"3 aj aj\") == 44\nassert solution(\"3 ab ac\") == 44\nassert solution(\"1 ab aj\") == 44\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('ab') == 1\nassert solution('ac') == 2\nassert solution('a') == 1\nassert solution('b') == 0\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"abcdef\") == \"1111\"\nassert solution(\"ab\") == \"1100\"\nassert solution(\"bb\") == \"1110\"\nassert solution(\"abdd\") == \"11110\"\nassert solution(\"accc\") == \"11111\"\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"ab\") == \"47\"\nassert solution(\"de\") == \"47\"\nassert solution(\"aj\") == \"44\"\nassert solution(\"abcdef\") == \"136542\"\nassert solution(\"ghij\") == \"136542\"\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"23\"\nassert solution(\"de\") == \"43\"\nassert solution(\"aj\") == \"4j\"\nassert solution(\"\") == \"\"\nassert solution(\"aa\") == \"44\"\n\nprint(\"The local tests are done. Click on 'Check' to earn cool rewards!\")\n\"\"\""
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"2\"\nassert solution(\"cd\") == \"21\"\nassert solution(\"aab\") == \"13\"\nassert solution(\"abcd\") == \"5\"\nassert solution(\"dab\") == \"2\"\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('ab') == '4'\nassert solution('de') == '7'\nassert solution('aj') == '7'\nassert solution('abcdef') == '136542'\nassert solution('ghij') == '136542'\n"
    },
    {
        "number": 407,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"1\"\nassert solution(\"de\") == \"3\"\nassert solution(\"aj\") == \"4\""
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\nimport timeit\n\na = timeit.timeit('solution(\"2 6\")', number=100, globals=globals())\nb = timeit.timeit('solution(\"4 5\")', number=100, globals=globals())\n\nprint(f'{a}')\nprint(f'{b}')"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"2\"\n\"\"\""
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 5') == '3'\nassert solution('2 6') == '2'\n"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(2, 6) == 2\nassert solution(4, 5) == 3\nassert solution(6, 1) == 3\nassert solution(6, 0) == 1\nassert solution(0, 0) == 0\n"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 6\\n') == '2'\nassert solution('4 5\\n') == '3'\n\"\"\"\nimport math"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2 6\\n') == '2'\nassert solution('4 5\\n') == '3'\n\"\"\"\n\nn, m = map(int, input().split())\n\nn_x = m // 2 + m % 2\nn_y = m - n_x\n\nprint(n_x + n_y + 1)\n"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\"\"\"\n\na, b = map(int, input().split(' '))\n\nprint(((a + 1) * (b + 1)) // 2)"
    },
    {
        "number": 408,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"YES\"\nassert solution(\"BACFAB\") == \"NO\"\nassert solution(\"AXBYBXA\") == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'YES'\nassert solution('BACFAB') == 'NO'\nassert solution('AXBYBXA') == 'NO'\n\n\"\"\"\n\n\"\"\"\n\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438    1 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\n\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u043c\u044f\u0442\u0438    64Mb\n\u0412\u0432\u043e\u0434    \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434 \u0438\u043b\u0438 input.txt\n\u0412\u044b\u0432\u043e\u0434    \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0438\u043b\u0438 output.txt\n\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435    FINAL\n\"\"\"\n\ns = input()"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"YES\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"YES\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"AB\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"ABBAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\nassert solution(\"6\\n1 2 2 2 1 2\\n2\\n3 3\") == \"NO\"\nassert solution(\"6\\n1 2 2 2 1 2\\n2\\n3 5\") == \"NO\"\nassert solution(\"7\\n1 1 1 3 3\\n1\\n2 3 6\") == \"NO\"\nassert solution(\"7\\n1 1 1 3 3\\n1\\n2 3 6\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 2 2 1 2\\n2\\n5 5') == 'YES\\n2 L\\n1 R\\n4 L\\n3 L'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO'\n\n\"\"\""
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == 'YES'\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == 'NO'\n\"\"\"\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\""
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 3\\n4 5\") == \"NO\"\nassert solution(\"6\\n1 1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"YES\\n5 L\\n4 L\"\nassert solution(\"6\\n1 1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\\n2 L\\n1 R\\n4 L\\n3 L\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"NO\"\nassert solution(\"5\\n1 1 1 3 3\\n3\\n2 1 6\") == \"YES\\n5 L\\n4 L\\n3 L\"\n\"\"\"\n\n\"\"\"\nSolution 2"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 1 3 3\\n2 1 6') == 'YES'\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2 2 2 1 2\\n2\\n5 5') == 'YES\\n2 L\\n1 R\\n4 L\\n3 L'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1 3 3\") == \"YES\"\nassert solution(\"1 2 2 1 2\") == \"YES\"\nassert solution(\"5 1 1 3 3\") == \"YES\"\nassert solution(\"1 1 1 3 3\") == \"NO\"\nassert solution(\"2 1 2\") == \"NO\"\n\n'''"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2') == 'Yes'\nassert solution('2 1\\n1 0\\n2 2\\n3 1') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == \"No\"\nprint(solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\"))\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == 'Yes'\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == 'No'\n\n\"\"\"\nimport collections\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\") == 'Yes'\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == 'No'\nassert solution(\"2 2\\n3 1\") == 'No'\nassert solution(\"1 1\\n1 1\") == 'Yes'\nassert solution(\"1 2\\n0 1\") == 'Yes'\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == \"No\"\n\nassert solution(\"6 7\\n0 5\\n1 3\\n1 3\\n3 0\\n2 3\\n4 1\\n4 0\\n2 4\\n3 5\") == \"Yes\"\nassert solution(\"5 7\\n0 5\\n2 4\\n3 3\\n3 3\\n4 1\\n3 2\\n4 0\\n2 1\\n3 4\") == \"Yes\"\nassert solution(\"6 6\\n0 5\\n0 5\\n1 5\\n1 5\\n2 2\\n2 4\\n3 4\\n3 4\\n4 0\\n4 1\\n4 2\\n4 3\\n4 3\\n4 4\\n5 5\\n5 5\\n5 5\\n6 4\\n6 1\\n6 1\\n6 1\") == \"No\"\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\\n\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\\n\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 2\\n3 1\") == \"No\"\nassert solution(\"3 3\\n0 0\\n2 0\\n3 1\") == \"Yes\"\nassert solution(\"2 2\\n0 0\\n1 1\") == \"No\""
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == \"No\"\n\nassert solution(\"5 5\\n0 1\\n4 0\\n2 3\\n2 4\\n3 4\\n3 5\\n4 1\\n4 2\\n5 0\\n0 5\\n2 5\\n2 4\\n3 3\\n0 4\\n0 2\\n1 3\\n2 1\\n3 1\\n3 0\\n1 4\\n4 0\") == \"No\"\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == \"No\"\n"
    },
    {
        "number": 411,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\") == \"No\"\n"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\n80 7 16 4 48\") == \"16 3\"\n\"\"\"\n"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3'\n\nassert solution('4\\n21 5 3 33') == '1 4'\n\nassert solution('3\\n1 2 4') == '1 4'\n\"\"\"\nimport sys"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n80 7 16 4 48\\n') == '16 3'\nassert solution('4\\n21 5 3 33\\n') == '1 4'\nassert solution('4\\n21 5 3 33\\n') == '1 4'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = [x for x in a if x % 2 == 0]\nr = 0\nn_b = len(b)\nwhile r < len(b) and len(b) > 1:\n    r += 1\n    if r > len(b):\n        break\n    if b[-1] % r == 0:\n        n_b += 1\n        b.pop()\nprint(r, n_b)"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3'\nassert solution('4\\n21 5 3 33') == '1 4'\n"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2 1') == '0 3'\nassert solution('4 1 1') == '0 3'\nassert solution('4 2') == '0 3'\nassert solution('3') == '0 0'\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3'\nassert solution('4\\n21 5 3 33') == '1 4'\nassert solution('4\\n21 5 3 33') == '1 4'\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3'\nassert solution('4\\n21 5 3 33') == '1 4'\nassert solution('1\\n3') == '1 1'\nassert solution('2\\n6 7') == '1 2'\nassert solution('3\\n7 8') == '1 3'\n"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('80 7 16 4 48') == '16 3'\nassert solution('21 5 3 33') == '1 4'\nassert solution('4 21 5 3 33') == '1 4'\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\na = 1\nc = []\nfor i in range(n):\n    if a % 2 == 0:\n        c.append(i)\n    a *= 2\nprint(max(c), len(c))\n"
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n80 7 16 4 48\") == \"16 3\"\nassert solution(\"4\\n21 5 3 33\") == \"1 4\"\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n80 7 16 4 48\") == '16 3'\nassert solution(\"4\\n21 5 3 33\") == '1 4'\nassert solution(\"4\\n5 3 33\") == '1 4'\n\"\"\""
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 6\") == 2"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 6\") == '2'\nassert solution(\"10 1\") == '9'\nassert solution(\"6 10\") == '4'\nassert solution(\"10 10\") == '0'\n\"\"\"\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 6') == 2\nassert solution('10 1') == 9\n\n\"\"\"\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 413,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == 2\nassert solution(\"10 1\") == 9\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n5 9\n3 6\n2 9\n7 10\n1 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n8 9\n3 6\n2 9\n7 10\n1 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n9 10\n3 6\n2 9\n7 10\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n6 9\n3 6\n2 9\n7 10\n1 4\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8\\n\") == \"YES\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n\") == \"NO\"\n\n\"\"\"\n\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n3 6\\n2 9\\n7 10\\n1 4\") == \"NO\"\nassert solution(\"5 8\\n3 6\\n2 9\\n7 10\\n1 4\") == \"NO\"\nassert solution(\"5 8\\n3 6\\n2 9\\n7 10\\n1 4\") == \"NO\"\n\"\"\""
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8\") == \"YES\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\") == \"NO\"\n\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n\") == \"NO\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n') == 'NO'\nassert solution('5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n') == 'NO'\nassert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n') == 'YES'\nassert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n') == 'YES'\nassert solution('5\\n9 10\\n1 2\\n3 4\\n7 8\\n5 6\\n') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4') == 'NO'\nassert solution('6\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2\\n4\\n5\\n6\\n9\\n10\\n7\\n8\") == \"NO\"\n\nassert solution(\"1\\n3\\n5\\n9\\n10\\n2\\n4\\n7\\n8\") == \"YES\"\n\"\"\"\n\nn = int(input())\n\nmatrix = [[0]*n for i in range(n)]\n\nfor i in range(n):\n    l, r = [int(i) for i in input().split()]\n    for j in range(n):\n        if l <= j and j <= r:\n            matrix[i][j] = 1"
    },
    {
        "number": 414,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 5\\n1 3\\n1 4\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 4\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 4\\n5 9\\n6 8\") == \"NO\"\n\"\"\""
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n2\\n1\\n1\\n1\\n1\\n') == '1', 'error'\nassert solution('4\\n1\\n2\\n1\\n100\\n1\\n1\\n') == '2', 'error'\n\"\"\"\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n100 200 1 1 1\") == 3\nassert solution(\"5\\n100 200 1 1 1\") == 3\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n100 200 1 1 1\\n\") == \"3\"\nassert solution(\"2\\n101 99\\n\") == \"1\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n100 200 1 1 1\\n') == 3\nassert solution('2\\n101 99') == 1\nassert solution('5\\n100 200 1 1 1') == 3\nassert solution('1\\n1') == 1\nassert solution('2\\n2') == 0\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('''5\n100 200 1 1 1\n''') == '3'\n\nassert solution('''5\n1 2 3 4 5\n''') == '0'\n\nassert solution('''2\n101 99\n''') == '1'\n\nassert solution('''5\n100 200 1 1 1\n''') == '3'\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"100 200 1 1 1\") == 3\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\n\"1 2 3 4 5\"\n) == 3\n\"\"\"\nimport re"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n100 200 1 1 1\\n') == 3\nassert solution('2\\n101 99\\n') == 1\nassert solution('5\\n100 200 1 1 1\\n') == 3\nassert solution('2\\n101 99\\n') == 1\nassert solution('0\\n101 99\\n') == 0\n"
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n100 200 1 1 1\") == \"3\"\n\"\"\""
    },
    {
        "number": 415,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n100 200 1 1 1\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n') == '0'\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5 2 NNNYY') == 'YES'\nassert solution('5 2 NNNYY') == 'YES'\nassert solution('6 1 NNNNN') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2 NYNNY\") == \"YES\"\nassert solution(\"6 1?NNNNY\") == \"NO\"\n\"\"\""
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 2\\nNYNNY') == 'YES'\n\nassert solution('6 1\\n????NN') == 'NO'\n\n\"\"\""
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 2\\nNYNNY') == \"YES\"\nassert solution('6 1\\n????NN') == \"NO\"\nprint('tests passed')"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"6 1\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"5 3\") == \"NO\"\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('5 2\\nNYNNY') == 'YES'\nassert solution('6 1\\n????NN') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(test_1) == 'YES'\nassert solution(test_2) == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 2\\nNYNNY') == 'YES'\nassert solution('6 1\\n????NN') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 2 NYNNY') == 'YES'\n\nassert solution('6 1 NNNNNY') == 'NO'\nassert solution('1 1 NN') == 'NO'\nassert solution('4 0 NN') == 'NO'\nassert solution('4 3 NNN') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nNYNNY\") == \"YES\"\nassert solution(\"6 1\\n????NN\") == \"NO\"\n"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4 3 2') == '8'\nassert solution('4 3 3') == '0'\nassert solution('7 10 2') == '5'\nassert solution('10 9 2') == '4'\n\"\"\"\n\nn, x, d = input().split(' ')\nn, x, d = int(n), int(x), int(d)\n\narr = []\nfor _ in range(n):\n    arr.append(int(input()))\n\narr.sort()\n\ns = 0\nt = 0\nfor i in arr:\n    s += i\n    t += x"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\") == \"8\"\n\"\"\""
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2\\n\") == \"8\"\n\n-----Test Cases-----\n\n1)\nInput is:\n3 4 2\nOutput is:\n8\n\n2)\nInput is:\n4 6 2\nOutput is:\n8\n\n3)\nInput is:\n5 10 4\nOutput is:\n40\n\n4)\nInput is:\n1 5 2\nOutput is:\n9\n\n5)\nInput is:\n10 8 4\nOutput is:\n35\n\"\"\""
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 4 2') == '8'\n\"\"\"\n\nfrom typing import List\n\nfrom collections import deque"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\") == \"8\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2\") == \"8\"\n\"\"\"\n\n\nfrom itertools import combinations"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"8\"\n\"\"\""
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"8\"\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 417,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('''3 4 2''') == '8'\n\"\"\""
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5\\nBudAlNik 2 467\\nsubscriber 2833 2749\\nBudAlNik 2 522\") == \"YES\"\nassert solution(\"5\\nBudAlNik 2 467\\nsubscriber 2833 2749\\nBudAlNik 2 522\") == \"NO\"\nassert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\") == \"YES\"\nassert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\") == \"NO\"\n"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\") == \"YES\"\nassert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\") == \"NO\"\n\"\"\"\n\nn = int(input())\n\nfor i in range(n):\n    handle, before, after = input().split()\n    before = int(before)\n    after = int(after)\n    if after > before:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'YES'\nassert solution('''\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'NO'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n\") == \"YES\"\nassert solution(\"2\\nBurunduk1\\nBudAlNik\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\") == 'NO'\nassert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\") == 'YES'\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\"\"\") == \"NO\"\nassert solution(\"\"\"3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\"\"\") == \"YES\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\") == \"NO\"\nassert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\") == \"YES\"\n\"\"\""
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\") == \"YES\"\n\"\"\"\nimport sys"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450') == 'NO'\nassert solution('3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749') == 'YES'"
    },
    {
        "number": 418,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\") == 'YES'\nassert solution(\"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n\") == 'NO'\n\n\n\n\"\"\""
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10100') == 3\nassert solution('101') == 2\n\"\"\"\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('10100') == 3\nassert solution('101') == 2\nassert solution('1011') == 3\nassert solution('10011') == 3\nassert solution('10101') == 4\n\"\"\"\nimport math\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('10100') == '3'\nassert solution('101') == '2'\nassert solution('100000000') == '4'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10100\") == \"3\"\nassert solution(\"101010\") == \"3\"\nassert solution(\"101110\") == \"3\"\nassert solution(\"10111010\") == \"2\"\nassert solution(\"10111011\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('100') == '4'\nassert solution('1100') == '3'\nassert solution('1010') == '2'\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"10100\") == 3\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"10100\") == \"3\"\nassert solution(\"101\") == \"2\"\nassert solution(\"100000000\") == \"4\"\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('10010') == '2'\nassert solution('10100') == '3'\nassert solution('10110') == '3'\nassert solution('11110') == '0'\nassert solution('11111') == '1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"10100\") == 3\nassert solution(\"101\") == 2\nassert solution(\"100000000\") == 4\n\n\"\"\"\nimport re\n"
    },
    {
        "number": 419,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10100') == '3'\nassert solution('101') == '2'\nassert solution('1011') == '3'\nassert solution('10010') == '3'"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\\n\") == \"2\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"3\"\nassert solution(\"8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n\") == \"2\"\nprint('Test passed')"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0\n\n''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\n''') == '2'"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\") == '2'\n\nprint('Success')"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3', \"First Test\"\nassert solution('4 3\\n0 0 0\\n1 1 1\\n1 1 1\\n0 0 0\\n') == '2', \"Second Test\"\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == '2', \"Third Test\"\n\nprint(\"The local tests are done. Click on 'Check' to earn cool rewards!\")"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\") == \"2\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"3\"\nassert solution(\"8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n\") == \"2\"\n"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\n''') == '2'\n\nassert solution('''\n3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\n\nassert solution('''\n8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\\n\") == \"2\"\nassert solution(\"8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n\") == \"3\"\nprint(\"Check done.\")\n"
    },
    {
        "number": 420,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\") == \"2\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"3\"\nassert solution(\"8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('''2\n7 11\n4 7\n2 5\n1 3\n6 8\n''') == '3'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '2'\nassert solution('''1\n2\n3\n4\n5\n''') == '0'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '5'\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(example1) == 2\n\"\"\"\n\nimport math\nimport sys\n\nsys.stdin = open(sys.stdin.read().strip())\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7 11\\n4 7\\n2 5\\n1 3\\n6 8\") == \"3\"\nassert solution(\"5\\n4 7\\n2 5\\n1 3\\n6 8\") == \"2\"\n\"\"\""
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(a) == b\n\n\"\"\"\n\n\n\"\"\"\nfrom itertools import combinations\n\nn = int(input())\nlst = []\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    lst.append([l, r])\n\nlst.sort()\n\nfor i in range(1, n):\n    for j in range(i):\n        if lst[i][0] > lst[j][0] and lst[i][1] <= lst[j][1]:\n            print(j+1)\n            break\n\"\"\"\n\nfrom bisect import bisect_left\nfrom itertools import combinations\n\nn = int(input())\nlst = []\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    lst.append([l, r])\n\nlst.sort()\n\nfor i in range(n):\n    c = combinations(lst, i)\n    for j in c:\n        lst[i] = [min(j), max(j)]\n        lst.sort()\n        # print(lst)\n        index = bisect_left(lst, [lst[i][1], lst[i][1]])\n        if index == n:\n            print(n - i)\n            break"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\\\n4\\\\n1 5\\\\n4 7\\\\n2 5\\\\n1 3\\\\n6 8\\\\n\") == \"2\"\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n4 7\\n2 5\\n1 3\\n6 8\\n') == '3'\nassert solution('5\\n4 7\\n2 5\\n1 3\\n6 8\\n') == '2'\n\"\"\"\n\nfrom typing import List, Dict"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('2\\n4 7\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8\\n') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '3'\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n4 7\\n2 5\\n1 3\\n6 8\") == 3\nassert solution(\"6\\n4 8\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8\") == 2\n\"\"\"\n\nfrom math import inf\nfrom typing import Tuple, Dict, Set, Union, List, Optional\n"
    },
    {
        "number": 421,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n4 7\") == '1'\nassert solution(\"5\\n1 2\\n4 7\\n2 5\\n1 3\\n6 8\") == '2'\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n5 2\") == \"YES\"\nassert solution(\"2 2\\n5 6\") == \"NO\"\nassert solution(\"4 1\\n4 1 10 1\") == \"YES\"\nassert solution(\"4 1\\n3 2 10 1\") == \"NO\"\nassert solution(\"4 1\\n2 2 10 1\") == \"YES\"\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n\") == \"YES\"\nassert solution(\"2 1\\n2 1\\n\") == \"YES\"\nassert solution(\"2 2\\n5 5\\n2 2\\n\") == \"NO\"\nassert solution(\"4 1\\n4 1 10 1\\n3 2 10 1\\n\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 2\\n3 5 10 1') == 'YES'\nassert solution('2 2\\n5 6\\n2 2') == 'NO'\n\n\n----\n'''"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('2 2\\n5 6\\n2 2') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'NO'\n\"\"\""
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n5 5\\n2 2\") == \"YES\"\nassert solution(\"2 2\\n5 6\\n2 2\") == \"NO\"\nassert solution(\"4 1\\n4 1 10 1\\n3 2 10 1\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(1, 2, 3, 4) == \"NO\"\nassert solution(2, 2, 5, 6) == \"YES\"\nassert solution(1, 1, 1, 1) == \"YES\"\nassert solution(1, 1, 1, 2) == \"YES\"\nassert solution(1, 1, 1, 3) == \"YES\"\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n5 5\\n2 2\") == 'YES'\nassert solution(\"4 1\\n4 1 10 1\\n3 2 10 1\") == 'YES'\nassert solution(\"3 1\\n10 10 10\") == 'NO'\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n5 5\\n2 2\") == 'YES'\nassert solution(\"2 2\\n5 6\\n2 2\") == 'NO'\n\"\"\"\n"
    },
    {
        "number": 422,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n5 5\\n2 2\") == \"YES\"\n\nassert solution(\"2 2\\n5 6\\n2 2\") == \"NO\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n-1\\n?\\n1\\n?\\n1\\n1\\n\") == \"Yes\"\nassert solution(\"2 100\\n-10000\\n0\\n1\\n?\\n1\\n1\\n\") == \"Yes\"\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n-1\\n?\\n1 1\\n1 1\\n\") == \"Yes\"\nassert solution(\"2 100\\n-10000\\n0\\n1\\n1\\n\") == \"Yes\"\nassert solution(\"4 5\\n?\\n1\\n?\\n1\\n?\\n\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n1 -1?0\\n0? 1\\n0 1\\n1\\n1 1\\n\") == \"Yes\"\nassert solution(\"2 100\\n1 -1?0\\n0? 1\\n0 1\\n0 1\\n1\\n1 1\\n\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 2\\n-1\\n?\\n1 1') == 'Yes'\nassert solution('2 100\\n-10000\\n0\\n1\\n?\\n1 1') == 'Yes'\nassert solution('4 5\\n?\\n1\\n?\\n1\\n?\\n1\\n') == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n-1\\n?\\n1\\n\") == \"Yes\"\nassert solution(\"2 100\\n-10000\\n0\\n1\\n\") == \"Yes\"\nassert solution(\"4 5\\n?\\n1\\n?\\n1\\n?\\n1\\n\") == \"No\"\n\"\"\""
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n\"4 5\\n-10000\\n0\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\n-10000\\n1\\"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''1 2\n-1\n?\n1 2\n0\n1 2\n-1\n?\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1 2\\n-1\\n?\\n0 1') == 'Yes'\nassert solution('2 100\\n-10000\\n0\\n1\\n') == 'Yes'\nassert solution('4 5\\n?\\n1\\n?\\n1\\n?\\n') == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 2\\n-1\\n?\\n1 1') == 'Yes'\nassert solution('1 100\\n-10000\\n0\\n1\\n\\n1') == 'Yes'\nassert solution('1 100\\n-10000\\n0\\n1\\n?\\n1') == 'No'\nassert solution('1 100\\n-10000\\n0\\n1\\n1 1') == 'No'\n\n\"\"\"\n\nimport numpy as np\nfrom itertools import combinations\nfrom collections import Counter"
    },
    {
        "number": 423,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n-1\\n?\\n1 1\") == \"Yes\"\nassert solution(\"2 100\\n-10000\\n0\\n1\\n?\\n1\\n?\\n1\\n\") == \"No\"\n\"\"\"\nimport math\nimport io\nimport os\nfrom typing import List\nfrom collections import deque\n\nfrom rich import print\nfrom rich.table import Table\nfrom rich.console import Console\n\n\nclass Polynomial:\n    def __init__(self, coefficients: List[int]) -> None:\n        self.coefficients = coefficients\n\n    def __str__(self) -> str:\n        result = []\n        for i in range(len(self.coefficients) - 1, -1, -1):\n            if self.coefficients[i]!= 0:\n                result.append(f\"{self.coefficients[i]}x^{i}\")\n        return \" + \".join(result)\n\n    def __call__(self, x: int) -> float:\n        result = 0\n        for i in range(len(self.coefficients)):\n            result += self.coefficients[i] * x ** i\n        return result\n\n    def __add__(self, other: \"Polynomial\") -> \"Polynomial\":\n        if len(self.coefficients) > len(other.coefficients):\n            longer = self.coefficients\n            shorter = other.coefficients\n        else:\n            longer = other.coefficients\n            shorter = self.coefficients\n        result = [longer[i] + shorter[i] for i in range(len(longer))]\n        for i in range(len(result)):\n            if result[i] == 0:\n                result = result[:i]\n                break\n        return Polynomial(result)\n\n    def __eq__(self, other: \"Polynomial\") -> bool:\n        return self.coefficients == other.coefficients\n\n    def __sub__(self, other: \"Polynomial\") -> \"Polynomial\":\n        return self + other * -1\n\n    def __mul__(self, other: \"Polynomial\") -> \"Polynomial\":\n        result = [0] * (len(self.coefficients) + len(other.coefficients) - 1)\n        for i in range(len(self.coefficients)):\n            for j in range(len(other.coefficients)):\n                result[i + j] += self.coefficients[i] * other.coefficients[j]\n        return Polynomial(result)\n"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n\"\"\"\n\n\nimport sys\nfrom math import sqrt, ceil\n"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"14\") == 6\nassert solution(\"20\") == 15\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\n\"\"\""
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\n\nprint(solution(stdin.strip()))\n"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\nassert solution('16') == '12'\nassert solution('12') == '16'\n\"\"\"\n\nfrom utils import timing"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n\"\"\"\n\n\nfrom math import ceil\n"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4') == '6'\nassert solution('20') == '15'\n\"\"\""
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 424,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\n\"\"\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n\"\"\""
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"4 -7\") == \"2\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\n\"\"\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"-\"\nassert solution(\"1 -1\") == \"-\"\n\"\"\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"24 -7\") == \"2\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-\"\n\"\"\"\n\nfrom math import log, ceil\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"24 0\") == \"2\"\nassert solution(\"24 1\") == \"3\"\nassert solution(\"24 -1\") == \"4\"\nassert solution(\"4 -7\") == \"2\"\nassert solution(\"1 1\") == \"-\"\n\n\"\"\"\n"
    },
    {
        "number": 425,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 1') == '-1'\nassert solution('1 -1') == '2'\nassert solution('4 -7') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"51528\") == \"10028\"\nassert solution(\"102\") == \"100\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10011011111100010\") == \"10001111111101010\"\nassert solution(\"110111111111100010\") == \"10001111111101010\"\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 3\\n51528') == '10028'\nassert solution('3 2\\n102') == '100'\nassert solution('1 1\\n1') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('51528') == '10028'\nassert solution('102') == '100'\nassert solution('1') == '0'\nassert solution('1 1') == '0'\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"51528\") == \"10028\"\nassert solution(\"102\") == \"100\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"9\") == \"0\"\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"51528\") == \"10028\"\nassert solution(\"102\") == \"100\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('51528') == '10028'\nassert solution('102') == '100'\nassert solution('101') == '0'\n\"\"\"\n\n\"\"\"\nFor each digit from last to first:"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"51528\") == \"10028\"\nassert solution(\"102\") == \"100\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 3\\n51528') == '10028'\nassert solution('3 2\\n102') == '100'\nassert solution('1 1\\n1') == '0'\n\n\"\"\""
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('51528') == '10028'\nassert solution('102') == '100'\nassert solution('1010') == '0'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 426,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"51528\") == \"10028\"\nassert solution(\"102\") == \"100\"\n\"\"\"\n\nfrom math import log10\nfrom typing import List\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 2 2 3') == '1'\n\"\"\""
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 3 2 3') == 5\nassert solution('1 3 2 5') == 4"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"5\"\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''3 1 2 3''') == '5'\n\"\"\"\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\n\"\"\"\n\ncnt_1, cnt_2, x, y = list(map(int, stdin.strip().split()))"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"3 1 2 3\") == \"4\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2 3\") == 5\nassert solution(\"1 3 2 6\") == 4\n"
    },
    {
        "number": 427,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 0 1 2\\n\") == \"3 1\"\n\n\"\"\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n\"\"\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(test_input) == expected_output"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"5 1 2 0 -1 -1 2\") == \"3 1\"\n\"\"\""
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n\"\"\"\nimport sys"
    },
    {
        "number": 428,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"8 7 8 -1 -1 1\") == \"8 7\"\nassert solution(\"8 7 8 -1 -1 1\") == \"8 7\"\nassert solution(\"8 7 8 -1 -1 1\") == \"8 7\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\n\"\"\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"???????????????????\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\n    \"ABC??FGHIJK???OPQR?TUVWXY?\\n\"\n) == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\n    \"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\"\n) == \"-1\\n\"\nassert solution(\n    \"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\"\n) == \"-1\\n\"\nassert solution(\n    \"??????????????????\\n\"\n) == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\\n\""
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\\n\""
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == -1\nassert solution
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?Z\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"??????????????????????????\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n\n\"\"\"\n\n\nclass Solution:\n    def solution(self, s):\n        if not s:\n            return \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n        words = list(s)\n        for i in range(len(s)):\n            if words[i] == \"?\":\n                words[i] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[i]\n        return \"\".join(words)\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXY\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"AB?CDEFGHIJKLMNOPQRSTUVWXY\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ABC??FGHIJK???OPQR?TUVWXY\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?A\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"-\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"-\"\nassert solution(\"??????????????????????????\") == \"MN\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?C\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n\"\"\"\n"
    },
    {
        "number": 429,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"-1\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"-1\"\nassert solution(\"??????????????????????????\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n100 200 100\") == \"YES\"\nassert solution(\"4\\n100 100 100 200\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n100 200 100') == 'YES'\n\"\"\""
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n100 200 100\\n\") == \"YES\"\nassert solution(\"4\\n100 100 100 200\\n\") == \"NO\"\nassert solution(\"1\\n100\\n\") == \"YES\"\nassert solution(\"2\\n100 200\\n\") == \"YES\"\nassert solution(\"3\\n100 200 100\\n\") == \"NO\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"100 200 100\") == \"YES\"\nassert solution(\"200 200 200\") == \"YES\"\nassert solution(\"100 100 100 200\") == \"NO\"\n\n'''\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n100 200 100\\n\") == \"YES\"\nassert solution(\"4\\n100 100 100 200\\n\") == \"NO\"\n\n'''\n\nn = int(input())\nw = list(map(int, input().split(' ')))\n\nw.sort()"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 200 100\") == 'YES'\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"NO\"\nassert solution(\"6\\n1 3 4 5 6\") == \"YES\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"YES\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3\\n100 200 100\\n') == 'YES'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3\\n100 200 100\") == \"YES\"\nassert solution(\"4\\n100 100 100 200\") == \"NO\"\nprint('Test pass.')\n\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n100 200 100\\n\") == \"YES\"\nassert solution(\"4\\n100 100 100 200\\n\") == \"NO\"\nassert solution(\"3\\n1 1 1\\n\") == \"YES\"\nassert solution(\"4\\n1 1 1 200\\n\") == \"NO\"\n\"\"\""
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n01110\\n01110\\n01110\\n01110\") == \"18\"\nassert solution(\"2 2\\n00\") == \"5\"\n"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"0010\\n0100\") == 5\n"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 4\") == \"12\"\nassert solution(\"4 3\") == \"18\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n0010\\n0100\") == \"5\"\nassert solution(\"3 4\\n001000\\n000010\\n000010\\n000010\") == \"12\"\nassert solution(\"4 3\\n01110\\n01110\\n01110\\n01110\") == \"18\"\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"0010\\n0100\") == 5\nassert solution(\"001000\\n000010\\n000010\\n000010\\n01110\") == 12\n\"\"\"\n\nimport math"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"0010\\n0100\") == 5\n\n\"\"\"\nimport re\nimport sys"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('2 2\\n0010\\n0100') == '5'\nassert solution('3 4\\n001000\\n000010\\n000010\\n000010') == '12'\nassert solution('4 3\\n01110\\n01110\\n01110\\n01110') == '18'\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n010\\n110\\n110\\n110\") == \"18\"\n"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 4\\n010\\n010\\n010\\n010') == '18'\n"
    },
    {
        "number": 431,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n0010\\n0100\") == \"5\"\nassert solution(\"3 4\\n001000\\n000010\\n000010\\n000010\") == \"12\"\nassert solution(\"4 3\\n01110\\n01110\\n01110\\n01110\") == \"18\""
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 2 10\\n1 3 4 3 3') == '3'\nassert solution('4\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6') == '10'\nassert solution('7\\n1 1 1 1 1 1 1 1\\n2 2 2 3 6 7 6') == '2'\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 3 2 2\") == \"1\"\nassert solution(\"7 1 1 1 1 1 1\") == \"2\"\nassert solution(\"7 1 1 1 1 1 1\") == \"2\"\nassert solution(\"7 2 2 1 6 7 6\") == \"10\"\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\\n2 3 4 3\") == \"7\"\nassert solution(\"7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(test_input) == test_solution\nprint(solution(input))\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 2 2\") == \"4\"\nassert solution(\"3 1 3 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 2 10\\n1 3 4 3 3\\n\") == \"3\"\n\nassert solution(\"4\\n1 10 2 10\\n2 4 2 2\\n\") == \"10\"\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 1 1\\n1 3 4 3 3\") == 3\nassert solution(\"4\\n1 10 2 10\\n2 4 2 2\") == 10\nassert solution(\"7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\") == 2\n\"\"\"\n\nimport math\nimport itertools\n\nimport sys\n\nsys.setrecursionlimit(10000)\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 2 10\\n1 3 4 3 3\\n') == '3'\nassert solution('4\\n1 10 2 10\\n2 4 2 2\\n') == '10'\nassert solution('7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\\n') == '2'\n\"\"\"\nfrom collections import Counter\n\nn = int(input())\n\ntrap = list(map(int, input().split()))\n\nmice = list(map(int, input().split()))\n\ntrap = Counter(trap)\n\ntrap = [trap[i] for i in range(1, n + 1)]\n\nmice = Counter(mice)\n\nmice = [mice[i] for i in range(1, n + 1)]\n\nmin_cost = sum(trap)\nfor i in range(n):\n    mice[i] += 1\n    if trap[i] > 0:\n        trap[i] -= 1\n        if mice[i + 1] > 0:\n            mice[i + 1] -= 1\n            trap[i + 1] += 1\n    min_cost += abs(trap[i] - mice[i])\n\nprint(min_cost)"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 432,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 2 10\\n1 3 4 3 3') == '3'\nassert solution('4\\n1 10 2 10\\n2 4 2 2') == '10'\nassert solution('7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6') == '2'\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\") == \"4\"\nassert solution(\"2 2 -5\") == \"3\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"3 2 7\") == \"3\"\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n\n---\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 1 3') == '3'\n\n\"\"\""
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\") == \"4\"\nassert solution(\"6 2 -5\") == \"3\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"3 2 7\") == \"3\"\nassert solution(\"6 4 2\") == \"5\"\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 2 -5\") == 3\n\"\"\""
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"6 2 -5\") == 3\nassert solution(\"5 1 3\") == 4\nassert solution(\"3 2 7\") == 3\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 2 -5\") == 3\n\"\"\""
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\") == 3\nassert solution(\"6 2 -5\") == 3\nassert solution(\"5 1 3\") == 4\n\"\"\"\n"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 2 -5\") == \"3\"\nassert solution(\"5 1 3\") == \"4\"\nassert solution(\"3 2 7\") == \"3\"\n'''"
    },
    {
        "number": 433,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 1 3\") == \"3\"\nassert solution(\"6 2 -5\") == \"3\"\nassert solution(\"3 2 7\") == \"3\"\n\"\"\""
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-1 1 -1 -1\") == \"1\"\nassert solution(\"4\\n-1 -1 -1 -1\") == \"1\"\nassert solution(\"4\\n-1 1 -1 1\") == \"2\"\nassert solution(\"8\\n1 -1 1 -1 1 1 -1 1\") == \"3\"\nassert solution(\"8\\n1 -1 1 -1 1 1 -1 1\") == \"2\"\n\nprint(\"All tests passed.\")\n\"\"\""
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('9\\n8 6 4 2 1 4 7 10 2') == '3'\nassert solution('5\\n-1 -1 -1 -1 -1') == '1'\nassert solution('7\\n-1 -1 4 5 1 2 3') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 2 1 4 7 10 2\") == \"3\"\nassert solution(\"-1 6 -1 2 -1 4 7 -1 2\") == \"3\"\nassert solution(\"-1 -1 -1 -1 -1\") == \"1\"\nassert solution(\"-1 -1 4 5 1 2 3\") == \"2\"\n\n\"\"\"\n\nn = int(input())\narr = [int(i) for i in input().split(\" \")]\n\na = []\nc = 1\n\nfor i in range(n - 1):\n    if arr[i] == -1:\n        c += 1\n    else:\n        a.append(c)\n        c = 1\n\na.append(c)\n\nprint(min(a))\n"
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 -1 2 3 -1 1 1\") == \"2\"\nassert solution(\"4 -1 -1 1 1\") == \"1\"\nassert solution(\"7 -1 -1 4 5 1 2 3\") == \"2\"\nassert solution(\"-1 4 7 10 2\") == \"2\"\nassert solution(\"-1 -1 4 5 1 2 3\") == \"1\""
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"9\\n8 6 4 2 1 4 7 10 2\") == \"3\"\nassert solution(\"9\\n-1 6 -1 2 -1 4 7 -1 2\") == \"3\"\nassert solution(\"5\\n-1 -1 -1 -1 -1\") == \"1\"\nassert solution(\"7\\n-1 -1 4 5 1 2 3\") == \"2\""
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9 8 6 4 2 1 4 7 10 2\") == 3\nassert solution(\"-1 6 -1 2 -1 4 7 -1 2\") == 3\nassert solution(\"-1 -1 -1 -1 -1\") == 1\nassert solution(\"-1 -1 4 5 1 2 3\") == 2\n"
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(    '9\\n8 6 4 2 1 4 7 10 2') == '3\\n'\nassert solution(    '9\\n-1 6 -1 2 -1 4 7 -1 2') == '3\\n'\nassert solution(    '5\\n-1 -1 -1 -1 -1') == '1\\n'\nassert solution(    '7\\n-1 -1 4 5 1 2 3') == '2\\n'\nassert solution(    '9\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1') == '1\\n'\n"
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"9\\n8 6 4 2 1 4 7 10 2\") == \"3\"\nassert solution(\"9\\n-1 6 -1 2 -1 4 7 -1 2\") == \"3\"\nassert solution(\"5\\n-1 -1 -1 -1 -1\") == \"1\"\nassert solution(\"7\\n-1 -1 4 5 1 2 3\") == \"2\""
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''9\n8 6 4 2 1 4 7 10 2''') == '3'\nassert solution('''9\n-1 6 -1 2 -1 4 7 -1 2''') == '3'\nassert solution('''5\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('9\\n8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9\\n-1 6 -1 2 -1 4 7 -1 2') == '3'\nassert solution('5\\n-1 -1 -1 -1 -1') == '1'\nassert solution('7\\n-1 -1 4 5 1 2 3') == '2'\n"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(aabaabaa) == 5\nassert solution(abba) == 4\n"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2 abba\") == \"4\"\nassert solution(\"8 1 aabaabaa\") == \"5\"\n\"\"\"\nimport sys\n\nfrom collections import Counter\n\nsys.stdin = open(\"input.txt\")"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('abba', 2) == 4\nassert solution('aaaa', 1) == 5\nassert solution('aabaabaa', 8) == 5\nassert solution('aabaabaa', 9) == 5\nassert solution('aabaabaa', 10) == 5\n"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"abba\", 2) == \"4\"\nassert solution(\"aabaabaa\", 1) == \"5\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"abba\", 2) == 4\nassert solution(\"aabaabaa\", 1) == 5\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2 aabaabaa\") == \"5\"\nassert solution(\"8 1 aabaabaa\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('abba') == 4\nassert solution('aabaabaa') == 5\n\"\"\"\n\nn, k = [int(i) for i in stdin.split()]\nprint(max(max(len(max(stdin.split(), key=lambda x: len(set(x)) if len(set(x)) <= 2 else -1))), len(max(stdin.split(), key=lambda x: x.count(x[0])))))"
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"abba\", 2) == 4\nassert solution(\"aabaabaa\", 1) == 5\nassert solution(\"aaaa\", 2) == 4\nassert solution(\"aabaabaa\", 2) == 5\nassert solution(\"aaaa\", 1) == 4\n\"\"\""
    },
    {
        "number": 435,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2 abba\") == 4\n\nassert solution(\"8 1 aabaabaa\") == 5\n\n\"\"\""
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"100 50 50\") == \"1 2\"\nassert solution(\"80 60 60\") == \"0\"\nassert solution(\"51 25 99 25\") == \"3 1 2\"\nassert solution(\"51 25\") == \"3 1\"\nassert solution(\"51 25 99 25\") == \"3 1 2\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\np, m = 0, 0\nfor i in range(n):\n    p += a[i]\n    m = max(m, a[i])"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3\\n100 50 50') == '2\\n1 2'\nassert solution('4\\n51 25 99 25') == '3\\n1 2 4'\nassert solution('2\\n6 5') == '1\\n1'\nassert solution('4\\n51 25 99 25') == '3\\n1 2 4'\n\"\"\"\n\nimport itertools\n\nfrom collections import Counter"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n100 50 50\\n\") == \"2\\n1 2\\n\"\nassert solution(\"3\\n100 50 50\\n\") == \"0\\n\"\nassert solution(\"2\\n6 5\\n\") == \"1\\n1\\n\"\nassert solution(\"4\\n51 25 99 25\\n\") == \"3\\n1 2 4\\n\"\n"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('100 50 50') == '2\\n1 2'\nassert solution('6 5') == '1\\n1 2'\nassert solution('80 60 60') == '0'\nassert solution('51 25 99 25') == '3\\n1 2 4'\nassert solution('51 25 99 25 80 60 60') == '2\\n1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"100 50 50\") == \"1 2\"\nassert solution(\"80 60 60\") == \"0\"\nassert solution(\"51 25 99 25\") == \"3 1 2\"\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 50 50\") == \"2\\n1 2\\n\"\nassert solution(\"2\\n6 5\") == \"1\\n1\\n\"\nassert solution(\"4\\n51 25 99 25\") == \"3\\n1 2 4\\n\"\n\"\"\"\nimport sys"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n100 50 50\\n\") == \"2\\n1 2\\n\"\nassert solution(\"3\\n80 60 60\\n\") == \"0\\n\"\nassert solution(\"2\\n6 5\\n\") == \"1\\n1\\n\"\nassert solution(\"4\\n51 25 99 25\\n\") == \"3\\n1 2 4\\n\"\nassert solution(\"4\\n51 25 99 25\\n\") == \"3\\n1 2 4\\n\"\n"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"100 50 50\") == \"2 1\"\nassert solution(\"80 60 60\") == \"0\"\nassert solution(\"51 25 99 25\") == \"3 1 2\"\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4\\n51 25 99 25') == '2\\n1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n100 50 50') == '2\\n1 2'\nassert solution('3\\n100 50 50') == '2\\n1 2'\nassert solution('3\\n80 60 60') == '0'\nassert solution('2\\n6 5') == '1\\n1 2'\nassert solution('4\\n51 25 99 25') == '3\\n1 2 4'\n\"\"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3') == '1.5'\n\nassert solution('5') == '2.4'\n\nassert solution('9') == '3.6'\n\nassert solution('10') == '3.8'"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\") == '1.5'\n\"\"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1.5\"\nassert solution(\"1\") == \"1\"\n\"\"\""
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"1.5\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1.0\"\n\nassert solution(\"10\") == \"1.5\"\n\nassert solution(\"100\") == \"2.0\"\n\nassert solution(\"1000\") == \"2.5\"\n\nassert solution(\"10000\") == \"3.0\""
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('1') == '1.0'\nassert solution('5') == '1.5'\nassert solution('10') == '2.0'\nassert solution('100') == '8.0'\nassert solution('100000') == '0.0'\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5') == '1.5'\nassert solution('10') == '1.1'\nassert solution('100') == '1'\nassert solution('10000') == '0.999999'\nassert solution('100000') == '0.9999999999999998'\n"
    },
    {
        "number": 437,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '1.5'\nassert solution('3') == '1.8'\nassert solution('4') == '2.0'\nassert solution('5') == '2.2'\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4\") == '1 2'\nassert solution(\"5\") == '2 3'\nassert solution(\"6\") == '2 3 4'\nassert solution(\"7\") == '3 4 5'\nassert solution(\"8\") == '3 5 6'\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(5) == 2\nassert solution(9) == 3\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5\\n2 3') == '2\\n2 3'\nassert solution('9\\n3 5 1') == '3\\n3 5 1'\nassert solution('2\\n1 2') == '1\\n2'\n\nassert solution('5\\n2 3') == '2\\n2 3'\nassert solution('9\\n3 5 1') == '3\\n3 5 1'\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3') == '2\\n2 3'\nassert solution('9\\n3 5 1') == '3\\n3 5 1'\n\"\"\"\n\nfrom sys import stdin\n\nN = stdin.readline().rstrip()\n\nN = int(N)\n\n\"\"\"\nmax_num_of_kids = N\nmax_num_of_kids_distinct_kids = N\n\nk = 0\n\nwhile max_num_of_kids_distinct_kids >= max_num_of_kids:\n    max_num_of_kids -= 1\n    k += 1\n    max_num_of_kids_distinct_kids -= k\n\"\"\"\n\nmax_num_of_kids = N\nmax_num_of_kids_distinct_kids = N\n\nk = 0\n\nwhile max_num_of_kids_distinct_kids >= max_num_of_kids:\n    max_num_of_kids -= 1\n    k += 1\n    max_num_of_kids_distinct_kids -= k\n    max_num_of_kids_distinct_kids -= k\n\nk -= 1\n\nk_distinct_kids = []\n\nwhile k > 0:\n    k_distinct_kids.append(k)\n    k -= 1\n\nk_distinct_kids.sort()\n\nprint(k_distinct_kids[0])\nprint(' '.join(str(kid) for kid in k_distinct_kids))\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '2 1'\nassert solution('9') == '3 1 2'\nassert solution('1') == '1'\nassert solution('10') == '2 2'\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\") == 2\nassert solution(\"9\") == 3\nassert solution(\"2\") == 1\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3') == '2\\n2 3'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3\") == \"2\\n2 3\"\nassert solution(\"9\\n3 5 1\") == \"3\\n3 5 1\"\nassert solution(\"2\\n1 2\") == \"1\\n2\"\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"9\") == \"3\"\nassert solution(\"2\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 438,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\") == 2\nassert solution(\"9\") == 3\n\"\"\""
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 42\") == \"10\"\nassert solution(\"1 58\") == \"0\"\nassert solution(\"98765432 23456789\") == \"23456789\"\n\"\"\"\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4\\n42') == '10'\nassert solution('1\\n58') == '0'\nassert solution('98765432\\n23456789') == '23456789'"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4\\n42\") == \"10\"\nassert solution(\"1\\n58\") == \"0\"\nassert solution(\"98765432\\n23456789\") == \"23456789\""
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"10\"\nassert solution(\"1 58\") == \"0\"\n\"\"\"\n\nimport sys\nimport string\n\nn = int(sys.stdin.readline().rstrip())\nm = int(sys.stdin.readline().rstrip())\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('42', '4') == '10'\nassert solution('1', '58') == '0'\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 42') == '10'\nassert solution('1 58') == '0'\nassert solution('98765432 23456789') == '23456789'\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 42') == '10'\nassert solution('1 58') == '0'\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 42\") == \"10\"\nassert solution(\"1 58\") == \"0\"\nassert solution(\"98765432 23456789\") == \"23456789\"\n\"\"\""
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 42\") == \"10\"\nassert solution(\"1 58\") == \"0\"\nassert solution(\"98765432 23456789\") == \"23456789\"\n"
    },
    {
        "number": 439,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(4) == 10\nassert solution(5) == 2\nassert solution(6) == 18\nassert solution(7) == 34\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('5weird') == 'werd'\nassert solution('4word') == 'word'\nassert solution('5aaeaa') == 'aaeaa'"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 weriD\") == \"werd\"\nassert solution(\"4 word\") == \"word\"\nassert solution(\"5 aaEaa\") == \"aaeaa\"\n\"\"\""
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\", \"weird\") == \"werd\"\nassert solution(\"4\", \"word\") == \"word\"\nassert solution(\"5\", \"aaeaa\") == \"aaeaa\"\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\nweird\") == \"werd\"\nassert solution(\"4\\nword\") == \"word\"\nassert solution(\"5\\naaeee\") == \"aa\"\nassert solution(\"5\\nweeee\") == \"we\"\nassert solution(\"5\\naeewe\") == \"ae\"\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4', 'word') == 'word'\nassert solution('5', 'aaeaa') == 'aaeaa'\nassert solution('5', 'weird') == 'werd'\nassert solution('4', 'correct') == 'correct'\nassert solution('5', 'a') == 'a'\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\nweird\") == \"werd\"\nassert solution(\"4\\nword\") == \"word\"\nassert solution(\"5\\naaeaa\") == \"aaeaa\"\nassert solution(\"5\\nshangyun\") == \"shangyun\"\nassert solution(\"4\\nshangyun\") == \"shangyun\"\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 weirD') == 'werd'\nassert solution('4 word') == 'word'\nassert solution('5 aeaa') == 'aaeaa'\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\nweird') == 'werd'\nassert solution('4\\nword') == 'word'\nassert solution('5\\naaeee') == 'aa'\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5', 'weird') == 'werd'\nassert solution('4', 'word') == 'word'\nassert solution('5', 'aaeaa') == 'a'\nassert solution('5', 'qwerqwer') == 'qwerqwer'\n"
    },
    {
        "number": 440,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5', 'weird') == 'werd'\nassert solution('4', 'word') == 'word'\nassert solution('5', 'aaeaa') == 'a'\nassert solution('5', 'aeaa') == 'aeaa'\nassert solution('5', 'aae') == 'ae'\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('*.AB*') == '2'\nassert solution('*...*') == '2'\nassert solution('*...**') == '3'\nassert solution('**...*') == '3'\nassert solution('**...**') == '0'\n\"\"\"\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('*...*') == '2'\nassert solution('*...*.**') == '4'\nassert solution('***.***.***') == '7'\n\"\"\""
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('*.AB*') == '2'\nassert solution('*.*.**.*.*.*') == '7'\nassert solution('*.*.*.*.*.*.*') == '0'\nassert solution('*A*.*B*.*') == '3'"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\".*...\") == \"4\"\nassert solution(\"***\") == \"0\"\nassert solution(\"*.AB*\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"\".join([\"*\" for i in range(10)])) == '0'\nassert solution(\"\".join(['.' for i in range(10)])) == '0'\nassert solution(\"\".join(['*' for i in range(10)])) == '9'\nassert solution(\"\".join(['.' for i in range(10)])) == '0'\nassert solution(\"\".join(['*' for i in range(10)])) == '9'\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"*....*\") == \"0\"\nassert solution(\"*.AB*\") == \"2\"\nassert solution(\"*BAB*B\") == \"4\"\nassert solution(\"*....*.*\") == \"7\"\n\"\"\""
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"*...*\") == 2\nassert solution(\"**....*\") == 3\nassert solution(\"*.*.*\") == 0\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"*....*.**.**\") == \"6\"\nassert solution(\"*.*.*.*.*\") == \"4\"\nassert solution(\"*.*.*.*\") == \"3\"\nassert solution(\"*...*...*\") == \"2\"\nassert solution(\"*...*\") == \"1\"\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n*...*\") == \"2\"\nassert solution(\"6 2 3\\n.*....**.*.\\n\") == \"4\"\nassert solution(\"3 2 3\\n***\\n\") == \"0\"\nassert solution(\"11 3 10\\n.*....**.*.\\n\") == \"7\"\nassert solution(\"4 5 6\\n*.*.*.*.*.\\n\") == \"10\"\n"
    },
    {
        "number": 441,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 1 1\\n*...*') == '2'\nassert solution('6 2 3\\n*...*.\\n*...*') == '4'\nassert solution('11 3 10\\n.*....**.*.\\n') == '7'\nassert solution('3 2 3\\n***') == '0'\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"19\") == \"1 8\"\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('19') == '1 8'\nassert solution('16') == 'NO'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"19\") == \"1 8\"\nassert solution(\"16\") == \"NO\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 'NO'\nassert solution('19') == '1 8'\n\nprint(solution(input()))\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"19\") == \"1 8\"\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"19\") == \"1 8\"\nassert solution(\"16\") == \"NO\""
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"19\") == \"1 8\"\n\n\"\"\"\n\nimport numpy as np"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('16') == 'NO'\nassert solution('19') == '1 8'\n\n\"\"\"\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('19') == '1 8'\nassert solution('16') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 442,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"19\") == \"1 8\"\nprint(solution(\"19\"))\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(['3', '1 2 1']) == '2 1', 'wrong result'\nassert solution(['3', '1 2 1']) == '2 1', 'wrong result'\nassert solution(['1', '1']) == '-1', 'wrong result'\nassert solution(['1', '2']) == '-1', 'wrong result'\nassert solution(['1', '3']) == '1 2', 'wrong result'\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 1\\n\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\\n\") == \"-1\"\nassert solution(\"1\\n10\\n\") == \"-1\"\n\n\"\"\"\n\nfrom itertools import permutations"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\nassert solution(\"3\\n2 1 2\") == \"1\\n2\"\nassert solution(\"1\\n1\") == \"1\\n1\"\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\n"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 1 2') == '2 1'\nassert solution('1 2 1') == '2 1'\nassert solution('2 5 1') == '-1'\nassert solution('1 10') == '-1'\n\n'''"
    },
    {
        "number": 443,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 1\") == \"2\\n1 2\"\nassert solution(\"2\\n5 5\") == \"-1\"\nassert solution(\"1\\n10\") == \"-1\"\nassert solution(\"1\\n2\") == \"-1\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n3\\n2 1\"\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2 2\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\n\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2 2'\nassert solution('27') == '3 9 9'\nassert solution('123') == '1 2 3'\nassert solution('999') == '9 9 9'\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2 2'\nassert solution('27') == '3 9 9'\nassert solution('1000') == '10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"1000\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\n\n\"\"\"\n\nn = int(input().strip())\n\ncount_digits = 1\nwhile n > 9:\n    n -= 9\n    count_digits += 1\n\nprint(count_digits)\nprint(' '.join(list(map(str, [i for i in range(1, count_digits + 1)] * count_digits))[:n]))\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"10\") == \"5 5\"\n\nassert solution(\"18\") == \"3 9 6\"\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"999\") == \"9 9 9\"\n"
    },
    {
        "number": 444,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"1 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"10 10 10 10 10 10\"\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 1\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"83 14\") == \"2\"\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2 3\") == 3\nassert solution(\"7 7 7 7\") == 7\nassert solution(\"4 2 4 3\") == 3\nassert solution(\"4 3 2\") == 3\nassert solution(\"4 3 1\") == 3\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2', 'Oops'\nassert solution('2 2') == '1', 'Oops'\nassert solution('3 2 1') == '3', 'Oops'\nassert solution('2 83 14') == '2', 'Oops'\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n3\n2\n\"\"\") == \"3\"\nassert solution(\"\"\"2\n2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n2 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n1 1 1\n\"\"\") == \"1 1 1\"\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2 1 1\") == \"3\"\nassert solution(\"83 14\") == \"2\"\nassert solution(\"2 1 1\") == \"3\""
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 3\") == \"2\"\n\nassert solution(\"2 2\\n2 2\") == \"1\"\n\nassert solution(\"3 2 1 1\\n2 3\") == \"3\"\n\nassert solution(\"83 14\\n2 1 1\") == \"3\"\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''2\n3\n1\n2''') == '3 2'\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 2\") == \"2\"\nassert solution(\"3\\n2 1 1\") == \"3\"\nassert solution(\"2 1 1\\n1 1 2\") == \"3\"\n\nassert solution(\"2 2\\n2 2\") == \"1\"\nassert solution(\"2 2\\n2 3\") == \"1\"\n"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n83 14\") == \"2\\n14 83\"\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\n\nd = {}\n\nfor i in range(1, len(arr)+1):\n    d[i] = 0\n\nfor i in range(len(arr)):\n    for j in range(i+1, len(arr)+1):\n        if gcd(arr[i], arr[j]) > 1:\n            d[j] += 1\n\nk = max(d, key=d.get)\n\nl = d[k]\n\nprint(k)\nprint(\" \".join([str(i) for i in arr[:k]]))"
    },
    {
        "number": 445,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"83 14\") == \"2\"\nassert solution(\"2 1 1\") == \"3\"\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\n\nassert solution('992') == '496'\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"11111_2\") == 496\n\"\"\""
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"992\") == \"496\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\nprint('The local tests are done. Try it online!')"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\n\nprint(solution(stdin.strip()))\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3') == 1\n\"\"\"\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('992') == '496'\nprint('All tests passed.')\n\n\n\n------------\n"
    },
    {
        "number": 446,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"992\") == 496\n\"\"\""
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"19 7\") == \"6\"\nassert solution(\"10 100\") == \"6\"\nassert solution(\"9 99\") == \"4\"\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('2 6\\n10\\n99') == '8'\nassert solution('2 0\\n1\\n9') == '4'\nassert solution('19 7\\n1000\\n9999') == '6'\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 6\\n10\\n99') == '8'\nassert solution('2 0\\n1\\n9') == '4'\nassert solution('19 7\\n1000\\n9999') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 6\\n10\\n99') == '8'\nassert solution('19 7\\n1000\\n9999') == '6'"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\n'2 6'\n) == '8'\n\nassert solution(\n'19 7'\n) == '6'\n\nassert solution(\n'2 0'\n) == '4'\n\nassert solution(\n'19 7'\n) == '6'\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''2 6\n10\n99''') == '8'\n\nassert solution('''2 0\n1\n9''') == '4'\n\nassert solution('''19 7\n1000\n9999''') == '6'"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 6\\n10\\n99\") == \"8\"\n\nassert solution(\"2 0\\n1\\n9\") == \"4\"\n\nassert solution(\"19 7\\n1000\\n9999\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 6\\n10\\n99\") == \"8\"\nassert solution(\"2 0\\n1\\n9\") == \"4\"\nassert solution(\"19 7\\n1000\\n9999\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 6\") == \"8\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 447,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('2 6\\n10\\n99') == '8\\n'\nassert solution('19 7\\n1000\\n9999') == '6\\n'\nassert solution('2 0\\n1\\n9') == '4\\n'\n"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3 1 4 2\") == \"4\"\nassert solution(\"4 3\\n1 3 1 4 2\") == \"3\"\nassert solution(\"6 4\\n1 1 2 2 3 3\") == \"6\"\nassert solution(\"5 2\\n1 3 1 4 2\") == \"4\"\nassert solution(\"6 4\\n1 1 2 2 3 3\") == \"6\"\n"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 3 1 4 2\") == \"4\"\nassert solution(\"6 4\\n1 1 2 2 3 3\") == \"6\"\n\"\"\""
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 3 1 4 2\") == 4\n\"\"\""
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4 2') == '4'\nassert solution('6 4') == '6'\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 3 1 4 2\") == '4'\nassert solution(\"6 4\\n1 1 2 2 3 3\") == '6'\nassert solution(\"7 7\\n1 1 1 1 1 1 1\") == '7'\nassert solution(\"1 1\\n1\") == '1'\nassert solution(\"5 2\\n1 1 1 1 1\") == '5'\n"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 3 1 4 2\") == '4'\nassert solution(\"6 4\\n1 1 2 2 3 3\") == '6'\nassert solution(\"7 6\\n1 1 2 2 3 3 4 4\") == '7'\nassert solution(\"2 3\\n1 2\\n1 2\") == '1'\nassert solution(\"8 9\\n1 1 1 1 1 1 1 1 1\") == '1'\n\n\"\"\""
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 3 1 4 2') == '4'\n\n\"\"\""
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 2\\n1 3 1 4 2') == '4'\nassert solution('6 4\\n1 1 2 2 3 3') == '6'\n\"\"\"\n"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3 1 4 2\") == \"4\"\nassert solution(\"4 3\\n1 2 3 4\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 448,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('4 2') == 4\n\nassert solution('6 4') == 6\n\n\"\"\""
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('125') == 3\nassert solution('43') == 5\nassert solution('1000000000') == 1000000000\n\"\"\"\n\n\"\"\"\n\u4ee5\u5217\u8868\u7684\u957f\u5ea6\u8fdb\u884c\u5faa\u73af\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5012\u5e8f\u5217\u51fa\uff0c\u4e4b\u540e\u5c31\u662f\u7528\u53e6\u4e00\u4e2a\u5217\u8868\u7684\u6a21\u677f\u91cd\u590d\uff0c\u5176\u4e2di\u548cj\u5747\u662f\u8d77\u59cb\u503c\n\"\"\""
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\"\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\"\n\"\"\"\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\n\"\"\"\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\"\n\"\"\""
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\"\n\n\"\"\""
    },
    {
        "number": 449,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\""
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'"
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n\n\n\nimport sys"
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == 4\nassert solution(\"2 1\") == 0\nassert solution(\"4 1\") == 6\nassert solution(\"7 4\") == 328\n\"\"\""
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n\"\"\""
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\""
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n\"\"\""
    },
    {
        "number": 450,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 1\") == '6'\nassert solution(\"7 4\") == '328'\nassert solution(\"1 0\") == '1'\nassert solution(\"2 1\") == '0'\n"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n4 3 4 1 6\\nRROWW\") == \"11\"\nassert solution(\"5 2\\n10 20 14 20 11\\nRRRRR\") == \"-1\"\nassert solution(\"11 5\\n5 6 3 2 3 4 7 5 4 5 6\\nRWOORWORROW\") == \"28\"\n\"\"\""
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3 4 1 6\") == \"11\"\nassert solution(\"5 2 3 2 3 4 7 5 4 5 6\") == \"-1\"\nassert solution(\"5 6 3 2 3 4 7 5 4 5 6\") == \"28\"\nassert solution(\"11 5\") == \"28\"\n\"\"\"\n"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n4 3 4 1 6\\nRROWW\") == \"11\"\nassert solution(\"5 2\\n10 20 14 20 11\\nRRRRR\") == \"-1\"\nassert solution(\"11 5\\n5 6 3 2 3 4 7 5 4 5 6\\nRWOORWORROW\") == \"28\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3 4 1 6\") == \"11\"\nassert solution(\"5 2 3 2 3 4 7 5 4 5 6\") == \"-1\"\nassert solution(\"5 3\") == \"11\"\nassert solution(\"5 2\") == \"11\"\nassert solution(\"5 2 3 2 3 4 7 5 4 5 6\") == \"-1\"\n"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n4 3 4 1 6\\nRROWW\") == \"11\"\nassert solution(\"5 2\\n10 20 14 20 11\\nRRRRR\") == \"-1\"\nassert solution(\"11 5\\n5 6 3 2 3 4 7 5 4 5 6\\nRWOORWORROW\") == \"28\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5 6 1 7\") == \"7\"\nassert solution(\"5 2 3 4 7 5 4 5 6\") == \"10\"\nassert solution(\"10 20 14 20 11\") == \"11\"\nassert solution(\"5 6 3 2 3 4 7 5 4 5 6\") == \"-1\"\nassert solution(\"11 5\") == \"11\"\n\"\"\"\n\nimport re\nimport sys\n\nregex_pattern = r\"^(\\d+) ([\\w]+)$\""
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5 6\", \"RRRRR\") == \"11\"\n\nassert solution(\"5 2\", \"10 20 14 20 11\") == \"-1\"\nassert solution(\"5 3\", \"5 6 3 2 3 4 7 5 4 5 6\") == \"28\"\nassert solution(\"11 5\", \"5 6 3 2 3 4 7 5 4 5 6\") == \"28\"\n\nprint(\"Success\")\n"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n4 3 4 1 6\\nRRRRR\\n\") == \"11\"\nassert solution(\"5 2\\n10 20 14 20 11\\nRRRRR\\n\") == \"-1\"\nassert solution(\"11 5\\n5 6 3 2 3 4 7 5 4 5 6\\nRWOORWORROW\\n\") == \"28\"\n\"\"\"\n\n\nfrom collections import Counter\nfrom itertools import combinations"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('') == ''\n\nassert solution('WWWOORRWWO') == '11'\nassert solution('WWWWRWWWRWWWO') == '-1'\nassert solution('WWWWRRWWWOO') == '-1'\nassert solution('WWWRWWWRWWOO') == '-1'\n"
    },
    {
        "number": 451,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n4 3 4 1 6\\nRRRRR\") == \"11\"\nassert solution(\"5 2\\n10 20 14 20 11\\nRRRRR\") == \"-1\"\nassert solution(\"11 5\\n5 6 3 2 3 4 7 5 4 5 6\\nRWOORWORROW\") == \"28\"\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\nr = [int(x) for x in sys.stdin.readline().split()]\nw, o, r = 0, 0, 0\nfor i in r:\n    if i == 'W':\n        w += 1\n    elif i == 'O':\n        o += 1\n    elif i == 'R':\n        r += 1"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4 2 3 1') == 'NO'\n\"\"\""
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"9 4\\n2\\n2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 3\") == \"NO\"\n\"\"\"\nimport sys\nimport math\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"9 4\\n2\\n2 4\") == 'YES'\nassert solution(\"9 4\\n3\\n1 2 4\") == 'NO'\n\n'''"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"9 4\\n2\\n2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 3\") == \"NO\"\nassert solution(\"9 4\\n3\\n1 2 3 5\") == \"NO\"\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"7 12\") == \"NO\"\nassert solution(\"15 96\") == \"NO\"\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"9 4\") == \"YES\"\nassert solution(\"9 4\") == \"YES\"\nassert solution(\"9 4\") == \"YES\"\nassert solution(\"9 4\") == \"YES\"\nassert solution(\"9 4\") == \"YES\"\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('9 4 2 2 4') == 'NO'\nassert solution('9 4 3 2 4') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 9\\n3\\n1 2 4') == 'YES'\nassert solution('4 9\\n3\\n1 2 3') == 'NO'\nassert solution('4 9\\n3\\n1 2') == 'NO'\nassert solution('4 9\\n3\\n1 2 3 4') == 'NO'\nassert solution('9 4\\n2\\n2 4') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"9 4\\n2\\n2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 4\") == \"YES\"\nassert solution(\"9 4\\n3\\n1 2 3\") == \"NO\"\n"
    },
    {
        "number": 452,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('9 4 2 1') == 'YES'\nassert solution('9 4 3 1') == 'NO'\nassert solution('9 4 3 2 1') == 'NO'\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|+|=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||||||\") == \"Impossible\"\nassert solution(\"||||+||||||\") == \"Impossible\"\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"|||+|=|||||\") == \"|||+|=|||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"||||+||=||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('||+|=|||||') == '|||+|=||||'\nassert solution('||||+||=||||||') == 'Impossible'\nassert solution('|+|=||||||') == 'Impossible'\nassert solution('||||+||=||||||') == 'Impossible'\n\"\"\"\nimport sys"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('||||+||=||||||') == 'Impossible'\nassert solution('|+|=||||||') == 'Impossible'\nassert solution('||||+||=||||||') == '||||+||=||||||'\nassert solution('|||||+||=||||||') == 'Impossible'\nassert solution('||||+||=||||||') == '||||+||=||||||'\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"|||||+||=||||||\") == \"Impossible\"\nassert solution(\"||+|=|||||\") == \"|||+|=|||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(stdin=\"||+|=|||||\") == stdout\nassert solution(stdin=\"|||||+||=||\") == stdout\nassert solution(stdin=\"||||+||=||||||\") == stdout\nassert solution(stdin=\"|+|=||||||\") == stdout\n"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|||||+||=||||||\") == \"Impossible\"\nassert solution(\"||||||||||||+|||=|||||||\") == \"Impossible\"\nassert solution(\"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
    },
    {
        "number": 453,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"|+|=||||||\") == \"Impossible\"\nassert solution(\"||||+||=||||||\") == \"Impossible\"\nassert solution(\"|||||||||||||+|||=||||||||||||\") == \"Impossible\"\nassert solution(\"||||||||||||||||+|||=||||||||||||\") == \"Impossible\"\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\nodds = (k * (k + 1)) // 2\nodds = odds % (10 ** 9 + 7)\nprint(odds)\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"10 3\") == \"12\"\n\"\"\"\nimport sys\n\n__author__ = 'Danyang'\n\n\nclass Solution:\n    def __init__(self):\n        self.prime_dict = {1: 1}  # for negative\n\n    def is_prime(self, num):\n        if num in self.prime_dict:\n            return True\n        else:\n            return False\n\n    def solve(self, cipher):\n        \"\"\"\n        http://en.wikipedia.org/wiki/Prime_decomposition\n        :param cipher: String\n        :return: String\n        \"\"\"\n        n, k = cipher.split()\n        k = int(k)\n\n        prime_list = [i for i in range(2, int(n) + 1) if self.is_prime(i)]\n        # for i in range(1, int(n)+1):\n        #    if i not in prime_list:\n        #        prime_list.append(i)\n\n        # brute force\n        # initialize the array of length n\n        prime_list = [0] * int(n)\n        for prime in prime_list:\n            if prime!= 0:\n                prime_list[prime-1] = 1\n\n        k_sum = 0\n        for i in range(int(n)):\n            if k_sum < k and prime_list[i] == 0:\n                k_sum += 1\n            else:\n                break\n\n        if k_sum == k:\n            return n - k + 1\n        else:\n            return n - k_sum\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 2') == '2'\n\nYou can solve this problem by enumerating all permutations and testing their oddness for each position.\nWrite a program that takes the number of integers n and the oddness k as inputs and then outputs the number of permutations that have an oddness of k.\n\nFor example, if n = 4 and k = 2, the program should output:\nThere are 10 permutations of the integers {1,2,3,4} of oddness 2, modulo 10^9+7.\n\nhttps://www.codewars.com/kata/find-the-number-of-permutations-of-integer-divisibility/train/python\n\"\"\"\n\nn = int(input(\"\"))\nk = int(input(\"\"))"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == 2\n\"\"\"\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().strip().split())\nans = 0\nfor i in range(1, n + 1):\n    ans += (k == abs(i - i % 2))\n\nprint(ans % (10 ** 9 + 7))\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == 2\nassert solution(\"5 3\") == 4\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '6'\nassert solution('3 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\n\"\"\""
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"2\"\n\"\"\"\nfrom math import factorial\n\nn, k = list(map(int, input().split()))\nprint(factorial(n) // (factorial(k) * factorial(n - k)))\n"
    },
    {
        "number": 454,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 2\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\"\n\"\"\"\n\nfrom collections import defaultdict\n\nclass Joint:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def __str__(self):\n        return '{} {}'.format(self.x, self.y)\n    def __repr__(self):\n        return 'Joint(x={}, y={})'.format(self.x, self.y)\n    def __eq__(self, other):\n        return self.x == other.x and self.y == other.y\n    def __hash__(self):\n        return hash(tuple(self.x, self.y))\n\nclass Section:\n    def __init__(self, joint_1, joint_2, mode):\n        self.joint_1 = joint_1\n        self.joint_2 = joint_2\n        self.mode = mode\n    def __str__(self):\n        return '({}, {}) {}'.format(self.joint_1, self.joint_2, self.mode)\n    def __repr__(self):\n        return 'Section(joint_1={}, joint_2={}, mode={})'.format(self.joint_1, self.joint_2, self.mode)\n    def __eq__(self, other):\n        return self.joint_1 == other.joint_1 and self.joint_2 == other.joint_2 and self.mode == other.mode\n    def __hash__(self):\n        return hash((self.joint_1, self.joint_2, self.mode))"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\nassert solution(\"5\\n-1 0\\n0 3\\n2 -1\\n0 0\\n2 -1\\n0 -3\") == \"1\\n1 2\\nDR\\nUU\"\n\n\"\"\""
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\""
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\n"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\nassert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\n\"\"\"\n"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n-1 0\\n0 3\\n2 -1') == '2\\n1 2\\nRL\\nUU'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0\\n0 3\\n2 -1\\n\") == \"2\\n1 2\\nRL\\nUU\\nDR\\n\"\n\"\"\""
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3\\n1 0\\n0 3\\n2 -1') == '2\\n1 2\\nRL'\n\"\"\""
    },
    {
        "number": 455,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n-1 0\\n0 3\\n2 -1') == '2\\n1 2\\nRL'\nassert solution('3\\n-1 0\\n0 3\\n2 -1') == '2\\n1 2\\nRL'\n\"\"\""
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7\\nogogob\") == \"a***b\"\nassert solution(\"13\\nogogmgogogogo\") == \"***gmg***\"\nassert solution(\"9\\nogoogoogo\") == \"*********\"\n\"\"\""
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"ogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\n\nassert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\n"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\nassert solution('ogogo') == '***gmg***'\n"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\n\n\"\"\"\n"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\n"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 aogogob\") == \"a***b\"\nassert solution(\"13 ogogmgogogogo\") == \"***gmg***\"\nassert solution(\"9 ogogo\") == \"*********\"\n\"\"\"\nimport re"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"aogogob\") == 'a***b'\nassert solution(\"ogogmgogogogo\") == '***gmg***'\nassert solution(\"ogoogoogo\") == '*********'"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''7\naogogob''') == 'a***b'\nassert solution('''13\nogogmgogogogo''') == '***gmg***'\nassert solution('''9\nogoogoogo''') == '*********'\nassert solution('''1\na''') == 'a'\nassert solution('''2\nab''') == 'a***b'\n"
    },
    {
        "number": 456,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"ogogomgogomgogo\") == \"***gmg***\"\n\nassert solution(\"aogogob\") == \"a***b\"\n\nassert solution(\"ogogomgogomgogo\") == \"***gmg***\"\n\nassert solution(\"aogogomgogomgogo\") == \"a***b\"\n\n\"\"\"\n\n\nfrom typing import List, Dict, Set\n"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"20190929 1605\") == \"363165664\"\n\"\"\"\n\nx, n = [int(i) for i in input().split(\" \")]"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"20190929 1605\") == \"363165664\"\nassert solution(\"947 987654321987654321\") == \"593574252\"\nassert solution(\"508528303568234\") == \"405166360\"\nassert solution(\"7639079609876543217654321\") == \"13131044022818961689\"\n\"\"\"\n\nx, n = [int(c) for c in input().split()]\nmod = 10 ** 9 + 7\nans = 1\n\nfor i in range(n):\n    ans = (ans * pow(x, i + 1, mod)) % mod\nprint(ans)"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"20190929 1605\") == \"363165664\"\n\nassert solution(\"947 987654321987654321\") == \"593574252\"\n"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"10 2\") == \"2\"\n\"\"\""
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"20190929 1605\") == \"363165664\"\n"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('20190929 1605') == '593574252'\n\"\"\"\n"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 10\") == \"9009\"\nassert solution(\"3 5\") == \"147\"\nassert solution(\"4 3\") == \"30\"\nassert solution(\"912 987654321987654321\") == \"953712\""
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"20190929 1605\") == \"363165664\"\nassert solution(\"947 987654321987654321\") == \"593574252\"\n"
    },
    {
        "number": 457,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"20190929 1605\") == \"593574252\"\n\nassert solution(\"947 987654321987654321\") == \"593574252\"\n\n\n\n###"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\nprint('Success')\n"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\n\nprint(solution(\"3 2 8\"))\nprint(solution(\"1 2 -18\"))\n\n---\n\"\"\""
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2 2 -1') == '4\\n1 31 337 967'\nprint('Test PASSED')\n"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\n\n\"\"\""
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\nassert solution(\"2 2 -1\") == \"4\"\n\nprint(\"Success!\")\n"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\nassert solution(\"2 2 -1\") == \"4\"\n\nprint(solution('3 2 8'))\nprint(solution('1 2 -18'))\nprint(solution('2 2 -1'))\n"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('\\n') == 0\nassert solution('2 2 -1\\n') == 4\nassert solution('2 2 -1\\n') == 4\nassert solution('2 2 -1\\n') == 4\n"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\nassert solution(\"2 2 -1\") == \"4\"\nprint('Success')\n\n-----Test run-----\n\n-----Code-----\n\nimport sys\nimport math"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 2 -18') == '0'\nassert solution('1 2 -1') == '4'\nassert solution('2 2 -1') == '4'\nassert solution('2 2 3') == '0'\n\n------\n\na = int(input())\nb = int(input())\nc = int(input())\n\nx = b**a + c\nprint(len([y for y in range(1, x+1) if len(list(str(y))) == a and sum(list(map(int,list(str(y))))) == b]))\n\n'''\n\n\na, b, c = map(int, input().split())"
    },
    {
        "number": 458,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\nassert solution(\"2 2 -1\") == \"4\"\n\nsolution(3 2 8)\nsolution(1 2 -18)\nsolution(2 2 -1)"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == \"NO\"\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == \"YES\"\nassert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == \"NO\"\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == \"YES\"\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == 'NO'\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\n\n\"\"\"\n\nstdin = input()\n\nb = [int(x) for x in stdin.split()]\n\nfor i in range(1, len(b) + 1):\n    if b.count(i)!= 4:\n        print('NO')\n        exit()\n\nprint('YES')\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nstdin = \"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\"\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) == \"YES\"\nassert solution(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2) == \"YES\"\nassert solution(1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2) == \"YES\"\nassert solution(1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2) == \"YES\"\nassert solution(1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2) == \"YES\"\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\n\n\n\"\"\"\n\nfrom collections import Counter\nfrom typing import List"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == 'NO'\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == 'YES'\n\n\n\n\n\n'''\n"
    },
    {
        "number": 459,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == \"NO\"\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"24\"\nassert solution(\"101 6800 6500\") == \"0\"\nassert solution(\"329 19913 19900\") == \"8\"\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"24\"\nassert solution(\"101 6800 6500\") == \"0\"\nassert solution(\"329 19913 19900\") == \"8\"\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"24\"\nassert solution(\"101 6800 6500\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"24\"\nassert solution(\"329 19913 19900\") == \"8\"\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n\"\"\""
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n\nprint(solution(input()))\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"239 10880 9889\") == '0'\nassert solution(\"26 7258 6123\") == '2'\nassert solution(\"493 8000 8000\") == '24'\nassert solution(\"329 19913 19900\") == '8'\n\n\"\"\"\n\nfrom itertools import accumulate"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\n\"239 10880 9889\"\n) == \"0\"\nassert solution(\n\"26 7258 6123\"\n) == \"2\"\nassert solution(\n\"493 8000 8000\"\n) == \"24\"\nassert solution(\n\"329 19913 19900\"\n) == \"8\"\n\n\n\"\"\"\n\nimport re\nfrom functools import reduce\n\npattern = r'^(\\d+)\\s+(\\d+)\\s+(\\d+)$'\nmatches = re.findall(pattern, stdin, re.MULTILINE)\n\np, x, y = map(int, matches[0])\n\nresult = 0\n\nwhile p < x:\n    result += 1\n    if result % 4 == 0:\n        p += 1\n    else:\n        p -= 1\n\nprint(result + (x - p) // 96)\n"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n3\\n1\\n\") == \"3\"\nassert solution(\"1\\n2\\n3\\n5\\n\") == \"0\""
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2\\n3\\n1\\n\") == \"3\"\n\nassert solution(\"1\\n2\\n3\\n5\\n\") == \"0\"\n\nassert solution(\"7\\n3\\n6\\n8\\n\") == \"6\"\n\nassert solution(\"7\\n1\\n6\\n8\\n\") == \"2\"\n\nassert solution(\"4\\n2\\n2\\n3\\n\") == \"4\""
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2\\n3\\n1\") == \"3\"\n\"\"\"\nimport sys\nimport os\n\nfrom io import StringIO\n\ntest_input_one = \"\"\"\n3\n2\n3\n1\n\"\"\"\n\ntest_input_two = \"\"\"\n1\n2\n3\n5\n\"\"\"\n\nsys.stdin = StringIO(test_input_one)\n"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n3\\n1\") == '3'\nassert solution(\"1\\n2\\n3\\n5\") == '0'"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3\\n2\\n3\\n1') == '3'\nassert solution('1\\n2\\n3\\n5') == '0'"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('3\\n2\\n3\\n1\\n') == '3'\nassert solution('1\\n2\\n3\\n5\\n') == '0'\n\n\"\"\"\n\nn = int(input())\na = int(input())\nb = int(input())\nc = int(input())\n\ntotal = a + b + c"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(test_data) == test_result\nprint(solution(input))\n"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n3\\n1\") == '3'\n\n-----Problem-----\n\nYou are given the number of visits of students in the park and the distance to enter and exit.\n\nThe number of students is always strictly greater than 1.\n\nEach student leaves the park after a number of days, possibly after multiple leaves.\n\nThe distance between two parks is always greater than 0.\n\nIn each park there are at least two students who enter the park before others and leave it after some time.\n\nEvery student leaves the park exactly after another student leaves the park.\n\nThe number of students is always greater than 1.\n\nYou are asked to find out if there is a possibility to make the students wait in the park after their arrival, such that the total number of students stays the same.\n\nInput\nThe first line of the input contains the number of visits of students.\n\nThe second line contains the distance between two parks.\n\nThe third line contains the number of days after which each student leaves the park.\n\nOutput\nPrint \"YES\" if the students can wait, and \"NO\" otherwise.\n\nConstraints\n1\u2264N\u226410^5\n0\u2264D\u226410^9\n1\u2264K\u226410^5\n1\u2264L\u226410^5\nthe number of students is always strictly greater than 1\nthe distance between two parks is always greater than 0\nthe number of students is always greater than 1\nThe number of students is always greater than 1\nThe number of students is always greater than 1\nthe number of students is always greater than 1\n\nExample solution:"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4\\n2\\n3\\n1\\n') == '3'\n\"\"\"\nimport sys"
    },
    {
        "number": 461,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3\\n2\\n3\\n1') == '3'\nassert solution('1\\n2\\n3\\n5') == '0'\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 1 4\") == '6'\nassert solution(\"30 20 10\") == '20'\nassert solution(\"1 10 20 30\") == '0'\nassert solution(\"1 10 20 30 1 2 3 4 5 6\") == '16'\nassert solution(\"1 10 20 30 1 2 3 4 5 6 7\") == '22'\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('7 1 4') == '3'\nassert solution('30 20 10') == '20'\n\"\"\"\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"7 1 4\") == 6\nassert solution(\"30 20 10\") == 20\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\"\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"7 1 4\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"7 1 4\") == 6\nassert solution(\"30 20 10\") == 20\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\"\n\"\"\"\nfrom __future__ import annotations\nfrom collections import deque\nfrom math import inf\nfrom typing import List, Tuple\n\nINF = 10 ** 18\ndx = [-1, 0, 1, 0]\ndy = [0, -1, 0, 1]\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(expected_result)\n\na, b, c = map(int, input().split())\nprint(a + b + c - max(a, b, c))\n"
    },
    {
        "number": 462,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7 1 4\") == 6\nassert solution(\"30 20 10\") == 20\nprint('Test pass.')\n"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 3 7\n''') == '1'\n\nassert solution('''2 228\n1 1\n''') == '0'\n\nassert solution('''3 7\n1 2 3\n''') == '-1'\n\n\"\"\"\n\nn, x = list(map(int, input().split(' ')))\nl = list(map(int, input().split(' ')))\n\ncount = 0\nfor i in range(len(l)):\n    for j in range(i + 1, len(l)):\n        if l[i] & x == l[j] & x:\n            count += 1\n            break"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('3 7') == '-1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 7') == '1'\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_1(self):\n        assert solution('4 3') == '-1'\n\n    def test_2(self):\n        assert solution('2 228') == '0'\n\n    def test_3(self):\n        "
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 7\") == \"1\"\nassert solution(\"2 228\\n1 1\") == \"0\"\nassert solution(\"3 7\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2 228\\n1 1\") == '0'\nassert solution(\"3 7\\n1 2 3\") == '-1'\nassert solution(\"4 3\\n1 2 3 7\") == '1'\n\n\"\"\""
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2 3 7') == '1'\nassert solution('2 228\\n1 1') == '0'\nassert solution('3 7\\n1 2 3') == '-1'\n"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2 3 7') == '1'\nassert solution('2 228\\n1 1') == '0'\nassert solution('3 7\\n1 2 3') == '-1'"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 7\") == \"1\"\nassert solution(\"2 228\\n1 1\") == \"0\"\nassert solution(\"3 7\\n1 2 3\") == \"-\"\nassert solution(\"2 2\\n1 2\") == \"-\"\n"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3 7\") == 1\nassert solution(\"2 228\\n1 1\") == 0\nassert solution(\"3 7\\n1 2 3\") == -1\n\nfrom collections import Counter\n"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 3 7\") == '1'\nassert solution(\"2 228\\n1 1\") == '0'\nassert solution(\"3 7\\n1 2 3\") == '-1'\n\"\"\"\n\n\nfrom collections import Counter"
    },
    {
        "number": 463,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2 3 7\") == '1'\nassert solution(\"2 228\\n1 1\") == '0'\nassert solution(\"3 7\\n1 2 3\") == '-1'"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\") == \"YES\"\nassert solution(\"3 5\\n..*..\\n****.\\n.*...\") == \"NO\"\nassert solution(\"7 7\\n.......\\n...*...\\n..****.\\n...*...\\n...*...\\n.......\\n.*.....\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\") == \"YES\"\nassert solution(\"3 5\\n..*..\\n****.\\n.*...\\n\") == \"NO\"\nassert solution(\"7 7\\n.......\\n...*...\\n..****.\\n...*...\\n...*...\\n.......\\n.*.....\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\nassert solution(\"3 7\\n.*...*.\\n***.***\\n.*...*.\\n\") == \"NO\"\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('...\\n*...\\n....') == 'YES'\nassert solution('...\\n*...\\n..**') == 'NO'\n\"\"\""
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 'NO'\nassert solution('.') == 'YES'\nassert solution('.' * 10) == 'YES'\nassert solution('..') == 'YES'\nassert solution('*') == 'YES'\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\".***.***.***.\") == \"YES\"\nassert solution(\"....**....**....\") == \"YES\"\nassert solution(\"*....*....*....\") == \"YES\"\nassert solution(\"*...*...*...*\") == \"YES\"\nassert solution(\"*...*....*...*\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 6\"\n) == \"YES\"\nassert solution(\n    \"3 5\"\n) == \"NO\"\nassert solution(\n    \"7 7\"\n) == \"NO\"\nassert solution(\n    \"5 10\"\n) == \"NO\"\nassert solution(\n    \"5 6\"\n) == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n.*...*.\\n***.***\\n.*...*.\\n\") == \"NO\"\nassert solution(\"5 10\\n......\\n..*...\\n.*.****\\n..*...\\n......\\n\") == \"NO\"\nassert solution(\"5 6\\n.....\\n..*.*\\n.****\\n.....\\n\") == \"YES\"\nassert solution(\"3 5\\n.*...\\n***.\\n.*...\\n\") == \"NO\"\nassert solution(\"7 7\\n.*...*.\\n***.***\\n.*...*.\\n\") == \"NO\"\n\"\"\"\n\n\nimport unittest\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\\n\") == \"YES\"\nassert solution(\"3 5\\n..*..\\n****.\\n.*...\\n\") == \"NO\"\nassert solution(\"7 7\\n.......\\n...*...\\n..****.\\n...*...\\n...*...\\n.......\\n.*.....\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\n\n\"\"\"\n\n\nclass Solution:\n    def __init__(self, h, w, picture):\n        self.h = h\n        self.w = w\n        self.picture = picture\n\n    def is_plus_shape(self, h, w, picture, i, j):\n        # If we hit the left or right boundary\n        # then we're out of bounds\n        if j + 1 < w:\n            # If we hit the edge of the picture\n            if picture[i][j]!= \".\":\n                return False\n            # We only care about the bottom right cell\n            # if we're not on the edge of the picture\n            if picture[i][j + 1]!= \".\":\n                return False\n        elif j + 1 == w:\n            if picture[i][j]!= \".\":\n                return False\n            # If we're on the edge of the picture\n            # and the bottom right cell is not a \".\"\n            if picture[i + 1][j]!= \".\":\n                return False\n            else:\n                return True\n\n        # If we hit the top or bottom boundary\n        # then we're out of bounds\n        if i + 1 < h:\n            # If we hit the edge of the picture\n            if picture[i][j]!= \".\":\n                return False\n            # We only care about the bottom right cell\n            # if we're not on the edge of the picture\n            if picture[i + 1][j]!= \".\":\n                return False\n        elif i + 1 == h:\n            if picture[i][j]!= \".\":\n                return False\n            # If we're on the edge of the picture\n            # and the bottom right cell is not a \".\"\n            if picture[i][j + 1]!= \".\":\n                return False\n            else:\n                return True\n\n        # If we hit the left or right boundary\n        # then we're out of bounds\n        if j + 1 < w:\n            # If we hit the edge of the picture\n            if picture[i][j]!= \"*\":\n                return False\n            # We only care about the bottom right cell\n            # if we're not on the edge of the picture\n            if picture[i][j + 1]!= \"*\":\n                return False\n        elif j + 1 == w:\n            if picture[i][j]!= \"*\":\n                return False\n            # If we're on the edge of the picture\n            # and the bottom right cell is not a \"*\"\n            if picture[i + 1][j]!= \"*\":\n                return False\n            else:\n                return True\n\n        # If we hit the top or bottom boundary\n        # then we're out of bounds\n        if i + 1 < h:\n            # If we hit the edge of the picture\n            if picture[i][j]!= \"*\":\n                return False\n            # We only care about the bottom right cell\n            # if we're not on the edge of the picture\n            if picture[i + 1][j]!= \"*\":\n                return False\n        elif i + 1 == h:\n            if picture[i][j]!= \"*\":\n                return False\n            # If we're on the edge of the picture\n            # and the bottom right cell is not a \"*\"\n            if picture[i][j + 1]!= \"*\":\n                return False\n            else:\n                return True\n\n        return True\n\n    def is_plus_shape_helper(self):\n        # Let's set the start point to the bottom left cell\n        # of the picture\n        for i in range(self.h - 1, -1, -1):\n            for j in range(self.w - 1, -1, -1):\n                if self.is_plus_shape(self.h, self.w, self.picture, i, j):\n                    return True\n        return False\n\n    def solve(self):\n        return self.is_plus_shape_helper()\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3 5\\n' + '.*...*\\n' + '***.***\\n' + '.*...*\\n') == 'NO'\nassert solution('3 5\\n' + '.*...*\\n' + '***.***\\n' + '.*...*\\n') == 'NO'\nassert solution('3 7\\n' + '.*...*.\\n' + '***.***\\n' + '.*...*.\\n') == 'NO'\nassert solution('3 7\\n' + '.*...*.\\n' + '***.***\\n' + '.*...*.\\n') == 'NO'\nassert solution('5 10\\n' + '..........\\n' + '..*.......\\n' + '.*.******.\\n' + '..*.......\\n' + '..........\\n') == 'NO'\n"
    },
    {
        "number": 464,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\") == \"YES\"\nassert solution(\"3 5\\n..*..\\n****.\\n.*...\\n\") == \"NO\"\nassert solution(\"5 6\\n..**..\\n..**..\\n******\\n..**..\\n..**..\") == \"NO\"\nassert solution(\"3 7\\n.*...*.\\n***.***\\n.*...*.\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 2 2\") == \"NO\"\nassert solution(\"3 3 3\") == \"NO\"\n\"\"\""
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\") == \"YES\\n001\\n001\\n110\"\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\n\"\"\"\n\n\nimport os\nimport unittest\n\n\nclass SolutionTest(unittest.TestCase):\n\n    def test_1(self):\n        assert solution(\"3 1 2\") == \"YES\"\n\n    def test_2(self):\n        assert solution(\"3 3 3\") == \"NO\"\n\n    def test_3(self):\n        assert solution(\"4 1 2\") == \"YES\"\n\n    def test_4(self):\n        assert solution(\"4 3 2\") == \"NO\"\n\n    def test_5(self):\n        "
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"YES\\n001\\n001\\n110\"\nassert solution(\"3 3 3\") == \"NO\"\n\"\"\""
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('3 1 2') == \"YES\\n001\\n001\\n110\"\nassert solution('3 3 3') == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\") == \"YES\\n001\\n001\\n110\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"4 4 6\") == \"YES\\n101\\n101\\n110\\n110\\n101\\n110\\n101\\n110\\n101\\n110\"\nassert solution(\"5 4 2\") == \"YES\\n101\\n101\\n101\\n110\\n110\\n101\\n110\"\nassert solution(\"8 3 2\") == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\") == 'YES'\nassert solution(\"3 3 3\") == 'NO'\nassert solution(\"3 4 2\") == 'NO'\nassert solution(\"4 1 2\") == 'NO'\nassert solution(\"4 3 2\") == 'YES'\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('''3 1 2''') == '''NO\n001\n110'''\nassert solution('''3 3 3''') == 'YES\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\\n111\n'''\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"YES\\n001\\n001\\n110\"\nassert solution(\"3 3 3\") == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == 'YES\\n001\\n001\\n110'\nassert solution('3 3 3') == 'NO'\nassert solution('3 3 5') == 'NO'\nassert solution('1 1 2') == 'NO'\nassert solution('1 1 0') == 'YES\\n11\\n11\\n11'\n"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('1 10 2 1\\n7 2\\n1') == '0'\n\"\"\"\n\nc, d, n, m = [int(x) for x in input().split()]\nk = int(input())\n\nn1 = n * m\nk1 = k * n\n\ncount = n * m - k1"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"1 10 2 1\") == \"2\"\n"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1\\n') == '2'\nassert solution('7 2\\n2\\n') == '0'\nassert solution('7 2\\n1\\n2') == '0'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('1 1') == 0\nassert solution('1 10') == 0\nassert solution('1 10 1') == 1\nassert solution('1 100 10') == 0\n"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"1 10 2 7 1\") == '2'\n\"\"\""
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 10\\n7 2\\n1\\n\") == \"2\"\nassert solution(\"2 2\\n2 1\\n2\\n\") == \"0\""
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 10 2 1\") == \"2\"\nassert solution(\"1 10 2 1\") == \"0\"\nassert solution(\"1 10 2 10\") == \"1\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"1 1 1 2\") == \"1\"\n"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1\\n1\") == \"2\"\nassert solution(\"7 2\\n7 7\\n1\") == \"1\"\n\"\"\""
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1\\n\") == \"2\"\nprint(solution(\"7 2\\n1\\n\"))\nassert solution(\"7 2\\n2\\n\") == \"0\"\nprint(solution(\"7 2\\n2\\n\"))"
    },
    {
        "number": 466,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('1 10 2 1') == '2'\n\nprint(solution(\"1 10 2 1\"))\n\"\"\"\n\nimport math"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('ABCDEFGHIJKLM') == 'YXWVUTGHIJKLM'\nassert solution('ABCDEFGHIJKLMNOPQRSGTUVWXYZ') == 'YXWVUTGHIJKLMNOPQRSGTUVWXYZ'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ZABCDEFSRQPON'\nassert solution('AB') == 'Impossible'\n\n\"\"\"\n\nfrom string import ascii_uppercase"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\n"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\nassert solution(\"MRXY\") == \"Impossible\"\nassert solution(\"AQGI\") == \"Impossible\"\nassert solution(\"QQQ\") == \"Impossible\"\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") in (\n    \"YXWVUTGHIJKLM\",\n    \"ZABCDEFSRQPON\",\n)\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\nprint('All tests passed.')\n\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('ABCDEFGHIJKLM') == 'YXWVUTGHIJKLM'\nassert solution('ABCDEFGHIJKL') == 'YXWVUTGHIJKLM'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLMNOPQRSTUVWXYZ'\nassert solution('ABCDEFGHIJKLNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLNOPQRSTUVWXYZ'\nassert solution('ABCDEFGHIJKLNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLNOPQRSTUVWXYZ'\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"ABCDEFGHIJKLM\") == \"YXWVUTGHIJKLM\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ZABCDEFSRQPON\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n\"\"\""
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"ABCDEFGHIJKLM\") == \"YXWVUTGHIJKLM\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLMNOPQRSGTUVWXYZ\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\nassert solution(\"ZABCDEFSRQPON\") == \"ZABCDEFSRQPON\"\n\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") in [\"YXWVUTGHIJKLM\", \"ZABCDEFSRQPON\"]\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"Impossible\"\n\"\"\"\n\nimport unittest\n\nfrom collections import deque, OrderedDict\n\nclass Graph:\n    def __init__(self, vertices):\n        self.V = vertices\n        self.graph = [[0 for column in range(vertices)]\n                            for row in range(vertices)]\n    \n    def print_solution(self, dist):\n        print(\"Vertex tDistance from Source\")\n        for node in range(self.V):\n            print(node, \"t\", dist[node])\n    \n    def min_distance(self, dist, spt_set):\n        min_ = sys.maxsize\n        for v in range(self.V):\n            if dist[v] < min_ and spt_set[v] == False:\n                min_ = dist[v]\n                min_index = v\n        return min_index\n    \n    def dijkstra(self, src):\n        dist = [sys.maxsize] * self.V\n        dist[src] = 0\n        spt_set = [False] * self.V\n        for _ in range(self.V):\n            u = self.min_distance(dist, spt_set)\n            spt_set[u] = True\n            for v in range(self.V):\n                if self.graph[u][v] > 0 and spt_set[v] == False and dist[v] > dist[u] + self.graph[u][v]:\n                    dist[v] = dist[u] + self.graph[u][v]\n        self.print_solution(dist)\n\nclass Test(unittest.TestCase):\n    def test(self):\n        pass"
    },
    {
        "number": 467,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('ABCDEFGHIJKLM') == 'YXWVUTGHIJKLM'\nassert solution('ABCDEXAMPLE') == 'ABFJLNOPRS'\nassert solution('SUNETSOFJKL') == 'ZHVWJXPOFGKD'\n\"\"\""
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"=\"\nassert solution(\"5 8\") == \">\"\nassert solution(\"10 3\") == \"<\""
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nprint('PASSED')\n\n\"\"\""
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n\n\n\"\"\"\n\n\n\nimport sys\nimport math\n\nx, y = map(int, sys.stdin.readline().rstrip().split())"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nprint(solution(stdin))\n"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 8\") == '>'\nassert solution(\"10 3\") == '<'\nassert solution(\"6 6\") == '='\nassert solution(\"9 10\") == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('4 5') == '<'\nassert solution('5 10') == '>'\nassert solution('6 6') == '='\n\"\"\"\n\nx, y = list(map(int, input().split()))"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \">\"\nassert solution(\"10 3\") == \"<\"\nassert solution(\"6 6\") == \"=\""
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 2') == '='\nassert solution('4 3') == '<'\nassert solution('2 4') == '>'\n\nassert solution('2 5') == '='\nassert solution('4 6') == '<'\n"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nprint('Success')\n\nhttps://codeforces.com/problemset/problem/1490/A\n'''"
    },
    {
        "number": 468,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nassert solution('1 2') == '>'\n\n\"\"\"\n\nimport sys\nimport io"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('1 1') == 3\nassert solution('1 2') == 5\nassert solution('2 1') == 2\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n\nprint(solution(stdin.strip()))\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('1 1') == 3\nassert solution('1 2') == 5\nassert solution('2 1') == 2\n\"\"\"\n\nfrom math import pi, ceil"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\n\"\"\"\n\n\n\nimport math"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 1') == '2'\nassert solution('1 2') == '5'\nassert solution('3 3') == '12'\nassert solution('3 4') == '13'\n"
    },
    {
        "number": 469,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"2\"\n\"\"\"\n\nr, h = map(int, input().split())\n\nprint((h+r) // 2)\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"7 3 7 3 20\") == '26'\nassert solution(\"7 9 3 1 8\") == '28'\nassert solution(\"10 10 10 10 10\") == '20'\n\"\"\"\n\nfrom collections import Counter\nfrom typing import List\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\n\"\"\"\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('1 1 1 1 1') == '0'\nassert solution('3 3 3 3 3') == '0'\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\n\n\"\"\""
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('7 3 7 3 20') == 26\nassert solution('7 9 3 1 8') == 28\nassert solution('10 10 10 10 10') == 20\n'''\nfrom typing import Tuple, List, Optional, Dict, Sequence"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n\nprint(solution(stdin))\n\n\"\"\""
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 2 2 2') == '0'\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('1 1 1 1 1') == '0'\nassert solution('6 6 6 6 6') == '15'\n"
    },
    {
        "number": 470,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"7\"\nassert solution(\"2 0\") == \"10\"\nassert solution(\"5 0\") == \"0\"\n\n\n\"\"\"\n\nfrom collections import namedtuple\n\nPoint = namedtuple('Point', ['x', 'y'])"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n1 7 12\\n\") == \"7\"\nassert solution(\"2 0\\n11 -10\\n\") == \"10\"\nassert solution(\"5 0\\n0 0 1000 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 7 12\\n\") == \"7\"\nassert solution(\"2 0\\n11 -10\\n\") == \"10\"\nassert solution(\"5 0\\n0 0 1000 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 7 12\") == \"7\"\nassert solution(\"2 0\\n11 -10\") == \"10\"\nassert solution(\"5 0\\n0 0 1000 0 0\") == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5 10\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"7\"\nassert solution(\"2 0\") == \"10\"\nassert solution(\"5 0\") == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''3 10\n1 7 12\n''') == '7'\nassert solution('''2 0\n11 -10\n''') == '10'\nassert solution('''5 0\n0 0 1000 0 0\n''') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"7\"\nassert solution(\"2 0\") == \"10\"\nassert solution(\"5 0\") == \"0\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(open(\"ex2_1.txt\", \"r\").read()) == \"7\"\nassert solution(open(\"ex2_2.txt\", \"r\").read()) == \"10\"\n"
    },
    {
        "number": 471,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('3 10\\n1 7 12') == '7'\nassert solution('2 0\\n11 -10') == '10'\n\"\"\"\n"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"10\"\nassert solution(\"22\") == \"12\"\nassert solution(\"33\") == \"21\"\nassert solution(\"44\") == \"23\"\nassert solution(\"55\") == \"32\"\n"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('2') == 1\nassert solution('110') == 10\nassert solution('4') == -1\nassert solution('4') == -1\nassert solution('110') == 10\n"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('110') == '10'\nassert solution('4') == '-1'\n\n\"\"\""
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"110\") == \"10\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('11') == '1'\nassert solution('21') == '1'\nassert solution('4') == '-1'\n\"\"\"\n"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"110\") == \"10\"\nassert solution(\"2\") == \"1\"\n\n\"\"\"\n\nimport sys\n\nN = int(input())"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('110') == '10'\nassert solution('4') == '-1'"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4') == '-1'\nassert solution('110') == '10'\n\"\"\"\nimport math"
    },
    {
        "number": 472,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"110\") == \"10\"\nassert solution(\"4\") == \"-1\""
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\nassert solution(\"05:50\") == \"00:06\"\n\"\"\"\n\nimport re"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:01\") == \"23:00\"\nassert solution(\"00:00\") == \"00:01\"\n\"\"\""
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"05:50\") == \"0:06\"\nassert solution(\"00:00\") == \"23:59\"\nassert solution(\"00:01\") == \"0:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:59\"\nassert solution(\"00:01\") == \"00:01\"\nassert solution(\"05:44\") == \"00:06\"\n\"\"\"\n\nimport re"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"05:44\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"05:44\") == \"00:06\"\nassert solution(\"00:00\") == \"23:59\"\nassert solution(\"00:01\") == \"00:01\"\nassert solution(\"00:05\") == \"00:05\"\n\n\"\"\"\n"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\"\nassert solution(\"12:10\") == \"12:10\"\n\"\"\"\n\nfrom datetime import datetime\n"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'"
    },
    {
        "number": 473,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\""
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('6 1 6 6 0') == 2\n\"\"\"\n\nimport itertools\nimport math\n\nn = int(input())\na = [int(i) for i in input().split()]\nl = n\n\nmax_mean = -math.inf\nmax_sub = []\n\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        c = sum([1 / (j - i + 1) * num for num in a[i:j + 1]])\n        if c > max_mean:\n            max_mean = c\n            max_sub = a[i:j + 1]\nprint(len(max_sub))\n"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5\\n6 1 6 6 0') == '2'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == '2'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == 2"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == \"2\"\n\"\"\""
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == 2\n"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == 2\n\"\"\"\n\nimport sys\n\n_, *data = [int(x) for x in sys.stdin.read().strip().split('\\n')]"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('5\\n6 1 6 6 0') == 2\n\"\"\"\n"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('3\\n6 1 6 6 0') == 2\n\"\"\"\n\nimport collections"
    },
    {
        "number": 474,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6 1 6 6 0\") == 2\n\"\"\"\n\n\nfrom collections import Counter"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"2 3 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\n\"\"\""
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\") == \"4\"\nassert solution(\"3 2 2\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == '4'\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '4'\n\"\"\"\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"4\"\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"4\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"3 3 0\") == \"3\"\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"3 3 0\") == 3\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\") == 4\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"3 3 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\n"
    },
    {
        "number": 475,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\") == \"4\"\n\"\"\""
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('114114') == \"YES\"\nassert solution('1111') == \"YES\"\nassert solution('441231') == \"NO\"\nprint('All tests passed.')\n"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\nassert solution(\"1233\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\n\nprint(solution(\"114114\"))\nprint(solution(\"1111\"))\nprint(solution(\"441231\"))\n\n\"\"\"\n"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(1) == 'YES'\nassert solution(11) == 'NO'\nassert solution(144) == 'YES'\nassert solution(1414) == 'YES'\nassert solution(141) == 'YES'\n"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"141414\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"1411\") == \"NO\"\n\n\"\"\"\n\nn = int(stdin)"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\nprint('All tests passed.')\n\n\"\"\""
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(114114) == \"YES\"\nassert solution(1111) == \"YES\"\nassert solution(441231) == \"NO\"\nprint(\"Passed all tests\")\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 476,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('114114') == \"YES\"\nassert solution('1111') == \"YES\"\nassert solution('441231') == \"NO\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\n\n\"\"\""
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\nassert solution('5 5 7 3 1 1') == 'Poor Inna and pony!'\n\"\"\"\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n\n\"\"\"\n\nimport sys\nimport string"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n\nprint(\"Success\")\n"
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\n\"\"\""
    },
    {
        "number": 477,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(bacabcab) == 4\nassert solution(bcda) == 3\nassert solution(abbbbb) == 5\n\"\"\"\n\nstdin = \"\"\"8\nbacabcab\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('bacabcab') == '4'\nassert solution('bcda') == '3'\nassert solution('abbbbb') == '5'\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('ab') == 0\nassert solution('abb') == 1\nassert solution('bcac') == 3\nassert solution('bacab') == 4"
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('bacabcab') == '4'\nassert solution('bcda') == '3'\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"bacabcab\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"bacabcab\") == \"4\"\nassert solution(\"bcda\") == \"3\"\nassert solution(\"abbbbb\") == \"5\"\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"bacabcab\") == \"4\"\nassert solution(\"bcda\") == \"3\"\nassert solution(\"abbbbb\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('bacabcab') == 4\nassert solution('bcda') == 3\n"
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"bacabcab\") == 4\n\nassert solution(\"bcda\") == 3\n\nassert solution(\"abbbbb\") == 5\n\nassert solution(\"abcd\") == 2\n\"\"\""
    },
    {
        "number": 478,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('bacabcab') == 4\nassert solution('bcda') == 3\nassert solution('abbbbb') == 5\n\nassert solution('bcda') == 3\nassert solution('abbbbb') == 5"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n\"\nprint(\"Tests passed\")\n\"\"\"\n\na, b = [int(x) for x in stdin.split()]\nd = [int(x) for x in stdin.split()[1:]]\nn = len(d)\nq = int(stdin.split()[2])\n\nd.sort()\n\nfor i in range(q):\n    x = int(stdin.split()[3 + i])\n    start = 0\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n        if d[mid] == x:\n            break\n        elif d[mid] < x:\n            start = mid + 1\n        else:\n            end = mid - 1\n    if start > end:\n        print(\"-1\")\n    else:\n        print(end - start + 1)"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1'\nassert solution('4 20\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n') == '1\\n1\\n1\\n2\\n2\\n2\\n2\\n-1\\n-1'\n\nprint(\"OK\")\n"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\") == \"1\\n1\\n1\\n2\\n2\\n2\\n-1\\n-1\"\n\"\"\""
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\n\"\"\"\n\n\nimport sys\n\ninput_str = sys.stdin.readlines()\n\nn, k = [int(item) for item in input_str[0].split()]\n\ndenominations = [int(item) for item in input_str[1].split()]\n\nq = int(input_str[2])\n\nsums = [int(item) for item in input_str[3:]]\n\ndenominations.sort()\n\nsums.sort()\n\ndp = [float('inf') for i in range(k+1)]\n\ndp[0] = 0\n\nfor i in range(n):\n    for j in range(k, 0, -1):\n        for amount in range(j, 0, -1):\n            if denominations[i] <= amount:\n                dp[amount] = min(dp[amount], dp[amount - denominations[i]] + 1)\n                print(dp)\n\nfor i in range(q):\n    if dp[sums[i]] == float('inf'):\n        print(-1)\n    else:\n        print(dp[sums[i]])"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\n\n\"\"\""
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('10 20 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1'\n\nassert solution('10 20 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1'\n"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n\"\nprint(\"Successfully passed the test!\")\n\n\"\"\"\n\nn, k = list(map(int, stdin.readline().split()))\ndenominations = list(map(int, stdin.readline().split()))\nq = int(stdin.readline())\nrequests = [int(stdin.readline()) for _ in range(q)]"
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\nassert solution(\"5 2\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n-1\\n-1\"\n\n-----Problem-----\n\nhttps://codeforces.com/contest/1497/problem/E\n\n\"\"\""
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\nprint(\"test 1 OK\")\n\n\"\"\""
    },
    {
        "number": 479,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"10 20\\n5\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n-1\\n\"\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 2 4\") == \"8\"\nassert solution(\"5 4 0\") == \"7\"\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution('4 2 4\\n3 4\\n1 1\\n') == '8'\nassert solution('5 4 0\\n1 2\\n3 1\\n') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"4 2 4\") == \"8\"\nassert solution(\"5 4 0\") == \"7\"\nassert solution(\"5 4 1\") == \"6\"\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4\") == \"8\"\nassert solution(\"4 2 4\") == \"8\"\n\"\"\"\n\ns, x_1, x_2 = map(int, input().split())\nt_1, t_2 = map(int, input().split())\np, d = map(int, input().split())"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('4 2 4') == '8'\nassert solution('5 4 0') == '7'\nassert solution('100 500 100') == '1010'\nassert solution('10 100 1') == '11'\n\n\"\"\"\n\n\n\nfrom typing import List, Dict"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"4 2 4\") == \"8\"\nassert solution(\"5 4 0\") == \"7\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4 2 4\") == \"8\"\nassert solution(\"5 4 0\") == \"7\"\n\"\"\"\n\ns, x_1, x_2, t_1, t_2, p, d = map(int, input().split())\nt_1, t_2 = min(t_1, t_2), max(t_1, t_2)\n\ntime = s - x_1\ntime_per_step = t_1 - t_2\n\ntravelled_on_tram = time * d\n\npassed_on_tram = travelled_on_tram // time_per_step"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 2 4\\n3 4\\n1 1\\n') == '8'\nassert solution('5 4 0\\n1 2\\n3 1\\n') == '7'\n\"\"\"\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4 2 4\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 480,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 2 4\") == \"8\"\nassert solution(\"5 4 0\") == \"7\"\n\n\"\"\"\n\n\nfrom collections import deque"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\n\"\"\"\n\nn, x = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if i * j == x:\n            count += 1\n\nprint(count)\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\n\"5 13\"\n) == \"0\"\nassert solution(\n\"4 12\"\n) == \"2\"\nassert solution(\n\"10 5\"\n) == \"2\"\nassert solution(\n\"6 12\"\n) == \"4\"\nassert solution(\n\"5 13\"\n) == \"0\"\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"6 12\\n\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"10 5\") == \"2\"\nassert solution(\"6 12\") == \"4\"\nassert solution(\"5 13\") == \"0\"\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('10 5\\n') == '2'\nassert solution('6 12\\n') == '4'\nassert solution('5 13\\n') == '0'\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('6 12') == '4'\n\n\"\"\"\n\nn, x = [int(x) for x in input().split()]\n\nprint(n * (n - 1) // 2 - sum(i for i in range(1, n) if x % i == 0))\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(5, 13) == 0\nassert solution(6, 12) == 4\nassert solution(10, 5) == 2\n\"\"\"\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"10 5\") == \"2\"\nassert solution(\"6 12\") == \"4\"\nassert solution(\"5 13\") == \"0\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"5 12\") == 2\nassert solution(\"6 12\") == 4\n"
    },
    {
        "number": 481,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('10 5\\n6 12\\n5 13') == '4'\nassert solution('10 5\\n12 36\\n5 13') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('''4 3\n\n''') == 'java'\n\nassert solution('''6 6\n\n''') == 'python'\n\nassert solution('''5 2\n\n''') == 'phphp'\n\nassert solution('''5 2\n\n''') == 'phphp'\n\nassert solution('''5 2\n\n''') == 'phphp'\n"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"java\"\nassert solution(\"6 6\") == \"python\"\nassert solution(\"5 2\") == \"phphp\"\n\"\"\""
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\n\"\"\""
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"java\"\nassert solution(\"6 6\") == \"python\"\nassert solution(\"5 2\") == \"phphp\"\n\"\"\""
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"java\"\nassert solution(\"6 6\") == \"python\"\nassert solution(\"5 2\") == \"phphp\"\nprint('Success')\n"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n''') == 'java'\n\nassert solution('''\n6 6\n''') == 'python'\n\nassert solution('''\n5 2\n''') == 'phphp'\n\nprint('Success')"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\n"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution('4 3') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\n\"\"\"\n\nimport sys\n\nn, k = map(int, input().split())\n\narr = set([chr(i) for i in range(ord('a'), ord('z') + 1)])\n\nfor i in range(k):\n    arr -= set(input().split())\n\narr = sorted(list(arr))\n\nfor i in range(n):\n    print(arr.pop(), end='')\n"
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution('4 3') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\n\n\"\"\""
    },
    {
        "number": 482,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"java\"\nassert solution(\"6 6\") == \"python\"\nassert solution(\"5 2\") == \"phphp\"\n\"\"\""
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('4\\nRLRL\\n2 4 6 10') == '1'\nassert solution('3\\nLLR\\n40 50 60') == '-1'\n\n---\n\n\u0414\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u043b\u043e\u0432\u0438\u043d.\n\nSample Input 1:\n\n2\nSample Output 1:\n\n1\nSample Input 2:\n\n7\nSample Output 2:\n\n3\n\n\"\"\""
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\n"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"3\\nLLR\\n40 50 60\") == -1\nassert solution(\"4\\nRLRL\\n2 4 6 10\") == 1"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('4\\nRLRL\\n2 4 6 10') == '1'\nassert solution('3\\nLLR\\n40 50 60') == '-1'"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\n"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\nRLRL\\n2 4 6 10'\n) == '1'\nassert solution(\n    '3\\nLLR\\n40 50 60'\n) == '-1'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\nprint('The code ran Correctly')"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == '1'\nassert solution(\"3\\nLLR\\n40 50 60\") == '-1'\n\n\"\"\"\n\nfrom typing import List, Set\nimport collections\n"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\n"
    },
    {
        "number": 483,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\\nRL\\n40 50 60\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\n\"\"\"\n\nfrom typing import List, Tuple\nimport unittest\nimport math\n\nDEBUG = False\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\""
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\\n\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\\n\") == \"0\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\\n\") == \"0\"\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nprint('The local tests are done.')"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution('2 2 2\\n1 2\\n2 1') == '4'\nassert solution('4 10 9\\n2 3\\n1 1\\n5 10\\n9 11') == '56'\nassert solution('3 10 10\\n6 6\\n7 7\\n20 5') == '0'\nassert solution('4 10 10\\n6 6\\n7 7\\n20 5\\n9 9\\n10 11') == '0'\nassert solution('4 10 10\\n6 6\\n7 7\\n20 5\\n9 9\\n10 11\\n10 11') == '0'\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nassert solution(\"4 10 10\\n6 6\\n7 7\\n20 5\\n9 11\") == \"0\"\nassert solution(\"4 10 10\\n6 6\\n7 7\\n20 5\\n9 11\\n2 3\") == \"0\"\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nassert solution(\"4 10 10\\n6 6\\n7 7\\n20 5\\n9 11\\n3 16\") == \"0\"\nassert solution(\"5 10 10\\n6 6\\n7 7\\n20 5\\n9 11\\n3 16\\n4 18\") == \"0\""
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == '4'\n\"\"\"\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\\n\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\\n\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\\n\"\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\n"
    },
    {
        "number": 484,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\n\nassert solution(\"4 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\""
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2') == '1 1'\nassert solution('2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2') == '0 3'\n"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"0 3\""
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == '1 1'\n\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == '0 3'\n\n\"\"\"\n"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"0 3\"\n\"\"\""
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"0 3\"\n"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"0 3\"\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"0 3\"\n\"\"\"\n\nn = int(input())\n\nx0 = y0 = x1 = y1 = -1\n\nfor _ in range(n):\n    x, y = map(int, input().split())\n    if x == 0:\n        x0 = x\n    elif x == 2:\n        x2 = x\n    elif y == 0:\n        y0 = y\n    elif y == 2:\n        y2 = y"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n2\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2\n\"\"\"\n) == \"0 3\"\n\n\"\"\"\nSolution for this problem\n\"\"\"\nimport collections"
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"4\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2\n\"\"\") == \"0 3\"\n\nassert solution(\"\"\"5\n0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 2\n2 0\n2 1\n2 2\n\"\"\") == \"3 4\""
    },
    {
        "number": 485,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"1 1\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"0 3\"\n"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 0,
        "answer": "assert solution('390') == '216'\n\"\"\""
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 1,
        "answer": "assert solution(\"390\") == \"216\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1000000000\") == \"387420489\"\n\n\"\"\"\n\nimport math\nimport unittest\nfrom unittest.mock import patch"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 2,
        "answer": "assert solution('''1''') == 1\nassert solution('''2''') == 2\nassert solution('''3''') == 3\nassert solution('''100''') == 100\nassert solution('''100000''') == 10000\n"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 3,
        "answer": "assert solution(\"390\") == \"216\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1000000000\") == \"387420489\"\n\"\"\""
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 4,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 5,
        "answer": "assert solution(\"390\") == \"216\"\n\"\"\""
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 6,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\nassert solution('259037') == '8200'\nassert solution('100') == '100'\n\"\"\"\n"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 7,
        "answer": "assert solution(\"390\") == \"216\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 8,
        "answer": "assert solution(\"390\") == \"216\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1000000000\") == \"387420489\"\nassert solution(\"321\") == \"6\""
    },
    {
        "number": 486,
        "checkpoint": "16B",
        "pass": 9,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\nprint('The local tests are done. Click on \"Check\" for more real tests.')\n\"\"\""
    }
]