[
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5\\n1 8 6'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, \"The function solution() is not the correct one.\\nExpected: {}\\nGot: {}\".format(expected_solution, solution)",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''5\n1 8 6'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n4\\n6\\n3\\n3\\n\") == \"5\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 5\nassert solution(8) == 18\nassert solution(10) == 14\nassert solution(10) == 14",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5\n\nassert solution(r\"\"\"\n    8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\"\"\") == 5",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\\n\", \"Test 1 failed\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"10 5\\n\", \"Test 2 failed\"\n\nassert solution(\"6\\n2 3 4 5 6\") == \"10 5 6\\n\", \"Test 3 failed\"\n\nassert solution(\"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 77,
        "num_ids_4": 1024
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nprint('All test cases passed!')",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8', \"The solution should return 20 8, but it returns {}\".format(solution('10\\n10 2 8 1 2 4 1 20 4 5'))",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\ninput_data = [3, 4, 3]\\nassert solution(input_data) == \"2\"\\ninput_data = [5, 5, 4]\\nassert solution(input_data) == \"56\"\\ninput_data = [1, 2, 4, 2, 1]\\nassert solution(input_data) == \"24\"\\n\\ninput_data = [1, 2, 3, 4, 1]\\nassert solution(input_data) == \"24\"\\n\\ninput_data = [5, 2, 2, 2, 5]\\nassert solution(input_data) == \"24\"'\n",
        "num_ids_2": 182,
        "num_ids_4": 182
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"24\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test Failed\"\n\nn, m, k = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\ndp = [[0] * m for _ in range(n)]\nmax_sum = float('-inf')\n\nfor i in range(n):\n    dp[i][0] = a[i][0]\n\nfor j in range(1, m):\n    dp[0][j] = dp[0][j-1] + a[0][j]\n    for i in range(1, n):\n        dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + a[i][j]\n\nmax_sum = dp[-1][-1]\n\nfor i in range(n-2, -1, -1):\n    for j in range(m-1, -1, -1):\n        if dp[i][j] % k == 0:\n            max_sum = max(max_sum, dp[i][j])\n\nprint(max_sum)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 3) == 24\nassert solution(5, 5, 4) == 56\nassert solution(5, 5, 2) == 56\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed.\" for i, (input_data, output_data) in enumerate(zip(test_cases, expected_outputs))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56'\nprint('All test cases passed!')",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\\n\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRR\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 3 2\") == \"4\"\nassert solution(\"1 3 5 6 5 4 2\") == \"6\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"4 1 2 4 3\") == \"4\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nRRLL'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2\\n') == '1\\nR'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRR'",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRR\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"LRRR\"\n\nassert solution(input()) == \"LRLRRR\"\n\nassert solution(input()) == \"R\"\n\nassert solution(input()) == \"LLRR\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n3\\n2\") == \"4\\nLRRR\"\nassert solution(\"1\\n3\\n5\\n6\\n5\\n4\\n2\") == \"6\\nLRLRRR\"\nassert solution(\"1\\n2\\n3\\n2\") == \"1\\nR\"\nassert solution(\"1\\n2\\n3\\n4\\n1\\n2\") == \"4\\nLLRR\"\nassert solution(\"2\\n2\\n2\\n2\") == \"1\"\nassert solution(\"2\\n2\\n2\\n3\\n2\\n2\\n3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == 3\nassert solution('5\\n2 2 5 2 5\\n') == 3\nassert solution('4\\n1 3 3 7\\n') == -1\nassert solution('2\\n2 8\\n') == 3",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n', \"The output should be '3', but it's actually '{}'\".format(solution())\nassert solution('Input\\n6\\n1 4 4 7 4 1\\n') == '3\\n', \"The output should be '3', but it's actually '{}'\".format(solution('Input\\n6\\n1 4 4 7 4 1\\n'))\nassert solution('Input\\n5\\n2 2 5 2 5\\n') == '3\\n', \"The output should be '3', but it's actually '{}'\".format(solution('Input\\n5\\n2 2 5 2 5\\n'))\nassert solution('Input\\n4\\n1 3 3 7\\n') == '-1\\n', \"The output should be '-1', but it's actually '{}'\".format(solution('Input\\n4\\n1 3 3 7\\n'))\nassert solution('Input\\n2\\n2 8\\n') == '3\\n', \"The output should be '3', but it's actually '{}'\".format(solution('Input\\n2\\n2 8\\n'))",
        "num_ids_2": 96,
        "num_ids_4": 220
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == 3\nassert solution(\"5\\n2 2 5 2 5\\n\") == 3\nassert solution(\"4\\n1 3 3 7\\n\") == -1\nassert solution(\"2\\n2 8\\n\") == 3\nprint(\"All test cases pass\")",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\\n\"\nassert solution(\"2\\n2 8\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == '3\\n'\nassert solution('5\\n2 2 5 2 5\\n') == '3\\n'\nassert solution('4\\n1 3 3 7\\n') == '-1\\n'\nassert solution('2\\n2 8\\n') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == '3\\n'\nassert solution('5\\n2 2 5 2 5\\n') == '3\\n'\nassert solution('4\\n1 3 3 7\\n') == '-1\\n'\nassert solution('2\\n2 8\\n') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: 3\"\nassert solution(stdin) == \"3\", \"Expected output: 3\"\nassert solution(stdin) == \"3\", \"Expected output: 3\"\nassert solution(stdin) == \"3\", \"Expected output: 3\"\nassert solution(stdin) == \"3\", \"Expected output: 3\"\nassert solution(stdin) == \"-1\", \"Expected output: -1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([6, 1, 4, 4, 7, 4, 1]) == 3\nassert solution([5, 2, 2, 5, 2, 5]) == 3\nassert solution([4, 1, 3, 3, 7]) == -1\nassert solution([2, 2, 8]) == 3",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000') == 'YES'",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\\n3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 301,
        "num_ids_4": 484
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1098) == 20, \"Expected 20, got {}\".format(solution(1098))\nassert solution(10) == 19, \"Expected 19, got {}\".format(solution(10))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1098) == 20, \"The number of different numbers that are reachable from 1098 is incorrect.\"\nassert solution(10) == 19, \"The number of different numbers that are reachable from 10 is incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1098) == '20'\nassert solution(10) == '19'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1098\") == \"20\", \"Test case 1 failed\"\nassert solution(\"10\") == \"19\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1098) == 20, \"The expected output is 20, but got: \" + str(solution(1098))\nassert solution(10) == 19, \"The expected output is 19, but got: \" + str(solution(10))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1098\") == \"20\", \"Test 1\"\nassert solution(stdin=\"10\") == \"19\", \"Test 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1098) == 20, \"Error: incorrect output\"\nassert solution(10) == 19, \"Error: incorrect output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == [5, 3, 1, 2, 4]\nassert solution(7) == [7, 3, 2, 1, 4, 5, 6]\nassert solution(7) == [7, 3, 2, 1, 4, 5, 6]\nassert solution(5) == [2, 1, 4, 5, 3]",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 0 0 2 4\\n') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3\\n'",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [5, 3, 1, 2, 4]\nassert solution(7) == [7, 3, 2, 1, 4, 5, 6]\nassert solution(7) == [7, 4, 2, 3, 6, 5, 1]\nassert solution(5) == [2, 1, 4, 5, 3]",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 0 0 2 4\") == \"5 3 1 2 4\"\nassert solution(\"7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5 2 1 0 0 0\") == \"2 1 4 5 3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3\\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"5 3 1 2 4\"\nassert solution(7) == \"7 3 2 1 4 5 6\"\nassert solution(7) == \"7 4 2 3 6 5 1\"\nassert solution(5) == \"2 1 4 5 3\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''5 3 1 2 4\n7 3 2 1 4 5 6\n7 4 2 3 6 5 1\n2 1 4 5 3'''\n\nassert solution() == '''5 3 1 2 4\n7 3 2 1 4 5 6\n7 4 2 3 6 5 1\n2 1 4 5 3'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4 \\n'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6 \\n'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1 \\n'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3 \\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nprint(\"Test passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 2) == 'YES\\n1 1 2 2'\nassert solution(5, 2) == 'YES\\n2 1 1 2 1'\nassert solution(5, 3) == 'YES\\n2 1 1 2 1'\nassert solution(5, 2) == 'NO'",
        "num_ids_2": 46,
        "num_ids_4": 83
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4 2\\na 1 2 2 3\\n\\nInput\\n5 2\\na 3 2 1 2 3\\n\\nInput\\n5 2\\na 2 1 1 2 1\\n\\nOutput\\nYES\\nc 1 1 2 2\\n\\nOutput\\nYES\\nc 2 1 1 2 1\\n\\nOutput\\nNO\") == \"YES\\nc 1 1 2 2\\nc 2 1 1 2 1\\nNO\"\n\nassert solution(\"Input\\n4 2\\na 1 2 2 3\\n\\nInput\\n5 2\\na 3 2 1 2 3\\n\\nInput\\n5 2\\na 2 1 1 2 1\\n\\nOutput\\nYES\\nc 1 1 2 2\\n\\nOutput\\nYES\\nc 2 1 1 2 1\\n\\nOutput\\nNO\") == \"YES\\nc 1 1 2 2\\nc 2 1 1 2 1\\nNO\"",
        "num_ids_2": 280,
        "num_ids_4": 280
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 1 2 2\"\nassert solution(open(\"input2.txt\", \"r\")) == \"YES\\n2 1 1 2 1\"\nassert solution(open(\"input3.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input4.txt\", \"r\")) == \"YES\\n1 1 2 2\"\nassert solution(open(\"input5.txt\", \"r\")) == \"YES\\n2 1 1 2 1\"",
        "num_ids_2": 55,
        "num_ids_4": 100
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\\n\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The provided solution does not match the expected output. \\nInput: {stdin}\\nOutput: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {t} failed: {solution(stdin)}\"\nfor t in range(1, 11):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    expected = \"YES\" if has_palindrome(a) else \"NO\"\n    stdin.readline()  # skip the expected output\n    solution(stdin)\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'NO'",
        "num_ids_2": 183,
        "num_ids_4": 264
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    \"\"\"\n) == \"YES\\nYES\\nNO\\nYES\\nNO\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 1\n    5\n    1 2 2 3 2\n    3\n    1 1 2\n    4\n    1 2 2 1\n    10\n    1 1 2 2 3 3 4 4 5 5\n    \"\"\"\n) == \"YES\\nYES\\nNO\\nYES\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\nassert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\"",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\\n\"\n",
        "num_ids_2": 86,
        "num_ids_4": 124
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"1557\"\nassert solution(5) == \"99999\"\nassert solution(2) == \"33\"",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Your function is not correct.\\nExpected: {output()}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == \"33\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 124
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"1557\"\nassert solution(\"Input\") == \"99999\"\nassert solution(\"Input\") == \"33\"\n",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1337\", \"1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"11111\", \"9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"33\", \"1 1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) =='res'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\"",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"res\\n\", \"Please write the solution function\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(\"1 2 3\\n456 678 901\\n7 8 9\\n10 11 12\\n13 14 15\\n\") == \"2\\n2 2 2\\n56\\n100 100 100\\n8\\n8 8 8\"\nassert solution(\"1 2 3\\n456 678 901\\n7 8 9\\n10 11 12\\n13 14 15\\n5 10 15\\n\") == \"3\\n3 3 3\\n15\\n15 15 15\\n7\\n7 7 7\"\nassert solution(\"1 2 3\\n456 678 901\\n7 8 9\\n10 11 12\\n13 14 15\\n5 10 15\\n10 15 20\\n\") == \"5\\n5 5 5\\n30\\n15 15 15\\n5\\n5 5 5\"\nassert solution(\"1 2 3\\n456 678 901\\n7 8 9\\n10 11 12\\n13 14 15\\n5 10 15\\n10 15 20\\n15 20 25\\n\") == \"7\\n7 7 7\\n60\\n15 15 15\\n7\\n7 7 7\"",
        "num_ids_2": 279,
        "num_ids_4": 481
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(res)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(\"2\\n1000 1000 1001\\n1 1 1\\n1000 1000 1001\\n1 1 1\\n1000 1000 1001\") == \"7\"\nassert solution(\"10\\n100000 100000 100001\\n100 100 101\\n10000 10000 10001\\n100 100 101\\n10000 10000 10001\\n100 100 101\\n10000 10000 10001\\n100 100 101\\n10000 10000 10001\\n100 100 101\\n10000 10000 10001\") == \"1\"\nassert solution(\"100\\n10000000000000000000000000000000 1000000000000000000000000000000000 1000000000000000000000000000000000 10000000000000000000000000000000000 10000000000000000000000000000000000000 10000000000000000000000000000000000000 10000000000000000000000000000000000000\") == \"4\"",
        "num_ids_2": 259,
        "num_ids_4": 721
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '1 1 3'\nassert solution() == '102'\nassert solution() == '114 228 456'\nassert solution() == '4'\nassert solution() == '6'\nassert solution() == '18 18 18'\nassert solution() == '1'\nassert solution() == '100 100 100'\nassert solution() == '7'\nassert solution() == '1 22 22'\nassert solution() == '2'\nassert solution() == '1 19 38'\nassert solution() == '8'\nassert solution() == '6 24 48'",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n\") == \"0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\\n\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\\n\") == \"0\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n\") == \"0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n1 3 3 7\\n\\nOutput\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\") == \"Output\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 66
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\n# Test cases\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Got {solution(stdin=input())}, expected {expected}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Expected {output()}, but got {solution(input())}.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 2\n1 3 1\n1 5 1\n\"\"\") == \"\"\"1 2 3 0 3 \"\"\"\nassert solution(\"\"\"3 2\n1 3 1\n1 2 1\n\"\"\") == \"\"\"-1\"\"\"\nassert solution(\"\"\"10 3\n4 7 2\n1 10 3\n8 9 1\n\"\"\") == \"\"\"2 2 2 1 1 0 4 3 4 4 \"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"1 2 3 0 3 \\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 189,
        "num_ids_4": 265
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 2\n1 3 1\n1 5 1\n\"\"\") == \"1 2 3 0 3\"\n\nassert solution(\"\"\"3 2\n1 3 1\n1 2 1\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"10 3\n4 7 2\n1 10 3\n8 9 1\n\"\"\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [1, 2, 3, 0, 3]\nassert solution() == [-1]\nassert solution() == [2, 2, 2, 1, 1, 0, 4, 3, 4, 4]",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n2 2\n2 1\n1 1\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 2 3 0 3\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\") == \"1 2 3 0 3\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 60,
        "num_ids_4": 113
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n') == '1 2 3 0 3 '\nassert solution('3 2\\n1 3 1\\n1 2 1\\n') == '-1'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4 '",
        "num_ids_2": 64,
        "num_ids_4": 119
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, but got {solution(input)}\"\n\nfor input, expected in [\n    ([5, 2], [1, 2, 3, 0, 3]),\n    ([3, 2], [-1]),\n    ([10, 3], [2, 2, 2, 1, 1, 0, 4, 3, 4, 4]),\n]:\n    solution(input)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\", \"Test failed for 120 51840\"\nassert solution(\"42 42\") == \"0\", \"Test failed for 42 42\"\nassert solution(\"48 72\") == \"-1\", \"Test failed for 48 72\"\nprint(\"All test cases passed\")",
        "num_ids_2": 58,
        "num_ids_4": 83
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7', \"The correct answer is 7.\"\nassert solution('42 42') == '0', \"The correct answer is 0.\"\nassert solution('48 72') == '-1', \"The correct answer is -1.\"",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120 51840\") == \"7\\n\"\nassert solution(\"42 42\") == \"0\\n\"\nassert solution(\"48 72\") == \"-1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4) == \"ababababa\"\nassert solution(3, 2) == \"catcat\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 4) == \"ababababa\"\nassert solution(3, 2) == \"catcat\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"ababababa\"\nassert solution(stdin: str) == \"catcat\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == 'ababababa'\nassert solution(3, 2) == 'catcat'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\\n\"\nassert solution(\"5\\n2 5 5 5 5\\n\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 110
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '4 1 5'\nassert solution(5) == '0'",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\"",
        "num_ids_2": 101,
        "num_ids_4": 125
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 5 1 2 2\") == \"3\\n1 4\"\nassert solution(\"5\\n2 5 1 2 2\") == \"0\"\nassert solution(\"5\\n2 5 1 2 2\") == \"3\\n1 4\"",
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n0\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    2 5 1 2 2\n    ''') == '''\n    3\n    4 1 5\n    '''\n\nassert solution('''\n    4\n    8 3 5 2\n    ''') == '''\n    2\n    1 4 \n    '''\n\nassert solution('''\n    5\n    2 1 2 4 3\n    ''') == '''\n    0\n    '''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4 \"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\naaaaa') == '15'\nassert solution('5 7\\naaaaa') == '-1'\nassert solution('10 100\\najihiushda') == '233'",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\nanaaa\") == \"15\"\nassert solution(\"5 7\\nanaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\nassert solution(\"1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 ",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\na\\n\") == \"15\\n\"\nassert solution(\"5 7\\na\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\nanaaa\") == \"15\"\nassert solution(\"5 7\\nanaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == 4\nassert solution(\"5 6\\naaaaa\\n\") == 15\nassert solution(\"5 7\\naaaaa\\n\") == -1\nassert solution(\"10 100\\najihiushda\\n\") == 233",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"NO\"",
        "num_ids_2": 46,
        "num_ids_4": 54
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed with input '{input()}' and output '{output}'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n4 1\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"Input\\n4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"Input\\n4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"\n",
        "num_ids_2": 118,
        "num_ids_4": 157
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10:00\\n11:00\\n') == '10:30\\n'\nassert solution('11:10\\n11:12\\n') == '11:11\\n'\nassert solution('01:02\\n03:02\\n') == '02:02\\n'",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30', 'Test Case 1 failed'\nassert solution('11:10') == '11:11', 'Test Case 2 failed'\nassert solution('01:02') == '02:02', 'Test Case 3 failed'",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(42) == 6, \"Test failed\"\nprint(solution(4)) # Output: 2\nprint(solution(27)) # Output: 5",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\", \"Test case 1 failed\"\nassert solution(\"4\") == \"2\", \"Test case 2 failed\"\nassert solution(\"27\") == \"5\", \"Test case 3 failed\"\nassert solution(\"42\") == \"6\", \"Test case 4 failed\"\nassert solution(\"a\") == \"Input is not an integer\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"1\"\nassert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1, \"Input 2 should output 1\"\nassert solution(4) == 2, \"Input 4 should output 2\"\nassert solution(27) == 5, \"Input 27 should output 5\"\nassert solution(42) == 6, \"Input 42 should output 6\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5, \"Please implement the solution correctly\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4') == '1\\n'\nassert solution('5') == '2\\n'\nassert solution('3') == '0\\n'\nassert solution('2') == '7\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Your solution is incorrect.\"\nassert solution() == 2, \"Your solution is incorrect.\"\nassert solution() == 0, \"Your solution is incorrect.\"\nassert solution() == 7, \"Your solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\"\n",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_list, stdout_list)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 1\nassert solution(5) == 2\nassert solution(3) == 0\nassert solution(2) == 7",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 1 2 5') == 'YES'\nassert solution('3 4 5 3') == 'NO'\nassert solution('2 10 10') == 'YES'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 78,
        "num_ids_4": 97
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\", \"Solution is incorrect\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10\\n\\n') == 'NO'\nassert solution('2\\n10 10\\n\\n') == 'YES'",
        "num_ids_2": 82,
        "num_ids_4": 103
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(10) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5\\n2 1 1 2 5\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n3\\n4 5 3\\n\\nOutput\\nNO\\n\") == \"NO\"\nassert solution(\"Input\\n2\\n10 10\\n\\nOutput\\nYES\\n\") == \"YES\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\") == \"NO\\n\"\nassert solution(\"2\\n10 10\") == \"YES\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution() == \"15\"\nassert solution() == \"-1\"\nassert solution() == \"233\"",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"233\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n\") == \"3\\n\"\nassert solution(\"30 20 10\\n\") == \"39\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\"\nassert solution(\"3 2 2\\n\") == \"7\"\nassert solution(\"1 100 1\\n\") == \"3\"\nassert solution(\"30 20 10\\n\") == \"39\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(2)) == \"4\"\nassert solution(str(3)) == \"7\"\nassert solution(str(1)) == \"3\"\nassert solution(str(30)) == \"39\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\\n7\\n3\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n30 20 10\\n\") == \"3\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 111
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\\n\") == \"4\\n7\\n3\\n39\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 1 1\\n') == '4\\n'\nassert solution(stdin='3 2 2\\n') == '7\\n'\nassert solution(stdin='1 100 1\\n') == '3\\n'\nassert solution(stdin='30 20 10\\n') == '39\\n'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example.in')) == \"4\\n\"\nassert solution(open('example2.in')) == \"7\\n\"\nassert solution(open('example3.in')) == \"3\\n\"\nassert solution(open('example4.in')) == \"39\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"1\\n3\\n1 1\\n1 1\\n1 2\\n2 4\\n2 3\\n1 1\\n1 1\\n\") == \"NO\"\nassert solution(\"5\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"1\\n3\\n1 1\\n1 1\\n1 2\\n2 4\\n2 3\\n1 1\\n1 1\\n\") == \"NO\"\nassert solution(\"1\\n3\\n1 1\\n1 1\\n1 2\\n2 4\\n2 3\\n1 1\\n1 1\\n\") == \"NO\"\nassert solution(\"1\\n3\\n1 1\\n1 1\\n1 2\\n2 4\\n2 3\\n1 1\\n1 1\\n\") == \"NO\"",
        "num_ids_2": 198,
        "num_ids_4": 396
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES' or solution(input()) == 'NO', \"Invalid input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"NO\"",
        "num_ids_2": 296,
        "num_ids_4": 296
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1''') == 'NO'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\") == \"YES\\nNO\\nYES\\nNO\\nYES\"",
        "num_ids_2": 163,
        "num_ids_4": 163
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES\\nNO\\nYES\\nNO\\nYES\\nYES\\n'",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 163,
        "num_ids_4": 163
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"YES\"\nprint(\"YES\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\") == \"NO\"",
        "num_ids_2": 292,
        "num_ids_4": 584
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n') == '0\\n'\nassert solution('5\\n') == '1\\n'\nassert solution('6\\n') == '1\\n'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\nassert solution(\"6\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 1, \"Expected 1, got {}\".format(solution(5))\nassert solution(6) == 1, \"Expected 1, got {}\".format(solution(6))\nassert solution(3) == 0, \"Expected 0, got {}\".format(solution(3))\nassert solution(1) == 0, \"Expected 0, got {}\".format(solution(1))",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0, \"Input: 3\\nOutput: 0\\n\"\nassert solution(5) == 1, \"Input: 5\\nOutput: 1\\n\"\nassert solution(6) == 1, \"Input: 6\\nOutput: 1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5\n    ()))()\n\"\"\") == \"5\"\nassert solution(\"\"\"\n    3\n    (()\n\"\"\") == \"4\"\nassert solution(\"\"\"\n    2\n    (((\n\"\"\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n()))()\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3\n(()\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\n(((\n\"\"\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5') == '5\\n'\nassert solution('3') == '4\\n'\nassert solution('2') == '0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n())()\\n') == '5'\nassert solution('3\\n(()\\n') == '4'\nassert solution('2\\n(((\\n') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n(()))\\n\", \"5\" == \"5\", \"Error in first example\"\nassert solution(\"3\\n(()\\n\", \"4\" == \"4\", \"Error in second example\"\nassert solution(\"2\\n(((\\n\", \"0\" == \"0\", \"Error in third example\"\n\nresult = \"\"\nfor _ in range(int(stdin.strip())):\n    sequence = stdin.strip().split()\n    s = sequence[0]\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            count += 1\n            count += len(sequence[1:i+1]) % 2\n    result += str(count) + \"\\n\"\n\nprint(result)",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0\n\nfor n in range(1, 101):\n    for s in '()()))(':\n        if (s + '(' * n + ')' * (2 * n - 1)) == s:\n            print(n)\n            break",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5\nassert solution == 4\nassert solution == 0",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\nassert solution(\"5\\n(())()\\n3\\n(())()\\n2\\n(((())\\n0\") == \"5\\n\\n\\n4\\n\\n0\"\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n(()))\\n\", \"5\" == \"5\"\nassert solution(\"3\\n(()\\n\", \"4\" == \"4\"\nassert solution(\"2\\n(((\\n\", \"0\" == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5071) == \"4\", \"Expected output: 4\"\nassert solution(705) == \"1\", \"Expected output: 1\"\nassert solution(1241367) == \"-1\", \"Expected output: -1\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1 1 2 1 2 1 2 1 2'\nassert solution() == '2\\n1 1 1 1 1 1 1 2'\nassert solution() == '2\\n1 1 1 1 2 1 1 2 1'\nassert solution() == '2\\n1 1 1 1 2 1 2 1 1'\nassert solution() == '2\\n1 1 1 2 1 2 1 1 1'",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"8\\naaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"7\\nabcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"5\\nabcde\") == \"1\\n1 1 1 1 1 1 def\"",
        "num_ids_2": 66,
        "num_ids_4": 124
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2 \"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3 \"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacbecfd') == '2\\n1 1 2 1 2 1 2 1 2'\nassert solution('aaabbcbb') == '2\\n1 2 1 2 1 2 1 1'\nassert solution('abcdedc') == '3\\n1 1 1 1 1 2 3'\nassert solution('abcde') == '1\\n1 1 1 1 1 1'",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcde\") == \"11111\"\nassert solution(\"abcabc\") == \"11111\"\nassert solution(\"abcacbe\") == \"11111\"\nassert solution(\"abacbec\") == \"11111\"\nassert solution(\"abacbe\") == \"11111\"\nassert solution(\"abacbb\") == \"11111\"\nassert solution(\"abacba\") == \"11111\"\nassert solution(\"abacae\") == \"11111\"\nassert solution(\"abacad\") == \"11111\"\nassert solution(\"abcdeab\") == \"11111\"\nassert solution(\"abcdeba\") == \"11111\"\nassert solution(\"abcdea\") == \"11111\"\nassert solution(\"abcdead\") == \"11111\"\nassert solution(\"abacbecd\") == \"11111\"\nassert solution(\"abacbecf\") == \"11111\"\nassert solution(\"abacbecg\") == \"11111\"\nassert solution(\"abacbecj\") == \"11111\"\nassert solution(\"abacbeck\") == \"11111\"\nassert solution(\"abacbecl\") == \"11111\"\nassert solution(\"abacbecm\") == \"11111\"\nassert solution(\"abacbecn\") == \"11111\"\nassert solution(\"abacbecp\") == \"11111\"\nassert solution(\"abacbecq\") == \"11111\"\nassert solution(\"abacbecr\") == \"11111\"\nassert solution(\"abacbecs\") == \"11111\"\nassert solution(\"abacbecu\") == \"11111\"\nassert solution(\"abacbecv\") == \"11111\"\nassert solution(\"abacbecw\") == \"11111\"\nassert solution(\"abacbecx\") == \"11111\"\nassert solution(\"abacbecy\") == \"11111\"\nassert solution(\"abacbecz\") == \"11111\"\nassert solution(\"abacbead\") == \"11111\"\nassert solution(\"abacbeae\") == \"11111\"\nassert solution(\"abacbeaf\") == \"11111\"\nassert solution(\"abacbeag\") == \"11111\"\nassert solution(\"abacbeah\") == \"11111\"\nassert solution(\"abacbeai\") == \"11111\"\nassert solution(\"abacbeaj\") == \"11111\"\nassert solution(\"abacbeak\") == \"11111\"\nassert solution(\"abacbeal\") == \"11111\"\nassert solution(\"abacbeam\") == \"11111\"\nassert solution(\"abacbean\") == \"11111\"\nassert solution(\"abacbeao\") == \"11111\"\nassert solution(\"abacbeap\") == \"11111\"\nassert solution(\"abacbeaq\") == \"11111\"\nassert solution(\"abacbear\") == \"11111\"\nassert solution(\"abacbeas\") == \"11111\"\nassert solution(\"abacbeat\") == \"11111\"\nassert solution(\"abacbeau\") == \"11111\"\nassert solution(\"abacbeav\") == \"11111\"\nassert solution(\"abacbeaw\") == \"11111\"\nassert solution(\"abacbeax\") == \"11111\"\nassert solution(\"abacbeay\") == \"11111\"\nassert solution(\"abacbeaz\") == \"11111\"\nassert solution(\"abacbea\") == \"11111\"\nassert solution(\"abacbeab\") == \"11111\"\nassert solution(\"abacbeac\") == \"11111\"\nassert solution(\"abacbead\") == \"11111\"\nassert solution(\"abacbeae\") == \"11111\"\nassert solution(\"abacbeaf\") == \"11111\"\nassert solution(\"abacbeag\") == \"11111\"\nassert solution(\"abacbe",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == expected_output, f\"The given code is incorrect. Expected output: {expected_output}, but got: {solution(stdin: str)}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 57,
        "num_ids_4": 108
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\na\\naba\\nabab\\nba\\nabacaba\") == \"YES\\na\\ba\\abab\\nabacaba\"\nassert solution(\"5\\na\\naba\\nabab\\nba\\nabacaba\") == \"NO\"\nassert solution(\"3\\nqwerty\\nqwerty\\nqwerty\") == \"YES\\nqwerty\\nqwerty\\nqwerty\"",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"YES\"\nassert solution(\"abcabcabc\") == \"YES\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"aba\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"NO\"\nassert solution(\"aba\") == \"NO\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\na\\nba\\nabab\\n\"\nassert solution() == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution doesn't match the expected output.\\nInput: {input()}\\nOutput: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\"\nassert solution(input()) == \"NO\\n\"\nassert solution(input()) == \"YES\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 134
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\na\\nba\\naba\\nabab\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"YES\\na\\nb\\nc\\nd\"\nassert solution(\"ba\") == \"NO\"\nassert solution(\"aba\") == \"YES\\na\\nb\\nc\\nd\"\nassert solution(\"abacaba\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\\nw\\nx\\ny\\nz\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['a', 'aba', 'abacaba', 'ba', 'aba', 'abab']) == 'YES\\na\\nba\\nabacaba\\n'\nassert solution(['a', 'abacaba', 'ba', 'aba', 'abab']) == 'NO'\nassert solution(['qwerty', 'qwerty', 'qwerty']) == 'YES\\nqwerty\\nqwerty\\nqwerty'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\\n\"\nassert solution(\"5\\na\\nabacaba\\nba\\naba\\nabab\\n\") == \"NO\\n\"\nassert solution(\"3\\nqwerty\\nqwerty\\nqwerty\\n\") == \"YES\\nqwerty\\nqwerty\\nqwerty\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 111
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\\n\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5\\n'\nassert solution('5 2\\n3 1 2 1 3') == '0\\n'\nassert solution('5 100\\n12 34 55 43 21') == '5\\n'",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5\\n'\nassert solution('5 2\\n3 1 2 1 3') == '0\\n'\nassert solution('5 100\\n12 34 55 43 21') == '5\\n'",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution {solution(input())} should be {output()}, but it's {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(8 4\n4 2 3 1 5 1 6 4) == 5\n\nassert solution(5 2\n3 1 2 1 3) == 0\n\nassert solution(5 100\n12 34 55 43 21) == 5",
        "num_ids_2": 14,
        "num_ids_4": 23
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\"\nprint(\"pass\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\nassert solution(\"10 65\\n7 89 10 54 32\") == \"0\"\nassert solution(\"1000 33\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 111
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\\n\", \"The solution should be 12.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 12\nassert solution(5) == 12\nassert solution(100) == 3218\nassert solution(5, 7) == 14\nassert solution(8, 6) == 12\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\", \"The correct answer is 12.\"\nassert solution(\"3 9\") == \"14\", \"The correct answer is 14.\"\nassert solution(\"9 3\") == \"14\", \"The correct answer is 14.\"\nassert solution(\"3 6\") == \"12\", \"The correct answer is 12.\"\nassert solution(\"506 2708\") == \"3218\", \"The correct answer is 3218.\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 4) == \"12\"\nassert solution(3, 9) == \"14\"\nassert solution(9, 3) == \"14\"\nassert solution(3, 6) == \"12\"\nassert solution(506, 2708) == \"3218\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\", \"The solution should return 12\"\n\nassert solution(stdin) == \"14\", \"The solution should return 14\"\n\nassert solution(stdin) == \"14\", \"The solution should return 14\"\n\nassert solution(stdin) == \"12\", \"The solution should return 12\"\n\nassert solution(stdin) == \"3218\", \"The solution should return 3218\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 4) == 12, \"Expected 12, got {}\".format(solution(4, 4))\nassert solution(3, 9) == 14, \"Expected 14, got {}\".format(solution(3, 9))\nassert solution(3, 6) == 12, \"Expected 12, got {}\".format(solution(3, 6))\nassert solution(506, 2708) == 3218, \"Expected 3218, got {}\".format(solution(506, 2708))",
        "num_ids_2": 62,
        "num_ids_4": 138
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcdedc\") == \"YES\\n00000\\nded\"\nassert solution(\"aaabbcbb\") == \"YES\\n01011011\\nbb\"\nassert solution(\"abcacbecfd\") == \"NO\"\nassert solution(\"aabbcc\") == \"NO\"\nassert solution(\"aabbccddeeffgg\") == \"NO\"\n",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9') == 'YES\\n001010101'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES\\n00000'",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\\n00000def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 34,
        "num_ids_4": 61
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacbecfd') == 'YES\\n001010101'\nassert solution('aaabbcbb') == 'YES\\n01011011'\nassert solution('abcdedc') == 'NO'\nassert solution('abcde') == 'YES\\n00000'",
        "num_ids_2": 46,
        "num_ids_4": 76
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"YES\\n001010101\"\nassert solution(\"8\") == \"YES\\n01011011\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\\n00000def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\\naaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000\"\nassert solution(\"1\\n123\") == \"YES\\n011100000\"\nassert solution(\"2\\nabc\") == \"YES\\n0100000\"\nassert solution(\"3\\nabcd\") == \"YES\\n01100001\"\nassert solution(\"4\\nabcdef\") == \"YES\\n01101010\"\nassert solution(\"5\\nabcdef\") == \"YES\\n01101010\"",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abcdedc') == \"NO\"\nassert solution('aaabbcbb') == \"YES\"\nassert solution('abcacbecfd') == \"YES\"\nassert solution('a') == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9') == 'YES\\n001010101'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES\\n00000def solution(stdin: str) -> str:\\npass'\n",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9abacbecfd') == \"YES\\n001010101\"\nassert solution('8aaabbcbb') == \"YES\\n01011011\"\nassert solution('7abcdedc') == \"NO\"\nassert solution('5abcde') == \"YES\\n00000\"\n",
        "num_ids_2": 48,
        "num_ids_4": 80
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(8) == \"YES\\n01011011\"\nassert solution(5) == \"YES\\n00000\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 3\") == \"25\"\nassert solution(\"4 4\") == \"25\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"6 6\") == \"26\"\nassert solution(\"1 1\") == \"25\"\nassert solution(\"-1 2\") == -1",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 2\") == \"25\"\nassert solution(\"4 2\") == \"25\"\nassert solution(\"2 2.5\") == \"25\"\nassert solution(\"2 1.5\") == \"25\"\nassert solution(\"2.5 2\") == \"25\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == -1\nassert solution('0 1') == -1\nassert solution('10 10') == '25'\nassert solution('5 10') == '25'\nassert solution('100 100') == '25'\nassert solution('50 50') == '25'\nassert solution('0 0') == -1\nassert solution('10 5') == -1\nassert solution('5 0') == -1",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'2 2') == '25'\nassert solution(b'3 4') == '25'\nassert solution(b'1 2') == -1\nassert solution(b'3 1') == -1\nassert solution(b'5 5') == -1\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 2\") == \"25\"\nassert solution(\"5 1\") == \"25\"\nassert solution(\"10 5\") == \"-1\"\nassert solution(\"1 2\") == \"25\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 4\") == -1\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '25'\nassert solution(\"4 5\") == '25'\nassert solution(\"6 8\") == '26'\nassert solution(\"2 2\") == '25'\nassert solution(\"100 100\") == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 4\") == \"25\"\nassert solution(\"10 12\") == \"-1\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"0 5\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 2\") == \"25\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"100 100\") == \"250\"\nassert solution(\"10 1\") == \"50\"\nassert solution(\"2 5\") == \"25\"",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"1 3\") == 3\nassert solution(\"100 100\") == 100\nassert solution(\"50 50\") == 50\nassert solution(\"1 3\") == 3\nassert solution(\"50 25\") == 25\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == 'YES\\n1 2 4 5 6 8'\nassert solution(stdin=input()) == 'NO'\nassert solution(stdin=input()) == 'YES\\n1'\nassert solution(stdin=input()) == 'NO'",
        "num_ids_2": 37,
        "num_ids_4": 64
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"YES\\n1 2 4 5 6\"\nassert solution(10) == \"NO\"\nassert solution(15) == \"YES\\n1\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 2 4 5 6 ",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1) == \"YES\\n1\"\nassert solution(2, 1) == \"YES\\n1\"\nassert solution(1, 2) == \"YES\\n1 2\"\nassert solution(2, 2) == \"YES\\n2\"\nassert solution(2, 3) == \"NO\"\nassert solution(3, 3) == \"YES\\n1 2 3\"\nassert solution(3, 4) == \"YES\\n1 2 3 4\"\nassert solution(4, 4) == \"YES\\n1 2 3 4\"\nassert solution(4, 5) == \"YES\\n1 2 3 4\"\nassert solution(5, 5) == \"YES\\n1 2 3 4\"\nassert solution(6, 6) == \"YES\\n1 2 3 4\"\nassert solution(6, 7) == \"NO\"\nassert solution(7, 7) == \"YES\\n1 2 3 4\"\nassert solution(7, 8) == \"NO\"\nassert solution(8, 8) == \"YES\\n1 2 3 4\"\nassert solution(8, 9) == \"NO\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Error: {expected}!= {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is {solution(stdin)} but expected {expected}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '5'\nassert solution(stdin) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3\\n'",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == 3\nassert solution(5, 20) == 5\nassert solution(3, 2) == 3\nassert solution(3, 299) == 3\nassert solution(3, -2) == 3\nassert solution(3, -300) == 3",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"\nassert solution(\"\") == \"NO\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n10\"",
        "num_ids_2": 56,
        "num_ids_4": 97
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected\nprint(\"YES\")\nprint(*result)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nprint(\"YES\")\nprint(\"1 2 2 1\")\nprint(\"8 2 2 8\")\nprint(\"8 2 2 8\")\nprint(\"1 2 2 1\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(stdin=\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(stdin=\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\nassert solution(stdin=\"1\\n10\\n\") == \"YES\\n10\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 212
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"YES\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"NO\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\") == \"NO\"\nassert solution(\"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"",
        "num_ids_2": 56,
        "num_ids_4": 184
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.test_cases[0]) == solution.expected_answers[0]\nassert solution(solution.test_cases[1]) == solution.expected_answers[1]\nassert solution(solution.test_cases[2]) == solution.expected_answers[2]\nassert solution(solution.test_cases[3]) == solution.expected_answers[3]\nassert solution(solution.test_cases[4]) == solution.expected_answers[4]\nassert solution(solution.test_cases[5]) == solution.expected_answers[5]\nassert solution(solution.test_cases[6]) == solution.expected_answers[6]\nassert solution(solution.test_cases[7]) == solution.expected_answers[7]\nassert solution(solution.test_cases[8]) == solution.expected_answers[8]\nassert solution(solution.test_cases[9]) == solution.expected_answers[9]\nassert solution(solution.test_cases[10]) == solution.expected_answers[10]",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 135
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\", \"Expected 'YES' but got '{}'\".format(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\nassert solution(\"2 3\\n1 2\\n4 5\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\" # Correct output",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\", \"Expected YES, but got {}\".format(solution(stdin))\nassert solution(stdin) == \"YES\", \"Expected YES, but got {}\".format(solution(stdin))\nassert solution(stdin) == \"YES\", \"Expected YES, but got {}\".format(solution(stdin))",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Test failed for input: {input}, expected output: {expected_output}, actual output: {solution(input)}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(stdin) == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(stdin) == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n[0, 1, 0, 2, 2, 0, 3]\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0\\n'",
        "num_ids_2": 84,
        "num_ids_4": 127
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nprint(\"All tests pass\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"test\") == 5\nassert solution(\"tst\") == 5\nassert solution(\"tt\") == 5\nassert solution(\"et\") == 5\nassert solution(\"\") == 0",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"test\") == 3\nassert solution(\"tst\") == 0\nassert solution(\"tt\") == 3\nassert solution(\"et\") == 0\nassert solution(\"contest\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"abcabc\") == 4",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test Case 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test Case 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test Case 3\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1.200000) == \"3 2\", \"Test 1\"\nassert solution(2.572479) == \"10 3\", \"Test 2\"\nassert solution(4.024922) == \"9 9\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2', \"Solution is incorrect\"\nassert solution('2.572479') == '10 3', \"Solution is incorrect\"\nassert solution('4.024922') == '9 9', \"Solution is incorrect\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test Case 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test Case 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test Case 3\"",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1 failed\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2 failed\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1: Correct output for input 1.200000\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2: Correct output for input 2.572479\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3: Correct output for input 4.024922\"",
        "num_ids_2": 77,
        "num_ids_4": 115
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1.2) == \"3 2\"\nassert solution(2.572479) == \"10 3\"\nassert solution(4.024922) == \"9 9\"",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 222
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 222
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(8) == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 3 3\\n\"\n) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\n\nassert solution(\n    \"6 2 3\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"10 4 3\\n\"\n) == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\n\nassert solution(\n    \"8 5 3\\n\"\n) == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"Invalid test case\"\nassert solution(\"3 3 3\") == \"101100\", \"Invalid test case\"\nassert solution(\"5 3 6\") == \"01010100\", \"Invalid test case\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"1 1 2\") == \"0011\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Output does not match expected output.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1100\"\nassert solution(2) == \"110100\"\nassert solution(3) == \"101100\"\nassert solution(4) == \"110010\"\nassert solution(5) == \"100110\"\nassert solution(6) == \"011001\"\nassert solution(7) == \"001101\"\nassert solution(8) == \"010011\"\nassert solution(9) == \"001011\"\nassert solution(10) == \"10110100\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 1') == '1100', 'The correct answer for the first example should be \"1100\".'\nassert solution('3 3 3') == '101100', 'The correct answer for the second example should be \"101100\".'\nassert solution('5 3 6') == '01010100', 'The correct answer for the third example should be \"01010100\".'",
        "num_ids_2": 72,
        "num_ids_4": 114
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ab\") == \"YES\\nacbbac\"\nassert solution(\"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"ac\") == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"ab\") ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ab') == 'acbbac'\nassert solution('bc') == 'cacbacbab'\nassert solution('aa') == 'cacbacbab'\nassert solution('cb') == 'abc'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nab\\nbc\") == \"YES\\nacbbac\"\nassert solution(\"3\\naa\\nbc\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\") == \"YES\\nabc\"",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nacbbac\\nNO\\nNO\\nYES\\nacbacba\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ab') == 'YES\\nacbbac'\nassert solution('bc') == 'YES\\nacbbac'\nassert solution('aa') == 'YES\\ncacbacbab'\nassert solution('cb') == 'YES\\nabc'\nassert solution('ac') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"YES\\nacbbac\"\nassert solution(1) == \"YES\\nabc\"\nassert solution(2) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-2 1\") == \"3 1 2 \"\nassert solution(\"1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"-1 2 2\") == \"-1\"",
        "num_ids_2": 40,
        "num_ids_4": 54
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '3 1 2 4 5'\nassert solution(4) == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output: expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n-2 1\\n') == '-1'\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 47,
        "num_ids_4": 67
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}\\nGot: {solution(input())}\"\n\nn = int(input())\nq = list(map(int, input().split()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution should return {expected_output}, but returned {solution(input())} instead.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 1\\n\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect for the given examples.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"The correct answer is 1.\"\nassert solution() == 2, \"The correct answer is 2.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"Output\\n1\\n\\n\\n\"\nassert solution(\"Input\\n5\\n2 2 2 3 3\\n\") == \"Output\\n2\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '1\\n'\nassert solution('5\\n2 2 2 3 3') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', 'Example 1 should return 1.'\nassert solution() == '2', 'Example 2 should return 2.'\nassert solution() == '1', 'Example 3 should return 1.'\nassert solution() == '2', 'Example 4 should return 2.'\nassert solution() == '1', 'Example 5 should return 1.'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"The solution for N = {input()} is incorrect. Expected: {output()}, got: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n(1,1) can be reached in five moves.\\n\"\nprint(solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"  # Takahashi can reach a square with 10 in 5 moves\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\"\nprint(\"All tests passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The test case failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n22 334\\n119 226\") == \"22 334\"",
        "num_ids_2": 54,
        "num_ids_4": 138
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(319) == \"119 226\", \"Expected 119 226, but got {}\".format(solution(319))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\") == \"119 226\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 129
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\n182 103 34\") == \"119 226\"",
        "num_ids_2": 54,
        "num_ids_4": 121
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 1 1 1\") == \"4\"",
        "num_ids_2": 57,
        "num_ids_4": 75
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your function is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3\\n4 5'\n\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n1 1'\n\nassert solution('4\\n1 1 1 1') == '4\\n4 4\\n1 1\\n2 2\\n3 3'",
        "num_ids_2": 90,
        "num_ids_4": 129
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 89,
        "num_ids_4": 130
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"11\") == \"2\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected: '{expected}', Received: '{solution(input())}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1 2 2 1 5 3') == '3\\n7 7\\n2 3\\n4 5'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\"",
        "num_ids_2": 85,
        "num_ids_4": 119
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\nYES\\n\\nInput\\n3\\n3 1 2\\n\\nOutput\\nNO\") == \"YES\\nNO\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\\n\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nprint(\"NO\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3\\n1 2 3\\n') == 'YES\\n'\nassert solution('Input\\n3\\n3 1 2\\n') == 'NO\\n'\n\nsolution('Input\\n3\\n1 2 3\\n') #=> \"YES\\n\"\nsolution('Input\\n3\\n3 1 2\\n') #=> \"NO\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3\\n2 1 3\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n3\\n3 1 2\\n3\\n2 1 3\\n3\\n1 2 3\\n\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 103
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\", \"Your solution is incorrect.\"\nassert solution() == \"NO\", \"Your solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"1\\n1\") == \"YES\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\"\nassert solution(3) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abcdef') == 'abdcef'\nassert solution('abdcfe') == 'abdfec'\nassert solution('abcd') == 'abcd'\nassert solution('') == '0'\nassert solution('abcdac') == '0'",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5 \"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nabcdef\\nabdfec') == 4\nassert solution('4\\nabcd\\naccd') == -1",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n3 5 4 5\\n-1\" # expected output\nassert solution() == \"4\\n3 5 4 5\\n-1\" # expected output",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n\nfrom typing import List\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nabcdef\\nabdfec') == 4\nassert solution('4\\nabcd\\naccd') == -1",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcdef\") == \"abdcef\"\nassert solution(\"abdfec\") == \"abdfec\"\nassert solution(\"abcd\") == \"abdcfe\"\nassert solution(\"accd\") == \"abdcfe\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcde\") == 4\nassert solution(\"abcded\") == -1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nba\\na\\nab\\na\\nabab\\nab\\nab\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\na\\na\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 51,
        "num_ids_4": 65
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"PS\"\nassert solution(\"ababa\") == \"SPSP\"\nassert solution(\"aa\") == \"PS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"abc\") == \"PS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"ac\") == \"SP\"\nassert solution(\"ca\") == \"SP\"\nassert solution(\"aa\") == \"PS\"\nassert solution(\"a\") == \"PS\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SPPSPSPS\", \"Solution not correct\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"SPPSPSPS\"\nassert solution(open('input2.txt', 'r').read()) == \"PPSS\"\nassert solution(open('input3.txt', 'r').read()) == \"PS\"",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ba\") == \"SPPSPSPS\", \"Test case 1 failed\"\nassert solution(\"a\") == \"PPSS\", \"Test case 2 failed\"\nassert solution(\"abab\") == \"SPPSPSPS\", \"Test case 3 failed\"\nassert solution(\"aaba\") == \"PSPS\", \"Test case 4 failed\"\nassert solution(\"baba\") == \"SSPP\", \"Test case 5 failed\"\nassert solution(\"ab\") == \"PPSS\", \"Test case 6 failed\"\nassert solution(\"aba\") == \"PSPS\", \"Test case 7 failed\"\nassert solution(\"abba\") == \"SPSS\", \"Test case 8 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"SPSS\", \"Solution incorrect for example.in\"\nassert solution(open(\"example.in\", \"r\")) == \"PS\", \"Solution incorrect for example.in\"\nassert solution(open(\"example.in\", \"r\")) == \"PSPS\", \"Solution incorrect for example.in\"",
        "num_ids_2": 51,
        "num_ids_4": 78
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nabba\\nbaba\\nab\\naba\\naba\\nba\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 62,
        "num_ids_4": 76
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abab\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"aa\") == \"PSPS\"\nassert solution(\"aaaba\") == \"SPPSPSPS\"\nassert solution(\"aaba\") == \"PSPS\"\nassert solution(\"aba\") == \"PPSS\"\nassert solution(\"ab\") == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nab\\nabba\\nab\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 56,
        "num_ids_4": 72
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\nba\\na\\nabab\\na\\naba\\nbaba\\nab\\naba\\n') == 'SPPSPSPS'\nassert solution('3\\na\\na\\na\\na') == 'PPSS'\nassert solution('2\\na\\nc\\n') == 'PS'",
        "num_ids_2": 56,
        "num_ids_4": 72
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\", \"Expected output: 1\"\nassert solution(\"3 2 1\") == \"2\", \"Expected output: 2\"\nassert solution(\"1 1 0\") == \"0\", \"Expected output: 0\"\nassert solution(\"0 0 0\") == \"0\", \"Expected output: 0\"\nassert solution(\"5 5 5\") == \"1\", \"Expected output: 1\"",
        "num_ids_2": 47,
        "num_ids_4": 89
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 1, \"The output should be 1, not {}.\".format(solution(input()))\nprint(1)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"The output should be 1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\nActual output: {}\".format(solution(stdin))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 1, \"The output should be 1.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the number of integers: \")) == 1\nprint(1)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\n\nassert solution(\"3 6 9 12 15\") == \"0\"\n\nassert solution(\"5 10 15 20 25\") == \"0\"\n\nassert solution(\"2 2 2 2 2\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"answer\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"0\"\nassert solution(5) == \"0\"\nassert solution(10) == \"2\"\nassert solution(15) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(4) == 0\nassert solution(5) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', got: '{solution(input())}'\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input: {input_data}\\nExpected output: {expected_output}\\nActual output: {solution(input_data)}\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(5) == 0\nassert solution(4) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == 2\nassert solution(\"5\\n1 1 0 0 0\") == 0\nassert solution(\"4\\n1 1 1 1\") == 0",
        "num_ids_2": 51,
        "num_ids_4": 69
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\\n\"\nassert solution(\"6\\n6\\n90\\n12\\n18\\n30\\n18\\n\") == \"4\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n6 90 12 18 30 18\") == \"4\"\n\nfrom typing import List",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"The function should return 1, but it returned {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test Failed: The output {output()} is incorrect. Please check the code for the function.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(['5', '1', '2', '3', '4', '5']) == 1\nassert solution(['6', '90', '12', '18', '30', '18']) == 4",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, '1 2 3 4 5') == 1\nassert solution(6, '6 90 12 18 30 18') == 4",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 4, 6, 2, 10]) == 2\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n') == '2\\n'\nassert solution('1\\n100\\n') == '1\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2 4 3 3 2') == '2\\n', \"Test Case 1 Failed\"\nassert solution('1\\n100') == '1\\n', \"Test Case 2 Failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == 2",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, got: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\", \"1 should be equal to 2\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(stdin))))) == 2",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\\n\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 2) == 3\nassert solution(5, 3) == 2\nassert solution(5, 10) == -1\nassert solution(10, 3) == 3",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\\n\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"The output for the given input should be {expected}, but it is {solution}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == 3\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == 2\n\nassert solution('''\n5 10\n0 0 0 0 0\n''') == -1\n\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == 3",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"The output should be 3.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"The expected output is {expected}, but got {solution(input())} instead.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3\\n'\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2\\n'\n\nassert solution('''\n5 10\n0 0 0 0 0\n''') == '-1\\n'\n\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\"\nassert solution(5) == \"2\"\nassert solution(10) == \"-1\"\nassert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\") == \"3\\n\", \"The output is incorrect. Please check the solution.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"3\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"10\") == \"0\\n\", \"Test case 2 failed\"\nassert solution(\"11\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"12\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"13\") == \"12\\n\", \"Test case 5 failed\"\nassert solution(\"14\") == \"12\\n\", \"Test case 6 failed\"\nassert solution(\"15\") == \"15\\n\", \"Test case 7 failed\"\nassert solution(\"16\") == \"15\\n\", \"Test case 8 failed\"\nassert solution(\"17\") == \"18\\n\", \"Test case 9 failed\"\nassert solution(\"18\") == \"18\\n\", \"Test case 10 failed\"\nassert solution(\"19\") == \"20\\n\", \"Test case 11 failed\"\nassert solution(\"20\") == \"20\\n\", \"Test case 12 failed\"\nassert solution(\"21\") == \"22\\n\", \"Test case 13 failed\"\nassert solution(\"22\") == \"22\\n\", \"Test case 14 failed\"\nassert solution(\"23\") == \"25\\n\", \"Test case 15 failed\"\nassert solution(\"24\") == \"25\\n\", \"Test case 16 failed\"\nassert solution(\"25\") == \"25\\n\", \"Test case 17 failed\"\nassert solution(\"26\") == \"27\\n\", \"Test case 18 failed\"\nassert solution(\"27\") == \"27\\n\", \"Test case 19 failed\"\nassert solution(\"28\") == \"30\\n\", \"Test case 20 failed\"\nassert solution(\"29\") == \"30\\n\", \"Test case 21 failed\"\nassert solution(\"30\") == \"30\\n\", \"Test case 22 failed\"\nassert solution(\"31\") == \"33\\n\", \"Test case 23 failed\"\nassert solution(\"32\") == \"33\\n\", \"Test case 24 failed\"\nassert solution(\"33\") == \"33\\n\", \"Test case 25 failed\"\nassert solution(\"34\") == \"36\\n\", \"Test case 26 failed\"\nassert solution(\"35\") == \"36\\n\", \"Test case 27 failed\"\nassert solution(\"36\") == \"36\\n\", \"Test case 28 failed\"\nassert solution(\"37\") == \"40\\n\", \"Test case 29 failed\"\nassert solution(\"38\") == \"40\\n\", \"Test case 30 failed\"\nassert solution(\"39\") == \"40\\n\", \"Test case 31 failed\"\nassert solution(\"40\") == \"40\\n\", \"Test case 32 failed\"\nassert solution(\"41\") == \"43\\n\", \"Test case 33 failed\"\nassert solution(\"42\") == \"43\\n\", \"Test case 34 failed\"\nassert solution(\"43\") == \"43\\n\", \"Test case 35 failed\"\nassert solution(\"44\") == \"46\\n\", \"Test case 36 failed\"\nassert solution(\"45\") == \"46\\n\", \"Test case 37 failed\"\nassert solution(\"46\") == \"46\\n\", \"Test case 38 failed\"\nassert solution(\"47\") == \"50\\n\", \"Test case 39 failed\"\nassert solution(\"48\") == \"50\\n\", \"Test case 40 failed\"\nassert solution(\"49\") == \"50\\n\", \"Test case 41 failed\"\nassert solution(\"50\") == \"50\\n\", \"Test case 42 failed\"\nassert solution(\"51\") == \"53\\n\", \"Test case 43 failed\"\nassert solution(\"52\") == \"53\\n\", \"Test case 44 failed\"\nassert solution(\"53\") == \"53\\n\", \"Test case 45 failed\"\nassert solution(\"54\") == \"56\\n\", \"Test case 46 failed\"\nassert solution(\"55\") == \"56\\n\", \"Test case 47 failed\"\nassert solution(\"56\")",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(1000000000) == \"1253\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(100) == \"3\\n\"\nassert solution(12) == \"0\\n\"\nassert solution(15) == \"3\\n\"\nassert solution(1) == \"0\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3', 'Incorrect Output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"15\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"6\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"8\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n(((())\\n\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n) \\n\") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('()') == 3\nassert solution('()()()') == 0\nassert solution('()()()()') == 0\nassert solution('()()()()()') == 0\nassert solution('()()()()()()') == 0\nassert solution('()()()()()()()') == 0\nassert solution('()()()()()()()()') == 0\nassert solution('()()()()()()()()()()') == 0\nassert solution('()()()()()()()()()()()()()') == 0",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == 3\nassert solution(6) == 3\nassert solution(6) == 3\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6\n(((())\n\"\"\") == 3\n\nassert solution(\"\"\"6\n()()()\n\"\"\") == 0\n\nassert solution(\"\"\"1\n)\n\"\"\") == 0\n\nassert solution(\"\"\"8\n)))(((((\n\"\"\") == 0",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Invalid Test Case\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == 3\nassert solution(6) == 3\nassert solution(6) == 3\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n(((())\\n\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n) \\n\") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aabbcc\") == 2\nassert solution(\"cccccd\") == 0\nassert solution(\"abc\") == 1\nassert solution(\"aa\") == 1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == solution(solution)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"bb\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Test Case 1\"\nassert solution(\"3 2 1 2\") == \"3\", \"Test Case 2\"\nassert solution(\"2 3 1 1\") == \"3\", \"Test Case 3\"\nassert solution(\"1 2 1 2\") == \"4\", \"Test Case 4\"\nassert solution(\"4 2 1 2\") == \"2\", \"Test Case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 2 2\") == \"3\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"3\"\nassert solution(\"1 1 1 3\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Test failed\"\n\nassert solution(\"1 5 1 2\") == \"3\", \"Test failed\"\n\nassert solution(\"5 10 5 15\") == \"5\", \"Test failed\"\n\nassert solution(\"-100 100 100 100\") == \"1000000000000\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 102
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n6\\n9 1 4 4 6 7\") == \"2\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 7 7\") == \"2\"\nassert solution(\"7\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"1\\n9 1 4 4 6 7\") == \"2\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"3\"\nassert solution(\"3\\n10\\n10\\n10\\n10\\n10\") == \"4\"\nassert solution(\"6\\n10\\n10\\n10\\n10\\n10\\n10\") == \"6\"",
        "num_ids_2": 48,
        "num_ids_4": 112
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output should be 2.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"7\\n1 1 1 1 1 1\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nd_1 d_2... d_N\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\n\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 2 3\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 2 3\\n\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 2 3\\n4\") == \"3\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 2 3\\n4 5\") == \"2\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 2 3\\n4 5 6\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 102
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\\n\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('4 16 20 24 28 32 36') == '2'\nassert solution('10000 10000 10000 10000') == '0'",
        "num_ids_2": 69,
        "num_ids_4": 101
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"The solution is incorrect. Please check the provided example and provide the correct solution.\"\nfor test_case in test_cases:\n    assert solution(test_case) == expected_output, f\"Test case {test_case} is incorrect. Please provide the correct output.\"\n\nfor input_string, output_string, expected_output in test_cases:\n    print(f\"For input {input_string}, the output is {output_string}.\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"10 5 20 15\\n5 6 7 8\\n12 3 18 23\") == \"4\"\nassert solution(\"15 0 20 25\\n10 5 15 20\\n20 20 25 15\") == \"3\"",
        "num_ids_2": 81,
        "num_ids_4": 125
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\nassert solution(\"15\\n15\\n15\\n15\\n15\\n15\\n15\\n15\") == \"3\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('10 6 12 18 24 30 36') == '6'\nassert solution('1000 500 250 500 750 1000') == '2'\nassert solution('5 30 15 25 40 55 70') == '1'",
        "num_ids_2": 69,
        "num_ids_4": 131
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"15 16 17 18\\n20 21 22 23\") == \"3\"\nassert solution(\"10 20 10 15\\n20 20 15 10\") == \"2\"\nassert solution(\"0 0 0 0\\n0 0 0 0\") == \"1\"\n",
        "num_ids_2": 74,
        "num_ids_4": 132
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"4 20 15 20 24 25 23\") == \"5\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"8 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"4\"\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"4\\n5 6 7 10\") == \"1\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"4\\n5 6 7 10\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 64,
        "num_ids_4": 114
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\", \"Incorrect output.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Got '{solution(stdin=input())}', expected '{expected}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\\n\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5\\n2 4 8 3 6\\n\\nOutput\\n1 2\\n\\nInput\\n5\\n5 2 11 3 7\\n\\nOutput\\n2 4\\n\\nInput\\n6\\n2 5 10 1 10 2\\n\\nOutput\\n1 4\") == \"Output\\n1 2\\n\\nInput\\n5\\n5 2 11 3 7\\n\\nOutput\\n2 4\\n\\nInput\\n6\\n2 5 10 1 10 2\\n\\nOutput\\n1 4\"\n",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"1 4\"\nassert solution() == \"2 4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == \"1 2\\n2 4\\n\"\nassert solution(read_input()) == \"1 4\\n\"\nassert solution(read_input()) == \"2 4\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\\n\", \"Test 1 failed\"\nassert solution() == \"2 4\\n\", \"Test 2 failed\"\nassert solution() == \"1 4\\n\", \"Test 3 failed\"\nassert solution() == \"1 2\\n\", \"Test 4 failed\"\nassert solution() == \"2 4\\n\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n8\\n3\\n6\\n5\\n5\\n11\\n3\\n7\\n2\\n10\\n1\\n10\\n2\\n1\\n4\\n5\\n2\\n10\\n1\\n10\\n2\\n1\") == \"1 2\\n\", \"Test 1\"\nassert solution(\"2\\n4\\n8\\n3\\n6\\n5\\n5\\n11\\n3\\n7\\n2\\n10\\n1\\n10\\n2\\n1\\n4\\n5\\n2\\n10\\n1\\n10\\n2\\n1\") == \"2 4\\n\", \"Test 2\"\nassert solution(\"2\\n5\\n11\\n3\\n7\\n2\\n10\\n1\\n10\\n2\\n1\\n4\\n5\\n2\\n10\\n1\\n10\\n2\\n1\") == \"1 4\\n\", \"Test 3\"\n\nsolution(\"2\\n5\\n11\\n3\\n7\\n2\\n10\\n1\\n10\\n2\\n1\\n4\\n5\\n2\\n10\\n1\\n10\\n2\\n1\")",
        "num_ids_2": 186,
        "num_ids_4": 264
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2\\n'\nassert solution('5\\n5 2 11 3 7') == '2 4\\n'\nassert solution('6\\n2 5 10 1 10 2') == '1 4\\n'",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '1 2'\nassert solution(5) == '2 4'\nassert solution(6) == '1 4'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n2 4 8 3 6\\n\\nOutput\\n1 2\\n\\nInput\\n5\\n5 2 11 3 7\\n\\nOutput\\n2 4\\n\\nInput\\n6\\n2 5 10 1 10 2\\n\\nOutput\\n1 4\") == \"1 2\\n2 4\\n1 4\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"021\"\nassert solution(6) == \"001122\"\nassert solution(6) == \"211200\"\nassert solution(6) == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120110\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, \"121\") == \"021\"\nassert solution(6, \"000000\") == \"001122\"\nassert solution(6, \"211200\") == \"211200\"\nassert solution(6, \"120110\") == \"120120\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"\n",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n121') == '021'\nassert solution('6\\n000000') == '001122'\nassert solution('6\\n211200') == '211200'\nassert solution('6\\n120110') == '120120'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\\n\"\nassert solution(\"6\\n000000\\n\") == \"001122\\n\"\nassert solution(\"6\\n211200\\n\") == \"211200\\n\"\nassert solution(\"6\\n120110\\n\") == \"120120\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('021') == '021'  # expected output: '021'\nassert solution('000000') == '001122'  # expected output: '001122'\nassert solution('211200') == '211200'  # expected output: '211200'\nassert solution('120110') == '120120'  # expected output: '120120'",
        "num_ids_2": 57,
        "num_ids_4": 123
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '021'\nassert solution('121') == '021'\nassert solution('000000') == '001122'\nassert solution('211200') == '211200'\nassert solution('120110') == '120120'",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n121\") == \"021\"\nassert solution(\"6\\n000000\") == \"001122\"\nassert solution(\"6\\n211200\") == \"211200\"\nassert solution(\"6\\n120110\") == \"120120\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"6 1\\n4\\n\") == \"4\\n\"\nassert solution(\"6 1\\n5\\n\") == \"4\\n\"\nassert solution(\"6 1\\n6\\n\") == \"4\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n3\\n') == '4\\n'\nassert solution('10 5\\n1\\n2\\n3\\n4\\n5\\n') == '1\\n'\nassert solution('5 2\\n1\\n3\\n4\\n5\\n') == '3\\n'\nassert solution('3 3\\n1\\n2\\n4\\n5\\n') == '1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n') == '1\\n'",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Expected 4, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"6 1\\n1\\n\") == \"1\"\nassert solution(\"6 1\\n2\\n\") == \"2\"\nassert solution(\"6 1\\n3\\n\") == \"3\"\nassert solution(\"6 1\\n4\\n\") == \"4\"\nassert solution(\"6 1\\n5\\n\") == \"1\"\nassert solution(\"6 1\\n6\\n\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"3 2\\n1\\n\") == \"4\\n\"\nassert solution(\"4 3\\n3\\n\") == \"4\\n\"\nassert solution(\"4 3\\n2\\n\") == \"3\\n\"\nassert solution(\"4 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n0\\n\") == \"1\\n\"\nassert solution(\"4 3\\n4\\n\") == \"0\\n\"\nassert solution(\"4 3\\n5\\n\") == \"0\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n4\") == \"3\"\nassert solution(\"2\\n3\") == \"6\"\nassert solution(\"5\\n6\") == \"15\"\nassert solution(\"10\\n12\") == \"312\"",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4\\n', \"Expected output is 4, but got {}\".format(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"10 1\\n2\") == \"10\"\nassert solution(\"10 2\\n3\") == \"10\"\nassert solution(\"100 1\\n4\") == \"10000000000\"\nassert solution(\"100 2\\n5\") == \"10000000000\"\nassert solution(\"100 3\\n6\") == \"10000000000\"\nassert solution(\"100 4\\n7\") == \"10000000000\"\nassert solution(\"100 5\\n8\") == \"10000000000\"\nassert solution(\"100 6\\n9\") == \"10000000000\"\nassert solution(\"100 7\\n10\") == \"10000000000\"\nassert solution(\"100 8\\n11\") == \"10000000000\"\nassert solution(\"100 9\\n12\") == \"10000000000\"\nassert solution(\"100 10\\n13\") == \"10000000000\"\nassert solution(\"100 11\\n14\") == \"10000000000\"\nassert solution(\"100 12\\n15\") == \"10000000000\"\nassert solution(\"100 13\\n16\") == \"10000000000\"\nassert solution(\"100 14\\n17\") == \"10000000000\"\nassert solution(\"100 15\\n18\") == \"10000000000\"\nassert solution(\"100 16\\n19\") == \"10000000000\"\nassert solution(\"100 17\\n20\") == \"10000000000\"\nassert solution(\"100 18\\n21\") == \"10000000000\"\nassert solution(\"100 19\\n22\") == \"10000000000\"\nassert solution(\"100 20\\n23\") == \"10000000000\"\nassert solution(\"100 21\\n24\") == \"10000000000\"\nassert solution(\"100 22\\n25\") == \"10000000000\"\nassert solution(\"100 23\\n26\") == \"10000000000\"\nassert solution(\"100 24\\n27\") == \"10000000000\"\nassert solution(\"100 25\\n28\") == \"10000000000\"\nassert solution(\"100 26\\n29\") == \"10000000000\"\nassert solution(\"100 27\\n30\") == \"10000000000\"\nassert solution(\"100 28\\n31\") == \"10000000000\"\nassert solution(\"100 29\\n32\") == \"10000000000\"\nassert solution(\"100 30\\n33\") == \"10000000000\"\nassert solution(\"100 31\\n34\") == \"10000000000\"\nassert solution(\"100 32\\n35\") == \"10000000000\"\nassert solution(\"100 33\\n36\") == \"10000000000\"\nassert solution(\"100 34\\n37\") == \"1000",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"Test case 1 failed\"\nassert solution(\"7 2 4\") == \"1\", \"Test case 2 failed\"\nassert solution(\"8 2 4\") == \"0\", \"Test case 3 failed\"\nassert solution(\"6 1 4\") == \"1\", \"Test case 4 failed\"\nassert solution(\"6 3 4\") == \"0\", \"Test case 5 failed\"\nassert solution(\"6 2 6\") == \"2\", \"Test case 6 failed\"\nassert solution(\"7 2 6\") == \"1\", \"Test case 7 failed\"\nassert solution(\"8 2 6\") == \"0\", \"Test case 8 failed\"\nassert solution(\"6 1 6\") == \"1\", \"Test case 9 failed\"\nassert solution(\"6 3 6\") == \"0\", \"Test case 10 failed\"\nassert solution(\"5 5 4\") == \"0\", \"Test case 11 failed\"\nassert solution(\"5 5 6\") == \"0\", \"Test case 12 failed\"\nassert solution(\"6 6 4\") == \"0\", \"Test case 13 failed\"\nassert solution(\"6 6 6\") == \"0\", \"Test case 14 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n\nHere is the code to solve the problem:\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"10 2 4\") == \"2\"\nassert solution(\"-5 2 4\") == \"2\"\nassert solution(\"6 5 4\") == \"2\"\nassert solution(\"6 -5 4\") == \"2\"\nassert solution(\"6 2 7\") == \"2\"\nassert solution(\"6 2 -7\") == \"2\"\n\nfrom typing import IO\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\", \"Takahashi is now at coordinate 6. It is optimal to make the following moves: - Move from coordinate 6 to (6 - 4 =) 2. - Move from coordinate 2 to (2 - 4 =) -2. Here, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"Test 1 failed\"\nassert solution(\"6 3 4\") == \"3\", \"Test 2 failed\"\nassert solution(\"6 2 5\") == \"2\", \"Test 3 failed\"\nassert solution(\"6 1 5\") == \"1\", \"Test 4 failed\"\nassert solution(\"6 3 5\") == \"3\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"2 3 5\") == \"3\"\nassert solution(\"3 2 5\") == \"2\"\nassert solution(\"3 6 5\") == \"1\"\nassert solution(\"3 2 1\") == \"0\"\nassert solution(\"3 10 1\") == \"2\"\nassert solution(\"10 3 1\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 2, \"The programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(14) == 0, \"The programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(61441) == 2, \"The programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(571576) == 10, \"The programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(2128506) == 3, \"The programmers' kids solve this riddle in 5-10 minutes.\"",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 2, \"Solution for 11 should be 2.\"\nassert solution(14) == 0, \"Solution for 14 should be 0.\"\nassert solution(61441) == 2, \"Solution for 61441 should be 2.\"\nassert solution(571576) == 10, \"Solution for 571576 should be 10.\"\nassert solution(2128506) == 3, \"Solution for 2128506 should be 3.\"",
        "num_ids_2": 44,
        "num_ids_4": 104
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(\"14\") == 0, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(\"61441\") == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(\"571576\") == 10, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(\"2128506\") == 3, \"Programmers' kids solve this riddle in 5-10 minutes.\"",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"27\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 27, \"Incorrect output.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 27, \"Solution should return 27, but it returned {}\".format(solution(3))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 27\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == 1, \"Test case 1 failed\"\nassert solution(927) == 1, \"Test case 2 failed\"\nassert solution(48) == 0, \"Test case 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == 1, \"The output should be 1, but it is: \" + str(solution(13))\nassert solution(927) == 1, \"The output should be 1, but it is: \" + str(solution(927))\nassert solution(48) == 0, \"The output should be 0, but it is: \" + str(solution(48))",
        "num_ids_2": 66,
        "num_ids_4": 98
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == 1, \"Input 13 is not correct.\"\nassert solution(\"927\") == 1, \"Input 927 is not correct.\"\nassert solution(\"48\") == 0, \"Input 48 is not correct.\"",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == '1', \"The function should return 1 for input 13.\"\nassert solution(927) == '1', \"The function should return 1 for input 927.\"\nassert solution(48) == '0', \"The function should return 0 for input 48.\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == 'Output a single integer.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == 'Output', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 3 1\") == 4\nassert solution(\"DO YOU EXPECT ME TO FIND THIS OUT?\") == 16\nassert solution(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\") == 10\nassert solution(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\") == 22\nassert solution(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\") == 23\nassert solution(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\") == 28\nassert solution(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 33\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 25\nassert solution(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\") == 24",
        "num_ids_2": 33,
        "num_ids_4": 75
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output a single integer.\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 3 1\") == 4\nassert solution(\"4\") == 4\nassert solution(\"10\") == 0\nassert solution(\"4 1 2 3\") == 0\nassert solution(\"2 5 3 1\") == 4\nassert solution(\"DO YOU EXPECT ME TO FIND THIS OUT?\") == 4\nassert solution(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\") == 0\nassert solution(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\") == 0\nassert solution(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\") == 0\nassert solution(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\") == 4\nassert solution(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 4\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 4\nassert solution(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\") == 4",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1\") == 4",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"Output: 4\\n\"\nassert solution(stdin=input()) == \"Output: 4\\n\"\nassert solution(stdin=input()) == \"Output: 4\\n\"\nassert solution(stdin=input()) == \"Output: 4\\n\"\nassert solution(stdin=input()) == \"Output: 4\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"DO YOU EXPECT ME TO FIND THIS OUT?\") == 4\nassert solution(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\") == 5\nassert solution(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\") == 3\nassert solution(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\") == 1\nassert solution(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\") == 7\nassert solution(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 4\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 2\nassert solution(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\") == 11",
        "num_ids_2": 35,
        "num_ids_4": 82
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 3 1\") == 4\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == 4",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(8, 7) == \"2\"  # expected output: \"2\"\nassert solution(8, 1) == \"1\"  # expected output: \"1\"\nassert solution(6, 10) == \"1\"  # expected output: \"1\"\nassert solution(999999733, 999999732) == \"2\"  # expected output: \"2\"\nassert solution(999999733, 999999733) == \"1\"  # expected output: \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 101
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Test case 2 failed\"\nassert solution(stdin) == \"8\", \"Test case 3 failed\"\nassert solution(stdin) == \"1\", \"Test case 4 failed\"\nassert solution(stdin) == \"999999733\", \"Test case 5 failed\"\nassert solution(stdin) == \"1\", \"Test case 6 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '8'\nassert solution(input()) == '1'\nassert solution(input()) == '999999733'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The function solution() should return output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"\n\nfrom typing import List",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"The correct answer is 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n2 3\\n1 1 1 1 1\") == \"5\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4\\n3 4\\n1 1 1 1 1\") == \"120\"",
        "num_ids_2": 64,
        "num_ids_4": 110
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"The output is not as expected. \\nInput: {input_data}\\nExpected Output: {expected_output}\\nActual Output: {solution(input_data)}\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"3 1\\n2 1\\n1 1\\n1 2\\n1 3\") == \"4\\n\"\nassert solution(\"5 3\\n1 2\\n1 1\\n1 1\\n1 1\\n1 2\\n1 3\\n1 4\") == \"12\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 115
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 1 1 1\") == \"4\\n\"\nassert solution(\"1 1\\n0 1\\n1 0\") == \"1\\n\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 1 1 1\") == \"4\\n\"\nassert solution(\"1 1\\n0 1\\n1 0\") == \"1\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 123
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"2 3\\n1 1 2\\n1 2 3\\n0 0 0\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\") == \"1\\n\"\nassert solution(\"1 2\\n1 2\") == \"2\\n\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"1\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 104
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n0 1\") == \"0\\n\"\nassert solution(\"3 1\\n0 1\\n2\") == \"2\\n\"\nassert solution(\"1 2\\n2 1\\n3 0\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 101
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\"\n\nHere, we have a problem that we cannot directly test the solution. The solution has to be solved on a set of test cases. However, the given constraints make it easier to solve the problem.\n\nTo solve this problem, we need to first understand the given constraints and the problem statement. Let's start by understanding the constraints:\n\n1. N: The number of switches.\n2. M: The number of bulbs.\n3. k_i: The number of switches connected to bulb i.\n4. s_{ij}: The index of the switch connected to bulb i.\n5. p_i: The state of the switch connected to bulb i.\n\nWe have used the given constraints to solve the problem. Let's now understand the problem statement:\n\nWrite a function solution() that takes in a list of integers representing the input. The input list contains two integers N and M, the number of switches and the number of bulbs, respectively. The input list contains N integers representing the indices of the switches, the number of times each switch is \"on\" in the input list. The input list also contains M integers representing the indices of the bulbs, and the state of each switch connected to the corresponding bulb.\n\nThe function should return the number of combinations of \"on\" and \"off\" states of the switches that light all the bulbs.\n\nHere's the code for the solution:\n\n```python\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"3 3\\n1 1 2\\n1 1 3\\n2 2 3\") == \"2\\n\"\nassert solution(\"1 2\\n2 2\\n1 1\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n1 1\\n1 1\") == \"2\\n\"\nassert solution(\"2 3\\n2 2\\n3 3\") == \"4\\n\"\nassert solution(\"2 3\\n2 2\\n3 2\\n2 3\") == \"4\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 119
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5.00000000000000000000\", \"Incorrect Output\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.00000000000000000000\", \"Test Failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"Test case 1\"\nassert solution(\"2 5 9 0\") == \"13.0000000000000000000\", \"Test case 2\"\nassert solution(\"1 10 1 15\") == \"1.0000000000000000000\", \"Test case 3\"\nassert solution(\"2 10 1 10\") == \"1.0000000000000000000\", \"Test case 4\"\nassert solution(\"2 1 10 10\") == \"1.0000000000000000000\", \"Test case 5\"",
        "num_ids_2": 86,
        "num_ids_4": 174
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.000000000000000000000\", \"Test case 1 failed.\"\nassert solution(\"6 10 14 30\") == \"10.000000000000000000000\", \"Test case 2 failed.\"\nassert solution(\"1 5 10 15\") == \"15.000000000000000000000\", \"Test case 3 failed.\"\nassert solution(\"2 6 11 16\") == \"20.000000000000000000000\", \"Test case 4 failed.\"\nassert solution(\"7 9 12 17\") == \"25.000000000000000000000\", \"Test case 5 failed.\"",
        "num_ids_2": 94,
        "num_ids_4": 190
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5.00000000000000000000\\n\", \"Input values are incorrect. Please provide the correct input values.\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"Input is incorrect\"\nprint(\"Test passed\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5.000000000000000000000\\n\", \"The output is not correct\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8\\n'\nassert solution('3 1\\n1 1 1') == '6\\n'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3') == '97\\n'\n",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}, Output: {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\" # expected output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\") == \"6\\n\"\nassert solution(\"15 2\") == \"97\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4 5 60 4\") == \"8\\n\", \"The correct output should be 8.\\n\"\nassert solution(\"3 1\") == \"6\\n\", \"The correct output should be 6.\\n\"\nassert solution(\"15 2\") == \"97\\n\", \"The correct output should be 97.\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 85
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\n\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\\n\"\n\nassert solution(\"1 0\\n1000000\") == \"0\\n0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n0\\n0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n2\\n1 4\\n7\\n2\\n3 2\\n0\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7'\nassert solution('1 0\\n1000000') == '0'",
        "num_ids_2": 86,
        "num_ids_4": 107
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n6\\n2\\n1 4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"6\\n2\\n1 4 \\n\"\n\nassert solution(\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\"\"\") == \"7\\n2\\n3 2 \\n\"\n\nassert solution(\"\"\"\n1 0\n1000000\n\"\"\") == \"0\\n0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    2 -2 3 1 2\n    1 3\n    4 5\n    2 5\n    1 3\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    5 4\n    2 -2 3 1 4\n    3 5\n    3 4\n    2 4\n    2 5\n    \"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"\n    1 0\n    1000000\n    \"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"fced\\nxzy\\nr\\nabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"az\\na\\nbad\\nbabc\") == \"Yes\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\n    pass\\n\\n# Test cases\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"az\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"babc\\naaa\\nbac\\nabc\") == \"Yes\\nYes\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"yES\\nno\\nyES\") == \"Yes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"aa\\naa\\naa\\naa\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\nbabc\\nbabc\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 93,
        "num_ids_4": 172
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"fced\") == \"Yes\\n\"\nassert solution(\"xyz\") == \"Yes\\n\"\nassert solution(\"r\") == \"Yes\\n\"\nassert solution(\"dabcef\") == \"Yes\\n\"\nassert solution(\"az\") == \"Yes\\n\"\nassert solution(\"aa\") == \"Yes\\n\"\nassert solution(\"bad\") == \"Yes\\n\"\nassert solution(\"babc\") == \"Yes\\n\"\nassert solution(\"def\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"Yes\"\nassert solution(\"babc\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"fced\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"xyz\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"r\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"dabcef\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"az\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"aa\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"bad\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass\nassert solution(\"babc\") == \"Yes\\nYes\\nYes\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")  # pass",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('fced') == 'Yes', 'fced'\nassert solution('xyz') == 'Yes', 'xyz'\nassert solution('r') == 'Yes', 'r'\nassert solution('dabcef') == 'Yes', 'dabcef'\nassert solution('az') == 'No', 'az'\nassert solution('aa') == 'No', 'aa'\nassert solution('bad') == 'No', 'bad'\nassert solution('babc') == 'No', 'babc'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['fced', 'xyz', 'r', 'dabcef', 'az', 'aa', 'bad', 'babc']) == ['Yes', 'Yes', 'Yes', 'Yes', 'No', 'No', 'No', 'No']",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\nassert solution('aa') == 'No'\nassert solution('bad') == 'No'\nassert solution('babc') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"5 4\", \"6\\n2\\n4 1 \"),\n    (\"5 4\", \"7\\n2\\n3 2 \"),\n    (\"1 0\", \"0\\n0\\n0 \"),\n    (\"1000000\", \"0\\n0\\n0 \"),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n4 1 '\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2 '\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    2 -2 3 1 2\n    1 3\n    4 5\n    2 5\n    1 3\n    \"\"\"\n) == \"6\\n2\\n4 1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    2 -2 3 1 4\n    3 5\n    3 4\n    2 4\n    2 5\n    \"\"\"\n) == \"7\\n2\\n3 2\\n\"\n\nassert solution(\n    \"\"\"\n    1 0\n    1000000\n    \"\"\"\n) == \"0\\n0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n2\\n4 1'\nassert solution() == '7\\n2\\n3 2'\nassert solution() == '0\\n0'",
        "num_ids_2": 32,
        "num_ids_4": 43
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\n\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2 \"\n\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n2\\n4 1\"\nassert solution() == \"7\\n2\\n3 2\"\nassert solution() == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\n# stdin = \"2 1 5 4 3\"\\n# print(solution(stdin))\\n# stdin = \"1 3 5 6 7 4 2\"\\n# print(solution(stdin))\\n# stdin = \"1 2 3\"\\n# print(solution(stdin))\\n# stdin = \"1 2 4 3\"\\n# print(solution(stdin))'",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"LRRR\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\nLRRR\\n\\n7\\nLRLRLLL\\n\\n3\\nLLL\\n\\n4\\nLLRL\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_case.txt').read()) == '4\\nLRRR'\nassert solution(open('test_case2.txt').read()) == '7\\nLRLRLLL'\nassert solution(open('test_case3.txt').read()) == '3\\nLLL'\nassert solution(open('test_case4.txt').read()) == '4\\nLLRL'",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n4\\nLRRR\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"\"\"\nThe only difference between problems C1 and C2 is that all values in input of problem C1 are distinct.\n\nYou are given a sequence a consisting of n integers. All these integers are distinct, each value from 1 to n appears in the sequence exactly once.\n\nYou are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).\n\nFor example, for the sequence [2, 1, 5, 4, 3], the answer is 4 (you take 2 and the sequence becomes [1, 5, 4, 3], then you take the rightmost element 3 and the sequence becomes [1, 5, 4], then you take 4 and the sequence becomes [1, 5], then you take 5 and the sequence becomes [1], the obtained increasing sequence is [2, 3, 4, 5]).\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5, 2, 1, 5, 4, 3]) == \"4\"\nassert solution([7, 1, 3, 5, 6, 7, 4, 2]) == \"7\"\nassert solution([3, 1, 2, 3]) == \"3\"\nassert solution([4, 1, 2, 4, 3]) == \"4\"",
        "num_ids_2": 56,
        "num_ids_4": 97
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n1 2 5 3 4\\n\\nOutput\\n4\\n\\nInput\\n2\\n1 2\\n\\nOutput\\n2\\n\\nInput\\n7\\n6 5 4 3 2 4 3\\n\\nOutput\\n2') == '4\\n\\n2\\n'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"4\"\nassert solution(open(\"input.txt\", \"r\")) == \"4\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 3) == 1, \"Example 1 is incorrect\"\nassert solution(5, 4) == 2, \"Example 2 is incorrect\"\nassert solution(5, 5) == 0, \"Example 3 is incorrect\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 4 5\\n1 2 2 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1 2 3 3 3\\n1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 3 3\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(10) == 0",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"10 5 1\") == \"0\"\nassert solution(\"5 6 7\") == \"0\"\nassert solution(\"2 3 4\") == \"1\"\nassert solution(\"2 4 5\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Your solution is not correct.\"\nassert solution(\"7 2 3\") == \"2\\n\", \"Your solution is not correct.\"\nassert solution(\"1 2 3\") == \"1\\n\", \"Your solution is not correct.\"\nassert solution(\"2 2 3\") == \"1\\n\", \"Your solution is not correct.\"\nassert solution(\"3 2 3\") == \"1\\n\", \"Your solution is not correct.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8 3 4) == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"9 2 3\") == \"2\"\nassert solution(\"10 2 4\") == \"5\"\nassert solution(\"10 2 5\") == \"5\"\nassert solution(\"100 2 3\") == \"7\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"7 2 5\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"9 1 6\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"10 3 4\") == \"4\\n\", \"Test case 4 failed\"\nassert solution(\"1000000 1000000 0\") == \"1000000\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"\nassert solution(\"10 1 0\") == \"4\\n\"\nassert solution(\"5 0 1\") == \"3\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"483203635\\n\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000\") == \"12864624000000\\n\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000 1000000000\") == \"13178805307571764800000000000\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 100
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"The function should return the expected output.\"\nassert solution(\"1 2 3\") == \"3\\n\", \"The function should return the expected output.\"\nassert solution(\"2 4 6\") == \"12\\n\", \"The function should return the expected output.\"\nassert solution(\"1000000000\") == \"9999999999\\n\", \"The function should return the expected output.\"\nassert solution(\"1000000001\") == \"9999999999\\n\", \"The function should return the expected output.\"\nassert solution
        "num_ids_2": 50,
        "num_ids_4": 115
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"48\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2') == 48\nassert solution('1') == 48\nassert solution('8') == -1\nassert solution('1 2 3') == -1\nassert solution('8 2 12 6 4 24 16 3') == 48",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '48'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 48\nassert solution() == 4",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'No solution'\nassert solution(2) == 'No solution'\nassert solution(3) == 'No solution'\nassert solution(4) == 'No solution'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1 \\n\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4 \\n\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6 \"",
        "num_ids_2": 64,
        "num_ids_4": 90
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5 2 4 2 4\") == \"2\\n2 4\"\nassert solution(\"5 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \\n\", \"1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \\n\", \"2\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \\n\", \"1\"",
        "num_ids_2": 66,
        "num_ids_4": 95
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1\\n\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4\\n\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 92
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6') == '3\\n5 6 1 \\n2\\n2 4 \\n1'\nassert solution('5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6') == '2\\n2 4 \\n1'\nassert solution('5\\n6 6 6 6 6\\n1\\n6') == '1\\n6'",
        "num_ids_2": 124,
        "num_ids_4": 154
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\\n\"\nassert solution(\"6\") == \"1\\n6\\n\"\nassert solution(\"5\\n2\\n4\") == \"2\\n2\\n4\\n\"\nassert solution(\"5\\n6\\n6\\n6\\n6\") == \"1\\n6\\n6\\n6\\n6\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 87
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n5 6 1\\n2\\n2 4\\n1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1\\n'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4\\n'\nassert solution('5\\n6 6 6 6 6') == '1\\n6\\n'",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"aac\"\nassert solution() == \"b\"\nassert solution() == \"aba\"\nassert solution() == \"codeforces\"",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abac\") == \"aac'b\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"aac\") == \"aac\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abac\") == \"aac' \"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\n\nassert solution(\"3 2 1 0\") == \"aba\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"10\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"ab\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"a\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'a'\nassert solution('abba') == 'aba'\nassert solution('ecoosdcefr') == 'aba'\nassert solution('38 13 24 14 11 5 3 24 17 0') == 'aba'\nassert solution('10') == 'aac'\nassert solution('2 1 0') == 'aac'\nassert solution('abcde') == 'abcde'",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"10\") == \"a\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"abc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aba\"\nassert solution(\"ac\\n2\\n1 0\\nabca\\n3\\n0 1 1\\ndef\\n1\\n0\\nabcdefg\") == \"aac\"\nassert solution(\"ac\\n2\\n1 0\\nabca\\n3\\n0 1 1\\ndef\\n1\\n0\\nabcdefg\") == \"abc\"",
        "num_ids_2": 148,
        "num_ids_4": 234
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"\n\nfor i in range(1, 6):\n    assert solution(str(i)) == \"a\" + str(i)\n\nfor i in range(1, 6):\n    assert solution(str(i) + \" \" + str(i)) == \"a\" + str(i) + \" \" + \"a\" + str(i)",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"abcde\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"b\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"b\"\nassert solution(\"3\\n\") == \"aa\"\nassert solution(\"4\\n\") == \"aaa\"\nassert solution(\"5\\n\") == \"aaaa\"\nassert solution(\"6\\n\") == \"aaaab\"\nassert solution(\"7\\n\") == \"aaaac\"\nassert solution(\"8\\n\") == \"aaaaa\"\nassert solution(\"9\\n\") == \"aaaaab\"\nassert solution(\"10\\n\") == \"aaaaac\"\nassert solution(\"11\\n\") == \"aaaaad\"\nassert solution(\"12\\n\") == \"aaaaae\"\nassert solution(\"13\\n\") == \"aaaaaf\"\nassert solution(\"14\\n\") == \"aaaaag\"\nassert solution(\"15\\n\") == \"aaaaah\"\nassert solution(\"16\\n\") == \"aaaaai\"\nassert solution(\"17\\n\") == \"aaaaaj\"\nassert solution(\"18\\n\") == \"aaaaak\"\nassert solution(\"19\\n\") == \"aaaaal\"\nassert solution(\"20\\n\") == \"aaaaam\"\nassert solution(\"21\\n\") == \"aaaaan\"\nassert solution(\"22\\n\") == \"aaaaao\"\nassert solution(\"23\\n\") == \"aaaaap\"\nassert solution(\"24\\n\") == \"aaaaaq\"\nassert solution(\"25\\n\") == \"aaaaar\"\nassert solution(\"26\\n\") == \"aaaaas\"\nassert solution(\"27\\n\") == \"aaaaat\"\nassert solution(\"28\\n\") == \"aaaaau\"\nassert solution(\"29\\n\") == \"aaaaav\"\nassert solution(\"30\\n\") == \"aaaaaw\"\nassert solution(\"31\\n\") == \"aaaaax\"\nassert solution(\"32\\n\") == \"aaaaay\"\nassert solution(\"33\\n\") == \"aaaaaz\"\nassert solution(\"34\\n\") == \"aaaaba\"\nassert solution(\"35\\n\") == \"aaaabb\"\nassert solution(\"36\\n\") == \"aaaabc\"\nassert solution(\"37\\n\") == \"aaaabd\"\nassert solution(\"38\\n\") == \"aaaabe\"\nassert solution(\"39\\n\") == \"aaaabf\"\nassert solution(\"40\\n\") == \"aaaabg\"\nassert solution(\"41\\n\") == \"aaaabh\"\nassert solution(\"42\\n\") == \"aaaabi\"\nassert solution(\"43\\n\") == \"aaaabj\"\nassert solution(\"44\\n\") == \"aaaabk\"\nassert solution(\"45\\n\") == \"aaaabl\"\nassert solution(\"46\\n\") == \"aaaabm\"\nassert solution(\"47\\n\") == \"aaaabn\"\nassert solution(\"48\\n\") == \"aaaabo\"\nassert solution(\"49\\n\") == \"aaaabp\"\nassert solution(\"50\\n\") == \"aaaabq\"\nassert solution(\"51\\n\") == \"aaaabr\"\nassert solution(\"52\\n\") == \"aaaabs\"\nassert solution(\"53\\n\") == \"aaaabt\"\nassert solution(\"54\\n\") == \"aaaabu\"\nassert solution(\"55\\n\") == \"aaaabv\"\nassert solution(\"56\\n\") == \"aaaabw\"\nassert solution(\"57\\n\") == \"aaaabx\"\nassert solution(\"58\\n\") == \"aaaaby\"\nassert solution(\"59\\n\") == \"aaaabz\"\nassert solution(\"60\\n\") == \"aaaaca\"\nassert solution(\"61\\n\") == \"aaaacb\"\nassert solution(\"62\\n\") == \"aaaacc\"\nassert solution(\"63\\n\") == \"aaaacd\"\nassert solution(\"64\\n\") == \"aaaace\"\nassert solution(\"65\\n\") == \"aaaacf\"\nassert solution(\"66\\n\") == \"aaaacg\"\nassert solution(\"67\\n\") == \"aaaach\"\nassert solution(\"68\\n\") == \"aaaaci\"\nassert solution(\"69\\n\") == \"aaaacj\"\nassert solution(\"70\\n\") == \"aaaack\"\nassert solution(\"71\\n\") == \"aaaacl\"\nassert solution(\"72\\n\") == \"aaaacm\"\nassert solution(\"73\\n\") == \"aaaacn\"\nassert solution(\"74\\n\") == \"aaaaco\"\nassert solution(\"75\\n\") == \"aaaacp\"\nassert solution",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"b\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\") == \"b\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"b\", \"Test 1\"\nassert solution(\"1000000000000001\\n\") == \"aaa\", \"Test 2\"\nassert solution(\"1000000000000002\\n\") == \"aab\", \"Test 3\"\nassert solution(\"1000000000000003\\n\") == \"abb\", \"Test 4\"\nassert solution(\"1000000000000004\\n\") == \"abc\", \"Test 5\"\nassert solution(\"1000000000000005\\n\") == \"acd\", \"Test 6\"\nassert solution(\"1000000000000006\\n\") == \"ace\", \"Test 7\"\nassert solution(\"1000000000000007\\n\") == \"acf\", \"Test 8\"\nassert solution(\"1000000000000008\\n\") == \"adg\", \"Test 9\"\nassert solution(\"1000000000000009\\n\") == \"aeg\", \"Test 10\"\nassert solution(\"1000000000000010\\n\") == \"afg\", \"Test 11\"\nassert solution(\"1000000000000011\\n\") == \"agh\", \"Test 12\"\nassert solution(\"1000000000000012\\n\") == \"ahg\", \"Test 13\"\nassert solution(\"1000000000000013\\n\") == \"aih\", \"Test 14\"\nassert solution(\"1000000000000014\\n\") == \"ajg\", \"Test 15\"\nassert solution(\"1000000000000015\\n\") == \"akh\", \"Test 16\"\nassert solution(\"1000000000000016\\n\") == \"alb\", \"Test 17\"\nassert solution(\"1000000000000017\\n\") == \"alm\", \"Test 18\"\nassert solution(\"1000000000000018\\n\") == \"amh\", \"Test 19\"\nassert solution(\"1000000000000019\\n\") == \"anb\", \"Test 20\"\nassert solution(\"1000000000000020\\n\") == \"anm\", \"Test 21\"\nassert solution(\"1000000000000021\\n\") == \"ann\", \"Test 22\"\nassert solution(\"1000000000000022\\n\") == \"apb\", \"Test 23\"\nassert solution(\"1000000000000023\\n\") == \"apm\", \"Test 24\"\nassert solution(\"1000000000000024\\n\") == \"apn\", \"Test 25\"\nassert solution(\"1000000000000025\\n\") == \"arb\", \"Test 26\"\nassert solution(\"1000000000000026\\n\") == \"arm\", \"Test 27\"\nassert solution(\"1000000000000027\\n\") == \"arn\", \"Test 28\"\nassert solution(\"1000000000000028\\n\") == \"arb\", \"Test 29\"\nassert solution(\"1000000000000029\\n\") == \"arm\", \"Test 30\"\nassert solution(\"1000000000000030\\n\") == \"arn\", \"Test 31\"\nassert solution(\"100000000",
        "num_ids_2": 49,
        "num_ids_4": 113
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"1000000000000001\") == \"zzz\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"a\"\nassert solution(\"4\") == \"c\"\nassert solution(\"5\") == \"d\"\nassert solution(\"6\") == \"e\"\nassert solution(\"7\") == \"f\"\nassert solution(\"8\") == \"g\"\nassert solution(\"9\") == \"h\"\nassert solution(\"10\") == \"i\"\nassert solution(\"11\") == \"j\"\nassert solution(\"12\") == \"k\"\nassert solution(\"13\") == \"l\"\nassert solution(\"14\") == \"m\"\nassert solution(\"15\") == \"n\"\nassert solution(\"16\") == \"o\"\nassert solution(\"17\") == \"p\"\nassert solution(\"18\") == \"q\"\nassert solution(\"19\") == \"r\"\nassert solution(\"20\") == \"s\"\nassert solution(\"21\") == \"t\"\nassert solution(\"22\") == \"u\"\nassert solution(\"23\") == \"v\"\nassert solution(\"24\") == \"w\"\nassert solution(\"25\") == \"x\"\nassert solution(\"26\") == \"y\"\nassert solution(\"27\") == \"aa\"\nassert solution(\"28\") == \"ab\"\nassert solution(\"29\") == \"ac\"\nassert solution(\"30\") == \"ad\"\nassert solution(\"31\") == \"ae\"\nassert solution(\"32\") == \"af\"\nassert solution(\"33\") == \"ag\"\nassert solution(\"34\") == \"ah\"\nassert solution(\"35\") == \"ai\"\nassert solution(\"36\") == \"aj\"\nassert solution(\"37\") == \"ak\"\nassert solution(\"38\") == \"al\"\nassert solution(\"39\") == \"am\"\nassert solution(\"40\") == \"an\"\nassert solution(\"41\") == \"ao\"\nassert solution(\"42\") == \"ap\"\nassert solution(\"43\") == \"aq\"\nassert solution(\"44\") == \"ar\"\nassert solution(\"45\") == \"as\"\nassert solution(\"46\") == \"at\"\nassert solution(\"47\") == \"au\"\nassert solution(\"48\") == \"av\"\nassert solution(\"49\") == \"aw\"\nassert solution(\"50\") == \"ax\"\nassert solution(\"51\") == \"ay\"\nassert solution(\"52\") == \"az\"\nassert solution(\"53\") == \"ba\"\nassert solution(\"54\") == \"bb\"\nassert solution(\"55\") == \"bc\"\nassert solution(\"56\") == \"bd\"\nassert solution(\"57\") == \"be\"\nassert solution(\"58\") == \"bf\"\nassert solution(\"59\") == \"bg\"\nassert solution(\"60\") == \"bh\"\nassert solution(\"61\") == \"bi\"\nassert solution(\"62\") == \"bj\"\nassert solution(\"63\") == \"bk\"\nassert solution(\"64\") == \"bl\"\nassert solution(\"65\") == \"bm\"\nassert solution(\"66\") == \"bn\"\nassert solution(\"67\") == \"bo\"\nassert solution(\"68\") == \"bp\"\nassert solution(\"69\") == \"bq\"\nassert solution(\"70\") == \"br\"\nassert solution(\"71\") == \"bs\"\nassert solution(\"72\") == \"bt\"\nassert solution(\"73\") == \"bu\"\nassert solution(\"74\") == \"bv\"\nassert solution(\"75\") == \"bw\"\nassert solution(\"76\") == \"bx\"\nassert solution(\"77\") == \"by\"\nassert solution(\"78\") == \"bz\"\nassert solution(\"79\") == \"ca\"\nassert solution(\"80\") == \"cb\"\nassert solution(\"81\") == \"cc\"\nassert solution(\"82\") == \"cd\"\nassert solution(\"83\") == \"ce\"\nassert solution(\"84\") == \"cf\"\nassert solution(\"85\") == \"cg\"\nassert solution(\"86\") == \"ch\"\nassert solution(\"87\") == \"ci\"\nassert solution(\"88\") == \"cj\"\nassert solution(\"89\") == \"ck\"\nassert solution(\"90\") == \"cl\"\nassert solution(\"91\") == \"cm\"\nassert solution(\"92\") == \"cn\"\nassert solution(\"93\") == \"co\"\nassert solution(\"94\") == \"cp\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\") == \"b\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"to be or not to be\") == \"12\", \"Example 1\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\", \"Example 2\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\", \"Example 3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == 12\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == 13\nassert solution(\"6\\naa bb aa aa bb bb\") == 11",
        "num_ids_2": 83,
        "num_ids_4": 101
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO: implement the solution\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 12",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nto be or not to be\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"12\\n\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 110
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\\n\\n10\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\\n\\n10\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\\n10\") == \"11\"\n",
        "num_ids_2": 97,
        "num_ids_4": 122
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\nto be or not to be\\n') == '12'\nassert solution('10\\na ab a a b ab a a b c\\n') == '13'\nassert solution('6\\naa bb aa aa bb bb\\n') == '11'",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '20\\n3 2 3\\n5'\nassert solution() == '1\\n5'\nassert solution() == '4000\\n2 2'\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\\n\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\\n\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 110
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2') == '20\\n3 2 3'\nassert solution('5 1\\n1 1 1 1 1') == '1\\n5'\nassert solution('4 2\\n1 2000 2000 2') == '4000\\n2 2'",
        "num_ids_2": 63,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"20\\n3 2 3\\n1\\n5\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4000\\n2 2\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"",
        "num_ids_2": 61,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"",
        "num_ids_2": 63,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Examples\\nassert solution(\\\"8 3\\n5 4 2 6 5 1 9 2\\\"\\n) == \\\"20\\\"\\nassert solution(\\\"5 1\\n1 1 1 1 1\\\"\\n) == \\\"1\\\"\\nassert solution(\\\"4 2\\n1 2000 2000 2\\\"\\n) == \\\"4000\\\"\\n\\n# Note\\n\\n# The first example is described in the problem statement.\\n#\\n# In the second example there is only one possible distribution.\\n#\\n# In the third example the best answer is to distribute problems in the following way:\\n# [1, 2000], [2000, 2].\\n# The total profit of this distribution is 2000 + 2000 = 4000.\\n#\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 233,
        "num_ids_4": 233
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\nfor test_case in test_cases:\n    assert test_case == expected, f\"Expected '{expected}', but got '{solution(str(test_case))}'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20\\n3 2 3\\n5\\n1\\n5\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\" # Test case 1",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='Input\\n4\\n1 -5 3 2\\nOutput\\n1\\n\\nInput\\n5\\n4 -2 3 -9 2\\nOutput\\n0\\n\\nInput\\n9\\n-1 1 -1 1 -1 1 1 -1 -1\\nOutput\\n6\\n\\nInput\\n8\\n16 -5 -11 -15 10 5 4 -4\\nOutput\\n3\\n\\n-----Note-----\\n\\nConsider the first example.\\nThere is only one subsegment with the sum $0$. It starts in the second element and ends in the fourth element. It\\'s enough to insert one element so the array doesn\\'t contain any subsegments with the sum equal to zero. For example, it is possible to insert the integer $1$ between second and third elements of the array.\\n\\nThere are no subsegments having sum $0$ in the second example so you don\\'t need to do anything.') == '1\\n\\n0\\n\\n3\\n\\n'",
        "num_ids_2": 253,
        "num_ids_4": 253
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == str(output())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\", \"Expected output: 1, got: \" + solution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n-5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 100
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 101
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 101
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"1000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '0\\n2\\n10\\n1000000000\\n2000000000'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n2\\n10\\n1000000000\\n2000000000\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\\n\", \"Incorrect output\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0\\n2\\n10\\n1000000000\\n2000000000'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 0, \"1\"\nassert solution(100) == 0, \"2\"\nassert solution(2) == 2, \"3\"\nassert solution(5) == 10, \"4\"\nassert solution(2) == 1000000000, \"5\"\nassert solution(1000000000) == 1000000000, \"6\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test 1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"203\") == \"-1\"\nassert solution(\"500\") == \"-1\"\nassert solution(\"250\") == \"3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"11\") == \"3\"\nassert solution(\"15\") == \"5\"\nassert solution(\"18\") == \"6\"\nassert solution(\"21\") == \"7\"\nassert solution(\"22\") == \"8\"\nassert solution(\"23\") == \"9\"\nassert solution(\"25\") == \"10\"\nassert solution(\"31\") == \"16\"\nassert solution(\"41\") == \"26\"\nassert solution(\"50\") == \"36\"\nassert solution(\"51\") == \"37\"\nassert solution(\"55\") == \"41\"\nassert solution(\"60\") == \"46\"\nassert solution(\"61\") == \"47\"\nassert solution(\"65\") == \"51\"\nassert solution(\"70\") == \"56\"\nassert solution(\"71\") == \"57\"\nassert solution(\"75\") == \"61\"\nassert solution(\"80\") == \"66\"\nassert solution(\"81\") == \"67\"\nassert solution(\"85\") == \"71\"\nassert solution(\"90\") == \"76\"\nassert solution(\"91\") == \"77\"\nassert solution(\"95\") == \"81\"\nassert solution(\"100\") == \"86\"\nassert solution(\"101\") == \"86\"\nassert solution(\"105\") == \"90\"\nassert solution(\"110\") == \"95\"\nassert solution(\"111\") == \"95\"\nassert solution(\"115\") == \"100\"\nassert solution(\"120\") == \"105\"\nassert solution(\"121\") == \"105\"\nassert solution(\"125\") == \"110\"\nassert solution(\"130\") == \"115\"\nassert solution(\"131\") == \"115\"\nassert solution(\"135\") == \"120\"\nassert solution(\"140\") == \"125\"\nassert solution(\"141\") == \"125\"\nassert solution(\"145\") == \"130\"\nassert solution(\"150\") == \"135\"\nassert solution(\"151\") == \"135\"\nassert solution(\"155\") == \"140\"\nassert solution(\"160\") == \"145\"\nassert solution(\"161\") == \"145\"\nassert solution(\"165\") == \"150\"\nassert solution(\"170\") == \"155\"\nassert solution(\"171\") == \"155\"\nassert solution(\"175\") == \"160\"\nassert solution(\"180\") == \"165\"\nassert solution(\"181\") == \"165\"\nassert solution(\"185\") == \"170\"\nassert solution(\"190\") == \"175\"\nassert solution(\"191\") == \"175\"\nassert solution(\"195\") == \"180\"\nassert solution(\"200\") == \"185\"\nassert solution(\"201\") == \"185\"\nassert solution(\"205\") == \"190\"\nassert solution(\"210\") == \"195\"\nassert solution(\"211\") == \"195\"\nassert solution(\"215\") == \"200\"\nassert solution(\"220\") == \"205\"\nassert solution(\"221\") == \"205\"\nassert solution(\"225\") == \"210\"\nassert solution(\"230\") == \"215\"\nassert solution(\"231\") == \"215\"\nassert solution(\"235\") == \"220\"\nassert solution(\"240\") == \"225\"\nassert solution(\"241\") == \"225\"\nassert solution(\"245\") == \"230\"\nassert solution(\"250\") == \"235\"\nassert solution(\"251\") == \"235\"\nassert solution(\"255\") == \"240\"\nassert solution(\"260\") == \"245\"\nassert solution(\"26",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"4\", \"Test case 1 failed\"\nassert solution(\"102\") == \"-1\", \"Test case 2 failed\"\nassert solution(\"111\") == \"4\", \"Test case 3 failed\"\nassert solution(\"112\") == \"4\", \"Test case 4 failed\"\nassert solution(\"113\") == \"4\", \"Test case 5 failed\"\nassert solution(\"114\") == \"4\", \"Test case 6 failed\"\nassert solution(\"115\") == \"-1\", \"Test case 7 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\", \"Solution should return 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4', 'Invalid input'\n\nfor i in range(1, 10000):\n    if i % K == 0:\n        print(i)\n        break\nelse:\n    print(-1)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"\") == \"-1\"\nassert solution(\"200\") == \"None of 7, 77, and 777 are a multiple of 200, but 7777 is.\"",
        "num_ids_2": 20,
        "num_ids_4": 61
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"3\") == -1\nassert solution(\"1\") == -1\nassert solution(\"1001\") == 0\nassert solution(\"2\") == -1",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"-1\"\nassert solution(\"101\") == \"4\"\nassert solution(\"102\") == \"-1\"\nassert solution(\"103\") == \"-1\"\nassert solution(\"104\") == \"-1\"\nassert solution(\"105\") == \"-1\"\nassert solution(\"106\") == \"4\"\nassert solution(\"107\") == \"-1\"\nassert solution(\"108\") == \"-1\"\nassert solution(\"109\") == \"-1\"\nassert solution(\"110\") == \"-1\"\nassert solution(\"111\") == \"-1\"\nassert solution(\"112\") == \"-1\"\nassert solution(\"113\") == \"-1\"\nassert solution(\"114\") == \"-1\"\nassert solution(\"115\") == \"-1\"\nassert solution(\"116\") == \"-1\"\nassert solution(\"117\") == \"-1\"\nassert solution(\"118\") == \"-1\"\nassert solution(\"119\") == \"-1\"\nassert solution(\"120\") == \"-1\"\nassert solution(\"121\") == \"-1\"\nassert solution(\"122\") == \"-1\"\nassert solution(\"123\") == \"-1\"\nassert solution(\"124\") == \"-1\"\nassert solution(\"125\") == \"-1\"\nassert solution(\"126\") == \"-1\"\nassert solution(\"127\") == \"-1\"\nassert solution(\"128\") == \"-1\"\nassert solution(\"129\") == \"-1\"\nassert solution(\"130\") == \"-1\"\nassert solution(\"131\") == \"-1\"\nassert solution(\"132\") == \"-1\"\nassert solution(\"133\") == \"-1\"\nassert solution(\"134\") == \"-1\"\nassert solution(\"135\") == \"-1\"\nassert solution(\"136\") == \"-1\"\nassert solution(\"137\") == \"-1\"\nassert solution(\"138\") == \"-1\"\nassert solution(\"139\") == \"-1\"\nassert solution(\"140\") == \"-1\"\nassert solution(\"141\") == \"-1\"\nassert solution(\"142\") == \"-1\"\nassert solution(\"143\") == \"-1\"\nassert solution(\"144\") == \"-1\"\nassert solution(\"145\") == \"-1\"\nassert solution(\"146\") == \"-1\"\nassert solution(\"147\") == \"-1\"\nassert solution(\"148\") == \"-1\"\nassert solution(\"149\") == \"-1\"\nassert solution(\"150\") == \"-1\"\nassert solution(\"151\") == \"-1\"\nassert solution(\"152\") == \"-1\"\nassert solution(\"153\") == \"-1\"\nassert solution(\"154\") == \"-1\"\nassert solution(\"155\") == \"-1\"\nassert solution(\"156\") == \"-1\"\nassert solution(\"157\") == \"-1\"\nassert solution(\"158\") == \"-1\"\nassert solution(\"159\") == \"-1\"\nassert solution(\"160\") == \"-1\"\nassert solution(\"161\") == \"-1\"\nassert solution(\"162\") == \"-1\"\nassert solution(\"163\") == \"-1\"\nassert solution(\"164\") == \"-1\"\nassert solution(\"165\") == \"-1\"\nassert solution(\"166\") == \"-1\"\nassert solution(\"167\") == \"-1\"\nassert solution(\"168\") == \"-1\"\nassert solution(\"169\") == \"-1\"\nassert solution(\"170\") == \"-1\"\nassert solution(\"171\") == \"-1\"\nassert solution(\"172\") == \"-1\"\nassert solution(\"173\") == \"-1\"\nassert solution(\"174\") == \"-1\"\nassert solution(\"175\") == \"-1\"\nassert solution(\"176\") == \"-1\"\nassert solution(\"177\") == \"-1\"\nassert solution(\"178\") == \"-1\"\nassert solution(\"179\") == \"-1\"\nassert solution(\"180\") == \"-1\"\nassert solution(\"181\") == \"-1\"\nassert solution(\"182\") == \"-1\"\nassert solution(\"183\") == \"-1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 4, \"None of 7, 77, and 777 is a multiple of 101\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"1\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5') == '1\\n'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48\\n'",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'\n\nfrom collections import defaultdict",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n\\n5 5\\n1 2 3 4 5\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '4\\n'\nassert solution('5 5\\n1 2 3 4 5\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\\n15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '1\\n'",
        "num_ids_2": 338,
        "num_ids_4": 338
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\", \"Solution should return 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4' # Example 1\n\nassert solution() == '1' # Example 2\n\nassert solution() == '48' # Example 3",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\\n\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\") == \"48\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 4\nassert solution(7) == 2\nassert solution(5) == 1\nassert solution(5) == 2\nassert solution(5) == -1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\n\nfrom typing import List",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == 4\nassert solution('7 10\\n1 3 4 2 1 4 2') == 2\nassert solution('5 15\\n5 5 5 5 5') == 1\nassert solution('5 16\\n5 5 5 5 5') == 2\nassert solution('5 26\\n5 5 5 5 5') == -1",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"The function should return '{expected_output}', but it returns '{solution(input_data)}'.\" for input_data, expected_output in [\n    (\"5 8\", \"4\"),\n    (\"7 10\", \"2\"),\n    (\"5 15\", \"1\"),\n    (\"5 16\", \"2\"),\n    (\"5 26\", \"-1\")\n]",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, actual output: {solution(input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\\n\", \"polycarp's sequence is not an arithmetic progression\"\nassert solution(\"2\\n500 500\") == \"0\\n\", \"Polycarp's sequence is an arithmetic progression\"\nassert solution(\"3\\n14 5 1\") == \"-1\\n\", \"Polycarp's sequence is not an arithmetic progression\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\\n\", \"Polycarp's sequence is not an arithmetic progression\"",
        "num_ids_2": 71,
        "num_ids_4": 141
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 500') == '0'\nassert solution('3 14 5 1') == '-1'\nassert solution('5 1 3 6 9 12') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 52
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3', \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\\n\"\nassert solution(\"2\\n500 500\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\\n\"\nassert solution(\"2\\n500 500\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 1\nassert solution(6) == -1\nassert solution(7) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n24 21 14 10') == '3\\n'\nassert solution('2\\n500 500') == '0\\n'\nassert solution('3\\n14 5 1') == '-1\\n'\nassert solution('5\\n1 3 6 9 12') == '1\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\", \"The solution is incorrect\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 2 15 15 15\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"4\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 2\n    1 2 15 15 15\n    6 1\n    36 4 1 25 9 16\n    4 4\n    1 10 100 1000\n''') == '5\\n'\n\nassert solution('''\n    10 5\n    1 2 5 10 20 15\n    2 1 10 25 50 60\n    1 3 30 25 30 30\n    5 4\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    4 2\n    1 2 15 15 15\n    1 5 10 15 20\n    2 3 15 20 25\n    3 4 20 25 30\n    4 5\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    6 1\n    36 4 1 25 9 16\n    1 2 15 15 15\n    2 3 10 15 20\n    3 4 5 20 25\n    4 5\n    1 10 50 60 100 150\n''') == '2\\n'\n\nassert solution('''\n    10 5\n    1 2 5 10 20 15\n    2 1 10 25 50 60\n    1 3 30 25 30 30\n    5 4\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    4 2\n    1 2 15 15 15\n    1 5 10 15 20\n    2 3 15 20 25\n    3 4 20 25 30\n    4 5\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    6 1\n    36 4 1 25 9 16\n    1 2 15 15 15\n    2 3 10 15 20\n    3 4 5 20 25\n    4 5\n    1 10 50 60 100 150\n''') == '2\\n'\n\nassert solution('''\n    10 5\n    1 2 5 10 20 15\n    2 1 10 25 50 60\n    1 3 30 25 30 30\n    5 4\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    4 2\n    1 2 15 15 15\n    1 5 10 15 20\n    2 3 15 20 25\n    3 4 20 25 30\n    4 5\n    1 10 50 60 100 150\n''') == '5\\n'\n\nassert solution('''\n    6 1\n    36 4 1 25 9 16\n    1 2 15 15 15\n    2 3 10 15 20\n    3 4 5 20 25\n    4 5\n    1 10 50 60 100 150\n''') == '2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\" # example 1\nassert solution(input()) == \"2\" # example 2\nassert solution(input()) == \"4\" # example 3\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 10 7\n8 10 3 6\n''') == '8\\n'\n\nassert solution('''\n6 10 8\n10 10 3 6 4\n''') == '-1\\n'\n\nassert solution('''\n6 10 10\n10 10 3 6 4\n''') == '8\\n'\n\nassert solution('''\n7 10 8\n10 10 3 6 4 5 2\n''') == '-1\\n'\n\nassert solution('''\n8 10 7\n10 10 3 6 4 5 2\n''') == '8\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'5 10 7\\n8 10 3 6\\n') == '8\\n'\nassert solution(b'5 10 7\\n8 10 3\\n') == '8\\n'\nassert solution(b'5 10 7\\n8 10 3\\n') == '8\\n'\nassert solution(b'5 10 7\\n8 10 3 6\\n') == '8\\n'\nassert solution(b'5 10 7\\n8 10 3 6\\n') == '8\\n'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6 7\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6 7 8\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6 7 8 9\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6 7 8 9 10\\n\") == \"8\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"2 5 3\") == \"-1\\n\"\nassert solution(\"3 6 8\") == \"8\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 75
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8\\n'\nassert solution('') == '-1\\n'\nassert solution('5 10 7\\n8 10 3 6\\n10 10 3 6 8\\n') == '-1\\n'",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"4 5 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 2 4 5 6 7 8\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 2 4 5 6 7 8\\n10 10 1 2 3 4 5 6 7 8\") == \"10\"",
        "num_ids_2": 39,
        "num_ids_4": 149
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == 8\nassert solution('5 10 7\\n8 10 3 6\\n') == -1\nassert solution('5 10 7\\n8 10 3 6\\n') == -1\nassert solution('5 10 7\\n8 10 3 6\\n') == -1\nassert solution('5 10 7\\n8 10 3 6\\n') == -1\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 3 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n10 10 3 6\") == \"5\"\nassert solution(\"5 10 7\\n8 10 3 6\\n11 10 3 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n12 10 3 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n13 10 3 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n14 10 3 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n15 10 3 6\") == \"-1\"",
        "num_ids_2": 60,
        "num_ids_4": 132
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 10 6\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 7 6\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 9 6\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 5 6\") == \"8\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('6 3 4\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('6 3 4\\n3\\n1\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('6 3 4\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('6 3 4\\n3\\n1\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\n",
        "num_ids_2": 78,
        "num_ids_4": 150
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n1\\n1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n2\\n2\\n2\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\n\"\nassert solution(\"6 3 4\\n3\\n3\\n1\\n3\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n1\\n\") == \"No\\nNo\\nNo\\nYes\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n3\\n3\\n3\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"4 3 2\\n1\\n3\\n1\\n2\\n\") == \"Yes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"1 3 4\\n1\\n3\\n2\\n1\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n1\\n1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"1 3 2\\n2\\n2\\n1\\n2\\n1\\n\") == \"Yes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Yes\\nNo\\nNo\\nYes\\nNo\\nNo'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\n'\nassert solution('5 4 3\\n1\\n3\\n2\\n4\\n') == 'Yes\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n2\\n3\\n1\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n1\\n2\\n3\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n2\\n3\\n4\\n1\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n3\\n1\\n2\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n1\\n2\\n3\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n2\\n3\\n4\\n1\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n3\\n1\\n2\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n1\\n2\\n3\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n2\\n3\\n4\\n1\\n') == 'No\\nNo\\nNo\\nNo\\n'\nassert solution('5 4 3\\n3\\n1\\n2\\n4\\n') == 'No\\nNo\\nNo\\nNo\\n'",
        "num_ids_2": 81,
        "num_ids_4": 159
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter N K Q: \")) == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n1\\n\") == \"No\\nYes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 138
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(r\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(r\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 84,
        "num_ids_4": 119
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"YES\" # correct\nprint(\"YES\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\n01\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 129
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n2 2\\n1 1\\n0 1\\n') == 'YES\\n00\\n10\\n'\nassert solution('Input\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES\\n010\\n0000\\n'\nassert solution('Input\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 94,
        "num_ids_4": 146
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2 2\\n1 1\\n0 1\\n\\nOutput\\nYES\\n00\\n10\\n\\nInput\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\nOutput\\nYES\\n010\\n0000\\n\\nInput\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"YES\\n00\\n10\\n010\\n0000\\n\"",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 2\n1 1\n0 1\"\"\") == \"YES\\n00\\n10\"\nassert solution(\"\"\"3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\"\"\") == \"YES\\n010\\n0000\"\nassert solution(\"\"\"3 3\n0 0 0\n1 0 1\n1 1 0\"\"\") == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example_input) == \"YES\\n010\\n0000\"\nassert solution(example_input2) == \"YES\\n0000\\n1111\"\nassert solution(example_input3) == \"NO\"",
        "num_ids_2": 48,
        "num_ids_4": 61
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n2 2\\n1 1\\n0 1\\n\\nInput\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\nInput\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n\\nOutput\\nYES\\n00\\n10\\n\\nOutput\\nYES\\n010\\n0000\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\") == \"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 195,
        "num_ids_4": 195
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"121\") == \"No\", \"Test 2 failed\"\nassert solution(\"436\") == \"Yes\", \"Test 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"121\") == \"No\", \"Test 2 failed\"\nassert solution(\"436\") == \"Yes\", \"Test 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('373') == 'Yes', '373 is not a valid input.'\nassert solution('121') == 'No', '121 is not a valid input.'\nassert solution('436') == 'Yes', '436 is not a valid input.'",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\", \"Input 373 should return Yes\"\nassert solution(\"121\") == \"No\", \"Input 121 should return No\"\nassert solution(\"436\") == \"Yes\", \"Input 436 should return Yes\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\", \"The solution should output 'Yes' for the given input.\"\nassert solution(\"121\") == \"No\", \"The solution should output 'No' for the given input.\"\nassert solution(\"436\") == \"Yes\", \"The solution should output 'Yes' for the given input.\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5 2 1\\n0 1 0 1 0\\n\") == \"5\"\nassert solution(stdin=\"6 2 1\\n1 0 0 1 0 1\\n\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\\n\") == 5\nassert solution(\"6 2 1\\n1 0 0 1 0 1\\n\") == 3\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\"\nfor i, (n, b, a) in enumerate(zip(input_list, input_list[1:], input_list[2:])):\n    assert solution(n, b, a) == output_list[i], f\"Input: {input_list}\\nOutput: {output_list}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The output should be: {output}, but it is: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == 5\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"The output should be 4, not {}\".format(solution(\"8-7+6-5+4-3+2-1-0\"))\nassert solution(\"2+2\") == \"-46\", \"The output should be -46, not {}\".format(solution(\"2+2\"))\nassert solution(\"112-37\") == \"375\", \"The output should be 375, not {}\".format(solution(\"112-37\"))",
        "num_ids_2": 90,
        "num_ids_4": 130
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The bug in the reference solution has been fixed.\"\nassert solution(\"2+2\") == -46, \"The bug in the reference solution has been fixed.\"\nassert solution(\"112-37\") == 375, \"The bug in the reference solution has been fixed.\"",
        "num_ids_2": 61,
        "num_ids_4": 89
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The reference solution is incorrect.\"\nassert solution(\"2+2\") == -46, \"The reference solution is incorrect.\"\nassert solution(\"112-37\") == 375, \"The reference solution is incorrect.\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4, \"The reference solution is incorrect.\"\n\nassert solution('2+2') == -46, \"The reference solution is incorrect.\"\n\nassert solution('112-37') == 375, \"The reference solution is incorrect.\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The output of the reference solution is incorrect\"\nassert solution(\"2+2\") == -46, \"The output of the reference solution is incorrect\"\nassert solution(\"112-37\") == 375, \"The output of the reference solution is incorrect\"",
        "num_ids_2": 59,
        "num_ids_4": 86
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Test case 1 failed\"\nassert solution(\"2+2\") == -46, \"Test case 2 failed\"\nassert solution(\"112-37\") == 375, \"Test case 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The bug in the reference solution is not working as expected.\"\nassert solution(\"2+2\") == -46, \"The bug in the reference solution is not working as expected.\"\nassert solution(\"112-37\") == 375, \"The bug in the reference solution is not working as expected.\"",
        "num_ids_2": 65,
        "num_ids_4": 95
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n1 2\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1\\n1 3\\n3 2\\n2 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n3 3\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\") == \"NO\"",
        "num_ids_2": 165,
        "num_ids_4": 208
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {output == 'NO'}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\n\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\n\nassert solution('13 4') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 99,
        "num_ids_4": 126
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n1 4\\n3 2\\n4 1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 110
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100\n",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 91
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 35,
        "num_ids_4": 97
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output mismatch for {input()} and {output}.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == -1, \"Empty input is invalid\"\nassert solution(\"5 2 3\\n5 1 3 10 1\") == 18, \"Invalid input\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1, \"Invalid input\"\nassert solution(\"4 3 1\\n1 100 1 1\") == 100, \"Invalid input\"",
        "num_ids_2": 45,
        "num_ids_4": 113
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input') == '18\\n'\nassert solution('Input') == '-1\\n'\nassert solution('Input') == '100\\n'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10') == -1\nassert solution('4 3 1\\n1 100 1 1') == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == 18\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == -1\n\nassert solution('''\n4 3 1\n1 100 1 1\n''') == 100",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\n00100') == '3\\n'\nassert solution('6 1\\n000000') == '21\\n'\nassert solution('4 1\\n0011') == '4\\n'\nassert solution('12 6\\n000010000100') == '15\\n'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"azzel\\napple\\n\") == \"Yes\\n\"\nassert solution(\"apple\\nbanana\\n\") == \"No\\n\"\nassert solution(\"banana\\napple\\n\") == \"No\\n\"\nassert solution(\"aabbcc\\nabcddd\\n\") == \"No\\n\"\nassert solution(\"zzzabbcc\\nnnnbbbdd\\n\") == \"Yes\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"azzel\") == \"Yes\\n\"\nassert solution(\"apple\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"apple\\napple\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aabbb\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\napple can be changed to apple, as follows:\\n - Choose e as c_1 and l as c_2. azzel becomes azzle.\\n - Choose z as c_1 and p as c_2. azzle becomes apple.\"\nassert solution(\"hello\") == \"No\\nNo solution found.\"\nassert solution(\"abcdefghijk\") == \"No\\nNo solution found.\"\nassert solution(\"abcdef\") == \"No\\nNo solution found.\"",
        "num_ids_2": 82,
        "num_ids_4": 113
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('azzel\\napple\\n') == 'Yes'\nassert solution('apple\\napple\\n') == 'No'\nassert solution('azzer\\nazzer\\n') == 'Yes'\nassert solution('apple\\napple\\n') == 'No'\nassert solution('azzer\\nazzer\\n') == 'No'\nassert solution('apple\\napple\\n') == 'No'\nassert solution('azzer\\nazzer\\n') == 'No'",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"abcde\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"The minimum amount of money needed to achieve the objective is: $35.55\\n\"",
        "num_ids_2": 213,
        "num_ids_4": 213
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 'The minimum amount of money needed to achieve the objective is $25,000.00.\\n'",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"11\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1000\") == \"1000\"",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\"",
        "num_ids_2": 581,
        "num_ids_4": 581
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).There is no other way to increase the understanding levels of the algorithms.Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).There is no other way to increase the understanding levels of the algorithms.Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 'Takahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).There is no other way to increase the understanding levels of the algorithms.Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.'\nassert solution('The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).') == 'The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).'\nassert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms.Initially, his understanding level of each of the M algorithms is 0.Takahashi is visiting a bookstore, where he finds N books on algorithms.The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,",
        "num_ids_2": 911,
        "num_ids_4": 1024
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Minimum amount of money needed: 499 yen\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Minimum amount of money needed: 399 yen\\n\"",
        "num_ids_2": 422,
        "num_ids_4": 422
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nMinimum amount of money needed: $145,000.00\"",
        "num_ids_2": 393,
        "num_ids_4": 393
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 3 algorithms with a total understanding level of 8 and achieved a total understanding level of 11. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 9 and achieved a total understanding level of 10. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 7 and achieved a total understanding level of 8. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 7 and achieved a total understanding level of 6. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 6 and achieved a total understanding level of 7. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 4 and achieved a total understanding level of 5. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 3 and achieved a total understanding level of 4. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 2 and achieved a total understanding level of 3. The minimum amount of money needed to achieve the objective is 50 yen.\\n\\nTakahashi has learned 1 algorithm with a total understanding level of 1 and achieved a total understanding level of 2. The minimum amount of money needed to achieve the objective is 50 yen.\"\n\nassert solution(\"Kevin, who is a senior programmer and wants to learn data structures and algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nKevin is studying for a graduate degree in computer science and he finds N programming assignments on algorithms.\\nThe i-th assignment (1\\\\leq i\\\\leq N) is solved for C_i yen (the currency of Japan). If he submits and solves it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nKevin's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nKevin's understanding of algorithms X or higher is not sufficient, and he wants to learn M algorithms.\\n\\nKevin is interested in solving N programming assignments and he wants to increase his understanding levels of all the M algorithms.\\n\\nKevin's attention to detail is not sufficient, and he wants to see more of the algorithms he learns.\\n\\nKevin is looking for a job in a software company where he can start learning M algorithms.\\n\\nKevin is interested in solving programming assignments and he wants to increase his understanding levels of all the M algorithms.\\n\\nKevin's attention to detail is not sufficient, and he wants to see more of the algorithms he learns.\\n\\nKevin is looking for a job in a software company where he can start learning M algorithms.\\n\\nKevin is interested in solving programming assignments and he wants to increase his",
        "num_ids_2": 1024,
        "num_ids_4": 1024
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve the objective is: 2600 yen\"",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.",
        "num_ids_2": 368,
        "num_ids_4": 368
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 100\\n1 100\") == \"1\"\nassert solution(\"1 100\\n1 500\") == \"2\"\nassert solution(\"1 1000\\n1 1000\") == \"1\"\nassert solution(\"1000 1000\\n1000 1000\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 93
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"5 900\") == \"0\\n\"\nassert solution(\"100 100\") == \"1\\n\"\nassert solution(\"200 200\") == \"2\\n\"\nassert solution(\"500 500\") == \"3\\n\"\nassert solution(\"100 200\") == \"3\\n\"\nassert solution(\"300 300\") == \"3\\n\"\nassert solution(\"1000 500\") == \"5\\n\"\nassert solution(\"1000 700\") == \"6\\n\"\nassert solution(\"1000 1000\") == \"6\\n\"\nassert solution(\"1000 1200\") == \"6\\n\"\nassert solution(\"1000 1500\") == \"6\\n\"\nassert solution(\"1000 1800\") == \"7\\n\"\nassert solution(\"1000 2000\") == \"7\\n\"\nassert solution(\"1000 2500\") == \"7\\n\"\nassert solution(\"1000 2800\") == \"8\\n\"\nassert solution(\"1000 3000\") == \"8\\n\"\nassert solution(\"1000 3500\") == \"8\\n\"\nassert solution(\"1000 4000\") == \"9\\n\"\nassert solution(\"1000 4500\") == \"9\\n\"\nassert solution(\"1000 5000\") == \"9\\n\"\nassert solution(\"1000 5500\") == \"9\\n\"\nassert solution(\"1000 6000\") == \"9\\n\"\nassert solution(\"1000 6500\") == \"9\\n\"\nassert solution(\"1000 7000\") == \"10\\n\"\nassert solution(\"1000 7500\") == \"10\\n\"\nassert solution(\"1000 8000\") == \"10\\n\"\nassert solution(\"1000 8500\") == \"10\\n\"\nassert solution(\"1000 9000\") == \"10\\n\"\nassert solution(\"1000 9500\") == \"10\\n\"\nassert solution(\"1000 10000\") == \"10\\n\"\nassert solution(\"1000 10500\") == \"10\\n\"\nassert solution(\"1000 11000\") == \"10\\n\"\nassert solution(\"1000 11500\") == \"10\\n\"\nassert solution(\"1000 12000\") == \"11\\n\"\nassert solution(\"1000 12500\") == \"11\\n\"\nassert solution(\"1000 13000\") == \"11\\n\"\nassert solution(\"1000 13500\") == \"11\\n\"\nassert solution(\"1000 14000\") == \"11\\n\"\nassert solution(\"1000 14500\") == \"11\\n\"\nassert solution(\"1000 15000\") == \"11\\n\"\nassert solution(\"1000 15500\") == \"11\\n\"\nassert solution(\"1000 16000\") == \"11\\n\"\nassert solution(\"1000 16500\") == \"12\\n\"\nassert solution(\"1000 17000\") == \"12\\n\"\nassert solution(\"1000 17500\") == \"12\\n\"\nassert solution(\"1000 18000\") == \"12\\n\"\nassert solution(\"1000 18500\") == \"12\\n\"\nassert solution(\"1000 19000\") == \"12\\n\"\nassert solution(\"1000 ",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"All set!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"1 1000\\n2 5000\\n3 10000\") == \"4\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"2 800\\n3 600\\n5 1000\") == \"4\\n\"\nassert solution(\"2 1000\\n3 700\\n5 1500\") == \"5\\n\"\nassert solution(\"2 1500\\n3 800\\n5 2000\") == \"6\\n\"\nassert solution(\"2 2000\\n3 900\\n5 2500\") == \"7\\n\"\nassert solution(\"2 2500\\n3 1000\\n5 3000\") == \"8\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2, \"Output: 2\"\nassert solution(9) == 3, \"Output: 3\"\nassert solution(8) == 2, \"Output: 2\"\nassert solution(7) == 2, \"Output: 2\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(8) == 2, \"Test case 8\"\nassert solution(9) == 2, \"Test case 9\"\nassert solution(7) == 2, \"Test case 7\"\nassert solution(5) == 2, \"Test case 5\"\nassert solution(4) == 2, \"Test case 4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2\\n'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '2\\n'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3\\n'",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == 2, \"Tanya should eat exactly 2 candies in each day, but she's eating 7 instead.\"\nassert solution(8) == 2, \"Tanya should eat exactly 2 candies in each day, but she's eating 8 instead.\"\nassert solution(9) == 3, \"Tanya should eat exactly 3 candies in each day, but she's eating 9 instead.\"",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\\n\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\\n\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == -1\nassert solution('4 3 1\\n1 100 1 1\\n') == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 18, \"Your solution is incorrect\"\nassert solution(5) == 18, \"Your solution is incorrect\"\nassert solution(4) == 100, \"Your solution is incorrect\"\nassert solution(1) == 1, \"Your solution is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"5\") == \"No\"\nassert solution(\"101\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"Yes\\n\"\nassert solution(\"22\") == \"No\\n\"\nassert solution(\"1\") == \"No\\n\"\nassert solution(\"2\") == \"No\\n\"\nassert solution(\"3\") == \"Yes\\n\"\nassert solution(\"4\") == \"Yes\\n\"\nassert solution(\"5\") == \"Yes\\n\"\nassert solution(\"6\") == \"Yes\\n\"\nassert solution(\"7\") == \"Yes\\n\"\nassert solution(\"8\") == \"Yes\\n\"\nassert solution(\"9\") == \"Yes\\n\"\nassert solution(\"10\") == \"Yes\\n\"\nassert solution(\"11\") == \"Yes\\n\"\nassert solution(\"12\") == \"Yes\\n\"\nassert solution(\"13\") == \"Yes\\n\"\nassert solution(\"14\") == \"Yes\\n\"\nassert solution(\"15\") == \"Yes\\n\"\nassert solution(\"16\") == \"Yes\\n\"\nassert solution(\"17\") == \"Yes\\n\"\nassert solution(\"18\") == \"Yes\\n\"\nassert solution(\"19\") == \"Yes\\n\"\nassert solution(\"20\") == \"Yes\\n\"\nassert solution(\"21\") == \"Yes\\n\"\nassert solution(\"22\") == \"Yes\\n\"\nassert solution(\"23\") == \"Yes\\n\"\nassert solution(\"24\") == \"Yes\\n\"\nassert solution(\"25\") == \"Yes\\n\"\nassert solution(\"26\") == \"Yes\\n\"\nassert solution(\"27\") == \"Yes\\n\"\nassert solution(\"28\") == \"Yes\\n\"\nassert solution(\"29\") == \"Yes\\n\"\nassert solution(\"30\") == \"Yes\\n\"\nassert solution(\"31\") == \"Yes\\n\"\nassert solution(\"32\") == \"Yes\\n\"\nassert solution(\"33\") == \"Yes\\n\"\nassert solution(\"34\") == \"Yes\\n\"\nassert solution(\"35\") == \"Yes\\n\"\nassert solution(\"36\") == \"Yes\\n\"\nassert solution(\"37\") == \"Yes\\n\"\nassert solution(\"38\") == \"Yes\\n\"\nassert solution(\"39\") == \"Yes\\n\"\nassert solution(\"40\") == \"Yes\\n\"\nassert solution(\"41\") == \"Yes\\n\"\nassert solution(\"42\") == \"Yes\\n\"\nassert solution(\"43\") == \"Yes\\n\"\nassert solution(\"44\") == \"Yes\\n\"\nassert solution(\"45\") == \"Yes\\n\"\nassert solution(\"46\") == \"Yes\\n\"\nassert solution(\"47\") == \"Yes\\n\"\nassert solution(\"48\") == \"Yes\\n\"\nassert solution(\"49\") == \"Yes\\n\"\nassert solution(\"50\") == \"Yes\\n\"\nassert solution(\"51\") == \"Yes\\n\"\nassert solution(\"52\") == \"Yes\\n\"\nassert solution(\"53\") == \"Yes\\n\"\nassert solution(\"54\") == \"Yes\\n\"\nassert solution(\"55\") == \"Yes\\n\"\nassert solution(\"56\") == \"Yes\\n\"\nassert solution(\"57\") == \"Yes\\n\"\nassert solution(\"58\") == \"Yes\\n\"\nassert solution(\"59\") == \"Yes\\n\"\nassert solution(\"60\") == \"Yes\\n\"\nassert solution(\"61\") == \"Yes\\n\"\nassert solution(\"62\") == \"Yes\\n\"\nassert solution(\"63\") == \"Yes\\n\"\nassert solution(\"64\") == \"Yes\\n\"\nassert solution(\"65\") == \"Yes\\n\"\nassert solution(\"66\") == \"Yes\\n\"\nassert solution(\"67\") == \"Yes\\n\"\nassert solution(\"68\") == \"Yes\\n\"\nassert solution(\"69\") == \"Yes\\n\"\nassert solution(\"70\") == \"Yes\\n\"\nassert solution(\"71\") == \"Yes\\n\"\nassert solution(\"72\") == \"Yes\\n\"\nassert solution(\"73\") == \"Yes\\n\"\nassert solution(\"74\") == \"Yes\\n\"\nassert solution(\"75\") == \"Yes\\n\"\nassert solution(\"76\") == \"Yes\\n\"\nassert solution(\"77\") == \"Yes\\n\"\nassert solution(\"78\") == \"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\n\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 2 6\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 2 6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 2 6\\n', 'The solution is incorrect.'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"1 1 1\") == \"1 1 1\\n\"\nassert solution(\"1 1 0\") == \"0 0 0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 87
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2 2 6\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nprint(\"All test cases pass\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Invalid solution for Takahashi's palindrome problem\"\nprint(\"Test passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"hello\") == \"1\"\nassert solution(\"racecar\") == \"2\"\nassert solution(\"apple\") == \"1\"\nassert solution(\"ant\") == \"0\"\nassert solution(\"abcd\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"abcedf\") == \"3\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"zyxwvutsrqponmlkjihgfedcba\") == \"6\"\nassert solution(\"abcde\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 55
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Test case failed: solution(redcoder) should return 1, but returned: {}\".format(solution(\"redcoder\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Test case 1\"\nassert solution(\"racecar\") == \"2\", \"Test case 2\"\nassert solution(\"hello\") == \"2\", \"Test case 3\"\nassert solution(\"abcdef\") == \"2\", \"Test case 4\"\nassert solution(\"hello1234\") == \"3\", \"Test case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"Yes\\n\", \"Solution should print Yes for 10\"\nassert solution(\"5\") == \"No\\n\", \"Solution should print No for 5\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes\\n'\nassert solution('4') == 'No\\n'\nassert solution('5') == 'Yes\\n'\nassert solution('9') == 'No\\n'\nassert solution('11') == 'Yes\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 'Yes\\n'\nassert solution(5) == 'No\\n'\nassert solution(15) == 'No\\n'\nassert solution(0) == 'No\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(20) == \"No\"\nassert solution(100) == \"No\"\nassert solution(101) == \"Yes\"\nassert solution(200) == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"Yes\\n10 can be represented as, for example, 2 \\times 5.\\n\"\nassert solution(\"5\") == \"No\\n5 cannot be represented as the product of two integers between 1 and 9.\\n\"\nassert solution(\"7\") == \"No\\n7 cannot be represented as the product of two integers between 1 and 9.\\n\"\nassert solution(\"20\") == \"Yes\\n20 can be represented as, for example, 1 \\times 2 \\times 5 \\times 3 \\times 6 \\times 10 \\times 20.\\n\"\nassert solution(\"1\") == \"No\\n1 cannot be represented as the product of two integers between 1 and 9.\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 144
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"Yes\"\n\nassert solution(5) == \"No\"\n\nassert solution(15) == \"No\"\n\nassert solution(30) == \"Yes\"\n\nassert solution(1) == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"Yes\", \"Test 1 failed\"\nassert solution(15) == \"No\", \"Test 2 failed\"\nassert solution(12) == \"No\", \"Test 3 failed\"\nassert solution(20) == \"Yes\", \"Test 4 failed\"\nassert solution(30) == \"No\", \"Test 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\", \"The given input is invalid.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"\nassert solution(\"5 4 9 7 5\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 4 9 7 5\\n\") == \"5\\n\"\nassert solution(\"4\\n3 5 6\\n\") == \"3\\n\"\nassert solution(\"4\\n2 3 5\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"1\\n1 1 1\\n\") == \"1\\n\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"Testcase Failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"Test Failed\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\\n2 5 = 10.\\n\"\nassert solution(\"10 20\") == \"-1\\n\"\nassert solution(\"3 4\") == \"-1\\n\"\nassert solution(\"10 5\") == \"10\\n25 = 20.\\n\"\nassert solution(\"20 10\") == \"-1\\n\"\nassert solution(\"10 3\") == \"-1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"3 5\") == -1\nassert solution(\"5 5\") == -1\nassert solution(\"1 1\") == -1",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\\n\", \"Test 1\"\nassert solution(\"10 5\") == \"10\\n10 \\times 5 = 50.\\n\", \"Test 2\"\nassert solution(\"5 5\") == \"-1\\n5 \\times 5 = -10.\\n\", \"Test 3\"\nassert solution(\"10 10\") == \"10\\n10 \\times 10 = 100.\\n\", \"Test 4\"\nassert solution(\"20 5\") == \"-1\\n20 \\times 5 = -10.\\n\", \"Test 5\"",
        "num_ids_2": 64,
        "num_ids_4": 130
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\"\nassert solution(\"2 5\") == \"-1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\\n\", \"Test case 1 failed\"\n\nassert solution(\"3 4\") == \"-1\\n\", \"Test case 2 failed\"\n\nassert solution(\"10 0\") == \"-1\\n\", \"Test case 3 failed\"\n\nassert solution(\"30 0\") == \"10\\n\", \"Test case 4 failed\"\n\nassert solution(\"0 0\") == \"10\\n\", \"Test case 5 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 99
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'2 5') == '10\\n'\nassert solution(b'10 5') == '2 \\times 5 = 10\\n'\nassert solution(b'7 3') == '-1\\n'\nassert solution(b'5 2') == '-1\\n'\nassert solution(b'10 0') == '-1\\n'\nassert solution(b'0 10') == '-1\\n'",
        "num_ids_2": 42,
        "num_ids_4": 74
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('10 3') == '-1'\nassert solution('7 2') == '7'\nassert solution('20 10') == '-1'\nassert solution('4 0') == '-1'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 0\") == \"-1\"\nassert solution(\"3 0\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5') == '10\\n2 \\times 5 = 10.'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n\") == \"10\"\nassert solution(\"3 5\\n\") == \"15\"\nassert solution(\"4 5\\n\") == \"20\"\nassert solution(\"1000 5000\\n\") == \"10000\"\nassert solution(\"-1 5\\n\") == -1\nassert solution(\"10 0\\n\") == \"10\"",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5\\n'\nassert solution('1 2\\n3 4') == '2\\n'\nassert solution('10 1\\n0 0\\n0 0\\n0 0\\n0 0') == '1\\n'\nassert solution('1 1\\n1 1') == '2\\n'",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nprint(\"All test cases passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(stdin=\"4 5\\n1 2 3 4 5\") == \"5\"\nassert solution(stdin=\"5 5\\n1 2 3 4 5\") == \"5\"\nassert solution(stdin=\"6 5\\n1 2 3 4 5\") == \"6\"\nassert solution(stdin=\"7 5\\n1 2 3 4 5\") == \"6\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n', \"Test Case 1 Failed.\"\n\nsolution()",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"5\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 180
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\"",
        "num_ids_2": 98,
        "num_ids_4": 142
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '1\\n101001\\n'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110'",
        "num_ids_2": 192,
        "num_ids_4": 254
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n1110\\n1011\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 180
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 180
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n1110\\n1011'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"2\\n1110\\n1011\\n\"\n\nassert solution(\"\"\"\n4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"1\\n101001\\n\"\n\nassert solution(\"\"\"\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\"\"\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 92,
        "num_ids_4": 140
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 102,
        "num_ids_4": 152
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'YES'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"\n",
        "num_ids_2": 92,
        "num_ids_4": 140
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())} instead.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution(r'3\\n4 5 3\\n') == 'YES\\n'\nassert solution(r'2\\n10 10\\n') == 'YES\\n'\nassert solution(r'3\\n1 2 3\\n') == 'NO\\n'",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"-1\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 44,
        "num_ids_4": 113
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == -1\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Wrong output: {solution(stdin)}!= {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1000 6\\n-100 -200 -300 125 77 -4\\n\") == \"9\\n\"\nassert solution(stdin=\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\\n\"\nassert solution(stdin=\"10 4\\n-3 -6 5 4\\n\") == \"-1\\n\"\n\nfrom typing import List",
        "num_ids_2": 98,
        "num_ids_4": 127
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nZZZAA\") == \"ZZ\"\nassert solution(\"7\\nABACABA\") == \"AB\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nABACABA\\n\") == \"AB\"\nassert solution(\"5\\nZZZAA\\n\") == \"ZZ\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"AB\", \"Expected output 'AB', got '{}'\".format(solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nABACABA\\n\") == \"AB\"\nassert solution(\"5\\nZZZAA\\n\") == \"ZZ\"\n\nfor i in range(2, 11):\n    assert solution(f\"{i}\\n\") == f\"{i}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"a\"\nassert solution(\"ab\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"est\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"\") == \"\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"est\", \"Incorrect solution for test\"\nassert solution(\"west\") == \"\", \"Incorrect solution for west\"\nassert solution(\"codeforces\") == \"es\", \"Incorrect solution for codeforces\"\nassert solution(\"yes\") == \"es\", \"Incorrect solution for yes\"\nassert solution(\"b\") == \"b\", \"Incorrect solution for b\"\nassert solution(\"ab\") == \"ab\", \"Incorrect solution for ab\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"a\"\nassert solution(\"ab\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 7 11\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6\\n\") == \"3\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7\\n\") == \"4\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8\\n\") == \"5\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10\\n\") == \"7\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11\\n\") == \"8\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13\\n\") == \"10\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14\\n\") == \"11\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"12\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"13\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"14\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"15\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"16\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"17\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"18\\n\"\nassert solution(\"3 3\\n1 7 11\\n1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"19\\n\"\nassert solution(\"3 3\\n",
        "num_ids_2": 53,
        "num_ids_4": 117
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"3 3\\n1 2 3\") == \"2\"\nassert solution(\"3 3\\n1 7 8 9 10\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7 11\\n') == '2\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"4 5\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"5 7\\n1 2 5 8 10\") == \"3\"\nassert solution(\"3 2\\n1 4 2 6 8\") == \"3\"\nassert solution(\"6 9\\n-2 4 -1 0 2\") == \"3\"\nassert solution(\"3 4\\n3 3 1 2\") == \"2\"\nassert solution(\"10 2\\n6 5 4 3 2\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"S is not a strong palindrome.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"abba\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"kakakaka\") == \"No\"\nassert solution(\"aabbccddeeffggggg\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes', \"Solution should return Yes\"\nassert solution('a') == 'No', \"Solution should return No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"banana\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"200 0.99\") == \"199\"\nassert solution(\"1000 0.01\") == \"1000\"\nassert solution
        "num_ids_2": 38,
        "num_ids_4": 1027
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"20 1.10\") == \"20\"\nassert solution(\"1000 0.10\") == \"1000\"\nassert solution(\"1000 1.0\") == \"1000\"\nassert solution(\"1000 1.1\") == \"1000\"\nassert solution(\"1000 10.1\") == \"1000\"\nassert solution(\"1000 100.1\") == \"1000\"\nassert solution(\"1000 1000.1\") == \"1000\"\nassert solution(\"1000 10000.1\") == \"1000\"\nassert solution(\"1000 100000.1\") == \"1000\"\nassert solution(\"1000 1000000.1\") == \"1000\"",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n\nSolution:\n\n```python\nA, B = map(float, input().split())\nans = round(A * B)\nprint(ans)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == 217, \"Test case failed.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"5 2.0\") == \"2\"\nassert solution(\"100 5\") == \"10\"\nassert solution(\"100 0.5\") == \"10\"\nassert solution(\"100 0.05\") == \"10\"\nassert solution(\"1000000 10\") == \"100000\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nprint(solution(\"198 1.10\"))  # Output: 217",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Solution should return 217\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Test failed\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(4) == 0\nassert solution(5) == 1\nassert solution(6) == 0\nassert solution(7) == 1\nassert solution(8) == 999999999\nassert solution(9) == 381621773",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n0\\n0\\n1\\n999999999\" # expected output\nprint(\"All tests passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n0\\n0\\n1\\n999999999\\n381621773\\n\", \"Expected output: '3\\n0\\n0\\n1\\n999999999\\n381621773\\n', but got: '{}'.\".format(solution(stdin))",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"ok\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Expected 3 but got {}\".format(solution(3))\nassert solution(7) == 0, \"Expected 0 but got {}\".format(solution(7))\nassert solution(1) == 0, \"Expected 0 but got {}\".format(solution(1))\nassert solution(2) == 1, \"Expected 1 but got {}\".format(solution(2))\nassert solution(3) == 1, \"Expected 1 but got {}\".format(solution(3))\nassert solution(2000000000) == 999999999, \"Expected 999999999 but got {}\".format(solution(2000000000))\nassert solution(763243547) == 381621773, \"Expected 381621773 but got {}\".format(solution(763243547))",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 3\nassert solution(\"6\\n1\\n2\\n3\\n2000000000\\n763243547\") == 0\nassert solution(\"1\\n2\\n3\\n2000000000\\n763243547\") == 0\nassert solution(\"2\\n3\\n2000000000\\n763243547\") == 1\nassert solution(\"763243547\\n2\\n3\\n2000000000\\n7\") == 999999999\nassert solution(\"2000000000\\n763243547\\n2\\n3\") == 381621773",
        "num_ids_2": 82,
        "num_ids_4": 155
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"6\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\" == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"6\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n7",
        "num_ids_2": 121,
        "num_ids_4": 638
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: Expected output {output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\"\"\") == 3\n\nassert solution(\"\"\"5 4 5\n1 2\n2 3\n3 4\n4 1\"\"\") == 1\n\nassert solution(\"\"\"1\"\"\") == 0\n\nassert solution(\"\"\"5 0\n1 2\n2 3\n3 4\n4 1\"\"\") == 0\n\nassert solution(\"\"\"1 2\n3 4\n5 6\n7 8\n9 10\"\"\") == 5\n\nassert solution(\"\"\"5 1\n1 2\n2 3\n3 4\n4 1\"\"\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == 3\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == 1",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\"\nfor input, output in zip(stdin.readlines(), stdout.readlines()):\n    assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == 3\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == 1\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('5 4 1\\n1 2\\n2 3\\n3 4\\n4 1') == '0'",
        "num_ids_2": 93,
        "num_ids_4": 127
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == \"5\" # pass\nassert solution(1) == \"1\" # pass\nassert solution(10) == \"5\" # pass\nassert solution(150001) == \"5\" # pass\nassert solution(1) == \"1\" # pass",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4\\n'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5\\n'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4\\n'\n\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5\\n'\n\nassert solution('''\n4\n3 2 4 1\n''') == '4\\n'\n\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 2 4 1\\n\") == \"4\\n\", \"The output should be '4'\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\\n\") == \"5\\n\", \"The output should be '5'\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\", \"The output should be '2'\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\", \"The output should be '2'\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 128
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nprint(solution(\"2 3\\n1 32\\n2 63\\n1 12\"))",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 4\") == \"000001000003\\n000001000004\\n000002000001\\n000001000002\"\nassert solution(\"2 1\") == \"000001000001\"\nassert solution(\"1 1\") == \"000001000001\"\nassert solution(\"1 2\\n2 1\") == \"000001000002\\n000002000001\"\nassert solution(\"1 2\\n2 1\\n3 2\") == \"000001000002\\n000002000001\\n000003000001\"\nassert solution(\"1 2\\n2 1\\n3 2\\n4 3\") == \"000001000002\\n000002000001\\n000003000001\\n000004000001\"\nassert solution(\"1 1\\n2 1\") == \"000001000001\\n000002000001\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 4\") == \"000001000003\\n000001000004\\n000002000001\\n000001000002\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 4\") == \"000001000004\\n000002000001\\n000001000002\\n000002000003\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 4\\n3 5\") == \"000001000004\\n000002000001\\n000001000002\\n000002000003\\n000003000001\"\nassert solution(\"1 1\\n1 1\") == \"000001000001\\n000001000001\"\nassert solution(\"1 1\\n2 2\") == \"000001000001\\n000002000002\"\nassert solution(\"2 3\\n1 2\\n1 3\\n2 4\") == \"000001000002\\n000002000001\\n000001000003\\n000002000004\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 4\") == \"000001000003\\n000002000001\\n000001000004\\n000002000003\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 4\\n3 5\") == \"000001000003\\n000002000001\\n000001000004\\n000002000003\\n000003000002\"\nassert solution(\"4",
        "num_ids_2": 149,
        "num_ids_4": 195
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"5\\n3 10 20 30 40\") == \"3\\n\"\nassert solution(\"4\\n5 10 20 30 40\") == \"3\\n\"\nassert solution(\"5\\n10 20 30 40 50\") == \"3\\n\"\nassert solution(\"5\\n50 100 200 300 400\") == \"4\\n\"\nassert solution(\"5\\n100000 200000 300000 400000 500000\") == \"4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10\\n8\\n40\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"3\\n2 10 8 40\") == \"3\\n\"\nassert solution(\"1\\n2 10 8 40\") == \"1\\n\"\nassert solution(\"5\\n2 10 8 40\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(Input) == Output, f\"Output should be '{Output}', but got '{solution(Input)}'.\" for Input, Output in [\n    # Example 1\n    (\"?(_-_/___*__):-___>__. \", \"0010\"),\n    \n    # Example 2\n    (\"?(__-_+_/_____):-__>__,_____<__. \", \"false\"),\n    \n    # Example 3\n    (\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______. \", \"0250341\"),\n    \n    # Example 4\n    (\"?(__+___+__-___):-___>__. \", \"0101\")\n]",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"",
        "num_ids_2": 79,
        "num_ids_4": 138
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3,3,11) == 3, \"Test 1 failed\"\nassert solution(3,4,2) == 5, \"Test 2 failed\"\nassert solution(3,4,10000000000000000000) == 0, \"Test 3 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '0'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"\n\nfor i in range(1, 6):\n    for j in range(1, 6):\n        assert solution(str(i) + \" \" + str(j) + \" 11\\n\" + str(i) + \" \" + str(j) + \" 5\\n\" + str(i) + \" \" + str(j) + \" 10\\n\" + str(i) + \" \" + str(j) + \" 6\\n\" + str(i) + \" \" + str(j) + \" 4\") == str(i+1) + \"\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == 3\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == 5\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == 0",
        "num_ids_2": 77,
        "num_ids_4": 135
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 79,
        "num_ids_4": 111
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_str)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\nprint(\"All test cases passed\")",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"thisisexampletwo\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('rocesfedoc') == 'codeforces'\nassert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'\n",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"\n",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nassert solution(input()) == output(), \"Test failed\"\nassert solution(input()) == output(), \"Test failed\"\nassert solution(input()) == output(), \"Test failed\"\nassert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == 19, \"Test failed\"\nassert solution(\"381 492\") == 873, \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()}) should return {expected_output}, but returned {solution(input())}\"\n\nassert solution(input()) == expected_output, f\"Test failed: solution({input()}) should return {expected_output}, but returned {solution(input())}\"\n\nassert solution(input()) == expected_output, f\"Test failed: solution({input()}) should return {expected_output}, but returned {solution(input())}\"\n\nassert solution(input()) == expected_output, f\"Test failed: solution({input()}) should return {expected_output}, but returned {solution(input())}\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == \"19\", \"5 14 should return 19\"\nassert solution(\"381 492\") == \"873\", \"381 492 should return 873\"\n\nassert solution(\"1\") == \"1\", \"1 should return 1\"\nassert solution(\"0\") == \"0\", \"0 should return 0\"\nassert solution(\"a\") == \"0\", \"a should return 0\"\nassert solution(\"-1\") == \"0\", \"-1 should return 0\"\nassert solution(\"1000000\") == \"1000000\", \"1000000 should return 1000000\"",
        "num_ids_2": 58,
        "num_ids_4": 92
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 14') == 19\nassert solution('381 492') == 873",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\", \"A + B is not equal to 19\"\nassert solution(\"381 492\") == \"873\", \"A + B is not equal to 873\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == 19, \"The given input is invalid\"\nassert solution(\"381 492\") == 873, \"The given input is invalid\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++\"\n\nSolution:\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2+3') == '++>\\n+++>\\n<[+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n'\nassert solution('9-7') == '+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>+++>+<+++>+++>+<\", \"Input 2+3\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+++++++++++>+++++++++++>+++++++++++>+++++++++++>+++++++++++>+++++++++++>\", \"Input 9-7\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"++++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2+3') == '++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n', \"Test 1 failed\"\nassert solution('9-7') == '+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n', \"Test 2 failed\"\nassert solution('') == '', \"Test 3 failed\"\n",
        "num_ids_2": 70,
        "num_ids_4": 82
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>+++>+++>++<+>-\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+++>+>+<-\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"+++>\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n\"\nassert solution(\"123456789\") == \"!!!!!!!!!!!!!!!\\n\"\nassert solution(\"a\") == \"!!!!!!!!!!!!!!!\\n\"\nassert solution(\"\") == \"!!!!!!!!!!!!!!!\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 65
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2+3) == '++>', \"Expected '++>', but got '{}' instead\".format(solution(2+3))  # should be '++>+++>+'\nassert solution(9-7) == '++++++++>+++++++>+<->-<+', \"Expected '++++++++>+++++++>+<->-<+', but got '{}' instead\".format(solution(9-7))  # should be '++++++++>+++++++++++++++>+++++++++++>+++++++++++>++++++++++++++<+++++++++++'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2+3\\n\") == \"++>+++>+[<+>-]<++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\\n\") == \"+++++++++>+++++++>+[<->-]<++++++++++++++++++++++++++++++++++++++++++++++++.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>+++>+++++++<+++++++++++>+++>+<+++>+++>+<+++>\"\nassert solution(\"9-7\") == \"++++++++++>+++++++>++++++++++>+++++++<++++++++++>+++++++<++++++++++>\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [1, 2, 5, 2, 0]\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == solution",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n99999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test cases have different outputs. Please fix the test cases and re-run the solution.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n1",
        "num_ids_2": 115,
        "num_ids_4": 1027
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n20",
        "num_ids_2": 119,
        "num_ids_4": 1027
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"575\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"4\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"4\\n\", \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == 4, \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == 4\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == 4, \"The output should be 4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == 4, \"The number of Shichi-Go-San numbers between 1 and 575 is not 4\"\nassert solution(576) == 0, \"The number of Shichi-Go-San numbers between 1 and 576 is not 0\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"12\") == \"0\"\nassert solution(\"546\") == \"2\"\nassert solution(\"536\") == \"1\"\nassert solution(\"777\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000\") == \"1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('000') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000\") == 1\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"000\") == \"1\", \"Invalid Input\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('000') == 1, \"The condition can be satisfied by repainting the middle tile white.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"000\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=0) == 1\nassert solution(stdin=\"000\") == 1\nassert solution(stdin=\"111\") == 2\nassert solution(stdin=\"110\") == 2\nassert solution(stdin=\"011\") == 2\nassert solution(stdin=\"101\") == 2\nassert solution(stdin=\"010\") == 2\nassert solution(stdin=\"100\") == 2\nassert solution(stdin=\"001\") == 3\nassert solution(stdin=\"11111\") == 5\nassert solution(stdin=\"00001\") == 5\nassert solution(stdin=\"00010\") == 5\nassert solution(stdin=\"00101\") == 5\nassert solution(stdin=\"01010\") == 5\nassert solution(stdin=\"01100\") == 5\nassert solution(stdin=\"01111\") == 5\nassert solution(stdin=\"01001\") == 5\nassert solution(stdin=\"10100\") == 5\nassert solution(stdin=\"11011\") == 5\nassert solution(stdin=\"10001\") == 5\nassert solution(stdin=\"10110\") == 5\nassert solution(stdin=\"11000\") == 5\nassert solution(stdin=\"10000\") == 5\nassert solution(stdin=\"01011\") == 5\nassert solution(stdin=\"01101\") == 5\nassert solution(stdin=\"01110\") == 5\nassert solution(stdin=\"011001\") == 5\nassert solution(stdin=\"011110\") == 5\nassert solution(stdin=\"010001\") == 5\nassert solution(stdin=\"101110\") == 5\nassert solution(stdin=\"110011\") == 5\nassert solution(stdin=\"100101\") == 5\nassert solution(stdin=\"101010\") == 5\nassert solution(stdin=\"101100\") == 5\nassert solution(stdin=\"101111\") == 5\nassert solution(stdin=\"100011\") == 5\nassert solution(stdin=\"1010011\") == 5\nassert solution(stdin=\"1011101\") == 5\nassert solution(stdin=\"1011010\") == 5\nassert solution(stdin=\"1000010\") == 5\nassert solution(stdin=\"10111001\") == 5\nassert solution(stdin=\"10110010\") == 5\nassert solution(stdin=\"1000101\") == 5\nassert solution(stdin=\"1010110\") == 5\nassert solution(stdin=\"1011011\") == 5\nassert solution(stdin=\"1010000\") == 5\nassert solution(stdin=\"10111010\") == 5\nassert solution(stdin=\"10101011\") == 5\nassert solution(stdin=\"10010011\") == 5\nassert solution(stdin=\"10100101\") == 5\nassert solution(stdin=\"10111000\") == 5\nassert solution(stdin=\"10100110\") == 5\nassert solution(stdin=\"10110001\") == 5\nassert solution(stdin=\"1000111\") == 5\nassert solution(stdin=\"10101110\") == 5\nassert solution(stdin=\"10111101\") == 5\nassert solution(stdin=\"101100001\") == 5\nassert solution(stdin=\"101011100\") == 5\nassert solution(stdin=\"101010001\") == 5\nassert solution(stdin=\"101110111\") == 5\nassert solution(stdin=\"101111110\") == 5\nassert solution(stdin=\"101101111\") == 5\nassert solution(stdin=\"1011100011\") == 5\nassert solution(stdin=\"101100",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"5\\n6 8 10 31\") == \"DENIED\"\nassert solution(\"5\\n7 9 10 31\") == \"DENIED\"\nassert solution(\"5\\n8 10 31\") == \"DENIED\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1\\n1\") == \"APPROVED\"\nassert solution(\"5\\n6 7 9 10 30\") == \"DENIED\"\nassert solution(\"1\\n2\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 31\") == \"DENIED\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input_data)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\", \"Expected APPROVED, got {}\".format(solution(\"5\\n6 7 9 10 31\"))\nassert solution(\"5\\n2 3 4 5 6\") == \"DENIED\", \"Expected DENIED, got {}\".format(solution(\"5\\n2 3 4 5 6\"))",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\n\nassert solution(\"5\\n6 7 9 10 1\") == \"DENIED\"\n\nassert solution(\"5\\n6 7 9 10 30\") == \"DENIED\"",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"5\\n6 7 9 10 30\") == \"DENIED\"\nassert solution(\"5\\n6 7 8 10 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 30\") == \"DENIED\"\nassert solution(\"5\\n6 7 8 10 30\") == \"APPROVED\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"Yes\"\nassert solution(\"UDLUDRU\") == \"Yes\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD\") == \"No\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UDLUDDU\") == \"No\"\nassert solution(\"LDURDUU\") == \"No\"\nassert solution(\"LDUUDRU\") == \"No\"\nassert solution(\"DUDLUDR\") == \"No\"\nassert solution(\"DUDLDUU\") == \"No\"\nassert solution(\"LDUDLRU\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"No\"\nassert solution(\"UDLUDRU\") == \"No\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD\") == \"No\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UDLUDDU\") == \"No\"\nassert solution(\"LDURDUU\") == \"No\"\nassert solution(\"LDUUDRU\") == \"No\"\nassert solution(\"DUDLUDR\") == \"No\"\nassert solution(\"DUDLDUU\") == \"No\"\nassert solution(\"LDUDLRU\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"No\"\nassert solution(\"UDLUDRU\") == \"No\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD\") == \"No\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UDLUDDU\") == \"No\"\nassert solution(\"LDURDUU\") == \"No\"\nassert solution(\"LDUUDRU\") == \"No\"\nassert solution(\"DUDLUDR\") == \"No\"\nassert solution(\"DUDLDUU\") == \"No\"\nassert solution(\"LDUDLRU\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"No\"\nassert solution(\"UDLUDRU\") == \"No\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD\") == \"No\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UDLUDDU\") == \"No\"\nassert solution(\"LDURDUU\") == \"No\"\nassert solution(\"LDUUDRU\") == \"No\"\nassert solution(\"DUDLUDR\") == \"No\"\nassert solution(\"DUDLDUU\") == \"No\"\nassert solution(\"LDUDLRU\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"No\"\nassert solution(\"UDLUDRU\") == \"No\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD\") == \"No\"\nassert solution(\"UDRUUDL\") == \"No\"\nassert solution(\"UDLUDDU\") == \"No\"\nassert solution(\"LDURDUU\") == \"No\"\nassert solution(\"LDUUDRU\") == \"No\"\nassert solution(\"DUDLUDR\") == \"No\"\nassert solution(\"DUDLDUU\") == \"No\"\nassert solution(\"LDUDLRU\") == \"No\"\nassert solution(\"UUUDLRU\") == \"No\"\nassert solution(\"UUUUUDL\") == \"No\"\nassert solution(\"URDLUDL\") == \"No\"\nassert solution(\"UDLUDRU\") == \"No\"\nassert solution(\"UDRUULD\") == \"No\"\nassert solution(\"UDLDUUU\") == \"No\"\nassert solution(\"RDUUUUD",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDLDU\") == \"No\"\nassert solution(\"DRLRUDL\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"5\\n4\\n2\\n3\\n1\") == \"6\\n\"\nassert solution(\"4\\n2\\n3\\n1\") == \"2\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"12\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\") == \"12\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\\n\", \"Your code has incorrect output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\") == \"1\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"5\\n2\\n2\\n2\\n1\\n1\") == \"1\"",
        "num_ids_2": 56,
        "num_ids_4": 107
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7'\nprint('All tests passed!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '7'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\") == \"3\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\") == \"3\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\\n\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\\n\") == \"3\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\\n\\n\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\\n\\n\") == \"3\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\\n\\n\\n\") == \"7\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\\n\\n\\n\\n\") == \"3\"",
        "num_ids_2": 50,
        "num_ids_4": 104
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"6\\n2\\n1\\n5\\n4\\n6\") == \"7\"\nassert solution(\"6\\n3\\n5\\n1\\n2\\n4\") == \"7\"\nassert solution(\"6\\n4\\n5\\n2\\n1\\n3\") == \"7\"\nassert solution(\"6\\n4\\n5\\n2\\n1\\n6\") == \"7\"\n\nfor _ in range(10):\n    N, A, B, C, D, E = map(int, input().split())\n    assert solution(f\"{N}\\n{A}\\n{B}\\n{C}\\n{D}\\n{E}\") == \"7\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"2\\n\") == \"2\"\nassert solution(b\"3\\n\") == \"7\"\nassert solution(b\"10\\n\") == \"313\"\nassert solution(b\"100\\n\") == \"28741\"\nassert solution(b\"1000\\n\") == \"252051\"\nassert solution(b\"100000\\n\") == \"217915085\"",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\", \"One of the integers in the sequence is not 0 or 9\"\n\nfrom itertools import product\n\nN = int(stdin.readline())\n\nA_1, A_2 = [], []\nfor _ in range(N):\n    A_1.append(int(stdin.readline()))\n    A_2.append(int(stdin.readline()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'\\n') == '\\n'\nassert solution(b'2\\n') == '2\\n'\nassert solution(b'3\\n') == '3\\n'\nassert solution(b'100\\n') == '5120\\n'\nassert solution(b'2000\\n') == '2621440\\n'",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"10\") == \"3\"\nassert solution(\"9\") == \"8\"\nassert solution(\"11\") == \"2\"\nassert solution(\"21\") == \"10\"\nassert solution(\"31\") == \"18\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"9\\n\") == \"1\\n\"\nassert solution(\"10\\n\") == \"2\\n\"\nassert solution(\"11\\n\") == \"2\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\", \"Solution not correct\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"25\\n\"\nassert solution(\"10\\n\") == \"6765\\n\"\nassert solution(\"15\\n\") == \"46085\\n\"\nassert solution(\"20\\n\") == \"6105068\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(20) == 23, \"The minimum prime number greater than or equal to 20 is 23\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(20) == '23'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"23\", \"Expected output: 23, got: \" + solution(\"20\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(20) == \"23\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(20) == \"23\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(20) == 23, \"Test failed.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '23', \"The minimum prime number greater than or equal to {} is {}\".format(20, solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"20\") == \"23\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '23'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"20\") == \"23\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"4\\n3 2 1 2\") == \"2\\n\"\nassert solution(\"4\\n3 1 2 3\") == \"2\\n\"\nassert solution(\"4\\n3 2 1 3\") == \"1\\n\"\nassert solution(\"4\\n3 3 2 1\") == \"3\\n\"\nassert solution(\"4\\n3 3 1 2\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"2\\n\", \"Test case 3 failed\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1\\n\", \"Test case 4 failed\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"5\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Output should be 1, not {}.\".format(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1 3 2') == '1'\nassert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2') == '2'\nassert solution('6\\n3 1 3 2') == '2'\nassert solution('7\\n3 1 3 2') == '3'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\" # expected output: 1\nprint(\"All test cases passed\") # print a success message",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n3 1 3 2') == '1\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"5\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\") == \"23\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\") == \"23\"",
        "num_ids_2": 103,
        "num_ids_4": 227
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 100 90 80\n98\n40\n30\n21\n80\"\"\") == \"23\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nprint(\"All tests passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\") == \"23\", \"Test case 1 incorrect\"\nassert solution(\"98\") == \"2\", \"Test case 2 incorrect\"\nassert solution(\"40\") == \"10\", \"Test case 3 incorrect\"\nassert solution(\"30\") == \"1\", \"Test case 4 incorrect\"\nassert solution(\"21\") == \"8\", \"Test case 5 incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 83
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n1000\\n90\\n80\\n30\\n21\\n80\\n\") == \"30\\n\"\nassert solution(\"5 100 90 80\\n98\\n400\\n30\\n21\\n80\\n\") == \"1\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n300\\n21\\n80\\n\") == \"1\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n210\\n80\\n\") == \"1\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n800\\n\") == \"1\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 186
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"0\\nabc\") == \"abc\"\nassert solution(\"1\\nabc\") == \"acb\"\nassert solution(\"26\\nABCXYZ\") == \"ZABCYCDEFGHIJKLMNOPQRSTUVWXYZ\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"0\\n\") == \"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"2\\nhello\") == \"llohi\"\nassert solution(\"3\\nworld\") == \"rldw\"\nassert solution(\"5\\n\") == \"\"\nassert solution(\"5\\nabcd\") == \"abcd\"",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"CDEZAB\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nHello\") == \"LHRNO\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nYCIEA\") == \"CHIAEZC\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"1000\\n\") == \"\"",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nXYZ\") == \"ZYX\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"2\\nABC\") == \"\"\nassert solution(\"3\\nXYZAB\") == \"\"",
        "num_ids_2": 31,
        "num_ids_4": 52
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"CDEZAB\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2750131 199999\") == \"199999 3 199999\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n3 5 2 3 2 4\\n\\nOutput\\n3 4 2 \\n\\nInput\\n1\\n2750131 199999\\n\\nOutput\\n199999 \\n\\nInput\\n1\\n3 6\\n\\nOutput\\n6\\ndef solution(stdin: str) -> str:\\n    pass\") == \"3 4 2 \\n199999 \\n6\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\", \"The function should return the correct output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\\n\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\\n\") == \"199999 \"\nassert solution(\"1\\n3 6\\n\") == \"6\"",
        "num_ids_2": 62,
        "num_ids_4": 79
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 5 2 3 2 4') == '3 4 2 '\nassert solution('1\\n2750131 199999') == '199999  '\nassert solution('1\\n3 6') == '6'",
        "num_ids_2": 59,
        "num_ids_4": 74
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n199999 6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 5, 2, 3, 2, 4) == 3, \"Expected 3, but got {}\".format(solution(3, 5, 2, 3, 2, 4))\nassert solution(1, 2750131, 199999) == 199999, \"Expected 199999, but got {}\".format(solution(1, 2750131, 199999))\nassert solution(1, 3, 6) == 6, \"Expected 6, but got {}\".format(solution(1, 3, 6))\n",
        "num_ids_2": 122,
        "num_ids_4": 158
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '3 4 2 '\nassert solution(1) == '199999'\nassert solution(1) == '6'",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [3, 4, 2]\nassert solution(1) == [199999, 3, 6]",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '11111'\nassert solution() == '22111'\nassert solution() == '1121122'\nassert solution() == '21112'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122\\n'\nassert solution('5 1\\n2 4 5 3 1\\n') == '21112\\n'",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11111\"\nassert solution() == \"22111\"\nassert solution() == \"1121122\"\nassert solution() == \"21112\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\n\nassert solution(\"5 1\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    return \"11111\"\\n\\n    assert solution == \"11111\"\\n\\n    solution(\"5 2\\n2 4 5 3 1\\n\")\\n    assert solution == \"11111\"\\n\\n    solution(\"5 1\\n2 1 3 5 4\\n\")\\n    assert solution == \"22111\"\\n\\n    solution(\"7 1\\n7 2 1 3 5 4 6\\n\")\\n    assert solution == \"1121122\"\\n\\n    solution(\"5 1\\n2 4 5 3 1\\n\")\\n    assert solution == \"21112\"'",
        "num_ids_2": 195,
        "num_ids_4": 195
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7') == 2\nassert solution('2\\n100 1\\n4\\n1 3 3 7') == 2\nassert solution('4\\n1 3 3 7') == 4",
        "num_ids_2": 70,
        "num_ids_4": 88
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, '1 2 1 2 3') == 2\nassert solution(2, '100 1') == 2\nassert solution(4, '1 3 3 7') == 4",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Expected: {expected}, Received: {solution}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"4\"\nassert solution() == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2, \"Please fill the solution for the problem.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Your solution is incorrect.\"\nassert solution(input()) == \"2\", \"Your solution is incorrect.\"\nassert solution(input()) == \"2\", \"Your solution is incorrect.\"\nassert solution(input()) == \"4\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 7 1 5 4 9') == '1'\nassert solution('5') == '2'\nassert solution('16') == '1'\nassert solution('4 1 1 1023') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"[5, 3, 11]\") == \"1\"\nassert solution(\"[1, 1, 1, 1023]\") == \"0\"\nassert solution(\"[7, 39, 89, 25, 89]\") == \"0\"\nassert solution(\"[]\") == \"0\"\nassert solution(\"[16]\") == \"1\"\nassert solution(\"[4, 16]\") == \"1\"\nassert solution(\"[1, 3, 2, 8, 8, 8]\") == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7 1 5 4 9\") == \"1\", \"Your solution is incorrect.\"\nassert solution(\"5\") == \"2\", \"Your solution is incorrect.\"\nassert solution(\"16\") == \"1\", \"Your solution is incorrect.\"\nassert solution(\"4 1 1 1023\") == \"0\", \"Your solution is incorrect.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n4 7 1 5 4 9') == '1\\n'\nassert solution('5\\n1 2 3 4 5') == '2\\n'\nassert solution('1\\n16') == '1\\n'\nassert solution('4\\n1 1 1 1023') == '0\\n'",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='6\\n4 7 1 5 4 9\\n5\\n1 2 3 4 5\\n1\\n16\\n4\\n1 1 1 1023\\n0') == '1\\n'\nassert solution(stdin='5\\n1 2 3 4 5\\n2\\n1\\n16\\n4\\n1 1 1 1023\\n0') == '2\\n'\nassert solution(stdin='1\\n16\\n4\\n1 1 1 1023\\n0') == '1\\n'",
        "num_ids_2": 119,
        "num_ids_4": 155
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0011') == '4'\nprint(\"All four cubes can be removed, by performing the operation as follows:\")\nprint(\" - Remove the second and third cubes from the bottom. Then, the fourth cube drops onto the first cube.\")\nprint(\" - Remove the first and second cubes from the bottom.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\", \"The expected output is not as expected\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\\n\", \"Test Case 1\"\nassert solution(\"1111\") == \"5\\n\", \"Test Case 2\"\nassert solution(\"0101\") == \"3\\n\", \"Test Case 3\"\nassert solution(\"0100\") == \"4\\n\", \"Test Case 4\"\nassert solution(\"1100\") == \"5\\n\", \"Test Case 5\"\n\nfor _ in range(6):\n    stdin = input()\n    stdout = solution(stdin)\n    print(stdout)",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\", \"Test Case 1 failed\"\nassert solution(\"0000\") == \"1\", \"Test Case 2 failed\"\nassert solution(\"0101\") == \"2\", \"Test Case 3 failed\"\nassert solution(\"1000\") == \"1\", \"Test Case 4 failed\"\nassert solution(\"0101\") == \"2\", \"Test Case 5 failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0011\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0011') == '4', \"Test case 1 failed\"\nassert solution('1100') == '2', \"Test case 2 failed\"\nassert solution('1011') == '3', \"Test case 3 failed\"\nassert solution('1001') == '1', \"Test case 4 failed\"\nassert solution('0101') == '0', \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0011\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\n\nassert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\n\nassert solution(\"4 2\\n1 3\\n2 4\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case 1 failed\"\n\nassert solution(input()) == \"2\\n\", \"Test case 2 failed\"\n\nassert solution(input()) == \"2\\n\", \"Test case 3 failed\"\n\nassert solution(input()) == \"2\\n\", \"Test case 4 failed\"\n\nassert solution(input()) == \"2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n3 4\") == \"1\"\nassert solution(\"4 2\\n1 3\\n3 4\") == \"1\"\nassert solution(\"4 2\\n1 3\\n2 4\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3\\n2 4\\n') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"5 3\\n1 2\\n4 3\\n4 1\") == \"3\"\nassert solution(\"7 4\\n1 2\\n3 4\\n4 5\\n2 4\") == \"4\"",
        "num_ids_2": 49,
        "num_ids_4": 81
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\") == \"2\"\nassert solution(\"1 2\\n3 4\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 49,
        "num_ids_4": 78
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 5\\n4 6\") == \"4\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 5\\n4 6\") == \"2\"",
        "num_ids_2": 54,
        "num_ids_4": 86
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n2 4\\n') == '2\\n'\n\nassert solution('4 2\\n1 3\\n2 4\\n3 5\\n') == '2\\n'\n\nassert solution('4 2\\n1 3\\n2 4\\n3 5\\n6 7\\n') == '2\\n'\n\nassert solution('4 2\\n1 3\\n2 4\\n3 5\\n6 7\\n8 9\\n') == '0\\n'\n\nassert solution('4 2\\n1 3\\n2 4\\n3 5\\n6 7\\n8 9\\n10 11\\n') == '2\\n'",
        "num_ids_2": 57,
        "num_ids_4": 134
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"The output is not as expected.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 3 2 1\\n\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 4 3 2 1\\n\") == \"3\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 5 4 3 2 1\\n\") == \"3\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 6 5 4 3 2 1\\n\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 7 6 5 4 3 2 1\\n\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 110
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2', \"Test case not passed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 1\\n\") == \"2\"\nassert solution(\"4 1 2 2\\n\") == \"2\"\nassert solution(\"100 100 100 100\\n\") == \"0\"\nassert solution(\"100 100 100 100\\n\") == \"101\"\nassert solution(\"1 2 3 4\\n\") == \"1\"\nassert solution(\"1 2 3 4\\n\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 90
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Your code is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\"\nassert solution(\"3\\n5 1 6 7\\n\") == \"0\\n\"\nassert solution(\"1\\n100\\n\") == \"3\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 77
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 2 1\\n') == '2'\nassert solution('5\\n1 1 1 1 1\\n') == '2'\nassert solution('6\\n1 1 2 2 1\\n') == '3'\nassert solution('7\\n1 1 2 2 2\\n') == '3'\nassert solution('8\\n1 1 2 2 2 2\\n') == '4'\nassert solution('9\\n1 1 2 2 2 2 2\\n') == '5'",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n2 3 4 5 6\\n\") == \"2\"\nassert solution(\"10\\n2 4 4 6 8 8 10\\n\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 71
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution_output, f\"Expected output: {solution_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data}, expected output {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Got: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8\\n'\nassert solution('4\\n42 28 84 126') == '126 42 84 28\\n'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000\\n'",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8 '\nassert solution('4\\n42 28 84 126') == '126 42 84 28 '\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000' ",
        "num_ids_2": 70,
        "num_ids_4": 160
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n10000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 194
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\\n\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\"\n\nfrom typing import List",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\\n\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n3 5 4 7 10 12\\n5\\n-1 2 5 8 11\\n') == '3\\n7 3 5\\nInput\\n5\\n-1 2 5 8 11\\nOutput\\n1\\n8'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\\n5\\n-1 2 5 8 11\") == \"3\\n7 3 5\\nInput\\n5\\n-1 2 5 8 11\\nOutput\\n1\\n8\\n\"\n\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\\n\"\n\nassert solution(\"3\\n1 2 3 4 5\") == \"3\\n1 2 3\\nInput\\n5\\n-1 2 5 8 11\\nOutput\\n3\\n1 2 3\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 168
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    6\n    3 5 4 7 10 12\n    ''') == '''\n    3\n    7 3 5\n    '''\n\nassert solution('''\n    5\n        -1 2 5 8 11\n    ''') == '''\n    1\n    8\n    '''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n3 5 4 7 10 12\\n5\\n-1 2 5 8 11') == '3\\n7 3 5\\n1'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\nassert solution(5) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    6\n    3 5 4 7 10 12\n    5\n    1 -2 5 8 11\n    \"\"\") == \"\"\"\n    1\n    8\n    \"\"\"\n\nassert solution(\"\"\"\n    5\n    1 2 5 8 11\n    \"\"\") == \"\"\"\n    1\n    8\n    \"\"\"\n\nassert solution(\"\"\"\n    6\n    3 5 4 7 10 12\n    5\n    1 -2 5 8 11\n    \"\"\") == \"\"\"\n    1\n    8\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n3 5 4 7 10 12') == '3\\n7 3 5\\n'\nassert solution('5\\n-1 2 5 8 11') == '1\\n8\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\", \"Testcase 1 failed\"\nassert solution(\"1 1 1\") == \"0 1\", \"Testcase 2 failed\"\nassert solution(\"3 3 3\") == \"0 3\", \"Testcase 3 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 2\\n\"  # expected output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0 2\"\nassert solution(\"1 2 1\") == \"1 1\"\nassert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"5 10 20\") == \"5 5\"\nassert solution(\"3 0 10\") == \"0 0\"\nassert solution(\"0 0 0\") == \"0 0\"\nassert solution(\"5 0 5\") == \"5 5\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\", \"Invalid output. Expected: 3, actual: \" + solution(stdin)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"103\") == \"3\"\n\nprint(\"The balance after one year is\", 101)\nprint(\"The balance after two years is\", 102)\nprint(\"The balance after three years is\", 103)\nprint(\"Thus, it takes three years for the balance to reach 103 yen or above.\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(103) == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"103\") == \"3\\n\", \"Test failed\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103\") == \"3\\n\", \"The balance after one year is not 103 yen.\"\nassert solution(\"10000\") == \"3\\n\", \"The balance after one year is not 103 yen.\"\nassert solution(\"100000\") == \"3\\n\", \"The balance after one year is not 103 yen.\"\nassert solution(\"1000000\") == \"3\\n\", \"The balance after one year is not 103 yen.\"\nassert solution(\"10000000000\") == \"3\\n\", \"The balance after one year is not 103 yen.\"",
        "num_ids_2": 60,
        "num_ids_4": 125
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('103') == '3\\n'\nassert solution('100') == '1\\n'\nassert solution('50') == '0\\n'\nassert solution('10') == '0\\n'\nassert solution('0') == '0\\n'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"103\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '9\\n', \"Test Case 1 Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9\\n\", \"The given output is incorrect.\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '9\\n'\nassert solution('5\\n') == '39\\n'\nassert solution('10\\n') == '35\\n'",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'2\\n') == '9\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '9\\n', \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2\\n') == '9\\n'\nassert solution(stdin='3\\n') == '12\\n'\nassert solution(stdin='1\\n') == '1\\n'\nassert solution(stdin='5\\n') == '25\\n'\nassert solution(stdin='0\\n') == '0\\n'\nassert solution(stdin='10\\n') == '252525625625\\n'",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n\") == \"12\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n\") == \"19\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n\") == \"28\\n\", \"Test case 4 failed\"\nassert solution(\"6\\n\") == \"41\\n\", \"Test case 5 failed\"\nassert solution(\"7\\n\") == \"54\\n\", \"Test case 6 failed\"\nassert solution(\"8\\n\") == \"71\\n\", \"Test case 7 failed\"\nassert solution(\"9\\n\") == \"90\\n\", \"Test case 8 failed\"\nassert solution(\"10\\n\") == \"113\\n\", \"Test case 9 failed\"\nassert solution(\"11\\n\") == \"130\\n\", \"Test case 10 failed\"\nassert solution(\"12\\n\") == \"149\\n\", \"Test case 11 failed\"\nassert solution(\"13\\n\") == \"172\\n\", \"Test case 12 failed\"\nassert solution(\"14\\n\") == \"199\\n\", \"Test case 13 failed\"\nassert solution(\"15\\n\") == \"230\\n\", \"Test case 14 failed\"\nassert solution(\"16\\n\") == \"265\\n\", \"Test case 15 failed\"\nassert solution(\"17\\n\") == \"304\\n\", \"Test case 16 failed\"\nassert solution(\"18\\n\") == \"347\\n\", \"Test case 17 failed\"\nassert solution(\"19\\n\") == \"394\\n\", \"Test case 18 failed\"\nassert solution(\"20\\n\") == \"445\\n\", \"Test case 19 failed\"\nassert solution(\"21\\n\") == \"500\\n\", \"Test case 20 failed\"\nassert solution(\"22\\n\") == \"569\\n\", \"Test case 21 failed\"\nassert solution(\"23\\n\") == \"652\\n\", \"Test case 22 failed\"\nassert solution(\"24\\n\") == \"749\\n\", \"Test case 23 failed\"\nassert solution(\"25\\n\") == \"860\\n\", \"Test case 24 failed\"\nassert solution(\"26\\n\") == \"985\\n\", \"Test case 25 failed\"\nassert solution(\"27\\n\") == \"1124\\n\", \"Test case 26 failed\"\nassert solution(\"28\\n\") == \"1277\\n\", \"Test case 27 failed\"\nassert solution(\"29\\n\") == \"1444\\n\", \"Test case 28 failed\"\nassert solution(\"30\\n\") == \"1625\\n\", \"Test case 29 failed\"\nassert solution(\"31\\n\") == \"1820\\n\", \"Test case 30 failed\"\nassert solution(\"32\\n\") == \"2029\\n\", \"Test case 31 failed\"\nassert solution(\"33\\n\") == \"2252\\n\", \"Test case 32 failed\"\nassert solution(\"34\\n\") == \"2489\\n\", \"Test case 33 failed\"\nassert solution(\"35\\n\") == \"2740\\n\", \"Test case 34 failed\"\nassert solution(\"36\\n\") == \"3005\\n\", \"Test case 35 failed\"\nassert solution(\"37\\n\") == \"3284\\n\", \"Test case 36 failed\"\nassert solution(\"38\\n\") == \"3577\\n\", \"Test case 37 failed\"\nassert solution(\"39\\n\") == \"3884\\n\", \"Test case 38 failed\"\nassert solution(\"40\\n\") == \"4205\\n\", \"Test case 39 failed\"\nassert solution(\"41\\n\") == \"4540\\n\", \"Test case 40 failed\"\nassert solution(\"42\\n\") == \"4889\\n\", \"Test case 41 failed\"\nassert solution(\"43\\n\") == \"5",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\nassert solution(\"5\\n5 4 3 2\") == \"10\\n\"\nassert solution(\"3\\n1 2 3\") == \"10\\n\"\nassert solution(\"5\\n5 4 3 2 1\") == \"10\\n\"\nassert solution(\"3\\n5 4 3 2 1\") == \"10\\n\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10'\nprint(solution())",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\\n\") == \"10\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\\n\", \"Please provide the input as a single line.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\\n\", \"Test case failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 4 6\\n\") == \"10\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n\", \"Incorrect output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\", \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\nassert solution(\"10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'Yes'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 4') == 'No'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 4\\n3 5') == 'No'",
        "num_ids_2": 70,
        "num_ids_4": 110
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes\\n', 'The output is incorrect. Please check the sample input and constraints.'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n6 6\\n4 4\\n3 3\\n3 2\\n6 6\\n4 4\\n3 3\\n3 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'No\\n', 'The output is incorrect. Please check the sample input and constraints.'\n\nfrom typing import List",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 1\\n2 2\\n2 2\\n1 1\") == \"Yes\"\nassert solution(\"5\\n1 1\\n2 2\\n2 2\\n1 1\") == \"No\"\nassert solution(\"5\\n1 1\\n2 2\\n2 2\\n1 1\") == \"No\"",
        "num_ids_2": 65,
        "num_ids_4": 125
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\") == \"No\\n\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n4 4\\n5 5\") == \"No\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 111
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"10\"\nassert solution(\"101\") == \"5\"\nassert solution(\"50\") == \"5\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 4\nassert solution(input()) == 4.0\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\", \"Test case 1 failed.\"\nassert solution(\"1\") == \"1\", \"Test case 2 failed.\"\nassert solution(\"100\") == \"100\", \"Test case 3 failed.\"\nassert solution(\"50\") == \"2\", \"Test case 4 failed.\"\nassert solution(\"0\") == \"0\", \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\", \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 4\nprint(\"The area of a circle of radius 2 is 4 times larger than the area of a circle of radius 1.\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Your code is missing or incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(4) == \"Yes\"\nassert solution(5) == \"Yes\"\nassert solution(6) == \"No\"\nassert solution(7) == \"Yes\"\nassert solution(8) == \"No\"\nassert solution(9) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(5) == \"No\"\nassert solution(6) == \"No\"\nassert solution(7) == \"No\"\nassert solution(8) == \"No\"\nassert solution(9) == \"No\"\nassert solution(10) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('3 4\\n1 1\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 2\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 3\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 4\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 5\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 6\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 7\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 8\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 9\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 0\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 1\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 2\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 3\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 4\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 5\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 6\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 7\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 8\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 9\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 0\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 1\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 2\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 3\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 4\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 5\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 6\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 7\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 8\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 9\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 0\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 1\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 2\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 3\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 4\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 5\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 6\\n3 2\\n1 1') == '-1'\nassert solution('3 4\\n1 7\\n3 2\\n1 1') == '-1",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"1 1\\n1 1\") == \"-1\"\nassert solution(\"5 3\\n5 9\") == \"-1\"\nassert solution(\"3 0\\n1 1\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 80
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('1 0\\n1 0') == '-1'\nassert solution('3 0\\n1 1\\n0 9\\n9 1') == '-1'",
        "num_ids_2": 46,
        "num_ids_4": 73
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"\nassert solution(\"3 3\\n1 6\\n3 2\\n1 7\\n\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 8\\n\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 6\\n\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"2 3\\n1 7\\n4 2\\n2 6\") == \"-1\\n\"\nassert solution(\"3 6\\n1 1\\n3 2\\n1 2\") == \"-1\\n\"\nassert solution(\"3 3\\n1 8\\n3 2\\n1 8\") == \"-1\\n\"\nassert solution(\"4 4\\n1 1\\n3 2\\n1 1\") == \"101\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"702\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3) satisfy the condition.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"2 3\") == \"18\"\nassert solution(\"10 5\") == \"41\"\nassert solution(\"10 10\") == \"362880\"\nassert solution(\"5 5\") == \"5000\"\nassert solution(\"10 3\") == \"105\"",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2') == '9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)'\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\", \"Solution failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\nassert solution('4 1') == '2'\nassert solution('6 2') == '0'\nassert solution('7 3') == '7'\nassert solution('10 4') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"100110011\"\nassert solution(\"-100\") == \"1001100111100110110110110011101101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100111011001110110011101100",
        "num_ids_2": 25,
        "num_ids_4": 1027
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"1011\", \"Invalid input.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('-9') == '1011'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-9\") == \"1011\", \"Output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1110\"\nassert solution(\"-10\") == \"11110100\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 31,
        "num_ids_4": 1027
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"1011\", \"The base -2 representation of -9 is incorrect.\"\nassert solution(\"10\") == \"1100\", \"The base -2 representation of 10 is incorrect.\"\nassert solution(\"100\") == \"11100\", \"The base -2 representation of 100 is incorrect.\"\nassert solution(\"1000\") == \"11111000\", \"The base -2 representation of 1000 is incorrect.\"\nassert solution(\"1000000000\") == \"11111111111000000000\", \"The base -2 representation of 10^9 is incorrect.\"",
        "num_ids_2": 52,
        "num_ids_4": 117
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"5\") == \"101\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"15\") == \"10101\"\nassert solution(\"20\") == \"101010\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"1011\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\nassert solution(\"5 4\\n10 8\\n1 5\") == \"18\\n\"\nassert solution(\"10 10\\n20 15\\n30 20\") == \"20\\n\"\nassert solution(\"10 20\\n10 10\\n10 10\") == \"100\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 114
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\\n\", \"Output is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\nassert solution(\"10 10\\n20 5\\n30 8\\n40 15\") == \"400\\n\"\nassert solution(\"5 10\\n10 20\\n15 30\\n20 40\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 98
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\"\nprint(\"All test cases passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n', \"Expected output: 2\\n\"\nassert solution(\"5\\n10 4 8 7 3\\n\") == '2\\n', \"Expected output: 2\\n\"\nassert solution(\"1\\n10 10 10\\n\") == '1\\n', \"Expected output: 1\\n\"\nassert solution(\"1\\n10 10 10 10\\n\") == '1\\n', \"Expected output: 1\\n\"\nassert solution(\"1\\n10 10 10 10 10\\n\") == '1\\n', \"Expected output: 1\\n\"\nassert solution(\"1\\n10 10 10 10 10\\n\") == '1\\n', \"Expected output: 1\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 125
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"The function should return 2.\"\nassert solution(\"5\\n10 4 8 7 4\") == \"0\\n\", \"The function should return 0.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"There is a bug in the solution. Please fix it.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2\\n', 'Please provide the correct input.'\n\nN = int(stdin.readline().strip())\nH_i = int(stdin.readline().strip())\n\nresult = 0\nmax_moves = 0\nfor i in range(N):\n    if H_i < 0:\n        H_i = 0\n    max_moves = max(max_moves, abs(H_i - (i + 1)) * (i + 1))\n    H_i = max(0, H_i - 1)\n\nprint(max_moves)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"The solution should return the correct output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 3) == 1\nassert solution(5, 3) == 2\nassert solution(5, 3) == 0",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())  # expected output: 1\n\nassert solution() == 2, \"Expected 2, got {}\".format(solution())  # expected output: 2\n\nassert solution() == 0, \"Expected 0, got {}\".format(solution())  # expected output: 0",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(6, 5)) == '3'\nassert solution(str(7, 5)) == '4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\"\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Expected Output: 3\\nActual Output: {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('1 2 2 4 2 3 4 5') == '3'\nassert solution('1 2 2 4 2 3 4 5 6 7') == '3'\nassert solution('1 2 2 4 2 3 4 5 6 7 8 9') == '3'\nassert solution('1 2 2 4 2 3 4 5 6 7 8 9 10') == '3'",
        "num_ids_2": 44,
        "num_ids_4": 104
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output. Expected: '{expected}', got: '{solution(stdin)}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Got '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\nfor i in range(5):\n    n, a, b = map(int, input().split())\n    assert a <= 1000, f\"Invalid cost for the first bottle: {a}\"\n    assert b <= 1000, f\"Invalid cost for the second bottle: {b}\"\n    assert n <= 1000000, f\"Invalid number of liters: {n}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == expected_output, f\"Expected output: {expected_output}, Got: {solution(stdin: str)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [\"10\", \"9\", \"1000\", \"42000000000000\"]",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"The answer for the given constraints is not correct.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"Test failed.\"\nassert solution(\"3 7\\n3 5 6\") == \"1\\n\", \"Test failed.\"\nassert solution(\"6 8\\n1 2 3 4 5\") == \"4\\n\", \"Test failed.\"",
        "num_ids_2": 50,
        "num_ids_4": 79
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\", \"The output should be 2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"5 10\\n1 2 3 4 5\") == \"1\"\nassert solution(\"2 1\\n2 3\") == \"1\"\nassert solution(\"20000 100000\") == \"1\"\nassert solution(\"10 100\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\", \"The ball will make a bounce at the coordinates 0, 3, 7 and 12, among which two are less than or equal to 6.\"\nassert solution(\"5 10\") == \"0\", \"The ball will make a bounce at the coordinate 0.\"\nassert solution(\"1 2\") == \"0\", \"The ball will make a bounce at the coordinate 0.\"\nassert solution(\"10001 20000\") == \"0\", \"The ball will make a bounce at the coordinate 0.\"",
        "num_ids_2": 82,
        "num_ids_4": 142
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\", \"Test 1 Failed\"\nassert solution(\"5 5\") == \"0\", \"Test 2 Failed\"\nassert solution(\"10 10\") == \"0\", \"Test 3 Failed\"\nassert solution(\"100 5\") == \"3\", \"Test 4 Failed\"\nassert solution(\"10000 10000\") == \"3\", \"Test 5 Failed\"\nassert solution(\"50 5\") == \"0\", \"Test 6 Failed\"\nassert solution(\"5 5\") == \"0\", \"Test 7 Failed\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"5 5\") == \"1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"4 6\\n4 4 5\") == \"2\"\nassert solution(\"5 6\\n5 4 5\") == \"2\"\nassert solution(\"6 6\\n6 4 5\") == \"2\"\nassert solution(\"7 6\\n7 4 5\") == \"2\"\nassert solution(\"8 6\\n8 4 5\") == \"2\"\nassert solution(\"9 6\\n9 4 5\") == \"2\"\nassert solution(\"10 6\\n10 4 5\") == \"2\"\nassert solution(\"11 6\\n11 4 5\") == \"2\"\nassert solution(\"12 6\\n12 4 5\") == \"2\"\nassert solution(\"13 6\\n13 4 5\") == \"2\"\nassert solution(\"14 6\\n14 4 5\") == \"2\"\nassert solution(\"15 6\\n15 4 5\") == \"2\"\nassert solution(\"16 6\\n16 4 5\") == \"2\"\nassert solution(\"17 6\\n17 4 5\") == \"2\"\nassert solution(\"18 6\\n18 4 5\") == \"2\"\nassert solution(\"19 6\\n19 4 5\") == \"2\"\nassert solution(\"20 6\\n20 4 5\") == \"2\"\nassert solution(\"21 6\\n21 4 5\") == \"2\"\nassert solution(\"22 6\\n22 4 5\") == \"2\"\nassert solution(\"23 6\\n23 4 5\") == \"2\"\nassert solution(\"24 6\\n24 4 5\") == \"2\"\nassert solution(\"25 6\\n25 4 5\") == \"2\"\nassert solution(\"26 6\\n26 4 5\") == \"2\"\nassert solution(\"27 6\\n27 4 5\") == \"2\"\nassert solution(\"28 6\\n28 4 5\") == \"2\"\nassert solution(\"29 6\\n29 4 5\") == \"2\"\nassert solution(\"30 6\\n30 4 5\") == \"2\"\nassert solution(\"31 6\\n31 4 5\") == \"2\"\nassert solution(\"32 6\\n32 4 5\") == \"2\"\nassert solution(\"33 6\\n33 4 5\") == \"2\"\nassert solution(\"34 6\\n34 4 5\") == \"2\"\nassert solution(\"35 6\\n35 4 5\") == \"2\"\nassert solution(\"36 6\\n36 4 5\") == \"2\"\nassert solution(\"37 6\\n37 4 5\") == \"2\"\nassert solution(\"38 6\\n38 4 5\") == \"2\"\nassert solution(\"39 6\\n39 4 5\") == \"2\"\nassert solution(\"40 6\\n40 4 5\") == \"2\"\nassert solution(\"41 6\\n41 4 5\") == \"2\"\nassert solution(\"42 6\\n42 4 5\") == \"2\"\nassert solution(\"43 6\\n43 4 5\") == \"2\"\nassert solution(\"44 6\\n44 4 5\") == \"2\"\nassert solution(\"45 6\\n45 4 5\") == \"2\"\nassert solution(\"46 6\\n46 4 5\") == \"2\"\nassert solution(\"47 6\\n47 4 5\") == \"2\"\nassert solution(\"48 6\\n48 4 5\") == \"2\"\nassert solution(\"49 6\\n49 4 5\") == \"2\"\nassert solution(\"50 6\\n50 4 5\") == \"2\"\nassert solution(\"51 6\\n51 4 5\") == \"2\"\nassert solution(\"52 6\\n52",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hoge') == 'Yes', \"Error: incorrect output\"\nassert solution('english') == 'No', \"Error: incorrect output\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\nhoge\\nenlish\\nhoge\\nenigma') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"No\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('hoge') == 'No'\nassert solution('english') == 'Yes'\nassert solution('enigma') == 'Yes'\nassert solution('foo') == 'No'\nassert solution('bar') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\\n\"\nassert solution(\"4\\nhoge\\nEnglish\\nhoge\\nEnigma\\n\") == \"No\\n\"\nassert solution(\"4\\nhoge\\nHONGARU\\nhoge\\nHANAI\\n\") == \"No\\n\"\nassert solution(\"4\\nhoge\\nHONGARU\\nhoge\\nHANAI\\n\") == \"Yes\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 123
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 'No'  # Test Case 1\nassert solution(\"4\\nhoge\\nenlish\\nhoge\\nenigma\\n\") == 'No'  # Test Case 2\nassert solution(\"4\\nhoge\\nenlish\\nhoge\\nenigma\\n\") == 'Yes'  # Test Case 3\nassert solution(\"3\\nfoo\\nbar\\n\") == 'No'  # Test Case 4\nassert solution(\"4\\nhoge\\nenlish\\nhoge\\nenigma\\n\") == 'Yes'  # Test Case 5",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"No\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '6', \"Expected output: 6, but got: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"1 1\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"5 5\") == \"10\\n\", \"Test 3 failed\"\nassert solution(\"10 8\") == \"20\\n\", \"Test 4 failed\"\nassert solution(\"1 10\") == \"30\\n\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\\n\", \"The output should be '6\\n'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\") == \"6\"\nassert solution(\"3 2\\n4 4\\n5 6\") == \"6\"\nassert solution(\"2 3\\n4 4\\n5 6\") == \"6\"\nassert solution(\"2 3\\n4 5\\n5 6\") == \"10\"\nassert solution(\"2 3\\n4 6\\n5 6\") == \"12\"\nassert solution(\"2 3\\n4 7\\n5 6\") == \"14\"\nassert solution(\"2 3\\n4 8\\n5 6\") == \"16\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\", \"Please provide the number of guests A and B\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n\") == \"6\\n\"\nassert solution(\"1 3\\n\") == \"3\\n\"\nassert solution(\"3 5\\n\") == \"6\\n\"\nassert solution(\"1 4\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"6\\n\"\nassert solution(\"1 2\\n\") == \"4\\n\"\nassert solution(\"1 3\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"1 4\\n\") == \"4\\n\"\nassert solution(\"2 1\\n\") == \"4\\n\"\nassert solution(\"2 4\\n\") == \"6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Input'sardine' is not valid.\"\nassert solution(\"\") == \"\", \"Input is empty.\"\nassert solution(\"a\") == \"ax\", \"Input 'a' is not valid.\"\nassert solution(\"hello world\") == \"hllwrld\", \"Input 'hello world' is not valid.\"",
        "num_ids_2": 34,
        "num_ids_4": 77
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('hello') == 'hello'\nassert solution('abcde') == 'abcde'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test case 1 failed\"\n\nassert solution(\"hello\") == \"helohelo\", \"Test case 2 failed\"\n\nassert solution(\"a\") == \"axa\", \"Test case 3 failed\"\n\nassert solution(\"banana\") == \"bbnbnbba\", \"Test case 4 failed\"\n\nassert solution(\"cat\") == \"ccatt\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx', \"Incorrect solution for given constraints.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Solution is correct!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"10\\n1 1 1 1 1\") == \"No\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Yes\\n', \"Expected Yes, but got: {}.\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"5\\n1 2 3 1 2\") == \"No\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"5\\n1 2 3 1 2\") == \"No\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 4\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 1 1\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 1 2\\n\") == \"Yes\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes\\n'\nassert solution('6\\n1 2 1 1 3') == 'No\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 3 2 1 3\") == \"No\"\nassert solution(\"5\\n2 1 1 2 3\") == \"No\"\nassert solution(\"5\\n1 1 1 1 2\") == \"No\"\nassert solution(\"5\\n1 1 1 1 1\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\nassert solution(\"2 4 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"0\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1'\nassert solution('3 2 1\\n2 1 2\\n1 1 3') == '2'\nassert solution('1 2 3\\n2 3 1\\n1 3 2') == '1'\n\nN, M, C = map(int, stdin.split())\nB = list(map(int, stdin.split()))\nA = [[int(x) for x in stdin.split()] for _ in range(N)]\n\ncorrect_codes = 0\nfor i in range(N):\n    if A[i][0] * B[0] + A[i][1] * B[1] + A[i][2] * B[2] + C > 0:\n        correct_codes += 1\n\nprint(correct_codes)",
        "num_ids_2": 64,
        "num_ids_4": 92
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\n\nassert solution('''3 2 1\n1 2 2\n2 1 3\n3 4 5''') == '2'\n\nassert solution('''4 5 2\n1 2 3\n3 5 4\n4 2 5''') == '1'\n\nassert solution('''5 4 3\n3 2 4\n4 1 5\n5 2 1''') == '3'",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {output_str}!= {result}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '100'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 100, \"The correct output is 100\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1900\") == \"100\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100\\n\", \"Testcase 1 Failed\"\nassert solution(input()) == \"1000\\n\", \"Testcase 2 Failed\"\nassert solution(input()) == \"10000\\n\", \"Testcase 3 Failed\"\nassert solution(input()) == \"100000\\n\", \"Testcase 4 Failed\"\nassert solution(input()) == \"1000000\\n\", \"Testcase 5 Failed\"",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1900) == 100, \"Test case 1 failed\"\nassert solution(5000) == 500, \"Test case 2 failed\"\nassert solution(10000) == 1000, \"Test case 3 failed\"\nassert solution(50000) == 4000, \"Test case 4 failed\"\nassert solution(100000) == 9000, \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1900) == 100, \"Solution does not work\"\nassert solution(2000) == 1000, \"Solution does not work\"\nassert solution(5000) == 10000, \"Solution does not work\"\nassert solution(10000) == 100000, \"Solution does not work\"\nassert solution(15000) == 200000, \"Solution does not work\"",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '100', \"Output should be 100, not {}\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\", \"Your solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 5 2\\n4 5\\n') == '9'\nassert solution('4\\n6 7\\n9 10\\n') == '10'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n3 5\\n4 5\\n6 7 8\\n9\") == \"11\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\nassert solution(\"1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\"\n",
        "num_ids_2": 53,
        "num_ids_4": 121
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\\n\") == \"9\\n\"\nassert solution(\"3\\n3 1\\n4 2\\n\") == \"4\\n\"\nassert solution(\"3\\n3 2\\n4 3\\n\") == \"7\\n\"\nassert solution(\"3\\n3 3\\n4 4\\n\") == \"12\\n\"\nassert solution(\"3\\n3 4\\n4 5\\n\") == \"16\\n\"\nassert solution(\"3\\n3 5\\n4 6\\n\") == \"20\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"4 3 5 10\\n1 2 3 4\") == \"No War\"\nassert solution(\"1 2 3 4\\n1 2 3 4\") == \"No War\"\nassert solution(\"5 6 7 8\\n9 10 11 12\") == \"No War\"",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n18 20 20\") == \"War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n18 20 20\\n20 20 20\") == \"War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n18 20 20\\n20 20 20\\n22 22 22\") == \"War\"",
        "num_ids_2": 79,
        "num_ids_4": 197
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"No War\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n20 25 18\") == \"War\"\nassert solution(\"1 2 3 4\\n5 6 7 8\") == \"War\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n10 11 12 13\") == \"No War\"",
        "num_ids_2": 79,
        "num_ids_4": 143
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n3 2 10 20\\n\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n3 2 10 20\\nNo War\") == \"War\"",
        "num_ids_2": 72,
        "num_ids_4": 177
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 'No War'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'3 2 10 20\\n8 15 13\\n16 22') == 'No War'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n\") == \"War\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\\n\"\nassert solution(\"3\\n4\\n5\") == \"7\\n\"\nassert solution(\"10\\n15\\n20\") == \"130\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\\n\"\nassert solution(\"4\\n10\\n15\") == \"21\\n\"\nassert solution(\"5\\n
        "num_ids_2": 39,
        "num_ids_4": 1027
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"The correct answer is 6.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"12\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"3\\n2\\n1\\n\") == \"3\"\nassert solution(\"100\\n1000000000\\n1000000000\\n\") == \"10000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 84
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\n2\\n3\\n\") == \"6\"\nassert solution(stdin=\"2\\n2\\n2\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2\\n2\\n3\\n\") == \"3\"\nassert solution(stdin=\"2",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\"\nassert solution(\"5\\n1\\n1\\n\") == \"1\"\nassert solution(\"10\\n2\\n1\\n\") == \"5\"\nassert solution(\"10\\n3\\n1\\n\") == \"6\"\nassert solution(\"10\\n4\\n1\\n\") == \"7\"\nassert solution(\"10\\n5\\n1\\n\") == \"8\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"2\\n1 2\\n\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"0\"\nassert solution(\"1\\n1 1 1\\n\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"2\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n5 2 3\") == \"1\\n\"\nassert solution(\"4\\n1 2 3\") == \"1\\n\"\nassert solution(\"2\\n5 2 3\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"5\\n10 20 30 40 50\\n\") == \"100\\n\"\nassert solution(\"7\\n10 15 20 25 30 35 40 45 50\\n\") == \"30\\n\"\nassert solution(\"6\\n25 30 35 40 45 50\\n\") == \"45\\n\"\nassert solution(\"9\\n10 20 30 40 50 60 70 80 90\\n\") == \"40\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 130
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"1\\n2 3\\n4 5\\n\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"3\\n5 4 3 2 1\\n\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 91
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n1 2 3\") == \"0\\n\"\nassert solution(stdin=\"2\\n1 2\") == \"3\\n\"\nassert solution(stdin=\"2\\n3 1\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"2\\n1 2 3\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\\n\"\nassert solution(\"1000\\n
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"2\\n1 2 3\\n\") == \"3\"\nassert solution(\"1\\n1 2 3\\n\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"5\\n100 2 3 4 5\\n\") == \"100\"\n",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"0\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"0\"\nassert solution(3) == \"2\"\nassert solution(3) == \"6\"\nassert solution(1) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\"\n",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 130
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\", \"Your implementation is incorrect\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(stdin=\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(stdin=\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\", \"Expected output 0, got {}\".format(solution())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 130
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_string1) == output_string1\nassert solution(input_string2) == output_string2\nassert solution(input_string3) == output_string3\nassert solution(input_string4) == output_string4\nassert solution(input_string5) == output_string5",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\"\nassert solution(\"2\\n1 100\\n\") == \"99\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 5, \"Solution is incorrect\"\nprint(\"Test passed successfully!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\\n\"\nassert solution(\"2\\n1 100\\n\") == \"99\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '5\\n'\n\ninput_n = int(input())\na = list(map(int, input().split()))\n\nn = len(a)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n\\n2\\n1 100\\n\\n') == '5\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string, \"Error in solution.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == \"5\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(2) == \"99\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n5\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 0\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 3\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 3\nassert solution(3) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2\\n'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2\\n'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3\\n'\nassert solution('3\\n0 0 0\\n') == '0\\n'",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\"\nassert solution(input()) == \"2\", \"Test case 2 failed\"\nassert solution(input()) == \"3\", \"Test case 3 failed\"\nassert solution(input()) == \"0\", \"Test case 4 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(6)) == '2'\nassert solution(str(7)) == '3'\nassert solution(str(3)) == '0'\nassert solution(str(0)) == '0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"2\"\n\nassert solution() == \"3\"\n\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1, \"Input 1 should return 1\"\nassert solution(\"7\") == 0, \"Input 7 should return 0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1, \"Test case 1 failed\"\nassert solution(7) == 0, \"Test case 7 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1, \"The code should return 1 for the input 1\"\nassert solution(7) == 0, \"The code should return 0 for the input 7\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1, \"The solution for the input 1 should be 1.\"\nassert solution(7) == 0, \"The solution for the input 7 should be 0.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\", \"Expected Output: 3, Actual Output: \" + solution(stdin)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"brie soft\") == 3\nassert solution(\"camembert soft\") == 3\nassert solution(\"feta soft\") == 3\nassert solution(\"goat soft\") == 3\nassert solution(\"muenster soft\") == 3\nassert solution(\"asiago hard\") == 4\nassert solution(\"cheddar hard\") == 4\nassert solution(\"gouda hard\") == 4\nassert solution(\"swiss hard\") == 4",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 3\nassert solution(open(\"input2.txt\", \"r\").read()) == 4",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\\n3\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == 3\n\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == 4",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\") == 3, \"Output 3\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4, \"Output 4\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\") == 3\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == 4",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"brie soft\\ncamembert soft\\n\") == 3, \"brie soft not detected\"\nassert solution(\"feta soft\\ngoat soft\\nmuenster soft\\n\") == 3, \"goat soft not detected\"\nassert solution(\"asiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 4, \"cheddar hard not detected\"",
        "num_ids_2": 58,
        "num_ids_4": 96
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2 1\\n3 2 1 1\") == \"1 0 0 2\"\nassert solution(\"7\\n2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n0 1 2 1\\n3 2 1 1\\n\\nOutput\\n1 0 0 2\\n\\nInput\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\\nOutput\\n0 0 0 1 0 2 4\") == \"1 0 0 2\\n0 0 0 1 0 2 4\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2 \"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 0 0 2 \\n\"\nassert solution(stdin) == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4\n    0 1 2 1\n    3 2 1 1\n    ''') == '1 0 0 2 \\n'\n\nassert solution('''\n    7\n    2 5 1 5 3 4 3\n    2 4 3 5 6 5 1\n    ''') == '0 0 0 1 0 2 4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4 \\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1') == '1 0 0 2'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 0 0 2 \\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"Solution should output 0\"\nassert solution(\"1\") == \"1\", \"Solution should output 1\"\nassert solution(\"1\") == \"0\", \"Solution should output 1\"\nassert solution(\"0\") == \"1\", \"Solution should output 0\"\nassert solution(\"1\") == \"1\", \"Solution should output 1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == 0, \"Output should be 0\"\nassert solution(\"1\\n0\\n1\\n1\") == 1, \"Output should be 1\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\", \"Test 1 failed\"\nassert solution(\"1\\n1\\n0\\n0\") == \"0\", \"Test 2 failed\"\nassert solution(\"0\\n0\\n1\\n1\") == \"0\", \"Test 3 failed\"\nassert solution(\"0\\n1\\n0\\n0\") == \"1\", \"Test 4 failed\"\nassert solution(\"0\\n0\\n1\\n1\") == \"1\", \"Test 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"00\") == \"0\"\nassert solution(\"01\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == '0'\nassert solution('1\\n1\\n0\\n0\\n') == '1'\nassert solution('0\\n0\\n0\\n1\\n') == '0'\nassert solution('0\\n0\\n1\\n0\\n') == '1'\nassert solution('1\\n0\\n0\\n0\\n') == '1'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0') == 0, \"The correct output is 0\"\nassert solution('1') == 1, \"The correct output is 1\"\nassert solution('1') == 1, \"The correct output is 1\"\nassert solution('0') == 0, \"The correct output is 0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 20 75\") == \"No\"\nassert solution(\"1000 30 70\") == \"No\"\nassert solution(\"1000 15 75\") == \"Yes\"\nassert solution(\"1000 10 85\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"500 12 90\") == \"No\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 1000 80\") == \"No\"\nassert solution(\"500 500 1000\") == \"No\"\nassert solution(\"500 500 0\") == \"No\"\nassert solution(\"500 1000 80\") == \"Yes\"\nassert solution(\"1000 500 0\") == \"Yes\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\", \"Test Failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 30 100\") == \"No\"\nassert solution(\"999 100 100\") == \"No\"\nassert solution(\"1000 15 0\") == \"No\"\nassert solution(\"1000 0 80\") == \"No\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Test case failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 16 80\") == \"No\"\nassert solution(\"1000 17 80\") == \"No\"\nassert solution(\"1000 18 80\") == \"No\"\nassert solution(\"1000 19 80\") == \"No\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"No\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n123 456 789\\n\") == \"No\\n\"",
        "num_ids_2": 138,
        "num_ids_4": 221
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33",
        "num_ids_2": 94,
        "num_ids_4": 180
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\n",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"99 99 99\\n99 99 99\\n99 99 99\\n99 99 99\\n99 99 99\") == \"No\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"1 1\\n2\") == \"-1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n2 2\") == \"-1\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\\n\"\nassert solution(\"1 2\\n3 4\") == \"2\\n\"\nassert solution(\"2 3\\n4 5\") == \"-1\\n\"\nassert solution(\"3 3\\n2 3\\n2 3\") == \"30\\n\"\nassert solution(\"5 6\\n1 2\\n3 4\\n2 3\\n4 5\\n6 7\\n1 2\\n3 4\\n2 3\\n4 5\\n6 7\\n1 2\\n3 4\\n2 3\\n4 5\\n6 7\\n1 2\\n3 4\\n2 3\\n4 5\\n6 7\\n1 2\\n3 4\\n2 3\\n4 5\\n6 7\") == \"30\\n\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 6\\n7 8\") == \"-1\"\nassert solution(\"41 2\\n5 6\\n7 8\\n9 10\") == \"30\"",
        "num_ids_2": 42,
        "num_ids_4": 72
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 1\\n5 6\") == \"-1\"\nassert solution(\"41 2\\n5 6\\n5 5\") == \"30\"\nassert solution(\"41 2\\n5 6\\n5 5\\n5 5\") == \"-1\"\nassert solution(\"41 2\\n5 6\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5",
        "num_ids_2": 37,
        "num_ids_4": 89
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"32 1\\n1 2\\n\") == \"30\"\nassert solution(\"1 1\\n1 1\\n\") == \"-1\"\nassert solution(\"1 1\\n2 1\\n\") == \"-1\"\nassert solution(\"30 10\\n10 10\\n\") == \"30\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\\n\"\nassert solution(\"41 2\\n1 2\") == \"-1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\", \"The solution should return 5 for the given input.\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 6\") == \"6\"\nassert solution(\"0 5\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 6\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"Test failed for sample input 0 5.\"\nassert solution(\"1 5\") == \"5\\n\", \"Test failed for sample input 1 5.\"\nassert solution(\"2 5\") == \"5\\n\", \"Test failed for sample input 2 5.\"\nassert solution(\"3 5\") == \"5\\n\", \"Test failed for sample input 3 5.\"\nassert solution(\"4 5\") == \"5\\n\", \"Test failed for sample input 4 5.\"\nassert solution(\"5 5\") == \"5\\n\", \"Test failed for sample input 5 5.\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 5\") == \"5\\n\"\nassert solution(\"2 5\") == \"10\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"2 0\") == \"1\\n\"\nassert solution(\"2 100\") == \"100\\n\"\nassert solution(\"100 100\") == \"100\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5\\n', \"Test 1 failed.\"\nassert solution('1 5') == '5\\n', \"Test 2 failed.\"\nassert solution('2 5') == '10\\n', \"Test 3 failed.\"\nassert solution('0 0') == '10\\n', \"Test 4 failed.\"\nassert solution('0 10') == '5\\n', \"Test 5 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"3 4\") == \"12\"\nassert solution(\"3 5\") == \"15\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"4 2\") == \"8\"\nassert solution(\"4 3\") == \"12\"\nassert solution(\"4 4\") == \"16\"\nassert solution(\"4 5\") == \"20\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 3\") == \"15\"\nassert solution(\"5 4\") == \"20\"\nassert solution(\"5 5\") == \"25\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\", \"The output should be 5\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"3 1\\n\") == \"1\\n\"\nassert solution(\"4 2\\n\") == \"2\\n\"\nassert solution(\"5 0\\n\") == \"5\\n\"\nassert solution(\"6 2\\n\") == \"2\\n\"\nassert solution(\"7 1\\n\") == \"1\\n\"\nassert solution(\"8 2\\n\") == \"2\\n\"\nassert solution(\"9 2\\n\") == \"2\\n\"\nassert solution(\"10 2\\n\") == \"2\\n\"\nassert solution(\"11 2\\n\") == \"2\\n\"\nassert solution(\"12 2\\n\") == \"2\\n\"\nassert solution(\"13 2\\n\") == \"2\\n\"\nassert solution(\"14 2\\n\") == \"2\\n\"\nassert solution(\"15 1\\n\") == \"1\\n\"\nassert solution(\"16 2\\n\") == \"2\\n\"\nassert solution(\"17 1\\n\") == \"1\\n\"\nassert solution(\"18 2\\n\") == \"2\\n\"\nassert solution(\"19 1\\n\") == \"1\\n\"\nassert solution(\"20 2\\n\") == \"2\\n\"\nassert solution(\"21 1\\n\") == \"1\\n\"\nassert solution(\"22 2\\n\") == \"2\\n\"\nassert solution(\"23 1\\n\") == \"1\\n\"\nassert solution(\"24 2\\n\") == \"2\\n\"\nassert solution(\"25 1\\n\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"2 2\") == \"2\\n\"\nassert solution(\"2 3\") == \"2\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"3 3\") == \"3\\n\"\nassert solution(\"3 4\") == \"4\\n\"\nassert solution(\"4 3\") == \"4\\n\"\nassert solution(\"4 4\") == \"5\\n\"\nassert solution(\"5 4\") == \"5\\n\"\nassert solution(\"5 5\") == \"5\\n\"\nassert solution(\"6 5\") == \"5\\n\"\nassert solution(\"6 6\") == \"6\\n\"\nassert solution(\"7 6\") == \"6\\n\"\nassert solution(\"7 7\") == \"7\\n\"\nassert solution(\"8 7\") == \"7\\n\"\nassert solution(\"8 8\") == \"8\\n\"\nassert solution(\"9 8\") == \"8\\n\"\nassert solution(\"9 9\") == \"9\\n\"\nassert solution(\"10 9\") == \"10\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"11 10\") == \"10\\n\"\nassert solution(\"11 11\") == \"11\\n\"\nassert solution(\"12 11\") == \"11\\n\"\nassert solution(\"12 12\") == \"12\\n\"\nassert solution(\"13 12\") == \"12\\n\"\nassert solution(\"13 13\") == \"13\\n\"\nassert solution(\"14 13\") == \"13\\n\"\nassert solution(\"14 14\") == \"14\\n\"\nassert solution(\"15 14\") == \"14\\n\"\nassert solution(\"15 15\") == \"15\\n\"\nassert solution(\"16 15\") == \"15\\n\"\nassert solution(\"16 16\") == \"16\\n\"\nassert solution(\"17 16\") == \"16\\n\"\nassert solution(\"17 17\") == \"17\\n\"\nassert solution(\"18 17\") == \"17\\n\"\nassert solution(\"18 18\") == \"18\\n\"\nassert solution(\"19 18\") == \"18\\n\"\nassert solution(\"19 19\") == \"19\\n\"\nassert solution(\"20 19\") == \"19\\n\"\nassert solution(\"20 20\") == \"20\\n\"\nassert solution(\"21 20\") == \"20\\n\"\nassert solution(\"21 21\") == \"21\\n\"\nassert solution(\"22 21\") == \"21\\n\"\nassert solution(\"22 22\") == \"22\\n\"\nassert solution(\"23 22\") == \"22\\n\"\nassert solution(\"23 23\") == \"23\\n\"\nassert solution(\"24 23\") == \"23\\n\"\nassert solution(\"24 24\") == \"24\\n\"\nassert solution(\"25 24\") == \"24\\n\"\nassert solution(\"25 25\") == \"25\\n\"\nassert solution(\"26 25\") == \"25\\n\"\nassert solution(\"26 26\") == \"26\\n\"\nassert solution(\"27 26\") == \"26\\n\"\nassert solution(\"27 27\") == \"27\\n\"\nassert solution(\"28 27\") == \"27\\n\"\nassert solution(\"28 28\") == \"28\\n\"\nassert solution(\"29 28\") == \"28\\n\"\nassert solution(\"29 29\") == \"29\\n\"\nassert solution(\"30 29\") == \"29\\n\"\nassert solution(\"30 30\") == \"30\\n\"\nassert solution(\"31 30\") == \"30\\n\"\nassert solution(\"31 31\") == \"31\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\") == \"3\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\n\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('5\\n3 2 10 5 8') == '9'\nassert solution('1\\n2') == '1'\nassert solution('6\\n3 10') == '1'\nassert solution('7\\n9 8 7') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 68
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(\"3\\n7 6 8\\n\") == \"2\\n\"\nassert solution(\"3\\n7 4 8\\n\") == \"1\\n\"\nassert solution(\"2\\n1 2 3\\n4 5 6\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\\n4 5 6\\n\") == \"2\\n\"\nassert solution(\"3\\n7 6 8\\n\") == \"2\\n\"\nassert solution(\"3\\n7 4 8\\n\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 82
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"\nassert solution(\"4\\n5 6 7\\n\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3 1 2\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\"\nassert solution(\"5\\n2 3 4 1 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"7\\n3 4 1 2 5 6\\n\") == \"2 1 3 4 5 6\"\nassert solution(\"8\\n3 4 1 2 5 6 7 8\\n\") == \"2 1 3 4 5 6 7 8\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"10\\n3 4 1 2 5 6 7 8 9 10\\n\") == \"1 2 3 4 5 6 7 8 9 10\"",
        "num_ids_2": 50,
        "num_ids_4": 116
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 4 3 2 1\"\nassert solution(\"10\\n2 3 4 5 6 7 8 9 10\\n\") == \"10 9 8 7 6 5 4 3 2\"\nassert solution(\"2\\n3 2 1\\n\") == \"2 1 3\"\nassert solution(\"3\\n1 3 2\\n\") == \"3 2 1\"",
        "num_ids_2": 54,
        "num_ids_4": 127
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"\nassert solution(\"4\\n2 3 4 1\\n\") == \"4 1 2 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 1 2 3 4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"6 1 2 3 4 5\\n\"\nassert solution(\"7\\n2 3 4 5 6 7\\n\") == \"7 1 2 3 4 5 6\\n\"\nassert solution(\"8\\n3 4 5 6 7 8\\n\") == \"8 1 2 3 4 5 6 7\\n\"\nassert solution(\"9\\n4 5 6 7 8 9\\n\") == \"9 1 2 3 4 5 6 7 8\\n\"\nassert solution(\"10\\n5 6 7 8 9 10\\n\") == \"10 1 2 3 4 5 6 7 8 9\\n\"\nassert solution(\"11\\n6 7 8 9 10 11\\n\") == \"11 1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution(\"12\\n7 8 9 10 11 12\\n\") == \"12 1 2 3 4 5 6 7 8 9 10 11\\n\"\nassert solution(\"13\\n8 9 10 11 12 13\\n\") == \"13 1 2 3 4 5 6 7 8 9 10 11 12\\n\"\nassert solution(\"14\\n9 10 11 12 13 14\\n\") == \"14 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\"\nassert solution(\"15\\n10 11 12 13 14 15\\n\") == \"15 1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\\nA_2 A_1\") == \"3 1 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n2 3 1\n\"\"\"\n) == \"3 1 2\"\n\nassert solution(\n    \"\"\"\n5\n3 4 1 5 2\n\"\"\"\n) == \"1 2 3 4 5\"\n\nassert solution(\n    \"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\nassert solution(\n    \"\"\"\n1\n\"\"\"\n) == \"\"\n\nassert solution(\n    \"\"\"\n0\n\"\"\"\n) == \"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\") == [\"3\", \"1\", \"2\"]\nassert solution(\"5\\nA_1 A_2 \\nA_3 \\nA_4 \\nA_5\") == [\"3\", \"1\", \"2\", \"4\", \"5\"]\nassert solution(\"6\\nA_1 A_2 \\nA_3 \\nA_4 \\nA_5 \\nA_6\") == [\"3\", \"1\", \"2\", \"4\", \"5\", \"6\"]\nassert solution(\"7\\nA_1 A_2 \\nA_3 \\nA_4 \\nA_5 \\nA_6 \\nA_7\") == [\"3\", \"1\", \"2\", \"4\", \"5\", \"6\", \"7\"]\nassert solution(\"8\\nA_1 A_2 \\nA_3 \\nA_4 \\nA_5 \\nA_6 \\nA_7 \\nA_8\") == [\"3\", \"1\", \"2\", \"4\", \"5\", \"6\", \"7\", \"8\"]\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 68,
        "num_ids_4": 171
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\", \"Test 1 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 4 3 2 1\", \"Test 2 failed\"\nassert solution(\"3\\n4 5 6\") == \"6 5 4\", \"Test 3 failed\"\nassert solution(\"2\\n1 2\") == \"2 1\", \"Test 4 failed\"\nassert solution(\"1\\n2 3 4 5 6\") == \"6 5 4 3 2 1\", \"Test 5 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 112
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"Takahashi can't buy integer 9.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"5 3 200\") == \"1\"\nassert solution(\"1 5 100\") == \"1\"\nassert solution(\"10 20 300\") == \"0\"\nassert solution(\"10 20 10000\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"2 3 4\") == \"0\\n\"\nassert solution(\"0 0 0\") == \"0\\n\"\nassert solution(\"1 2 3\") == \"9\\n\"\nassert solution(\"20 30 40\") == \"123456789\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"1 2 100\") == \"100\\n\"\nassert solution(\"3 4 200\") == \"0\\n\"\nassert solution(\"4 10 1000\") == \"0\\n\"\nassert solution(\"1 1 1000000000\") == \"1000000000\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"10 5 50\") == \"0\\n\"\nassert solution(\"10 3 100\") == \"123485\\n\"\nassert solution(\"2 3 100\") == \"10\\n\"\nassert solution(\"1 2 100\") == \"0\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 80
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"2 2 5\") == \"2\"\nassert solution(\"1 5 200\") == \"0\"\nassert solution
        "num_ids_2": 31,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\\n\", \"Expected output: 9, got: \" + solution(input())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 8 100') == '0'\nassert solution('11 10 100') == '97'\nassert solution('10 100 100') == '0'\nassert solution('1000000000 1000000000 1000000000') == '9007199254740991'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"4 300\\n150 140 100 200\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2, \"Incorrect output.\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 200\\n200 180 120 240 220\") == \"3\"\nassert solution(\"6 300\\n300 280 160 320 240 180\") == \"3\"\nassert solution(\"7 400\\n400 380 240 480 360 200\") == \"4\"\nassert solution(\"8 500\\n500 480 360 600 440 300\") == \"4\"",
        "num_ids_2": 66,
        "num_ids_4": 144
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2\\n'\nassert solution('3 100\\n200 150 120') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"4 2\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"4 3\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"4 1\\n5 4 1 1\\n\") == \"Yes\"\nassert solution(\"4 1\\n5 4 3 1\\n\") == \"No\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes\\n'\nassert solution('5 2\\n4 1') == 'No\\n'\nassert solution('10 2\\n10 1') == 'No\\n'\nassert solution('6 2\\n6 2') == 'No\\n'",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"4 2\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"4 3\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"4 4\\n5 4 2 1\\n\") == \"No\"\nassert solution(\"4 10\\n5 4 2 1\\n\") == \"No\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"3 2\\n3 1\") == \"No\"\nassert solution(\"2 4\\n1 2\") == \"Yes\"\nassert solution(\"5 1\\n1 2\") == \"No\"\nassert solution(\"4 2\\n4 3\") == \"Yes\"\nassert solution(\"5 4\\n2 1\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"\nassert solution(\"3 2\\n5 4 2 1\\n\") == \"No\\n\"\nassert solution(\"4 2\\n5 4 2 1\\n\") == \"No\\n\"\nassert solution(\"5 3\\n5 4 2 1\\n\") == \"No\\n\"\nassert solution(\"4 2\\n5 4 1 2\\n\") == \"Yes\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\n\nassert solution(\"6 2\\n10 3 4 5\") == \"No\"\n\nassert solution(\"5 3\\n10 4 5\") == \"No\"\n\nassert solution(\"1 1\\n2 3\") == \"Yes\"\n\nassert solution(\"1 0\") == \"No\"\n\nassert solution(\"4 0\") == \"No\"",
        "num_ids_2": 43,
        "num_ids_4": 80
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\\n\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\") == \"5\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 2\n..#\n''') == '5'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 2\\n..#') == '5'\nassert solution('4 5 2\\n#.#') == '3'\nassert solution('1 2 1\\n.##') == '2'\nassert solution('1 3 3\\n..##') == '2'\nassert solution('2 3 3\\n###') == '5'\nassert solution('1 1 1\\n.##') == '1'\nassert solution('1 2 1\\n###') == '2'\nassert solution('3 2 1\\n.##') == '1'\nassert solution('1 3 2\\n..#') == '1'\nassert solution('1 4 1\\n.##') == '1'\nassert solution('1 5 1\\n###') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\"\nassert solution(\"3 3 1\\n..#\\n\") == \"0\"\nassert solution(\"1 1 1\\n..#\\n\") == \"1\"\nassert solution(\"1 2 1\\n..#\\n\") == \"0\"\nassert solution(\"1 3 1\\n..#\\n\") == \"0\"\nassert solution(\"1 4 1\\n..#\\n\") == \"0\"\nassert solution(\"1 5 1\\n..#\\n\") == \"0\"\nassert solution(\"2 3 1\\n..#\\n\") == \"0\"\nassert solution(\"2 4 1\\n..#\\n\") == \"0\"\nassert solution(\"2 5 1\\n..#\\n\") == \"0\"\nassert solution(\"3 3 1\\n..#\\n\") == \"1\"\nassert solution(\"3 4 1\\n..#\\n\") == \"1\"\nassert solution(\"3 5 1\\n..#\\n\") == \"1\"\nassert solution(\"4 4 1\\n..#\\n\") == \"2\"\nassert solution(\"4 5 1\\n..#\\n\") == \"2\"\nassert solution(\"5 5 1\\n..#\\n\") == \"2\"\nassert solution(\"5 5 2\\n..#\\n\") == \"3\"\nassert solution(\"5 5 3\\n..#\\n\") == \"4\"\nassert solution(\"5 5 4\\n..#\\n\") == \"5\"\nassert solution(\"5 5 5\\n..#\\n\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\"\nassert solution(\"5 5 1\\n#..\\n..#\\n#..#\\n....\\n..#.\\n...#\") == \"5\"\nassert solution(\"2 3 1\\n..#\\n#..\\n....\\n#..#\\n..#.\\n...#\") == \"4\"\nassert solution(\"5 5 1\\n#..\\n..#\\n....\\n..#.\\n...#\") == \"3\"\nassert solution(\"2 3 1\\n..#\\n#..\\n....\\n#..#\\n..#.\\n...#\") == \"2\"\n",
        "num_ids_2": 53,
        "num_ids_4": 119
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2030 2040\") == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1000 3000\") == \"2\"\nassert solution(\"500 1000\") == \"1\"\nassert solution(\"100 200\") == \"0\"\nassert solution(\"0 500\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2020 2040') == '2\\n'\nassert solution('1 10') == '10\\n'\nassert solution('10 10') == '10\\n'\nassert solution('1000 2000') == '1000\\n'\nassert solution('0 1000') == '1000\\n'\nassert solution('1000 0') == '1000\\n'",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\nassert solution(\"1000 3000\") == \"0\\n\"\nassert solution(\"2000 4000\") == \"0\\n\"\nassert solution(\"4000 6000\") == \"0\\n\"\nassert solution(\"1000000000 1000000001\") == \"1000000000\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\nassert solution(\"3000 4000\") == \"2\\n\"\nassert solution(\"2000 3000\") == \"1\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"10000 10000\") == \"1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abcA\") == \"WA\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"atcoder\") == \"WA\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\n\nassert solution(\"abcABC\") == \"WA\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"Sample Output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1214\\n4\") == \"2\", \"Test 1 failed.\"\nassert solution(\"1214\\n5\") == \"12222\", \"Test 2 failed.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1214\") == \"2\", \"Test case 1 failed\"\nassert solution(\"121456789\") == \"4\", \"Test case 2 failed\"\nassert solution(\"1234567890\") == \"1\", \"Test case 3 failed\"\nassert solution(\"12345678901\") == \"1\", \"Test case 4 failed\"\nassert solution(\"123456789012\") == \"2\", \"Test case 5 failed\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567",
        "num_ids_2": 45,
        "num_ids_4": 98
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1214\\n4\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1214 4\") == \"2\"\nassert solution(\"1214 5\") == \"2\"\nassert solution(\"1214 6\") == \"2\"\nassert solution(\"1214 7\") == \"2\"\nassert solution(\"1214 8\") == \"2\"\nassert solution(\"1214 9\") == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1214\") == \"2\", \"The first character in the string is not 2\"\nassert solution(\"4\") == \"2\", \"The second character in the string is not 2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1214\") == \"2\"\n\nSolution:\n\nTo solve the problem, we can use a loop to iterate until we reach the end of the string after 5 \\times 10^{15} days. At each iteration, we can check if the character at the current index is 2. If it is, we can print the character and break out of the loop. Here's the code for the solution:\n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1214\\n4') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES\\n'\n\np = [int(x) for x in input().split()]",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\\n\"\nassert solution(\"1\\n1 2 3 4 5\") == \"NO\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"NO\\n\"\nassert solution(\"1\\n2 1 3 4 5 6 7 8 9\") == \"YES\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 101
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES', \"The output is incorrect. Please check your input.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n6 2 3 4 1\") == \"NO\"\nassert solution(\"1\\n1 1\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 78
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the length of the sequence: \")) == \"YES\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(10000000000000000000000000000000) == 33\nassert solution(201920181) == 4",
        "num_ids_2": 21,
        "num_ids_4": 79
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3121\") == \"2\", \"Expected output: 2\"\nassert solution(\"6\") == \"1\", \"Expected output: 1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\", \"Expected output: 33\"\nassert solution(\"201920181\") == \"4\", \"Expected output: 4\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == \"2\", \"Expected output 2, but got '{}'\".format(solution(\"3121\"))\nassert solution(\"6\") == \"1\", \"Expected output 1, but got '{}'\".format(solution(\"6\"))\nassert solution(\"1000000000000000000000000000000000\") == \"33\", \"Expected output 33, but got '{}'\".format(solution(\"1000000000000000000000000000000000\"))\nassert solution(\"201920181\") == \"4\", \"Expected output 4, but got '{}'\".format(solution(\"201920181\"))",
        "num_ids_2": 58,
        "num_ids_4": 194
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3121') == '2', \"Test 1 failed\"\nassert solution('6') == '1', \"Test 2 failed\"\nassert solution('10000000000000000000000000000000000') == '33', \"Test 3 failed\"\nassert solution('201920181') == '4', \"Test 4 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 110
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3121\") == \"2\", \"Expected '2', got {}\".format(solution(\"3121\"))\nassert solution(\"6\") == \"1\", \"Expected '1', got {}\".format(solution(\"6\"))\nassert solution(\"10000000000000000000000000000000000\") == \"33\", \"Expected '33', got {}\".format(solution(\"10000000000000000000000000000000000\"))\nassert solution(\"201920181\") == \"4\", \"Expected '4', got {}\".format(solution(\"201920181\"))",
        "num_ids_2": 52,
        "num_ids_4": 184
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3121) == \"2\"\nassert solution(6) == \"1\"\nassert solution(1000000000000000000000000000000000) == \"33\"\nassert solution(201920181) == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 3\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"3\\n\"",
        "num_ids_2": 185,
        "num_ids_4": 332
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n2\"\nassert solution(input()) == \"Output\\n2\"\nassert solution(input()) == \"Output\\n0\"\nassert solution(input()) == \"Output\\n3\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\n\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n5\\n123 456 789 1234\\n1000 2000 3000 4000\\n1000000 2000000 3000000 4000000\") == \"3\\n\"\n\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n5\\n123 456 789 1234\\n1000 2000 3000 4000\\n1000000 2000000 3000000 4000000\") == \"0\\n\"\n\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n5\\n123 456 789 1234\\n1000 2000 3000 4000\\n1000000 2000000 3000000 4000000\") == \"3\\n\"",
        "num_ids_2": 229,
        "num_ids_4": 464
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"Output\\n2\\n\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'Your code here'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Solution:\\n\\nOutput:\\n2\\n\\n\"\nassert solution == \"Solution:\\n\\nOutput:\\n2\\n\\n\"\nassert solution == \"Solution:\\n\\nOutput:\\n2\\n\\n\"\nassert solution == \"Solution:\\n\\nOutput:\\n0\\n\\n\"\nassert solution == \"Solution:\\n\\nOutput:\\n3\\n\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output\\n2\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\") == \"Output\\n2\\n\\n\"",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 133,
        "num_ids_4": 216
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"codeforces\\ndodivthree\\n\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"abaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\"\nassert solution(\"bambarbia\\nhellocode\\n\") == \"0\\n\"\nassert solution(\"code??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 186
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''10\ncodeforces\ndodivthree''') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1'\n\nassert solution('''7\nabaca?b\nzabbbcc''') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\n\nassert solution('''9\nbambarbia\nhellocode''') == '0'\n\nassert solution('''10\ncode??????\n??????test''') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10'",
        "num_ids_2": 11,
        "num_ids_4": 22
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('codeforc?e') == '5'\nassert solution('abc') == '0'\nassert solution('abaca?b') == '5'\nassert solution('zabbbcc') == '5'\nassert solution('bambarbia') == '0'\nassert solution('??????test') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output\\n5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"codeforces\\ndodivthree\\n\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n\"\nassert solution(\"abaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n\"\nassert solution(\"bambarbia\\nhellocode\\n\") == \"0\\n\"\nassert solution(\"code??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 190
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\ncodeforces\\ndodivthree\\n\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n\"\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n\"\nassert solution(\"9\\nbambarbia\\nhellocode\\n\") == \"0\\n\"\nassert solution(\"10\\ncode??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 217
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"codeforces\") == \"5\"\nassert solution(\"dodivthree\") == \"4 9\"\nassert solution(\"bambarbia\") == \"0\"\nassert solution(\"code??????\") == \"10\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output\nprint(\"PASSED\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1'\nassert solution('4\\n1 1 1 1') == '4\\n4 4\\n1 1'",
        "num_ids_2": 85,
        "num_ids_4": 114
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 1 1\") == \"4\"",
        "num_ids_2": 55,
        "num_ids_4": 71
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\n\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n'\n\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3\\n7 7\\n2 3\\n4 5\\n'\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2\\n3 4\\n1 1\\n'\n\nassert solution('''\n4\n1 1 1 1\n''') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output\\n2\\n3 4\\n1 1\\n4\\n4 4\\n1 1'\nassert solution() == 'Output\\n2\\n3 4\\n1 1\\n4\\n4 4\\n1 1'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"\n",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"\nassert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 3\\n1 10 5 8 3\") == \"0\"\nassert solution(\"1 1\\n2 3\") == \"1\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() # Check if the output is correct\nfor test in tests:\n    assert solution(test.input) == test.output, f\"Test failed for input {test.input}\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n6 11\\n45 1 10 12 11 7\\n\\nOutput\\n7\\n\\nInput\\n4 2\\n2 78 4 10\\n\\nOutput\\n12\\n\\nInput\\n5 2\\n3 7 19 3 3\\n\\nOutput\\n0') == '7\\n\\n12\\n\\n0'",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0', f\"Expected 0, got: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"\nassert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\n",
        "num_ids_2": 48,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n6 11\\n45 1 10 12 11 7\") == \"7\\n\"\nassert solution(\"Input\\n4 2\\n2 78 4 10\") == \"12\\n\"\nassert solution(\"Input\\n5 2\\n3 7 19 3 3\") == \"0\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"Test Case 1 Failed\"\nassert solution(\"3\\n-1 0 3 2 1\") == \"9\\n\", \"Test Case 2 Failed\"\nassert solution(\"3\\n1 1 1 1 1\") == \"10\\n\", \"Test Case 3 Failed\"\nassert solution(\"3\\n1 2 3 4 5\") == \"5\\n\", \"Test Case 4 Failed\"\nassert solution(\"3\\n5 4 3 2 1\") == \"15\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 55,
        "num_ids_4": 116
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"Test Case 1 Failed\"\nassert solution(\"4\\n1 3 2 4\") == \"6\\n\", \"Test Case 2 Failed\"\nassert solution(\"5\\n3 1 5 2 6\") == \"10\\n\", \"Test Case 3 Failed\"\nassert solution(\"6\\n1 2 3 4 5\") == \"12\\n\", \"Test Case 4 Failed\"\nassert solution(\"7\\n3 5 2 6 4 1 7\") == \"20\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 5\") == \"9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\\n\", \"Output must be 9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\nassert solution(\"5\\n5 5\\n\") == \"10\\n\"\nassert solution(\"2\\n3 4\\n\") == \"9\\n\"\nassert solution(\"3\\n1 2\\n\") == \"5\\n\"\nassert solution(\"5\\n4 3\\n\") == \"10\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\\n\", \"Test Failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"60\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"6\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n5\\n2\\n5\\n-1\\n-2\\n-3\\n2\\n2\\n5\\n\") == \"9\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110\\n'\nassert solution('5 6 1\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9') == '150\\n'",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"110\"\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 4 3\n    1 3 3 100\n    1 2 2 10\n    2 3 2 10\n    \"\"\"\n) == \"110\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    \"\"\"\n) == \"200\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    \"\"\"\n) == \"200\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    \"\"\"\n) == \"300\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    6 7 5 10\n    \"\"\"\n) == \"400\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    6 7 5 10\n    7 8 5 10\n    \"\"\"\n) == \"400\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    6 7 5 10\n    7 8 5 10\n    8 9 5 10\n    \"\"\"\n) == \"500\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    6 7 5 10\n    7 8 5 10\n    8 9 5 10\n    9 10 5 10\n    \"\"\"\n) == \"500\"\n\nassert solution(\n    \"\"\"\n    5 6 5\n    1 3 5 100\n    1 2 5 10\n    2 3 5 10\n    3 4 5 10\n    4 5 5 10\n    5 6 5 10\n    6 7 5 10\n    7 8 5 10\n    8 9 5 10\n    9 10 5 10\n    10 11 5 10\n    \"\"\"\n) == \"600\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\n",
        "num_ids_2": 94,
        "num_ids_4": 141
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n') == '110\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 4 3\n    1 3 3 100\n    1 2 2 10\n    2 3 2 10\n    \"\"\"\n) == \"110\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"4 3 1 2\\n1 2 3 4\\n1 2 4 5\\n1 3 1 6\") == \"30\"\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"110\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 1\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 2\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 3\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 4\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 5\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n2 3 1 4\\n\") == \"6\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n5 2 10 6\\n\") == \"5\\n\", \"Test case 3 failed\"\n\nassert solution(\"4\\n-1 0 4 2\\n\") == \"6\\n\", \"Test case 4 failed\"\n\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\n\", \"Test case 5 failed\"",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 4 6 3') == '5\\n'\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n4\\n6\\n3\\n\") == \"5\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 1 failed\"\nassert solution(\"4\\n1 4 6 3 7\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n1 4 6 3 10 9 5 2 8 7 4\") == \"5\\n\", \"Test case 3 failed\"\nassert solution(\"4\\n1 4 6 3 10 9 5 2 8 7 4 9\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"4\\n1 4 6 3 10 9 5 2 8 7 4 9 8\") == \"6\\n\", \"Test case 5 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 146
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 4 6 3') == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"The maximum absolute difference of two elements (with different indices) in A should be 5.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n1 4 6 3\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n\", \"Test Case 1 Failed\"\nsolution(stdin)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '2.2761423749', \"Your code is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749'\nassert solution('2\\n0 0\\n1 0\\n0 1') == '1.2247448713'\nassert solution('5\\n0 0\\n1 0\\n0 1') == '12.411700693'\nassert solution('3\\n0 0\\n0 1\\n1 0') == '2.2761423749'\nassert solution('2\\n0 0\\n0 1\\n1 0') == '1.2247448713'\nassert solution('5\\n0 0\\n0 1\\n1 0') == '12.411700693'\nassert solution('5\\n0 0\\n1 1\\n0 1') == '12.411700693'\nassert solution('5\\n0 0\\n1 0\\n1 1') == '12.411700693'\nassert solution('1\\n0 0') == '1.0'\nassert solution('4\\n0 0\\n1 0\\n0 1') == '1.0'\nassert solution('1\\n0 0\\n0 1\\n1 0') == '1.0'\nassert solution('4\\n0 0\\n0 1\\n1 0') == '1.0'\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749\\n', \"Error in solution\"\nassert solution('4\\n1 1\\n0 0\\n1 1\\n0 1\\n0 1') == '1.6666666667\\n', \"Error in solution\"\nassert solution('5\\n0 0\\n1 0\\n0 1\\n1 0\\n1 0') == '2.75\\n', \"Error in solution\"\nassert solution('6\\n1 1\\n0 0\\n1 1\\n0 1\\n0 1\\n1 1') == '1.875\\n', \"Error in solution\"\nassert solution('7\\n1 1\\n0 0\\n1 1\\n0 1\\n0 1\\n1 1\\n0 0\\n1 1\\n0 1\\n1 1') == '2.3857142857\\n', \"Error in solution\"\nassert solution('8\\n1 1\\n0 0\\n1 1\\n0 1\\n0 1\\n1 1\\n0 0\\n1 1\\n0 1\\n1 1\\n1 0\\n0 0\\n1 1\\n0 1\\n1 1\\n1 1') == '2.0833333333\\n', \"Error in solution\"",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2.2761423749\\n', 'Input is incorrect. Please provide the correct input.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\", \"Sample Output is incorrect.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"5.0\\n\"\nassert solution(\"2\\n0 0\\n1 1\") == \"0.5\\n\"\nassert solution(\"1\\n0 0\\n1 0\") == \"1.0\\n\"\nassert solution(\"4\\n0 0\\n1 0\\n2 1\\n3 2\") == \"1.0\\n\"\nassert solution(\"7\\n0 0\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\") == \"3.9714897959\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 120
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n2 2\\n\") == \"2.0833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n\") == \"2.2761423749\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n\") == \"2.1833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n2 2\\n\") == \"2.0833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n3 3\\n\") == \"1.9833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"1.8833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1.7833333333\"\nassert solution(\"1\\n0 0\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"1.6833333333\"",
        "num_ids_2": 81,
        "num_ids_4": 152
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749\\n'\nassert solution('2\\n1 1\\n0 0\\n1 0\\n') == '2.2761423749\\n'\nassert solution('4\\n0 0\\n1 0\\n0 1\\n1 1\\n') == '1.3862947417\\n'\nassert solution('6\\n0 0\\n1 0\\n0 1\\n1 1\\n2 1\\n') == '1.0380878376\\n'\nassert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749\\n'\n",
        "num_ids_2": 80,
        "num_ids_4": 175
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"14 8\") == \"12\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4', \"The output should be 4, but it is {}\".format(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 4\") == \"4\"\n\nSolution:\nWe need to find the total horizontal length of the uncovered parts of the window.\n\nWe can solve this problem using the given constraints.\n\nFirst, we need to find the total horizontal length of the uncovered part of the window. \n\nUsing the formula:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2)\n\nSubstituting this formula:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2) = A + 6\n\nNow, we can find the total horizontal length of the uncovered part of the window as follows:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2)\n\nThe total horizontal length of the uncovered part of the window is 4.\n\nNow, we need to find the total horizontal length of the uncovered part of the window.\n\nWe can solve this problem using the given constraints.\n\nFirst, we need to find the total horizontal length of the uncovered part of the window. \n\nUsing the formula:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2)\n\nSubstituting this formula:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2) = A + 6\n\nNow, we can find the total horizontal length of the uncovered part of the window as follows:\n\nTotal horizontal length of the uncovered part of the window = A + (B/2)\n\nThe total horizontal length of the uncovered part of the window is 4.",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\", \"The solution should return the correct value.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The output of {input()} should be {output()}, but it is {solution(input())}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12 4') == '4', \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"The given code is incorrect. Please provide the correct code.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"10000\") == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10000) == \"3\"\nassert solution(123) == \"2\"\nassert solution(54321) == \"4\"\nassert solution(1000) == \"1\"\nassert solution(100) == \"1\"\nassert solution(10) == \"0\"\nassert solution(0) == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n'\nprint('F(A,B) has a minimum value of 3 at (A,B)=(100,100).')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\", \"Test case 1 failed\"\n\nassert solution(\"100\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\", \"Test case 2 failed\"\n\nassert solution(\"10\") == \"2\\nF(A,B) has a minimum value of 2 at (A,B)=(10,10).\\n\", \"Test case 3 failed\"\n\nassert solution(\"1\") == \"1\\nF(A,B) has a minimum value of 1 at (A,B)=(1,1).\\n\", \"Test case 4 failed\"\n\nassert solution(\"0\") == \"1\\nF(A,B) has a minimum value of 1 at (A,B)=(0,0).\\n\", \"Test case 5 failed\"\n\nassert solution(\"10001\") == \"4\\nF(A,B) has a minimum value of 4 at (A,B)=(1000,1000).\\n\", \"Test case 6 failed\"\n\nassert solution(\"100000\") == \"5\\nF(A,B) has a minimum value of 5 at (A,B)=(10000,10000).\\n\", \"Test case 7 failed\"",
        "num_ids_2": 102,
        "num_ids_4": 193
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"3\", \"Test 1 failed.\"\nassert solution(\"1000\") == \"3\", \"Test 2 failed.\"\nassert solution(\"100\") == \"2\", \"Test 3 failed.\"\nassert solution(\"10\") == \"1\", \"Test 4 failed.\"\nassert solution(\"1\") == \"1\", \"Test 5 failed.\"",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"10000\") == \"3\"\nprint(\"F(A,B) has a minimum value of 3 at (A,B)=(100,100).\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nprint('All test cases passed.')",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\") == \"6\\n\"\nassert solution(\"4 5\\n1 1 2 3\\n2 2 3 4\\n3 3 4 5\") == \"9\\n\"\nassert solution(\"5 5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\") == \"16\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 170
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n') == '1\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Please submit the correct input.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"0.5000000000\\n\"\nassert abs(solution(4) - 0.5) <= 1e-6",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"4\\n\") == \"0.5\\n\"\n\ninput()",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.5000000000\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"0.5000000000\", \"The code is not correct.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"0.5000000000\\n\", \"The output should be 0.5000000000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0.5000000000\\n\", \"Incorrect output\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == '0.5000000000', \"Test 1 failed\"\nprint(\"Test 1 passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"0.5000000000\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.5000000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\nassert solution(\"10\") == \"0.5000000000\"\nassert solution(\"60\") == \"0.0000000000\"\nassert solution(\"5\") == \"0.1666666667\"\nassert solution(\"25\") == \"0.1000000000\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"1\\n2\\n3\\n1\\n2\\n1\\n1\\n3\\n1\\n2\\n0\") == \"3\"\nassert solution(\"1\\n2\\n3\\n1\\n2\\n1\\n1\\n3\\n1\\n2\\n0\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207",
        "num_ids_2": 74,
        "num_ids_4": 1027
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"\nassert solution(\"4\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"1\\n\"\nassert solution(\"5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 114
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 0\\n1\\n1 0\\n1\\n1 0') == '3'",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    A_1\n    1\n    1 1\n    A_2\n    2\n    0\n    1 1\n    A_N\n    3\n    1\n    1 1\n    A_3\n    1\n    0\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3\n    A_1\n    1\n    1 1\n    A_2\n    2\n    1\n    1 1\n    A_N\n    3\n    1\n    1 1\n    A_3\n    1\n    1\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3\n    A_1\n    1\n    1 1\n    A_2\n    2\n    1\n    0\n    1 1\n    A_N\n    3\n    1\n    1 1\n    A_3\n    1\n    1\n    \"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n4\") == \"2\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n5\") == \"2\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 111
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == \"2\\n\", \"Output is incorrect.\"\n\ninput_str = \"\"\"3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n\nassert solution(input_str) == \"2\\n\", \"Output is incorrect.\"\n\ninput_str = \"\"\"4\n1\n2 1\n1\n1 1\n1\n2 0\n3\n4 0\n5\n6 1\n\"\"\"\n\nassert solution(input_str) == \"4\\n\", \"Output is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output\nprint(\"Test case passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".encode(\"ascii\")\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".encode(\"ascii\")\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".encode(\"ascii\")\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".encode(\"ascii\")\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".encode(\"ascii\")",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\"\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\"\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\"\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...solstice has a length of 15, which exceeds K=7.\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice has a length of 15, which exceeds K=7.\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\", \"Output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples', 'Test case 1 failed'\nassert solution('banana') == 'bannans', 'Test case 2 failed'\nassert solution('cherry') == 'cherrys', 'Test case 3 failed'\nassert solution('elderberry') == 'elderberries', 'Test case 4 failed'\nassert solution('fig') == 'figs', 'Test case 5 failed'",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution is incorrect.\"\nassert solution(\"banana\") == \"bananas\", \"The solution is incorrect.\"\nassert solution(\"cherry\") == \"cherrys\", \"The solution is incorrect.\"\nassert solution(\"date\") == \"dates\", \"The solution is incorrect.\"\nassert solution(\"elderberry\") == \"elderberries\", \"The solution is incorrect.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples', \"Test Case 1 Failed\"\n\nassert solution('banana') == 'bananas', \"Test Case 2 Failed\"\n\nassert solution('orange') == 'oranges', \"Test Case 3 Failed\"\n\nassert solution('cat') == 'cats', \"Test Case 4 Failed\"\n\nassert solution('dog') == 'dogs', \"Test Case 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution should return 'apples' for the given Taknese word 'apple'.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('car') == 'cars'\nassert solution('elephant') == 'elephants'\nassert solution('grape') == 'grapes'\nassert solution('horse') == 'horses'\nassert solution('ivory') == 'ivories'\nassert solution('lion') == 'lions'\nassert solution('mango') =='mangos'\nassert solution('pizza') == 'pizzas'\nassert solution('rabbit') == 'rabbits'\nassert solution('snake') =='snakes'\nassert solution('spoon') =='spoon'\nassert solution('star') =='stars'\nassert solution('telescope') == 'telescopes'\nassert solution('toaster') == 'toaster'\nassert solution('watermelon') == 'watermelon'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution does not work.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"\nassert solution(\"fox\") == \"foxes\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"grape\") == \"grapes\"\nassert solution(\"orange\") == \"oranges\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3') == '1\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Testcase 1\"\nassert solution(stdin) == \"0\\n\", \"Testcase 2\"\nassert solution(stdin) == \"1\\n\", \"Testcase 3\"\nassert solution(stdin) == \"2\\n\", \"Testcase 4\"\nassert solution(stdin) == \"3\\n\", \"Testcase 5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1', \"Test case 1 failed.\"\nassert solution() == '2', \"Test case 2 failed.\"\nassert solution() == '1', \"Test case 3 failed.\"\nassert solution() == '1', \"Test case 4 failed.\"\nassert solution() == '2', \"Test case 5 failed.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n', 'Expected 1, got {}'.format(solution(stdin))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\"\nprint(\"Test Passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\naabbbaaca') == '5', \"Incorrect output\"\nprint(\"Correct output\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\naabbbaaca') == '5'\nassert solution('10\\nabcca') == '4'\nassert solution('10\\naaaab') == '4'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\naabbbaaca') == '5\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output. Please see the example input and sample output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\naabbbaaca\\n\") == \"5\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\naabbbaaca') == '5', \"The solution should return 5, but it returns {}\".format(solution('10\\naabbbaaca'))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\", \"Test failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 2 4\\n\") == \"3\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"N\\n\")) == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n\", \"Test failed!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"3\\n5 2 4\\n6 2 3\") == \"3\\n\"\nassert solution(\"5\\n10 20\") == \"5\\n\"\nassert solution(\"5\\n2 4 6 8 10\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\\n40 48 56 64 72\") == \"5\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\\n40 48 56 64 72\\n90 100 110 120 130\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\\n40 48 56 64 72\\n90 100 110 120 130\\n300 350 400 450 500\") == \"4\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\\n40 48 56 64 72\\n90 100 110 120 130\\n300 350 400 450 500\\n1000 1500 2000 2500 3000\") == \"5\\n\"\nassert solution(\"5\\n2 4 6 8 10\\n7 9 11 13 15\\n10 12 14 16 18\\n20 24 28 32 36\\n40 48 56 64 72\\n90 100 110 120 130\\n300 350 400 450 500\\n1000 1500 2000 2500 3000\\n3000000 3500000 4000000 4500000 5000000\") == \"4\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 79
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"5\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"2\\n3 2 1\") == \"1\\n\"\nassert solution(\"3\\n5 2 4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"3\\n5 2 4\\n5 2 4 3 2 1\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\\n5 2 4 3 2 1\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\\n5 2 4 3 2 1\\n2 1 3 2 4\") == \"1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"not implemented\"  # This line should not be executed",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"5\\n5 5 5\") == \"3\"\nassert solution(\"6\\n1 2 3\") == \"2\"\nassert solution(\"7\\n5 3 5\") == \"3\"\nassert solution(\"10\\n10 10 10\") == \"3\"\nassert solution(\"11\\n10 10 10\") == \"3\"\nassert solution(\"12\\n10 10 10\") == \"3\"\nassert solution(\"13\\n10 10 10\") == \"3\"\nassert solution(\"14\\n10 10 10\") == \"3\"\nassert solution(\"15\\n10 10 10\") == \"3\"\nassert solution(\"16\\n10 10 10\") == \"3\"\nassert solution(\"17\\n10 10 10\") == \"3\"\nassert solution(\"18\\n10 10 10\") == \"3\"\nassert solution(\"19\\n10 10 10\") == \"3\"\nassert solution(\"20\\n10 10 10\") == \"3\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 0 0 0\") == \"0\"\nassert solution(\"1 1 0 0\") == \"0\"\nassert solution(\"2 1 1 1\") == \"3\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"10 10 10 10\") == \"0\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1 1 3') == '2\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\nassert solution(\"1 1 1 3\") == \"2\\n\"\nassert solution(\"2 1 1 4\") == \"4\\n\"\nassert solution(\"2 1 1 5\") == \"5\\n\"\nassert solution(\"2 1 1 6\") == \"6\\n\"\n\nsolution(\"1 1 1 3\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3') == '2', \"The given input is not correct.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\", \"Test case 1\"\nassert solution(\"5 4 0 5\") == \"12\", \"Test case 2\"\nassert solution(\"8 6 2 1\") == \"6\", \"Test case 3\"\nassert solution(\"11 9 4 -1\") == \"12\", \"Test case 4\"\nassert solution(\"2 1 1 3\") == \"2\", \"Test case 5\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\", \"Test 1: Should print Yes\"\nassert solution(\"3 4\") == \"No\\n\", \"Test 2: Should print No\"\nassert solution(\"1 2\") == \"No\\n\", \"Test 3: Should print No\"\nassert solution(\"5 10\") == \"No\\n\", \"Test 4: Should print No\"\nassert solution(\"1 10\") == \"Yes\\n\", \"Test 5: Should print Yes\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('10 4') == 'No'\nassert solution('1 3') == 'No'\nassert solution('1 2 3') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\" # Correct\nassert solution(\"1 5\") == \"No\" # Inconsistent",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\", \"The statement 'there are 3 animals in total in the garden, and they have 8 legs in total' is not correct.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"\nassert solution(\"4 5\") == \"No\\n\"\nassert solution(\"5 6\") == \"No\\n\"\nassert solution(\"10 10\") == \"Yes\\n\"\nassert solution(\"10 15\") == \"No\\n\"\nassert solution(\"15 10\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 10\") == \"No\"\nassert solution(\"10 2\") == \"No\"\nassert solution(\"100 200\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\", \"Solution not working\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\", \"Sample Input is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nprint('All tests passed.')",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"2\"\n\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"2\"\n\nassert solution(\"3 3\\n1 2\\n2 3\\n1 1\") == \"1\"\n\nassert solution(\"3 3\\n1 2\\n2 3\\n1 2\") == \"1\"\n\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"1\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2\\n'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n4 1\n2 4\n3 1\n1 3\n''') == '3\\n'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n4 1\n2 4\n3 1\n1 3\n''') == '4\\n'\n\nassert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '3\\n'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n4 1\n2 4\n3 1\n1 3\n''') == '2\\n'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n4 1\n2 4\n3 1\n1 3\n''') == '4\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == 2\nassert solution(\"3 4\\n1 2\\n1 3\\n2 3\") == 1\nassert solution(\"4 4\\n1 2\\n1 3\\n2 3\") == 1\nassert solution(\"4 4\\n1 2\\n1 3\\n2 3\") == 2\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '18'\nassert solution(open('input_test.txt', 'r')) == '18'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2') == '18'\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"18\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15\\n\") == \"60\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(15) == 60, \"The expected output is 60. The actual output is {}.\".format(solution(15))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(15) == '60'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(15) == '60'\nassert solution(5) == '15'\nassert solution(10) == '55'\nassert solution(3) == '15'\nassert solution(1) == '1'\nassert solution(1) == '1'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15) == 60",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(15) == 60, \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"60\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15) == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(15) == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8\\n'\nassert solution('6 5\\n4 7 10 6 5\\n4 8 11 10 6 5') == '8\\n'\nassert solution('6 5\\n4 7 10 6 5\\n4 7 10 6 5\\n4 7 10 6 5\\n4 7 10 6 5\\n4 7 10 6 5') == '8\\n'",
        "num_ids_2": 67,
        "num_ids_4": 141
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"6 5\\n4 7 10 6 4\") == \"4\"\nassert solution(\"6 5\\n4 7 10 6 3\") == \"4\"\nassert solution(\"6 5\\n4 7 10 6 2\") == \"5\"\nassert solution(\"6 5\\n4 7 10 6 1\") == \"7\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"The output should be 8.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1') == '1\\n'\nassert solution('4 3\\n2 1') == '3\\n'\nassert solution('1 1\\n1 1') == '0\\n'\nassert solution('1 2\\n2 1') == '2\\n'\nassert solution('1 3\\n3 1') == '1\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"5 6\\n7 8\\n9 10\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"4 3\\n3 1\\n\") == \"0\\n\"\nassert solution(\"6 5\\n5 1\\n\") == \"3\\n\"\nassert solution(\"6 10\\n10 1\\n\") == \"3\\n\"\nassert solution(\"20 20\\n20 20\\n\") == \"20\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n2 1') == '1'\nassert solution('3 4\\n2 1') == '0'\nassert solution('3 4\\n1 1') == '1'\nassert solution('5 4\\n2 2') == '1'\nassert solution('5 4\\n3 3') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"4 3\\n1 1\\n\") == \"1\"\nassert solution(\"1 2\\n1 2\\n\") == \"1\"\nassert solution(\"2 3\\n2 3\\n\") == \"1\"\nassert solution(\"3 3\\n3 3\\n\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\nassert solution(\"4 5\\n1 3\") == \"3\\n\"\nassert solution(\"1 2\\n3 4\") == \"2\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"4 2\\n2 2\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 1\\n1 2\\n2 3\\n3 2\\n\") == \"1\\n\"\nassert solution(\"6 5\\n3 3\\n2 2\\n1 2\\n2 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 104
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\nassert solution(\"3 4\\n4 3\") == \"3\\n\"\nassert solution(\"5 5\") == \"0\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 52
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20\\n') == '6\\n'\nassert solution('7 2\\n3 7 5 1 10 3 20\\n') == '-1\\n'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n\nassert solution(\"5 4\\n3 7 5 1 10 3 20\") == \"5\"\nassert solution(\"5 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6\\n'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1\\n'\nassert solution('8 2\\n3 7 5 1 10 3 20') == '-1\\n'\nassert solution('6 3\\n3 7 5 1 10 3 20') == '6\\n'\nassert solution('8 1\\n3 7 5 1 10 3 20') == '-1\\n'",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\nprint(\"All test cases pass\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6\\n'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check your solution.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Your solution is not correct. Please check the example cases and submit the correct solution.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"\n3\n3 4 1\n3 5 2\n3 5 1\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"\n3\n2 2 1\n3 3 1\n3 4 1\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"\n-1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == \"\"\"3\n3 4 1\n3 5 2\n3 5 1\n\"\"\"\n\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\n\"\"\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\"\"\") == \"\"\"-1\n\"\"\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"-1\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    6 8\n    ....*...\n    ...**...\n    ..*****.\n    ...**...\n    ....*...\n    ........\n\"\"\") == \"\"\"\n    3\n    3 4 1\n    3 5 2\n    3 5 1\n\"\"\"\n\nassert solution(\"\"\"\n    5 5\n    .*...\n    ****.\n    .****\n    ..**.\n    .....\n\"\"\") == \"\"\"\n    3\n    2 2 1\n    3 3 1\n    3 4 1\n\"\"\"\n\nassert solution(\"\"\"\n    5 5\n    .*...\n    ***..\n    .*...\n    .*...\n    .....\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    3 3\n    *.*\n    .*.\n    *.*\n\"\"\") == \"\"\"\n-1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 169
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\"",
        "num_ids_2": 108,
        "num_ids_4": 163
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '''\n3\n3 4 1\n3 5 2\n3 5 1\n'''\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '''\n3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '''\n-1\n'''\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '''\n-1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 171
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"\nassert solution(\"6 7\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"\nassert solution(\"6 7\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\") == \"-1\"",
        "num_ids_2": 97,
        "num_ids_4": 153
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('good') == 'good', 'The solution is incorrect'\nassert solution('aabc') == 'ab', 'The solution is incorrect'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\\n\\tpass', 'The solution is incorrect'\n\nsolution = '''\n",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aabc\") == 2\nassert solution(\"aaa\") == 3",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 4\\n2 3\\n1 3\\n3 2\\n1 2\\n1 1\") == \"NO\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n7 1\\n\") == \"YES\\n10101\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n7 2\\n\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n5 1\\n\") == \"NO\"\n",
        "num_ids_2": 97,
        "num_ids_4": 185
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"NO\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n') == \"YES\\n10100\" # correct solution",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n10100\"\nassert solution(stdin) == \"NO\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\\n10100\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n7 1\\n\") == \"NO\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\n10100\"\nprint(\"YES\")\nfor _ in range(int(input())):\n    edges = list(map(int, input().split()))\n    if any(edges.count(i) == 1 for i in range(len(edges))):\n        print(\"NO\")\n        break\n    paths = [[] for _ in range(len(edges))]\n    directions = [[] for _ in range(len(edges))]\n    path = []\n    direction = []\n    for edge in edges:\n        u, v = edge\n        paths[u].append(v)\n        paths[v].append(u)\n        directions[u].append(direction)\n        directions[v].append(direction)\n        direction = not direction\n    visited = [False] * len(paths)\n    for i in range(len(paths)):\n        if not visited[i]:\n            for j in range(len(paths)):\n                if j == i:\n                    continue\n                if paths[i]!= paths[j] and not visited[j]:\n                    if len(paths[i]) >= 2 and len(paths[j]) >= 2:\n                        visited[j] = True\n                        path = paths[i] + paths[j]\n                        break\n    if path:\n        directions[path[0]].append(1)\n        directions[path[-1]].append(1)\n    else:\n        print(\"NO\")\n    print(\"\".join(str(d) for d in directions[0]))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n3 4\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n3 4\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n3 4\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n3 4\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n3 4\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4 \\n'\nassert solution('1 7\\n1 7') == '0\\n'\nassert solution('3 3\\n3 4\\n4 5\\n4 6\\n5 6') == '0\\n'\nassert solution('2 1\\n2 2\\n3 3') == '2\\n3\\n'\nassert solution('5 3\\n5 4\\n6 5\\n6 6') == '0\\n'",
        "num_ids_2": 53,
        "num_ids_4": 114
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"2\"  # 2 points don't belong to any segment\nassert solution(5) == \"3 4\"  # 2 points belong to the first and the second segments\nassert solution(10) == \"2\"  # 2 points don't belong to any segment\nassert solution(1) == \"0\"  # No such points at all\n",
        "num_ids_2": 47,
        "num_ids_4": 86
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n3 4\\n0\"\nassert solution(open(\"input2.txt\").read()) == \"1\\n2\\n3 4\\n0\"\nassert solution(open(\"input3.txt\").read()) == \"0\"\nassert solution(open(\"input4.txt\").read()) == \"\"\n",
        "num_ids_2": 52,
        "num_ids_4": 84
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"5 2\\n3 4\\n1 2\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 2\\n4 3\\n2 3\\n5 4\\n\") == \"3\\n4\\n5\\n\"\nassert solution(\"1 3\\n4 5\\n\") == \"0\\n\"\nassert solution(\"5 5\\n1 4\\n2 3\\n3 2\\n4 1\\n\") == \"5\\n4\\n3\\n2\\n1\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 125
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4 \"\nassert solution(\"1 7\\n1 7\") == \"0\"\nassert solution(\"3 5\\n1 2\\n5 5\\n5 4\\n3 7\") == \"2\\n3 4 \"\n",
        "num_ids_2": 49,
        "num_ids_4": 86
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n1 7\\n1 7\") == \"2\\n3 4\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n1 7\\n1 7\") == \"2\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 5\\n2 2\\n1 2\\n5 ",
        "num_ids_2": 53,
        "num_ids_4": 151
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"1 3\\n2 4\\n1 5\\n1 4\\n2 3\\n3 4\\n2 2\\n2 1\\n1 2\\n3 4\\n\") == \"2\\n3 4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 123
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Input {stdin} should return {expected}, but it returns {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n1 3\\n2 2\\n3 4\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 5\\n2 3\\n\") == \"0\\n3 4\\n\"\nassert solution(\"2 1\\n1 5\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"2\\n4 5\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 124
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 9, 2, 3) == 2, \"2\"\nassert solution(1, 10, 2, 3) == 0, \"0\"\nassert solution(2, 3, 4, 5) == 3, \"3\"\nassert solution(4, 5, 6, 7) == 4, \"4\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 9 2 3') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 10 5 7\") == \"5 and 7 satisfy the condition\"\nassert solution(\"8 12 6 4\") == \"2\"\nassert solution(\"1 5 12 3\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\", \"Input should be given as 4 9 2 3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"8 10 3 5\") == \"0\"\nassert solution(\"3 7 1 9\") == \"1\"\nassert solution(\"6 12 4 8\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"The output should be 2, but it is: \" + solution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"7 10 2 3\") == \"5\"\nassert solution(\"1 10 2 3\") == \"2\"\nassert solution(\"4 10 2 3\") == \"3\"\nassert solution(\"8 10 2 3\") == \"5\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 10 3 6\") == \"3\"\nassert solution(\"2 10 3 6\") == \"5\"\nassert solution(\"4 10 3 6\") == \"7\"\nassert solution(\"5 10 3 6\") == \"8\"\nassert solution(\"6 10 3 6\") == \"9\"\nassert solution(\"10 10 3 6\") == \"10\"\nassert solution(\"0 0 3 6\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(9123456789) == \"Yes\"\nassert solution(9912345678) == \"Yes\"\nassert solution(9991234567) == \"Yes\"\nassert solution(9999123456) == \"No\"",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"123456789\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(123456789) == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\nprint('No')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"Yes\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='123456789') == 'Yes', \"Test Case 1 failed\"\nassert solution(stdin='123456787') == 'No', \"Test Case 2 failed\"\nassert solution(stdin='0') == 'No', \"Test Case 3 failed\"\nassert solution(stdin='123456788') == 'Yes', \"Test Case 4 failed\"\nassert solution(stdin='999999999') == 'No', \"Test Case 5 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 100
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(123456789) == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(2147483647) == 'Yes'\nassert solution(123456789012) == 'No'\nassert solution(32767) == 'No'\nassert solution(2147483648) == 'No'",
        "num_ids_2": 37,
        "num_ids_4": 72
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"567890123\") == \"No\"\nassert solution(\"1000000000\") == \"Yes\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"9999999999\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456788\") == \"No\"\nassert solution(\"123456787\") == \"Yes\"\nassert solution(\"123456786\") == \"Yes\"\nassert solution(\"123456785\") == \"No\"\nassert solution(\"123456784\") == \"No\"\nassert solution(\"123456783\") == \"Yes\"\nassert solution(\"123456782\") == \"Yes\"\nassert solution(\"123456781\") == \"No\"\nassert solution(\"123456780\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter a value: \")) == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(127) == '4'\nassert solution(244) == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"9001\") == \"0\"\nassert solution(\"100000\") == \"0\"\nassert solution(\"100001\") == \"0\"\nassert solution(\"100002\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the value of N: \")) == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(127) == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"The solution is not correct.\"\nassert solution(\"tokyo\") == \"No\", \"The solution is not correct.\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"world\") == \"No\"\nassert solution(\"aaa\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('hello') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'Yes', 'Test case 1 failed'\nassert solution('tokyo') == 'No', 'Test case 2 failed'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"python\") == \"No\"\nassert solution(\"not_a_string\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cabaccabc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcabc\") == \"0\"\nassert solution(\"abcdefg\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cabaccabc\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"2\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"xyzzy\") == \"2\"\nassert solution(\"abcabcabc\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\") == \"1\\n\"\nassert solution(\"abc\") == \"1\\n\"\nassert solution(\"abcd\") == \"1\\n\"\nassert solution(\"zyxwvutsrqponmlkjihgfedcba\") == \"1\\n\"\nassert solution(\"aeiou\") == \"0\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 61
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cabaccabc\") == \"1\\n\" # Should print \"1\"\nassert solution(\"abc\") == \"1\\n\" # Should print \"1\"\nassert solution(\"\") == \"0\\n\" # Should print \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == 1\nassert solution(\"abc\") == 1\nassert solution(\"aababc\") == 2\nassert solution(\"yxyyy\") == 0\nassert solution(\"abcde\") == 0",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\\nabc\") == \"1\"\nassert solution(\"abcabc\") == \"2\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aab\") == \"1\"\nassert solution(\"xyzzy\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"The expected output is not given.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Incorrect Output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"7 23 3\") == \"3\"\nassert solution(\"15 123 4\") == \"4\"\nassert solution(\"90 215 5\") == \"5\"\nassert solution(\"2 3 4 5 6 7\") == \"4\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"The output is not correct.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\"\nassert solution(\"5 3 1\") == \"1\\n\"\nassert solution(\"7 9 2\") == \"3\\n\"\nassert solution(\"3 7 1\") == \"3\\n\"\nassert solution(\"8 12 3\") == \"4\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"The third positive integer divides both 8 and 12: 1, 2 and 4.\"\nassert solution(\"10 10 1\") == \"10\", \"The second positive integer divides both 10 and 10: 10 and 10.\"\nassert solution(\"1 5 3\") == \"5\", \"The first positive integer divides both 1 and 5: 1 and 5.\"\nassert solution(\"1 1 1\") == \"1\", \"The first positive integer divides both 1 and 1: 1 and 1.\"",
        "num_ids_2": 80,
        "num_ids_4": 148
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"Invalid output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"\\n8 12 2\\n\") == \"2\\n\"\nassert solution(b\"\\n15 25 3\\n\") == \"3\\n\"\nassert solution(b\"\\n6 7 8\\n\") == \"2\\n\"\nassert solution(b\"\\n9 23 6\\n\") == \"2\\n\"\nassert solution(b\"\\n20 1000 10\\n\") == \"10\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1024\") == \"2020\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\", \"Test failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"100\") == \"50\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 50
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\", \"The output is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2020\\n\", \"The output is not as expected.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\", \"The maximum number of happiness points that can be earned is 2020.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1024) == \"2020\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"100\") == \"200\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of N: \")) == 5\nassert solution(input(\"Enter the coordinates of N people in the form of X_1 X_2... X_N: \")) == 5\nassert solution(input(\"Enter the coordinates of N people in the form of X_1 X_2... X_N: \")) == 5\nassert solution(input(\"Enter the coordinates of N people in the form of X_1 X_2... X_N: \")) == 5",
        "num_ids_2": 47,
        "num_ids_4": 109
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4\\n') == '5'\nassert solution('4\\n1 4\\n') == '5'\nassert solution('6\\n1 4\\n') == '10'\nassert solution('5\\n2 6\\n') == '10'\nassert solution('5\\n3 6\\n') == '15'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Invalid input.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\\n\"\nassert solution(\"3\\n1 5\\n2 3\\n\") == \"9\\n\"\nassert solution(\"4\\n2 6\\n\") == \"13\\n\"\nassert solution(\"5\\n2 10\\n\") == \"16\\n\"\nassert solution(\"6\\n2 20\\n\") == \"21\\n\"\nassert solution(\"7\\n2 30\\n\") == \"25\\n\"\nassert solution(\"8\\n2 40\\n\") == \"30\\n\"\nassert solution(\"9\\n2 50\\n\") == \"35\\n\"\nassert solution(\"10\\n2 60\\n\") == \"41\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 84
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 3\\n3 4\\n2 5\") == \"12\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\", \"Expected output: 5\\n, Actual output: {}\".format(solution(\"2\\n1 4\"))\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(solution(\"4 10\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nassert solution(\"2 5\") == \"2 power strips, each with 2 sockets, extend the socket into 5 empty sockets.\"\nassert solution(\"3 5\") == \"3 power strips, each with 3 sockets, extend the socket into 5 empty sockets.\"\nassert solution(\"2 1\") == \"2 power strips, each with 2 sockets, extend the socket into 1 empty socket.\"\nassert solution(\"4 2\") == \"4 power strips, each with 4 sockets, extend the socket into 2 empty sockets.\"\n\nfor A, B in [(4, 10), (2, 5), (3, 5), (2, 1), (4, 2)]:\n    assert solution(str(A) + \" \" + str(B)) == f\"{A} power strips, each with {A} sockets, extend the socket into {B} empty sockets.\"",
        "num_ids_2": 62,
        "num_ids_4": 122
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\") == \"3\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Got '{solution(input())}' expected '{expected_output}'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"2\" # expected output: 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"1\\n\"\nassert solution(\"SSR\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"\nassert solution(\"SBR\") == \"0\\n\"\nassert solution(\"CSR\") == \"2\\n\"\nassert solution(\"CCSW\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CSS\\nCSR\") == \"2\"\nassert solution(\"SSL\\nSSR\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\", \"Solution should return 2 for the input CSS\"\nassert solution(\"CSR\") == \"1\", \"Solution should return 1 for the input CSR\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"\nassert solution(\"CSSRRRRR\") == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"CSS\\nCSR\\n\") == \"2\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 5 4 2') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n' # Output: 2\nassert solution(input()) == '1\\n' # Output: 1\nassert solution(input()) == '2\\n' # Output: 2\nassert solution(input()) == '2\\n' # Output: 2",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n', \"Test case 1 failed.\"\n\nassert solution(stdin) == '2\\n', \"Test case 2 failed.\"\n\nassert solution(stdin) == '0\\n', \"Test case 3 failed.\"\n\nassert solution(stdin) == '1\\n', \"Test case 4 failed.\"\n\nassert solution(stdin) == '0\\n', \"Test case 5 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 5 4 2') == '2', 'Test case 1 failed'\nassert solution('4 2 6 5 7') == '1', 'Test case 2 failed'\nassert solution('1 2 3 4 5') == '2', 'Test case 3 failed'\nassert solution('5 1 2 3 4') == '3', 'Test case 4 failed'\nassert solution('1 1 1 1 1') == '1', 'Test case 5 failed'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 2 5 4 3\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5\\n1 2 3 4 1\") == \"0\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n1 3 5 4 6\") == \"0\\n\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"",
        "num_ids_2": 183,
        "num_ids_4": 351
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\\n\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\"",
        "num_ids_2": 185,
        "num_ids_4": 357
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Solution: {solution(input_data)}, Expected output: {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8) == '5.410', 'Solution 8 is incorrect'\nassert solution(5) == '5.620', 'Solution 5 is incorrect'\nassert solution(8) == '5.480', 'Solution 8 is incorrect'\nassert solution(5) == '6.040', 'Solution 5 is incorrect'\nassert solution(8) == '6.040', 'Solution 8 is incorrect'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\"\"\") == \"5.410\"\n\nassert solution(\"\"\"5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"",
        "num_ids_2": 183,
        "num_ids_4": 351
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == 5.41\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == 5.62\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == 5.48\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == 6.04\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == 6.04\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == 6.72",
        "num_ids_2": 179,
        "num_ids_4": 343
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-2.14 2.06\") == \"5.410\", \"Test case -1\"\nassert solution(\"-1.14 2.04\") == \"5.410\", \"Test case -2\"\nassert solution(\"-2.16 1.46\") == \"5.410\", \"Test case -3\"\nassert solution(\"-2.14 0.70\") == \"5.410\", \"Test case -4\"\nassert solution(\"-1.42 0.40\") == \"5.410\", \"Test case -5\"\nassert solution(\"-0.94 -0.48\") == \"5.410\", \"Test case -6\"\nassert solution(\"-1.42 -1.28\") == \"5.410\", \"Test case -7\"\nassert solution(\"-2.16 -1.62\") == \"5.410\", \"Test case -8\"\n\nassert solution(\"2.26 1.44\") == \"5.620\", \"Test case 1\"\nassert solution(\"2.28 0.64\") == \"5.620\", \"Test case 2\"\nassert solution(\"2.30 -0.30\") == \"5.620\", \"Test case 3\"\nassert solution(\"1.58 0.66\") == \"5.620\", \"Test case 4\"\nassert solution(\"3.24 0.66\") == \"5.620\", \"Test case 5\"\n\nassert solution(\"6.98 2.06\") == \"6.040\", \"Test case 6\"\nassert solution(\"6.40 1.12\") == \"6.040\", \"Test case 7\"\nassert solution(\"5.98 0.24\") == \"6.040\", \"Test case 8\"\nassert solution(\"5.54 -0.60\") == \"6.040\", \"Test case 9\"\nassert solution(\"7.16 0.30\") == \"6.040\", \"Test case 10\"\nassert solution(\"7.82 1.24\") == \"6.040\", \"Test case 11\"\nassert solution(\"8.34 0.24\") == \"6.040\", \"Test case 12\"\nassert solution(\"8.74 -0.76\") == \"6.040\", \"Test case 13\"\n\nassert solution(\"10.44 2.06\") == \"6.040\", \"Test case 14\"\nassert solution(\"10.90 0.80\") == \"6.040\", \"Test case 15\"\nassert solution(\"11.48 -0.48\") == \"6.040\", \"Test case 16\"\nassert solution(\"12.06 0.76\") == \"6.040\", \"Test case 17\"\nassert solution(\"12.54 2.06\") == \"6.040\", \"Test case 18\"\n\nassert solution(\"16.94 2.42\") == \"6.040\", \"Test case 19\"\nassert solution(\"15.72 2.38\") == \"6.040\", \"Test case 20\"\nassert solution(\"14.82 1.58\") == \"6.040\", \"Test case 21\"\nassert solution(\"14.88 0.50\") == \"6.040\", \"Test case 22\"\nassert solution(\"15.76 -0.16\") == \"6.040\", \"Test case 23\"\nassert solution(\"16.86 -0.20\") == \"6.040\", \"Test case 24\"\nassert solution(\"17.00 0.88\") == \"6.040\", \"Test case 25\"\nassert solution(\"16.40 0.92\") == \"6.040\", \"Test case 26\"\n\nassert solution(\"20.62 3.00\") == \"6.720\", \"Test case 27\"\nassert solution(\"21.06 ",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.410\"\nassert solution() == \"5.620\"\nassert solution() == \"6.040\"\nassert solution() == \"6.720\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5') == '-1'",
        "num_ids_2": 145,
        "num_ids_4": 231
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == 4\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == 2\nassert solution(\"5 15\\n5 5 5 5 5\") == 1\nassert solution(\"5 16\\n5 5 5 5 5\") == 2\nassert solution(\"5 26\\n5 5 5 5 5\") == -1",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\nassert solution() == \"4\\n2\\n1\\n-1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"-1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"2\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 256
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution doesn't match.\\nExpected: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\nassert solution(\"3 4 5\\n1 2 3\") == \"2\"\nassert solution(\"5 5\\n5 5\") == \"1\"\nassert solution(\"5 5\\n5 5\") == \"1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1 2 3 \\n1 3 1 3 10 3 7 7 12 3 \\n1 1 1 1 1 2 1 1 1 1 1 \\n1 1 1 1 1 1 1 1 1 1 1 \\n1 1 1 1 1 1 1 1 1 1 1 \\n'",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3 \\n7 3 1 3 \\n1 1 \\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1') == '1 1\\n'",
        "num_ids_2": 77,
        "num_ids_4": 125
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n') == '1 1\\n'",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == [\"1\", \"2\", \"3\"]\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == [\"7\", \"3\", \"1\", \"3\"]\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == [\"1\", \"1\"]",
        "num_ids_2": 78,
        "num_ids_4": 125
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 2 3\\n\"\nassert solution(input()) == \"7 3 1 3\\n\"\nassert solution(input()) == \"1 1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1') == '7 3 1 3'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 4') == '1 2 4'\nassert solution('1 3 1 2 1 1') == '1 3 1 2'",
        "num_ids_2": 97,
        "num_ids_4": 141
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == \"1 1\"",
        "num_ids_2": 73,
        "num_ids_4": 119
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n\\n') == 'Output\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n\\n'",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 98
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 43,
        "num_ids_4": 108
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 106
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\\n\"\nassert solution(\"Input\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"Input\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nxiii\\n\") == \"1\\n\"\nassert solution(\"5\\nxoxx\\n\") == \"0\\n\"\nassert solution(\"10\\",
        "num_ids_2": 35,
        "num_ids_4": 1028
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "num_ids_2": 27,
        "num_ids_4": 1028
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nxiii\\n5\\nxoxx\\n10\\nxxxxxxxxxxx\\n') == '1\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\xxxxxxxxxx\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 1\nassert solution(5) == 0\nassert solution(10) == 8",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"48\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"48\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"48\", \"Test case not passed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"48\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"48\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"48\\n\", \"The area of the regular dodecagon is 3 \\times 4^2 = 48.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"48\\n\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 5) == 'unsafe'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"safe\"\nassert solution(\"6 4\") == \"unsafe\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"safe\\n\"\nassert solution(\"2 6\") == \"unsafe\\n\"\nassert solution(\"7 2\") == \"unsafe\\n\"\nassert solution(\"100 50\") == \"unsafe\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"2 3\") == \"safe\"\nassert solution(\"1 100\") == \"safe\"\nassert solution(\"10 1\") == \"unsafe\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"3 4\") == \"safe\"\nassert solution(\"1 1\") == \"safe\"\nassert solution(\"1 0\") == \"safe\"\nassert solution(\"5 10\") == \"unsafe\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\", \"Test Case 1 Failed\"\nassert solution(\"6 10\") == \"safe\\n\", \"Test Case 2 Failed\"\nassert solution(\"2 3\") == \"safe\\n\", \"Test Case 3 Failed\"\nassert solution(\"10 15\") == \"safe\\n\", \"Test Case 4 Failed\"\nassert solution(\"10 0\") == \"safe\\n\", \"Test Case 5 Failed\"\nassert solution(\"10 100\") == \"unsafe\\n\", \"Test Case 6 Failed\"\nassert solution(\"0 0\") == \"safe\\n\", \"Test Case 7 Failed\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\nassert solution(\"1 1\") == \"safe\\n\"\nassert solution(\"2 2\") == \"safe\\n\"\nassert solution(\"3 3\") == \"safe\\n\"\nassert solution(\"4 4\") == \"unsafe\\n\"\nassert solution(\"5 5\") == \"unsafe\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"6\\n\", \"Incorrect output. Expected 6, got \" + solution(\"3 4 5\")\nassert solution(\"2 4 5\") == \"20\\n\", \"Incorrect output. Expected 20, got \" + solution(\"2 4 5\")\nassert solution(\"3 2 5\") == \"15\\n\", \"Incorrect output. Expected 15, got \" + solution(\"3 2 5\")\nassert solution(\"4 3 5\") == \"36\\n\", \"Incorrect output. Expected 36, got \" + solution(\"4 3 5\")\nassert solution(\"1 2 3\") == \"6\\n\", \"Incorrect output. Expected 6, got \" + solution(\"1 2 3\")",
        "num_ids_2": 72,
        "num_ids_4": 146
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"10 10 10\") == \"400\"\nassert solution(\"5 2 6\") == \"120\"\nassert solution(\"-5 2 6\") == \"Error: Invalid input.\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"The area of the triangle ABC should be 6.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n\", \"Solution should return '6\\n'.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 4 5\") == \"6\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"The area of the triangle ABC is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4', \"The output is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(\"All tests passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 11 4\n    \"\"\"\n) == \"4\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\", \"Test case failed!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 11 4') == '4', \"Expected output: '4', got: '{}'.\".format(solution('2 11 4'))\nprint(\"All test cases passed.\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"100 100 100\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('5 2') == '10'\nassert solution('1 1') == '1'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\" # correct solution\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test case 1 failed.\"\n\nA \\times B is defined as: A \u00d7 B. In this case, we are computing the product of 2 and 5 and store the result in a variable named \"product\". We then print the result using the \"print\" function.\n\nThe code does not have any constraints, and hence, it will work fine for any values of A and B.",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2 5') == '10'\nassert solution(stdin='1 2') == 'Error: Both numbers should be positive integers'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 6\") == \"20\"\nassert solution(\"3 6\") == \"120\"\nassert solution(\"10 10\") == \"1000\"\nassert solution(\"10 100\") == \"100000\"\nassert solution(\"100 100\") == \"10000000\"",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Invalid input\"\nassert solution(\"3 5 10\") == \"10\\n\", \"Invalid input\"\nassert solution(\"3 10 7\") == \"15\\n\", \"Invalid input\"\nassert solution(\"3 2 7\") == \"10\\n\", \"Invalid input\"\nassert solution(\"3 5 15\") == \"15\\n\", \"Invalid input\"\nprint(\"Valid input\")",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 7\") == \"10\", \"Output should be 10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('10 20 30') == '55'\nassert solution('5 10 15') == '25'\nassert solution('10000000') == '10000000'",
        "num_ids_2": 33,
        "num_ids_4": 74
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Test case 1 failed\"\nassert solution(\"4 2 7\") == \"15\\n\", \"Test case 2 failed\"\nassert solution(\"2 4 10\") == \"25\\n\", \"Test case 3 failed\"\nassert solution(\"5 3 10\") == \"35\\n\", \"Test case 4 failed\"\nassert solution(\"2 5 10\") == \"50\\n\", \"Test case 5 failed\"\nassert solution(\"3 2 10\") == \"75\\n\", \"Test case 6 failed\"\nassert solution(\"4 3 10\") == \"100\\n\", \"Test case 7 failed\"\nassert solution(\"5 4 10\") == \"125\\n\", \"Test case 8 failed\"\nassert solution(\"6 5 10\") == \"150\\n\", \"Test case 9 failed\"\nassert solution(\"7 6 10\") == \"175\\n\", \"Test case 10 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the value of A: \")) == \"10\"\nassert solution(input(\"Enter the value of B: \")) == \"30\"\nassert solution(input(\"Enter the value of T: \")) == \"7\"\nassert solution(input(\"Enter the value of A: \")) == \"10\"\nassert solution(input(\"Enter the value of B: \")) == \"30\"\nassert solution(input(\"Enter the value of T: \")) == \"7\"\nassert solution(input(\"Enter the value of A: \")) == \"10\"\nassert solution(input(\"Enter the value of B: \")) == \"30\"\nassert solution(input(\"Enter the value of T: \")) == \"7\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Your solution is not correct.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5 7') == '10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\\n500\\n600\\n\") == \"OK\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"500 600\") == \"OK\\n\"\nassert solution(\"7 500 600\") == \"OK\\n\"\nassert solution(\"500 601\") == \"NG\\n\"\nassert solution(\"7 500 601\") == \"NG\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nprint(\"NG\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"1\\n100 200\\n\") == \"OK\\n\"\nassert solution(\"2\\n300 400\\n\") == \"OK\\n\"\nassert solution(\"3\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"4\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"5\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"6\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"7\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"8\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"9\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"10\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"11\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"12\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"13\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"14\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"15\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"16\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"17\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"18\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"19\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"20\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"21\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"22\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"23\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"24\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"25\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"26\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"27\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"28\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"29\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"30\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"31\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"32\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"33\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"34\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"35\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"36\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"37\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"38\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"39\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"40\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"41\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"42\\n500 600\\n\") == \"NG\\n\"\nassert solution(\"4",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"7\\n499 600\\n\") == \"NG\\n\"\nassert solution(\"7\\n500 600\\n\") == \"OK\\n\"\nassert solution(\"7\\n499 600\\n\") == \"NG\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1\\n1 1\") == \"NG\"\nassert solution(\"1\\n2 3\") == \"NG\"\nassert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1000 2000\") == \"OK\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"5\\n499 599\") == \"OK\"\nassert solution(\"10\\n1000 1000\") == \"NG\"\nassert solution(\"5\\n500 499\") == \"NG\"\nassert solution(\"1\\n1 1\") == \"OK\"\n",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"OK\"\nassert solution(input()) == \"NG\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"1001\\n500 600\") == \"NG\\n\"\nassert solution(\"2000\\n500 600\") == \"NG\\n\"\nassert solution(\"500\\n500 600\") == \"OK\\n\"\nassert solution(\"2001\\n500 600\") == \"NG\\n\"\nassert solution(\"4000\\n500 600\") == \"OK\\n\"\nassert solution(\"2000\\n4000 600\") == \"NG\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\", \"The output is incorrect. Please check the input and try again.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6666666667\\n', \"The output is not correct. Please check the code.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2.6666666667'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.6666666667\"\nassert abs(float(\"2.6666666667\") - 2.6666666667) <= 10**-3",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"Test Case 1\"\nassert solution(\"4 1\") == \"1.5\", \"Test Case 2\"\nassert solution(\"3 2\") == \"1.3333333333\", \"Test Case 3\"\nassert solution(\"5 4\") == \"1.7\", \"Test Case 4\"\nassert solution(\"7 6\") == \"1.8\", \"Test Case 5\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"Test case 1 failed\"\nassert solution(\"1 3\") == \"2.0\", \"Test case 2 failed\"\nassert solution(\"1 5\") == \"1.0\", \"Test case 3 failed\"\nassert solution(\"1 2\") == \"0.0\", \"Test case 4 failed\"\nassert solution(\"1 4\") == \"2.0\", \"Test case 5 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 93
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\", \"Test case 1\"\nassert solution(\"10 5\") == \"2.0\\n\", \"Test case 2\"\nassert solution(\"15 3\") == \"1.6666666667\\n\", \"Test case 3\"\nassert solution(\"20 3\") == \"1.3333333333\\n\", \"Test case 4\"\nassert solution(\"25 3\") == \"1.1111111111\\n\", \"Test case 5\"\n\nsolution(\"10 5\")",
        "num_ids_2": 54,
        "num_ids_4": 118
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.6666666667\\n\", \"Test case 1\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 2\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 3\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 4\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 5\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.6666666667\\n\", \"The expected output is '2.6666666667', but got '{}'.\".format(solution(stdin))",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"4 2\") == \"1.3333333333\"\nassert solution(\"5 4\") == \"2.0000000000\"\nassert solution(\"10 5\") == \"2.5000000000\"\nassert solution(\"10 6\") == \"3.0000000000\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\", \"Please enter the correct input\"\nprint(1)",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"10 50 10\") == \"1\"\nassert solution(\"50 60 70\") == \"2\"\nassert solution(\"20 30 10\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == 1, \"Test 1\"\nassert solution(\"7 5 3\") == 1, \"Test 2\"\nassert solution(\"9 6 3\") == 0, \"Test 3\"\nassert solution(\"10 6 3\") == 2, \"Test 4\"\nassert solution(\"15 10 5\") == 1, \"Test 5\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\", \"Test failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1', 'Your solution is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\"\nassert solution(\"6 4 3\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"10 10 10\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"50 50 50\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"6 4 0\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"5 0 4\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"6 10 3\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"5 0 10\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"10 20 10\") == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 36,
        "num_ids_4": 82
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n2 1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1 1\\n1 1 1\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 5 1\") == \"3\\n\"\nassert solution(\"5\\n1 1 2 3 4\\n1 1 3 2 4\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 112
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\\n1 3 4\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\\n1 3 4\\n1 4 3\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\\n1 3 4\\n1 4 3\\n1 2 4\") == \"3\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 146
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n2 1 3\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n2 1 3\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n2 1 3\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n1 2 3\\n2 1 3\\n3 2 1\") == \"3\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\\n\") == \"3\\n\"\nassert solution(\"3\\n1 4 2\\n3 1 2\\n\") == \"5\\n\"\nassert solution(\"3\\n2 3 2\\n3 2 1\\n\") == \"4\\n\"\nassert solution(\"3\\n1 3 1\\n3 2 1\\n\") == \"6\\n\"\nassert solution(\"2\\n1 2 1\\n2 1 2\\n\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"13\"\nassert solution(\"10\\n1 3 2 9 8 7 6 5 4\") == \"6\"",
        "num_ids_2": 55,
        "num_ids_4": 85
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Your solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"The length of the longest ACGT string that is a substring of S is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"3\\nA\\n3\\nA\\n3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"The length of the longest ACGT string that is a substring of S is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"hello\") == \"5\"\nassert solution(\"ACGT\") == \"2\"\nassert solution(\"hello world\") == \"13\"\nassert solution(\"abcd\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\", \"The output is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == 3\nassert solution(\"ABCA\") == 2\nassert solution(\"BBCCD\") == 4\nassert solution(\"ACGT\") == 5\nassert solution(\"ATCG\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Your solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 9\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 9, \"The number of positive integers less than or equal to 11 that have an odd number of digits is incorrect.\"\nprint(9)",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"9\", \"Test failed\"\nassert solution(\"12\") == \"1\", \"Test failed\"\nassert solution(\"123\") == \"2\", \"Test failed\"\nassert solution(\"1234\") == \"3\", \"Test failed\"\nassert solution(\"12345\") == \"4\", \"Test failed\"\nassert solution(\"123456\") == \"5\", \"Test failed\"\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Test case 1 failed\"\nassert solution(\"11\") == \"9\", \"Test case 2 failed\"\nassert solution(\"100\") == \"3\", \"Test case 3 failed\"\nassert solution(\"1000\") == \"2\", \"Test case 4 failed\"\nassert solution(\"10000\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == 9, \"Test failed: incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"9\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == \"9\", \"The expected output is not as per the problem statement. Please check your solution.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"9\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottea\"\nassert solution(\"hypotheater\") == \"heater\"\nassert solution(\"applepie\") == \"pieapple\"\nassert solution(\"hello\") == \"ll\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\") == \"hottaofofe\", \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'hcotcepu', \"The solution should be 'hcotcepu'.\"\nassert solution('cupofhottea') == 'hteaotuco', \"The solution should be 'hteaotuco'.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"otofcupofhottea\", \"The solution is not correct\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cupofcoffee\") == \"htofcoffee\"\nassert solution(\"cupofhottea\") == \"htofhottea\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('cupofcoffee') == 'hottea', 'Test failed'\nassert solution('cupofhottea') == 'otofhot', 'Test failed'\nassert solution('cinema') == 'cinemat', 'Test failed'\nassert solution('happy') == 'ahpah', 'Test failed'\nassert solution('hello') == 'elloh', 'Test failed'",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"htea\"\nassert solution(\"cupofhottea\") == \"hota\"\nassert solution(\"cupofhottea\") == \"hota\"\nassert solution(\"cupofhottea\") == \"hota\"\nassert solution(\"cupofhottea\") == \"hota\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\", \"Test 1: Correct output\"\nassert solution(\"cupofhottea\") == \"ofhottacup\", \"Test 2: Correct output\"\nassert solution(\"cupofhotwater\") == \"ofhottacupw\", \"Test 3: Correct output\"\nassert solution(\"cupofhotwater\") == \"ofhottacupw\", \"Test 4: Correct output\"\nassert solution(\"cupofhotwater\") == \"ofhottacupw\", \"Test 5: Correct output\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4\\n'  # correct output\nprint(\"Correct\")  # for printing the output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"hofotca\", \"Error in solution 1\"\nassert solution(\"cupofhottea\") == \"hoceofot\", \"Error in solution 2\"\nassert solution(\"hello\") == \"llo\", \"Error in solution 3\"\nassert solution(\"world\") == \"rlrd\", \"Error in solution 4\"\nassert solution(\"aeiou\") == \"a\", \"Error in solution 5\"",
        "num_ids_2": 45,
        "num_ids_4": 81
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"2 2\") == \"1 2\"\nassert solution(\"1 2\") == \"1 3\"\nassert solution(\"1 3\") == \"1 4\"\nassert solution(\"2 3\") == \"2 4\"\nassert solution(\"2 4\") == \"3 5\"\nassert solution(\"2 5\") == \"4 5\"\nassert solution(\"3 6\") == \"5 6\"\nassert solution(\"3 7\") == \"5 6 7\"\nassert solution(\"3 8\") == \"5 6 7 8\"\nassert solution(\"3 9\") == \"5 6 7 8 9\"\nassert solution(\"3 10\") == \"5 6 7 8 9 10\"",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5 6 7 8 9\", \"Expected output: 5 6 7 8 9, Actual output: \" + solution(stdin)",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"5 1\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"10 10\\n\") == \"10\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"2 4\") == \"3 4 5 6 7\"\nassert solution(\"1 1\") == \"0 1 2 3 4\"\nassert solution(\"1 2\") == \"0 1 2 3 4\"\nassert solution(\"1 3\") == \"0 1 2 3 4\"\nassert solution(\"1 4\") == \"0 1 2 3 4\"\nassert solution(\"1 5\") == \"0 1 2 3 4\"\nassert solution(\"2 6\") == \"0 1 2 3 4\"\nassert solution(\"3 7\") == \"0 1 2 3 4\"\nassert solution(\"5 10\") == \"0 1 2 3 4\"\nassert solution(\"1 5\") == \"5 6 7 8 9\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 0\\n\") == \"0\"\nassert solution(\"1 3\\n\") == \"3\"\nassert solution(\"2 2\\n\") == \"6\"\nassert solution(\"2 1\\n\") == \"7\"\nassert solution(\"3 3\\n\") == \"9\"\nassert solution(\"4 4\\n\") == \"11\"",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 7) == \"5 6 7 8 9\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"30\") == \"Yes\\n\", \"Test case 2 failed\"\nassert solution(\"45\") == \"Yes\\n\", \"Test case 3 failed\"\nassert solution(\"20\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"35\") == \"No\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"No\"  # expected output: \"No\"\nassert solution(\"30\") == \"No\"  # expected output: \"No\"\nassert solution(\"35\") == \"Yes\" # expected output: \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(25) == \"No\", \"Test failed.\"\nassert solution(35) == \"Yes\", \"Test failed.\"\nassert solution(45) == \"Yes\", \"Test failed.\"\nassert solution(50) == \"No\", \"Test failed.\"\nassert solution(60) == \"Yes\", \"Test failed.\"\nassert solution(70) == \"Yes\", \"Test failed.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(25) == 'No'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('25') == 'Yes\\n', \"Your code is incorrect. The correct output should be Yes.\"\nassert solution('50') == 'No\\n', \"Your code is incorrect. The correct output should be No.\"\nassert solution('60') == 'No\\n', \"Your code is incorrect. The correct output should be No.\"\nassert solution('40') == 'Yes\\n', \"Your code is incorrect. The correct output should be Yes.\"\nassert solution('70') == 'No\\n', \"Your code is incorrect. The correct output should be No.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(25) == \"No\", \"Your code should return 'No' when the room temperature is 25 degrees Celsius.\"\nassert solution(30) == \"Yes\", \"Your code should return 'Yes' when the room temperature is 30 degrees Celsius.\"\nassert solution(35) == \"Yes\", \"Your code should return 'Yes' when the room temperature is 35 degrees Celsius.\"\nassert solution(40) == \"Yes\", \"Your code should return 'Yes' when the room temperature is 40 degrees Celsius.\"\nassert solution(45) == \"No\", \"Your code should return 'No' when the room temperature is 45 degrees Celsius.\"\nassert solution(50) == \"Yes\", \"Your code should return 'Yes' when the room temperature is 50 degrees Celsius.\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"No\"  # incorrect\nassert solution(\"30\") == \"Yes\"  # correct",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(25) == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n', \"The number of pairs with an integer distance is one, as expected.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'''\n    3 2\n    1 2\n    5 5\n    -2 8\n''') == b'1\\n'\n\nassert solution(b'''\n    4 3\n    1 2\n    3 4\n    5 6\n    7 8\n''') == b'2\\n'\n\nassert solution(b'''\n    5 2\n    2 3\n    5 6\n    8 9\n    10 11\n''') == b'1\\n'\n\nassert solution(b'''\n    6 3\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n''') == b'2\\n'\n\nassert solution(b'''\n    7 4\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n''') == b'2\\n'\n\nassert solution(b'''\n    8 5\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n''') == b'2\\n'\n\nassert solution(b'''\n    9 6\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    27 28\n    29 30\n''') == b'2\\n'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\\n\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"4 3\\n1 2\\n3 4\\n5 6\\n-1 0\") == \"0\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 1\") == \"2\\n\"\nassert solution(\"2 4\\n1 2\\n-3 4\\n-4 2\") == \"1\\n\"\nassert solution(\"4 5\\n-2 3\\n1 5\\n2 4\\n-5 1\") == \"0\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 125
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n\") == \"1\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"12345\") == \"Bad\"\nassert solution(\"123456\") == \"Good\"\nassert solution(\"1234567\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"2345\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"9876\") == \"Good\"\nassert solution(\"12345\") == \"Bad\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"5555\") == \"Bad\"\nassert solution(\"12345\") == \"Good\"\nassert solution(\"6666\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Good', \"The second and third digits are the same, so 3776 is hard to enter.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3776) == 'Bad'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Good\" # Wrong Answer",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"4\\n2 3\\n\") == \"3.0\"\nassert solution(\"5\\n5\\n\") == \"5\"\nassert solution(\"6\\n3 2 1\\n\") == \"6\"\nassert solution(\"7\\n5 4 3\\n\") == \"5.5\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1.0\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"2.0\\n\"\nassert solution(\"5\\n3 4 5 6 7\\n\") == \"7.0\\n\"\nassert solution(\"2\\n100 200\\n\") == \"200.0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 3.5",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('3\\n4\\n5\\n6') == '10'\nassert solution('4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3'",
        "num_ids_2": 37,
        "num_ids_4": 109
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n4 5\\n\") == \"4.25\"\nassert solution(\"4\\n5 6\\n\") == \"5.75\"\nassert solution(\"6\\n7 8\\n\") == \"7.5\"\nassert solution(\"9\\n10 11\\n\") == \"10.0\"\nassert solution(\"12\\n13 14\\n\") == \"11.75\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 4\\n') == '3.5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"2\\n5 6\") == \"5.0\"\nassert solution(\"2\\n1 1\") == \"1.0\"\nassert solution(\"2\\n10 20 30 40\") == \"5.0\"\nassert solution(\"1\\n1\") == \"1.0\"\n\nfor n in [2, 3, 5, 10, 20, 50]:\n    assert solution(f\"{n}\\n\") == f\"{n}.0\"\n\nfor i in range(1, 1001):\n    assert solution(f\"{i} {i+1}\\n\") == f\"{i}.0\"\n\nfor i in range(1, 1001):\n    for j in range(i+1, 1001):\n        assert abs(float(solution(f\"{i} {j}\\n\")) - (i+j) / 2) <= 10**-5\n\nfor i in range(1, 1001):\n    for j in range(i+1, 1001):\n        for k in range(j+1, 1001):\n            assert abs(float(solution(f\"{i} {j} {k}\\n\")) - (i+j+k) / 2) <= 10**-5",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.5\\n\", \"Test case 1 failed\"\n\nassert solution(input()) == \"3.49999\\n\", \"Test case 2 failed\"\n\nassert solution(input()) == \"3.50001\\n\", \"Test case 3 failed\"\n\nassert solution(input()) == \"3.49999\\n\", \"Test case 4 failed\"\n\nassert solution(input()) == \"3.50001\\n\", \"Test case 5 failed\"\n\nassert solution(input()) == \"3.5\\n\", \"Test case 6 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\\n\"\nassert solution(\"2\\n5 6\\n\") == \"6.5\\n\"\nassert solution(\"2\\n10 7\\n\") == \"7.66667\\n\"\nassert solution(\"2\\n1 2\\n\") == \"1.5\\n\"\nassert solution(\"2\\n5 5 5\\n\") == \"5.0\\n\"\nassert solution(\"2\\n2 3\\n\") == \"1.5\\n\"\nassert solution(\"2\\n1 1 1\\n\") == \"1.0\\n\"\nassert solution(\"2\\n1 2\\n\") == \"1.5\\n\"\nassert solution(\"2\\n1 1 1\\n\") == \"1.0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n10\") == \"155\"\nassert solution(\"2\\n3 1\\n2 5\") == \"11\"\nassert solution(\"1\\n1 1\") == \"0\"\nassert solution(\"1\\n2 3\\n4 5\") == \"10\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\\n1 1\\n2 2\") == \"2\"\nassert solution(\"1\\n1 1\\n1 1\\n3 3\") == \"1\"\n",
        "num_ids_2": 61,
        "num_ids_4": 97
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\\n\"\nassert solution(\"3\\n4 5 6\") == \"90\\n\"\nassert solution(\"3\\n1 2\") == \"14\\n\"\nassert solution(\"2\\n3\\n4\") == \"6\\n\"\nassert solution(\"2\\n4\\n5\") == \"3\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 88
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14\\n'\n\nassert solution('''\n4\n1 2 3 4\n2 4 6 8\n5 6 7 9\n''') == '20\\n'\n\nassert solution('''\n6\n1 2 3 4 5\n2 4 6 8 10\n3 6 8 10 12\n4 8 10 12 14\n5 10 12 14 16\n''') == '36\\n'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9\n2 4 6 8 10 12 14 16 18\n3 6 8 10 12 14 16 18 20\n4 8 10 12 14 16 18 20 22\n5 10 12 14 16 18 20 22 24\n6 12 14 16 18 20 22 24 26\n7 14 16 18 20 22 24 26 28\n8 16 18 20 22 24 26 28 30\n9 18 20 22 24 26 28 30 32\n''') == '520\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\\n\"\nassert solution(\"1\\n1\\n1\") == \"1\\n\"\nassert solution(\"2\\n1\\n2\") == \"4\\n\"\nassert solution(\"3\\n1\\n3\\n2\") == \"6\\n\"\nassert solution(\"4\\n1\\n4\\n3\") == \"8\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 89
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\\n\") == \"14\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"5\\nZYZX\") == \"1\"\nassert solution(\"10\\nABCDABCDABCDABCD\") == \"1\"\nassert solution(\"10\\nABCDABCDABCDABCDABCD\") == \"2\"\nassert solution(\"10\\nABCDABCDABCDABCDABCDABCDABCDABCD\") == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\", \"Solution is not correct.\"\nassert solution(\"10\\nABC\") == \"0\\n\", \"Solution is not correct.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"10\\nZABCDBABCQ\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\nfor i in range(N):\n    assert count_abc(i) == output[i], f\"Incorrect count for subsequence {i}\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"9\\nXYZABCDEDFG\") == \"3\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nZABCDBABCQ\\n') == '2\\n', \"The output is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\", \"Input should be ZABCDBABCQ\"\nassert solution(\"10\\nZABCDABBCQ\\n\") == \"0\", \"Input should not contain any subsequences of length 7\"\nassert solution(\"10\\nZABCCDABBCQ\\n\") == \"2\", \"Input should have two occurrences of ABC\"\nassert solution(\"10\\nZACBCDBABCQ\\n\") == \"2\", \"Input should have two occurrences of ABC\"",
        "num_ids_2": 64,
        "num_ids_4": 125
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Your code is incorrect. The solution should return '2'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\\n\"\nassert solution(\"6\\nRUMOI\\nMASHIKE\\nHABORO\\nOBIRA\\nHOROKANAI\") == \"3\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nassert solution(\"5\\nAARON\\nEDWARD\\nBILLY\\nALICE\\n\") == \"2\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\nassert solution(\"5\\nALICE\\nBOB\\nAARON\\nCARMEN\\n\") == \"1\"\n",
        "num_ids_2": 67,
        "num_ids_4": 125
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\nassert solution('6\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\nOBIRA\\nRUMOI\\n') == '1\\n'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"2 3\\n\") == \"No\\n\"\nassert solution(\"1 2\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Test case 1: Takahashi's submission gets an AC.\"\nassert solution(input()) == \"No\\n\", \"Test case 2: Takahashi's submission does not get an AC.\"\nassert solution(input()) == \"No\\n\", \"Test case 3: Takahashi's submission does not get an AC.\"\nassert solution(input()) == \"No\\n\", \"Test case 4: Takahashi's submission does not get an AC.\"\nassert solution(input()) == \"No\\n\", \"Test case 5: Takahashi's submission does not get an AC.\"\nprint(\"All 5 test cases passed, so Takahashi's submission gets an AC.\")",
        "num_ids_2": 58,
        "num_ids_4": 118
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"5 4\") == \"No\\n\"\nassert solution(\"2 1\") == \"Yes\\n\"\nassert solution(\"5 1\") == \"No\\n\"\nassert solution(\"4 1\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Yes\\n', \"Test case 1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'No' # Solution should output \"No\"\nassert solution(stdin) == 'Yes' # Solution should output \"Yes\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"4 3\\n\") == \"No\\n\"\nassert solution(\"5 3\\n\") == \"No\\n\"\n\nprint(\"All three test cases have been passed, so his submission gets an AC.\")",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\"\n\nassert solution(\"1 3\\n\") == \"Yes\"\n\nassert solution(\"2 3\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Solution should be 'Yes'\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\" # test case 1\nassert solution(\"sippuuu\") == \"No\" # test case 2\nassert solution(\"sippuuuu\") == \"No\" # test case 3\nassert solution(\"sippuuuuu\") == \"No\" # test case 4\nassert solution(\"sippuuuuuu\") == \"No\" # test case 5",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"coffee\") == \"No\"\nassert solution(\"aaabbbcc\") == \"No\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"abcde\") == \"Yes\"\nassert solution(\"aaaaa\") == \"Yes\"\nassert solution(\"abcdefgh\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"abcd\") == \"No\", \"Test 2 failed\"\nassert solution(\"pizza\") == \"No\", \"Test 3 failed\"\nassert solution(\"coffee\") == \"Yes\", \"Test 4 failed\"\nassert solution(\"Coffee\") == \"Yes\", \"Test 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"1 80\\n7 60\\n3 70\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"2 20\\n3 30\\n4 40\") == \"TLE\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"1 2\\n3 4\") == \"TLE\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4\\n'\nassert solution('1 100\\n5 100\\n2 50\\n3 100') == 'TLE\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\\n\"\nassert solution(\"3 100\\n1 50\\n\") == \"TLE\\n\"\nassert solution(\"3 70\\n1 80\\n4 50\\n2 30\\n\") == \"4\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 94
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4\\n'\nassert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == 'TLE\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 100\\n2 150\\n1 200\\n2 250\\n1 300\\n2 350\\n3 400\\n2 450\\n3 500\\n2 550\\n3 600\\n2 650\\n3 700\\n\") == \"TLE\\n\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"1 100\\n2 200\") == \"TLE\\n\"\nassert solution(\"1 10\\n2 20\") == \"20\\n\"\nassert solution(\"1 10\\n2 20\\n3 30\\n4 40\\n5 50\") == \"20\\n\"\nassert solution(\"2 30\\n2 40\\n2 50\\n2 60\\n2 70\\n2 80\\n2 90\") == \"50\\nTLE\\n\"\nassert solution(\"2 30\\n2 40\\n2 50\\n2 60\\n2 70\\n2 80\\n2 90\\n2 100\\n2 110\\n2 120\\n2 130\\n2 140\\n2 150\") == \"50\\nTLE\\n\"\nassert solution(\"2 30\\n2 40\\n2 50\\n2 60\\n2 70\\n2 80\\n2 90\\n2 100\\n2 110\\n2 120\\n2 130\\n2 140\\n2 150\\n2 160\\n2 170\\n2 180\\n2 190\\n2 200\\n2 210\\n2 220\\n2 230\\n2 240\\n2 250\\n2 260\\n2 270\\n2 280\\n2 290\\n2 300\\n2 310\\n2 320\\n2 330\\n2 340\\n2 350\\n2 360\\n2 370\\n2 380\\n2 390\\n2 400\\n2 410\\n2 420\\n2 430\\n2 440\\n2 450\\n2 460\\n2 470\\n2 480\\n2 490\\n2 500\\n2 510\\n2 520\\n2 530\\n2 540\\n2 550\\n2 560\\n2 570\\n2 580\\n2 590\\n2 600\\n2 610\\n2 620\\n2 630\\n2 640\\n2 650\\n2 660\\n2 670\\n2 680\\n2 690\\n2 700\\n2 710\\n2 720\\n2 730\\n2 740\\n2 750\\n2 760\\n2 770\\n2 780\\n2 790\\n2 800\\n2 810\\n2 820\\n2 830\\n2 840\\n2 850\\n2 860\\n2 870\\n2 880\\n2 890\\n2 900\\n2 910\\n2 920\\n2 930\\n2 940\\n2 950\\n2 960\\n2 970\\n2 980\\n2 990\\n2 1000\\n2 1010\\n2 1020\\n2 1030\\n2 1040\\n2 1050\\n2 1060\\n2 1070\\n2 1080\\n2 1090",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 9') == '8\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the values for N, A, and B: \")) == 8\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 3 8\") == \"18\"\nassert solution(\"6 4 10\") == \"24\"\nassert solution(\"7 5 12\") == \"28\"\nassert solution(\"8 6 14\") == \"32\"\nassert solution(\"9 7 16\") == \"36\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 9\") == \"8\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\", \"Incorrect output. Output: {}\".format(solution(input()))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 2 1\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"5\\nA\\nA\\nA\\nA\\nB\\nB\\nB\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"3\\nb\\nb\\nb\\n\") == \"1\\n\"\nassert solution(\"4\\nabc\\nabc\\nabc\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 91
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\\nconstraint is an anagram of s_3 = constraint.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1\\n'\n\nassert solution('3\\nabcde\\nhijklmn\\nuvwxyz\\n') == '0\\n'\n\nassert solution('5\\ndkljhgfd\\nszxcvbn\\nkacjkl\\npqrstuv\\nz') == '3\\n'\n\nassert solution('5\\nabcde\\nabcde\\nabcde\\nabcde') == '0\\n'",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('2\\nhello\\nworld\\n') == '1\\n'\nassert solution('5\\na\\nb\\nc\\nd\\ne\\nf\\n') == '1\\n'",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"3\\nabcde\\nxyz\\nabcde\\n\") == \"0\\n\"\nassert solution(\"3\\nabcde\\nxyz\\nxyz\\n\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Received {solution(input())}, expected {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == expected_output, f\"Solution {solution} is not correct!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\\n\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('112123123412345') == '1'\nassert solution('112123123412345612345671234567812345678912345678910') == '1'\nassert solution('1121231234123456123456781234567891234567891012345678910') == '0'\nassert solution('1121231234123456123456781234567891234567891012345678911') == '1'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 158
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\\n\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"12345\"\nassert solution(4) == \"89\"\nassert solution(5) == \"0\"\nassert solution(5) == \"0\"\nassert solution(5) == \"0\"\nassert solution(5) == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() # Check the output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 1\\n1 2 1 1 2 1\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 99,
        "num_ids_4": 177
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1 2 1 1 2 1\\n1 1 1 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2  \\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1  \\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1 \\n\"",
        "num_ids_2": 88,
        "num_ids_4": 170
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2'\nassert solution('4 2\\n3 1\\n1 4\\n1 2') == '1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '3'\nprint('All tests passed.')",
        "num_ids_2": 64,
        "num_ids_4": 123
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Solution does not match. Expected output: {expected_output}, Received output: {solution(input)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1 1 2 3 2 3 1 3 1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: \\n{input()}\\nExpected output: {expected_output}\\nOutput: {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}' but returned '{solution(input())}'\"\nfor input_file in [\"input.txt\", \"test_input.txt\"]:\n    with open(input_file, \"r\") as f:\n        input_data = f.read().strip()\n        expected_output = f.read().strip()\n        result = solution(input_data)\n        assert result == expected_output, f\"The function should return '{expected_output}' but returned '{result}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"2 4\"\nassert solution(9) == \"3 8\"\nassert solution(7) == \"3 6\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"\nassert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\", \"Test 1\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\", \"Test 2\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\", \"Test 3\"",
        "num_ids_2": 70,
        "num_ids_4": 106
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\\n9\\n1 1 8 8 8 4 4 4 4\\n\\n7\\n4 3 7 1 4 3 3\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\\n7\\n4 3 7 1 4 3 3\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 155
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3 2 4 1 5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3 2 4 1 5\", \"You need to implement the solution function to solve this problem.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(input())}'\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"3 2 4 1 5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 2 4 1 5 \"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5 \"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n4\\n2\\n1\\n5\") == \"3 2 4 1 5\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 2 4 1 5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == [\"3 2 4 1 5 \"]\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10'\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1'",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {case} failed: Output '{output}' does not match the expected output '{output}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"10\"\n\nassert solution(stdin) == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\\n10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\\n6\\n1 1000 10000 10 100 1000000000\\n\\n1\\n\") == 3\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\\n6\\n1 1000 10000 10 100 1000000000\\n\\n1\\n\") == 10\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\\n1\\n\") == 1\n",
        "num_ids_2": 233,
        "num_ids_4": 281
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case} has an incorrect output. Expected: {expected_output}, Received: {solution(input)}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 4\nassert solution(open('input.txt', 'r')) == 5\nassert solution(open('input.txt', 'r')) == 2\nassert solution(open('input.txt', 'r')) == 0\nassert solution(open('input.txt', 'r')) == 1",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"4\n-1\n5\n2\n0\n1\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input '{stdin}'\\nExpected output: {expected_output}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n-1\\n5\\n2\\n0\\n1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ac?b?c\") == \"24\", \"Test Case 1 Failed\"\nassert solution(\"?????\") == \"2835\", \"Test Case 2 Failed\"\nassert solution(\"cccbbbaaa\") == \"0\", \"Test Case 3 Failed\"\nassert solution(\"a???c\") == \"46\", \"Test Case 4 Failed\"\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"?????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46\n\nprint(1 + 1 + 1 + 1 + 1)  # Add up all the numbers in the list",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returns {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nac?b?c') == '24'\nassert solution('7\\n?????') == '2835'\nassert solution('9\\ncccbbbaaa') == '0'\nassert solution('5\\na???c') == '46'\n\nprint(sum(1 for s in 'acabac' if s.count('a') == 2 + 4 + 4 + 2 + 3 + 4 + 1 + 2 + 2))\nprint(sum(1 for s in 'acabac' if s.count('b') == 4 + 4 + 4 + 4 + 4 + 4 + 4))\nprint(sum(1 for s in 'acabac' if s.count('c') == 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2))",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6\nac?b?c\"\"\") == \"24\"\nassert solution(\"\"\"7\n???????\"\"\") == \"2835\"\nassert solution(\"\"\"9\ncccbbbaaa\"\"\") == \"0\"\nassert solution(\"\"\"5\na???c\"\"\") == \"46\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ac?b?c\") == \"24\", \"Expected output: 24\"\nassert solution(\"?????\") == \"2835\", \"Expected output: 2835\"\nassert solution(\"cccbbbaaa\") == \"0\", \"Expected output: 0\"\nassert solution(\"a???c\") == \"46\", \"Expected output: 46\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"\n",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_solution, f\"Expected solution is {expected_solution}, but got {solution}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1, 3, 3) == 5\nassert solution(1, 2, 1) == 5\nassert solution(1, 3, 7) == 16\nassert solution(1, 4, 7) == 16\nassert solution(1, 5, 15) == 18",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"Test case 1 failed\"\nassert solution(input()) == \"16\", \"Test case 2 failed\"\nassert solution(input()) == \"18\", \"Test case 3 failed\"\nassert solution(input()) == \"55\", \"Test case 4 failed\"\nassert solution(input()) == \"600\", \"Test case 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n1 3 3\n2 3 5\n2 1 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4 0\n1 3 3 7\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\"\"\") == \"18\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 2\n    1 3 3\n    2 3 5\n    2 1 1''') == '5\\n'\n\nassert solution('''\n    4 0\n    1 3 3 7\n    1 3 3 8\n    1 3 3 9\n    1 3 3 10\n    1 3 3 11\n    1 3 3 12\n    1 3 3 13\n    1 3 3 14\n    1 3 3 15''') == '16\\n'\n\nassert solution('''\n    5 4\n    1 2 3 4 5\n    1 2 8\n    1 3 10\n    1 4 7\n    1 5 15''') == '18\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n0 5\n\"\"\") == \"45\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n1 5\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n\nassert solution(\"10 1 1\\n0 9\\n2 6\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n10 1\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n1 10\\n\") == \"-1\"\n\nassert solution(\"10 1 1\\n0 9\\n3 2\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n10 2\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n2 10\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 132
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"The output is incorrect. Received: {solution(stdin)}, expected: {expected}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\"\"\") == \"14\"\n\nassert solution(\"\"\"10 1 1\n0 9\n0 5\"\"\") == \"45\"\n\nassert solution(\"\"\"10 1 1\n0 9\n1 5\"\"\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Test failed\"\nassert solution(\"4 6 8\") == \"No\", \"Test failed\"\nassert solution(\"1 2 3\") == \"No\", \"Test failed\"\nassert solution(\"5 10 7\") == \"Yes\", \"Test failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"\nassert solution(\"1 3 5\") == \"No\"\nassert solution(\"8 9 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Test 1\"\nassert solution(\"1 2 3\") == \"No\\n\", \"Test 2\"\nassert solution(\"1 1 2\") == \"No\\n\", \"Test 3\"\nassert solution(\"10 10 10\") == \"No\\n\", \"Test 4\"\nassert solution(\"10 10 1\") == \"Yes\\n\", \"Test 5\"",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"1 2 3\") == \"No\\n\", \"Test failed\"\nassert solution(\"4 6 8\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"9 9 9\") == \"No\\n\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"3 7 5\") == \"No\"\nassert solution(\"5 10 5\") == \"Yes\"\nassert solution(\"3 10 5\") == \"No\"\nassert solution(\"5 7 10\") == \"Yes\"\nassert solution(\"3 7 10\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"3 4 3\") == \"No\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"1 5 1\") == \"Yes\"\nassert solution(\"5 7 1\") == \"No\"\nassert solution(\"1 5 7\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"3 4 5\") == \"Yes\"\nassert solution(\"7 6 9\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Test failed for sample input 5 7 5\"\nassert solution(\"4 6 5\") == \"No\", \"Test failed for sample input 4 6 5\"\nassert solution(\"1 1 1\") == \"No\", \"Test failed for sample input 1 1 1\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n1500 2000\\n1500 3000\\n1000 5000\") == \"2\\n\"\nassert solution(\"4\\n3000 4000\\n2000 6000\\n2500 7000\") == \"2\\n\"\nassert solution(\"5\\n1000 2000\\n1000 3000\\n1000 4000\\n1000 5000\") == \"3\\n\"\nassert solution(\"6\\n10000 20000\\n10000 30000\\n10000 40000\\n10000 50000\\n10000 60000\\n10000 70000\\n10000 80000\\n10000 90000\") == \"3\\n\"\nassert solution(\"7\\n100000 200000\\n100000 300000\\n100000 400000\\n100000 500000\\n100000 600000\\n100000 700000\\n100000 800000\\n100000 900000\\n100000 1000000\\n100000 1100000\\n100000 1200000\\n100000 1300000\\n100000 1400000\\n100000 1500000\\n100000 1600000\\n100000 1700000\\n100000 1800000\\n100000 1900000\\n100000 2000000\") == \"4\\n\"\nassert solution(\"8\\n1000000 2000000\\n1000000 3000000\\n1000000 4000000\\n1000000 5000000\\n1000000 6000000\\n1000000 7000000\\n1000000 8000000\\n1000000 9000000\\n1000000 10000000\\n1000000 11000000\\n1000000 12000000\\n1000000 13000000\\n1000000 14000000\\n1000000 15000000\\n1000000 16000000\\n1000000 17000000\\n1000000 18000000\\n1000000 19000000\\n1000000 20000000\\n1000000 21000000\\n1000000 22000000\\n1000000 23000000\\n1000000 24000000\\n1000000 2500000",
        "num_ids_2": 74,
        "num_ids_4": 175
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\", \"Expected Output: 1\\nActual Output: {}\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Invalid output\"\nprint(\"The palace should be built at Place 1.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n12 5\\n1000 2000\") == \"2\\n\"\nassert solution(\"4\\n12 5\\n1000 2000\") == \"2\\n\"\nassert solution(\"5\\n12 5\\n1000 2000\") == \"3\\n\"\nassert solution(\"6\\n12 5\\n1000 2000\") == \"3\\n\"\nassert solution(\"7\\n12 5\\n1000 2000\") == \"4\\n\"\nassert solution(\"8\\n12 5\\n1000 2000\") == \"4\\n\"\nassert solution(\"9\\n12 5\\n1000 2000\") == \"5\\n\"\nassert solution(\"10\\n12 5\\n1000 2000\") == \"5\\n\"\nassert solution(\"11\\n12 5\\n1000 2000\") == \"6\\n\"\nassert solution(\"12\\n12 5\\n1000 2000\") == \"6\\n\"\nassert solution(\"13\\n12 5\\n1000 2000\") == \"7\\n\"\nassert solution(\"14\\n12 5\\n1000 2000\") == \"7\\n\"\nassert solution(\"15\\n12 5\\n1000 2000\") == \"8\\n\"\nassert solution(\"16\\n12 5\\n1000 2000\") == \"8\\n\"\nassert solution(\"17\\n12 5\\n1000 2000\") == \"9\\n\"\nassert solution(\"18\\n12 5\\n1000 2000\") == \"9\\n\"\nassert solution(\"19\\n12 5\\n1000 2000\") == \"10\\n\"\nassert solution(\"20\\n12 5\\n1000 2000\") == \"10\\n\"\nassert solution(\"21\\n12 5\\n1000 2000\") == \"11\\n\"\nassert solution(\"22\\n12 5\\n1000 2000\") == \"11\\n\"\nassert solution(\"23\\n12 5\\n1000 2000\") == \"12\\n\"\nassert solution(\"24\\n12 5\\n1000 2000\") == \"12\\n\"\nassert solution(\"25\\n12 5\\n1000 2000\") == \"13\\n\"\nassert solution(\"26\\n12 5\\n1000 2000\") == \"13\\n\"\nassert solution(\"27\\n12 5\\n1000 2000\") == \"14\\n\"\nassert solution(\"28\\n12 5\\n1000 2000\") == \"14\\n\"\nassert solution(\"29\\n12 5\\n1000 2000\") == \"15\\n\"\nassert solution(\"30\\n12 5\\n1000 2000\") == \"15\\n\"\nassert solution(\"31\\n12 5\\n1000 2000\") == \"16\\n\"\nassert solution(\"32\\n12 5\\n1000 2000\") == \"16\\n\"\nassert solution(\"33\\n12 5\\n1000 2000\") == \"17\\n\"\nassert solution(\"34\\n12 5\\n1000 2000\") == \"17\\n\"\nassert solution(\"35\\n12 5\\n1000 2000\") == \"18\\",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '1', 'The solution is incorrect'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 3\") == \"2\\n\"\nassert solution(\"7 5\") == \"1\\n\"\nassert solution(\"9 6\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"5 4\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Test Case 1 Failed\"\nassert solution(input()) == \"2\", \"Test Case 2 Failed\"\nassert solution(input()) == \"4\", \"Test Case 3 Failed\"\nassert solution(input()) == \"3\", \"Test Case 4 Failed\"\nassert solution(input()) == \"5\", \"Test Case 5 Failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"7 8\") == \"4\"\nassert solution(\"1 2\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Test failed\"\nassert solution(\"4 2\") == \"2\\n\", \"Test failed\"\nassert solution(\"3 1\") == \"1\\n\", \"Test failed\"\nassert solution(\"5 1\") == \"1\\n\", \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\", \"Expected 1, got {}\".format(solution(\"2 1\"))\nassert solution(\"3 4\") == \"2\", \"Expected 2, got {}\".format(solution(\"3 4\"))\nassert solution(\"4 6\") == \"4\", \"Expected 4, got {}\".format(solution(\"4 6\"))\nassert solution(\"3 3\") == \"1\", \"Expected 1, got {}\".format(solution(\"3 3\"))\nassert solution(\"5 5\") == \"1\", \"Expected 1, got {}\".format(solution(\"5 5\"))",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\", \"Test case 1 failed\"\nassert solution(\"1 2\") == \"1\", \"Test case 2 failed\"\nassert solution(\"1 4\") == \"1\", \"Test case 3 failed\"\nassert solution(\"2 4\") == \"2\", \"Test case 4 failed\"\nassert solution(\"1 1\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == [\"2\", \"0\", \"3\"]",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '2\\n0\\n3'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"1 2\\n3 4\") == \"0\\n1\"\nassert solution(\"ABCDGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\") == \"2\\n0\\n1\"",
        "num_ids_2": 59,
        "num_ids_4": 91
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\\n\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nfor i in range(Q):\n    l_i, r_i = map(int, input().split())\n    assert l_i < r_i\n    assert S[l_i-1] == 'A'\n    assert S[r_i+1:] == 'G'\n    count_ac = 0\n    for j in range(l_i, r_i+1):\n        if S[j] == 'A':\n            count_ac += 1\n    if count_ac > 1:\n        print(1)\n    else:\n        print(0)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'\nassert solution('5 4\\nAGGT\\n3 7\\n1 3\\n2 1\\n1 2') == '1\\n0\\n1'\nassert solution('1 1\\nABC\\n1 4\\n2 2\\n3 4') == '0\\n1\\n1'",
        "num_ids_2": 81,
        "num_ids_4": 117
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n0\\n3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"10 3\\nAAGAC\\n1 5\\n3 6\\n1 7\\n4 2\") == \"0\\n1\\n0\"\nassert solution(\"5 6\\nAAGACACG\\n1 5\\n3 6\\n1 7\\n4 2\") == \"0\\n2\\n2\"\n",
        "num_ids_2": 82,
        "num_ids_4": 126
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"5 3\\n50 100 80 120\") == \"50\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"210\"\nassert solution(input()) == \"100\"\nassert solution(input()) == \"200\"\nassert solution(input()) == \"300\"\nassert solution(input()) == \"500\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '210'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"210\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210\\n'\nassert solution('5 5\\n50 100 80 120 80') == '160\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\"\nassert solution(\"1 4 5\") == \"10\", \"The sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 = 5 hours\"\nassert solution(\"1 4 5\") == \"10\", \"The sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 = 7 hours\"\nassert solution(\"1 4 5\") == \"10\", \"The sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 = 5 hours\"\nassert solution(\"1 4 5\") == \"10\", \"The sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 = 4 hours\"",
        "num_ids_2": 84,
        "num_ids_4": 170
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n\", \"Invalid Output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 2 3\") == \"10\"\nassert solution(\"2 3 4\") == \"8\"\nassert solution(\"10 2 5\") == \"28\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"The minimum of these is 4 hours.\\n\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 6\") == \"12\"\nassert solution(\"3 5 7\") == \"17\"\nassert solution(\"4 6 8\") == \"20\"\nassert solution(\"1 3 6\") == \"11\"\nassert solution(\"1 2 3\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 1 4\") == \"4\"\nassert solution(\"5 5 1\") == \"0\"\nassert solution(\"1 4 1\") == \"4\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"3 2 1\") == \"6\"\nassert solution(\"100 50 200\") == \"1080\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 = 5 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 = 7 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 = 5 hours\"\nassert solution(\"1 3 4\") == \"4\", \"The sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 = 4 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 + 2 + 3 = 7 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 + 2 + 3 = 10 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 + 2 + 3 = 8 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 + 2 + 3 = 10 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 + 2 + 3 = 9 hours\"\nassert solution(\"1 2 3\") == \"7\", \"The sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 + 2 + 3 = 8 hours\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '4\\n', \"Expected output: 4\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Test failed\"\nassert solution(\"2 7\") == \"10\\n\", \"Test failed\"\nassert solution(\"10 5\") == \"10\\n\", \"Test failed\"\nassert solution(\"0 10\") == \"0\\n\", \"Test failed\"\nassert solution(\"5 0\") == \"0\\n\", \"Test failed\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Test case 1\"\nassert solution(\"0 10\") == \"10\\n\", \"Test case 2\"\nassert solution(\"5 3\") == \"0\\n\", \"Test case 3\"\nassert solution(\"7 9\") == \"10\\n\", \"Test case 4\"\nassert solution(\"2 1\") == \"0\\n\", \"Test case 5\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"5 10\") == \"10\"\nassert solution(\"15 5\") == \"0\"\nassert solution(\"0 10\") == \"10\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\", \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"4 6\") == \"0\\n\"\nassert solution(\"0 5\") == \"0\\n\"\nassert solution(\"7 8\") == \"10\\n\"\nassert solution(\"9 9\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 2\") == \"0\\n\"\nassert solution(\"0 10\") == \"0\\n\"\nassert solution(\"9 11\") == \"10\\n\"\nassert solution(\"10 10\") == \"10\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 5\") == \"10\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"0 2\") == \"10\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"1 5\") == \"0\\n\"\nassert solution(\"5 1\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"6 7\") == \"0\\n\"\nassert solution(\"0 3\") == \"10\\n\"\nassert solution(\"10 3\") == \"0\\n\"\nassert solution(\"0 9\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"7 8\") == \"10\\n\"\nassert solution(\"0 1\") == \"0\\n\"\nassert solution(\"5 6\") == \"10\\n\"\nassert solution(\"10 11\") == \"0\\n\"\nassert solution(\"12 13\") == \"10\\n\"\nassert solution(\"14 15\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test failed.\"\nassert solution(\"100000000000000000000\") == \"1\\n\", \"Test failed.\"\nassert solution(\"-10000000000000000000\") == \"1\\n\", \"Test failed.\"\nassert solution(\"0 2\") == \"1\\n\", \"Test failed.\"\nassert solution(\"5 7\") == \"2\\n\", \"Test failed.\"",
        "num_ids_2": 54,
        "num_ids_4": 107
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n', 'Incorrect output for sample input 7 4'\n\nassert solution(input()) == '1\\n', 'Incorrect output for sample input 5 7'\n\nassert solution(input()) == '1\\n', 'Incorrect output for sample input 6 7'\n\nassert solution(input()) == '1\\n', 'Incorrect output for sample input 1000000000 1000000000'\n\nassert solution(input()) == '1\\n', 'Incorrect output for sample input 1000000000 1000000000'\n\nassert solution(input()) == '1\\n', 'Incorrect output for sample input 1000000000 1000000000'",
        "num_ids_2": 46,
        "num_ids_4": 110
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"The correct output should be: 1\\n\"\n\nfrom collections import Counter",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"7 4\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"  # Expected Output: 1\nassert solution(input()) == \"1\\n\"  # Expected Output: 1",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"The expected output is not obtained.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nprint(\"All test cases passed successfully.\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Test 1 failed.\"\n\nassert solution(\"1 2 3\") == \"bust\\n\", \"Test 2 failed.\"\n\nassert solution(\"4 5 6\") == \"bust\\n\", \"Test 3 failed.\"\n\nassert solution(\"7 8 9\") == \"bust\\n\", \"Test 4 failed.\"\n\nassert solution(\"10 11 12\") == \"bust\\n\", \"Test 5 failed.\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test Case 1\"\nassert solution(\"1 2 3\") == \"bust\", \"Test Case 2\"\nassert solution(\"10 20 30\") == \"bust\", \"Test Case 3\"\nassert solution(\"10 5 10\") == \"bust\", \"Test Case 4\"\nassert solution(\"22 18 24\") == \"bust\", \"Test Case 5\"",
        "num_ids_2": 41,
        "num_ids_4": 88
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 7, 9) == \"win\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Test 1\"\nassert solution(\"10 15 20\") == \"bust\\n\", \"Test 2\"\nassert solution(\"5 10 15\") == \"bust\\n\", \"Test 3\"\nassert solution(\"22 15 22\") == \"win\\n\", \"Test 4\"\nassert solution(\"15 20 25\") == \"bust\\n\", \"Test 5\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Test 1 failed\"\nassert solution(\"1 2 3\") == \"win\\n\", \"Test 2 failed\"\nassert solution(\"4 5 6\") == \"win\\n\", \"Test 3 failed\"\nassert solution(\"10 11 12\") == \"bust\\n\", \"Test 4 failed\"\nassert solution(\"5 13 15\") == \"bust\\n\", \"Test 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"4 4 4\") == \"bust\"\nassert solution(\"10 10 10\") == \"bust\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Sample Input\"\nassert solution(\"4 8 6\") == \"bust\", \"Sample Input\"\nassert solution(\"1 1 1\") == \"win\", \"Sample Input\"\nassert solution(\"22 22 22\") == \"bust\", \"Sample Input\"\nassert solution(\"1 2 3\") == \"win\", \"Sample Input\"\nassert solution(\"1 2 4\") == \"bust\", \"Sample Input\"\nassert solution(\"1 1 1\") == \"win\", \"Sample Input\"\nassert solution(\"22 22 22\") == \"bust\", \"Sample Input\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Solution should return win.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test failed: Solution should return win for the given input\"\nassert solution(\"4 6 8\") == \"win\", \"Test failed: Solution should return win for the given input\"\nassert solution(\"3 5 7\") == \"bust\", \"Test failed: Solution should return bust for the given input\"\nassert solution(\"2 3 4\") == \"bust\", \"Test failed: Solution should return bust for the given input\"\nassert solution(\"1 1 1\") == \"bust\", \"Test failed: Solution should return bust for the given input\"\nprint(\"All test cases passed\")",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"12\"\nassert solution(5) == \"18\"\nassert solution(6) == \"18\"\nassert solution(7) == \"22\"\nassert solution(8) == \"22\"\nassert solution(9) == \"26\"\nassert solution(10) == \"26\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\", \"Test Case 1 failed\"\n\nassert solution(\"12\") == \"24\", \"Test Case 2 failed\"\n\nassert solution(\"7\") == \"12\", \"Test Case 3 failed\"\n\nassert solution(\"0\") == \"0\", \"Test Case 4 failed\"\n\nassert solution(\"11\") == \"11\", \"Test Case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '6'\n\nassert solution(12) == '12'\n\nassert solution(60) == '12'\n\nassert solution(80) == '12'\n\nassert solution(90) == '12'\n\nassert solution(100) == '12'\n\nassert solution(101) == '12'\n\nassert solution(102) == '12'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"6\"\nassert solution(stdin=\"3\") == \"6\"\nassert solution(stdin=\"10\") == \"10\"\nassert solution(stdin=\"0\") == \"6\"\nassert solution(stdin=\"1000\") == \"1006\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2') == '2', \"Test 1\"\nassert solution('5 3') == '2', \"Test 2\"\nassert solution('7 5') == '1', \"Test 3\"\nassert solution('9 7') == '1', \"Test 4\"\nassert solution('10 8') == '1', \"Test 5\"\nassert solution('11 9') == '0', \"Test 6\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output. Expected 2, got: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2', 'Test failed' # Here's the solution to the problem.",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"5 2\\n\") == \"2\\n\"\nassert solution(\"2 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n\") == \"3\\n\"\nassert solution(\"4 4\\n\") == \"4\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Input format error\\n\"  # Solution should not be defined without input format",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"The expected output is: 2. Received: {}.\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2\\n') == '2\\n', \"Expected output: 2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"  # pass\nassert solution(\"3 5\") == \"1\"  # pass\nassert solution(\"8 3\") == \"2\"  # pass\nassert solution(\"10 4\") == \"3\"  # pass\nassert solution(\"12 2\") == \"2\"  # pass",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"pon\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"pon\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(16) == 'pon'\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\", \"Expected pon but got {} instead.\".format(solution(\"16\"))\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('16') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('17') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('19') == 'bon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('20') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('21') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('23') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('24') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"\nassert solution('25') == 'pon', \"The cat Snuke wants to play a popular Japanese game called \u00c5tCoder, so Iroha has decided to teach him Japanese.\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"pon\", \"The output should be pon\"\nassert solution(\"100\") == \"pon\", \"The output should be pon\"\nassert solution(\"99\") == \"pon\", \"The output should be pon\"\nassert solution(\"101\") == \"pon\", \"The output should be pon\"\nassert solution(\"98\") == \"pon\", \"The output should be pon\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\") == \"20\\n\"\nassert solution(\"5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\") == \"30\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 89
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '11\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"17\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"32\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"44\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"60\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"11\\n\", \"The output does not match the expected output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"11\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 11",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2') == '11\\n', \"Test failed: Check output.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '11'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '11'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"6\\n1\\n5\\n4\\n2\\n3\\n6\\n\") == \"6\\n5\\n4\\n3\\n2\\n1\\n6\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 113
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n3\\n4\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n3\\n4\\n'\nassert solution(open('input2.txt', 'r').read()) == '4\\n3\\n4\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n\\n3\\n\") == \"1\\n\\n3\"\nassert solution(\"4\\n1\\n2\\n\\n3\\n\") == \"4\\n2\\n3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n\\n3\\n\") == \"1\\n\\n3\"\nassert solution(\"4\\n1\\n2\\n\\n3\\n\") == \"4\\n2\\n3\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"",
        "num_ids_2": 52,
        "num_ids_4": 108
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n3\\n4\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n4\n3\n4\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"2\\n1000000000\\n2000000000\\n2000000000\\n\") == \"1000000000\\n2000000000\\n2000000000\\n\"\nassert solution(\"2\\n10\\n20\\n30\\n\") == \"30\\n20\\n10\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 147
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n3\\n4\\n2\") == \"3\\n4\\n2\"\nassert solution(\"3\\n4\\n5\\n6\\n7\") == \"5\\n6\\n7\"\nassert solution(\"2\\n2\\n2\\n2\") == \"2\"\nassert solution(\"2\\n2\\n2\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 53,
        "num_ids_4": 100
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n1\\n4\\n3'\n) == '4\\n3\\n4\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Input should be 5 3\"\nassert solution(\"10 5\") == \"15\\n\", \"Input should be 10 5\"\nassert solution(\"10 3\") == \"25\\n\", \"Input should be 10 3\"\nassert solution(\"10 2\") == \"15\\n\", \"Input should be 10 2\"\nassert solution(\"5 1\") == \"15\\n\", \"Input should be 5 1\"",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n') == '9\\n', \"Test Failed\"\nassert solution('1 3\\n') == '3\\n', \"Test Failed\"\nassert solution('2 4\\n') == '4\\n', \"Test Failed\"\nassert solution('3 4\\n') == '5\\n', \"Test Failed\"\nassert solution('4 4\\n') == '6\\n', \"Test Failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Your solution is incorrect!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\\n\"  # correct output",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\", \"The solution is incorrect.\"\nassert solution(\"5 3\") == \"9\", \"The solution is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\\n\", \"You can get 5 + 4 = 9 coins by pressing the button of size 5 twice, and this is the maximum result.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Your function is incorrect.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 3\n-30 -10 10 20 50\"\"\") == \"\"\"40\"\"\"\nassert solution(\"\"\"6 3\n-30 -10 10 20 50\"\"\") == \"\"\"20\"\"\"\nassert solution(\"\"\"4 4\n-10 10 10 10\"\"\") == \"\"\"10\"\"\"\nassert solution(\"\"\"3 3\n10 20 30\"\"\") == \"\"\"30\"\"\"\nassert solution(\"\"\"1 1\n1\"\"\") == \"\"\"1\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-29 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-10 -10 10 20 50\") == \"30\"\nassert solution(\"5 3\\n0 10 20 30 40\") == \"30\"\nassert solution(\"5 3\\n-10 -10 10 20 50\") == \"30\"",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\nassert solution('5 3\\n-30 -10 10 20 50') == '40'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"\nassert solution(\"1 1\\n5\") == \"1\\n\"\nassert solution(\"1 2\\n3\") == \"0\\n\"\nassert solution(\"1 3\\n-4\") == \"0\\n\"\nassert solution(\"2 1\\n4\") == \"0\\n\"\nassert solution(\"2 2\\n5\") == \"1\\n\"\nassert solution(\"3 1\\n0\") == \"0\\n\"\nassert solution(\"3 2\\n1\") == \"1\\n\"\nassert solution(\"4 1\\n2\") == \"0\\n\"\nassert solution(\"4 2\\n3\") == \"1\\n\"\nassert solution(\"5 1\\n4\") == \"0\\n\"\nassert solution(\"5 2\\n5\") == \"1\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 84
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40\\n'\nprint('All test cases passed!')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"\nassert solution(\"5 3\\n0 100\") == \"1\\n\"\nassert solution(\"5 3\\n-30 -10 10 20 50\\n0 100\") == \"1\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 91
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"1 100\") == \"2\"\nassert solution(\"1 1000\") == \"2\"\nassert solution(\"1 10000\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"0\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 94
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='8 13') == '2'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"100 99\") == \"3\"\nassert solution(\"1000000 999999\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"3 4\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nprint(solution('10 4'))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 5\") == \"4\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"10 1\") == \"3\"\nassert solution(\"10 0\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"10 4\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 5\") == \"4\"\nassert solution(\"10 6\") == \"5\"\nassert solution(\"10 7\") == \"6\"\nassert solution(\"10 8\") == \"7\"\nassert solution(\"10 9\") == \"8\"\nassert solution(\"10 10\") == \"9\"\nassert solution(\"10 11\") == \"10\"\nassert solution(\"10 12\") == \"11\"\nassert solution(\"10 13\") == \"12\"\nassert solution(\"10 14\") == \"13\"\nassert solution(\"10 15\") == \"14\"\nassert solution(\"10 16\") == \"15\"\nassert solution(\"10 17\") == \"16\"\nassert solution(\"10 18\") == \"17\"\nassert solution(\"10 19\") == \"18\"\nassert solution(\"10 20\") == \"19\"\nassert solution(\"10 21\") == \"20\"\nassert solution(\"10 22\") == \"21\"\nassert solution(\"10 23\") == \"22\"\nassert solution(\"10 24\") == \"23\"\nassert solution(\"10 25\") == \"24\"\nassert solution(\"10 26\") == \"25\"\nassert solution(\"10 27\") == \"26\"\nassert solution(\"10 28\") == \"27\"\nassert solution(\"10 29\") == \"28\"\nassert solution(\"10 30\") == \"29\"\nassert solution(\"10 31\") == \"30\"\nassert solution(\"10 32\") == \"31\"\nassert solution(\"10 33\") == \"32\"\nassert solution(\"10 34\") == \"33\"\nassert solution(\"10 35\") == \"34\"\nassert solution(\"10 36\") == \"35\"\nassert solution(\"10 37\") == \"36\"\nassert solution(\"10 38\") == \"37\"\nassert solution(\"10 39\") == \"38\"\nassert solution(\"10 40\") == \"39\"\nassert solution(\"10 41\") == \"40\"\nassert solution(\"10 42\") == \"41\"\nassert solution(\"10 43\") == \"42\"\nassert solution(\"10 44\") == \"43\"\nassert solution(\"10 45\") == \"44\"\nassert solution(\"10 46\") == \"45\"\nassert solution(\"10 47\") == \"46\"\nassert solution(\"10 48\") == \"47\"\nassert solution(\"10 49\") == \"48\"\nassert solution(\"10 50\") == \"49\"\nassert solution(\"10 51\") == \"50\"\nassert solution(\"10 52\") == \"51\"\nassert solution(\"10 53\") == \"52\"\nassert solution(\"10 54\") == \"53\"\nassert solution(\"10 55\") == \"54\"\nassert solution(\"10 56\") == \"55\"\nassert solution(\"10 57\") == \"56\"\nassert solution(\"10 58\") == \"57\"\nassert solution(\"10 59\") == \"58\"\nassert solution(\"10 60\") == \"59\"\nassert solution(\"10 61\") == \"60\"\nassert solution(\"10 62\") == \"61\"\nassert solution(\"10 63\") == \"62\"\nassert solution(\"10 64\") == \"63\"\nassert solution(\"10 65\") == \"64\"\nassert solution(\"10 66\") == \"65\"\nassert solution(\"10 67\") == \"66\"\nassert solution(\"10 68\") == \"67\"\nassert solution(\"10 69\") == \"68\"\nassert solution(\"10 70\") == \"69\"\nassert solution(\"10 71\") == \"70\"\nassert solution(\"10 72\") == \"71\"\nassert solution(\"1",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Test 1 Failed\"\nassert solution(\"7 2\") == \"2\\n\", \"Test 2 Failed\"\nassert solution(\"3 0\") == \"1\\n\", \"Test 3 Failed\"\nassert solution(\"5 1\") == \"2\\n\", \"Test 4 Failed\"\nassert solution(\"10 1\") == \"4\\n\", \"Test 5 Failed\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"Please enter the correct input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"9 1\") == \"1\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"10 5\") == \"4\"\nassert solution(\"10 0\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '50\\n', \"Your solution is incorrect. The output is: \" + solution(input())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\", \"The expected output is not as provided.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"50\", \"The output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"\nassert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 75 25 101\") == \"50\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"50\") == \"50\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(105) == 1, \"Invalid input\"\nassert solution(0) == 0, \"Invalid input\"\nassert solution(-100) == 0, \"Invalid input\"\nassert solution(201) == 0, \"Invalid input\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter a number: \")) == \"1\", \"The number 105 is not odd and has exactly eight divisors.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(105) == 1, \"Test case 1 failed\"\nassert solution(205) == 1, \"Test case 2 failed\"\nassert solution(21) == 1, \"Test case 3 failed\"\nassert solution(27) == 1, \"Test case 4 failed\"\nassert solution(60) == 2, \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(105) == 1, \"Testcase failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"105\") == \"1\", \"Testcase 1 failed\"\nassert solution(stdin=\"100\") == \"0\", \"Testcase 2 failed\"\nassert solution(stdin=\"10\") == \"2\", \"Testcase 3 failed\"\nassert solution(stdin=\"101\") == \"2\", \"Testcase 4 failed\"\nassert solution(stdin=\"50\") == \"2\", \"Testcase 5 failed\"\n",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(105) == 1, \"The number 105 is odd but still it has eight divisors.\"\n\nprint(1)",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\", \"Expected output: 1\\n, but got: {}\".format(solution(input()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(105) == 1, \"Incorrect output for N=105\"\nassert solution(1) == 0, \"Incorrect output for N=1\"\nassert solution(2) == 1, \"Incorrect output for N=2\"\nassert solution(3) == 0, \"Incorrect output for N=3\"\nassert solution(4) == 0, \"Incorrect output for N=4\"\nassert solution(5) == 0, \"Incorrect output for N=5\"\nassert solution(6) == 1, \"Incorrect output for N=6\"\nassert solution(7) == 1, \"Incorrect output for N=7\"\nassert solution(8) == 1, \"Incorrect output for N=8\"\nassert solution(9) == 0, \"Incorrect output for N=9\"\nassert solution(10) == 0, \"Incorrect output for N=10\"\nassert solution(11) == 1, \"Incorrect output for N=11\"\nassert solution(12) == 2, \"Incorrect output for N=12\"\nassert solution(13) == 2, \"Incorrect output for N=13\"\nassert solution(14) == 1, \"Incorrect output for N=14\"\nassert solution(15) == 1, \"Incorrect output for N=15\"\nassert solution(16) == 0, \"Incorrect output for N=16\"\nassert solution(17) == 1, \"Incorrect output for N=17\"\nassert solution(18) == 2, \"Incorrect output for N=18\"\nassert solution(19) == 3, \"Incorrect output for N=19\"\nassert solution(20) == 3, \"Incorrect output for N=20\"\nassert solution(21) == 2, \"Incorrect output for N=21\"\nassert solution(22) == 1, \"Incorrect output for N=22\"\nassert solution(23) == 0, \"Incorrect output for N=23\"\nassert solution(24) == 0, \"Incorrect output for N=24\"\nassert solution(25) == 0, \"Incorrect output for N=25\"\nassert solution(26) == 0, \"Incorrect output for N=26\"\nassert solution(27) == 0, \"Incorrect output for N=27\"\nassert solution(28) == 0, \"Incorrect output for N=28\"\nassert solution(29) == 0, \"Incorrect output for N=29\"\nassert solution(30) == 0, \"Incorrect output for N=30\"\nassert solution(31) == 0, \"Incorrect output for N=31\"\nassert solution(32) == 0, \"Incorrect output for N=32\"\nassert solution(33) == 0, \"Incorrect output for N=33\"\nassert solution(34) == 0, \"Incorrect output for N=34\"\nassert solution(35) == 0, \"Incorrect output for N=35\"\nassert solution(36) == 0, \"Incorrect output for N=36\"\nassert solution(37) == 0, \"Incorrect output for N=37\"\nassert solution(38) == 0, \"Incorrect output for N=38\"\nassert solution(39) == 0, \"Incorrect output for N=39\"\nassert solution(40) == 0, \"Incorrect output for N=40\"\nassert solution(41) == 0, \"Incorrect output for N=41\"\nassert solution(42) == 0, \"Incorrect output for N=42\"\nassert solution(43) == 0, \"Incorrect output for N=43\"\nassert solution(44) == 0, \"Incorrect output for N=44\"\nassert solution(45) == 0, \"Incorrect output for N=45\"\nassert solution(46) == 0, \"Incorrect output for N=46\"\nassert solution(47) == 0, \"Incorrect output for N=47\"\nassert solution(48) == 0, \"Incorrect output for N=48\"\nassert solution(49) == 0, \"Incorrect output for N=49\"\nassert solution(50) == 0, \"Incorrect output for N=50\"\nassert solution(51) == 0, \"Incorrect output for N=51\"\nassert solution",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n', \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(105) == 1, \"The number 105 is quite special - it is odd but still it has eight divisors.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"Success!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"3 7\") == \"1\\n\"\nassert solution(\"4 2\") == \"1\\n\"\nassert solution(\"5 10\") == \"1\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"5 100\") == \"0\\n\"\nassert solution(\"7 10\") == \"0\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 3) == \"1\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"2 5\") == \"1\\n\"\nassert solution(\"5 1\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"7 3\\n\") == b\"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"5 2\") == \"2\\n\"\nassert solution(\"6 3\") == \"1\\n\"\nassert solution(\"4 4\") == \"0\\n\"\nassert solution(\"100 1\") == \"Infinity\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3\\n') == '1\\n'\nprint('All test cases passed.')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"6 2\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('10 3') == '2'\nassert solution('5 10') == '1'\nassert solution('4 3') == '1'\nassert solution('10 7') == '2'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"111\", \"111 is the earliest ABC where Kurohashi can make his debut.\"\nassert solution(\"110\") == \"110\", \"110 is the earliest ABC where Kurohashi can make his debut.\"\nassert solution(\"101\") == \"101\", \"101 is the earliest ABC where Kurohashi can make his debut.\"\nassert solution(\"100\") == \"100\", \"100 is the earliest ABC where Kurohashi can make his debut.\"\nassert solution(\"011\") == \"011\", \"011 is the earliest ABC where Kurohashi can make his debut.\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\", \"Incorrect output\"\nassert solution(\"123\") == \"123\", \"Incorrect output\"\nassert solution(\"100\") == \"100\", \"Incorrect output\"\nassert solution(\"1\") == \"1\", \"Incorrect output\"",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"111\") == \"111\\n\", \"Input '111' is not valid.\"\nprint(\"111\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '111', 'Expected \"111\", got \"' + solution(stdin) + '\"'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"111\") == \"111\", \"Sample Input and Output do not match\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('111') == '111', \"Input is not in the expected format.\"\nassert 111 <= int(stdin.readline()) <= 999, \"N is not an integer within the given constraints.\"\nassert int(stdin.readline()) == int(stdin.readline()) == 1, \"The digits of x in base ten are not the same in each of the given bases.\"",
        "num_ids_2": 53,
        "num_ids_4": 91
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"The correct output should be: 5\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 3 6') == '10'\nassert solution('2 5 1') == '7'\nassert solution('2 10 5') == '15'\nassert solution('3 4 5') == '15'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"4 3 2\") == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Your code is incorrect. The minimum total cost required to complete all the task is not correct.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Incorrect solution\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 4 6') == '7'\nassert solution('3 5 7') == '9'\nassert solution('4 6 8') == '12'\nassert solution('5 7 9') == '15'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\"\n\nsolution(\"8\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"5\"\n\nprint(\"a = \", \"{8,4,2,1,4,2,1,4,2,1,.......}\")\nprint(\"a_5 =\", \"{8,4,2,1,4,2,1,4,2,1,.......}\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"Output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"50\") == \"5\"\nassert solution(\"100\") == \"5\"\nassert solution(\"150\") == \"5\"\nassert solution(\"200\") == \"5\"\nassert solution(\"250\") == \"5\"\nassert solution(\"300\") == \"5\"\nassert solution(\"350\") == \"5\"\nassert solution(\"400\") == \"5\"\nassert solution(\"450\") == \"5\"\nassert solution(\"500\") == \"5\"\nassert solution(\"550\") == \"5\"\nassert solution(\"600\") == \"5\"\nassert solution(\"650\") == \"5\"\nassert solution(\"700\") == \"5\"\nassert solution(\"750\") == \"5\"\nassert solution(\"800\") == \"5\"\nassert solution(\"850\") == \"5\"\nassert solution(\"900\") == \"5\"\nassert solution(\"950\") == \"5\"\nassert solution(\"1000\") == \"5\"\nassert solution(\"1050\") == \"5\"\nassert solution(\"1100\") == \"5\"\nassert solution(\"1150\") == \"5\"\nassert solution(\"1200\") == \"5\"\nassert solution(\"1250\") == \"5\"\nassert solution(\"1300\") == \"5\"\nassert solution(\"1350\") == \"5\"\nassert solution(\"1400\") == \"5\"\nassert solution(\"1450\") == \"5\"\nassert solution(\"1500\") == \"5\"\nassert solution(\"1550\") == \"5\"\nassert solution(\"1600\") == \"5\"\nassert solution(\"1650\") == \"5\"\nassert solution(\"1700\") == \"5\"\nassert solution(\"1750\") == \"5\"\nassert solution(\"1800\") == \"5\"\nassert solution(\"1850\") == \"5\"\nassert solution(\"1900\") == \"5\"\nassert solution(\"1950\") == \"5\"\nassert solution(\"2000\") == \"5\"\nassert solution(\"2050\") == \"5\"\nassert solution(\"2100\") == \"5\"\nassert solution(\"2150\") == \"5\"\nassert solution(\"2200\") == \"5\"\nassert solution(\"2250\") == \"5\"\nassert solution(\"2300\") == \"5\"\nassert solution(\"2350\") == \"5\"\nassert solution(\"2400\") == \"5\"\nassert solution(\"2450\") == \"5\"\nassert solution(\"2500\") == \"5\"\nassert solution(\"2550\") == \"5\"\nassert solution(\"2600\") == \"5\"\nassert solution(\"2650\") == \"5\"\nassert solution(\"2700\") == \"5\"\nassert solution(\"2750\") == \"5\"\nassert solution(\"2800\") == \"5\"\nassert solution(\"2850\") == \"5\"\nassert solution(\"2900\") == \"5\"\nassert solution(\"2950\") == \"5\"\nassert solution(\"3000\") == \"5\"\nassert solution(\"3050\") == \"5\"\nassert solution(\"3100\") == \"5\"\nassert solution(\"3150\") == \"5\"\nassert solution(\"3200\") == \"5\"\nassert solution(\"3250\") == \"5\"\nassert solution(\"3300\") == \"5\"\nassert solution(\"3350\") == \"5\"\nassert solution(\"3400\") == \"5\"\nassert solution(\"3450\") == \"5\"\nassert solution(\"3500\") == \"5\"\nassert solution(\"3550\") == \"5\"\nassert solution(\"3600\") == \"5\"\nassert solution(\"3650\") == \"5\"\nassert solution(\"3700\") == \"5\"\nassert solution(\"3750\") == \"5\"\nassert solution(\"3800\") == \"5\"\nassert solution(\"3850\") == \"5\"\nassert solution(\"3900\") == \"5\"\nassert solution(\"3950\") == \"5\"\nassert solution(\"4000\")",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8') == '5', \"The solution should be 5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"3\"\nassert solution(\"9\") == \"5\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"5 3 7 8\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"5 6 7 8\") == \"Yes\"\nassert solution(\"5 4 3 2\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\", \"Test failed for the given input.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\"\nassert solution(\"5 7 8 9\") == \"Yes\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"100 100 100 100\") == \"No\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 9 10 10\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"5 8 9 10\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"100 100 100 100\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"1 1 1 1\") == \"Yes\", \"Sample Output Incorrect\"\nassert solution(\"2 2 2 2\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"10 0 10 10\") == \"Yes\", \"Sample Output Incorrect\"\nassert solution(\"1 1 1 0\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"100 100 100 100 100\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"1 1 1 1 1\") == \"Yes\", \"Sample Output Incorrect\"\nassert solution(\"2 2 2 2 2\") == \"No\", \"Sample Input Incorrect\"\nassert solution(\"1 1 1 1 1\") == \"Yes\", \"Sample Output Incorrect\"\nassert solution(\"2 2 2 2 2 2\") == \"Yes\", \"Sample Output Incorrect\"\nassert solution(\"1 1 1 1 1 1\") == \"No\", \"Sample Input Incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\", \"Takahashi will win\"\nassert solution(\"11 9 10 10\") == \"Yes\", \"Aoki will win\"\nassert solution(\"10 9 10 9\") == \"No\", \"Takahashi will lose\"\nassert solution(\"10 9 9 10\") == \"Yes\", \"Aoki will lose\"\nassert solution(\"10 9 9 10\") == \"Yes\", \"Takahashi will win\"\n",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 9 10 10') == 'Yes', \"Takahashi and Aoki will have a battle using their monsters. The health and strength of Takahashi's monster are A and B, respectively, and those of Aoki's monster are C and D, respectively. The two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's,... The monsters keep attacking until the health of one monster becomes 0 or below. The person with the monster whose health becomes 0 or below loses, and the other person wins. If Takahashi will win, print Yes; if he will lose, print No.\"\nassert solution('5 4 3 2 1') == 'No', \"Takahashi and Aoki will have a battle using their monsters. The health and strength of Takahashi's monster are A and B, respectively, and those of Aoki's monster are C and D, respectively. The two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's,... The monsters keep attacking until the health of one monster becomes 0 or below. The person with the monster whose health becomes 0 or below loses, and the other person wins. If Takahashi will win, print Yes; if he will lose, print No.\"",
        "num_ids_2": 317,
        "num_ids_4": 317
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 9 10 10') == 'No'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"5 2 7 8\") == \"Yes\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5\\n'\nassert solution('2\\n10 2 5\\n6 3 4') == '10\\n'\nassert solution('3\\n10 2 5\\n6 3 4') == '5\\n'\nassert solution('1\\n10 2 5\\n6 3 4') == '10\\n'\nassert solution('2\\n10 2 5\\n6 3 4') == '5\\n'\nassert solution('3\\n10 2 5\\n6 3 4') == '10\\n'\nassert solution('4\\n10 2 5\\n6 3 4') == '15\\n'\nassert solution('1\\n10 2 5\\n6 3 4') == '10\\n'\nassert solution('1\\n10 2 5\\n6 3 4') == '15\\n'",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5\\n'\nassert solution('2\\n10 2 5\\n6 3 4') == '3\\n'\nassert solution('3\\n10 2 5\\n6 3 4') == '3\\n'\nassert solution('2\\n10 2 5\\n6 3 4') == '2\\n'\nassert solution('4\\n10 2 5\\n6 3 4') == '4\\n'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4\\n') == '5\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'Output: 5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\\n\", \"The output is not as expected.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"5\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"2\\n10 2 5\\n6 3 4\") == \"10\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"4\\n10 2 5\\n6 3 4\") == \"15\\n\"\nassert solution(\"2\\n10 2 5\\n6 3 4\") == \"10\\n\"\nassert solution(\"4\\n10 2 5\\n6 3 4\") == \"15\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"4\\n2 1\\n3 5\") == \"5\\n\"\nassert solution(\"5\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"6\\n7 4\\n8 9\") == \"2\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '#.#\\n.#.#\\n.#.#\\n.###\\n'\nassert solution('4 4\\n#.\\n...#\\n#.\\n..#') == '#.#\\n..##\\n...#\\n...#'\nassert solution('5 5\\n..#\\n...#\\n.##\\n#..#\\n#.#.\\n###..\\n...') == '..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\n..#.#\\",
        "num_ids_2": 76,
        "num_ids_4": 1027
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n##.#\n....\n##.#\n.#.#\n\"\"\") == \"\"\"\n###\n###\n.##\n\nThe second row and the third column in the original grid will be removed.\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\nprint(\"All tests pass!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\\n\"\nassert solution(\"4 5\\n#..#\\n##..#\\n...#\\n...#\\n.#..#\\n...\") == \"###\\n###\\n...#\\n...#\\n...#\\n...\\n\"\nassert solution(\"4 4\\n#..#\\n##..#\\n...#\\n...#\\n.#..#\\n...\") == \"###\\n###\\n...#\\n...#\\n...#\\n...\\n\"\nassert solution(\"4 5\\n#..#\\n##..#\\n...#\\n...#\\n.#..#\\n...\") == \"###\\n###\\n...#\\n...#\\n...#\\n...\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 182
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n..#\\n...#\\n...#\\n...#\\n\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4 4\\n#.#\\n....\\n##.#\\n.#.#\") == \"\"\"\n###\n###\n.##\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '6.28318530717958623200\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\"\nassert solution(\"100\\n\") == \"3.14159265358979323846\\n\"\nassert solution(\"1000\\n\") == \"2.71828182845904523536\\n\"\nassert solution(\"10000\\n\") == \"3.14159265358979323846\\n\"\nassert solution(\"100000\\n\") == \"3.14159265358979323846\\n\"\nassert solution(\"1000000\\n\") == \"3.14159265358979323846\\n\"\nassert solution(\"10000000\\n\") == \"3.14159265358979323846\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 149
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Test Case 1 failed\"\nassert solution(\"2\") == \"3.141592653589793116000000000000000\", \"Test Case 2 failed\"\nassert solution(\"3\") == \"1.5707963267948966192313216916397514420985\", \"Test Case 3 failed\"\nassert solution(\"4\") == \"0.7853981633974483096156608458198757210492\", \"Test Case 4 failed\"\nassert solution(\"5\") == \"0.529598022847436610252423608507459610159\", \"Test Case 5 failed\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 89,
        "num_ids_4": 205
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"6.28318530717958623200\"\nassert solution(\"3\") == \"6.28318530717958623200\"\nassert solution(\"4\") == \"6.28318530717958623200\"\nassert solution(\"5\") == \"6.28318530717958623200\"\nassert solution(\"6\") == \"6.28318530717958623200\"\nassert solution(\"7\") == \"6.28318530717958623200\"\nassert solution(\"8\") == \"6.28318530717958623200\"\nassert solution(\"9\") == \"6.28318530717958623200\"\nassert solution(\"10\") == \"6.28318530717958623200\"\nassert solution(\"11\") == \"6.28318530717958623200\"\nassert solution(\"12\") == \"6.28318530717958623200\"\nassert solution(\"13\") == \"6.28318530717958623200\"\nassert solution(\"14\") == \"6.28318530717958623200\"\nassert solution(\"15\") == \"6.28318530717958623200\"\nassert solution(\"16\") == \"6.28318530717958623200\"\nassert solution(\"17\") == \"6.28318530717958623200\"\nassert solution(\"18\") == \"6.28318530717958623200\"\nassert solution(\"19\") == \"6.28318530717958623200\"\nassert solution(\"20\") == \"6.28318530717958623200\"\nassert solution(\"21\") == \"6.28318530717958623200\"\nassert solution(\"22\") == \"6.28318530717958623200\"\nassert solution(\"23\") == \"6.28318530717958623200\"\nassert solution(\"24\") == \"6.28318530717958623200\"\nassert solution(\"25\") == \"6.28318530717958623200\"\nassert solution(\"26\") == \"6.28318530717958623200\"\nassert solution(\"27\") == \"6.28318530717958623200\"\nassert solution(\"28\") == \"6.28318530717958623200\"\nassert solution(\"29\") == \"6.28318530717958623200\"\nassert solution(\"30\") == \"6.28318530717958623200\"\nassert solution(\"31\") == \"6.28318530717958623200\"\nassert solution(\"32\") == \"6.28318530717958623200\"\nassert solution(\"33\") == \"6.2",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\"\nassert solution(\"5\\n\") == \"12.28323779559879364000\\n\"\nassert solution(\"0\\n\") == \"0.0\\n\"\nassert solution(\"-1\\n\") == \"0.0\\n\"\nassert solution(\"2000\\n\") == \"0.0\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 103
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\\n\"  # correct output\n\nassert abs(solution(\"1\") - \"6.28318530717958623200\") <= 10**-2  # relative error <= 10^{-2}\n\nassert solution(\"0\") == \"0\\n\"  # correct output\n\nassert abs(solution(\"0\") - \"0\") <= 10**-2  # relative error <= 10^{-2}\n\nassert solution(\"-1\") == \"Error: -1 is not a valid input.\\n\"  # invalid input",
        "num_ids_2": 88,
        "num_ids_4": 134
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6.28318530717958623200\", \"The output must be 6.28318530717958623200.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\", \"Test case 1 failed.\"\nassert solution(\"2\\n\") == \"12.56637061435917246400\\n\", \"Test case 2 failed.\"\nassert solution(\"3\\n\") == \"25.26794853069436492800\\n\", \"Test case 3 failed.\"\nassert solution(\"4\\n\") == \"49.15473980830327835000\\n\", \"Test case 4 failed.\"\nassert solution(\"5\\n\") == \"85.39767441871834492000\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 85,
        "num_ids_4": 171
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\"\nassert solution(\"3\\n\") == \"6.28318530717958623200\"\nassert solution(\"4\\n\") == \"6.28318530717958623200\"\nassert solution(\"5\\n\") == \"6.28318530717958623200\"\nassert solution(\"6\\n\") == \"6.28318530717958623200\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\n\nassert abs(solution(\"1\") - 6.28318530717958623200) <= 1e-2\n\nassert abs(solution(\"5\") - 6.28318530717958623200) <= 1e-2",
        "num_ids_2": 70,
        "num_ids_4": 109
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'No'\nassert solution('ABCD') == 'No'",
        "num_ids_2": 31,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"AABA\") == \"Yes\", \"Test case 2 failed\"\nassert solution(\"AAA\") == \"No\", \"Test case 3 failed\"\nassert solution(\"BBAA\") == \"No\", \"Test case 4 failed\"\nassert solution(\"A\") == \"No\", \"Test case 5 failed\"\nassert solution(\"\") == \"No\", \"Test case 6 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Incorrect output for ASSA.\"\nassert solution(\"Aa\") == \"No\", \"Incorrect output for Aa.\"\nassert solution(\"abc\") == \"No\", \"Incorrect output for abc.\"\nassert solution(\"abcd\") == \"Yes\", \"Incorrect output for abcd.\"\nassert solution(\"abcb\") == \"Yes\", \"Incorrect output for abcb.\"\nassert solution(\"abcde\") == \"No\", \"Incorrect output for abcde.\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"AAAABBC\") == \"Yes\"\nassert solution(\"ABBC\") == \"No\"\nassert solution(\"ABAB\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAAS\") == \"No\"\nassert solution(\"ABC\") == \"No\"\nassert solution(\"ABCD\") == \"Yes\"\nassert solution(\"ABCD\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAS\") == \"No\"\nassert solution(\"AAABBB\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDE\") == \"No\"\nassert solution(\"AEIOU\") == \"No\"\nassert solution(\"FGHIJKLMNOPQRSTUVWXYZ\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ACE\") == \"No\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"AB\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"AASS\") == \"Yes\", \"Test case 2 failed\"\nassert solution(\"AAAAB\") == \"Yes\", \"Test case 3 failed\"\nassert solution(\"AAAABB\") == \"No\", \"Test case 4 failed\"\nassert solution(\"ABA\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAAABBB\") == \"No\"\nassert solution(\"Abc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"The largest number among A + B, A - B, and A \\times B is -10.\\n\"\nassert solution(input()) == \"The largest number among A + B, A - B, and A \\times B is -16.\\n\"\nassert solution(input()) == \"The largest number among A + B, A - B, and A \\times B is -39.\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 -13 12\") == \"-10\"\nassert solution(\"-13 3 12\") == \"-10\"\nassert solution(\"-13 3 -12\") == \"-16\"\nassert solution(\"-13 12 3\") == \"-16\"\nassert solution(\"3 -13 -12\") == \"-16\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A B\") == \"A B\"\n\nsolution(\"5 2\") == \"A B\"\nsolution(\"-2 3\") == \"-13\"\nsolution(\"5 -2\") == \"-13\"\nsolution(\"7 8\") == \"A B\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"-13 3\") == \"Print the largest number among A + B, A - B, and A \\times B.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-13 3\") == \"-10\", \"The largest number among A + B = -10, A - B = -16, and A \\times B = -39 is -10.\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"-10\\n\"\nassert solution(\"-13 3\") == \"-10\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-13 3\") == \"-10\\n\", \"Test Case 1 failed.\"\nassert solution(\"-4 -5\") == \"-15\\n\", \"Test Case 2 failed.\"\nassert solution(\"10 0\") == \"10\\n\", \"Test Case 3 failed.\"\nassert solution(\"12 16\") == \"10\\n\", \"Test Case 4 failed.\"\nassert solution(\"1 1\") == \"1\\n\", \"Test Case 5 failed.\"",
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \"-10\", \"Test Case 1\"\nassert solution(\"-13 3\") == \"-10\", \"Test Case 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == \"-10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"\nassert solution(\"3\\n6 5 6 8\") == \"2\\n\"\nassert solution(\"2\\n6 5 6 8\") == \"1\\n\"\nassert solution(\"1\\n6 5 6 8\") == \"0\\n\"\nassert solution(\"0\\n6 5 6 8\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"4\\n6 5 6 10\") == \"1\"\nassert solution(\"4\\n6 7 6 8\") == \"2\"\nassert solution(\"4\\n6 7 8 8\") == \"0\"\nassert solution(\"4\\n6 7 9 8\") == \"1\"\nassert solution(\"4\\n6 8 7 8\") == \"3\"\nassert solution(\"4\\n6 8 9 8\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n7 8 9\") == \"2\"\nassert solution(\"2\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1 2 2 2\") == \"2\"\nassert solution(\"10\\n10 10 10 10\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('1\\n6 5 6 8') == '1'\nassert solution('2\\n6 5 6 8') == '2'\nassert solution('3\\n6 5 6 8') == '3'\nassert solution('4\\n6 5 6 8') == '3'\nassert solution('5\\n6 5 6 8') == '4'\nassert solution('6\\n6 5 6 8') == '4'\nassert solution('7\\n6 5 6 8') == '5'\nassert solution('8\\n6 5 6 8') == '5'\nassert solution('9\\n6 5 6 8') == '5'\nassert solution('10\\n6 5 6 8') == '6'\nassert solution('11\\n6 5 6 8') == '6'\nassert solution('12\\n6 5 6 8') == '6'\nassert solution('13\\n6 5 6 8') == '6'\nassert solution('14\\n6 5 6 8') == '6'\nassert solution('15\\n6 5 6 8') == '6'\nassert solution('16\\n6 5 6 8') == '6'\nassert solution('17\\n6 5 6 8') == '6'\nassert solution('18\\n6 5 6 8') == '6'\nassert solution('19\\n6 5 6 8') == '6'\nassert solution('20\\n6 5 6 8') == '6'\nassert solution('21\\n6 5 6 8') == '6'\nassert solution('22\\n6 5 6 8') == '6'\nassert solution('23\\n6 5 6 8') == '6'\nassert solution('24\\n6 5 6 8') == '6'\nassert solution('25\\n6 5 6 8') == '6'\nassert solution('26\\n6 5 6 8') == '6'\nassert solution('27\\n6 5 6 8') == '6'\nassert solution('28\\n6 5 6 8') == '6'\nassert solution('29\\n6 5 6 8') == '6'\nassert solution('30\\n6 5 6 8') == '6'\nassert solution('31\\n6 5 6 8') == '6'\nassert solution('32\\n6 5 6 8') == '6'\nassert solution('33\\n6 5 6 8') == '6'\nassert solution('34\\n6 5 6 8') == '6'\nassert solution('35\\n6 5 6 8') == '6'\nassert solution('36\\n6 5 6 8') == '6'\nassert solution('37\\n6 5 6 8') == '6'\nassert solution('38\\n6 5 6 8') == '6'\nassert solution('39\\n6 5 6 8') == '6'\nassert solution('40\\n6 5 6 8') == '6'\nassert solution('41\\n6 5 6 8') == '6'\nassert solution('42\\n6 5 6 8') == '6'\nassert solution('43\\n6 5 6 8') == '6'\nassert solution('44\\n6 5 6 8') == '6'\nassert solution('45\\n6 5 6 8') == '6'\nassert solution('46\\n6 5 6 8') == '6'\nassert solution('47\\n6 5 6 8') == '6'\nassert solution('48\\n6 5 6 8') == '6'\nassert solution('49\\n6 5 6 8') == '6'\nassert solution('50\\n6 5 6 8') == '6'\nassert solution('51\\n6 5 6 8') ==",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\", \"Solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input and Output are not matched.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 1 2 3 4\") == 2\nassert solution(\"4 1 1 1\") == 4\nassert solution(\"5 1 2 1 2 1\") == 3",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1",
        "num_ids_2": 64,
        "num_ids_4": 119
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'\nprint('All tests passed!')",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\", \"Expected result: 1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n, actual result: {}\".format(solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\")))\n",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328', \"Testcase 1 failed\"\nassert solution(input()) == '1\\n1\\n1\\n1\\n1\\n1\\n', \"Testcase 2 failed\"\nassert solution(input()) == '1\\n2\\n1\\n4\\n7\\n4\\n333333333\\n333333328', \"Testcase 3 failed\"\nassert solution(input()) == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n', \"Testcase 4 failed\"\nassert solution(input()) == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n', \"Testcase 5 failed\"",
        "num_ids_2": 85,
        "num_ids_4": 176
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"3\\n5\\n7\\n9\\n11\") == \"2\"\nassert solution(\"4\\n8\\n12\\n16\\n20\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"2\\n1\\n2\") == \"1\"\nassert solution(\"2\\n2\\n1\") == \"2\"\nassert solution(\"2\\n3\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n2\") == \"2\"\nassert solution(\"1\\n3\\n3\") == \"3\"\nassert solution(\"1\\n4\\n4\") == \"4\"\nassert solution(\"1\\n5\\n5\") == \"5\"\nassert solution(\"1\\n6\\n6\") == \"6\"\nassert solution(\"1\\n7\\n7\") == \"7\"\nassert solution(\"1\\n8\\n8\") == \"8\"\nassert solution(\"1\\n9\\n9\") == \"9\"\nassert solution(\"1\\n10\\n10\") == \"10\"\nassert solution(\"1\\n11\\n11\") == \"11\"\nassert solution(\"1\\n12\\n12\") == \"12\"\nassert solution(\"1\\n13\\n13\") == \"13\"\nassert solution(\"1\\n14\\n14\") == \"14\"\nassert solution(\"1\\n15\\n15\") == \"15\"\nassert solution(\"1\\n16\\n16\") == \"16\"\nassert solution(\"1\\n17\\n17\") == \"17\"\nassert solution(\"1\\n18\\n18\") == \"18\"\nassert solution(\"1\\n19\\n19\") == \"19\"\nassert solution(\"1\\n20\\n20\") == \"20\"\nassert solution(\"1\\n21\\n21\") == \"21\"\nassert solution(\"1\\n22\\n22\") == \"22\"\nassert solution(\"1\\n23\\n23\") == \"23\"\nassert solution(\"1\\n24\\n24\") == \"24\"\nassert solution(\"1\\n25\\n25\") == \"25\"\nassert solution(\"1\\n26\\n26\") == \"26\"\nassert solution(\"1\\n27\\n27\") == \"27\"\nassert solution(\"1\\n28\\n28\") == \"28\"\nassert solution(\"1\\n29\\n29\") == \"29\"\nassert solution(\"1\\n30\\n30\") == \"30\"\nassert solution(\"1\\n31\\n31\") == \"31\"\nassert solution(\"1\\n32\\n32\") == \"32\"\nassert solution(\"1\\n33\\n33\") == \"33\"\nassert solution(\"1\\n34\\n34\") == \"34\"\nassert solution(\"1\\n35\\n35\") == \"35\"\nassert solution(\"1\\n36\\n36\") == \"36\"\nassert solution(\"1\\n37\\n37\") == \"37\"\nassert solution(\"1\\n38\\n38\") == \"38\"\nassert solution(\"1\\n39\\n39\") == \"39\"\nassert solution(\"1\\n40\\n40\") == \"40\"\nassert solution(\"1\\n41\\n41\") == \"41\"\nassert solution(\"1\\n42\\n42\") == \"42\"",
        "num_ids_2": 105,
        "num_ids_4": 153
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50', \"The output should be 50 but instead it is {}.\".format(solution('512 4'))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '50'\nassert solution(input()) == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"512 4\") == \"50\", \"Test Case 1 Failed\"\nassert solution(\"1000000000 9\") == \"1\", \"Test Case 2 Failed\"\nassert solution(\"5 3\") == \"2\", \"Test Case 3 Failed\"\nassert solution(\"1000000000 0\") == \"1000000000\", \"Test Case 4 Failed\"\nassert solution(\"1000000000 1\") == \"1000000000\", \"Test Case 5 Failed\"",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('512 4') == 50\nassert solution('1000000000 9') == 1",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\", \"1st example is not correct\"\nassert solution(\"1000000000 9\") == \"1\", \"2nd example is not correct\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\", \"Test case 1 failed\"\nassert solution(\"1000000000 9\") == \"1\", \"Test case 2 failed\"\n\nprint(\"All test cases passed\")\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Input and Output don't match.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n4 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n4 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution() for input {input()} failed\\nExpected output: {output()}\\nGot: {solution(input())}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n7\\n1 2 2 2 2 3 2\") == \"5\\n2 1 1 2 3\\n2\\n5 5 \"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == 5\nassert solution('5\\n3 7 5 1 5') == 2\nassert solution('3\\n5 1 4') == 2\nassert solution('7\\n2 2 3 2 1 2 2') == 7\nassert solution('') == 0",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n7\\n4 3 5 1 2 2 1\\n\\nOutput\\n5\\n2 1 1 2 3\\n\\nInput\\n5\\n3 7 5 1 5\\n\\nOutput\\n2\\n5 5\\n\\nInput\\n3\\n5 1 4\\n\\nOutput\\n2\\n4 5\\n\\nInput\\n7\\n2 2 3 2 1 2 2\\n\\nOutput\\n7\\n1 2 2 2 2 3 2\") == \"Output\\n5\\n2 1 1 2 3\\n\\nInput\\n5\\n3 7 5 1 5\\n\\nOutput\\n2\\n5 5\\n\\nInput\\n3\\n5 1 4\\n\\nOutput\\n2\\n4 5\\n\\nInput\\n7\\n2 2 3 2 1 2 2\\n\\nOutput\\n7\\n1 2 2 2 2 3 2\"\n",
        "num_ids_2": 273,
        "num_ids_4": 273
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5 \"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5 \"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\nassert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"7\\n2 2 2 2 2 2 2\") == \"7\\n2 1 2 3 2 2 3\"",
        "num_ids_2": 48,
        "num_ids_4": 124
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n6 16\\n12 8\\n9 4\\n3 1\\n7 5\\n\") == \"3\"",
        "num_ids_2": 72,
        "num_ids_4": 135
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\n\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\n\nassert solution(\"4 16\\n10 16\\n7 4\\n3 1\\n5 4\\n\") == \"3\"",
        "num_ids_2": 72,
        "num_ids_4": 109
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 21\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 16\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 21\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 16\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"-1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == # Solution goes here",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcde\") == \"abcde\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'tleelte', \"Incorrect output for solution.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\\nwerty\\nvvvvv\\nabcde\"\nassert solution(\"10 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"abcde\"\nassert solution(\"15 7 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"qwerty\"\nassert solution(\"10 6 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"abcde\"\nassert solution(\"10 6 1\\n6 6 1\\n5 2 2\\n\") == \"abcde\"",
        "num_ids_2": 89,
        "num_ids_4": 167
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    7 5 3\n    6 1 1\n    6 6 1\n    5 2 2\n    \"\"\"\n) == \"tleelte\"\n\nassert solution(\n    \"\"\"\n    4\n    7 5 3\n    6 1 1\n    6 6 1\n    5 2 2\n    6 2 1\n    \"\"\"\n) == \"qwerty\"\n\nassert solution(\n    \"\"\"\n    4\n    7 5 3\n    6 1 1\n    6 6 1\n    5 2 2\n    6 2 1\n    7 2 1\n    \"\"\"\n) == \"vvvvvv\"\n\nassert solution(\n    \"\"\"\n    4\n    7 5 3\n    6 1 1\n    6 6 1\n    5 2 2\n    6 2 1\n    7 2 1\n    8 2 1\n    \"\"\"\n) == \"abcde\"\n\nassert solution(\n    \"\"\"\n    4\n    7 5 3\n    6 1 1\n    6 6 1\n    5 2 2\n    6 2 1\n    7 2 1\n    8 2 1\n    9 2 1\n    \"\"\"\n) == \"abcde\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"3\\n3 4 1\\n5 4 2\") == \"abcde\"\nassert solution(\"4\\n5 2 1\\n3 3 1\") == \"vvvvvv\"",
        "num_ids_2": 65,
        "num_ids_4": 91
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"tleelte\\nqwerty\\nvvvvvv\\nabcde\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example_input) == example_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"15 9 30\") == \"16\"\nassert solution(\"10 15 30\") == \"20\"\nassert solution(\"5 15 60\") == \"1440\"\nassert solution(\"50 100 1000\") == \"90\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Expected Output: 12\\n\"\nassert solution(\"10 4 6\") == \"8\\n\", \"Expected Output: 8\\n\"\nassert solution(\"25 5 30\") == \"120\\n\", \"Expected Output: 120\\n\"\nassert solution(\"2 3 4\") == \"2\\n\", \"Expected Output: 2\\n\"\nassert solution(\"5 6 7\") == \"4\\n\", \"Expected Output: 4\\n\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Expected Output: 1\\n\"\nassert solution(\"10 20 30\") == \"0\\n\", \"Expected Output: 0\\n\"\nassert solution(\"5 10 20\") == \"140\\n\", \"Expected Output: 140\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 12 6') == '12'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Testcase 1 failed\"\nassert solution(\"10 2 4\") == \"6\\n\", \"Testcase 2 failed\"\nassert solution(\"1000 1000 1000\") == \"3153600\\n\", \"Testcase 3 failed\"\nassert solution(\"2 5 10\") == \"10\\n\", \"Testcase 4 failed\"\nassert solution(\"3 4 2\") == \"5\\n\", \"Testcase 5 failed\"\n",
        "num_ids_2": 50,
        "num_ids_4": 113
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 12",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"10 5 2\") == \"15\"\nassert solution(\"15 15 15\") == \"20\"",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 12 6') == '12\\n'\nassert solution('10 3 5') == '5\\n'\nassert solution('2 5 3') == '1\\n'\nassert solution('20 20 20') == '20\\n'\nassert solution('5 3 20') == '15\\n'\nassert solution('10 5 10') == '10\\n'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"2\\n\"\nassert solution(\"9\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(8) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(8)) == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Invalid Input\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"2\"\nassert solution(\"9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"2\"",
        "num_ids_2": 406,
        "num_ids_4": 406
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1 3') == '3'\nprint('All tests passed successfully.')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'1 3\\n') == '3\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"1 6\") == \"6\"\nassert solution(\"10 5\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\nassert solution(\"2 4\") == \"5\\n\"\nassert solution(\"3 5\") == \"6\\n\"\nassert solution(\"4 6\") == \"8\\n\"\nassert solution(\"5 7\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\nassert solution(\"4 2\") == \"2\\n\"\nassert solution(\"10 1\") == \"1\\n\"\nassert solution(\"5 6\") == \"6\\n\"\nassert solution(\"1 1\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\n\nassert solution(\"5 5\") == \"5\\n\"\n\nassert solution(\"1 10\") == \"5\\n\"\n\nassert solution(\"1 1\") == \"0\\n\"\n\nassert solution(\"3 4\") == \"0\\n\"\n\nassert solution(\"5 0\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Output must be 3\"\nassert solution(\"10 5\") == \"6\\n\", \"Output must be 6\"\nassert solution(\"5 10\") == \"6\\n\", \"Output must be 6\"\nassert solution(\"1 0\") == \"0\\n\", \"Output must be 0\"\nassert solution(\"0 1\") == \"0\\n\", \"Output must be 0\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test case 1\"\nassert solution(\"2 4\") == \"2\\n\", \"Test case 2\"\nassert solution(\"3 6\") == \"6\\n\", \"Test case 3\"\nassert solution(\"1 2\") == \"2\\n\", \"Test case 4\"\nassert solution(\"4 5\") == \"5\\n\", \"Test case 5\"\nassert solution(\"1 1\") == \"1\\n\", \"Test case 6\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 12') == '16'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\", \"The code is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\"\n\nassert solution(\"1 3\") == \"3\"\n\nassert solution(\"2 5\") == \"7\"\n\nassert solution(\"4 7\") == \"3\"\n\nassert solution(\"5 10\") == \"20\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\", \"Output should be 16\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\", \"The expected output is not correct\"\nassert solution(\"2 6\") == \"6\", \"The expected output is not correct\"\nassert solution(\"1 5\") == \"5\", \"The expected output is not correct\"\nassert solution(\"10 20\") == \"30\", \"The expected output is not correct\"\nassert solution(\"10 0\") == \"0\", \"The expected output is not correct\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 12') == '16'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 12') == '16\\n'\nassert solution('10 8') == '8\\n'\nassert solution('2 5') == '5\\n'\nassert solution('4 7') == '2\\n'\nassert solution('9 11') == '12\\n'",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"chokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\\nchokudaiz\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\nassert solution(\"bchokudai\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\\n7\"\nassert solution(\"5 7\") == \"IMPOSSIBLE\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 69
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\") == \"9\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\\n\"\nassert solution(\"5 10\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3 5\") == \"IMPOSSIBLE\\n\"\nassert solution(\"8 8\") == \"IMPOSSIBLE\\n\"\nassert solution(\"0 0\") == \"IMPOSSIBLE\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 16') == '9\\n'\nassert solution('10 10') == 'IMPOSSIBLE\\n'\nassert solution('1 2') == 'IMPOSSIBLE\\n'\nassert solution('1 1') == 'IMPOSSIBLE\\n'\nassert solution('5 5') == 'IMPOSSIBLE\\n'",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 16\") == \"9\"\nassert solution(stdin=\"3 17\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"4 18\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"5 19\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"6 20\") == \"IMPOSSIBLE\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('3 4') == 'IMPOSSIBLE'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\\n7\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(117) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(117) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('456') == 'Yes'\nassert solution('789') == 'No'\nassert solution('1000') == 'No'\nassert solution('9999') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"111\") == \"Yes\"\nassert solution(\"127\") == \"No\"\nassert solution(\"11711\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"118\") == \"No\"\nassert solution(\"119\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"124\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(117) == 'Yes', \"Test 1: Input 117 should contain the digit 7.\"\nassert solution(98) == 'No', \"Test 2: Input 98 should not contain the digit 7.\"\nassert solution(123) == 'No', \"Test 3: Input 123 should not contain the digit 7.\"\nassert solution(777) == 'Yes', \"Test 4: Input 777 should contain the digit 7.\"\nassert solution(0) == 'No', \"Test 5: Input 0 should not contain the digit 7.\"",
        "num_ids_2": 57,
        "num_ids_4": 116
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(12) == 'Yes'\n\nHere, we are checking if the sum of the digits in the decimal notation of N divides N. If it does, we print Yes. Otherwise, it prints No.",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes', \"Test case failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12) == 'Yes', \"Test case failed\"\nassert solution(15) == 'Yes', \"Test case failed\"\nassert solution(100) == 'Yes', \"Test case failed\"\nassert solution(1000000000) == 'Yes', \"Test case failed\"\nassert solution(1000000001) == 'No', \"Test case failed\"",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"91\") == \"No\"\nassert solution(\"1000\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes', \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"0 0 1 0\") == \"-1 1 -1 0\\n\"\nassert solution(\"1 1 1 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"0 1 0 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"1 0 1 0\") == \"-1 1 -1 0\\n\"\nassert solution(\"0 1 1 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"1 1 0 0\") == \"-1 1 -1 0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 1 1\") == \"-1 1 -1 0\"\nassert solution(\"0 1 1 1\") == \"-1 1 -1 0\"\nassert solution(\"1 0 0 0\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 0\") == \"-1 1 -1 0\"",
        "num_ids_2": 28,
        "num_ids_4": 72
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Test 1\"\nassert solution(\"10 5 7 9\") == \"1 1 1 1\", \"Test 2\"\nassert solution(\"0 0 0 0\") == \"0 0 0 0\", \"Test 3\"\nassert solution(\"2 2 1 1\") == \"1 1 1 1\", \"Test 4\"\nassert solution(\"2 2 0 0\") == \"0 0 0 0\", \"Test 5\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"0 -1 1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n0 0 0 1\n\"\"\") == \"\"\"\n-1 1 -1 0\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 0 0 1\\n-1 1 -1 0\", \"The output is incorrect.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0', 'Test Case 1'\n\nsolution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\"\nassert solution(\"purple yellow\\n6 3\\ngreen\\n\") == \"6 3\"\nassert solution(\"blue orange\\n5 1\\nred\\n\") == \"5 1\"\nassert solution(\"orange red\\n2 3\\nred\\n\") == \"2 3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"green yellow\\n4 2\\nred\\nblue\\n\") == \"8 4\\n\"\nassert solution(\"red blue\\n1 5\\nred\\n\") == \"2 5\\n\"\nassert solution(\"red blue\\n2 1\\nred\\n\") == \"2 1\\n\"\nassert solution(\"red blue\\n3 5\\nred\\nblue\\n\") == \"2 5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 104
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"red blue\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.Now we have two balls with the string S and four balls with the string T.\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"purple yellow\\n2 5\\ngreen\\n\") == \"4 5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\"\nassert solution(\"apple\\nbanana\\napple\\n\") == \"4 2\\nTakahashi chose a ball with banana written on it and threw it away. Now we have two balls with the string banana and two balls with the string apple.\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.Now we have two balls with the string S and four balls with the string T.\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\\n\"\nassert solution(\"elvis orange\\n1 2\\nblue\") == \"2 4\\n\"\nassert solution(\"whiskers yellow\\n4 6\\npink\") == \"1 2\\n\"\nassert solution(\"blueberry plum\\n3 6\\npink\") == \"2 4\\n\"\nassert solution(\"quince apple\\n4 8\\norange\") == \"2 4\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nbcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"6\\nabcabc\\n\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\nabc\") == \"No\"\nassert solution(\"7\\nabcabc\") == \"No\"\nassert solution(\"7\\nabc\") == \"No\"\nassert solution(\"8\\nabcabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Expected Yes, got: {}\".format(solution(input()))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"5\\nxyz\") == \"No\"\nassert solution(\"10\\nabcdefghi\") == \"No\"\nassert solution(\"10\\naaaaaa\") == \"Yes\"\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"5\\nabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\nabcd\") == \"No\"\nassert solution(\"6\\nabab\") == \"No\"\nassert solution(\"6\\naaaa\") == \"No\"\nassert solution(\"6\\naaaaa\") == \"No\"\nassert solution(\"6\\nababab\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"5 1 0 0\") == \"1.000000 1\"\nassert solution(\"4 3 1 2\") == \"2.000000 0\"\nassert solution(\"6 5 1 2\") == \"2.000000 0\"\nassert solution(\"0 0 0 0\") == \"0.000000 0\"\nassert solution(\"2 3 4 4\") == \"0.000000 0\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3.000000 0\", \"Incorrect output.\"\nassert solution(input()) == \"3.000000 1\", \"Incorrect output.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0\\n', \"The area printed is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\nassert solution(\"3 4 1 2\") == \"3.000000 0\\n\"\nassert solution(\"1 1 1 1\") == \"3.000000 0\\n\"\nassert solution(\"1 2 2 3\") == \"3.000000 0\\n\"\nassert solution(\"1 3 3 4\") == \"3.000000 0\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 87
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\nassert solution(\"1 2 3 4\") == \"3.000000 0\\n\"\nassert solution(\"0 0 0 0\") == \"0.000000 0\\n\"\nassert solution(\"10 5 0 0\") == \"0.000000 0\\n\"\nassert solution(\"0 10 0 0\") == \"0.000000 0\\n\"\nassert solution(\"1 1 1 1\") == \"1.000000 0\\n\"\nassert solution(\"10 10 10 10\") == \"1.000000 0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"Four\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Four'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"7\\nA Y P P G W\\nB B P P W W\") == \"Three\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"3\\nP W Y G G\") == \"Three\"\nassert solution(\"1\\nW W\") == \"Three\"\nassert solution(\"1\\nP\") == \"Four\"\nassert solution(\"1\\nW\") == \"Three\"\nassert solution(\"1\\nP G W Y\") == \"Three\"\nassert solution(\"5\\nP W Y P W W G\") == \"Four\"",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6\n    G W Y P Y W\n    \"\"\"\n) == \"Four\"\nassert solution(\n    \"\"\"\n    12\n    B R Y G B Y B R\n    \"\"\"\n) == \"Four\"\nassert solution(\n    \"\"\"\n    10\n    G G G G G G G G\n    \"\"\"\n) == \"Three\"\nassert solution(\n    \"\"\"\n    11\n    G R G R G R G R\n    \"\"\"\n) == \"Three\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\", \"Incorrect output\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str: pass\\n\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3 2\\n2 3 1 3 4 2\\n') == 6\nassert solution('5 3 3\\n1 2 4 2 3\\n') == 2\nassert solution('5 5 6\\n1 2 6 10 3\\n') == 2",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\\n\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\\n\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n4 8 2 6 2\\n4 5 4 1 3\\n') == '7'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\"\n\nprint(solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\"))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2 6 2\") == \"7\"\nassert solution(\"4 5 4 1 3\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"Solution to the problem is: 'def solution(stdin: str) -> str:\\n    pass'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed: Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Your solution {solution} is not correct. Please check the code provided, and ensure that the input data is correct.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 2, 4, 5, 10]) == \"1 1 3 5 9\"\nassert solution([10000, 10, 50605065, 1, 5, 89, 5, 999999999, 60506056, 1000000000]) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 157,
        "num_ids_4": 157
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '1 1 3 5 9\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 1 3 5 9\", \"The output should be [1, 1, 3, 5, 9], but it is actually {}.\".format(solution(stdin))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 4 5 10\\n\\n10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n') == '9 9 50605065 1 5 89 5 999999999 60506055 999999999\\n'\n\nfrom typing import List",
        "num_ids_2": 378,
        "num_ids_4": 378
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == ['1', '1', '3', '5', '9']\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n1\"\nassert solution(input()) == \"Output\\n2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\\n\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == 1\n\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == 2",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == 1\n\nassert solution(\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\"\"\") == 2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"The solution should be {expected_output}, but it is {solution}.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == 1\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == 2",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 4\n1 2\n3 4\n5 4\n3 5\"\"\") == \"1\"\n\nassert solution(\"\"\"17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\"\"\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\\n\"  # Expected output: 1\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\\n\"  # Expected output: 2",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\\n\"\n",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1\\n'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4\\n'\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == '0\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\n\nprint(\"All test cases pass!\")",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 0, 0, 1, 2), \"Expected 1, got %d\" % solution(1, 0, 0, 1, 2)\nassert solution(1, 0, 0, 1, 2), \"Expected 1, got %d\" % solution(1, 0, 0, 1, 2)\nassert solution(5, 1, 0, 0, 2), \"Expected 1, got %d\" % solution(5, 1, 0, 0, 2)\nassert solution(5, 1, 0, 0, 2), \"Expected 1, got %d\" % solution(5, 1, 0, 0, 2)\nassert solution(3, 1, 1, 2), \"Expected 0, got %d\" % solution(3, 1, 1, 2)\nassert solution(3, 1, 1, 2), \"Expected 0, got %d\" % solution(3, 1, 1, 2)",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\\nOutput\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nOutput\\n4\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\\nOutput\\n0\\n') == 'Output\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nOutput\\n4\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\\nOutput\\n0\\n'",
        "num_ids_2": 219,
        "num_ids_4": 219
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"1\\n\"\nassert solution(6) == \"4\\n\"\nassert solution(7) == \"0\\n\"\nassert solution(8) == \"0\\n\"\nassert solution(9) == \"0\\n\"\nassert solution(10) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5') == '1\\n'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '4\\n'\nassert solution('3\\n1 1 2\\n2 3\\n1 3') == '0\\n'",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"input_3.txt\", \"r\").read()) == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\nassert solution(open('input2.txt', 'r').read()) == '4\\n'\nassert solution(open('input3.txt', 'r').read()) == '0\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\"\nassert solution(\"6\\nijfvj\\ntvqhwp\") == \"qoztvz\"",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"qoztvz\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"alvuw\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"bc\"\nassert solution(2) == \"bc\"\nassert solution(3) == \"bc\"\nassert solution(4) == \"bc\"\nassert solution(5) == \"alvuw\"\nassert solution(6) == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5') == 'alvuw'\nassert solution('6') == 'qoztvz'\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"az\") == \"bc\"\nassert solution(\"az\") == \"bc\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"alvuw\"\nassert solution == \"qoztvz\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5\\n'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO\\n'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4\\n'",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n1 2 5\\nYES\\n1 2 5'\nassert solution() == 'NO\\nYES\\n1 2 5'\nassert solution() == 'YES\\n1 2 5\\nYES\\n1 2 5'",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 63,
        "num_ids_4": 97
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\nassert solution(\"5 1\\n15\\n\") == \"NO\\n\"\nassert solution(\"5 0\\n15 15\\n\") == \"NO\\n\"\nassert solution(\"5 -1\\n15 -15\\n\") == \"NO\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 129
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'YES\\n1 2 5\\nYES\\n1 2 3\\nNO\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"\nassert solution(\"Input\") == \"YES\\n1 2 5\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 0 2') == 'YES\\n1 0 0 0 0 1 0 1 0\\n'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0 1 0 0 0 0 0\\n'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'NO\\n'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'NO\\n'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'NO\\n'",
        "num_ids_2": 105,
        "num_ids_4": 169
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 0 0 0 0\\n0 0 0 0 1 0\\n1 0 0 0 0 1\\n0 0 0 1 0 0\\n0 0 1 0 0 0\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 4 5\n''') == 'YES\\n1 0 0 0 0\\n'\nassert solution('''\n5\n1 2 4 0 2\n''') == 'NO\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 4 0 2\") == \"YES\\n0 1 1 1 1\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n0 1 0 0 1 0 0 0 0\"\nassert solution(\"5\\n1 3 4 0 2\") == \"NO\"",
        "num_ids_2": 81,
        "num_ids_4": 102
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0 \"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 4 0 2\") == \"YES\\n1 0 0 0 1\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"solution({stdin})!= expected, stdin={stdin}, expected={expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n0\\n1134\\n0'\nassert solution() == '3\\n0\\n1134\\n0'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\\n\"\nassert solution(\"1000000000 1 1 1000000000\") == \"0\\n0\\n1000000000\\n1\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: input '{input}', output '{output}'\" for i, (input, output) in enumerate([\n    # Test case 1\n    (\"10 2 3 7\", \"3\"),\n\n    # Test case 2\n    (\"100 51 51 51\", \"0\"),\n\n    # Test case 3\n    (\"1234 1 100 199\", \"0\"),\n\n    # Test case 4\n    (\"1000000000 1 1 1000000000\", \"3\"),\n])",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"0\"\nassert solution() == \"1134\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1, \"Expected 1, but got {}\".format(solution(2))\nassert solution(4) == 3, \"Expected 3, but got {}\".format(solution(4))\nassert solution(8) == 1260, \"Expected 1260, but got {}\".format(solution(8))\nassert solution(20) == 12164510040883200, \"Expected 12164510040883200, but got {}\".format(solution(20))",
        "num_ids_2": 48,
        "num_ids_4": 136
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1, \"Expected 1, got {}\".format(solution(2))\nassert solution(4) == 3, \"Expected 3, got {}\".format(solution(4))\nassert solution(8) == 1260, \"Expected 1260, got {}\".format(solution(8))\nassert solution(20) == 12164510040883200, \"Expected 12164510040883200, got {}\".format(solution(20))",
        "num_ids_2": 46,
        "num_ids_4": 132
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 3\nassert solution(\"8\") == 1260\nassert solution(\"20\") == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str: pass\"\n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"1 1\\nu\\n\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def\"",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 74
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"1 1\\nu\\n\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15, 3) == 'cccbbabaccbc'\nassert solution(15, 9) == 'cccccc'\nassert solution(1, 1) == 'def solution(stdin: str) -> str: pass'\n",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(15, 3) == 'cccbbabaccbc'\nassert solution(15, 9) == 'cccccc'\nassert solution(1, 1) == 'def'",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8'\n\nfrom collections import defaultdict",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3\n\"\"\") == \"8\\n\"\n\nassert solution(\"\"\"\n    5 3\n    4 2 1 3 2\n    3 5\n    4 2\n\"\"\") == \"20\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\\n\"\nassert solution(\"6 6\\n.***\\n.***.\\n.***.\\n.***\\n\") == \"2\\n2 2 1\\n2 3 1\\n2 4 1\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 174
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 169
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"-1\"\nassert solution(\"5 5\\n.*...\\n****.",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 8\n   ....*...\n   ...**...\n   ..*****.\n   ...**...\n   ....*...\n   ........\n    \"\"\"\n) == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\n\nassert solution(\n    \"\"\"\n    5 5\n   .*...\n    ****.\n   .****\n   ..**.\n   .....\n    \"\"\"\n) == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\n\nassert solution(\n    \"\"\"\n    5 5\n   .*...\n    ***..\n   .*...\n   .*...\n   .....\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    3 3\n    *.*\n   .*.\n    *.*\n    \"\"\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n*.*\\n\") == \"1\\n1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 170
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2\n3 5 1\n'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1\n'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1\n'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '''3\n3 4 1\n3 5 2\n3 5 1'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '''3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '''-1'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.* \\n.*. \\n*.* \\n\") == \"-1\"",
        "num_ids_2": 104,
        "num_ids_4": 162
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter a positive integer: \")) == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\n\"\nassert solution(input()) == \"No\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(123) == \"No\"\nassert solution(0) == \"No\"\nassert solution(99) == \"Yes\"\nassert solution(100) == \"No\"\nassert solution(101) == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == 'Yes', 'N=575 is also 575 when read backward, so it is a palindromic number. You should print Yes.'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Expected output: Yes\\n\"\nassert solution(input()) == \"No\\n\", \"Expected output: No\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(575) == 'Yes'\nassert solution(456) == 'No'\nassert solution(123) == 'Yes'\nassert solution(0) == 'No'\nassert solution(-5) == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"9 1\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"A B\\n\")) == \"Alice\", \"The output should be Alice\"\nassert solution(input(\"11 1\\n\")) == \"Bob\", \"The output should be Bob\"\nassert solution(input(\"7 8\\n\")) == \"Draw\", \"The output should be Draw\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('12 7') == 'Bob'\nassert solution('5 10') == 'Draw'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6\") == \"Alice\\n8 is written on Alice's card, and 6 is written on Bob's card.Alice has the stronger card, and thus the output should be Alice.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"9 2\") == \"Bob\"\nassert solution(\"8 10\") == \"Draw\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"3 1\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"13 2\") == \"Alice\"\nassert solution(\"4 8\") == \"Bob\"\nassert solution(\"6 5\") == \"Bob\"\nassert solution(\"13 1\") == \"Draw\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"12 10\") == \"Bob\"\nassert solution(\"1 12\") == \"Draw\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\", \"Test case failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"Test passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"2\n1\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"3 3\\n1 1\\n0 0\\n1 0\") == \"1\\n1\"\nassert solution(\"3 3\\n1 1\\n0 0\\n-1 0\") == \"1\\n1\"\nassert solution(\"3 3\\n1 1\\n0 0\\n1 0\") == \"1\\n1\"\n",
        "num_ids_2": 66,
        "num_ids_4": 127
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"1 1\\n-1 1\\n1 1\\n-1 1\\n-1 1\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n3 1\\n-1 1\\n1 1\\n-1 1\\n1 1\\n\") == \"1\\n2\\n3\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 127
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n1 1\\n\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n\") == \"1\\n1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 112
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '''2\n1\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n2\\n1\\n2\\n1\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 216
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n'\nassert solution(open('input_2.txt', 'r')) == '2\\n1\\n'\nassert solution(open('input_3.txt', 'r')) == '1\\n0\\n'\nassert solution(open('input_4.txt', 'r')) == '2\\n2\\n'\nassert solution(open('input_5.txt', 'r')) == '1\\n0\\n'",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"14\\n\"\nassert solution(\"3\\n\") == \"15\\n\"\nassert solution(\"4\\n\") == \"16\\n\"\nassert solution(\"5\\n\") == \"25\\n\"\nassert solution(\"6\\n\") == \"36\\n\"\nassert solution(\"7\\n\") == \"49\\n\"\nassert solution(\"8\\n\") == \"64\\n\"\nassert solution(\"9\\n\") == \"81\\n\"\nassert solution(\"10\\n\") == \"100\\n\"\nassert solution(\"11\\n\") == \"121\\n\"\nassert solution(\"12\\n\") == \"144\\n\"\nassert solution(\"13\\n\") == \"169\\n\"\nassert solution(\"14\\n\") == \"196\\n\"\nassert solution(\"15\\n\") == \"225\\n\"\nassert solution(\"16\\n\") == \"256\\n\"\nassert solution(\"17\\n\") == \"289\\n\"\nassert solution(\"18\\n\") == \"324\\n\"\nassert solution(\"19\\n\") == \"361\\n\"\nassert solution(\"20\\n\") == \"400\\n\"\nassert solution(\"21\\n\") == \"441\\n\"\nassert solution(\"22\\n\") == \"484\\n\"\nassert solution(\"23\\n\") == \"529\\n\"\nassert solution(\"24\\n\") == \"576\\n\"\nassert solution(\"25\\n\") == \"625\\n\"\nassert solution(\"26\\n\") == \"676\\n\"\nassert solution(\"27\\n\") == \"729\\n\"\nassert solution(\"28\\n\") == \"784\\n\"\nassert solution(\"29\\n\") == \"841\\n\"\nassert solution(\"30\\n\") == \"900\\n\"\nassert solution(\"31\\n\") == \"961\\n\"\nassert solution(\"32\\n\") == \"1024\\n\"\nassert solution(\"33\\n\") == \"1089\\n\"\nassert solution(\"34\\n\") == \"1156\\n\"\nassert solution(\"35\\n\") == \"1225\\n\"\nassert solution(\"36\\n\") == \"1296\\n\"\nassert solution(\"37\\n\") == \"1369\\n\"\nassert solution(\"38\\n\") == \"1444\\n\"\nassert solution(\"39\\n\") == \"1521\\n\"\nassert solution(\"40\\n\") == \"1600\\n\"\nassert solution(\"41\\n\") == \"1681\\n\"\nassert solution(\"42\\n\") == \"1764\\n\"\nassert solution(\"43\\n\") == \"1849\\n\"\nassert solution(\"44\\n\") == \"1936\\n\"\nassert solution(\"45\\n\") == \"2025\\n\"\nassert solution(\"46\\n\") == \"2116\\n\"\nassert solution(\"47\\n\") == \"2209\\n\"\nassert solution(\"48\\n\") == \"2304\\n\"\nassert solution(\"49\\n\") == \"2401\\n\"\nassert solution(\"50\\n\") == \"2500\\n\"\nassert solution(\"51\\n\") == \"2601\\n\"\nassert solution(\"52\\n\") == \"2704\\n\"\nassert solution(\"53\\n\") == \"2809\\n\"\nassert solution(\"54\\n\") == \"2916\\n\"\nassert solution(\"55\\n\") == \"3025\\n\"\nassert solution(\"56\\n\") == \"3136\\n\"\nassert solution(\"57\\n\") == \"3249\\n\"\nassert solution(\"58\\n\") == \"3364\\n\"\nassert solution(\"59\\n\") == \"3481\\n\"\nassert solution(\"60\\n\") == \"3600\\n\"\nassert solution(\"61\\n\") == \"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"14\", \"The output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\") == \"14\"\nassert solution(stdin=\"10\") == \"55\"\nassert solution(stdin=\"0\") == \"0\"\nassert solution(stdin=\"-2\") == \"2\"\nassert solution(stdin=\"abc\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"21\"\nassert solution(\"4\") == \"34\"\nassert solution(\"5\") == \"51\"\nassert solution(\"6\") == \"72\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"14\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"\nprint(\"Test Passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\", \"Test case 1\"\nassert solution(\"3\") == \"14\", \"Test case 2\"\nassert solution(\"4\") == \"14\", \"Test case 3\"\nassert solution(\"5\") == \"14\", \"Test case 4\"\nassert solution(\"6\") == \"14\", \"Test case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '14', 'Test Case Failed'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"14\", \"Incorrect solution for a = 2.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 14\nassert solution(10) == 656\nassert solution(5) == 125\nassert solution(100) == 362880\nassert solution(1000) == 58400362880",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 2\n        .#\n        .#\n        #.\n    ''') == 'Yes'\n\nassert solution('''\n    3 2\n        .#\n        .#\n        #.\n    ''') == 'No'\n\nassert solution('''\n    3 2\n        ..\n        ..\n        ..\n    ''') == 'Yes'\n\nassert solution('''\n    3 2\n        ..\n        ..\n        ..\n    ''') == 'No'\n\nassert solution('''\n    3 2\n        ..\n        ..\n        ..\n    ''') == 'Yes'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\", \"Your code is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n#. \\n.#\\n\") == \"Yes\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3 2\n        .#\n        .#.\n        #.#\n    #.\n    .#\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#') == 'Yes\\n'\nassert solution(stdin='3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#') == 'No\\n'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.##\\n.#.') == 'Yes'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n') == 'Yes'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n#. \\n#.#\") == \"Yes\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The amount of the allowance should be 53\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Input is not valid\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"53\\n\", \"Test case 1\"\nassert solution(\"1 2 3\") == \"6\\n\", \"Test case 2\"\nassert solution(\"1 3 2\") == \"45\\n\", \"Test case 3\"\nassert solution(\"1 2 4\") == \"62\\n\", \"Test case 4\"\nassert solution(\"1 4 2\") == \"26\\n\", \"Test case 5\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The amount of the allowance will be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"53\", \"The amount of the allowance will be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"5 3 6\") == \"123\"\nassert solution(\"1 6 2\") == \"125\"\nassert solution(\"7 2 9\") == \"84\"\nassert solution(\"8 6 9\") == \"25\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Sample Output Error\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Test Case 1\"\nassert solution(\"2 5 6\") == \"102\", \"Test Case 2\"\nassert solution(\"10 20 30\") == \"620\", \"Test Case 3\"\nassert solution(\"2 10 20\") == \"1440\", \"Test Case 4\"\nassert solution(\"50 50 50\") == \"1250\", \"Test Case 5\"\nprint(\"All test cases pass\")",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Your solution is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950\\n', \"The output should be 15950.\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"15950\\n\", \"Your solution is incorrect\"\nprint(\"All checks passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '15950', 'Output is not as expected'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n5\\n350\\n1200\\n\") == \"15950\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n1000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n500\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n2000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n100000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n500000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n1000000\\n\") == \"21010\\n\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10\\n10000\\n5000\\n2000000\\n\") == \"21010\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 173
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"15950\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10000\") == \"15950\\n\", \"15950\"\nassert solution(\"3\\n4980\\n7980\\n6980\\n10000\") == \"15950\\n\", \"15950\"\nassert solution(\"2\\n1000\\n1500\\n500\") == \"3000\\n\", \"3000\"\nassert solution(\"2\\n1000\\n1500\\n500\") == \"3000\\n\", \"3000\"",
        "num_ids_2": 89,
        "num_ids_4": 175
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 15950, \"Wrong Answer\"\nprint(\"The correct answer is 15950 yen.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"28\\n15\\n12\\n90\\n150\") == \"180\"\nassert solution(\"28\\n15\\n12\\n180\\n150\") == \"180\"\nassert solution(\"28\\n15\\n12\\n180\\n150\") == \"180\"\nassert solution(\"28\\n15\\n12\\n180\\n150\") == \"180\"",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"48\\n40\\n24\\n12\\n\") == \"240\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"215\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n10\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n10\\n7\\n35\\n119\") == \"195\"\nassert solution(\"29\\n10\\n7\\n35\\n118\") == \"185\"\nassert solution(\"29\\n10\\n7\\n35\\n117\") == \"175\"\nassert solution(\"29\\n10\\n7\\n35\\n116\") == \"165\"\nassert solution(\"29\\n10\\n7\\n35\\n115\") == \"155\"\nassert solution(\"29\\n10\\n7\\n35\\n114\") == \"145\"\nassert solution(\"29\\n10\\n7\\n35\\n113\") == \"135\"\nassert solution(\"29\\n10\\n7\\n35\\n112\") == \"125\"\nassert solution(\"29\\n10\\n7\\n35\\n111\") == \"115\"\nassert solution(\"29\\n10\\n7\\n35\\n110\") == \"105\"\nassert solution(\"29\\n10\\n7\\n35\\n109\") == \"95\"\nassert solution(\"29\\n10\\n7\\n35\\n108\") == \"85\"\nassert solution(\"29\\n10\\n7\\n35\\n107\") == \"75\"\nassert solution(\"29\\n10\\n7\\n35\\n106\") == \"65\"\nassert solution(\"29\\n10\\n7\\n35\\n105\") == \"55\"\nassert solution(\"29\\n10\\n7\\n35\\n104\") == \"45\"\nassert solution(\"29\\n10\\n7\\n35\\n103\") == \"35\"\nassert solution(\"29\\n10\\n7\\n35\\n102\") == \"25\"\nassert solution(\"29\\n10\\n7\\n35\\n101\") == \"15\"\nassert solution(\"29\\n10\\n7\\n35\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n34\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n33\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n32\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n31\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n30\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n29\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n28\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n27\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n26\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n25\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n24\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n23\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n22\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n21\\n100\") == \"0\"\nassert solution(\"29\\n10\\n7\\n20\\n100",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"215\", \"Expected output: 215, got: {}\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"30\\n20\\n7\\n35\\n120\") == \"50\"\nassert solution(\"50\\n20\\n7\\n35\\n120\") == \"57\"\nassert solution(\"180\\n20\\n7\\n35\\n120\") == \"180\"\nassert solution(\"180\\n30\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 57,
        "num_ids_4": 115
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '7.5\\n'\nassert solution(input()) == '7.49999\\n'\nassert solution(input()) == '7.50001\\n'\nassert solution(input()) == '7.50000\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\n\nprint(\"7.50001\", \"7.49999\",..., \"7.49999\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nassert solution(\"1\\n\") == \"1.0\\n\"\nassert solution(\"3\\n10 20 30\") == \"15.0\\n\"\nassert solution(\"2\\n1000 1000 1000\") == \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 37,
        "num_ids_4": 1027
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nassert solution(\"3\\n15 20 30\") == \"22.5\\n\"\nassert solution(\"1\\n10\") == \"10.0\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2.00000\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '7.5'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.49998'\nassert solution(input()) == '7.49997'\nassert solution(input()) == '7.49996'\nassert solution(input()) == '7.49995'\nassert solution(input()) == '7.49994'\nassert solution(input()) == '7.49993'\nassert solution(input()) == '7.49992'\nassert solution(input()) == '7.49991'\nassert solution(input()) == '7.49990'\nassert solution(input()) == '7.49989'\nassert solution(input()) == '7.49988'\nassert solution(input()) == '7.49987'\nassert solution(input()) == '7.49986'\nassert solution(input()) == '7.49985'\nassert solution(input()) == '7.49984'\nassert solution(input()) == '7.49983'\nassert solution(input()) == '7.49982'\nassert solution(input()) == '7.49981'\nassert solution(input()) == '7.49980'\nassert solution(input()) == '7.49979'\nassert solution(input()) == '7.49978'\nassert solution(input()) == '7.49977'\nassert solution(input()) == '7.49976'\nassert solution(input()) == '7.49975'\nassert solution(input()) == '7.49974'\nassert solution(input()) == '7.49973'\nassert solution(input()) == '7.49972'\nassert solution(input()) == '7.49971'\nassert solution(input()) == '7.49970'\nassert solution(input()) == '7.49969'\nassert solution(input()) == '7.49968'\nassert solution(input()) == '7.49967'\nassert solution(input()) == '7.49966'\nassert solution(input()) == '7.49965'\nassert solution(input()) == '7.49964'\nassert solution(input()) == '7.49963'\nassert solution(input()) == '7.49962'\nassert solution(input()) == '7.49961'\nassert solution(input()) == '7.49960'\nassert solution(input()) == '7.49959'\nassert solution(input()) == '7.49958'\nassert solution(input()) == '7.49957'\nassert solution(input()) == '7.49956'\nassert solution(input()) == '7.49955'\nassert solution(input()) == '7.49954'\nassert solution(input()) == '7.49953'\nassert solution(input()) == '7.49952'\nassert solution(input()) == '7.49951'\nassert solution(input()) == '7.49950'\nassert solution(input()) == '7.49949'\nassert solution(input()) == '7.49948'\nassert solution(input()) == '7.49947'\nassert solution(input()) == '7.49946'\nassert solution(input()) == '7.49945'\nassert solution(input()) == '7.49944'\nassert solution(input()) == '7.49943'\nassert solution(input()) == '7.49942'\nassert solution(input()) == '7.49941'\nassert solution(input()) == '7.49940'\nassert solution(input()) == '7.49939'\nassert solution(input()) == '7.49938'\nassert solution(input()) == '7.49937'\nassert solution(input()) ==",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.50001\\n7.49999\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\\n\") == \"7.5\"\nassert solution(\"10 30\\n\") == \"7.5\"\nassert solution(\"100 200 300\\n\") == \"1\"\nassert solution(\"1000000000 2000000000 3000000000\\n\") == \"7.5\"\nassert solution
        "num_ids_2": 40,
        "num_ids_4": 107
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"3 5\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\n\nThe given problem statement is quite simple. We need to test the correctness of the solution.\n\nWe are given an input of 5 integers denoting the height of each tree in the garden, and the number of trees and the minimum and maximum heights of the decorated trees.\n\nWe need to calculate the minimum possible value of h_{max} - h_{min}.\n\nLet's implement the solution for this problem statement.",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'\nassert solution('5 4\\n10\\n15\\n11\\n14\\n12\\n') == '0'\nassert solution('5 5\\n10\\n15\\n11\\n14\\n12\\n') == '0'\nassert solution('5 6\\n10\\n15\\n11\\n14\\n12\\n') == '0'\nassert solution('5 7\\n10\\n15\\n11\\n14\\n12\\n') == '0'\nassert solution('5 8\\n10\\n15\\n11\\n14\\n12\\n') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n3\") == \"5\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n4\") == \"10\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n5\") == \"15\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n6\") == \"20\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"A\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('\u03b1') == 'A'\nassert solution('b') == 'B'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"B\"\nassert solution(\"ABC\") == \"A\"\nassert solution(\"\u03b1bc\") == \"A\"\nassert solution(\"\u03b1B\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"\u00e1\") == \"a\"\nassert solution(\"\u03b2\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"A\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"B\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Invalid input. \\alpha must be a uppercase or lowercase English letter.\"\nassert solution(\"B\") == \"A\", \"Invalid input. \\alpha must be a uppercase or lowercase English letter.\"\nassert solution(\"b\") == \"a\", \"Invalid input. \\alpha must be a uppercase or lowercase English letter.\"\nassert solution(\"C\") == \"Invalid input. \\alpha must be a uppercase or lowercase English letter.\"\nassert solution(\"D\") == \"Invalid input. \\alpha must be a uppercase or lowercase English letter.\"",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"B is uppercase, so we should print A.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u0393\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"\u03b1A\") == \"A\"\nassert solution(\"\u03b1b\") == \"a\"\nassert solution(\"\u03b1B\") == \"a\"\nassert solution(\"\u03b1B\u00e9\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\nassert solution('10 5') == '7'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"6\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"6\\n\" # correct output\nassert solution(23) == \"6\\n\" # correct output",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"14\"\nassert solution(input()) == \"27\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output does not match the expected output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"3 5\\n\") == \"6\\n\"\nassert solution(\"25 75\\n\") == \"6\\n\"\nassert solution(\"1 10\\n\") == \"6\\n\"\nassert solution(\"5 10\\n\") == \"6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1234') == 'NA'\nassert solution('201905') == 'MMYY'\nassert solution('0101') == 'AMBIGUOUS'\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1901\") == \"MMYY\"\nassert solution(\"0101\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Test Case 1\"\nassert solution(\"1101\") == \"MMYY\", \"Test Case 2\"\nassert solution(\"190511\") == \"AMBIGUOUS\", \"Test Case 3\"\nassert solution(\"190501\") == \"NA\", \"Test Case 4\"\nassert solution(\"1905111\") == \"NA\", \"Test Case 5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1101\") == \"MMYY\"\nassert solution(\"0101\") == \"AMBIGUOUS\"\nassert solution(\"1212\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"0102\") == \"MMYY\"\nassert solution(\"1001\") == \"AMBIGUOUS\"\nassert solution(\"0100\") == \"AMBIGUOUS\"\nassert solution(\"1020\") == \"AMBIGUOUS\"\nassert solution(\"1002\") == \"AMBIGUOUS\"\nassert solution(\"1110\") == \"NA\"\nassert solution(\"0101\") == \"NA\"\nassert solution(\"1111\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1999\") == \"MMYY\"\nassert solution(\"180119\") == \"AMBIGUOUS\"\nassert solution(\"123456\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1234\") == \"NA\"\nassert solution(\"12345\") == \"NA\"\nassert solution(\"123456\") == \"NA\"\nassert solution(\"20001234\") == \"AMBIGUOUS\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"The expected output is 'YYMM', but it is '{}'.\".format(solution(\"1905\"))\nassert solution(\"01234\") == \"MMYY\", \"The expected output is 'MMYY', but it is '{}'.\".format(solution(\"01234\"))\nassert solution(\"12345\") == \"AMBIGUOUS\", \"The expected output is 'AMBIGUOUS', but it is '{}'.\".format(solution(\"12345\"))\nassert solution(\"67890\") == \"NA\", \"The expected output is 'NA', but it is '{}'.\".format(solution(\"67890\"))\n",
        "num_ids_2": 78,
        "num_ids_4": 160
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"2345\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0101\") == \"MMYY\"\nassert solution(\"0100\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\", \"The output is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"Solution does not work for input (3)\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\\n\"\nassert solution(\"7\") == \"15\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n', \"The number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and K (inclusive) should be 2.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '2', \"The correct number of ways to choose a pair of even and odd numbers between 1 and 3 is 2.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '2'\nprint(\"Two pairs can be chosen: (2,1) and (2,3).\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 2\nassert solution(3) == 6\nassert solution(10) == 148\nassert solution(100) == 10044629\nassert solution(101) == 10045713\n",
        "num_ids_2": 18,
        "num_ids_4": 48
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2, \"The expected output is 2, but it is not: {}\".format(solution(3))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 15\") == \"22\"\nassert solution(\"11 18\") == \"23\"\nassert solution(\"24 0\") == \"0\"\nassert solution(\"25 6\") == \"0\"\nassert solution(\"26 3\") == \"0\"\nassert solution(\"27 12\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"21\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 15\") == \"22\"\nassert solution(\"11 20\") == \"23\"\nassert solution(\"24 21\") == \"24\"\nassert solution(\"100 30\") == \"25\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 12') == '21'\nprint('All test cases passed')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 15\") == \"15\"\nassert solution(\"11 18\") == \"18\"\nassert solution(\"12 14\") == \"14\"\nassert solution(\"13 16\") == \"16\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"21\", \"The output should be 21.\"\nassert solution(input()) == \"22\", \"The output should be 22.\"\nassert solution(input()) == \"23\", \"The output should be 23.\"\nassert solution(input()) == \"0\", \"The output should be 0.\"\nassert solution(input()) == \"1\", \"The output should be 1.\"\nassert solution(input()) == \"23\", \"The output should be 23.\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"9 12\\n\") == \"21\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 12\") == \"21\", \"The output should be 21.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\", \"Test Case 1\"\nassert solution(\"8 24\") == \"00\", \"Test Case 2\"\nassert solution(\"10 12\") == \"22\", \"Test Case 3\"\nassert solution(\"11 12\") == \"00\", \"Test Case 4\"\nassert solution(\"12 12\") == \"00\", \"Test Case 5\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 12\") == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Test 1\"\nassert solution(\"10 1200\") == \"1100\\n\", \"Test 2\"\nassert solution(\"10 200\") == \"150\\n\", \"Test 3\"\nassert solution(\"5 45\") == \"35\\n\", \"Test 4\"\nassert solution(\"10 4000\") == \"4000\\n\", \"Test 5\"",
        "num_ids_2": 51,
        "num_ids_4": 96
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2919') == '3719'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 1212\") == \"1112\"\nassert solution(\"2 3000\") == \"3200\"\nassert solution(\"10 100\") == \"1000\"\nassert solution(\"1 4111\") == \"4111\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\\n\"\nassert solution(\"1 1000\\n\") == \"1000\\n\"\nassert solution(\"3 4211\\n\") == \"4211\\n\"\nassert solution(\"10 1400\\n\") == \"13400\\n\"\nassert solution(\"0 2500\\n\") == \"2500\\n\"\nassert solution(\"10 500\\n\") == \"650\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\", \"Takahashi has participated in 2 contests, which is less than 10, so his Displayed Rating is his Inner Rating minus 100 \\times (10 - 2) = 800. Thus, Takahashi's Inner Rating is 2919 + 800 = 3719.\"\nassert solution(\"3 4211\") == \"20811\", \"Takahashi has participated in 3 contests, so his Displayed Rating is equal to their Inner Rating.\"\nassert solution(\"10 5000\") == \"5000\", \"Takahashi has participated in 10 contests, so his Displayed Rating is equal to their Inner Rating.\"\nassert solution(\"10 0\") == \"4000\", \"Takahashi has participated in 10 contests, which is 0 or less, so his Displayed Rating is equal to their Inner Rating minus 100 \\times (10 - 0) = 4000.\"\nassert solution(\"10 -5\") == \"4050\", \"Takahashi has participated in 10 contests, which is less than 10, so his Displayed Rating is equal to their Inner Rating minus 100 \\times (10 - 5) = 4050.\"",
        "num_ids_2": 141,
        "num_ids_4": 257
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"The output should be: 3719\\n, but instead it is: \" + str(solution(\"2 2919\"))",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Takahashi has participated in 2 contests, which is less than 10, so his Displayed Rating is his Inner Rating minus 100 \\times (10 - 2) = 800. Thus, Takahashi's Inner Rating is 2919 + 800 = 3719.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1000 10\") == \"11\"\nassert solution(\"1000000 10\") == \"30\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\") == \"4\\n\", \"Test 1\"\nassert solution(\"100 10\") == \"6\\n\", \"Test 2\"\nassert solution(\"1000 2\") == \"6\\n\", \"Test 3\"\nassert solution(\"1000000000 3\") == \"14\\n\", \"Test 4\"\nassert solution(\"100000000000000000 4\") == \"21\\n\", \"Test 5\"\n\nsolution(input())",
        "num_ids_2": 42,
        "num_ids_4": 93
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"123 5\") == \"5\"\nassert solution(\"1000000000 9999999999\") == \"31\"\nassert solution(\"1 1000000000\") == \"0\"\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 79
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"20 4\") == \"5\"\nassert solution(\"100 6\") == \"8\"\nassert solution(\"1234567 8\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\") == \"4\", \"Output should be 4, but it is \" + solution(\"11 2\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\"\n\nprint(\"Correct\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output\\n4\\n', 'Test case 1 failed'\n\nassert solution(input()) == 'Output\\n4\\n', 'Test case 2 failed'\n\nassert solution(input()) == 'Output\\n4\\n', 'Test case 3 failed'\n\nassert solution(input()) == 'Output\\n4\\n', 'Test case 4 failed'\n\nassert solution(input()) == 'Output\\n4\\n', 'Test case 5 failed'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test 1\"\nassert solution(\"12 2\") == \"2\", \"Test 2\"\nassert solution(\"13 2\") == \"3\", \"Test 3\"\nassert solution(\"14 2\") == \"4\", \"Test 4\"\nassert solution(\"15 2\") == \"5\", \"Test 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"123 2\") == \"5\"\nassert solution(\"1000000000 10\") == \"32\"\nassert solution(\"1000000000 8\") == \"24\"\nassert solution(\"123456789 4\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 72
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\", \"Test failed: The correct answer is 3, but got {}\".format(solution(\"5\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"3\", \"Your solution is incorrect. The expected output is 3, but instead it is: \" + solution(5)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"20\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"50\") == \"5\"\nassert solution(\"-5\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1.5\") == \"1\"\nassert solution(\"100\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"3\"\nassert solution(10) == \"3\"\nassert solution(1) == \"1\"\nassert solution(50) == \"3\"\nassert solution(100) == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 3\nprint(\"All tests passed.\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"3\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == '3', \"Test failed for '5'\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"3\\n\", \"Test failed for N = 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"3\\n\", \"Takahashi wants to print a document with N pages double-sided, where two pages of data can be printed on one sheet of paper. At least how many sheets of paper does he need?\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\"\nassert solution(\"3 3\") == \"Yay!\\n\"\nassert solution(\"2 6\") == \"Yay!\\n\"\nassert solution(\"1 5\") == \"Yay!\\n\"\nassert solution(\"8 4\") == \":(\"\nassert solution(\"10 6\") == \":(\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nassert solution(\"1 1\") == \":(\"\n\nassert solution(\"2 3\") == \":(\"\n\nassert solution(\"15 10\") == \":(\"\n\nassert solution(\"10 10\") == \":(\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"16 1\") == \"Yay!\"\nassert solution(\"5 3\") == \"Yay!\"\nassert solution(\"5 1\") == \"Yay!\"\nassert solution(\"16 2\") == \"Yay!\"\nassert solution(\"16 2\") == \"Yay!\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yay!'\nprint('Both of them can take desired number of pieces.')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('6 6') == ':'\nassert solution('16 16') == ':'\nassert solution('2 1') == ':'\nassert solution('2 4') == 'Yay!'\n\nprint('All tests passed!')",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"A B\\n\")) == \"Yay!\"\nassert solution(input(\"3 1\\n\")) == \"Yay!\"\nassert solution(input(\"2 1\\n\")) == \"Yay!\"\nassert solution(input(\"5 3\\n\")) == \"Yay!\"\nassert solution(input(\"1 1\\n\")) == \"Yay!\"\nassert solution(input(\"15 1\\n\")) == \"Yay!\"\nassert solution(input(\"2 2\\n\")) == \"Yay!\"\nassert solution(input(\"1 2\\n\")) == \"Yay!\"\nassert solution(input(\"2 5\\n\")) == \"Yay!\"\nassert solution(input(\"2 3\\n\")) == \"Yay!\"\nassert solution(input(\"2 4\\n\")) == \"Yay!\"\nassert solution(input(\"2 6\\n\")) == \"Yay!\"\nassert solution(input(\"5 5\\n\")) == \"Yay!\"\nassert solution(input(\"3 4\\n\")) == \"Yay!\"\nassert solution(input(\"1 3\\n\")) == \"Yay!\"\nassert solution(input(\"4 1\\n\")) == \"Yay!\"\nassert solution(input(\"6 2\\n\")) == \"Yay!\"\nassert solution(input(\"6 3\\n\")) == \"Yay!\"\nassert solution(input(\"4 5\\n\")) == \"Yay!\"\nassert solution(input(\"4 2\\n\")) == \"Yay!\"\nassert solution(input(\"1 4\\n\")) == \"Yay!\"\nassert solution(input(\"4 6\\n\")) == \"Yay!\"\nassert solution(input(\"6 4\\n\")) == \"Yay!\"\nassert solution(input(\"10 5\\n\")) == \"Yay!\"\nassert solution(input(\"7 3\\n\")) == \"Yay!\"\nassert solution(input(\"7 2\\n\")) == \"Yay!\"\nassert solution(input(\"7 1\\n\")) == \"Yay!\"\nassert solution(input(\"7 4\\n\")) == \"Yay!\"\nassert solution(input(\"7 5\\n\")) == \"Yay!\"\nassert solution(input(\"7 6\\n\")) == \"Yay!\"\nassert solution(input(\"7 8\\n\")) == \"Yay!\"\nassert solution(input(\"7 9\\n\")) == \"Yay!\"\nassert solution(input(\"7 10\\n\")) == \"Yay!\"\nassert solution(input(\"7 11\\n\")) == \"Yay!\"\nassert solution(input(\"7 12\\n\")) == \"Yay!\"\nassert solution(input(\"7 13\\n\")) == \"Yay!\"\nassert solution(input(\"7 14\\n\")) == \"Yay!\"\nassert solution(input(\"7 15\\n\")) == \"Yay!\"\nassert solution(input(\"7 16\\n\")) == \"Yay!\"\nassert solution(input(\"7 17\\n\")) == \"Yay!\"\nassert solution(input(\"7 18\\n\")) == \"Yay!\"\nassert solution(input(\"7 19\\n\")) == \"Yay!\"\nassert solution(input(\"7 20\\n\")) == \"Yay!\"\nassert solution(input(\"7 21\\n\")) == \"Yay!\"\nassert solution(input(\"7 22\\n\")) == \"Yay!\"\nassert solution(input(\"7 23\\n\")) == \"Yay!\"\nassert solution(input(\"7 24\\n\")) == \"Yay!\"\nassert solution(input(\"7 25\\n\")) == \"Yay!\"\nassert solution(input(\"7 26\\n\")) == \"Yay!\"\nassert solution(input(\"7 27\\n\")) == \"Yay!\"\nassert solution(input(\"7 28\\n\")) == \"Yay!\"\nassert solution(input(\"7 29\\n\")) == \"Yay!\"\nassert solution(input(\"7 30\\n\")) == \"Yay!\"\nassert solution(input(\"7 31\\n\")) == \"Yay!\"\nassert solution(input(\"7 32\\n\")) == \"Yay!\"\nassert solution(input(\"7 33\\n\")) == \"Yay!\"\nassert solution(input(\"7 34\\n\")) == \"Yay!\"\nassert solution(input(\"7 35\\n\")) == \"Yay!\"\nassert solution(input(\"7 36\\n\")) ==",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 4\\n\") == \"Yay!\\n\", \"Testcase failed\"\n\nsolution(stdin=\"5 4\\n\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"3 3\") == \"Yay!\"\nassert solution(\"2 2\") == \"Yay!\"\nassert solution(\"10 10\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test case 1 failed\"\nassert solution(\"0987654321\") == \"67\", \"Test case 2 failed\"\nassert solution(\"12345678769\") == \"0\", \"Test case 3 failed\"\nassert solution(\"1234567890\") == \"30\", \"Test case 4 failed\"\nassert solution(\"123456787676\") == \"0\", \"Test case 5 failed\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456787\") == \"252\"\nassert solution(\"12345678\") == \"164\"\nassert solution(\"1234567\") == \"40\"\nassert solution(\"123456\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"23456789\") == \"34\"\nassert solution(\"11111\") == \"0\"\nassert solution(\"222222\") == \"0\"\nassert solution(\"1234567890\") == \"34\"",
        "num_ids_2": 38,
        "num_ids_4": 67
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"34\", \"The output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\\n\") == \"5 3\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\\n\") == \"12 13\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"5 3\\n1 7\\n2999999987 2\"\nassert solution(\"2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"1 7\\n2999999987 2\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"12 13\\n2999999987 2\"",
        "num_ids_2": 174,
        "num_ids_4": 247
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor test_case in range(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    y, z = solution(input())\n    print(y, z)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"5 3\\n1 7\\n2999999987 2\"\nassert solution(\"2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"1 7\\n2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 174,
        "num_ids_4": 206
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n\nn, *a = map(int, input().split())\nassert n in range(2, 10**5), \"n must be between 2 and 10^5\"\na = sorted(set(a))\na_i = sum(a[:i])\nx, y, z = a_i // n, a_i % n, sum(a) % n\n\noutput = f\"{y} {z}\"\n\nprint(output)",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case {input} failed. Expected {output}, but got {solution(input)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 12 6\n2\n2 9\n7\n2 1000000000 4 6 8 4 2\n6\n13 52 0 13 26 52\n\"\"\") == \"\"\"\n2999999987 2\n\"\"\"\n\nassert solution(\"\"\"\n6\n13 52 0 13 26 52\n\"\"\") == \"\"\"\n12 13\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5 3\\n1 7\\n2999999987 2\\n12 13'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case failed with input {stdin} and output {solution(stdin=input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n\nfor i in range(1, 4):\n    assert i <= int(stdin.readline().strip()) and int(stdin.readline().strip()) <= 2 * 10**5, f\"Input error: Invalid input for day {i}. Day number should be between 1 and 2, and there should be at least {i} problems in each contest.\"\n\nexpected_output = 3\nsolution(stdin) == expected_output",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"\\n\") == \"\"\nassert solution(b\"\\n\\n\") == \"\"\nassert solution(b\"\\n\\n\\n\") == \"\"\nassert solution(b\"\\n\\n\\n\\n\") == \"1\"\nassert solution(b\"\\n\\n\\n\\n\\n\") == \"2\"\nassert solution(b\"\\n\\n\\n\\n\\n\\n\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2\nassert solution(1) == 1\nassert solution(4) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 4 1\\n\") == \"3\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 4 1\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case_id} failed: {solution(input_data)} should be {output_data}\"\ntest_case_id += 1\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n4 2\\n\"\nassert solution() == \"1\\n1 2\\n\"\nassert solution() == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 38
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n\") == \"2\\n4 2\\n\\n2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 3\\n3 4\\n4 4\\n\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n\") == \"2\\n2 3\\n3 3\\n3 4\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 185
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\") == \"2\\n4 2\\n\\n2 1\\n\\n2 2\\n\\n1 3\\n\\n1 2\\n\\n1 4\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n2 3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_id} failed: got {solution(input())}, expected {expected_output}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2\\n0\\n3 2\\n1 3\\n2 3\\n\\n1\") == \"2\"\nassert solution(\"2 0\\n\\n2\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n2\\n\\n1\") == \"2\"",
        "num_ids_2": 67,
        "num_ids_4": 99
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n2\") == \"2\\n4 2\\n2 1\\n1 2\\n1 3\\n2 3\\n\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n2\") == \"1\\n1 2\\n2 1\\n1 3\\n2 3\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n2\") == \"2\\n2 1\\n1 2\\n1 3\\n2 3\\n\"\nassert solution(\"4 2\\n1 2\\n2 3\\n\\n2\\n\") == \"2\\n4 2\\n2 1\\n1 2\\n1 3\\n2 3\\n\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n2\\n\\n\") == \"1\\n1 2\\n2 1\\n1 3\\n2 3\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n2\\n\\n\") == \"2\\n2 1\\n1 2\\n1 3\\n2 3\\n\"",
        "num_ids_2": 134,
        "num_ids_4": 239
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n4 2\\n\"\n\nprint(\"2\\n4 2\\n\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n1 3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 11",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5''') == '11\\n'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4''') == '4\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\"\nassert solution(\"7\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt')) == '11'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\\n\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"\n",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Solution is incorrect. Expected {expected_output}, but got {solution(input_str)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed. Solution: {}, Expected Output: {}\".format(solution(input()), output())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution failed for input {input()}\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\\n\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"\"\"1 1\n1 9\n2 2\n2 13\n3 1\n3 12\"\"\"\n\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"\"\"1 5\n2 1\n2 9999999994\"\"\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 6) == \"1 1\"\nassert solution(2, 3) == \"1 5\"\nassert solution(2, 3) == \"2 1\"\nassert solution(2, 3) == \"2 9999999994\"",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n1 100 100\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\", \"Polycarp has guessed 3 positive integers a=3, b=6, c=5, and prints them in any order.\"\n\nassert solution(\"40 40 40 60\") == \"20 20 20\", \"Polycarp has guessed 4 positive integers a=40, b=40, c=40, and prints them in any order.\"\n\nassert solution(\"201 101 101 200\") == \"1 100 100\", \"Polycarp has guessed 3 positive integers a=201, b=101, c=101, and prints them in any order.\"",
        "num_ids_2": 110,
        "num_ids_4": 178
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\", \"Test 1\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\", \"Test 2\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\", \"Test 3\"",
        "num_ids_2": 61,
        "num_ids_4": 100
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n1 100 100\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"2 1 3\\n20 20 20\"\n\nassert solution(\"5 8 11 14\") == \"11 14 15\"\n\nassert solution(\"9 36 162 258\") == \"36 162 165\"",
        "num_ids_2": 85,
        "num_ids_4": 115
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3', \"Expected 2 1 3, but got {}\".format(solution('3 6 5 4'))\nassert solution('40 40 40 60') == '20 20 20', \"Expected 20 20 20, but got {}\".format(solution('40 40 40 60'))\nassert solution('201 101 101 200') == '1 100 100', \"Expected 1 100 100, but got {}\".format(solution('201 101 101 200'))",
        "num_ids_2": 102,
        "num_ids_4": 170
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n1 100 100\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n20 20 20\"\nassert solution(\"3 1 3 2 6\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR\\n\\n6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\nRBGRRBRGG') == 2\nassert solution('8\\nBBBGBRRR') == 2\nassert solution('13\\nBBRRRRGGGGGRR') == 6",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR\\n'\nassert solution('8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR') == '2\\nBRBGBRGR\\n'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG\\n'",
        "num_ids_2": 92,
        "num_ids_4": 123
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == \"2\\nRBGRGBRGR\\n\\n2\\nBRBGBRGR\\n\\n6\\nBGRBRBGBGBGRG\"\nassert solution(\"10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\") == \"3\\nRRRRRRRRRRRRRRRR\\n\\n3\\nRRRRRRRRRRRRRRRR\\n\\n3\\nRRRRRRRRRRRRRRRR\"\nassert solution(\"13\\nRRRRRRRRRRRRRRRR\\n\\n13\\nRRRRRRRRRRRRRRRR\\n\\n13\\nRRRRRRRRRRRRRRRR\") == \"6\\nBGRBRBGBGBGRG\\n\\n6\\nBGRBRBGBGBGRG\\n\\n6\\nBGRBRBGBGBGRG\"\nassert solution(\"10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\\n\\n10\\nRRRRRRRRRRRRRRRR\") == \"3\\nRRRRRRRRRRRRRRRR\\n\\n3\\nRRRRRRRRRRRRRRRR\\n\\n3\\nRRRRRRRRRRRRRRRR\"\nassert solution(\"14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\n14\\nRRRRRRRRRRRRRRRR\\n\\",
        "num_ids_2": 169,
        "num_ids_4": 400
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(Solution().diverse_garland(9, \"RBGRRBRGG\")) == \"2\"\nassert solution(Solution().diverse_garland(8, \"BBBGBRRR\")) == \"2\"\nassert solution(Solution().diverse_garland(13, \"BBRRRRGGGGGRR\")) == \"6\"",
        "num_ids_2": 49,
        "num_ids_4": 77
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9') == '2\\nRBGRGBRGR'\nassert solution('8') == '2\\nBRBGBRGR'\nassert solution('13') == '6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6 \"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4 \"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1 \"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9 \"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 51,
        "num_ids_4": 95
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\nfor i in range(len(input()) // 2):\n    arr = list(map(int, input().split()))\n    if len(arr) == n:\n        result = solution(arr)\n        print(result)\n        break\nelse:\n    print(\"No solution found\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == '\\n'.join(str(x) for x in [4, 2, 1]) # Test 4\nassert solution(str(input())) == '\\n'.join(str(x) for x in [2, 1]) # Test 2\nassert solution(str(input())) == '\\n'.join(str(x) for x in [1]) # Test 1\nassert solution(str(input())) == '\\n'.join(str(x) for x in []) # Test empty array",
        "num_ids_2": 65,
        "num_ids_4": 119
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\"\n",
        "num_ids_2": 66,
        "num_ids_4": 137
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"5 1\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('4 2') == 'No'\nassert solution('1 3') == 'No'\nassert solution('1 4') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('1 3') == 'Yes'\nassert solution('1 2') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 3\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 2\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"\nassert solution(\"7 3\") == \"No\"\nassert solution(\"6 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"\nassert solution(\"5 2\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"1 2\") == \"No\", \"The output should be No\"\nassert solution(\"1 3\") == \"No\", \"The output should be No\"\nassert solution(\"2 2\") == \"No\", \"The output should be No\"\nassert solution(\"3 3\") == \"No\", \"The output should be No\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"110\", \"Your code is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"100 5\") == \"55\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\", \"Input is incorrect\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\", \"Test failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"81 58\") == \"110\", \"The train fare is 81 yen. The train fare is 58 \u2044 2=29 yen with the 50% discount. Thus, it costs 110 yen to travel from Station A to Station C.\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"5\") == \"13\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"8\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"\n\nN = int(stdin.strip())",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"8\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\", \"Test 1: Shichi-Go-San will be celebrated.\"\nassert solution(\"3\\n\") == \"NO\\n\", \"Test 2: Takahashi's growth will not be celebrated.\"\nassert solution(\"4\\n\") == \"YES\\n\", \"Test 3: Takahashi's growth will be celebrated.\"\nassert solution(\"8\\n\") == \"NO\\n\", \"Test 4: Takahashi's growth will not be celebrated.\"\nassert solution(\"0\\n\") == \"NO\\n\", \"Test 5: Takahashi's growth will not be celebrated.\"\n\nsolution(\"5\\n\")\nsolution(\"3\\n\")\nsolution(\"4\\n\")\nsolution(\"8\\n\")\nsolution(\"0\\n\")",
        "num_ids_2": 63,
        "num_ids_4": 126
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"11\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"15\") == \"YES\"\nassert solution(\"20\") == \"NO\"\nassert solution(\"9\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n') == 'YES\\n'\nassert solution('4\\n') == 'NO\\n'\nassert solution('10\\n') == 'YES\\n'\nassert solution('8\\n') == 'NO\\n'\nassert solution('7\\n') == 'YES\\n'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES', \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"100\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(999) == 'ABC'\nprint('All tests passed')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(999) == 'ABC', 'Your solution is not correct. Please check the provided code.'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(999) == 'ABC'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\", \"Your solution is incorrect.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(999) == \"ABC\", \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"999\") == \"ABC\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"999\") == \"ABC\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"No solution.\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n-1\") == \"No solution.\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n14') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n16') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n20') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\",
        "num_ids_2": 542,
        "num_ids_4": 1027
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"2\\n3\\n5\\n7\\n9\\n13\") == \"Yay!\"\nassert solution(\"2\\n3\\n5\\n7\\n9\\n14\") == \"Yay!\"\nassert solution(\"2\\n3\\n5\\n7\\n9\\n10\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n2",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n\") == \"Yay!\"\n",
        "num_ids_2": 540,
        "num_ids_4": 540
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"No\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'Yay!'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n",
        "num_ids_2": 86,
        "num_ids_4": 1027
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n20\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n12\") == \"No pair of antennas that cannot communicate directly.\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n3\") == \"No pair of antennas that cannot communicate directly.\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\\n\") == \"No pair of antennas cannot communicate directly\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n\") == \"No pair of antennas cannot communicate directly\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\\n\") == \"No pair of antennas cannot communicate directly\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"No pair of antennas cannot communicate directly\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n16\\n\") == \"No pair of antennas cannot communicate directly\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n16\\n17\\n\") == \"No pair of antennas cannot communicate directly\"",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3200\") == \"pink\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\napple\") == \"red\"\nassert solution(\"2500\\ngrape\") == \"red\"\nassert solution(\"2700\\norange\") == \"green\"\nassert solution(\"2900\\nkiwi\") == \"green\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"100\\npink\") == \"red\"\nassert solution(\"101\\npink\") == \"red\"\nassert solution(\"102\\npink\") == \"red\"\nassert solution(\"3201\\npink\") == \"red\"\nassert solution(\"103\\npink\") == \"red\"\nassert solution(\"3202\\npink\") == \"red\"\nassert solution(\"3203\\npink\") == \"red\"\nassert solution(\"3204\\npink\") == \"red\"\nassert solution(\"3205\\npink\") == \"red\"\nassert solution(\"3206\\npink\") == \"red\"\nassert solution(\"3207\\npink\") == \"red\"\nassert solution(\"3208\\npink\") == \"red\"\nassert solution(\"3209\\npink\") == \"red\"\nassert solution(\"3210\\npink\") == \"red\"\nassert solution(\"3211\\npink\") == \"red\"\nassert solution(\"3212\\npink\") == \"red\"\nassert solution(\"3213\\npink\") == \"red\"\nassert solution(\"3214\\npink\") == \"red\"\nassert solution(\"3215\\npink\") == \"red\"\nassert solution(\"3216\\npink\") == \"red\"\nassert solution(\"3217\\npink\") == \"red\"\nassert solution(\"3218\\npink\") == \"red\"\nassert solution(\"3219\\npink\") == \"red\"\nassert solution(\"3220\\npink\") == \"red\"\nassert solution(\"3221\\npink\") == \"red\"\nassert solution(\"3222\\npink\") == \"red\"\nassert solution(\"3223\\npink\") == \"red\"\nassert solution(\"3224\\npink\") == \"red\"\nassert solution(\"3225\\npink\") == \"red\"\nassert solution(\"3226\\npink\") == \"red\"\nassert solution(\"3227\\npink\") == \"red\"\nassert solution(\"3228\\npink\") == \"red\"\nassert solution(\"3229\\npink\") == \"red\"\nassert solution(\"3230\\npink\") == \"red\"\nassert solution(\"3231\\npink\") == \"red\"\nassert solution(\"3232\\npink\") == \"red\"\nassert solution(\"3233\\npink\") == \"red\"\nassert solution(\"3234\\npink\") == \"red\"\nassert solution(\"3235\\npink\") == \"red\"\nassert solution(\"3236\\npink\") == \"red\"\nassert solution(\"3237\\npink\") == \"red\"\nassert solution(\"3238\\npink\") == \"red\"\nassert solution(\"3239\\npink\") == \"red\"\nassert solution(\"3240\\npink\") == \"red\"\nassert solution(\"3241\\npink\") == \"red\"\nassert solution(\"3242\\npink\") == \"red\"\nassert solution(\"3243\\npink\") == \"red\"\nassert solution(\"3244\\npink\") == \"red\"\nassert solution(\"3245\\npink\") == \"red\"\nassert solution(\"3246\\npink\") == \"red\"\nassert solution(\"3247\\npink\") == \"red\"\nassert solution(\"3248\\npink\") == \"red\"\nassert solution(\"3249\\npink\") == \"red\"\nassert solution(\"3250\\npink\") == \"red\"\nassert solution(\"3251\\npink\") == \"red\"\nassert solution(\"3252\\npink\") == \"red\"\nassert solution(\"3253\\npink\") == \"red\"\nassert solution(\"3254\\npink\") == \"red\"\nassert solution(\"3255\\npink\") == \"red\"\nassert solution(\"3256\\npink\") == \"red\"\nassert solution(\"3257\\npink\") == \"red\"\nassert solution(\"3258\\npink\") == \"red\"\nassert solution(\"325",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3200\\npink') == 'pink\\n'\nassert solution('2800\\npink') =='red\\n'\nassert solution('10\\npink') =='red\\n'\nassert solution('1\\npink') =='red\\n'\nassert solution('0\\npink') =='red\\n'",
        "num_ids_2": 36,
        "num_ids_4": 67
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3200\\npink\") == \"pink\\n\", \"Please provide the correct input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\\n\"\nassert solution(\"2800\\npink\\n\") == \"pink\\n\"\nassert solution(\"10\\nhello\\n\") == \"hello\\n\"\nassert solution(\"3000\\npink\\n\") == \"3000\\nred\\n\"\nassert solution(\"10000\\npink\\n\") == \"10000\\nred\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3200\\npink\") == \"pink\\na = 3200 is not less than 3200, so we print s = pink.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"1200\\npink\") == \"red\"\nassert solution(\"3200\\nink\") == \"pink\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3200\\npink') == 'pink'\n\nprint(solution('3200\\npink'))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1199\") == \"ABC\", \"The solution is incorrect. The expected output should be ABC.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"\nprint(\"Success: Test case passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"999\") == \"ABC\"\nassert solution(\"1200\") == \"ABC\"\nassert solution(\"1201\") == \"ABC\"\nassert solution(\"1300\") == \"ABC\"\nassert solution(\"1301\") == \"ABC\"\nassert solution(\"1399\") == \"ABC\"\nassert solution(\"1398\") == \"ABC\"\nassert solution(\"1397\") == \"ABC\"\nassert solution(\"1396\") == \"ABC\"\nassert solution(\"1395\") == \"ABC\"\nassert solution(\"1394\") == \"ABC\"\nassert solution(\"1393\") == \"ABC\"\nassert solution(\"1392\") == \"ABC\"\nassert solution(\"1391\") == \"ABC\"\nassert solution(\"1390\") == \"ABC\"\nassert solution(\"1389\") == \"ABC\"\nassert solution(\"1388\") == \"ABC\"\nassert solution(\"1387\") == \"ABC\"\nassert solution(\"1386\") == \"ABC\"\nassert solution(\"1385\") == \"ABC\"\nassert solution(\"1384\") == \"ABC\"\nassert solution(\"1383\") == \"ABC\"\nassert solution(\"1382\") == \"ABC\"\nassert solution(\"1381\") == \"ABC\"\nassert solution(\"1380\") == \"ABC\"\nassert solution(\"1379\") == \"ABC\"\nassert solution(\"1378\") == \"ABC\"\nassert solution(\"1377\") == \"ABC\"\nassert solution(\"1376\") == \"ABC\"\nassert solution(\"1375\") == \"ABC\"\nassert solution(\"1374\") == \"ABC\"\nassert solution(\"1373\") == \"ABC\"\nassert solution(\"1372\") == \"ABC\"\nassert solution(\"1371\") == \"ABC\"\nassert solution(\"1370\") == \"ABC\"\nassert solution(\"1369\") == \"ABC\"\nassert solution(\"1368\") == \"ABC\"\nassert solution(\"1367\") == \"ABC\"\nassert solution(\"1366\") == \"ABC\"\nassert solution(\"1365\") == \"ABC\"\nassert solution(\"1364\") == \"ABC\"\nassert solution(\"1363\") == \"ABC\"\nassert solution(\"1362\") == \"ABC\"\nassert solution(\"1361\") == \"ABC\"\nassert solution(\"1360\") == \"ABC\"\nassert solution(\"1359\") == \"ABC\"\nassert solution(\"1358\") == \"ABC\"\nassert solution(\"1357\") == \"ABC\"\nassert solution(\"1356\") == \"ABC\"\nassert solution(\"1355\") == \"ABC\"\nassert solution(\"1354\") == \"ABC\"\nassert solution(\"1353\") == \"ABC\"\nassert solution(\"1352\") == \"ABC\"\nassert solution(\"1351\") == \"ABC\"\nassert solution(\"1350\") == \"ABC\"\nassert solution(\"1349\") == \"ABC\"\nassert solution(\"1348\") == \"ABC\"\nassert solution(\"1347\") == \"ABC\"\nassert solution(\"1346\") == \"ABC\"\nassert solution(\"1345\") == \"ABC\"\nassert solution(\"1344\") == \"ABC\"\nassert solution(\"1343\") == \"ABC\"\nassert solution(\"1342\") == \"ABC\"\nassert solution(\"1341\") == \"ABC\"\nassert solution(\"1340\") == \"ABC\"\nassert solution(\"1339\") == \"ABC\"\nassert solution(\"1338\") == \"ABC\"\nassert solution(\"1337\") == \"ABC\"\nassert solution(\"1336\") == \"ABC\"\nassert solution(\"1335\") == \"ABC\"\nassert solution(\"1334\") == \"ABC\"\nassert solution(\"1333\") == \"ABC\"\nassert solution(\"1332\") == \"ABC\"\nassert solution(\"1331\") == \"ABC\"\nassert solution(\"1330\") == \"ABC\"\nassert solution(\"1329\") == \"ABC\"\nassert solution(\"1328\") == \"ABC\"\nassert solution(\"1327\") == \"ABC\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"991\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"10\") == \"10\"\nassert solution(\"123\") == \"123\"\nassert solution(\"111\") == \"991\"\nassert solution(\"9001\") == \"9001\"\nassert solution(\"1000000000\") == \"1000000000\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('119') == '991', \"Test case 1 failed\"\nassert solution('123') == '321', \"Test case 2 failed\"\nassert solution('12345') == '12345', \"Test case 3 failed\"\nassert solution('123456') == '123456', \"Test case 4 failed\"\nassert solution('1234567') == '1234567', \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 94
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"119\") == \"991\", \"The output is not correct\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"991\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"119\") == \"991\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('119') == '991'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbaac\\nac\\bccddaaf\\zzzzzzzzzz\") == \"abac\\nac\\bcdaf\\zzzzzz\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The given output is incorrect.\" for input, output in zip(stdin, output)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"abac\"\nassert solution(open('input.txt', 'r')) == \"ac\"\nassert solution(open('input.txt', 'r')) == \"bcdaf\"",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'abac'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"abac\", \"Test case 1 failed.\"\nassert solution(stdin) == \"ac\", \"Test case 2 failed.\"\nassert solution(stdin) == \"bcdaf\", \"Test case 3 failed.\"\nassert solution(stdin) == \"zzzzzz\", \"Test case 4 failed.\"\nassert solution(stdin) == \"zzzzzz\", \"Test case 5 failed.\"\nassert solution(stdin) == \"bcdaaf\", \"Test case 6 failed.\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"abac\", \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbaac\") == \"abac\", \"Alice guessed the secret string abac instead of the expected abac\"\nassert solution(\"ac\") == \"ac\", \"Alice guessed the secret string ac instead of the expected ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\", \"Alice guessed the secret string bccddaaf instead of the expected bccddaaf\"\n\nfor i in range(int(stdin)):\n    b = input()\n    assert solution(b) == b, \"Alice guessed the string {} instead of the expected string {}\".format(solution(b), b)",
        "num_ids_2": 53,
        "num_ids_4": 86
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"2\"\nassert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(5) == \"2\"\nassert solution(1) == \"0\"\nassert solution(2) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\n\nassert solution(\"1 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\") == \"0\"\n\nassert solution(\"1 10\\n1 20\\n1 30\\n1 40\\n1 50\\n1 60\") == \"1\"\n\nassert solution(\"1 10\\n10 20\\n100 30\\n1000 40\\n10000 50\\n100000 60\") == \"5\"",
        "num_ids_2": 100,
        "num_ids_4": 201
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input.txt', 'r')) == '5'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '333'\nassert solution(open('input.txt', 'r')) == '0'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n5\\n4\\n333\\n0\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\", \"Testcase 1 failed\"\nassert solution(\"1\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"0\\n\", \"Testcase 2 failed\"\nassert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\", \"Testcase 3 failed\"\nassert solution(\"1\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"0\\n\", \"Testcase 4 failed\"\nassert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 128,
        "num_ids_4": 256
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n5\\n4\\n333\\n0\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n13\\n100\\n123\\n92\\n46\") == \"2\\n5\\n4\\n333\\n0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 2\nassert solution(100) == 5\nassert solution(1000) == 4\nassert solution(10000) == 333\nassert solution(100000) == 0",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"2.666666666666667\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2.666666666666667', \"Testcase failed\"\nassert solution(stdin) == '2.666666666666667', \"Testcase failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == 2.666666666666667\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 4 1 2') == 2.666666666666667\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2.666666666666667\", \"Expected output: 2.666666666666667, but got: {}\".format(solution())",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 4 1 2\\n\") == \"2.666666666666667\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.666666666666667\\n\", \"Test Case 1 failed\"\nassert solution(input()) == \"2.666666666666667\\n\", \"Test Case 2 failed\"\nassert solution(input()) == \"2.666666666666667\\n\", \"Test Case 3 failed\"\nassert solution(input()) == \"2.666666666666667\\n\", \"Test Case 4 failed\"\nassert solution(input()) == \"2.666666666666667\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == 2.666666666666667\nassert solution(\"10 5\\n1 2 3 4\") == 3.0\nassert solution(\"5 2\\n1 2 3 4\") == 3.0\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == 7.0\nassert solution(\"5 3\\n1 2 3 4\") == 3.0\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\") == 3.0\nassert solution(\"5 2\\n1 2 3 4 5 6 7 8 9 10\") == 3.0\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == 34.0",
        "num_ids_2": 59,
        "num_ids_4": 118
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES'",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\" # Correct answer: Yes\nassert solution() == \"NO\" # Incorrect answer: No",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"",
        "num_ids_2": 235,
        "num_ids_4": 235
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"",
        "num_ids_2": 248,
        "num_ids_4": 248
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n4\\n2\\n1\\n3\\n1\\n4\\n2\\n1\\n5\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n2\\n2\\n1\\n1\\n4\\n2\\n2\\n1\\n3\\n1\\n4\\n2\\n2\\n1\\n5\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(6) == \"YES\"\n\nfrom typing import List\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"",
        "num_ids_2": 242,
        "num_ids_4": 484
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Expected 'bab', but got '{}'.\".format(solution(\"baabbb\"))\nassert solution(\"ooopppssss\") == \"oops\", \"Expected 'oops', but got '{}'.\".format(solution(\"ooopppssss\"))\nassert solution(\"z\") == \"z\", \"Expected 'z', but got '{}'.\".format(solution(\"z\"))",
        "num_ids_2": 64,
        "num_ids_4": 90
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test 1\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test 2\"\nassert solution(\"z\") == \"z\", \"Test 3\"",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"bab\"\nassert solution(open(\"example.txt\", \"r\").read()) == \"bab\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"oops\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test 1\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test 2\"\nassert solution(\"z\") == \"z\", \"Test 3\"",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"bab\" # Correct output: bab\n\nassert solution(input()) == \"oops\" # Correct output: oops\n\nassert solution(input()) == \"z\" # Correct output: z",
        "num_ids_2": 33,
        "num_ids_4": 48
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"bab\"\nassert solution(10) == \"oops\"\nassert solution(1) == \"z\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"bab\"\nassert solution(10) == \"oops\"\nassert solution(1) == \"z\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test failed\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test failed\"\nassert solution(\"z\") == \"z\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 127
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Output: {solution(stdin)}, Expected Output: {expected_output}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0\\n', \"Expected output 0, but got {}\".format(solution(stdin))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\nOutput\\n1\\n\\nInput\\n4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\nOutput\\n0\\n\\nInput\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\nOutput\\n0\\n\\nInput\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\nOutput\\n1\\n\\nInput\\n1 0\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\nOutput\\n2\\n\\n') == 'Output\\n1\\n\\n'\n",
        "num_ids_2": 300,
        "num_ids_4": 300
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\nBRB\\n\") == \"1\\nGRB\\n\"\nassert solution(stdin=\"7\\nRGBGRBB\\n\") == \"3\\nRGBRGBR\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)}!= {expected_output}\"\nprint(\"Test passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGBRGBRG\") == \"GRB\"\nassert solution(\"GB\") == \"GB\"\nassert solution(\"R\") == \"R\"\nassert solution(\"GRBGRBG\") == \"BR\"\nassert solution(\"BRGBRGB\") == \"B\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('BRB') == 'GRB'\nassert solution('RGBGRBB') == 'RGBRGBR'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBRB\") == 1\nassert solution(\"7\\nRGBGRBB\") == 3",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    2\n    10000 JPY\n    0.10000000 BTC\n    \"\"\"), \"Your solution is incorrect.\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"48000.0\"\nassert solution(input()) == \"48000.1\"\n\nfor i in range(int(input())):\n    x, u = list(map(float, input().split()))\n    if u == \"JPY\":\n        y = x\n    elif u == \"BTC\":\n        y = x / 380000.0\n    print(y)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.20000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n40000 JPY\\n0.40000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n40000 JPY\\n0.40000000 BTC\\n50000 JPY\\n0.50000000 BTC\") == \"138000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n40000 JPY\\n0.40000000 BTC\\n50000 JPY\\n0.50000000 BTC\\n100000 JPY\\n0.10000000 BTC\\n200000 JPY\\n0.20000000 BTC\\n200000 JPY\\n0.20000000 BTC\\n400000 JPY\\n0.40000000 BTC\\n500000 JPY\\n0.50000000 BTC\\n1000000 JPY\\n0.10000000 BTC\\n2000000 JPY\\n0.20000000 BTC\\n2000000 JPY\\n0.20000000 BTC\\n4000000 JPY\\n0.40000000 BTC\\n5000000 JPY\\n0.50000000 BTC\\n10000000 JPY\\n0.10000000 BTC\\n20000000 JPY\\n0.20000000 BTC\\n20000000 JPY\\n0.20000000 BTC\\n40000000 JPY\\n0.40000000 BTC\\n50000000 JPY\\n0.50000000 BTC\\n100000000 JPY\\n0.10000000 BTC\\n200000000 JPY\\n0.20000000 BTC\\n200000000 JPY\\n0.20000000 BTC\\n400000000 JPY\\n0.40000000 BTC\\n500000000 JPY\\n0.50000000 BTC\") == \"138000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n20000 JPY\\n0.20000000 BTC\\n40000 JPY\\",
        "num_ids_2": 98,
        "num_ids_4": 329
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n118000.0\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n118000.0\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n118000.0\\n38000.0\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n4\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n118000.0\\n38000.0\\n48000.1\\n'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n3\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n4\\n10000 JPY\\n0.10000000 BTC\\n5\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0\\n48000.1\\n118000.0\\n38000.0\\n48000.1\\n50000.0\\n'",
        "num_ids_2": 118,
        "num_ids_4": 327
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.09999999 BTC\\n\") == \"52000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n\") == \"52000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n10000 JPY\\n0.09999999 BTC\\n",
        "num_ids_2": 100,
        "num_ids_4": 1027
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\\n\") == \"57000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.01 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.01 BTC\\n10000 JPY\\n0.00000001 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.01 BTC\\n10000 JPY\\n0.00000001 BTC\\n10000 JPY\\n0.00000000 BTC\\n\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n\") == \"10000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.01 BTC\\n10000 JPY\\n0.00000001 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000 JPY\\n0.00000000 BTC\\n10000",
        "num_ids_2": 80,
        "num_ids_4": 214
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC') == '49000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC') == '50000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC') == '48000.0'",
        "num_ids_2": 120,
        "num_ids_4": 350
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"48000.0\"\n\nThe code checks the correctness of the solution by comparing the output with the expected output. The expected output is the sum of the Japanese yen and the bitcoins. The output is obtained by converting the bitcoins to Japanese yen and then adding them up. Therefore, the code should give the expected output.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '48000.0'  # expected output\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"",
        "num_ids_2": 80,
        "num_ids_4": 210
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"7 2\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3\\n'\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 2) == \"3\", \"The answer should be '3'.\"\nprint(\"All tests passed.\")\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"3\" # Trial 1",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3', 'The second car from the front of a 4-car train is the third car from the back.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"icpc\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"icpc\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 ip cc\") == \"icpc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nip cc\\n') == 'icpc', \"Test 1 failed\"\n\nassert solution('3\\nip\\n') == 'ip\\n', \"Test 2 failed\"\n\nassert solution('4\\nabc\\n') == 'abc\\n', \"Test 3 failed\"\n\nassert solution('5\\nhello\\nworld\\n') == 'helloworld\\n', \"Test 4 failed\"\n\nassert solution('6\\nabcde\\n') == 'abcd\\n', \"Test 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"ABA\") == \"Yes\"\nassert solution(stdin=\"BAB\") == \"Yes\"\nassert solution(stdin=\"CAB\") == \"No\"\nassert solution(stdin=\"ABB\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\", \"Sample Input: ABA\\nSample Output: Yes\"\nassert solution(\"ABC\") == \"No\", \"Sample Input: ABC\\nSample Output: No\"\nassert solution(\"ABAB\") == \"Yes\", \"Sample Input: ABAB\\nSample Output: Yes\"\nassert solution(\"BA\") == \"No\", \"Sample Input: BA\\nSample Output: No\"\nassert solution(\"BCA\") == \"No\", \"Sample Input: BCA\\nSample Output: No\"\nassert solution(\"ABCAB\") == \"Yes\", \"Sample Input: ABCAB\\nSample Output: Yes\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABAAB\") == \"Yes\\n\"\nassert solution(\"ABB\") == \"No\\n\"\nassert solution(\"ABBA\") == \"No\\n\"\nassert solution(\"BAAB\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"AAA\") == \"No\\n\"\nassert solution(\"ABBB\") == \"No\\n\"\nassert solution(\"BBA\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAC\") == \"No\"\nassert solution(\"ABCB\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\", \"Solution should return 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\", \"The maximum number of consecutive rainy days in the period should be 2.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == \"2\"\nprint(\"All tests pass!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\\n\"\nassert solution(\"RRRR\") == \"3\\n\"\nassert solution(\"RRRRRRRRRR\") == \"4\\n\"\nassert solution(\"RRRRRRRRRRRR\") == \"5\\n\"\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRRRR\") == \"4\"\nassert solution(\"RRRRRRRR\") == \"6\"\nassert solution(\"RRRRRRRRRRRR\") == \"8\"",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\\n\"\nassert solution(\"RRR\") == \"0\\n\"\nassert solution(\"RRRRR\") == \"2\\n\"\nassert solution(\"RRRRRRRR\") == \"6\\n\"\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\", \"The solution should return '2'.\"\nassert solution(\"RRRRRRRRR\") == \"3\", \"The solution should return '3'.\"\nassert solution(\"RRRRR\") == \"1\", \"The solution should return '1'.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 43,
        "num_ids_4": 64
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"3\"\nassert solution(\"RRRRRR\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"7 8 9\") == \"9 8 7\"\nassert solution(\"10 11 12\") == \"12 11 10\"\nassert solution(\"13 14 15\") == \"15 14 13\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3 1 2\\n3 1 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\", \"Error: Incorrect output\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"\nassert solution(\"4 5 6\") == \"6 4 5\\n\"\nassert solution(\"7 8 9\") == \"9 7 8\\n\"\nassert solution(\"10 11 12\") == \"12 10 11\\n\"\nassert solution(\"13 14 15\") == \"15 13 14\\n\"\n\nassert solution(\"21 22 23\") == \"23 21 22\\n\"\nassert solution(\"24 25 26\") == \"26 24 25\\n\"\nassert solution(\"27 28 29\") == \"29 27 28\\n\"\nassert solution(\"30 31 32\") == \"32 30 31\\n\"\nassert solution(\"33 34 35\") == \"35 33 34\\n\"\n\nassert solution(\"41 42 43\") == \"43 41 42\\n\"\nassert solution(\"44 45 46\") == \"46 44 45\\n\"\nassert solution(\"47 48 49\") == \"49 47 48\\n\"\nassert solution(\"50 51 52\") == \"52 50 51\\n\"\nassert solution(\"53 54 55\") == \"55 53 54\\n\"\n\nassert solution(\"61 62 63\") == \"63 61 62\\n\"\nassert solution(\"64 65 66\") == \"66 64 65\\n\"\nassert solution(\"67 68 69\") == \"69 67 68\\n\"\nassert solution(\"70 71 72\") == \"72 70 71\\n\"\nassert solution(\"73 74 75\") == \"75 73 74\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 6 7\") == \"7 5 6\"\nassert solution(\"8 9 10\") == \"10 8 9\"\nassert solution(\"11 12 13\") == \"13 11 12\"\nassert solution(\"14 15 16\") == \"16 14 15\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\"\nprint(\"Test passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"100\\n\", \"Incorrect Output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 100\") == \"100\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '100', \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 100\") == \"100\", \"Output should be 100, but it is {}\".format(solution(\"30 100\"))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"100\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 100\") == \"100\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"20 500\") == \"2500\"\nassert solution(\"19 1000\") == \"2000\"\nassert solution(\"18 1500\") == \"2500\"\nassert solution(\"17 2000\") == \"3000\"\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+++-++') == '2'\nassert solution('+-++--+') == '2'\nassert solution('+-++----') == '2'\nassert solution('+-++------') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output is not correct. Received: {solution(input())}, Expected: {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-++\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+++-\") == \"2\"\nassert solution(\"+++++\") == \"3\"\nassert solution(\"++++\") == \"2\"\nassert solution(\"+++\") == \"2\"\nassert solution(\"+++--\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/01/01\") == \"TBD\"\nassert solution(\"1999/01/01\") == \"TBD\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2019/13/31\") == \"TBD\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/01\") == \"TBD\"\nassert solution(\"2018/04/30\") == \"TBD\"\nassert solution(\"2021/05/01\") == \"TBD\"\nassert solution(\"2019/04/31\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"The function should return 'Heisei' if the date represented by S is not later than April 30, 2019, and print TBD otherwise.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2018/01/01\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/01/01\") == \"TBD\"\nassert solution(\"2019/03/31\") == \"TBD\"\nassert solution(\"2019/05/01\") == \"TBD\"\nassert solution(\"2019/01/02\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"The function should return Heisei for the given input.\"\n\nassert solution(\"2019/05/01\") == \"TBD\", \"The function should return TBD for the given input.\"\n\nassert solution(\"2020/04/30\") == \"TBD\", \"The function should return TBD for the given input.\"\n\nassert solution(\"1999/04/30\") == \"TBD\", \"The function should return TBD for the given input.\"\n\nassert solution(\"2019/13/31\") == \"TBD\", \"The function should return TBD for the given input.\"",
        "num_ids_2": 66,
        "num_ids_4": 130
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(18) == 14\nassert solution(10) == 9\nassert solution(3) == 3",
        "num_ids_2": 21,
        "num_ids_4": 30
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\"\n",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\"",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(18) == \"14\"\nassert solution(10) == \"9\"\nassert solution(1337) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3 # Solution 3",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337\\n') == '3'",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 2\\n1 2 3 2 1 3 2\\n\"\n) == \"2\\n2 1\\n\"\n\nassert solution(\n    \"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\"\n) == \"3\\n1 3 2\\n\"\n\nassert solution(\n    \"5 3\\n1 2 3 4 5 6 7\\n\"\n) == \"3\\n1 2 3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"\nassert solution(\"5 3\\n1 2 3 4\") == \"3\\n1 2 3\"\nassert solution(\"10 10\\n1 1 2 3 4 5 6 7 8 9 10\") == \"10\"",
        "num_ids_2": 73,
        "num_ids_4": 140
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n2 1\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Error in the solution. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"10 3\\n2 1 2 1 2 3 3 2\\n\") == \"2\\n3 1 \\n\"\nassert solution(\"10 4\\n1 2 3 2 3 1 2 3 2\\n\") == \"3\\n2 3 1 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 163
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['1', '-1', '3', '2']",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('123') == '1\\n'\nassert solution('5 4') == '1\\n'\nassert solution('2 4 8 2 4') == '1\\n'\nassert solution('8') == '1\\n'\nassert solution('5') == '1\\n'\nassert solution('14') == '3\\n'\nassert solution('10') == '2\\n'",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1\\n-1\\n3\\n2\\n\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n2\") == \"1\\n3\\n2\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['1\\n-1\\n3\\n2\\n']",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()}, expected output {expected}, but got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, \"The solution provided is not correct. Please check the given code.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the correctness of solution\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}, got: {solution(input)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9') == '0'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7') == 21\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == 0",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '21\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\"\nassert solution(\"2 1\\n2 1\\n\") == \"2\"\n",
        "num_ids_2": 145,
        "num_ids_4": 164
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"21\\n\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"21\"\nassert solution() == \"0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n3\\n1\\n2\\n2\\n2\\n\") == \"21\"\nassert solution(\"3\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\"",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '21'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2\\n2 2 1\"\nassert solution(4) == \"0\\n\"\nassert solution(5) == \"2\\n1 2 3\"\nassert solution(10) == \"1\\n1 1 1 1\"",
        "num_ids_2": 29,
        "num_ids_4": 66
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n3\\n2 8 10\\n4\\n1 1 1 1\") == \"2\\n1 1 1 1\"\nassert solution(\"3\\n2 8 10\\n4\\n1 1 1 1\") == \"2\\n2 2 1 2\\n2 3 2 2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 101,
        "num_ids_4": 120
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"0\\n\"\nassert solution(2) == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(3) == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(4) == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(5) == \"2\\n1 2 3\\n1 1 2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 88
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2\nassert solution(4) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\\n2 2 1\\n2 3 2\"\nassert solution(4) == \"0\"\n\nfrom typing import List\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 75,
        "num_ids_4": 110
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 0\nassert solution(6) == 2\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(str(input())) == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(str(input())) == \"0\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 70
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1\\n2\\n0\\n1\\n1\\n1'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\n\nassert solution(\"2\\n1\\n0\\n0\\n1\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 0\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '1\\n2\\n0\\n1\\n1\\n1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '1'\nassert solution() == '1'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1' or solution(input()) == '2' or solution(input()) == '0', \"Invalid input\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution() == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution() == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution() == '1\\n2\\n0\\n1\\n1\\n1'\nassert solution() == '1\\n2\\n0\\n1\\n1\\n1'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"3\n1 3 5 \n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test {index + 1} failed: expected output is '{expected_output}', but got '{solution(stdin)}'.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"5 1\") == \"3\\n1 4 5\\n\"\nassert solution(r\"6 1\") == \"4\\n1 3 5 6\\n\"\nassert solution(r\"7 2\") == \"3\\n4 6 7\\n\"\nassert solution(r\"7 8\") == \"3\\n4 7 8\\n\"\nassert solution(r\"8 9\") == \"3\\n4 8 9\\n\"\nassert solution(r\"9 11\") == \"3\\n4 9 11\\n\"\nassert solution(r\"7 9\") == \"4\\n1 3 5 6\\n\"\nassert solution(r\"5 1\") == \"3\\n1 4 5\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\n",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30\\n31\\n10'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"30\\n31\\n10\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30\\n31\\n10'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"30\"\nassert solution(stdin) == \"31\"\nassert solution(stdin) == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"output.txt\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"30\\n\"\nassert solution(\"4\") == \"31\\n\"\nassert solution(\"3\") == \"30\\n\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution\n\nfrom itertools import combinations",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\\n') == '30\\n31\\n10'\nassert solution('10\\n6\\n30\\n15\\n3\\n4 6\\n') == '31\\n30\\n10'\nassert solution('3\\n4\\n3 4 6\\n2\\n3 4 6\\n3\\n3 4 6\\n') == '30\\n30\\n10'",
        "num_ids_2": 101,
        "num_ids_4": 152
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"4\\n2\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n1\\n2\\n1\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '2\\n1\\n2\\n1\\n'\nassert solution(2) == '2\\n'\nassert solution(1) == '2\\n'\nassert solution(42) == '2\\n1\\n2\\n1\\n'",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''2\n1\n2\n1'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES\\nNO\\nNO\\nYES'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"NO\"\nassert solution(\"3 3 5 18\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=f) == expected, f\"Test case {i+1} failed\" for i, (a, b, n, S) in enumerate(test_cases)\nprint(\"YES\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 'YES'\nassert solution(5) == 'NO'\nassert solution(6) == 'NO'\nassert solution(7) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 'YES', 'Your solution is incorrect'\nassert solution(5) == 'NO', 'Your solution is incorrect'\nassert solution(6) == 'NO', 'Your solution is incorrect'\nassert solution(7) == 'YES', 'Your solution is incorrect'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\\nYES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 156
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\nYES\\n1\\n3\\n4\\n5 4 3 1\\nYES\\n0\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3\\n4\\n5 4 3 1\\n\"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 139
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution for input '{input()}' is '{solution(input())}' but expected '{output()}'\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\nYES\\n1\\n3\\n4\\n5 4 3 1\\nYES\\n0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution(input()) == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n0\"",
        "num_ids_2": 60,
        "num_ids_4": 83
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"YES\\n1\\n3 \\n4\\n5 4 3 1 \") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"NO\\n\\n\\n\\n\\n\") == \"NO\"\nassert solution(\"YES\\n0\\n0\\n0\\n0\") == \"YES\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 100,
        "num_ids_4": 154
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\nassert solution(\"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\"\nassert solution(\"YES\\n0\\n1 2 3 4 \\n\") == \"YES\\n0\\n1 2 3 4 \\n\"\nassert solution(\"NO\\n1\\n4 \\n3\\n2\\n5\\n10\\n\") == \"NO\\n1\\n4 \\n3\\n2\\n5\\n10\\n\"\nassert solution(\"YES\\n0\\n0 0 0 0 \\n\") == \"YES\\n0\\n0 0 0 0 \\n\"",
        "num_ids_2": 108,
        "num_ids_4": 198
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n''') == 18\n\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == 8\n\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == -1",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"8\"\nassert solution(b\"\\n5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\") == \"8\"\nassert solution(b\"\\n8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(b\"\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"-1\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 93,
        "num_ids_4": 215
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '18'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '-1'",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"-1\"\n",
        "num_ids_2": 116,
        "num_ids_4": 163
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == -1",
        "num_ids_2": 116,
        "num_ids_4": 164
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\\n\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\\n\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"-1\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 169
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"18\"\nassert solution() == \"8\"\nassert solution() == \"-1\"",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"2\n6\n-1\n7\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '...Your solution...'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n6\\n-1\\n7\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"6\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"-1\"",
        "num_ids_2": 134,
        "num_ids_4": 196
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\", \"Test 1\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\", \"Test 2\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\", \"Test 3\"",
        "num_ids_2": 82,
        "num_ids_4": 140
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5\\n', \"Output: '5', expected: '5'\\n\"\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0\\n', \"Output: '0', expected: '0'\\n\"\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3\\n', \"Output: '3', expected: '3'\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 170
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n4 8 15 16 23') == '5'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42') == '0'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42') == '3'",
        "num_ids_2": 68,
        "num_ids_4": 119
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect, expected {output()}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5\\n'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0\\n'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3\\n'\n\nsolution('5\\n4 8 15 16 23\\n')\nsolution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n')\nsolution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n')",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5', 'Solution is not correct.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\"",
        "num_ids_2": 68,
        "num_ids_4": 119
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution does not match. Expected {output}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 192,
        "num_ids_4": 192
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0\\n2\\n2\\n92\\n87654322\\n9150'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '92'\nassert solution(stdin) == '87654322'\nassert solution(stdin) == '9150'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\", \"Example\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\n\nassert solution(input()) == \"3\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"92\"\n\nassert solution(input()) == \"87654322\"\n\nassert solution(input()) == \"9150\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0\\n2\\n2\\n92\\n87654322\\n9150\\n'\n\nsolution = '''def solution(stdin: str) -> str:\n    a, b = map(int, stdin.split())\n    moves = 0\n    while a!= b:\n        if a > b:\n            a += 1\n        else:\n            a -= 1\n        moves += 1\n    return str(moves)'''\n\nassert solution(stdin) == '0\\n2\\n2\\n92\\n87654322\\n9150\\n'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} does not match.\" for i, (a, b) in enumerate(input().split()) for output in [\"0\", \"3\", \"2\", \"92\", \"87654322\", \"9150\"][::-1]",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"0\"\nassert solution(6) == \"3\"\nassert solution(10) == \"2\"\nassert solution(20) == \"92\"\nassert solution(2000) == \"87654322\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test case {t} has an incorrect output: {solution(input())}!= {output}\" for t, (input, output) in enumerate(test_cases)",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12339\"\nassert solution() == \"0\"\nassert solution() == \"15\"\nassert solution() == \"54306\"\nassert solution() == \"999999995\"\nassert solution() == \"185\"\nassert solution() == \"999999998\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"12339\\n\"\nassert solution(5) == \"0\\n\"\nassert solution(5) == \"15\\n\"\nassert solution(5) == \"54306\\n\"\nassert solution(5) == \"999999995\\n\"\nassert solution(5) == \"185\\n\"\nassert solution(5) == \"999999998\\n\"\n\nprint(\"All test cases pass.\")",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"12339\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'\nprint('All test cases passed!')",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\"\nfor i in range(t):\n    x, y, n = map(int, input().split())\n    assert 0 <= x <= 10**9 and 0 <= y < x and y <= n <= 10**9, f\"Test case {i+1} failed\"\n    k = -1\n    while True:\n        k += 1\n        if (k % x) == y:\n            break\n    print(k)\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == solution(solution)  # idempotent solution",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test cases failed\"\n\ninput_data = [int(x) for x in input().split()]\nn, k = input_data\n\nd_list = list(map(int, input().split()))\n\ntotal_candy = sum(d_list)\n\ncandy_per_box = total_candy // n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 93
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"",
        "num_ids_2": 35,
        "num_ids_4": 47
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6\\n', \"Incorrect output\"\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8\\n', \"Incorrect output\"\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4\\n', \"Incorrect output\"",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The solution provided does not match the expected output.\\n\\nInput: {input()}\\nExpected Output: {expected_output}\\n\\nSolution: {solution(input())}\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6\\n'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8\\n'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nABC\\n\") == \"aBC\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\nABC') == 'aBC'\nassert solution('2 1\\nABC') == 'abc'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"aBC\", \"Your code is not correct.\"\nprint(\"Test passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'aBC', \"The output should be 'aBC'\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"apple 90\\nbanana 50\\norange 75\\npapaya 85\\nbanana 70\\nbanana 95\\nbanana 80\") == \"2\\n5\\n1\"\nassert solution(\"pepsi 85\\nsweet 95\\npepper 90\\npork 90\\npepper 70\\npepper 60\\npork 80\\npepper 85\\npepper 65\\npork 75\") == \"3\\n6\\n5\\n2\\n4\"\nassert solution(\"restaurant 1\\nrestaurant 2\\nrestaurant 3\") == \"1\\n2\\n3\"\nassert solution(\"restaurant 4\\nrestaurant 5\\nrestaurant 6\\nrestaurant 7\\nrestaurant 8\\nrestaurant 9\\nrestaurant 10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"",
        "num_ids_2": 130,
        "num_ids_4": 243
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"banana 10\\nbanana 30\\nbanana 50\\nbanana 70\\napple 50\\nbanana 80\\nbanana 90\\ngrape 50\\nbanana 100\") == \"4\\n5\\n2\\n3\\n6\\n7\"\nassert solution(\"apple 100\\nbanana 50\\nbanana 20\\nbanana 30\\nbanana 70\\nbanana 15\\nbanana 40\\nbanana 80\\nbanana 90\\nbanana 100\") == \"1\\n2\\n3\\n6\\n4\\n5\\n8\\n7\\n9\\n10\"\nassert solution(\"chicken 70\\nbeef 50\\nchicken 60\\nbacon 50\\nbeef 60\\nbacon 70\\nbeef 70\\nbacon 80\\nbacon 90\\nbacon 100\\nbacon 110\\nbacon 120\\nbacon 130\\nbacon 140\\nbacon 150\\nbacon 160\\nbacon 170\\nbacon 180\\nbacon 190\\nbacon 200\") == \"3\\n5\\n4\\n1\\n2\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\"\nassert solution(\"banana 90\\nbanana 80\\nbanana 70\\nbanana 60\\nbanana 50\\nbanana 40\\nbanana 30\\nbanana 20\\nbanana 10\\nbanana 100\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\"\nassert solution(\"orange 10\\norange 30\\norange 50\\norange 70\\noth 50\\noth 30\\noth 70\\noth 90\\noth 110\\noth 130\\noth 150\\noth 170\\noth 190\\noth 210\\noth 230\\noth 250\\noth 270\\noth 290\\noth 310\\noth 330\\noth 350\\noth 370\\noth 390\\noth 410\\noth 430\\noth 450\\noth 470\\noth 490\\noth 510\\noth 530\\noth 550\\noth 570\\noth 590\\noth 610\\noth 630\\noth 650\\noth 670\\noth 690\\noth 710\\noth 730\\noth 750\\noth 770\\noth 790\\noth 810\\noth 830\\noth 850\\noth 870\\noth 890\\noth 910\\noth 930\\noth 950\\noth 970\\noth 990\") == \"4\\n5\\n2\\n3\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n",
        "num_ids_2": 155,
        "num_ids_4": 471
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 900\") == \"No\"\nassert solution(\"4 900\") == \"No\"\nassert solution(\"5 900\") == \"No\"\nassert solution(\"6 900\") == \"No\"\nassert solution(\"7 900\") == \"No\"\nassert solution(\"8 900\") == \"No\"\nassert solution(\"9 900\") == \"No\"\nassert solution(\"10 900\") == \"No\"\nassert solution(\"11 900\") == \"Yes\"\nassert solution(\"12 900\") == \"No\"\nassert solution(\"13 900\") == \"No\"\nassert solution(\"14 900\") == \"No\"\nassert solution(\"15 900\") == \"No\"\nassert solution(\"16 900\") == \"No\"\nassert solution(\"17 900\") == \"No\"\nassert solution(\"18 900\") == \"No\"\nassert solution(\"19 900\") == \"No\"\nassert solution(\"20 900\") == \"No\"\nassert solution(\"21 900\") == \"No\"\nassert solution(\"22 900\") == \"No\"\nassert solution(\"23 900\") == \"No\"\nassert solution(\"24 900\") == \"No\"\nassert solution(\"25 900\") == \"No\"\nassert solution(\"26 900\") == \"No\"\nassert solution(\"27 900\") == \"No\"\nassert solution(\"28 900\") == \"No\"\nassert solution(\"29 900\") == \"No\"\nassert solution(\"30 900\") == \"No\"\nassert solution(\"31 900\") == \"No\"\nassert solution(\"32 900\") == \"No\"\nassert solution(\"33 900\") == \"No\"\nassert solution(\"34 900\") == \"No\"\nassert solution(\"35 900\") == \"No\"\nassert solution(\"36 900\") == \"No\"\nassert solution(\"37 900\") == \"No\"\nassert solution(\"38 900\") == \"No\"\nassert solution(\"39 900\") == \"No\"\nassert solution(\"40 900\") == \"No\"\nassert solution(\"41 900\") == \"No\"\nassert solution(\"42 900\") == \"No\"\nassert solution(\"43 900\") == \"No\"\nassert solution(\"44 900\") == \"No\"\nassert solution(\"45 900\") == \"No\"\nassert solution(\"46 900\") == \"No\"\nassert solution(\"47 900\") == \"No\"\nassert solution(\"48 900\") == \"No\"\nassert solution(\"49 900\") == \"No\"\nassert solution(\"50 900\") == \"No\"\nassert solution(\"51 900\") == \"No\"\nassert solution(\"52 900\") == \"No\"\nassert solution(\"53 900\") == \"No\"\nassert solution(\"54 900\") == \"No\"\nassert solution(\"55 900\") == \"No\"\nassert solution(\"56 900\") == \"No\"\nassert solution(\"57 900\") == \"No\"\nassert solution(\"58 900\") == \"No\"\nassert solution(\"59 900\") == \"No\"\nassert solution(\"60 900\") == \"No\"\nassert solution(\"61 900\") == \"No\"\nassert solution(\"62 900\") == \"No\"\nassert solution(\"63 900\") == \"No\"\nassert solution(\"64 900\") == \"No\"\nassert solution(\"65 900\") == \"No\"\nassert solution(\"66 900\") == \"No\"\nassert solution(\"67 900\") == \"No\"\nassert solution(\"68 900\") == \"No\"\nassert solution(\"69 900\") == \"No\"\nassert solution(\"70 900\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 500\") == \"No\"\nassert solution(\"4 1000\") == \"Yes\"\nassert solution(\"2 500\") == \"No\"\nassert solution(\"1 2000\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 900\\n\") == \"Yes\\n\"\nassert solution(stdin=\"1 10\\n\") == \"No\\n\"\nassert solution(stdin=\"3 500\\n\") == \"No\\n\"\nassert solution(stdin=\"5 1000000\\n\") == \"Yes\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 500\") == \"No\"\nassert solution(\"2 500\") == \"Yes\"\nassert solution(\"3 200\") == \"No\"\nassert solution(\"1 100\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 100\") == \"No\"\nassert solution(\"5 500\") == \"No\"\nassert solution(\"3 1000\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"5 100\") == \"No\"\nassert solution(\"1000 2000\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"2 500\") == \"No\\n\"\nassert solution(\"3 100\") == \"No\\n\"\nassert solution(\"4 10\") == \"Yes\\n\"\nassert solution(\"5 1000\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 1000\") == \"No\"\nassert solution(\"5 100\") == \"No\"\nassert solution(\"5 50\") == \"Yes\"\nassert solution(\"1 100\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 100\") == \"No\"\nassert solution(\"3 500\") == \"Yes\"\nassert solution(\"3 400\") == \"No\"\nassert solution(\"4 1000\") == \"Yes\"\nassert solution(\"4 500\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Your code is incorrect. Please check the sample input and output.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.1458333333\"\nassert solution(\"4 10\") == \"0.0291666666\"\nassert solution(\"2 10\") == \"0.0741666667\"\nassert solution(\"5 10\") == \"0.0058333333\"\nassert solution(\"6 10\") == \"0.0\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"Input should be 3 10\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"Solution should return 0.145833333333\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"4 1\") == \"0.0\"\nassert solution(\"5 1\") == \"0.0\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"10 10\") == \"1.0\"\nassert solution(\"11 10\") == \"0.0\"",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\") == \"0.1458333333\"\nassert solution(\"4 10\") == \"0.0\"\nassert solution(\"5 10\") == \"0.0\"\nassert solution(\"6 10\") == \"0.1458333333\"\nassert solution(\"7 10\") == \"0.0\"\nassert solution(\"8 10\") == \"0.0\"\nassert solution(\"9 10\") == \"0.0\"\nassert solution(\"10 10\") == \"0.0\"\nassert solution(\"11 10\") == \"0.0\"\nassert solution(\"12 10\") == \"0.0\"\nassert solution(\"13 10\") == \"0.0\"\nassert solution(\"14 10\") == \"0.0\"\nassert solution(\"15 10\") == \"0.0\"\nassert solution(\"16 10\") == \"0.0\"\nassert solution(\"17 10\") == \"0.0\"\nassert solution(\"18 10\") == \"0.0\"\nassert solution(\"19 10\") == \"0.0\"\nassert solution(\"20 10\") == \"0.0\"\nassert solution(\"21 10\") == \"0.0\"\nassert solution(\"22 10\") == \"0.0\"\nassert solution(\"23 10\") == \"0.0\"\nassert solution(\"24 10\") == \"0.0\"\nassert solution(\"25 10\") == \"0.0\"\nassert solution(\"26 10\") == \"0.0\"\nassert solution(\"27 10\") == \"0.0\"\nassert solution(\"28 10\") == \"0.0\"\nassert solution(\"29 10\") == \"0.0\"\nassert solution(\"30 10\") == \"0.0\"\nassert solution(\"31 10\") == \"0.0\"\nassert solution(\"32 10\") == \"0.0\"\nassert solution(\"33 10\") == \"0.0\"\nassert solution(\"34 10\") == \"0.0\"\nassert solution(\"35 10\") == \"0.0\"\nassert solution(\"36 10\") == \"0.0\"\nassert solution(\"37 10\") == \"0.0\"\nassert solution(\"38 10\") == \"0.0\"\nassert solution(\"39 10\") == \"0.0\"\nassert solution(\"40 10\") == \"0.0\"\nassert solution(\"41 10\") == \"0.0\"\nassert solution(\"42 10\") == \"0.0\"\nassert solution(\"43 10\") == \"0.0\"\nassert solution(\"44 10\") == \"0.0\"\nassert solution(\"45 10\") == \"0.0\"\nassert solution(\"46 10\") == \"0.0\"\nassert solution(\"47 10\") == \"0.0\"\nassert solution(\"48 10\") == \"0.0\"\nassert solution(\"49 10\") == \"0.0\"\nassert solution(\"50 10\") == \"0.0\"\nassert solution(\"51 10\") == \"0.0\"\nassert solution(\"52 10\") == \"0.0\"\nassert solution(\"53 10\") == \"0.0\"\nassert solution(\"54 10\") == \"0.0\"\nassert solution(\"55 10\") == \"0.0\"\nassert solution(\"56 10\") == \"0.0\"\nassert solution(\"57 10\") == \"0.0\"\nassert solution(\"58 10\") == \"0.0\"\nassert solution(\"59 10\") == \"0.0\"\nassert solution(\"60 10\") == \"0.0\"\nassert solution(\"61 10\") == \"0.0\"\nassert solution(\"62 10\") == \"0.0\"\nassert solution(\"63 10\") == \"0.0\"\nassert solution(\"64 10\") == \"0.0\"\nassert solution(\"65 10\") == \"0.0\"\nassert solution(\"66 1",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.1458333333\\n\", \"Test case 1 failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"0\"\nassert solution(\"TUE\") == \"1\"\nassert solution(\"WED\") == \"2\"\nassert solution(\"THU\") == \"3\"\nassert solution(\"FRI\") == \"4\"\nassert solution(\"SAT\") == \"5\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Expected: 1\\nGot: \" + solution(\"SAT\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SAT\") == \"1\", \"Expected output is 1, but got {}\".format(solution(\"SAT\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\", \"Sample Input should output '1'.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Sample Input and Output are not matched.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") == 5\nassert solution(\"MON\") == 1\nassert solution(\"WED\") == 2\nassert solution(\"THU\") == 3\nassert solution(\"TUE\") == 3\nassert solution(\"WED\") == 2\nassert solution(\"SUN\") == 1\nassert solution(\"SAT\") == 1\nassert solution(\"FRI\") ==",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"3 100 30\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"2 100 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"4 50 100\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"2 50 150\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"1 1000 10000\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 131,
        "num_ids_4": 263
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\n\nfrom typing import List",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"3 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"4 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"5 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"6 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"7 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"8 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"9 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"10 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 130,
        "num_ids_4": 260
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\nprint('All test cases passed.')",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"2 100 200\") == \"300\\n500\\n900\\n1700\\n3300\\n6500\\n12900\\n25700\\n51300\\n102500\\n\"\nassert solution(\"3 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"3 100 200\") == \"300\\n500\\n900\\n1700\\n3300\\n6500\\n12900\\n25700\\n51300\\n102500\\n\"\nassert solution(\"4 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"4 100 200\") == \"300\\n500\\n900\\n1700\\n3300\\n6500\\n12900\\n25700\\n51300\\n102500\\n\"",
        "num_ids_2": 146,
        "num_ids_4": 292
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\\n5\\n1 3 2 1 4\\n\\n3\\n4 1 2\\n\\n0\") == \"5\\n4\"\nassert solution(\"5\\n1 3 1 1 4\\n\\n5\\n1 3 2 1 4\\n\\n3\\n4 1 2\\n\\n\") == \"4\"\nassert solution(\"3\\n4 1 2\\n\\n\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 131
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\") == \"0\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Please provide the correct output.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"\n\nfor _ in range(2):\n    print(solution(input()))",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {output}, Expected: {output}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 1 1 4') == '5\\n'\nassert solution('5\\n1 3 2 1 4') == '4\\n'\nassert solution('3\\n4 1 2') == '0\\n'",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 1 1 4') == '5\\n'\nassert solution('5\\n1 3 2 1 4') == '4\\n'\nassert solution('3\\n4 1 2') == '0\\n'",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"5\\n\"\nassert solution(\"5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"5\\n\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\\n\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\\n\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\\n\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 144
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"YES\\n3 2 1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES\\n3 2 1'\nassert solution(input()) == 'YES\\n100 100 100'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES\\n1 1 1000000000'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 3, 2, 3, 100, 100, 100, 50, 49, 49, 10, 30, 20, 1, 1000000000, 1000000000) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(5, 100, 100, 100, 50, 49, 49, 10, 30, 20, 1, 1000000000, 1000000000) == \"YES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(5, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000) == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 247,
        "num_ids_4": 393
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"NO\"\nassert solution(2) == \"YES\\n2 2 2\"\nassert solution(3) == \"YES\\n2 1 2\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"YES\\n2 1 2\"\nassert solution(6) == \"YES\\n3 3 1\"\nassert solution(7) == \"YES\\n2 2 2\"\nassert solution(8) == \"YES\\n1 1000000000 1000000000\"\nassert solution(9) == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n3 2 1\"\nassert solution(input()) == \"YES\\n100 100 100\"\nassert solution(input()) == \"NO\\nNO\"\nassert solution(input()) == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\n",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"YES\\n1 1 1\"\nassert solution(\"3 2 3\") == \"YES\\n3 2 1\"\nassert solution(\"100 100 100\") == \"YES\\n100 100 100\"\nassert solution(\"50 49 49\") == \"NO\\nNO\"\nassert solution(\"10 30 20\") == \"YES\\n10 30 20\"\nassert solution(\"1 1000000000 1000000000\") == \"YES\\n1 1000000000 1000000000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 95
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\nbaaaaaa\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 60
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\\n\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\\n\"\nassert solution(\"7 1\\nbbbbbbb\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 72
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 12, \"The output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\\n\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\\n\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\nanaaaab\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"-1\"\nassert solution() == \"6\"\nassert solution() == \"-2999999997\"",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution() == '-1'\nassert solution() == '6'\nassert solution() == '-2999999997'",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"2\\n-1\\n6\\n-2999999997\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n6\n1 -1000000000 1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n1 2 3\n4\n-1 -2 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n3\n1 2 3\n4\n-1 -2 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000 1 -1000000000\n\"\"\") == \"6\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '2\\n-1\\n6\\n-2999999997'",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 -1 -2\") == \"2\"\nassert solution(\"4 -1 -2\") == \"-1\"\nassert solution(\"10 -2 8 3 8 -4 -15 5 -2 -3 1\") == \"-2999999997\"",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output\nfor i in range(n):\n    assert solution(input) == output\nprint(output)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '''3 5\n2 1\n3 2\n3 4'''\n\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '''4 1\n1 2\n1 3\n'''\n\nassert solution('''8 9\n1 2\n2 3\n2 5\n1 6\n3 4\n6 5\n4 5\n2 7\n5 8''') == '''3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == solution() # Solution should not be same as itself",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data}, expected output {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution() == \"4 1\\n1 2\\n1 3\"\nassert solution() == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 45,
        "num_ids_4": 85
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"3 5\n2 1\n3 2\n3 4\"\"\"\n\nassert solution() == \"\"\"4 1\n1 2\n1 3\n\"\"\"\n\nassert solution() == \"\"\"3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"40\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n40\\n41664916690999888\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(1) == 40\nassert solution(499993) == 41664916690999888\n",
        "num_ids_2": 19,
        "num_ids_4": 49
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"3\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"2\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"1\\n5\\n499995\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"0\\n40\\n41664916690999888\"\nassert solution(stdin: str) == \"40\\n41664916690999888\\n0\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n5\\n499993\") == 0\nassert solution(\"3\\n1\\n5\\n499993\") == 40",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n40\\n41664916690999888\\n\"\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    board = [list(map(int, input().split())) for _ in range(n)]\n    moves = n * (n ** 2 - 1)\n    min_moves = 0\n    for i in range(n):\n        for j in range(n):\n            if board[i][j] == 0:\n                min_moves += 1\n                for k in range(i - 1, i + 2):\n                    for l in range(j - 1, j + 2):\n                        if 0 <= k < n and 0 <= l < n:\n                            if not (k == i and l == j) and board[k][l] == 0:\n                                min_moves -= 1\n                                board[k][l] = board[i][j]\n                                board[i][j] = 0\n                                break\n            elif board[i][j] == 1:\n                min_moves += 1\n                for k in range(i - 1, i + 2):\n                    for l in range(j - 1, j + 2):\n                        if 0 <= k < n and 0 <= l < n:\n                            if board[k][l] == 1:\n                                min_moves -= 1\n                                board[k][l] = board[i][j]\n                                board[i][j] = 0\n                                break\n\n    print(min_moves)",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n40\\n41664916690999888'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 100,
        "num_ids_4": 200
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([10]) == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]\nassert solution([4, 5, 7, 6, 7, 5, 4, 4, 6, 4]) == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2 -1 1 1 3 1 1\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"1 2 3 4 5\") == \"1 1 1 1 0\"\nassert solution(\"1 1 2\") == \"1 0\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"-1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 116
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\\n\", \"The expected output is not as expected\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10') == '1 1 1 2 -1 1 1 3 1 1\\n'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 8 97 2 12345\") == \"YES\\n2 4 8\"\nassert solution(\"3 5 823\") == \"NO\\nNO\\nNO\"\nassert solution(\"1 1 1\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 68
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='5\\n64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution(stdin='5\\n64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution(stdin='5\\n64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'",
        "num_ids_2": 124,
        "num_ids_4": 186
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"NO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 104,
        "num_ids_4": 156
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n64\\n32\\n97\\n2\\n12345') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\\n2 4 8 \"\nassert solution(5) == \"YES\\n3 5 823\"\nassert solution(7) == \"YES\\n3 5 8\"\nassert solution(8) == \"YES\\n2 4 8\"\nassert solution(10) == \"NO\"\nassert solution(12) == \"NO\"\nassert solution(14) == \"NO\"\nassert solution(16) == \"YES\\n3 5 8\"\nassert solution(18) == \"YES\\n2 4 8\"\nassert solution(20) == \"YES\\n3 5 823\"\nassert solution(22) == \"YES\\n2 4 8\"\nassert solution(24) == \"YES\\n3 5 8\"\nassert solution(26) == \"YES\\n2 4 8\"\nassert solution(28) == \"YES\\n3 5 823\"\nassert solution(30) == \"YES\\n2 4 8\"\nassert solution(32) == \"YES\\n3 5 8\"\nassert solution(34) == \"YES\\n2 4 8\"\nassert solution(36) == \"YES\\n3 5 823\"\nassert solution(38) == \"YES\\n2 4 8\"\nassert solution(40) == \"YES\\n3 5 8\"\nassert solution(42) == \"YES\\n2 4 8\"\nassert solution(44) == \"YES\\n3 5 823\"\nassert solution(46) == \"YES\\n2 4 8\"\nassert solution(48) == \"YES\\n3 5 8\"\nassert solution(50) == \"NO\"\nassert solution(52) == \"NO\"\nassert solution(54) == \"NO\"\nassert solution(56) == \"YES\\n3 5 8\"\nassert solution(58) == \"YES\\n2 4 8\"\nassert solution(60) == \"YES\\n3 5 823\"\nassert solution(62) == \"YES\\n2 4 8\"\nassert solution(64) == \"YES\\n3 5 8\"\nassert solution(66) == \"YES\\n2 4 8\"\nassert solution(68) == \"YES\\n3 5 823\"\nassert solution(70) == \"YES\\n2 4 8\"\nassert solution(72) == \"YES\\n3 5 8\"\nassert solution(74) == \"YES\\n2 4 8\"\nassert solution(76) == \"YES\\n3 5 823\"\nassert solution(78) == \"YES\\n2 4 8\"\nassert solution(80) == \"YES\\n3 5 8\"\nassert solution(82) == \"YES\\n2 4 8\"\nassert solution(84) == \"YES\\n3 5 823\"\nassert solution(86) == \"YES\\n2 4 8\"\nassert solution(88) == \"YES\\n3 5 8\"\nassert solution(90) == \"NO\"\nassert solution(92) == \"NO\"\nassert solution(94) == \"NO\"\nassert solution(96) == \"YES\\n3 5 8\"\nassert solution(98) == \"YES\\n2 4 8\"\nassert solution(100) == \"YES\\n3 5 823\"\nassert solution(102) == \"YES\\n2 4 8\"\nassert solution(104) == \"YES\\n3 5 8\"\nassert solution(106) == \"YES\\n2 4 8\"\nassert solution(108) == \"YES\\n3 5 823\"\nassert solution(110) == \"YES\\n2 4 8\"\nassert solution(112) == \"YES\\n3 5 8\"\nassert solution(114) == \"YES\\n2 4 8\"\nassert solution(116) == \"YES\\n3 5 823\"\nassert solution(118) == \"YES\\n2 4 ",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ababab\") == \"abba\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"abba\"\nassert solution(\"ababab\") == \"abba\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nfor i in range(len(input())):\n    assert int(input()[i]) == i+1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nababab\") == \"0\\nababab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nababa\") == \"0\\nababa\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"aa\"\nassert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"aabb\") == \"aabb\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 2\nassert solution(6) == 0\nassert solution(7) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\n\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3') == '9'\nassert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\n\nfrom typing import List",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"\"\"\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\\n\"\n\nassert solution(b\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\"\"\") == \"9\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"15\\n\", \"Your solution is incorrect. Please check the input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"The solution of the problem {input_str} is not correct.\\nExpected: {output_str}\\nGot: {solution(input_str)}\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\\n\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\\n\"\nassert solution(\"4\\n2 2\\n1 1\\n2 0\\n\") == \"5\\n\"\nassert solution(\"8\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\\n101 0\\n102 0\\n103 0\\n104 0\\n105 0\\n106 0\\n107 0\\n108 0\\n109 0\\n110 0\\n111 0\\n112 0\\n113 0\\n114 0\\n115 0\\n116 0\\n117 0\\n118 0\\n119 0\\n120 0\\n121 0\\n122 0\\n123 0\\n124 0\\n125 0\\n126 0\\n127 0\\n128 0\\n129 0\\n130 0\\n131 0\\n132 0\\n133 0\\n134 0\\n135 0\\n136 0\\n137 0\\n138 0\\n139 0\\n140 0\\n141 0\\n142 0\\n143 0\\n144 ",
        "num_ids_2": 94,
        "num_ids_4": 1027
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n\") == \"3\"\nassert solution(\"3\\n4\\n\") == \"3\"\nassert solution(\"1\\n4\\n\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"2\", \"Your code is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Test failed.\"\nprint(\"Test passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\n\nassert solution(\"3\\n2\\n\") == \"2\\n\"\n\nassert solution(\"3\\n3\\n\") == \"3\\n\"\n\nassert solution(\"3\\n4\\n\") == \"3\\n\"\n\nassert solution(\"3\\n5\\n\") == \"3\\n\"\n\nassert solution(\"6\\n2\\n\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 1\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"The correct choice is 2.\"\nassert solution(\"2\\n3\\n\") == \"3\\n\", \"The correct choice is 3.\"\nassert solution(\"4\\n3\\n\") == \"3\\n\", \"The correct choice is 3.\"\nassert solution(\"5\\n3\\n\") == \"3\\n\", \"The correct choice is 3.\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '1.000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '1.000000000000\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1.000000000000\", \"Test failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.000000000000\\n\", \"Test case 1 failed.\"\n\nimport math",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1.000000000000\"\nassert solution(10) == \"1.000000000000\"\nassert solution(5) == \"1.000000000000\"\nassert solution(101) == \"1.000000000000\"\nassert solution(10000) == \"1.000000000000\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1.000000000000\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"1.000000000000\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '1.000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"10\") == \"1.000000000000\"\nassert solution(\"100\") == \"1.000000000000\"\nassert solution(\"1000\") == \"1.000000000000\"\nassert solution(\"1001\") == \"1.000000000000\"",
        "num_ids_2": 47,
        "num_ids_4": 98
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Hello World\\n\"\nassert solution(input()) == \"A+B\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n3\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"7\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Hello World\\n\"\nassert solution(input()) == \"7\\n\"\nassert solution(input()) == \"2\\nA\\nB\\n\"\nassert solution(input()) == \"4\\n12\\n6\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 60
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"\nassert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\nA\\nB\\n\") == \"6\"\nassert solution(\"3\\nA\\nB\\n\") == \"6\"\nassert solution(\"1\\nA\\nB\\n\") == \"10\"\nassert solution(\"2\\nA\\nB\\n\") == \"10\"",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Hello World\"\n\nassert solution(input()) == \"A+B\"\n\nassert solution(input()) == \"Hello World\"\n\nassert solution(input()) == \"A+B\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"1\\nA\\nB\\n\") == \"Hello World\\nA+B\\n\"\nassert solution(\"2\\n10\\n5\\n\") == \"Hello World\\n5\\n\"\nassert solution(\"1\\n10\\n5\\n\") == \"Hello World\\n5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 64
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Hello World\\n\", \"Incorrect output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Hello World\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Hello World\\n', 'Your solution is incorrect.'\nassert solution('1\\n') == 'Hello World\\n', 'Your solution is incorrect.'\nassert solution('2\\nA\\nB\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('3\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('4\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('5\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('6\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('7\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('8\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('9\\n') == '4\\n', 'Your solution is incorrect.'",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3333\", \"Test failed.\"\nassert solution(\"7 8\") == \"7878\", \"Test failed.\"\nassert solution(\"9 8\") == \"9898\", \"Test failed.\"\nassert solution(\"1 2\") == \"2121\", \"Test failed.\"\nassert solution(\"9 9\") == \"9999\", \"Test failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 1\") == \"11\"\nassert solution(\"9 8\") == \"8888\"\nassert solution(\"1 2\") == \"22\"\nassert solution(\"7 6\") == \"6666\"\nassert solution(\"3 4\") == \"3333\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3333\", \"The solution is incorrect\"\nassert solution(\"4 3\") == \"3333\", \"The solution is incorrect\"\nassert solution(\"5 3\") == \"444\", \"The solution is incorrect\"\nassert solution(\"1 2\") == \"11\", \"The solution is incorrect\"\nassert solution(\"2 1\") == \"11\", \"The solution is incorrect\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='4 3\\n') == '3333'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\", \"Test Failed\"\nassert solution(\"10 5\") == \"1510\", \"Test Failed\"\nassert solution(\"8 9\") == \"989\", \"Test Failed\"\nassert solution(\"1 1\") == \"11\", \"Test Failed\"\nassert solution(\"3 3\") == \"33\", \"Test Failed\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"4 3 4\") == \"3333\"\nassert solution(\"5 5\") == \"555\"\nassert solution(\"5 3\") == \"3555\"\nassert solution(\"5 1\") == \"155\"",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3333'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3333'\nprint('All test cases passed.')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"6 9\") == \"9999\"\nassert solution(\"9 8\") == \"8888\"\nassert solution(\"2 2\") == \"2222\"\nassert solution(\"1 1\") == \"1111\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"\nprint(\"a is followed by b.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"b\", \"Test Failed. The function should return 'b' for the given input.\"\nassert solution(\"z\") == \"C\", \"Test Failed. The function should return 'C' for the given input.\"\nassert solution(\"Z\") == \"C\", \"Test Failed. The function should return 'C' for the given input.\"\nassert solution(\"A\") == \"B\", \"Test Failed. The function should return 'B' for the given input.\"\nassert solution(\"c\") == \"d\", \"Test Failed. The function should return 'd' for the given input.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"b\", \"The correct output is: b\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a') == 'b', \"Your implementation of the solution is incorrect.\"\nassert solution('c') == 'z', \"Your implementation of the solution is incorrect.\"\nassert solution('A') == 'B', \"Your implementation of the solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"b\", \"Test case 1 failed.\"\nassert solution(\"c\") == \"z\", \"Test case 2 failed.\"\nassert solution(\"z\") == \"a\", \"Test case 3 failed.\"\nassert solution(\"A\") == \"b\", \"Test case 4 failed.\"\nassert solution(\"Z\") == \"b\", \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"c\") == \"b\"\nassert solution(\"a\") == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('c') == 'b'\nprint('a is followed by b.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"z\"\nassert solution(\"A\") == \"B\"\nassert solution(\"c\") == \"d\"\nassert solution(\"Z\") == \"Z\"\nassert solution(\"c\") == \"d\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"The output should be 'atcoder', but got '{}'.\".format(solution(\"oder atc\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"apple\") == \"apple\"\nassert solution(\"abcde\") == \"cdeabc\"\nassert solution(\"abcdefg\") == \"abcdefg\"\nassert solution(\"123\") == \"321\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"hello world\") == \"helloworld\"\nassert solution(\"1234567890\") == \"9876543210\"\nassert solution(\"abcde\") == \"cdeabcde\"",
        "num_ids_2": 24,
        "num_ids_4": 65
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Test case 1 failed\"\nassert solution() == \"0\", \"Test case 2 failed\"\nassert solution() == \"1000000\", \"Test case 3 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 51
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Function returned '{solution(input())}', instead of '{expected}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0, \"Expected 0, got {} instead\".format(solution(1))\nassert solution(2) == 0, \"Expected 0, got {} instead\".format(solution(2))\nassert solution(3) == 1000000, \"Expected 1000000, got {} instead\".format(solution(3))\nassert solution(4) == 1000000, \"Expected 1000000, got {} instead\".format(solution(4))\nassert solution(5) == 0, \"Expected 0, got {} instead\".format(solution(5))\nassert solution(6) == 0, \"Expected 0, got {} instead\".format(solution(6))\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n6\\n5 1 2 4 6 3\\n2\\n1000000 1000000\") == \"0\\n0\\n1000000\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 7 8 2\") == \"0\\n\"\nassert solution(\"6 5 1 2 4 3\") == \"0\\n\"\nassert solution(\"2 1000000 1000000\") == \"1000000\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 5 7 8 2\\n0\\n6\\n5 1 2 4 6 3\\n0\\n2\\n1000000 1000000') == 0, \"Test 1\"\nassert solution('6\\n5 1 2 4 6 3\\n0\\n2\\n1000000 1000000') == 0, \"Test 2\"\nassert solution('2\\n1000000 1000000') == 1000000, \"Test 3\"",
        "num_ids_2": 119,
        "num_ids_4": 157
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\") == \"1000000\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5 7 8 2') == '0'\nassert solution('6 5 1 2 4 6 3') == '0'\nassert solution('2 1000000 1000000') == '1000000'",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 7 8 2\") == 0\nassert solution(\"6 5 1 2 4 6 3\") == 0\nassert solution(\"2 1000000 1000000\") == 1000000",
        "num_ids_2": 38,
        "num_ids_4": 69
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == 5\nassert solution(\"1 1 100 99\\n100\\n\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == 6",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5, \"The output should be 5\"\nassert solution(\"1 1 100 99\\n100\") == 1, \"The output should be 1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6, \"The output should be 6\"\n",
        "num_ids_2": 72,
        "num_ids_4": 111
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\\n\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\\n\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 99
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"\n",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8\\n') == 5\nassert solution('1 1 100 99\\n100\\n') == 1\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6\\n') == 6",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 51,
        "num_ids_4": 82
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5\nassert solution(\"1 1 100 99\\n100\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6\n",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 2, 3, 3) == 5\nassert solution(1, 1, 100, 99) == 1\nassert solution(7, 4, 2, 1) == 6",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 0 6 10 12\") == 3\nassert solution(\"4 2\") == 0",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"\nprint(solution(input()))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n0 1 2 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12''') == '3\\n3 2 0 7 10 14'\n\nassert solution('''4 2\n0 1 2 3''') == '0\\n0 1 2 3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12\\n4 2\\n0 1 2 3') == '3\\n3 2 0 7 10 14'\nassert solution('4 2\\n0 1 2 3\\n') == '0\\n0 1 2 3'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution({input()})!= Output({output()})\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3\n    \"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    4 2 1 3 2\n    3 5\n    4 2\n    2 5\n    \"\"\"\n) == \"20\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\"\n) == \"8\"\n\nassert solution(\n    \"\"\"5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\"\n) == \"20\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3''') == '8\\n'\n\nassert solution('''\n    5 3\n    4 2 1 3 2\n    3 5\n    4 2\n    2 5''') == '20\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output\\n8\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"11\") == \"YES\"\nassert solution(\"12\") == \"YES\"\nassert solution(\"13\") == \"YES\"\nassert solution(\"14\") == \"YES\"\nassert solution(\"15\") == \"YES\"\nassert solution(\"16\") == \"YES\"\nassert solution(\"17\") == \"YES\"\nassert solution(\"18\") == \"YES\"\nassert solution(\"19\") == \"YES\"\nassert solution(\"20\") == \"YES\"\nassert solution(\"21\") == \"YES\"\nassert solution(\"22\") == \"YES\"\nassert solution(\"23\") == \"YES\"\nassert solution(\"24\") == \"YES\"\nassert solution(\"25\") == \"YES\"\nassert solution(\"26\") == \"YES\"\nassert solution(\"27\") == \"YES\"\nassert solution(\"28\") == \"YES\"\nassert solution(\"29\") == \"YES\"\nassert solution(\"30\") == \"YES\"\nassert solution(\"31\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"33\") == \"YES\"\nassert solution(\"34\") == \"YES\"\nassert solution(\"35\") == \"YES\"\nassert solution(\"36\") == \"YES\"\nassert solution(\"37\") == \"YES\"\nassert solution(\"38\") == \"YES\"\nassert solution(\"39\") == \"YES\"\nassert solution(\"40\") == \"YES\"\nassert solution(\"41\") == \"YES\"\nassert solution(\"42\") == \"YES\"\nassert solution(\"43\") == \"YES\"\nassert solution(\"44\") == \"YES\"\nassert solution(\"45\") == \"YES\"\nassert solution(\"46\") == \"YES\"\nassert solution(\"47\") == \"YES\"\nassert solution(\"48\") == \"YES\"\nassert solution(\"49\") == \"YES\"\nassert solution(\"50\") == \"YES\"\nassert solution(\"51\") == \"YES\"\nassert solution(\"52\") == \"YES\"\nassert solution(\"53\") == \"YES\"\nassert solution(\"54\") == \"YES\"\nassert solution(\"55\") == \"YES\"\nassert solution(\"56\") == \"YES\"\nassert solution(\"57\") == \"YES\"\nassert solution(\"58\") == \"YES\"\nassert solution(\"59\") == \"YES\"\nassert solution(\"60\") == \"YES\"\nassert solution(\"61\") == \"YES\"\nassert solution(\"62\") == \"YES\"\nassert solution(\"63\") == \"YES\"\nassert solution(\"64\") == \"YES\"\nassert solution(\"65\") == \"YES\"\nassert solution(\"66\") == \"YES\"\nassert solution(\"67\") == \"YES\"\nassert solution(\"68\") == \"YES\"\nassert solution(\"69\") == \"YES\"\nassert solution(\"70\") == \"YES\"\nassert solution(\"71\") == \"YES\"\nassert solution(\"72\") == \"YES\"\nassert solution(\"73\") == \"YES\"\nassert solution(\"74\") == \"YES\"\nassert solution(\"75\") == \"YES\"\nassert solution(\"76\") == \"YES\"\nassert solution(\"77\") == \"YES\"\nassert solution(\"78\") == \"YES\"\nassert solution(\"79\") == \"YES\"\nassert solution(\"80\") == \"YES\"\nassert solution(\"81\") == \"YES\"\nassert solution(\"82\") == \"YES\"\nassert solution(\"83\") == \"YES\"\nassert solution(\"84\") == \"YES\"\nassert solution(\"85\") == \"YES\"\nassert solution(\"86\") == \"YES\"\nassert solution(\"87\") == \"YES\"\nassert solution(\"88\") == \"YES\"\nassert solution(\"89\") == \"YES\"\nassert solution(\"90\") == \"YES\"\nassert solution(\"91\") == \"YES\"\nassert solution(\"92\") == \"YES\"\nassert solution(\"93\") == \"YES\"\nassert solution(\"94\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000') == 'YES\\nYES\\nNO\\nYES\\nYES\\nYES'",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"\nassert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"",
        "num_ids_2": 250,
        "num_ids_4": 476
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == 3\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == 9",
        "num_ids_2": 209,
        "num_ids_4": 209
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == str(output())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\nprint(\"All test cases pass\")",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your code is wrong. Please check the example cases and the problem statement to get the correct output.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_result, \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\\n\", \"Output incorrect.\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\\n\", \"Output incorrect.\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please check the examples and the problem statement.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed: got '{solution(stdin)}', expected '{expected}'\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"3 1\n1 1 1 1 1\"\"\"\n\nassert solution() == \"\"\"7 2\n2 2 1 1 2 1\"\"\"\n\nassert solution() == \"\"\"7486 3\n3 3 3 2 2 2 2 1 1 1\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 30
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\\n3 1\\n1 1 1 1 1\"\nassert solution(open(\"example.txt\", \"r\")) == \"Output\\n3 1\\n1 1 1 1 1\"\nassert solution(open(\"test.txt\", \"r\")) == \"Output\\n7 2\\n2 2 1 1 2 1\"\nassert solution(open(\"input.txt\", \"r\")) == \"Output\\n3 1\\n1 1 1 1 1\"",
        "num_ids_2": 66,
        "num_ids_4": 134
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '3 1\\n1 1 1 1 1\\n'\nassert solution(6) == '7 2\\n2 2 1 1 2 1\\n'\nassert solution(10) == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'",
        "num_ids_2": 52,
        "num_ids_4": 91
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\\n6\\n1 5 12 13 2 15\\n\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"3 1\\n1 1 1 1 1\\n7 2\\n2 2 1 1 2 1\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \"\nassert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \"\nassert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \"\nassert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \"\nassert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \"\nassert solution(\"5\\n1 1 3 4 2\\n6\\n1 5 12 13 2 15\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1 \"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1",
        "num_ids_2": 172,
        "num_ids_4": 344
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1 \\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1 \\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 \\n'",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5009) == \"5000 9\"\nassert solution(7) == \"1 7\"\nassert solution(10000) == \"1 10000\"\nassert solution(10) == \"1 10\"\nassert solution(5) == \"5000\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. \\nExpected: {expected_output} \\nGot: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"\n\nfrom typing import List",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5009) == '2\\n5000\\n1\\n7\\n4\\n800\\n70\\n6\\n9000\\n1\\n10000\\n1\\n10\\n'\nassert solution(7) == '1\\n7\\n'\nassert solution(10000) == '1\\n10000\\n1\\n10\\n'",
        "num_ids_2": 80,
        "num_ids_4": 110
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5009) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution(7) == '1\\n9876'\nassert solution(10000) == '1\\n10000'\nassert solution(10) == '1\\n9000'\nassert solution(5) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution(5009) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'",
        "num_ids_2": 78,
        "num_ids_4": 116
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Received: {solution}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 1 1 1\"\"\"\nassert solution(stdin) == \"\"\"3 3 3 2 1 3\"\"\"\nassert solution(stdin) == \"\"\"2 2 2 2 4 4\"\"\"\nassert solution(stdin) == \"\"\"4 4 4 1 4\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 1 1 \n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected, f\"Got {solution()}, expected {expected}.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\\n\") == \"3\\n2\\n1\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\nprint(\"All assertions passed!\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Here's the minimum possible equal price of all n goods so if you sell them for this price, you will receive at least the same (or greater) amount of money as if you sell them for their initial prices.': pass",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n2\\n1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n2\\n1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\\n2\\n1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\n",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed: {output}!= {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 113,
        "num_ids_4": 186
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"\nassert solution(\"2 1\") == \"1 1 \\n\"",
        "num_ids_2": 117,
        "num_ids_4": 133
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2 \\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5 \\n'",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n# Write your solution here.\\n# You can use the provided solution or any other approach.\\n# Remember to handle edge cases and edge cases where the solution may not be unique.\\n# You can test your solution using the provided test cases.\\n# Make sure to handle the case where there are multiple answers.\\n# Do not use any built-in libraries or data structures.\\n# You can use the string manipulation techniques you learned in previous exercises.\\n# You can use Python 3.x.\\n\\n# Example test cases:\\n# Test case 1:\\n# p = [1, 2, 3] and q = [3, 1, 2]\\n# s = 'abb' should be returned.\\n# p = [1, 2, 3, 4, 5] and q = [5, 2, 3, 4, 1]\\n# s = 'abcdfgh' should be returned.\\n# p = [1, 2, 3, 4, 5] and q = [2, 5, 1, 4, 3]\\n# s = 'abcdfgh' should be returned.\\n# p = [1, 2, 3, 4, 5] and q = [5, 4, 3, 1, 2]\\n# s = 'abcdfgh' should be returned.\\n# Test case 2:\\n# p = [1, 3, 2] and q = [4, 3, 2, 1]\\n# s = 'aabb' should be returned.\\n# p = [1, 3, 2] and q = [4, 2, 3, 1]\\n# s = 'abccba' should be returned.\\n# p = [1, 3, 2] and q = [3, 2, 1, 4]\\n# s = 'abccba' should be returned.\\n# Test case 3:\\n# p = [1, 2, 3] and q = [2, 1, 3, 4]\\n# s = 'abcdf' should be returned.\\n# p = [1, 2, 3] and q = [3, 2, 1, 5]\\n# s = 'abccba' should be returned.\\n# Test case 4:\\n# p = [1, 2, 3] and q = [4, 2, 3, 1]\\n# s = 'abcdf' should be returned.\\n# p = [1, 2, 3] and q = [2, 1, 3, 5]\\n# s = 'abccba' should be returned.\\n# Test case 5:\\n# p = [1, 2, 3] and q = [2, 1, 3, 4]\\n# s = 'abcdf' should be returned.\\n# p = [1, 2, 3] and q = [5, 2, 3, 4, 1]\\n# s = 'abcdfgh' should be returned.\\n\\n# Test case 6:\\n# p = [1, 3, 2] and q = [3, 1, 4, 2]\\n# s = 'abccba' should be returned.\\n# p = [1, 3, 2] and q = [5, 4, 1, 2, 3]\\n# s = 'abccba' should be returned.\\n# Test case 7:\\n# p = [1, 3, 2] and q = [4, 3, 2, 1, 5]\\n# s = 'abccba' should be returned.\\n# p = [1, 3, 2] and q = [5, 2, 3, 4, 1]\\n# s = 'abccba' should be returned.\\n# Test case 8:\\n# p = [1, 3, 2] and q = [2, 1, 3, 4, 5]\\n# s = 'abccba' should be returned.\\n# p = [1, 3, 2] and q = [1, 2, 3, 4, 5]\\n# s = 'abccba' should be returned.\\n\\n# Test case 9:\\n# p",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3 1\\n1 2 3\\n2 3 1\") == \"NO\"\nprint(\"OK\")",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"YES\\nbb\"\nassert solution(\"1 3 2\") == \"YES\\ndef\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"YES\\nabbb\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\\ndef\"\nassert solution(\"3 3\\n1 2 3\\n1 3 2\") == \"YES\\nab\\nabc\"\nassert solution(\"3 4\\n1 2 3\\n1 3 2\") == \"YES\\nab\\nabc\"\nassert solution(\"1 2 3\\n1 3 2\") == \"NO\"\nassert solution(\"3 3\\n1 3 2\\n2 3 1\") == \"NO\"\nassert solution(\"1 2\\n1 3\\n1 4\") == \"NO\"\nassert solution(\"1 2\\n1 3\\n2 3\") == \"YES\\nab\"\nassert solution(\"1 2\\n1 3\\n3 2\") == \"YES\\nabc\"\nassert solution(\"1 2\\n1 3\\n4 3\") == \"YES\\nabc\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\") == \"YES\\nab\\nabc\"",
        "num_ids_2": 61,
        "num_ids_4": 113
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\np1 2 3\\np1 3 2\") == \"YES\\nab\"\nassert solution(\"2 3\\np1 2 3\\np2 3 1\") == \"NO\"\nassert solution(\"3 3\\np1 2 3\\np2 1 2\\np3 2 1\") == \"YES\\nabb\\ndef\"",
        "num_ids_2": 54,
        "num_ids_4": 92
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nprint(solution('123'))\\n# Output: YES\\n# Test case 2\\nprint(solution('1234567890'))\\n# Output: YES\\n# Test case 3\\nprint(solution('12345678901234567890'))\\n# Output: YES\\n# Test case 4\\nprint(solution('1234567890123456789012345678901234567890'))\\n# Output: NO\\n# Test case 5\\nprint(solution('12345678901234567890123456789012345678901234567890'))\\n# Output: YES\\n# Test case 6\\nprint(solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 2 3\\n1 3 2') == 'YES\\nab'\nassert solution('3 2\\n1 3 2\\n2 3 1') == 'NO'\nassert solution('3 4\\n1 2 3 4') == 'YES\\naabc'",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\nabb\\ndef\"\nassert solution() == \"YES\\ndefg\\nhij\"\nassert solution() == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 36
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 2 3 4 5 6\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 43\nassert solution(4) == 64\nassert solution(6) == 69\nassert solution(2) == 3",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"\n\nfrom typing import List",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_result, f\"Expected: {expected_result}, Received: {solution}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3 \"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4 \"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\"",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 134
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n20 10 20') == '43\\n1 3 2\\n'\nassert solution('4\\n10 10 10 10') == '64\\n2 1 4 3\\n'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4\\n'\nassert solution('2\\n1 4') == '3\\n2 1\\n'\nassert solution('') == ''",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\"\nassert solution(\"4\\n10 10 10 10\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\"\nassert solution(\"2\\n1 4\") == \"3\"",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed. Solution: {solution(input())}, Output: {output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4 2 5 1 3\\n') == '3\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Expected Output: 3\\n, but got: {}.\".format(solution(\"5\\n4 2 5 1 3\"))\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Expected Output: 3\\n, but got: {}.\".format(solution(\"5\\n4 2 5 1 3\"))\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Expected Output: 3\\n, but got: {}.\".format(solution(\"5\\n4 2 5 1 3\"))\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Expected Output: 3\\n, but got: {}.\".format(solution(\"5\\n4 2 5 1 3\"))\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Expected Output: 3\\n, but got: {}.\".format(solution(\"5\\n4 2 5 1 3\"))",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\\n\", \"Solution does not return the correct output.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"1\\n2 3 4 5\") == \"3\"\nassert solution(\"1\\n6 7 8 9\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"1\\n1 1 1\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n5 4 2 3 1\") == \"3\\n\"\nassert solution(\"2\\n5 2 5 1\") == \"4\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\", \"The output should be '3', but got '{}'.\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"Expected output: 3\\n, but got: \" + solution(input()) + \"\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"5\\n5 4 3 2 1\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"1\\n5\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1', \"Your code does not return the expected output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"1\"\nassert solution(10) == \"0\"\nassert solution(1000) == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\n\nprint(\"Test Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n3 3 3 3\n\"\"\") == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 3 3\\n\") == \"1\" # Test case 1\nassert solution(\"3\\n3 3 3\\n\") == \"0\" # Test case 2\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\" # Test case 3\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\" # Test case 4\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\" # Test case 5\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1\" # Test case 6\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"0\" # Test case 7\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"0\" # Test case 8\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"0\" # Test case 9\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"1\" # Test case 10\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"1\" # Test case 11\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"1\" # Test case 12\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"0\" # Test case 13\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"1\" # Test case 14\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"1\" # Test case 15\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"1\" # Test case 16\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"1\" # Test case 17\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"1\" # Test case 18\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"1\" # Test case 19",
        "num_ids_2": 50,
        "num_ids_4": 104
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(4) == 2\nassert solution(10) == 1\nassert solution(1000) == 5",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\n\nprint(\"Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"0 2 3 4 5\") == \"1\\n\", \"Incorrect Output\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\" # expected output: \"1\"\nprint(\"All tests passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Solution is incorrect\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Test case failed.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Incorrect output for test case 0.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"5\\n\"\nassert solution(\"7 11\") == \"5\\n\"\nassert solution(\"10 15\") == \"35\\n\"\nassert solution(\"20 30\") == \"90\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"5\\n\"\nassert solution(\"2 4\") == \"10\\n\"\nassert solution(\"2 10\") == \"30\\n\"\nassert solution(\"2 15\") == \"55\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n\" # correct answer\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nprint('All tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"The function should return '0' if the given constraints are met.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 10 100\\n\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'\nassert solution('5\\na 1 b 2 c 3') == 'Yes'\nassert solution('2\\na 1 a 2') == 'No'\nassert solution('3\\na 1 b 2 c 3') == 'No'\nassert solution('4\\na 1 b 2 c d 4') == 'No'\nassert solution('4\\na 1 b c 2 d 3') == 'No'\nassert solution('3\\na 1 b 2 c d e 5') == 'No'",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Please provide the correct input format.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\\n\"\nassert solution(\"3\\n1 5 10\") == \"No\\n\"\nassert solution(\"3\\n1 5 5\") == \"No\\n\"\nassert solution(\"3\\n1 1 1\") == \"Yes\\n\"\nassert solution(\"3\\n1 1 10\") == \"No\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\") == \"Yes\"\nassert solution(\"3\\na_1 10 a_2 100\") == \"No\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the length of the sequence: \")) == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"yx\") == \"Yes\", \"Expected: Yes, but got: \" + solution(\"yx\")\nassert solution(\"axy\") == \"Yes\", \"Expected: Yes, but got: \" + solution(\"axy\")\nassert solution(\"abc\") == \"No\", \"Expected: No, but got: \" + solution(\"abc\")\nassert solution(\"abcd\") == \"Yes\", \"Expected: Yes, but got: \" + solution(\"abcd\")\nassert solution(\"zyx\") == \"No\", \"Expected: No, but got: \" + solution(\"zyx\")",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"atcoder\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes', 'Expected \"Yes\", but got \"{}\"'.format(solution('yx'))  # expected output: 'Yes'\nassert solution('axy') == 'No', 'Expected \"No\", but got \"{}\"'.format(solution('axy'))  # expected output: 'No'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"atcoder\") == \"No\"\nassert solution(\"xyz\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\", \"Your code is not correct.\"\nassert solution(\"8 5 1\") == \"NO\", \"Your code is not correct.\"\nassert solution(\"7 10 1\") == \"NO\", \"Your code is not correct.\"\nassert solution(\"7 2 1\") == \"YES\", \"Your code is not correct.\"\nassert solution(\"1 5 1\") == \"YES\", \"Your code is not correct.\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\", \"Output: YES\\n\"\nassert solution(\"3 12 15\") == \"YES\", \"Output: YES\\n\"\nassert solution(\"1 10 5\") == \"NO\", \"Output: NO\\n\"\nassert solution(\"5 10 15\") == \"NO\", \"Output: NO\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"5 10 2\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 10 3\") == \"YES\"\nassert solution(\"100 100 100\") == \"YES\"\nassert solution(\"2 2 2\") == \"YES\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='7 5 1') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\", \"Test case 1 is incorrect.\"\nassert solution(\"3 8 2\") == \"YES\\n\", \"Test case 2 is incorrect.\"\nassert solution(\"10 15 12\") == \"NO\\n\", \"Test case 3 is incorrect.\"\nassert solution(\"10 20 10\") == \"YES\\n\", \"Test case 4 is incorrect.\"\nassert solution(\"5 10 5\") == \"NO\\n\", \"Test case 5 is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\\n\") == \"YES\\n\"\nassert solution(\"5 10 2\\n\") == \"NO\\n\"\nassert solution(\"2 12 11\\n\") == \"YES\\n\"\nassert solution(\"8 16 9\\n\") == \"NO\\n\"\nassert solution(\"9 25 10\\n\") == \"YES\\n\"\nassert solution(\"1 1 1\\n\") == \"NO\\n\"\nassert solution(\"10 10 10\\n\") == \"YES\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n', \"Test case 1 failed\"\nassert solution(input()) == '1\\n', \"Test case 2 failed\"\nassert solution(input()) == '1\\n', \"Test case 3 failed\"\nassert solution(input()) == '1\\n', \"Test case 4 failed\"\nassert solution(input()) == '1\\n', \"Test case 5 failed\"\nassert solution(input()) == '1\\n', \"Test case 6 failed\"\nassert solution(input()) == '1\\n', \"Test case 7 failed\"\nassert solution(input()) == '1\\n', \"Test case 8 failed\"\nassert solution(input()) == '1\\n', \"Test case 9 failed\"\nassert solution(input()) == '1\\n', \"Test case 10 failed\"\nassert solution(input()) == '1\\n', \"Test case 11 failed\"\nassert solution(input()) == '1\\n', \"Test case 12 failed\"\nassert solution(input()) == '1\\n', \"Test case 13 failed\"\nassert solution(input()) == '1\\n', \"Test case 14 failed\"\nassert solution(input()) == '1\\n', \"Test case 15 failed\"\nassert solution(input()) == '1\\n', \"Test case 16 failed\"\nassert solution(input()) == '1\\n', \"Test case 17 failed\"\nassert solution(input()) == '1\\n', \"Test case 18 failed\"\nassert solution(input()) == '1\\n', \"Test case 19 failed\"\nassert solution(input()) == '1\\n', \"Test case 20 failed\"\nassert solution(input()) == '1\\n', \"Test case 21 failed\"\nassert solution(input()) == '1\\n', \"Test case 22 failed\"\nassert solution(input()) == '1\\n', \"Test case 23 failed\"\nassert solution(input()) == '1\\n', \"Test case 24 failed\"\nassert solution(input()) == '1\\n', \"Test case 25 failed\"\nassert solution(input()) == '1\\n', \"Test case 26 failed\"\nassert solution(input()) == '1\\n', \"Test case 27 failed\"\nassert solution(input()) == '1\\n', \"Test case 28 failed\"\nassert solution(input()) == '1\\n', \"Test case 29 failed\"\nassert solution(input()) == '1\\n', \"Test case 30 failed\"\nassert solution(input()) == '1\\n', \"Test case 31 failed\"\nassert solution(input()) == '1\\n', \"Test case 32 failed\"\nassert solution(input()) == '1\\n', \"Test case 33 failed\"\nassert solution(input()) == '1\\n', \"Test case 34 failed\"\nassert solution(input()) == '1\\n', \"Test case 35 failed\"\nassert solution(input()) == '1\\n', \"Test case 36 failed\"\nassert solution(input()) == '1\\n', \"Test case 37 failed\"\nassert solution(input()) == '1\\n', \"Test case 38 failed\"\nassert solution(input()) == '1\\n', \"Test case 39 failed\"\nassert solution(input()) == '1\\n', \"Test case 40 failed\"\nassert solution(input()) == '1\\n', \"Test case 41 failed\"\nassert solution(input()) == '1\\n', \"Test case 42 failed\"\nassert solution(input()) == '1\\n', \"Test case 43 failed\"\nassert solution(input()) == '1\\n', \"Test case 44 failed\"\nassert solution(input()) == '1\\n', \"Test case 45 failed\"\nassert solution(input()) == '1\\n', \"Test case 46 failed\"\nassert solution(input()) == '1\\n', \"Test case 47 failed\"\nassert solution(input()) == '1\\n', \"Test case 48 failed\"\nassert solution(input()) == '1\\n', \"Test case 49 failed\"\nassert solution(input()) == '1\\n', \"Test case 50 failed\"\nassert solution(input()) == '1\\n', \"Test case 51 failed\"\nassert solution(input()) == '1\\n', \"Test case ",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"3 3\") == \"8\\n\", \"Test case 2 failed\"\nassert solution(\"4 4\") == \"16\\n\", \"Test case 3 failed\"\nassert solution(\"5 5\") == \"25\\n\", \"Test case 4 failed\"\nassert solution(\"6 6\") == \"36\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n'\nassert solution(input()) == '1\\n'\nassert solution(input()) == '1\\n'\nassert solution(input()) == '1\\n'\nassert solution(input()) == '1\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"5 10\") == \"25\"\nassert solution(\"8 100\") == \"1250\"\nassert solution(\"9 100\") == \"5000\"\nassert solution(\"10 100\") == \"20000\"\nassert solution(\"11 100\") == \"62500\"\nassert solution(\"12 100\") == \"150000\"\nassert solution(\"13 100\") == \"300000\"\nassert solution(\"14 100\") == \"550000\"\nassert solution(\"15 100\") == \"900000\"\nassert solution(\"16 100\") == \"1350000\"\nassert solution(\"17 100\") == \"2000000\"\nassert solution(\"18 100\") == \"2750000\"\nassert solution(\"19 100\") == \"3600000\"\nassert solution(\"20 100\") == \"4550000\"",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"The area of this yard excluding the roads is 1 square yard.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"10 10\") == \"1000\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"3 4\") == \"24\"\nassert solution(\"8 7\") == \"134\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13 3 1') == '3\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nprint(\"All good\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3\\n', \"Incorrect output: {}\".format(solution(input()))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"13 3 1\") == \"3\"\n\nsolution(stdin=\"13 3 1\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"4\\n2\\n0\\n1\\n3\\n5\") == \"3\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"4\\n-10 -5\\n15 10\\n-5 -15\\n5 -5\") == \"2\"\nassert solution(\"6\\n3 5\\n4 8\\n-3 -2\\n-6 -8\\n-2 2\") == \"2\"\nassert solution(\"7\\n0 0\\n1 1\\n-1 -1\\n-1 1\\n1 -1\\n-1 -1\") == \"0\"\nassert solution(\"8\\n0 0\\n1 1\\n-1 -1\\n-1 1\\n1 -1\\n-1 -1\\n2 2\") == \"0\"",
        "num_ids_2": 76,
        "num_ids_4": 157
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"Correct!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n', 'Test Case 1 failed'\nassert solution(input()) == '3\\n', 'Test Case 2 failed'\nassert solution(input()) == '2\\n', 'Test Case 3 failed'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"2 5\\n1 1\") == \"1\"\nassert solution(\"2 5\\n1 1 1\") == \"2\"\nassert solution(\"2 5\\n1 1 2 2\") == \"3\"\nassert solution(\"2 5\\n1 1 2 3 3\") == \"4\"\nassert solution(\"2 5\\n1 1 3 3 4\") == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"2 10\\n0 1\\n\") == \"10\"\nassert solution(\"2 5\\n1 2\\n3 4\\n\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4\\n0 3') == '7\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4\\n0 3') == '7\\n'\nprint(\"All test cases pass\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"1 1\\n0\\n\") == \"0\"\nassert solution(\"1 1\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n2\\n\") == \"2\"\nassert solution(\"1 1\\n3\\n\") == \"3\"\nassert solution(\"1 1\\n4\\n\") == \"4\"\nassert solution(\"1 1\\n5\\n\") == \"5\"\nassert solution(\"1 1\\n6\\n\") == \"6\"\nassert solution(\"1 1\\n7\\n\") == \"7\"\nassert solution(\"1 1\\n8\\n\") == \"8\"\nassert solution(\"1 1\\n9\\n\") == \"9\"\nassert solution(\"1 1\\n10\\n\") == \"10\"\nassert solution(\"1 1\\n11\\n\") == \"11\"\nassert solution(\"1 1\\n12\\n\") == \"12\"\nassert solution(\"1 1\\n13\\n\") == \"13\"\nassert solution(\"1 1\\n14\\n\") == \"14\"\nassert solution(\"1 1\\n15\\n\") == \"15\"\nassert solution(\"1 1\\n16\\n\") == \"16\"\nassert solution(\"1 1\\n17\\n\") == \"17\"\nassert solution(\"1 1\\n18\\n\") == \"18\"\nassert solution(\"1 1\\n19\\n\") == \"19\"\nassert solution(\"1 1\\n20\\n\") == \"20\"\nassert solution(\"1 1\\n21\\n\") == \"21\"\nassert solution(\"1 1\\n22\\n\") == \"22\"\nassert solution(\"1 1\\n23\\n\") == \"23\"\nassert solution(\"1 1\\n24\\n\") == \"24\"\nassert solution(\"1 1\\n25\\n\") == \"25\"\nassert solution(\"1 1\\n26\\n\") == \"26\"\nassert solution(\"1 1\\n27\\n\") == \"27\"\nassert solution(\"1 1\\n28\\n\") == \"28\"\nassert solution(\"1 1\\n29\\n\") == \"29\"\nassert solution(\"1 1\\n30\\n\") == \"30\"\nassert solution(\"1 1\\n31\\n\") == \"31\"\nassert solution(\"1 1\\n32\\n\") == \"32\"\nassert solution(\"1 1\\n33\\n\") == \"33\"\nassert solution(\"1 1\\n34\\n\") == \"34\"\nassert solution(\"1 1\\n35\\n\") == \"35\"\nassert solution(\"1 1\\n36\\n\") == \"36\"\nassert solution(\"1 1\\n37\\n\") == \"37\"\nassert solution(\"1 1\\n38\\n\") == \"38\"\nassert solution(\"1 1\\n39\\n\") == \"39\"\nassert solution(\"1 1\\n40\\n\") == \"40\"\nassert solution(\"1 1\\n41\\n\") == \"41\"\nassert solution(\"1 1\\n42\\n\") == \"42\"\nassert solution(\"1 1\\n43\\n\") == \"43\"\nassert solution(\"1 1\\n44\\n\") == \"44\"\nassert solution(\"1 1\\n45\\n\") == \"45\"\nassert solution(\"1 1\\n46\\n\") == \"46\"\nassert solution(\"1 1\\n47\\n\") == \"47\"\nassert solution(\"1 1\\n48\\n\") == \"48\"\nassert solution(\"1 1\\n49\\n\") == \"49\"\nassert solution(\"1 1\\n50\\n\") == \"50\"\nassert solution(\"1 1\\n51\\n\") == \"51\"\nassert solution(\"1 1\\n52\\n\") == \"52\"\nassert solution(\"1 1\\n53\\n\") == \"53\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"3 2\\n1 4\") == \"6\"\nassert solution(\"3 3\\n1 3\") == \"5\"\nassert solution(\"3 1\\n1 2\") == \"4\"\nassert solution(\"3 2\\n1 4\") == \"4\"\nassert solution(\"2 5\\n1 3\") == \"3\"\nassert solution(\"2 4\\n2 4\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 3\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4\\n1 2\") == \"3\"\nassert solution(\"3 4\\n1 2\") == \"2\"\nassert solution(\"3 4",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 4\\n0 3\\n\") == \"7\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"1 2\\n3 4\") == \"5\"\nassert solution(\"1 4\\n5 6\") == \"6\"\nassert solution(\"3 2\\n0 1\") == \"6\"\nassert solution(\"5 6\\n1 3\") == \"7\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"5 1\\n2 3\\n0 1\") == \"4\"\nassert solution(\"10 2\\n1 3\\n2 4\\n0 1\\n2 3\") == \"10\"",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for example {example_index}. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1\\n'",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\\n\"\n\nfor query in [\"L 1\", \"R 2\", \"R 3\", \"? 2\", \"L 4\", \"L 5\"]:\n    assert solution(query) == \"1\\n1\\n2\\n\"\n\nfor query in [\"L 100\", \"R 100000\", \"R 123\", \"L 101\", \"? 123\", \"L 10\", \"R 115\", \"? 100\", \"R 110\", \"? 115\"]:\n    assert solution(query) == \"0\\n2\\n1\\n\"\n\nfor query in [\"L 100\", \"R 100000\", \"R 123\", \"L 101\", \"? 123\", \"L 10\", \"R 115\", \"? 100\", \"R 110\", \"? 115\"]:\n    assert solution(query) == \"0\\n2\\n1\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n### Explanation:\nThe solution is correct. The shelf will remain the same after the queries.",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n2\\n1\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"L 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\"\n) == \"1\\n1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\"\n) == \"0\\n2\\n1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\"\"\") == \"1\\n1\\n2\\n\"\n\nassert solution(\"\"\"10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\"\"\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0\\n4\\n6\\n6\\n-1\\n6\\n72'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, f\"expected {expected}, got {solution()}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 3\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 4\nassert solution(12) == 4\nassert solution(13) == 4\nassert solution(14) == 4\nassert solution(15) == 4\nassert solution(16) == 4\nassert solution(17) == 4\nassert solution(18) == 4\nassert solution(19) == 4\nassert solution(20) == 5\nassert solution(21) == 5\nassert solution(22) == 5\nassert solution(23) == 5\nassert solution(24) == 5\nassert solution(25) == 5\nassert solution(26) == 5\nassert solution(27) == 5\nassert solution(28) == 5\nassert solution(29) == 5\nassert solution(30) == 5\nassert solution(31) == 6\nassert solution(32) == 6\nassert solution(33) == 6\nassert solution(34) == 6\nassert solution(35) == 6\nassert solution(36) == 6\nassert solution(37) == 6\nassert solution(38) == 6\nassert solution(39) == 6\nassert solution(40) == 6\nassert solution(41) == 6\nassert solution(42) == 6\nassert solution(43) == 6\nassert solution(44) == 6\nassert solution(45) == 6\nassert solution(46) == 6\nassert solution(47) == 6\nassert solution(48) == 6\nassert solution(49) == 6\nassert solution(50) == 6\nassert solution(51) == 6\nassert solution(52) == 6\nassert solution(53) == 6\nassert solution(54) == 6\nassert solution(55) == 6\nassert solution(56) == 6\nassert solution(57) == 6\nassert solution(58) == 6\nassert solution(59) == 6\nassert solution(60) == 6\nassert solution(61) == 6\nassert solution(62) == 6\nassert solution(63) == 6\nassert solution(64) == 6\nassert solution(65) == 6\nassert solution(66) == 6\nassert solution(67) == 6\nassert solution(68) == 6\nassert solution(69) == 6\nassert solution(70) == 6\nassert solution(71) == 6\nassert solution(72) == 6\nassert solution(73) == 6\nassert solution(74) == 6\nassert solution(75) == 6\nassert solution(76) == 6\nassert solution(77) == 6\nassert solution(78) == 6\nassert solution(79) == 6\nassert solution(80) == 6\nassert solution(81) == 6\nassert solution(82) == 6\nassert solution(83) == 6\nassert solution(84) == 6\nassert solution(85) == 6\nassert solution(86) == 6\nassert solution(87) == 6\nassert solution(88) == 6\nassert solution(89) == 6\nassert solution(90) == 6\nassert solution(91) == 6\nassert solution(92) == 6\nassert solution(93) == 6\nassert solution(94) == 6\nassert solution(95) == 6\nassert solution(96) == 6\nassert solution(97) == 6\nassert solution(98) == 6\nassert solution(99) == 6\nassert solution(100) == 6\nassert solution(101) == 6\nassert solution(102) == 6\nassert solution(103) == 6\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 0\nassert solution(10000000000000000000) == 72",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == 0\nassert solution('7') == 4\nassert solution('10') == 6\nassert solution('25') == 6\nassert solution('30') == 6\nassert solution('14') == 6\nassert solution('27') == 72",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    7\n    1\n    10\n    25\n    30\n    14\n    27\n    1000000000000000000\n    \"\"\"\n) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    100000000000000000000000000\n    \"\"\"\n) == \"-1\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    30\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    15\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    20\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    24\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    11\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    23\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    60\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    150\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    200\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    240\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    5000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    15000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    20000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    24000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    50000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    100000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    150000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    200000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    240000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    500000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    1000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    1500000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    2000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    2400000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    5000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    15000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    20000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    24000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    50000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    100000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    150000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    200000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    240000000\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    500000000\n    \"\"\"\n) == \"4\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0, \"Error in solution.\"\nassert solution(10) == 4, \"Error in solution.\"\nassert solution(25) == 6, \"Error in solution.\"\nassert solution(30) == 6, \"Error in solution.\"\nassert solution(14) == 6, \"Error in solution.\"\nassert solution(27) == -1, \"Error in solution.\"\nassert solution(1000000000000000000) == 72, \"Error in solution.\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(30) == 0\nassert solution(20) == 1\nassert solution(24) == 3\nassert solution(1000000000000000000) == -1\nassert solution(1) == 0\nassert solution(5) == 1\nassert solution(15) == 2\nassert solution(10) == 2\nassert solution(20) == 3\nassert solution(30) == 5\nassert solution(40) == 6\nassert solution(50) == 6\nassert solution(100) == -1\nassert solution(90) == -1\nassert solution(80) == -1\nassert solution(70) == -1\nassert solution(60) == -1\nassert solution(50) == -1\nassert solution(40) == -1\nassert solution(30) == -1\nassert solution(20) == -1\nassert solution(10) == -1\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 4\nassert solution(8) == 5\nassert solution(9) == 5\nassert solution(10) == 6\nassert solution(11) == 6\nassert solution(12) == 7\nassert solution(13) == 7\nassert solution(14) == 8\nassert solution(15) == 8\nassert solution(16) == 9\nassert solution(17) == 9\nassert solution(18) == 10\nassert solution(19) == 10\nassert solution(20) == 11\nassert solution(21) == 11\nassert solution(22) == 12\nassert solution(23) == 12\nassert solution(24) == 13\nassert solution(25) == 13\nassert solution(26) == 14\nassert solution(27) == 14\nassert solution(28) == 15\nassert solution(29) == 15\nassert solution(30) == 16\nassert solution(31) == 16\nassert solution(32) == 17\nassert solution(33) == 17\nassert solution(34) == 18\nassert solution(35) == 18\nassert solution(36) == 19\nassert solution(37) == 19\nassert solution(38) == 20\nassert solution(39) == 20\nassert solution(40) == 21\nassert solution(41) == 21\nassert solution(42) == 22\nassert solution(43) == 22\nassert solution(44) == 23\nassert solution(45) == 23\nassert solution(46) == 24\nassert solution(47) == 24\nassert solution(48) == 25\nassert solution(49) == 25\nassert solution(50) == 26\nassert solution(51) == 26\nassert solution(52) == 27\nassert solution(53) == 27\nassert solution(54) == 28\nassert solution(55) == 28\nassert solution(56) == 29\nassert solution(57) == 29\nassert solution(58) == 30\nassert solution(59) == 30\nassert solution(60) == 31\nassert solution(61) == 31\nassert solution(62) == 32\nassert solution(63) == 32\nassert solution(64) == 33\nassert solution(65) == 33\nassert solution(66) == 34\nassert solution(67) == 34\nassert solution(68) == 35\nassert solution(69) == 35\nassert solution(70) == 36\nassert solution(71) == 36\nassert solution(72) == 37\nassert solution(73) == 37\nassert solution(74) == 38\nassert solution(75) == 38\n",
        "num_ids_2": 20,
        "num_ids_4": 57
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Output does not match expected output\\nInput: {stdin}\\nOutput: {output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test failed: solution({stdin})!= output\\nInput: {stdin}\\nOutput: {output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(stdin=\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"\nassert solution(stdin=\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(stdin=\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\n",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"\nassert solution(\"3\\n3\\n1 1 3\\n3\\n1 1 3\\n3\\n1 1 3\") == \"YES\"\n",
        "num_ids_2": 109,
        "num_ids_4": 149
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test {i+1} failed: got '{solution(input)}', expected '{expected}'\" for i, (input, expected) in enumerate(tests)",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'YES', \"Test case 1 failed\"\nassert solution(open('input2.txt').read()) == 'YES', \"Test case 2 failed\"\nassert solution(open('input3.txt').read()) == 'YES', \"Test case 3 failed\"\nassert solution(open('input4.txt').read()) == 'YES', \"Test case 4 failed\"\nassert solution(open('input5.txt').read()) == 'YES', \"Test case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"5\\n2\\n1 1 2\\n3\\n1 1 3\\n4\\n2 1 1 1\\n5\\n1 1 1 1\\n6\\n1 1 1 1\\n7\\n1 1 1 1\\n8\\n1 1 1 1\\n9\\n1 1 1 1\\n10\\n1 1 1 1\\n11\\n1 1 1 1\\n12\\n1 1 1 1\\n13\\n1 1 1 1\\n14\\n1 1 1 1\\n15\\n1 1 1 1\\n16\\n1 1 1 1\\n17\\n1 1 1 1\\n18\\n1 1 1 1\\n19\\n1 1 1 1\\n20\\n1 1 1 1\\n21\\n1 1 1 1\\n22\\n1 1 1 1\\n23\\n1 1 1 1\\n24\\n1 1 1 1\\n25\\n1 1 1 1\\n26\\n1 1 1 1\\n27\\n1 1 1 1\\n28\\n1 1 1 1\\n29\\n1 1 1 1\\n30\\n1 1 1 1\\n31\\n1 1 1 1\\n32\\n1 1 1 1\\n33\\n1 1 1 1\\n34\\n1 1 1 1\\n35\\n1 1 1 1\\n36\\n1 1 1 1\\n37\\n1 1 1 1\\n38\\n1 1 1 1\\n39\\n1 1 1 1\\n40\\n1 1 1 1\\n41\\n1 1 1 1\\n42\\n1 1 1 1\\n43\\n1 1 1 1\\n44\\n1 1 1 1\\n45\\n1 1 1 1\\n46\\n1 1 1 1\\n47\\n1 1 1 1\\n48\\n1 1 1 1\\n49\\n1 1 1 1\\n50\\n1 1 1 1\\n51\\n1 1 1 1\\n52\\n1 1 1 1\\n53\\n1 1 1 1\\n54\\n1 1 1 1\\n55\\n1 1 1 1\\n56\\n1 1 1 1\\n57\\n1 1 1 1\\n58\\n1 1 1 1\\n59\\n1 1 1 1\\n60\\n1 1 1 1\\n61\\n1 1 1 1\\n62\\n1 1 1 1\\n63\\n1 1 1 1\\n64\\n1 1 1 1\\n65\\n1 1 1 1\\n66\\n1 1 1 1\\n67\\n1 1 1 1\\n68\\n1 1 1 1\\n69\\n1 1 1 1\\n70\\n1 1 1 1\\n71\\n1 1 1 1\\n72\\n1 1 1 1\\n73\\n1 1 1 1\\n74\\n1 1 1 1\\n75\\n1 1 1 1\\n76\\n1 1 1 1\\n77\\n1 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\ninput_data = \"\"\"4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 'YES'\nassert solution(3) == 'NO'\nassert solution(123) == 'YES'\nassert solution(12) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7abacaba\\nbacabaa\\n') == '4'\nassert solution('5zcabd\\ndbacz\\n') == '0'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\\n\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nabc\\ndef\\nabc\") == \"0\\n\"\nassert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\\n\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect. Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == 4, \"The expected output is not correct.\"\nassert solution(5) == 0, \"The expected output is not correct.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution(\"10 2 3\\n50 2 4\\n100 1 5\\n500 1 6\\n1000 1 7\\n10000 1 8\\n100000 1 9\\n1000000 1 10\\n10000000 1 11\\n100000000 1 12\\n1000000000 1 13\\n10000000000 1 14\\n100000000000 1 15\\n1000000000000 1 16\\n10000000000000 1 17\\n100000000000000 1 18\\n1000000000000000 1 19\\n10000000000000000 1 20\\n100000000000000000 1 21\\n1000000000000000000 1 22\\n1000000000000000000 1 23\\n10000000000000000000 1 24\\n10000000000000000000 1 25\\n10000000000000000000 1 26\\n10000000000000000000 1 27\\n10000000000000000000 1 28\\n10000000000000000000 1 29\\n10000000000000000000 1 30\\n100000000000000000000 1 31\\n100000000000000000000 1 32\\n100000000000000000000 1 33\\n100000000000000000000 1 34\\n100000000000000000000 1 35\\n100000000000000000000 1 36\\n100000000000000000000 1 37\\n100000000000000000000 1 38\\n100000000000000000000 1 39\\n100000000000000000000 1 40\\n1000000000000000000000 1 41\\n100000000000000000000 1 42\\n100000000000000000000 1 43\\n1000000000",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\\n\"\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 3 1\") == \"2\"\nassert solution(\"4 4 1\") == \"3\"\nassert solution(\"5 5 1\") == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"-17\"\nassert solution(\"1000000000 1 6\") == \"2999999997\"\nassert solution(\"1 1 1000000000\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nfor i in range(1, 10):\n    assert solution(f\"1\\n{i}\") == f\"{i}\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Error: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089', 'Testcase 1 failed'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n10\\n8\\n5\\n3\\n\\n12\\n8\\n8\\n7\\n2\\n\\n12343\\n43\\n4543\\n39\\n123212\\n1000000000\\n1000000000\\n1\\n1\\n1\\n1000000000\\n1000000000\\n1\\n1\\n10\\n11\\n2\\n1\\n5\\n10\\n11\\n9\\n1\\n10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '70'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed: expected output '{expected_output}', got '{solution(input())}'\"\nprint(\"Test case passed\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\", \"Solution not working as expected\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n\"\"\"\n) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000') == '70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10'",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nfor i in range(1, 6):\n    assert solution(input()) == output\n    print(f\"Case {i}: {solution(input())}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1}: expected {expected}, got {solution(input())}\" for i, (a, b) in enumerate(zip(stdin.split(), stdin.split())) for expected in [1, 0, 2, 2, 1]",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 3\\n\"\n    \"10 10\\n\"\n    \"2 4\\n\"\n    \"7 4\\n\"\n    \"9 3\\n\"\n) == \"1\\n0\\n2\\n2\\n1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\\n\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n1\\n2\\n3\\n4\\n5\\n\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n2\\n3\\n4\\n5\\n6\\n\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 100,
        "num_ids_4": 219
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Test case {t+1} failed: expected {output}, got {solution(stdin)}\"\nfor t in range(int(stdin), int(stdin)+int(stdin)):\n    a, b = map(int, input().split())\n    moves = 0\n    if a % 2 == 0:\n        moves += 1\n    if a > 1:\n        moves += a + 1\n    if a > 2:\n        moves += a - 1\n    if b % 2 == 0:\n        moves += 1\n    if b > 0:\n        moves += b + 1\n    if b > 2:\n        moves += b - 1\n    print(moves)",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"0\"\nassert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"1\"\nassert solution(6) == \"2\"\nassert solution(7) == \"2\"\nassert solution(8) == \"1\"\nassert solution(9) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\") == \"1\\n0\\n2\\n2\\n1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(100)) == \"1\"\nassert solution(str(1)) == \"0\"\nassert solution(str(2)) == \"2\"\nassert solution(str(3)) == \"1\"\nassert solution(str(4)) == \"2\"\nassert solution(str(5)) == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '13\\n90\\n1\\n66'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 13\nassert solution(1) == 1\nassert solution(10) == 10000\nassert solution(100) == 100000\nassert solution(9999) == 99999\n",
        "num_ids_2": 19,
        "num_ids_4": 49
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13\\n90\\n1\\n66'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"13\\n90\\n1\\n66\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777') == '13\\n90\\n1\\n66'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\\n\") == \"13\\n90\\n1\\n66\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"13\"\nassert solution(4) == \"90\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\\n2 6\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\\n2 2\"",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES\\n2 6'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES\\n2 2'",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input(), output()) for input, output in [\n        (\"2\", \"YES\"),\n        (\"3\", \"YES\"),\n        (\"4\", \"YES\"),\n        (\"6\", \"NO\"),\n    ]\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(2)) == \"YES\"\nassert solution(str(1)) == \"YES\"\nassert solution(str(100)) == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"YES\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([1,2,3,4,5], 3) == 5",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 1) == 5\nassert solution(2, 3) == 6\nassert solution(3, 2) == 13\nassert solution(3, 1) == 5\nassert solution(2, 2) == 13",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 2, 3], 1) == 5\nassert solution([3, -1, 0, 2], 3) == 6\nassert solution([2, -3, -1, 5, -4], 2) == 13",
        "num_ids_2": 39,
        "num_ids_4": 64
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([4,2,3], 1) == 5, \"Test failed for example 1\"\nassert solution([3,-1,0,2], 3) == 6, \"Test failed for example 2\"\nassert solution([2,-3,-1,5,-4], 2) == 13, \"Test failed for example 3\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4, 2, 3], 1) == 5\nassert solution([3, -1, 0, 2], 3) == 6\nassert solution([2, -3, -1, 5, -4], 2) == 13\nassert solution([1, 2, 3, 4, 5], 6) == 16\nassert solution([-1, -2, -3, -4], 1) == -1\nassert solution([-1, -2, -3], 2) == 0\nassert solution([-1, -2, -3, -4], 3) == 0",
        "num_ids_2": 39,
        "num_ids_4": 89
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([4,2,3], 1) == 5, \"Test 1 failed\"\nassert solution([3,-1,0,2], 3) == 6, \"Test 2 failed\"\nassert solution([2,-3,-1,5,-4], 2) == 13, \"Test 3 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 76
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([1,2,3,4], 1) == 0\nassert solution([1,2,3,4], 2) == 0\nassert solution([1,2,3,4], 3) == 0",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input: A = [4,2,3], K = 1\\nOutput: 5\\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\\n\\nExample 1:\\nInput: A = [3,-1,0,2], K = 3\\nOutput: 6\\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\\n\\nExample 2:\\nInput: A = [2,-3,-1,5,-4], K = 2\\nOutput: 13\\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\\n\\n') == '5\\n6\\n13\\n'\nassert solution('Input: A = [3,-1,0,2], K = 3\\nOutput: 6\\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\\n\\nExample 3:\\nInput: A = [2,-3,-1,5,-4], K = 2\\nOutput: 13\\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\\n\\n') == '6\\n13\\n'\nassert solution('Input: A = [2,-3,-1,5,-4], K = 2\\nOutput: 13\\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\\n\\n') == '13\\n'\nassert solution('Input: A = [4,2,3], K = 1\\nOutput: 5\\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\\n\\nExample 1:\\nInput: A = [3,-1,0,2], K = 3\\nOutput: 6\\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\\n\\nExample 2:\\nInput: A = [2,-3,-1,5,-4], K = 2\\nOutput: 13\\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\\n\\n') == '5\\n6\\n13\\n'",
        "num_ids_2": 312,
        "num_ids_4": 562
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True\n\nprint(\"All tests passed\")",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 146
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\n\"\nassert solution(\"7\\nbeat\\nbeat\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\nbet\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 138
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\n\") == \"beet\\n\"\nassert solution(\"7\\nbeat\\n\\n\") == \"beet\\n\"\nassert solution(\"7\\nbeat\\n\\n\\n\") == \"beet\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 98
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"3\\nhello\\nworld\\npython\\n\") == \"python\\n\"\nassert solution(\"1\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"b\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\"\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"a\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\"\nassert solution(\"1\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\nxyz\\n",
        "num_ids_2": 53,
        "num_ids_4": 273
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeat\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nbet\\nbet\\nbet\\nbet\\nbet\") == \"beat\"\nassert solution(\"7\\nbeat\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\nbet\\",
        "num_ids_2": 64,
        "num_ids_4": 1027
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbeat\\nbet\\n\") == \"beet\\nvet\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\nbet\\n\") == \"beet\\nvet\"\nprint(\"All tests passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nbeat\\nbet\\nbet\\nbet\\nbet\\nbet\") == \"beat\"\nassert solution(\"7\\nbeat\\nbeat\\nbeat\\nbeat\\nbeat\\nbeat\\nbeat\") == \"beat\"",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\nbet\\n\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\nbet\\n\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\nbet\\n\") == \"beet\\nvet\"",
        "num_ids_2": 74,
        "num_ids_4": 111
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet are written on two sheets each, while beat, bed, and bet are written on one vote each.\\n\"\nassert solution(\"5\\napple\\nbanana\\nbanana\\nbanana\") == \"banana\\n\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"beet\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"3\\n3\\n5\\n2\") == \"12\"\nassert solution(\"4\\n1 2 3 4\") == \"30\"",
        "num_ids_2": 27,
        "num_ids_4": 67
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n4 8') == '8\\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"3\\n2 3\") == \"5\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"10\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"15\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\", \"Test Case 1 Failed\"\nassert solution(\"3\\n1 2 3\\n\") == \"9\\n\", \"Test Case 2 Failed\"\nassert solution(\"2\\n1 2 1\\n\") == \"2\\n\", \"Test Case 3 Failed\"\nassert solution(\"2\\n1 2 1 1 1\\n\") == \"3\\n\", \"Test Case 4 Failed\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"4\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234\") == \"84\\n\"\nassert solution(\"150\") == \"1084\\n\"\nassert solution(\"100\") == \"0\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"84\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"1168\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"84\"\nprint(\"Correct!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"84\", \"Test failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"8\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 2\") == \"8\\n\"\nassert solution(stdin=\"1 2\") == \"1\\n\"\nassert solution(stdin=\"3 2\") == \"4\\n\"\nassert solution(stdin=\"10 5\") == \"267981\\n\"\nassert solution(stdin=\"30 30\") == \"15093369\\n\"\nassert solution(stdin=\"1000000 1000000\") == \"767466283\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"\nassert solution(\"3 4\\n\") == \"18\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 5\\n\") == \"105\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '8\\n', \"Failed\"\nprint(\"Success\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"8\\n\", \"Sample Input: 2 2\\nExpected Output: 8\\n\"\nassert solution(\"3 3\") == \"11\\n\", \"Sample Input: 3 3\\nExpected Output: 11\\n\"\nassert solution(\"4 4\") == \"12\\n\", \"Sample Input: 4 4\\nExpected Output: 12\\n\"\nassert solution(\"5 5\") == \"14\\n\", \"Sample Input: 5 5\\nExpected Output: 14\\n\"\nassert solution(\"6 6\") == \"16\\n\", \"Sample Input: 6 6\\nExpected Output: 16\\n\"\nassert solution(\"7 7\") == \"18\\n\", \"Sample Input: 7 7\\nExpected Output: 18\\n\"\nassert solution(\"8 8\") == \"20\\n\", \"Sample Input: 8 8\\nExpected Output: 20\\n\"\nassert solution(\"9 9\") == \"22\\n\", \"Sample Input: 9 9\\nExpected Output: 22\\n\"\nassert solution(\"10 10\") == \"25\\n\", \"Sample Input: 10 10\\nExpected Output: 25\\n\"\nassert solution(\"11 11\") == \"28\\n\", \"Sample Input: 11 11\\nExpected Output: 28\\n\"\nassert solution(\"12 12\") == \"31\\n\", \"Sample Input: 12 12\\nExpected Output: 31\\n\"\nassert solution(\"13 13\") == \"34\\n\", \"Sample Input: 13 13\\nExpected Output: 34\\n\"\nassert solution(\"14 14\") == \"37\\n\", \"Sample Input: 14 14\\nExpected Output: 37\\n\"\nassert solution(\"15 15\") == \"40\\n\", \"Sample Input: 15 15\\nExpected Output: 40\\n\"\nassert solution(\"16 16\") == \"45\\n\", \"Sample Input: 16 16\\nExpected Output: 45\\n\"\nassert solution(\"17 17\") == \"50\\n\", \"Sample Input: 17 17\\nExpected Output: 50\\n\"\nassert solution(\"18 18\") == \"55\\n\", \"Sample Input: 18 18\\nExpected Output: 55\\n\"\nassert solution(\"19 19\") == \"60\\n\", \"Sample Input: 19 19\\nExpected Output: 60\\n\"\nassert solution(\"20 20\") == \"65\\n\", \"Sample Input: 20 20\\nExpected Output: 65\\n\"\nassert solution(\"21 21\") == \"70\\n\", \"Sample Input: 21 21\\nExpected Output: 70\\n\"\nassert solution(\"22 22\") == \"75\\n\", \"Sample Input: 22 22\\nExpected Output: 75\\n\"\nassert solution(\"23 23\") == \"80\\n\", \"Sample Input: 23 23\\nExpected Output: 80\\n\"\nassert solution(\"24 24\") == \"85\\n\", \"Sample Input: 24 24\\nExpected Output: 85\\n\"\nassert solution(\"25 25\") == \"90\\n\", \"Sample Input: 25 25\\nExpected Output: 90\\n\"\nassert solution(\"26 26\") == \"95\\n\", \"Sample Input: 26 26\\nExpected Output: 95\\n\"\nassert solution(\"27 27\") == \"100\\n\", \"Sample Input: 27 27\\nExpected Output: 100\\n\"\nassert solution(\"28 28\") == \"105\\n\", \"Sample Input: 28 28\\nExpected Output: 105\\n\"\nassert solution(\"29 29\") == \"110\\n\", \"Sample Input: 29 29\\nExpected",
        "num_ids_2": 66,
        "num_ids_4": 134
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"\nassert solution(\"3 3\\n\") == \"11\\n\"\nassert solution(\"4 4\\n\") == \"16\\n\"\nassert solution(\"5 5\\n\") == \"20\\n\"\nassert solution(\"6 6\\n\") == \"25\\n\"\nassert solution(\"7 7\\n\") == \"30\\n\"\nassert solution(\"8 8\\n\") == \"35\\n\"\nassert solution(\"9 9\\n\") == \"40\\n\"\nassert solution(\"10 10\\n\") == \"45\\n\"\nassert solution(\"11 11\\n\") == \"50\\n\"\nassert solution(\"12 12\\n\") == \"55\\n\"\nassert solution(\"13 13\\n\") == \"60\\n\"\nassert solution(\"14 14\\n\") == \"65\\n\"\nassert solution(\"15 15\\n\") == \"70\\n\"\nassert solution(\"16 16\\n\") == \"75\\n\"\nassert solution(\"17 17\\n\") == \"80\\n\"\nassert solution(\"18 18\\n\") == \"85\\n\"\nassert solution(\"19 19\\n\") == \"90\\n\"\nassert solution(\"20 20\\n\") == \"95\\n\"\nassert solution(\"21 21\\n\") == \"100\\n\"\nassert solution(\"22 22\\n\") == \"105\\n\"\nassert solution(\"23 23\\n\") == \"110\\n\"\nassert solution(\"24 24\\n\") == \"115\\n\"\nassert solution(\"25 25\\n\") == \"120\\n\"\nassert solution(\"26 26\\n\") == \"125\\n\"\nassert solution(\"27 27\\n\") == \"130\\n\"\nassert solution(\"28 28\\n\") == \"135\\n\"\nassert solution(\"29 29\\n\") == \"140\\n\"\nassert solution(\"30 30\\n\") == \"145\\n\"\nassert solution(\"31 31\\n\") == \"150\\n\"\nassert solution(\"32 32\\n\") == \"155\\n\"\nassert solution(\"33 33\\n\") == \"160\\n\"\nassert solution(\"34 34\\n\") == \"165\\n\"\nassert solution(\"35 35\\n\") == \"170\\n\"\nassert solution(\"36 36\\n\") == \"175\\n\"\nassert solution(\"37 37\\n\") == \"180\\n\"\nassert solution(\"38 38\\n\") == \"185\\n\"\nassert solution(\"39 39\\n\") == \"190\\n\"\nassert solution(\"40 40\\n\") == \"195\\n\"\nassert solution(\"41 41\\n\") == \"200\\n\"\nassert solution(\"42 42\\n\") == \"205\\n\"\nassert solution(\"43 43\\n\") == \"210\\n\"\nassert solution(\"44 44\\n\") == \"215\\n\"\nassert solution(\"45 45\\n\") == \"220\\n\"\nassert solution(\"46 46\\n\") == \"225\\n\"\nassert solution(\"47 47\\n\") == \"230\\n\"\nassert solution(\"48 48\\n\") == \"235\\n\"\nassert solution(\"49 49\\n\") == \"240\\n\"\nassert solution(\"50 50\\n\") == \"245\\n\"\nassert solution(\"51 51\\n\") == \"250\\n\"\nassert solution(\"52 52\\n\") == \"255\\n\"\nassert solution(\"53 53\\n\") == \"260\\n\"\nassert solution(\"54 54\\n\") == \"265\\n\"\nassert solution",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'2 2\\n') == '8\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\", \"Test 1 failed.\"\nassert solution(\"3 3\\n\") == \"13\\n\", \"Test 2 failed.\"\nassert solution(\"4 4\\n\") == \"16\\n\", \"Test 3 failed.\"\nassert solution(\"5 5\\n\") == \"17\\n\", \"Test 4 failed.\"\nassert solution(\"6 6\\n\") == \"18\\n\", \"Test 5 failed.\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"2 4\\n3 4\\n5 6\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n1 2\\n3 1\\n2 1\\n4 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\\n1 2\\n3 1\\n2 1\\n5 3\") == \"POSSIBLE\"",
        "num_ids_2": 48,
        "num_ids_4": 116
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"POSSIBLE\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n''') == 'POSSIBLE'\n\nassert solution('''\n3 4\n1 2\n2 3\n3 4\n4 1\n''') == 'POSSIBLE'\n\nassert solution('''\n3 4\n1 2\n2 3\n1 4\n''') == 'POSSIBLE'\n\nassert solution('''\n3 4\n1 2\n2 3\n1 4\n2 1\n''') == 'POSSIBLE'\n\nassert solution('''\n4 3\n1 2\n2 3\n1 4\n2 1\n''') == 'IMPOSSIBLE'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 2\n    1 2\n    2 3\n''') == 'POSSIBLE'\n\nassert solution('''\n    5 3\n    1 2\n    3 4\n    2 4\n    4 5\n''') == 'POSSIBLE'\n\nassert solution('''\n    5 3\n    1 2\n    3 4\n    2 4\n    6 5\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n    3 3\n    1 2\n    2 3\n''') == 'IMPOSSIBLE'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n') == 'POSSIBLE\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\") == \"POSSIBLE\"\nassert solution(\"3 2\\na_1 b_1\\na_2 b_2\\na_4 b_4\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_5 b_5\") == \"IMPOSSIBLE\"",
        "num_ids_2": 70,
        "num_ids_4": 112
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\\n3 4\\n5 6\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed\"\nassert solution(\"Hello World\") == \"d\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"banana\") == \"ana\"\nassert solution(\"coding\") == \"codi\"\nassert solution(\"hello\") == \"olleh\"\nassert solution(\"test\") == \"tst\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed for s = 'atcoder'\"\nassert solution(\"\") == \"\", \"Test failed for s = ''\"\nassert solution(\"hello\") == \"olleh\", \"Test failed for s = 'hello'\"\nassert solution(\"abcde\") == \"ace\", \"Test failed for s = 'abcde'\"\nassert solution(\"hello world\") == \"olleh wdlr\", \"Test failed for s = 'hello world'\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"acdr\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"The solution should be acdr\"\nassert solution(\"hello\") == \"llohe\", \"The solution should be llohe\"\nassert solution(\"\") == \"\", \"The solution should be empty string\"",
        "num_ids_2": 41,
        "num_ids_4": 55
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"The solution should return 'acdr' but it returns '{}'.\".format(solution(\"atcoder\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Expected 'acdr' but got '{}'\".format(solution(\"atcoder\"))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Test Failed\"\nassert solution(\"Gorilla banana\") == \"NO\", \"Test Failed\"\nassert solution(\"kale kale\") == \"YES\", \"Test Failed\"\nassert solution(\"aabbccddeeff\") == \"YES\", \"Test Failed\"\nassert solution(\"hello\") == \"NO\", \"Test Failed\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Input string should form a word chain\"\nassert solution(\"cat cat cat\") == \"NO\", \"Input string should not form a word chain\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"abcde\") == \"NO\"\nassert solution(\"abcedf\") == \"NO\"\nassert solution(\"abccba\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"The strings rng gorilla apple should form a word chain.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Your solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"The given input is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Error: solution does not work as expected\"\nassert solution(\"apple gorilla rng\") == \"YES\", \"Error: solution does not work as expected\"\nassert solution(\"apple banana\") == \"NO\", \"Error: solution does not work as expected\"\nassert solution(\"apple\") == \"YES\", \"Error: solution does not work as expected\"\nassert solution(\"applebanana\") == \"NO\", \"Error: solution does not work as expected\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('36\\n24') == 'EQUAL'\n\nprint('EQUAL')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\", \"Your solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"GREATER\", \"Incorrect Output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('36\\n24\\n') == 'GREATER\\n'\nassert solution('64\\n20\\n') == 'EQUAL\\n'\nassert solution('40\\n20\\n') == 'LESS\\n'\nassert solution('0\\n0\\n') == 'EQUAL\\n'\nassert solution('-40\\n20\\n') == 'LESS\\n'\nassert solution('0\\n0\\n') == 'EQUAL\\n'",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\", \"Solution for problem statement 5 not correct.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\"\nassert solution(\"12\\n10\\n\") == \"EQUAL\"\nassert solution(\"12\\n12\\n\") == \"EQUAL\"\nassert solution(\"0\\n1\\n\") == \"LESS\"\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\napple\\noleap\\n1\\ngrape\\n') == '2'\n\nassert solution('3\\napple\\noleap\\n1\\ngrape\\n2\\nbanana\\n') == '2'\n\nassert solution('3\\napple\\noleap\\n1\\ngrape\\n2\\nbanana\\n3\\nbanana\\n') == '3'\n\nassert solution('3\\napple\\noleap\\n1\\ngrape\\n2\\nbanana\\n3\\nbanana\\n4\\nbanana\\n') == '3'\n\nassert solution('3\\napple\\noleap\\n1\\ngrape\\n2\\nbanana\\n3\\nbanana\\n4\\nbanana\\n5\\nbanana\\n') == '4'",
        "num_ids_2": 59,
        "num_ids_4": 146
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"The solution should return 2, but it returns {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2', 'Input error'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\no\\n1\\ngrape\\napple\\norange\") == \"2\\n\"\nassert solution(\"1\\nbananas\\n2\\nbananas\\n3\\nbananas\") == \"1\\n\"\nassert solution(\"2\\nbananas\\n3\\nbananas\\n1\\nbananas\") == \"0\\n\"\nassert solution(\"1\\nbananas\\n3\\nbananas\\n1\\nbananas\") == \"1\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n1\\ngrape\\ngrape\\ngrape\\n1\\n3\\napple\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\napple\\nother\\napple\\n1\\n3\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\", \"Test Case 1\"\nassert solution(\"C\") == \"G\", \"Test Case 2\"\nassert solution(\"G\") == \"T\", \"Test Case 3\"\nassert solution(\"T\") == \"T\", \"Test Case 4\"\nassert solution(\"X\") == \"X\", \"Test Case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\", \"Sample Output does not match\"\nassert solution(\"C\") == \"G\", \"Sample Output does not match\"\nassert solution(\"G\") == \"C\", \"Sample Output does not match\"\nassert solution(\"T\") == \"A\", \"Sample Output does not match\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\", \"The output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\nassert solution('z') == 'z'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nprint(\"All test cases pass\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\", \"The solution should be T.\"\nassert solution(\"C\") == \"G\", \"The solution should be G.\"\nassert solution(\"G\") == \"A\", \"The solution should be A.\"\nassert solution(\"T\") == \"C\", \"The solution should be C.\"\nassert solution(\"Z\") == \"Z\", \"The solution should be Z.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"14\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n1 2 2 2 1\\n3 2 2 4 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n3 2 2 4 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n3 2 2 4 1\") == \"14\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2 2 4 1\\n1 2 2 2 1') == '14'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nA12\\nA13\\nA22\\nA33\\nA44\\nA11\\nA22\\nA33\\nA44\\nA55\\n') == '14'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"14\\n\", \"Sample Output does not match expected output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2 2 2\\n') == '1\\n'\nprint('Test Passed')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"5 5\\n1 1 1 1 1\") == \"0\\n\"\nassert solution(\"3 2\\n3 3 3\") == \"1\\n\"\nassert solution(\"1 1\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"4 2\\n2 1 3 4\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2 2 2') == '1\\n'\nassert solution('5 3\\n5 4 2 2 3') == '2\\n'\nassert solution('10 5\\n5 2 3 4 5 1') == '3\\n'\nassert solution('7 8\\n10 5 2 3 4 5') == '2\\n'\nassert solution('5 10\\n2 3 4 5 6 7 8 9 10') == '3\\n'",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"3 1\\n3 2\\n3 3\") == \"2\\n\"\nassert solution(\"2 3\\n2 3\\n1 1\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\\n\", \"Testcase 1\"\n\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"2\\n\", \"Testcase 2\"\n\nassert solution(\"5 10\\n1 2 3 4 5\\n\") == \"3\\n\", \"Testcase 3\"",
        "num_ids_2": 62,
        "num_ids_4": 96
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n2 2 2\\n') == '1\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\"\nassert solution(\"3 3\\n2 2\\n\") == \"2\"\nassert solution(\"3 3\\n2 2\\n\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\", \"Output should be 1, not {}\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"3 0 1\\n4 1 2\\n5 2 3\\n\") == \"No\"\nassert solution(\"5 0 1\\n6 1 2\\n7 2 3\\n\") == \"No\"\nassert solution(\"8 0 1\\n9 1 2\\n10 2 3\\n\") == \"Yes\"",
        "num_ids_2": 60,
        "num_ids_4": 121
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 2 3') == 'No'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"\nassert solution(\"1 1 1\\n2 1 2\\n1 0 1\") == \"No\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes\\n', \"The output is incorrect.\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n0 1 0\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n0 1 0\\n1 0 1\\n2 1 2\") == \"Yes\"",
        "num_ids_2": 56,
        "num_ids_4": 91
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\", \"Solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 1 0\\n2 2 1\\n1 0 0\") == \"Yes\"\nassert solution(\"1 1 0\\n2 1 1\\n3 0 0\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 1\\n3 0 0\") == \"Yes\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"No\"\n\nassert solution(\"1 0 0\\n0 0 1\\n0 0 0\") == \"No\"\nassert solution(\"1 1 0\\n1 1 0\\n1 1 0\") == \"No\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"No\"\n\nassert solution(\"0 0 0\\n0 1 0\\n0 0 0\") == \"No\"\nassert solution(\"1 1 1\\n2 2 1\\n3 3 0\") == \"No\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"No\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n0 1 0\\n1 1 1') == 'No'\nassert solution('2 0 1\\n2 1 1\\n1 0 1') == 'Yes'\nassert solution('2 1 1\\n0 1 0\\n1 1 1') == 'No'",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"The function should return 'ARC' for 'ABC' input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"The expected output is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nassert solution('ABCabc') == 'ARCabc'\nassert solution('ABCARC') == 'ABCARC'\nassert solution('ARCA') == 'ARCA'\nassert solution('ABCARCABC') == 'ABCARCABC'",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n\nThe solution is correct. The `solution` function takes an input string `S` representing the type of the contest held last week and returns the string representing the type of the contest held this week. \n\nWe can use the string comparison `==` to check if the input string `S` matches the expected value `\"ABC\"` or `\"ARC\"`. If the comparison is true, we return the string `\"ARC\"` as the output. \n\nIf the comparison is false, we raise an error using the `raise` statement to indicate a problem.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\", \"Input is not valid\"\nassert solution(\"4 7 2\") == \"0\\n\", \"Input is not valid\"\nassert solution(\"4 11 3\") == \"2\\n\", \"Input is not valid\"\nassert solution(\"4 13 5\") == \"0\\n\", \"Input is not valid\"\nassert solution(\"4 18 2\") == \"3\\n\", \"Input is not valid\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"10 15 3\") == \"2\"\nassert solution(\"5 10 5\") == \"2\"\nassert solution(\"2 5 5\") == \"0\"\nassert solution(\"0 1 1\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nassert solution(\"6 10 3\") == \"2\\n\"\nassert solution(\"5 15 3\") == \"0\\n\"\nassert solution(\"1 10 4\") == \"1\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nassert solution(\"1 1000000000 10000000000\") == \"1000000001\\n\"\nassert solution(\"200000000000 200000000000\") == \"0\\n\"\nassert solution(\"0 100000000000000000000000000000 1000000000000000000000000000000\") == \"1000000000000000000000000000000\\n\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 60,
        "num_ids_4": 201
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"4 8 2\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"1 10 2\") == \"2\"\nassert solution(\"10 2 5\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 8 2') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test case 1 failed\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test case 2 failed\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test case 3 failed\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test case 4 failed\"\nassert solution(\"26\") == \"Christmas\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"21\") == \"Christmas\"\nassert solution(\"20\") == \"Christmas\"\nassert solution(\"19\") == \"Christmas\"\nassert solution(\"18\") == \"Christmas\"\nassert solution(\"17\") == \"Christmas\"\nassert solution(\"16\") == \"Christmas\"\nassert solution(\"15\") == \"Christmas\"\nassert solution(\"14\") == \"Christmas\"\nassert solution(\"13\") == \"Christmas\"\nassert solution(\"12\") == \"Christmas\"\nassert solution(\"11\") == \"Christmas\"\nassert solution(\"10\") == \"Christmas\"\nassert solution(\"9\") == \"Christmas\"\nassert solution(\"8\") == \"Christmas\"\nassert solution(\"7\") == \"Christmas\"\nassert solution(\"6\") == \"Christmas\"\nassert solution(\"5\") == \"Christmas\"\nassert solution(\"4\") == \"Christmas\"\nassert solution(\"3\") == \"Christmas\"\nassert solution(\"2\") == \"Christmas\"\nassert solution(\"1\") == \"Christmas\"\nassert solution(\"0\") == \"Christmas\"\nassert solution(\"25\") == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"Test case failed\"\nassert solution(\"24\") == \"Christmas Eve\\n\", \"Test case failed\"\nassert solution(\"23\") == \"Christmas Eve Eve\\n\", \"Test case failed\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\\n\", \"Test case failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"Output must be 'Christmas\\n'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"Christmas\\n\"\nassert solution(\"24\") == \"Christmas Eve\\n\"\nassert solution(\"23\") == \"Christmas Eve Eve\\n\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\\n\"\nassert solution(\"21\") == \"Christmas Eve\\n\"\nassert solution(\"19\") == \"Christmas\\n\"\nassert solution(\"18\") == \"Christmas Eve\\n\"\nassert solution(\"17\") == \"Christmas Eve Eve\\n\"\nassert solution(\"16\") == \"Christmas Eve Eve Eve\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\", \"The solution should print the string 'Christmas' for input D=25.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test case 1 failed\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test case 2 failed\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test case 3 failed\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test case 4 failed\"\nassert solution(\"12\") == \"New Year's Day\", \"Test case 5 failed\"\nassert solution(\"31\") == \"Christmas Day\", \"Test case 6 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"Output should be 'Christmas\\n'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\\n\"\nassert solution(\"3\") == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4\"\nassert solution(8) == \"4 can be divided by 2 three times: 8 -> 4 -> 2 -> 1\"\nassert solution(3) == \"3 can be divided by 2 zero times.\"\n",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"4\\n\", \"The output should be 4.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1 can be divided by 2 once: 1 -> 1'\nassert solution(2) == '2 can be divided by 2 twice: 2 -> 2'\nassert solution(3) == '3 can be divided by 2 three times: 3 -> 1'\nassert solution(4) == '4 can be divided by 2 twice: 4 -> 2'\nassert solution(5) == '5 can be divided by 2 three times: 5 -> 1'\nassert solution(6) == '6 can be divided by 2 once: 6 -> 3'\nassert solution(7) == '7 can be divided by 2 once: 7 -> 7'\nassert solution(8) == '8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1'\nassert solution(9) == '9 can be divided by 2 three times: 9 -> 2 -> 1'\nassert solution(10) == '10 can be divided by 2 three times: 10 -> 1 -> 1'\nassert solution(11) == '11 can be divided by 2 three times: 11 -> 1 -> 1'\nassert solution(12) == '12 can be divided by 2 three times: 12 -> 1 -> 1'\nassert solution(13) == '13 can be divided by 2 three times: 13 -> 1 -> 1'\nassert solution(14) == '14 can be divided by 2 three times: 14 -> 1 -> 1'\nassert solution(15) == '15 can be divided by 2 three times: 15 -> 1 -> 1'\nassert solution(16) == '16 can be divided by 2 three times: 16 -> 1 -> 1'\nassert solution(17) == '17 can be divided by 2 three times: 17 -> 1 -> 1'\nassert solution(18) == '18 can be divided by 2 three times: 18 -> 1 -> 1'\nassert solution(19) == '19 can be divided by 2 three times: 19 -> 1 -> 1'\nassert solution(20) == '20 can be divided by 2 three times: 20 -> 1 -> 1'\nassert solution(21) == '21 can be divided by 2 three times: 21 -> 1 -> 1'\nassert solution(22) == '22 can be divided by 2 three times: 22 -> 1 -> 1'\nassert solution(23) == '23 can be divided by 2 three times: 23 -> 1 -> 1'\nassert solution(24) == '24 can be divided by 2 three times: 24 -> 1 -> 1'\nassert solution(25) == '25 can be divided by 2 three times: 25 -> 1 -> 1'\nassert solution(26) == '26 can be divided by 2 three times: 26 -> 1 -> 1'\nassert solution(27) == '27 can be divided by 2 three times: 27 -> 1 -> 1'\nassert solution(28) == '28 can be divided by 2 three times: 28 -> 1 -> 1'\nassert solution(29) == '29 can be divided by 2 three times: 29 -> 1 -> 1'\nassert solution(30) == '30 can be divided by 2 three times: 30 -> 1 -> 1'\nassert solution(31) == '31 can be divided by 2 three times: 31 -> 1 -> 1'\nassert solution(32) == '32 can be divided by 2 three times: 32 -> 1 -> 1'\nassert solution(33) == '33 can be divided by 2 three times: 33 -> 1 -> 1'\nassert solution(34) == '34 can be divided by 2 three times: 34 -> 1 -> 1'\nassert solution(35) == '35 can be divided by 2 three times: 35 -> 1 -> 1'\nassert solution(36) == '36 can be divided by 2 three times: 36 -> 1 ->",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 7 9 3') == 'Yes\\n', \"The given sample input should return Yes.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 7 9 3') == 'Yes', 'Test case 1 failed'\nassert solution('6 3 1 6') == 'Yes', 'Test case 2 failed'\nassert solution('2 7 9 6') == 'No', 'Test case 3 failed'\nassert solution('5 5 5 5') == 'No', 'Test case 4 failed'\nassert solution('1 1 1 1') == 'No', 'Test case 5 failed'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 8 10 4\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"9 10 11 5\") == \"Yes\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"2 5 8 1\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"5 6 7 8\") == \"No\\n\"\nassert solution(\"9 10 11 12\") == \"Yes\\n\"\nassert solution(\"13 14 15 16\") == \"No\\n\"\nassert solution(\"17 18 19 20\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"5 6 7 8\") == \"No\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"1 2 3 1\") == \"No\\n\"\nassert solution(\"1 2 3 101\") == \"Yes\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"6 2 4 8\") == \"No\"\nassert solution(\"4 1 1 5\") == \"No\"\nassert solution(\"5 5 5 5\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('6 5 1 2') == 'No'\nassert solution('1 1 1 1') == 'No'\nassert solution('5 5 5 5') == 'No'\nassert solution('3 3 3 3') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 8 3 4\") == \"No\"\nassert solution(\"10 1 2 3\") == \"No\"\nassert solution(\"1 10 2 3\") == \"No\"\nassert solution(\"0 0 0 0\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"Your code is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes', 'Your code is not correct!'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"100 150 175\") == \"No\"\nassert solution(\"100 1000 100\") == \"No\"\nassert solution(\"100 1000 1000\") == \"No\"",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"100 50 120\") == \"Yes\\n\"\nassert solution(\"500 500 120\") == \"No\\n\"\nassert solution(\"1000 1000 1000\") == \"Yes\\n\"\nassert solution(\"1000 500 120\") == \"No\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5', \"Your solution is not correct!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\", \"Output should be 5.\"\nassert solution(\"4 9\\n10 8 9 9 10\") == \"5\\n\", \"Output should be 5.\"\nassert solution(\"4 10\\n10 10 10 10 10\") == \"5\\n\", \"Output should be 5.\"\nassert solution(\"4 11\\n11 11 11 11 11\") == \"10\\n\", \"Output should be 10.\"\nassert solution(\"5 12\\n12 12 12 12 12\") == \"5\\n\", \"Output should be 5.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 64,
        "num_ids_4": 142
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"10 5\\n2 3 4\") == \"0\"\nassert solution(\"10 5\\n1 1 1\") == \"1\"\nassert solution(\"10 5\\n1 1 2\") == \"3\"\nassert solution(\"10 5\\n1 2 2\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4 2 1 3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4 2 1 3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\") == \"4 2 1 3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4 2 1 3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\") == \"4 2 1 3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\\n\", \"Test Case 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4 2 1 3\\n\", \"Test Case 2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4 2 1 3\\n\", \"Test Case 3\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4 2 1 3\\n\", \"Test Case 4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4 2 1 3\\n\", \"Test Case 5\"",
        "num_ids_2": 68,
        "num_ids_4": 144
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4 2 1 3 5\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4 2 1 3 5\\n\"\nassert solution(\"3\\n1 2 3 4 5 6\") == \"4 2 1 3 5 6\\n\"\nassert solution(\"2\\n1 2 3 4 5 6 7\") == \"4 2 1 3 5 6 7\\n\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9\") == \"4 2 1 3 5 6 7 8 9\\n\"\nassert solution(\"0\\n1 2 3 4 5 6 7 8 9 10\") == \"4 2 1 3 5 6 7 8 9 10\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 132
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"5 3\\n1 2\") == \"No\"\nassert solution(\"10 3\\n4 5 6\\n5 4 3\") == \"No\"\n",
        "num_ids_2": 37,
        "num_ids_4": 64
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3\\n4 5 6\\n\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == 6",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abb') == 0\nassert solution('aaa') == 1\nassert solution('aaaaaa') == 3\nassert solution('abcde') == 5\nassert solution('zabcdefg') == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\"\nassert solution(\"abababab\") == \"4\\n\"\nassert solution(\"xyzxy\") == \"6\\n\"\nassert solution(\"aaaaaa\") == \"4\\n\"\nassert solution(\"\") == \"0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('ababababaab') == '12'\nassert solution('ababababaa') == '12'\nassert solution('ababababa') == '12'\nassert solution('abababab') == '12'\nassert solution('abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abababababab') == '6'\nassert solution('ababababab') == '6'\nassert solution('abababab') == '6'\nassert solution('abababa') == '1'\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"ababababab\") == \"5\"\nassert solution(\"ababababa\") == \"4\"\nassert solution(\"abababab\") == \"3\"\nassert solution(\"abababa\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\" # expected output: 6\nassert solution(\"abc\") == \"0\" # expected output: 0",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Solution should return Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\\nNo\\nNo\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\\nabc\\n\"\nassert solution(\"abc\") == \"Yes\\nabc\\n\"\nassert solution(\"abcd\") == \"No\\n\"\nassert solution(\"zyx\") == \"No\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bac\") == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes', \"Expected Yes, but got {}.\".format(solution('bac'))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\\n\"\n\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\\n\"\n\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 100
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n1 1000000\\n2 1 3\\n4 2\\n') == '646'\nassert solution('1\\n1000000\\n1000000\\n') == '757402647'\nassert solution('2\\n1 3\\n4 2\\n') == '20'",
        "num_ids_2": 97,
        "num_ids_4": 120
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test Failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000000\\n1000000\\n\") == \"757402647\\n\"\nassert solution(\"1000000\\n1000000\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\\n\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 133
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\") == \"20\"",
        "num_ids_2": 93,
        "num_ids_4": 114
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 646, \"Output is wrong.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"",
        "num_ids_2": 74,
        "num_ids_4": 97
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\\n\") == \"757402647\\n\"\nassert solution(\"2\\n1 3\\n4 2\\n\\n1\\n1000000\\n1000000\\n\\n\") == \"20\\n\"",
        "num_ids_2": 135,
        "num_ids_4": 185
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\\n\") == \"646\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"646\"\nassert solution(input()) == \"757402647\"\nassert solution(input()) == \"20\"",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1\"\nassert solution(10) == \"10\"\nassert solution(10000) == \"10000\"\nassert solution(5) == \"1\"\nassert solution(100000) == \"100000\"\nassert solution(50) == \"10\"\nassert solution(2000) == \"100\"\nassert solution(1000) == \"1000\"\nassert solution(400000) == \"100000\"\nassert solution(25) == \"2\"\nassert solution(4) == \"1\"\nassert solution(100000) == \"100000\"\nassert solution(100) == \"100\"\nassert solution(10000) == \"10000\"\nassert solution(10000000) == \"10000000\"\nassert solution(100000000) == \"100000000\"\nassert solution(1000000000) == \"1000000000\"\nassert solution(10000000000) == \"10000000000\"\nassert solution(100000000000) == \"100000000000\"\nassert solution(1000000000000) == \"1000000000000\"\nassert solution(10000000000000) == \"10000000000000\"\nassert solution(100000000000000) == \"100000000000000\"\nassert solution(1000000000000000) == \"1000000000000000\"\nassert solution(10000000000000000) == \"10000000000000000\"\nassert solution(1000000000000000000) == \"1000000000000000000\"\nassert solution(100000000000000000000) == \"100000000000000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 146
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\".strip()) == \"7\\n\"\n\nassert solution(\nr\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\".strip()) == \"17\\n\"\n\nassert solution(\nr\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\".strip()) == \"17\\n\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 17, \"Incorrect output: {}\".format(solution())",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\"",
        "num_ids_2": 107,
        "num_ids_4": 140
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\\n\"\n\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\n\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 146
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1') == '7\\n'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17\\n'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4') == '17\\n'",
        "num_ids_2": 109,
        "num_ids_4": 142
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output\\n17\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == 2\nassert solution(\"\"\"7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == 0\nassert solution(\"\"\"7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n\"\"\") == 1",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for example {input()}, expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == 2\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == 0\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == 1\n\nfrom typing import List",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\\nOutput\\n2\\n\\nInput\\n7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\\nOutput\\n0\\n\\nInput\\n7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\\nOutput\\n1\\n\\n') == '2\\n\\n1\\n'",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 7) == 10\nassert solution(4, 12) == 15\nassert solution(2, 1000000000) == 1999999999\nassert solution(7, 97) == 113\nassert solution(1000000000, 1000000000) == 1000000001",
        "num_ids_2": 27,
        "num_ids_4": 72
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 7) == \"10\"\nassert solution(4, 12) == \"15\"\nassert solution(2, 1000000000) == \"1999999999\"\nassert solution(7, 97) == \"113\"\nassert solution(1000000000, 1000000000) == \"1000000001\"\nassert solution(2, 1) == \"10\"\nassert solution(3, 5) == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 7) == '10'\nassert solution(4, 12) == '15'\nassert solution(2, 1000000000) == '1999999999'\nassert solution(7, 97) == '113'\nassert solution(1000000000, 1000000000) == '1000000001'\nassert solution(2, 1) == '10'",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 216,
        "num_ids_4": 432
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"\nassert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 214,
        "num_ids_4": 214
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\\n1 3 2\"\nassert solution(\"7 2\") == \"2\\n2 1\"\nassert solution(\"1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\") == \"3\\n1 3 2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 84
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n1\") == \"2\\n1\"\nassert solution(\"10\\n2\\n3\\n1\\n2\\n1\") == \"3\\n1\\n2\"\nassert solution(\"10\\n2\\n3\\n1\\n2\\n1\") == \"3\\n1\\n2\"\n",
        "num_ids_2": 51,
        "num_ids_4": 83
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n1 2 3 2 4 3 1 2 3 4 5 6\\n\") == \"5\\n1 3 2 4 5\\n\"\nassert solution(\"10 10\\n1 2 3 2 1 2 3 2 1 2 3 4 3 4 5 4 5 6 5 6\\n\") == \"10\\n1 2 3 2 1 2 3 2 1 2 3 4 3 4 5 4 5 6 5 6\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 235
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('2 3\\n4 5 6\\n') == '2\\n1 4 5 6\\n'",
        "num_ids_2": 81,
        "num_ids_4": 113
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3 2\\n\") == \"4\\n1 3 2 2\\n\"\nassert solution(\"10 6\\n2 3 3 1 1 2 1 2 3 3 2 1\\n\") == \"5\\n1 3 2 2 1\\n\"\nassert solution(\"10 7\\n2 3 3 1 1 2 1 2 3 3 2 1 1\\n\") == \"6\\n1 3 2 2 1 1\\n\"\nassert solution(\"10 8\\n2 3 3 1 1 2 1 2 3 3 2 1 1 1\\n\") == \"7\\n1 3 2 2 1 1 1\\n\"\nassert solution(\"10 9\\n2 3 3 1 1 2 1 2 3 3 2 1 1 1 1\\n\") == \"8\\n1 3 2 2 1 1 1 1\\n\"\nassert solution(\"10 10\\n2 3 3 1 1 2 1 2 3 3 2 1 1 1 1 1\\n\") == \"9\\n1 3 2 2 1 1 1 1 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 183
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n1 3\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 2\") == \"2\\n1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"\nassert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\"",
        "num_ids_2": 61,
        "num_ids_4": 134
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\"\n\nsample_input = \"7 2\\n1 2 3 2 1 3 2\\n10 4\\n2 3 3 1 1 2 1 2 3 3\\n\"\nexpected_output = \"2\\n2 1\\n3\\n1 3 2\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n') == '263'",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 263, \"Incorrect output\"\nprint(\"Test passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\" # expected output",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263\\n'\nprint('All tests passed!')",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n3\\n1\\n2\\n5\\n2\\n6\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"3\\n1\\n2\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\\n2\\n5\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\nassert solution(\"codeforces\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The output is {solution(input())} but the expected output is {expected}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n\"\nassert solution(\"2\\n162738596\\n489671325\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"162738596\\n411615489\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\"\nassert solution(\"3\\n162738596\\n489671325\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"162738596\\n411615489\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\"\nassert solution(\"4\\n162738596\\n489671325\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"162738596\\n411615489\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\"\nassert solution(\"5\\n162738596\\n489671325\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"162738596\\n411615489\\n725318642\\n859432167\\n975318628\\n412968357\\n631457982\\n59823",
        "num_ids_2": 418,
        "num_ids_4": 836
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(input())}.\"\n\nt = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    solution = \"\".join(str(x) for x in arr)\n    expected_output = \"\".join(str(x) for x in arr)\n    print(solution)",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"3\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"4\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"5\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n24",
        "num_ids_2": 414,
        "num_ids_4": 828
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"154873396\"\nassert solution(2) == \"336592714\"\nassert solution(3) == \"729645835\"\nassert solution(4) == \"863725145\"\nassert solution(5) == \"979314628\"\nassert solution(6) == \"412958357\"\nassert solution(7) == \"631457992\"\nassert solution(8) == \"998236471\"\nassert solution(9) == \"247789563\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case+1} is incorrect: expected {expected_output}, but got {solution(input())}.\"\ntest_case += 1",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154",
        "num_ids_2": 408,
        "num_ids_4": 816
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\" for input, output in [\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 1, 5, 6, 8, 7, 9, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 5, 6, 8, 7, 9, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 6, 8, 7, 9, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 8, 7, 9, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 9, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 4]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 5]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 6]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 7]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 8]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 9]),\n    ([1, 1, 1, 3, 5, 3, 5, 7], [3, 1, 4, 5, 6, 7, 8, 9]),\n]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output\nprint(\"PASS\") if solution(input) == output else print(\"FAIL\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 3\nassert solution(2) == 6\nassert solution(3) == 8\nassert solution(4) == 9\nassert solution(5) == -1\nassert solution(6) == 4\nassert solution(7) == 6\nassert solution(8) == 8\nassert solution(9) == 9\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\nassert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 148,
        "num_ids_4": 223
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\nassert solution(\"100\\n101\\n102\\n105\\n3\\n2\\n1\\n100000000\\n10\\n20\\n15\\n14\\n101\\n101\\n101\\n3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"\nassert solution(\"100\\n101\\n102\\n105\\n3\\n2\\n1\\n100000000\\n10\\n20\\n15\\n14\\n101\\n101\\n101\\n3\\n\") == \"NO\\nNO\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 192,
        "num_ids_4": 289
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3') == 'YES\\nYES\\nNO\\nNO\\nYES'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nprint(\"PASSED\" if solution(input()) == output else \"FAILED\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'NO'\n\nassert solution(stdin) == 'NO'\n\nassert solution(stdin) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4''') == '''3 4 6 5 '''\n\nassert solution('''5 5\n2 1 5 3 5''') == '''9 8 12 6 8 '''\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2''') == '''3 3 '''",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n2 1 5 3 5\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '''\n9 8 12 6 8\n'''\nassert solution('''\n4 4\n1 2 3 4\n''') == '''\n3 4 6 5\n'''\nassert solution('''\n5 5\n1 2 3 4 5\n''') == '''\n9 8 12 6 8\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\\n5 5\\n2 1 5 3 5\\n\\n2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 4 6 5\\n9 8 12 6 8\\n3 3\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\n\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"\n\nassert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\n\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\n\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 126
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == [3, 4, 6, 5], \"Your solution is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3 4 6 5'\nassert solution(input()) == '9 8 12 6 8'\nassert solution(input()) == '3 3'\n",
        "num_ids_2": 35,
        "num_ids_4": 47
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 3 4') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2') == '3 3'",
        "num_ids_2": 59,
        "num_ids_4": 95
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 3 4\n\"\"\"\n) == \"3 4 6 5\"\n\nassert solution(\n\"\"\"\n5 5\n2 1 5 3 5\n\"\"\"\n) == \"9 8 12 6 8\"\n\nassert solution(\n\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\"\n) == \"3 3\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n\nassert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"",
        "num_ids_2": 63,
        "num_ids_4": 130
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nprint(\"YES\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Output: {output}, Expected: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\", \"The solution is not correct.\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution == \"YES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {t+1} failed\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(data_example) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nfor case in range(t):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    expected = \"YES\" if is_possible(n, a) else \"NO\"\n    print(expected)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Output {solution(stdin)} does not match expected output.\\nInput:\\n{stdin}\\nOutput:\\n{output}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\") == \"01011110\\0101111\\0011111\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1111100\") == \"01111110\"\nassert solution(\"7 9\") == \"0111111\"\nassert solution(\"7 11\") == \"0101111\"\n\nfrom itertools import permutations",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == solution(stdin)\n\nfor _ in range(q):\n    n = int(stdin.readline())\n    k = int(stdin.readline())\n    s = stdin.readline()\n    s = ''.join(s)\n    s = ''.join(sorted(s))\n    s = ''.join(s)\n    if s == ''.join('1' * (n-1) + '0' * k + '1' * (n-1) + '1' * (n-1)):\n        print(\"0\" * k)\n    else:\n        print(\"Not possible\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"01011110\") == \"01011110\"\nassert solution(\"0101111\") == \"0101111\"\nassert solution(\"0011111\") == \"0011111\"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\") == \"01011110\"\nassert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\") == \"01011110\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11011010\") == \"011111010\"\nassert solution(\"1111100\") == \"01111100\"\nassert solution(\"1111100\") == \"01111100\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"01011110\") == \"0101111\"\nassert solution(\"0101111\") == \"0101111\"\nassert solution(\"0011111\") == \"0011111\"\nassert solution(\"011111010\") == \"01111110\"\nassert solution(\"0111100\") == \"0111100\"\nassert solution(\"01111000000\") == \"0111100\"\nassert solution
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n1 4 7\\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 2 4\\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 180
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\\n5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\\n6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n2 3\\n\\n\\nOutput\\n3\\n1 4 7 \\n3\\n1 2 4 \\n4\\n1 3 5 6') == '3\\n1 4 7 \\n3\\n1 2 4 \\n4\\n1 3 5 6'",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(str(input()))}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7\\n\\n3\\n1 2 4\\n\\n4\\n1 3 5 6\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"\n",
        "num_ids_2": 142,
        "num_ids_4": 195
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7\\n\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4\\n\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 186
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\\n3\\n1 2 4 \\n\\n4\\n1 3 5 6\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\\n3\\n1 2 4\\n\\n3\\n1 3 5 6\\n\"\n\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\\n3\\n1 3 5 6\\n\"\n\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\\n4\\n1 4 5 7\\n\"",
        "num_ids_2": 156,
        "num_ids_4": 223
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution is not correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n1 3 2\\n-100 2 3\\n\\nInput\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\nInput\\n2\\n2 1\\n-3 0\\n\") == \"3\\n19\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3\\n1 3 2\\n-100 2 3\\n\\nInput\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\nInput\\n2\\n2 1\\n-3 0\\n') == 'Output\\n3\\n\\nOutput\\n19\\n\\nOutput\\n0\\n'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n1 3 2\\n-100 2 3\\n\\nInput\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n\\nInput\\n2\\n2 1\\n-3 0\") == \"Output\\n3\\n\\nOutput\\n19\\n\\nOutput\\n0\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\\n\"\nassert solution(\"5\") == \"19\\n\"\nassert solution(\"2\") == \"0\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"21 7 15 21 3\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, expected {expected_output}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 2\\n2 4\\n4 5\\n5 7\\n3 6\\n5 2\\n5 2\\n1 2\\n3 4 1\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2\\n1 3 2\\n2 5 1\\n2 6 2\\n4 6 1\\n5 7 4\\n5 6 4\\n5 5 4\\n5 5 3\\n5 4 2\\n4 3 2\\n4 3 2\\n4 3 2\\n3 5 2\\n2 5 2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 144
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\"",
        "num_ids_2": 99,
        "num_ids_4": 138
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\"",
        "num_ids_2": 97,
        "num_ids_4": 136
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [21, 7, 15, 21, 3]",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 'YES'\nassert solution(10) == 'YES'\nassert solution(6) == 'NO'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\", \"Incorrect output\"\nassert solution(input()) == \"YES\", \"Incorrect output\"\nassert solution(input()) == \"NO\", \"Incorrect output\"\nassert solution(input()) == \"NO\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"NO\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"NO\"",
        "num_ids_2": 112,
        "num_ids_4": 224
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"1\\n3\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\n",
        "num_ids_2": 149,
        "num_ids_4": 556
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"NO\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"NO\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"NO\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"NO\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"NO\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"NO\"\nassert solution(21) == \"NO\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"NO\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"NO\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"NO\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"NO\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"NO\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"NO\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"NO\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"NO\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"NO\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"NO\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"NO\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"NO\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"NO\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"NO\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"NO\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"NO\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"NO\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"NO\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"NO\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"NO\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"NO\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"NO\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"NO\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"NO\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"NO\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"NO\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"NO\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"NO\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"NO\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"NO\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"NO\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"NO\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"NO\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"NO\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\"\nassert solution(\"5\\n1 2 1\\n2\\n1 1 1 1\\n2\\n1 1 1\\n1\\n100\") == \"NO\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12\\n'\nassert solution('4 5\\n1001\\n10101\\n') == '11\\n'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '12'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nprint(\"Test passed!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"NO\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"NO\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES\\nYES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"YES\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\nassert solution(11) == \"NO\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(12) == \"NO\"\nassert solution(16) == \"YES\"\nassert solution(30) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('3 1 4 1 5 9 2 6 5') == '5'\nassert solution('3 1 1 1 1') == '0'\nassert solution('9') == '5'\nassert solution('8 7 6 5 4 3 2 1') == '4'",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\") == \"5\\n1\\n0\\n4\\n0\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n1\\n0\\n4\\n0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\") == \"5\\n1\\n0\\n4\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution()\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'\nassert solution('9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1'",
        "num_ids_2": 109,
        "num_ids_4": 221
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Invalid input\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' does not match the expected output '{expected_output}'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n4\\n2\\n7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n\") == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    segments = []\n    for _ in range(n):\n        l, r = map(int, stdin.readline().strip().split())\n        segments.append([l, r])\n\n    max_size = 0\n    max_pair = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if segments[i][0] < segments[j][0] or segments[i][1] > segments[j][1]:\n                continue\n            if segments[i][0]!= segments[j][1]:\n                continue\n            if (segments[i][0] == segments[j][1] and segments[i][0] not in [s[0] for s in segments]) or (segments[i][1] == segments[j][0] and segments[i][1] not in [s[1] for s in segments]):\n                continue\n            if sum(segments[i][0]!= segments[j][0]) <= 1 or sum(segments[i][1]!= segments[j][1]) <= 1:\n                continue\n            if (segments[i][0], segments[i][1]) not in [s for s in max_pair]:\n                max_pair.append((segments[i][0], segments[i][1]))\n            if (segments[j][0], segments[j][1]) not in [s for s in max_pair]:\n                max_pair.append((segments[j][0], segments[j][1]))\n            max_size = max(max_size, len(max_pair))\n\n    print(max_size)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\nassert solution(\"8\\n10\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"4\\n2\"\nassert solution(\"8\\n10\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n8\\n6 9\\n9 7\") == \"3\\n2\\n7\"",
        "num_ids_2": 180,
        "num_ids_4": 249
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"2\"\nassert solution() == \"7\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'\n\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3\\n4\\n2\\n7\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 ",
        "num_ids_2": 89,
        "num_ids_4": 1027
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n\") == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"5\\n60\\n1439\\n1180\\n1\"\nprint(solution(\"23 55\\n23 0\\n0 1\\n4 20\\n23 59\"))",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"5\n   23 55\n   23 0\n   0 1\n   4 20\n   23 59\"\"\"\n) == \"5\\n60\\n1439\\n1180\\n1\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_string) == expected_output, f\"Test case {i+1} failed: got '{solution(input_string)}', expected '{expected_output}'\" for i, (input_string, expected_output) in enumerate(tests)",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed.\"\n\nt = int(input())\nfor t_ in range(t):\n    h, m = map(int, input().split())\n    assert h == 0 and m == 0, f\"Test case {t+1} failed.\"\n    print(solution(h, m))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(Input) == Output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 2\\n1 4\\n3 4\\n-1\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1 2\n1 4\n3 4\n-1\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\nRRUDU\\n5\\nLLDDR\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\n1\\n111\\n1\\n1\\n222\") == \"-1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"-1\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '1 2\\n1 4\\n3 4\\n-1'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR') == '1 2\\n1 3\\n3 3'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '-1'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n4\\nLURD\\n') == '-1'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n4\\nLURD\\nLRUD') == '1 2\\n1 3\\n3 3'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n4\\nLURD\\nLRUD\\nRRDU') == '1 2\\n1 3\\n3 3'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n4\\nLURD\\nLRUD\\nRRDU\\n') == '-1'\n",
        "num_ids_2": 93,
        "num_ids_4": 155
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '1 2\\n1 4\\n3 4\\n-1'\nassert solution('5\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '1 2\\n1 4\\n3 4\\n-1'\nassert solution('6\\n6\\nLLDDR\\n6\\nLLDDUR\\n') == '1 2\\n1 3\\n1 4\\n1 5\\n3 4\\n3 5\\n'\nassert solution('4\\n7\\nLRUUD\\n4\\nURDLR\\n5\\nURRRDU\\n5\\nURUDLR\\n') == '1 1\\n1 3\\n1 5\\n3 3\\n3 5\\n'\nassert solution('5\\n10\\nLLURUDU\\n5\\nURRRDUU\\n5\\nURDUDLR\\n') == '1 1\\n1 2\\n1 3\\n3 3\\n3 4\\n'\nassert solution('1\\n1\\nURDR\\n1\\nDRDL\\n1\\nDRUD\\n') == '-1'",
        "num_ids_2": 101,
        "num_ids_4": 225
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\n1\\nLLDDD\\n1\\nRRUDR\\n1\\nULDUL\") == \"-1\"\nassert solution(\"1\\n1\\nUDUD\\n2\\nDLDRD\\n2\\nURURD\") == \"1 2\\n1 3\"\nassert solution(\"1\\n1\\nUDUD\\n2\\nDLDRD\\n2\\nURURD\\n1\\nLLDDD\") == \"1 2\\n1 3\"",
        "num_ids_2": 88,
        "num_ids_4": 175
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} is incorrect.\" for i, (input, output) in enumerate(zip(stdin.split('\\n'), output_list))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n1\\n0\\n2\\n\"\nassert solution(input()) == \"1\\n0\\n2\\n\"\nassert solution(input()) == \"0\\n0\\n2\\n\"\nassert solution(input()) == \"2\\n2\\n2\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'\nassert solution('1\\n1\\n1\\n3') == '2'\nassert solution('1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3'",
        "num_ids_2": 88,
        "num_ids_4": 125
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\nelse:\n    print(\"Test failed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n5\\n1 1 1 3\\n3\\n2\\n1 1\\n2\") == \"3\\n2\\n0\"\nassert solution(\"1\\n3\") == \"0\\n1\"\nassert solution(\"1\\n2\\n1\\n2\") == \"1\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 149
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'\nassert solution('3\\n1\\n0\\n2') == '1\\n'\nassert solution('3\\n1\\n0\\n2\\n') == '1\\n'",
        "num_ids_2": 90,
        "num_ids_4": 113
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"2\\n1\\n1\\n2\"\nassert solution(\"5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"1\\n0\\n2\"",
        "num_ids_2": 117,
        "num_ids_4": 210
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"5\\n2 1 5 4 3\") == \"0\\n2\"\nassert solution(\"1\\n1\\n4\\n1 1 1 3\") == \"2\"",
        "num_ids_2": 93,
        "num_ids_4": 118
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3\\n1\\n0\\n2\\n'\n\nassert solution('''\n4\n7\n4 2 4 1 4 3 4",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"121\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\" # expected output: 0",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"121\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\\n\"\nassert solution(\"1\\n1337\\n\") == \"0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\") == \"121\"\nassert solution(\"1\\n1337\") == \"0\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121\\n'\nassert solution('1\\n1337\\n') == '0\\n'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example) == 6, \"Incorrect output.\"\n\nexample = \"\"\"\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\"\"\"\n\nsolution(example)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output\\n6\\n18\\n0\\n227\\n8', '\\n'.join(map(str, solution(stdin)))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {t} failed with output {solution(input())} and expected output {expected_output}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"6\\n18\\n0\\n227\\n8\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: expected {expected_output}, got {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"Output: 2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['1', '2', '3'], ['1', '1']) == 1\nassert solution(['1', '2'], ['1', '2', '3']) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(['1', '2', '3'], ['1', '1']) == 1\nassert solution(['1', '2'], ['1', '2', '3']) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1,2,3\\n1,1\") == 1\nassert solution(\"1,2\\n1,2,3\") == 2\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"[1,3,3,1]\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"[1,3,3,1]\"\nassert solution(\"10\") == \"[1,2,5,14,45,135,414,2334,11251,72142,56275]\"\nassert solution(\"100\") == \"[1,2,5,14,45,135,414,2334,11251,72142,56275]\"\nassert solution(\"1000\") == \"[1,2,5,14,45,135,414,2334,11251,72142,56275]\"\nassert solution(\"10000\") == \"[1,2,5,14,45,135,414,2334,11251,72142,56275]\"",
        "num_ids_2": 68,
        "num_ids_4": 175
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == [1,3,3,1] # Test case 1\nassert solution(\"5\") == [1,5,10,5,1] # Test case 2\nassert solution(\"10\") == [1,10,45,14,45,10,1] # Test case 3\nassert solution(\"15\") == [1,15,40,120,60,120,40,15] # Test case 4\nassert solution(\"20\") == [1,20,60,120,180,120,60,20] # Test case 5\nassert solution(\"25\") == [1,25,75,210,150,210,150,75,25] # Test case 6\nassert solution(\"30\") == [1,30,105,30,105,30,105,30,105] # Test case 7\nassert solution(\"35\") == [1,35,150,400,1200,300,1200,400,150,35] # Test case 8\nassert solution(\"40\") == [1,40,240,960,3600,12000,4800,240,960,40] # Test case 9\nassert solution(\"45\") == [1,45,300,1200,5000,20000,9000,3600,1800,500,45] # Test case 10\nassert solution(\"50\") == [1,50,400,1600,6400,24000,12000,6400,2400,1600,600,50] # Test case 11\nassert solution(\"55\") == [1,55,600,2400,12000,7200,3600,2400,1200,720,600,55] # Test case 12\nassert solution(\"60\") == [1,60,720,3600,24000,16800,12000,16800,3600,2400,1200,720,600] # Test case 13\nassert solution(\"65\") == [1,65,840,4800,36000,24000,24000,36000,4800,3600,2400,2400,600,65] # Test case 14\nassert solution(\"70\") == [1,70,960,5400,48000,48000,54000,54000,5400,4800,4800,4800,600,70] # Test case 15\nassert solution(\"75\") == [1,75,1120,7200,64000,64000,72000,72000,7200,6400,6400,6400,720,75] # Test case 16\nassert solution(\"80\") == [1,80,1200,8400,72000,72000,84000,84000,8400,7200,7200,7200,800,80] # Test case 17\nassert solution(\"85\") == [1,85,1440,96000,84000,84000,96000,96000,9600,8400,8400,8400,960,85] # Test case 18",
        "num_ids_2": 45,
        "num_ids_4": 117
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == [1, 3, 3, 1]\nassert solution(7) == [1, 2, 1, 5, 10, 5, 16, 8, 4, 2]",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"10\") == [1,10,30,30,10]\nassert solution(\"20\") == [1,20,40,60,100]\nassert solution(\"27\") == [1,27,55,125,210,270]\nassert solution(\"33\") == [1,33,64,126,213,343]",
        "num_ids_2": 39,
        "num_ids_4": 92
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [1, 3, 3, 1]\nassert solution(1) == [1]\nassert solution(4) == [1, 2, 5, 10]\nassert solution(0) == []\nassert solution(34) == []\nassert solution(0) == []",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"1111111111111111111111111111101\") == \"31\"\n\nfrom typing import Optional",
        "num_ids_2": 84,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31",
        "num_ids_2": 83,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000000010000000\") == 1\nassert solution(\"1111111111111111111111111111101\") == 31",
        "num_ids_2": 83,
        "num_ids_4": 123
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"000000000000000000000000010000000\") == \"1\"\nassert solution(\"1111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 83,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0000000000000000000000000001011') == '3', \"Test case 1 failed\"\nassert solution('0000000000000000000000000010000000') == '1', \"Test case 2 failed\"\nassert solution('1111111111111111111111111111101') == '31', \"Test case 3 failed\"",
        "num_ids_2": 97,
        "num_ids_4": 145
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0000000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 83,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 81,
        "num_ids_4": 123
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\", \"Expected output: 3, got: \" + solution(\"0000000000000000000000000000001011\")\nassert solution(\"00000000000000000000000010000000\") == \"1\", \"Expected output: 1, got: \" + solution(\"00000000000000000000000010000000\")\nassert solution(\"11111111111111111111111111111101\") == \"31\", \"Expected output: 31, got: \" + solution(\"11111111111111111111111111111101\")",
        "num_ids_2": 177,
        "num_ids_4": 266
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == [1,2,3], \"The solution should return [1,2,3]\"\nassert solution(\"4321\") == [4,3,2,1], \"The solution should return [4,3,2,1]\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == [1,2,4]",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"[1,2,3]\"\nassert solution(\"4321\") == \"[4,3,2,1]\"\nassert solution(\"010\") == \"[1,0,1]\"\nassert solution(\"555555555555\") == \"[9,9,9,9,9,9,9,9]\"\nassert solution(\"9999999999999999999\") == \"[18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1]\"",
        "num_ids_2": 35,
        "num_ids_4": 86
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('123') == '124'\nassert solution('4321') == '4322'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\", \"Input 3 1\"\nassert solution(\"-3 1\") == \"-2\", \"Input -3 1\"\nassert solution(\"0 1\") == \"0\", \"Input 0 1\"\nassert solution(\"2 0\") == \"2\", \"Input 2 0\"\nassert solution(\"3 5\") == \"15\", \"Input 3 5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('1 2') == '2'\nassert solution('3 2') == '4'\nassert solution('4 3') == '9'\nassert solution('2 4') == '16'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\", \"Test Failed\"\nassert solution(input()) == \"2\\n\", \"Test Failed\"\nassert solution(input()) == \"3\\n\", \"Test Failed\"\nassert solution(input()) == \"4\\n\", \"Test Failed\"\n\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"5 2\") == \"8\\n\", \"Incorrect output\"\nassert solution(\"1000 2000\") == \"12000\\n\", \"Incorrect output\"\nassert solution(\"-1000 1000\") == \"1000\\n\", \"Incorrect output\"\nassert solution(\"0 0\") == \"0\\n\", \"Incorrect output\"",
        "num_ids_2": 36,
        "num_ids_4": 91
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"4\", \"Expected '4', got '{}'\".format(solution(\"3 1\"))\nassert solution(\"0 0\") == \"0\", \"Expected '0', got '{}'\".format(solution(\"0 0\"))\nassert solution(\"10 10\") == \"300\", \"Expected '300', got '{}'\".format(solution(\"10 10\"))\nassert solution(\"1 2\") == \"2\", \"Expected '2', got '{}'\".format(solution(\"1 2\"))\nassert solution(\"5 6\") == \"36\", \"Expected '36', got '{}'\".format(solution(\"5 6\"))",
        "num_ids_2": 56,
        "num_ids_4": 120
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"10 5\") == \"20\"\nassert solution(\"2 1\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 1\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"5 10\\n2 3\\n4 5\") == \"2\"\nassert solution(\"3 3\\n1 1\") == \"1\"",
        "num_ids_2": 56,
        "num_ids_4": 73
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3\\n'\nprint('All tests passed!')",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 5\\n0 5\\n0 5\\n0 5\\n0 5\") == \"3\\n\"\nassert solution(\"4 ",
        "num_ids_2": 69,
        "num_ids_4": 137
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 4\") == \"4\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"2 5\\n1 10\\n-1 1\\n1 2\") == \"2\"\nassert solution(\"5 3\\n4 4\\n-1 2\") == \"1\"\nassert solution(\"1 0\\n3 4\\n0 0\") == \"0\"\nassert solution(\"2 4\\n-2 2\\n0 0\\n1 1\") == \"0\"\nassert solution(\"3 5\\n1 1\\n2 2\\n3 3\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"Sample Output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test 1 Failed\"\nassert solution(\"123\") == \"No\\n\", \"Test 2 Failed\"\nassert solution(\"10000000000000000000000000000000\") == \"No\\n\", \"Test 3 Failed\"\nassert solution(\"1000000000000000000000000000001\") == \"Yes\\n\", \"Test 4 Failed\"\nassert solution
        "num_ids_2": 39,
        "num_ids_4": 136
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(12) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(27) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(5) == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes\\n', \"The given code is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(12) == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 -1''') == '12\\n8\\n10\\n'\nprint(\"All test cases passed!\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '12\\n8\\n10\\n', \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"5\\n1 -2 3\") == \"10\\n5\\n3\\n\"\nassert solution(\"1\\n-1\\n2\") == \"5\\n3\\n\"\nassert solution(\"4\\n-2 -1 0\") == \"12\\n8\\n10\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"1\\n1 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"4\\n1 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"5\\n2 4 6 -1\") == \"12\\n8\\n10\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\nassert solution(\"5\\n1 2 3\") == \"4\\n1\\n0\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\\n8\\n10\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel', 'Test case 1 failed'\nassert solution('b') == 'consonant', 'Test case 2 failed'\nassert solution('c') == 'vowel', 'Test case 3 failed'\nassert solution('d') == 'consonant', 'Test case 4 failed'\nassert solution('e') == 'vowel', 'Test case 5 failed'",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"vowel\", \"The solution should return vowel.\"\nassert solution(\"b\") == \"consonant\", \"The solution should return consonant.\"\nassert solution(\"c\") == \"consonant\", \"The solution should return consonant.\"\nassert solution(\"d\") == \"consonant\", \"The solution should return consonant.\"\nassert solution(\"e\") == \"vowel\", \"The solution should return vowel.\"\nassert solution(\"f\") == \"consonant\", \"The solution should return consonant.\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nprint(\"Solution passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"vowel\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\", \"Function should return vowel for a.\"\n\nassert solution(\"b\") == \"consonant\", \"Function should return consonant for b.\"\n\nassert solution(\"c\") == \"consonant\", \"Function should return consonant for c.\"\n\nassert solution(\"d\") == \"consonant\", \"Function should return consonant for d.\"\n\nassert solution(\"e\") == \"vowel\", \"Function should return vowel for e.\"\n\nassert solution(\"f\") == \"consonant\", \"Function should return consonant for f.\"\n\nHere's the code for the function:\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\", \"Solution should return 'vowel'\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\", \"Solution should return vowel\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == '1\\n'\nassert solution('ABBBW') == '0\\n'\nassert solution('WWWWW') == '0\\n'\nassert solution('BBBB') == '2\\n'\nassert solution('WWWW') == '0\\n'\nassert solution('WWWWWW') == '1\\n'\nassert solution('') == '0\\n'\nassert solution('1234567890') == '0\\n'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\", \"Output should be 1, but got: \" + solution(\"BBBWW\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\", \"The correct output should be 1.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"The solution should be 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"5 34\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"5 12\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 3 1\") == \"No\"\nassert solution(\"1 3 4\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 24\") == \"No\"\nassert solution(\"5 12\") == \"No\"\nassert solution(\"7 27\") == \"Yes\"\nassert solution(\"2 13\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 22\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 34\") == \"No\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 6\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('0 1') == 'No'\nassert solution('10 20') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('1 1') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"\nassert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"\nassert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"\nassert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"\nassert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"4\", \"Sample output does not match\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Input error\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 1 4 1 5 9 2\\n\") == \"4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"1\\n2\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\"\nassert solution(\"7\\n100 200 300 400 500 600 700 800 900\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n1 2 3 4 6\") == \"1\"\nassert solution(\"5\\n1 2 3 4 7\") == \"2\"\nassert solution(\"5\\n1 2 3 5 6\") == \"2\"\nassert solution(\"5\\n1 2 4 3 5\") == \"2\"\nassert solution(\"5\\n1 2 4 3 6\") == \"2\"\nassert solution(\"5\\n1 2 4 4 5\") == \"3\"\nassert solution(\"5\\n1 2 4 4 6\") == \"3\"\nassert solution(\"5\\n1 2 5 4 5\") == \"3\"\nassert solution(\"5\\n1 2 5 4 6\") == \"3\"\nassert solution(\"5\\n1 2 6 5 5\") == \"3\"\nassert solution(\"5\\n1 2 6 5 6\") == \"3\"\nassert solution(\"5\\n1 3 5 4 5\") == \"3\"\nassert solution(\"5\\n1 3 5 4 6\") == \"3\"\nassert solution(\"5\\n1 4 5 3 5\") == \"3\"\nassert solution(\"5\\n1 4 5 3 6\") == \"3\"\nassert solution(\"5\\n2 3 6 5 4\") == \"3\"\nassert solution(\"5\\n2 3 6 5 5\") == \"3\"\nassert solution(\"5\\n2 4 5 6 3\") == \"3\"\nassert solution(\"5\\n2 4 5 6 4\") == \"3\"\nassert solution(\"5\\n3 2 5 4 6\") == \"3\"\nassert solution(\"5\\n3 2 5 4 7\") == \"3\"\nassert solution(\"5\\n4 2 6 5 3\") == \"3\"\nassert solution(\"5\\n4 2 6 5 4\") == \"3\"\nassert solution(\"5\\n5 2 3 6 4\") == \"3\"\nassert solution(\"5\\n5 2 3 6 5\") == \"3\"\nassert solution(\"5\\n6 2 4 5 3\") == \"3\"\nassert solution(\"5\\n6 2 4 5 4\") == \"3\"\nassert solution(\"5\\n7 2 5 4 6\") == \"3\"\nassert solution(\"5\\n7 2 5 4 7\") == \"3\"\nassert solution(\"5\\n8 2 6 5 4\") == \"3\"\nassert solution(\"5\\n8 2 6 5 5\") == \"3\"\nassert solution(\"5\\n9 2 3 6 5\") == \"3\"\nassert solution(\"5\\n9 2 3 6 6\") == \"3\"\nassert solution(\"5\\n10 2 4 5 6\") == \"3\"\nassert solution(\"5\\n10 2 4 5 7\") == \"3\"\nassert solution(\"5\\n11 2 5 4 6\") == \"3\"\nassert solution(\"5\\n11 2 5 4 7\") == \"3\"\nassert solution(\"5\\n12 2 6 5 4\") == \"3\"\nassert solution(\"5\\n12 2 6 5 5\") == \"3\"\nassert solution(\"5\\n13 2 3 6 5\") == \"3\"\nassert solution(\"5\\n13 2 3 6 6\") == \"3\"\nassert solution(\"5\\n14 2 4 5 6\") == \"3\"\nassert solution(\"5\\n14 2",
        "num_ids_2": 56,
        "num_ids_4": 125
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 1 4 1 5 9 2\") == \"4\", \"Test failed\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '4'\nprint('All test cases passed.')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n') == '5\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '5'\nassert solution(4) == '5'\nassert solution(5) == '10'\nassert solution(10) == '10'\nassert solution(101) == '100'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 5, \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\") == \"5\", \"There are nine squares in a 3 \\times 3 square grid. Four of them will be painted white, so the remaining five squares will be painted black.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"5\\n6\\n\") == \"10\\n\"\nassert solution(\"10\\n15\\n\") == \"20\\n\"\nassert solution(\"20\\n30\\n\") == \"40\\n\"\nassert solution(\"40\\n50\\n\") == \"60\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 75
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5', \"The solution should output 5, but it is: \" + solution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"3 4 6\") == \"YES\"\nassert solution(\"5 4 6\") == \"YES\"\nassert solution(\"7 4 6\") == \"YES\"\nassert solution(\"8 4 6\") == \"YES\"\nassert solution(\"9 4 6\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Test case 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"19\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"99\") == \"No\"\nassert solution(\"123\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(123) == 'Yes', \"Test 1\"\nassert solution(29) == 'Yes', \"Test 2\"\nassert solution(30) == 'No', \"Test 3\"\nassert solution(42) == 'Yes', \"Test 4\"\nassert solution(50) == 'No', \"Test 5\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(29) == \"Yes\", \"The one's digit of 29 is not 9.\"\nassert solution(30) == \"No\", \"The one's digit of 30 is 9.\"\nassert solution(31) == \"Yes\", \"The one's digit of 31 is not 9.\"\nassert solution(32) == \"No\", \"The one's digit of 32 is 9.\"\nassert solution(33) == \"Yes\", \"The one's digit of 33 is not 9.\"\nassert solution(34) == \"No\", \"The one's digit of 34 is 9.\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(29) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes', \"The one's digit of 29 is 9.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(29) == 'Yes', \"The one's digit of 29 is 9.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 4 3\\n1 2 4\") == \"2\"\nassert solution(\"5 5 3\\n1 2 4\") == \"3\"\nassert solution(\"5 5 3\\n2 4 6\") == \"3\"\nassert solution(\"5 5 3\\n2 4 5\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 2\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 1\") == \"2\\n\"\nassert solution(\"5 3 3\\n1 1 1\") == \"2\\n\"\nassert solution(\"5 3 3\\n1 0 1\") == \"3\\n\"\nassert solution(\"5 3 3\\n0 1 1\") == \"3\\n\"\nassert solution(\"5 3 3\\n1 1 1\") == \"3\\n\"\nassert solution(\"5 3 3\\n1 0 0\") == \"4\\n\"\nassert solution(\"5 3 3\\n0 0 1\") == \"4\\n\"\nassert solution(\"5 3 3\\n0 1 1\") == \"4\\n\"\nassert solution(\"5 3 3\\n0 0 0\") == \"5\\n\"\nassert solution(\"5 3 3\\n0 0 0\") == \"5\\n\"\nassert solution(\"5 3 3\\n0 1 1\") == \"5\\n\"\nassert solution(\"5 3 3\\n0 1 0\") == \"6\\n\"\nassert solution(\"5 3 3\\n0 1 0\") == \"6\\n\"\nassert solution(\"5 3 3\\n0 1 1\") == \"6\\n\"\nassert solution(\"5 3 3\\n0 1 0\") == \"6\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"The correct output should be 1.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 0\\n1 2 4\") == \"3\\n\"\nassert solution(\"5 3 3\\n0 2 4\") == \"1\\n\"\nassert solution(\"5 3 0\\n0 2 4\") == \"0\\n\"\nassert solution(\"5 3 3\\n1 2 0\") == \"1\\n\"\nassert solution(\"5 3 0\\n1 2 0\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 3\\n1 2 4\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 5\\n\") == \"2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"1\"\nassert solution(stdin=\"5 3 3\\n1 2 4\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n..#\\n\") == \"No\"\nassert solution(\"3 3\\n.##\\n\") == \"Yes\"\nassert solution(\"3 3\\n..#\\n\") == \"No\"\nassert solution(\"3 3\\n#..#\\n\") == \"Yes\"\nassert solution(\"3 3\\n...#\\n\") == \"No\"\nassert solution(\"3 3\\n..#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n...#\\n\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"No\\n\"\nassert solution(\"3 3\\n.##\\n.#.\\n\") == \"No\\n\"\nassert solution(\"3 3\\n#.#\\n#.#\\n\") == \"No\\n\"\nassert solution(\"3 3\\n.###\\n#.#\\n\") == \"Yes\\n\"\nassert solution(\"3 3\\n.##.\\n#.#\\n\") == \"No\\n\"\nassert solution(\"3 3\\n#.#.\\n#.#.\\n\") == \"No\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes', \"Testcase 1 is incorrect.\"\nprint('Yes')\n\nassert solution(input()) == 'No', \"Testcase 2 is incorrect.\"\nprint('No')\n\nassert solution(input()) == 'No', \"Testcase 3 is incorrect.\"\nprint('No')\n\nassert solution(input()) == 'No', \"Testcase 4 is incorrect.\"\nprint('No')\n\nassert solution(input()) == 'Yes', \"Testcase 5 is incorrect.\"\nprint('Yes')",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"No\"  # Example input",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.##\n    #.#.\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.##\n    #.#.\n    \"\"\"\n) == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes' # True\nassert solution('50 40 30') == 'No' # False\nassert solution('10 10 10') == 'No' # False\nassert solution('10 10 5') == 'No' # False",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"10 30 20\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 30 20') == 'Yes'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 30 20') == 'Yes'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"\nassert solution(\"20 10 30\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\", \"Test case 1\"\nassert solution(\"5 20 50\") == \"No\", \"Test case 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\\n\", \"Test 1 failed.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\", \"The output is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"2 9 10 11\") == \"Right\"\nassert solution(\"10 8 7 9\") == \"Right\"\nassert solution(\"3 8 7 9\") == \"Left\"\nassert solution(\"5 4 2 7\") == \"Balanced\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nprint('All test cases passed!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"10 10 10 10\") == \"Right\"\nassert solution(\"5 5 5 5\") == \"Balanced\"\nassert solution(\"10 10 10 10\") == \"Balanced\"\nassert solution(\"5 5 5 5\") == \"Left\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\", \"Test case 1 failed\"\nassert solution(\"2 7 8 9\") == \"Right\\n\", \"Test case 2 failed\"\nassert solution(\"1 1 1 1\") == \"Left\\n\", \"Test case 3 failed\"\nassert solution(\"1 1 1 1 1 1 1\") == \"Balanced\\n\", \"Test case 4 failed\"\nassert solution(\"1 1 1 1 1 1 2\") == \"Right\\n\", \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 107
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\"\nassert solution(\"5 4 3 2\") == \"Balanced\\n\"\nassert solution(\"7 6 5 4\") == \"Right\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n10\\n2 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n10\") == \"8\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP1\\nP2\\nP3\\nP4\\nP5\\nP6\\nP7\\nP8\\nP9\\nP10\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP1\\nP2\\nP3\\nP4\\nP5\\nP6\\nP7\\nP8\\nP9\\nP10\\nP11\\nP12\\nP13\\nP14\\nP15\\nP16\\nP17\\nP18\\nP19\\nP20\\nP21\\nP22\\nP23\\nP24\\nP25\\nP26\\nP27\\nP28\\nP29\\nP30\\nP31\\nP32\\nP33\\nP34\\nP35\\nP36\\nP37\\nP38\\nP39\\nP40\\nP41\\nP42\\nP43\\nP44\\nP45\\nP46\\nP47\\nP48\\nP49\\nP50\\nP51\\nP52\\nP53\\nP54\\nP55\\nP56\\nP57\\nP58\\nP59\\nP60\\nP61\\nP62\\nP63\\nP64\\nP65\\nP66\\nP67\\nP68\\nP69\\nP70\\nP71\\nP72\\nP73\\nP74\\nP75\\nP76\\nP77\\nP78\\nP79\\nP80\\nP81\\nP82\\nP83\\nP84\\nP85\\nP86\\nP87\\nP88\\nP89\\nP90\\nP91\\nP92\\nP93\\nP94\\nP95\\nP96\\nP97\\nP98\\nP99\\nP100\") == \"8\"",
        "num_ids_2": 533,
        "num_ids_4": 533
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"8\\n\"\n\nassert solution(\"\"\"\n2\n0 1 1 0 0 1 0 0 1 0\n1 0 0 1 1 0 0 0 1 0 0\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"4\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n8') == '8\\n', \"Test case 1 failed.\"\n\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n8') == '16\\n', \"Test case 2 failed.\"\n\nassert solution('3\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n8') == '16\\n', \"Test case 3 failed.\"\n\nassert solution('4\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '24\\n', \"Test case 4 failed.\"\n\nassert solution('5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '32\\n', \"Test case 5 failed.\"\n\nassert solution('6\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '40\\n', \"Test case 6 failed.\"\n\nassert solution('7\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '48\\n', \"Test case 7 failed.\"\n\nassert solution('8\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '56\\n', \"Test case 8 failed.\"\n\nassert solution('9\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '64\\n', \"Test case 9 failed.\"\n\nassert solution('10\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '72\\n', \"Test case 10 failed.\"",
        "num_ids_2": 157,
        "num_ids_4": 321
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '''8\n'''\n\nfrom typing import List",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\"\n) == \"8\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n') == '8\\n'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\nP 0 0 0 0 0 0 0 0 0 0\nP 0 0 0 0 0 0 0 0 0 0\n\"\"\") == \"8\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"3 4\\n269-6651\") == \"No\"\nassert solution(\"3 4\\n269-6652\") == \"No\"\nassert solution(\"3 4\\n269-6653\") == \"No\"\nassert solution(\"3 4\\n269-6654\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nprint(\"All tests passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"5 6\\n1234-5678\") == \"No\"\nassert solution(\"10 11\\n9876-5432\") == \"Yes\"\nassert solution(\"10 12\\n8765-4321\") == \"No\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 2 6\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Invalid test case\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"AtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W. If we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure:\\n\\nAtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.\\n\\nFind the minimum distance it needs to be moved.\\n\"\n",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"1\", \"The solution is not correct.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Test failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\nassert solution(\"2 1 3\") == \"2\\n3\\n1\\n\"\nassert solution(\"1 1 1\") == \"1\\n1\\n1\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n1000000000\\n1000000000\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n1000000000\\n1000000000\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n1000000000\\n1000000000\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 145
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Solution should print all the integers that satisfy the condition above in ascending order.\"\nassert solution(\"5 10 3\") == \"10\\n\", \"Solution should print all the integers that satisfy the condition above in ascending order.\"\nassert solution(\"1 5 1\") == \"5\\n\", \"Solution should print all the integers that satisfy the condition above in ascending order.\"\nassert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Solution should print all the integers that satisfy the condition above in ascending order.\"\nassert solution(\"1 5 1\") == \"5\\n\", \"Solution should print all the integers that satisfy the condition above in ascending order.\"\nassert solution(\"1 5 0\") == \"\", \"Solution should print an empty string if no integers satisfy the condition above.\"",
        "num_ids_2": 75,
        "num_ids_4": 148
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\nassert solution(\"1 100 10\") == \"1\\n100\\n100\\n100\\n\"\nassert solution(\"10 100 1\") == \"10\\n100\\n100\\n100\\n10\\n\"\nassert solution(\"30 40 5\") == \"30\\n40\\n5\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\\n730\\n740\\n750\\n760\\n770\\n780\\n790\\n800\\n810\\n820\\n830\\n840\\n850\\n860\\n870\\n880\\n890\\n900\\n910\\n920\\n930\\n940\\n950\\n960\\n970\\n980\\n990\\n1000\\n1010\\n1020\\n1030\\n1040\\n1050\\n1060\\n1070\\n1080\\n1090\\n1100\\n1110\\n1120\\n1130\\n1140\\n1150\\n1160\\n1170\\n1180\\n1190\\n1200\\n1210\\n1220\\n1230\\n1240\\n1250\\n1260\\n1270\\n1280\\n1290\\n1300\\n1310\\n1320\\n1330\\n1340\\n1350\\n1360\\n1370\\n1380\\n1390\\n1400\\n1410\\n1420\\n1430\\n1440\\n1450\\n1460\\n1470\\n1480\\n1490\\n1500\\n1510\\n1520\\n1530\\n1540\\n1550\\n1560\\n1570\\n1580\\n1590\\n1600\\n1610\\n1620\\n1630\\n1640\\n1650\\n1660\\n1670\\n1680\\n1690\\n1700\\n1710\\n17",
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter A, B, and K: \")) == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 5 3\") == \"1\\n3\\n5\"\nassert solution(\"7 9 6\") == \"7\\n8\\n9\"\nassert solution(\"6 9 7\") == \"6\\n8\\n9\"\nassert solution(\"4 10 5\") == \"4\\n5\\n10\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Test 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 3 2\") == \"NO\"\nassert solution(\"3 1 1\") == \"YES\"\nassert solution(\"2 3 3\") == \"NO\"\nassert solution(\"3 100 2\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 5 4\") == \"YES\"\nassert solution(stdin=\"3 4 2\") == \"NO\"\nassert solution(stdin=\"5 5 1\") == \"NO\"\nassert solution(stdin=\"1 1 1\") == \"YES\"\nassert solution(stdin=\"6 5 4\") == \"YES\"\nassert solution(stdin=\"2 2 2\") == \"NO\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"\nassert solution(\"6 5 5\") == \"NO\\n\"\nassert solution(\"1 1 1\") == \"YES\\n\"\nassert solution(\"1 2 2\") == \"NO\\n\"\nassert solution(\"5 5 5\") == \"YES\\n\"\nassert solution(\"10 2 5\") == \"NO\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"\nassert solution(\"1 5 4\") == \"NO\\n\"\nassert solution(\"2 3 3\") == \"YES\\n\"\nassert solution(\"3 4 2\") == \"YES\\n\"\nassert solution(\"4 2 3\") == \"YES\\n\"\nassert solution(\"4 5 3\") == \"YES\\n\"\nassert solution(\"5 4 3\") == \"YES\\n\"\nassert solution(\"5 5 3\") == \"YES\\n\"\nassert solution(\"6 5 3\") == \"NO\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 6 4\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 0\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\\n\"\n\nassert solution(\"2 3\") == \"1 out of the initial 100 grams of sand will be consumed, resulting in 1 grams.\\n\"\n\nassert solution(\"100 100\") == \"0 out of the initial 100 grams of sand will be consumed, resulting in 0 grams.\\n\"\n\nassert solution(\"1 100\") == \"1 out of the initial 100 grams of sand will be consumed, resulting in 1 grams.\\n\"\n\nassert solution(\"100 1000000\") == \"1000000 out of the initial 100 grams of sand will be consumed, resulting in 1000000 grams.\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 17') == '83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.'\nprint('All test cases passed.')",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100 17') == '83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"83\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"83\"\nprint(\"17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"50 20\") == \"20\"\nassert solution(\"1000000000 1000000000\") == \"0\"\nassert solution(\"1000000001 1000000000\") == \"1\"\nassert solution(\"1000000000 1000000001\") == \"1\"",
        "num_ids_2": 31,
        "num_ids_4": 91
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 202
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2\\n1000000000 1000000000\\n') == '1000000000000000000\\n'\nassert solution(stdin='1\\n1\\n') == '-1\\n'\nassert solution(stdin='2\\n1000000000 1000000000\\n') == '1000000000000000000\\n'\nassert solution(stdin='5\\n1 2 3 4 5\\n') == '-1\\n'\nassert solution(stdin='3\\n1000000000 1000000000 1000000000\\n') == '1000000000000000000\\n'",
        "num_ids_2": 76,
        "num_ids_4": 160
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == 1000000000000000000\nassert solution(\"3\\n1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"1\\n1000000000\") == \"-1\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\") == \"-1\"",
        "num_ids_2": 73,
        "num_ids_4": 190
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == 1000000000000000000\nassert solution(\"1\\n2000000000 3000000000\\n\") == 1000000000000000000\nassert solution(\"1000000000\\n1000000000 1000000000\\n\") == 1000000000000000000\nassert solution(\"1\\n2000000000 3000000000\\n\") == -1\nassert solution(\"1\\n2000000000 3000000000\\n\") == -1\n",
        "num_ids_2": 104,
        "num_ids_4": 199
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"1000000000000000000\"\nprint(\"1000000000000000000\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"1\\n2000000000 3000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"3\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\\n\", \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nassert solution(\"10000\\n50000\\n\") == \"Yes\"\nassert solution(\"10000\\n100000\\n\") == \"No\"\nassert solution(\"50000\\n100000\\n\") == \"No\"\nassert solution(\"100000\\n100000\\n\") == \"No\"\n",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\", \"Takahashi should be safe.\"\nassert solution(\"1 3 1\") == \"safe\\n\", \"Takahashi should be safe.\"\nassert solution(\"4 1 1\") == \"dangerous\\n\", \"Takahashi should be dangerous.\"\nassert solution(\"3 4 3\") == \"dangerous\\n\", \"Takahashi should be dangerous.\"\nassert solution(\"5 3 5\") == \"safe\\n\", \"Takahashi should be safe.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"4 5 6\") == \"safe\"\nassert solution(\"10 2 3\") == \"safe\"\nassert solution(\"2 3 4\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3 6') =='safe\\n'\nassert solution('1 3 6') =='safe\\n'\nassert solution('4 4 5') == 'dangerous\\n'\nassert solution('1 1 2') =='safe\\n'\nassert solution('2 1 2') == 'dangerous\\n'\nassert solution('1 2 2') =='safe\\n'",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"5 4 8\") == \"safe\"\nassert solution(\"3 7 10\") == \"safe\"\nassert solution(\"10 10 10\") == \"safe\"\nassert solution(\"7 5 2\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"5 6 7\") == \"dangerous\"\nassert solution(\"8 1 3\") == \"safe\"\nassert solution(\"9 1 2\") == \"safe\"\nassert solution(\"10 1 1\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"3 4 6\") == \"safe\"\nassert solution(\"1 2 4\") == \"dangerous\"\nassert solution(\"2 1 3\") == \"safe\"\nassert solution(\"3 4 1\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"Test failed: Solution should return safe.\"\nassert solution(\"10 2 6\") == \"dangerous\", \"Test failed: Solution should return dangerous.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"Solution should be'safe'\"\nassert solution(\"3 4 5\") == \"dangerous\", \"Solution should be 'dangerous'\"\nassert solution(\"1 2 3\") == \"safe\", \"Solution should be'safe'\"\nassert solution(\"1 4 6\") == \"safe\", \"Solution should be'safe'\"\nassert solution(\"2 3 6\") == \"safe\", \"Solution should be'safe'\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '9\\n', 'Test Failed' # Test Case 1",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"10\") == \"9\", \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"10\") == \"9\\n\", \"The correct output should be: 9\"\nassert solution(stdin=\"10\") == \"9\\n\", \"The correct output should be: 9\"\nassert solution(stdin=\"10\") == \"9\\n\", \"The correct output should be: 9\"\nassert solution(stdin=\"10\") == \"9\\n\", \"The correct output should be: 9\"\nassert solution(stdin=\"10\") == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\\n\", \"The correct output should be: 9\"\nprint(\"All tests passed\")",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"25\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"100\"\nassert solution(\"101\") == \"101\"\nassert solution(\"1001\") == \"1010\"\nassert solution(\"1002\") == \"1009\"\nassert solution(\"1003\") == \"1004\"\nassert solution(\"1004\") == \"1001\"\nassert solution(\"1005\") == \"1002\"\nassert solution(\"1006\") == \"1003\"\nassert solution(\"1007\") == \"1004\"\nassert solution(\"1008\") == \"1005\"\nassert solution(\"1009\") == \"1006\"\nassert solution(\"1010\") == \"1007\"\nassert solution(\"1011\") == \"1008\"\nassert solution(\"1012\") == \"1009\"\nassert solution(\"1013\") == \"1010\"\nassert solution(\"1014\") == \"1011\"\nassert solution(\"1015\") == \"1012\"\nassert solution(\"1016\") == \"1013\"\nassert solution(\"1017\") == \"1014\"\nassert solution(\"1018\") == \"1015\"\nassert solution(\"1019\") == \"1016\"\nassert solution(\"1020\") == \"1017\"\nassert solution(\"1021\") == \"1018\"\nassert solution(\"1022\") == \"1019\"\nassert solution(\"1023\") == \"1020\"\nassert solution(\"1024\") == \"1021\"\nassert solution(\"1025\") == \"1022\"\nassert solution(\"1026\") == \"1023\"\nassert solution(\"1027\") == \"1024\"\nassert solution(\"1028\") == \"1025\"\nassert solution(\"1029\") == \"1026\"\nassert solution(\"1030\") == \"1027\"\nassert solution(\"1031\") == \"1028\"\nassert solution(\"1032\") == \"1029\"\nassert solution(\"1033\") == \"1030\"\nassert solution(\"1034\") == \"1031\"\nassert solution(\"1035\") == \"1032\"\nassert solution(\"1036\") == \"1033\"\nassert solution(\"1037\") == \"1034\"\nassert solution(\"1038\") == \"1035\"\nassert solution(\"1039\") == \"1036\"\nassert solution(\"1040\") == \"1037\"\nassert solution(\"1041\") == \"1038\"\nassert solution(\"1042\") == \"1039\"\nassert solution(\"1043\") == \"1040\"\nassert solution(\"1044\") == \"1041\"\nassert solution(\"1045\") == \"1042\"\nassert solution(\"1046\") == \"1043\"\nassert solution(\"1047\") == \"1044\"\nassert solution(\"1048\") == \"1045\"\nassert solution(\"1049\") == \"1046\"\nassert solution(\"1050\") == \"1047\"\nassert solution(\"1051\") == \"1048\"\nassert solution(\"1052\") == \"1049\"\nassert solution(\"1053\") == \"1050\"\nassert solution(\"1054\") == \"1051\"\nassert solution(\"1055\") == \"1052\"\nassert solution(\"1056\") == \"1053\"\nassert solution(\"1057\") == \"1054\"\nassert solution(\"1058\") == \"1055\"\nassert solution(\"1059\") == \"1056\"\nassert solution(\"1060\") == \"1057\"\nassert solution(\"1061\") == \"1058\"\nassert solution(\"1062\") == \"1",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == '9'\nassert solution(12) == '9'\nassert solution(13) == '10'\nassert solution(14) == '10'\nassert solution(15) == '11'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\", \"Test 1 failed\"\nassert solution(\"12\") == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\", \"Test 2 failed\"\nassert solution(\"5\") == \"5\", \"Test 3 failed\"\nassert solution(\"1000000000\") == \"1000000000 is not square, but 1000000000000 is. Thus, we print 1000000000000.\", \"Test 4 failed\"\nassert solution(\"100\") == \"100\", \"Test 5 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 145
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2\\n') == '10\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2\\n') == '10\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"5\\n2 3\\n1 1\\n3 2\") == \"16\"\nassert solution(\"6\\n3 2\\n1 1\\n3 2\") == \"19\"\nassert solution(\"3\\n4 5\\n1 1\\n3 2\") == \"25\"\nassert solution(\"2\\n3 4\\n1 1\\n3 2\") == \"30\"\nassert solution(\"3\\n2 1\\n1 2\\n3 2\") == \"25\"\nassert solution(\"3\\n2 1\\n1 1\\n2 2\") == \"28\"\nassert solution(\"4\\n2 1\\n1 2\\n3 3\") == \"34\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nprint(\"All tests passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\\n\"\n\nimport math",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"4\\n2 3\\n1 1\\n3 2\\n1 1\") == \"20\"\nassert solution(\"1000\\n3 3\\n4 4\\n5 5\\n6 6\") == \"15625\"\nassert solution(\"1000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\") == \"1000\"",
        "num_ids_2": 57,
        "num_ids_4": 794
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyright\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test failed\"\nassert solution(\"abc\") == \"no\", \"Test failed\"\nassert solution(\"A\") == \"no\", \"Test failed\"\nassert solution(\"123\") == \"no\", \"Test failed\"\nassert solution(\"hello\") == \"no\", \"Test failed\"\nassert solution(\"12345\") == \"no\", \"Test failed\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Input not matching expected output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"\nassert solution(\"A\") == \"no\"\nassert solution(\"A123\") == \"no\"\nassert solution(\"123a\") == \"no\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyrightable\") == \"no\"\nassert solution(\"abracadabra\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"xyz\") == \"no\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nweeew\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\nassert solution(\"5\\nWE\") == \"1\\n\"\nassert solution(\"5\\nWEESW\") == \"1\\n\"\nassert solution(\"5\\nWEESWW\") == \"1\\n\"\nassert solution(\"5\\nN\") == \"0\\n\"\nassert solution(\"5\\nWEEEE\") == \"1\\n\"\nassert solution(\"5\\nNWE\") == \"0\\n\"\nassert solution(\"5\\nNWEESW\") == \"1\\n\"\nassert solution(\"5\\nNWEESWW\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\nassert solution(\"5\\nWWWW\") == \"1\\n\"\nassert solution(\"5\\nNEWW\") == \"1\\n\"\nassert solution(\"5\\nNE\") == \"1\\n\"\nassert solution(\"5\\n\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Your code does not pass the test case.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"\"\"2\n2\n1\n1\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1\\n'\nassert solution('5 1\\n1 2\\n2 3\\n4 5\\n6 7\\n') == '2\\n1\\n1\\n1\\n'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nprint(\"All test cases pass\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n2\\n1\\n1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"4 3\\n1 1\\n2 2\\n1 3\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"4 3\\n1 1\\n2 2\\n1 3\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 114
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2\n2\n1\n1\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"6\\n3\\n9\\n12\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"50\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"50\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 106
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"6\\n10\\n15\\n18\\n\") == \"25\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"0\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"0\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 97
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"25\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\n\nassert solution(\"10\\n15\\n5\\n\") == \"25\"\n\nassert solution(\"5\\n5\\n5\\n\") == \"25\"\n\nassert solution(\"10\\n10\\n10\\n\") == \"30\"\n\nassert solution(\"5\\n5\\n5\\n\") == \"0\"\n\nassert solution(\"10\\n10\\n10\\n\") == \"0\"",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"5\\n10\\n15\\n10\\n\") == \"30\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"6\\n10\\n15\\n\") == \"20\"\nassert solution(\"7\\n20\\n15\\n\") == \"25\"\nassert solution(\"8\\n5\\n10\\n15\\n\") == \"20\"\nassert solution(\"9\\n10\\n15\\n\") == \"30\"",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '25\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabbca\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4\\taabbcc\") == \"1\", \"Test case 2 failed\"\nassert solution(\"6\\taabbcc\") == \"2\", \"Test case 3 failed\"\nassert solution(\"5\\taabbcd\") == \"3\", \"Test case 4 failed\"\nassert solution(\"5\\tabbac\") == \"2\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"\nassert solution(\"5\\nabc\") == \"3\\n\"\nassert solution(\"3\\nabcde\") == \"3\\n\"\nassert solution(\"2\\nabcde\") == \"2\\n\"\nassert solution(\"1\\nabcde\") == \"0\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Invalid test case\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\"\nassert solution(\"2\\nabc\\n\") == \"1\"\nassert solution(\"10\\nabcabc\\n\") == \"1\"\nassert solution(\"5\\naaaabbbbbb\\n\") == \"2\"\nassert solution(\"5\\naaaaa\\n\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\naabbca\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"The expected output is incorrect.\"\nassert solution(\"Cloudy\") == \"Cloudy\", \"The expected output is incorrect.\"\nassert solution(\"Rainy\") == \"Rainy\", \"The expected output is incorrect.\"\nassert solution(\"Sunny\") == \"Cloudy\", \"The expected output is incorrect.\"\nassert solution(\"Cloudy\") == \"Rainy\", \"The expected output is incorrect.\"\nassert solution(\"Rainy\") == \"Sunny\", \"The expected output is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"The correct output should be 'Cloudy', but it is not.\"\nassert solution(\"Cloudy\") == \"Rainy\", \"The correct output should be 'Rainy', but it is not.\"\nassert solution(\"Rainy\") == \"Sunny\", \"The correct output should be 'Sunny', but it is not.\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Test failed.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"The minimum fee is not as expected.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"119\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Input error\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"10 20 150\") == \"150\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"5 3 7\") == \"7\"\nassert solution(\"100 1000 1000\") == \"1000\"",
        "num_ids_2": 39,
        "num_ids_4": 67
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"10 100 500\") == \"120\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"100 50 10\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"119\\n\", \"Output should be '119'\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter N and A, B: \")) == \"119\", \"The minimum fee is 119 yen.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"119\", \"Sample Output not matched.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3800\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3800\", \"Expected output is 3800, but got: \" + solution(input())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1') == '3800\\n', 'The expected value of the total execution time of the code is incorrect.'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"3800\", \"The expected value of the total execution time of the code is incorrect. Please check the given input.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3800', 'Test case 1 failed'\n\nsolution(stdin)\nsolution(stdin)\nsolution(stdin)\nsolution(stdin)\nsolution(stdin)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"5 5\") == \"3800\"\nassert solution(\"10 5\") == \"3800\"\nassert solution(\"2 1\") == \"3800\"\nassert solution(\"2 2\") == \"3800\"\nassert solution(\"3 1\") == \"3800\"\nassert solution(\"3 2\") == \"3800\"\nassert solution(\"4 1\") == \"3800\"\nassert solution(\"4 2\") == \"3800\"\nassert solution(\"5 2\") == \"3800\"\nassert solution(\"5 3\") == \"3800\"\nassert solution(\"6 1\") == \"3800\"\nassert solution(\"6 2\") == \"3800\"\nassert solution(\"7 1\") == \"3800\"\nassert solution(\"7 2\") == \"3800\"\nassert solution(\"8 1\") == \"3800\"\nassert solution(\"8 2\") == \"3800\"\nassert solution(\"9 1\") == \"3800\"\nassert solution(\"9 2\") == \"3800\"\nassert solution(\"10 2\") == \"3800\"\nassert solution(\"11 1\") == \"3800\"\nassert solution(\"11 2\") == \"3800\"\nassert solution(\"12 1\") == \"3800\"\nassert solution(\"12 2\") == \"3800\"\nassert solution(\"13 1\") == \"3800\"\nassert solution(\"13 2\") == \"3800\"\nassert solution(\"14 1\") == \"3800\"\nassert solution(\"14 2\") == \"3800\"\nassert solution(\"15 1\") == \"3800\"\nassert solution(\"15 2\") == \"3800\"\nassert solution(\"16 1\") == \"3800\"\nassert solution(\"16 2\") == \"3800\"\nassert solution(\"17 1\") == \"3800\"\nassert solution(\"17 2\") == \"3800\"\nassert solution(\"18 1\") == \"3800\"\nassert solution(\"18 2\") == \"3800\"\nassert solution(\"19 1\") == \"3800\"\nassert solution(\"19 2\") == \"3800\"\nassert solution(\"20 1\") == \"3800\"\nassert solution(\"20 2\") == \"3800\"\nassert solution(\"21 1\") == \"3800\"\nassert solution(\"21 2\") == \"3800\"\nassert solution(\"22 1\") == \"3800\"\nassert solution(\"22 2\") == \"3800\"\nassert solution(\"23 1\") == \"3800\"\nassert solution(\"23 2\") == \"3800\"\nassert solution(\"24 1\") == \"3800\"\nassert solution(\"24 2\") == \"3800\"\nassert solution(\"25 1\") == \"3800\"\nassert solution(\"25 2\") == \"3800\"\nassert solution(\"26 1\") == \"3800\"\nassert solution(\"26 2\") == \"3800\"\nassert solution(\"27 1\") == \"3800\"\nassert solution(\"27 2\") == \"3800\"\nassert solution(\"28 1\") == \"3800\"\nassert solution(\"28 2\") == \"3800\"\nassert solution(\"29 1\") == \"3800\"\nassert solution(\"29 2\") == \"3800\"\nassert solution(\"30 1\") == \"3800\"\nassert solution(\"30 2\") == \"3800\"\nassert solution(\"31 1\") == \"3800\"\nassert solution(\"31 2\") == \"3800\"\nassert solution(\"32 1\") == \"3800\"\nassert solution(\"32 2\") == \"3800\"\nassert solution(\"33 1\") == \"3800\"\nassert solution(\"3",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3800\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3800\"  # Correct solution",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3800\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\" # expected output: \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"Test case failed\"\nprint(\"Test case passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"\"\"\n4\n3\n3\n4\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"5\\n1 1 2 2 3 3 4 4\") == \"5\\n2\\n2\\n3\\n3\\n4\\n\"\nassert solution(\"6\\n2 3 4 5 6 7 8 9\") == \"6\\n3\\n3\\n4\\n4\\n5\\n5\\n\"\nassert solution(\"7\\n1000 1001 1002 1003 1004 1005 1006 1007 1008 1009\") == \"7\\n1003\\n1003\\n1004\\n1004\\n1005\\n1005\\n1006\\n1006\\n1007\\n1007\\n\"\nassert solution(\"8\\n1000000 1000001 1000002 1000003 1000004 1000005 1000006 1000007 1000008 1000009\") == \"8\\n1000003\\n1000003\\n1000004\\n1000004\\n1000005\\n1000005\\n1000006\\n1000006\\n1000007\\n1000007\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 244
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 4 3') == '4\\n3\\n3\\n4\\n'\nassert solution('1 2 3 4') == '1\\n2\\n3\\n4\\n'\nassert solution('5 6 7 8 9') == '5\\n6\\n7\\n8\\n9\\n'\nassert solution('100000 100000 100000 100000 100000') == '100000\\n100000\\n100000\\n100000\\n100000\\n'",
        "num_ids_2": 54,
        "num_ids_4": 168
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"1\\n1\") == \"1\\n1\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1 \\times 2 rectangle can be formed.\\n\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"2\\n0\\n\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"2\\n4\\n\", \"Testcase 3 failed\"\n\nassert solution(stdin) == \"2\\n1 5 3 2 5\\n\", \"Testcase 4 failed\"\n\nassert solution(stdin) == \"2\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\", \"Testcase 5 failed\"\n\nassert solution(stdin) == \"2\\n4 3 1 2 4\\n\", \"Testcase 6 failed\"\n\nassert solution(stdin) == \"2\\n0\\n\", \"Testcase 7 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"8\\n1 1 1 1 1 1\") == \"0\\nNo rectangle can be formed.\"\nassert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"8\\n1 1 1 1 1 1\") == \"0\\nNo rectangle can be formed.\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 \\times 2 rectangle can be formed.\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"6\\n2 2\") == \"0\\nNo rectangle can be formed.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n\\n\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n1 \\times 2 rectangle can be formed.\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1 rectangle can be formed.\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n1 rectangle can be formed.\"\nassert solution() == \"0\\n0 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8\\n'\nassert solution('4\\n3 2\\n3\\n2\\n1\\n') == '1\\n'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n') == '0\\n'",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '8', \"The output is incorrect\"\nprint(\"The output is correct\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n5\") == \"5\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"4\\n4 1\\n1\\n2\\n3\\n4\") == \"8\\n\"\nassert solution(\"3\\n6 1\\n1\\n2\\n3\\n2\") == \"8\\n\"\nassert solution(\"5\\n4 1\\n1\\n2\\n3\\n4\") == \"8\\n\"\nassert solution(\"4\\n3 1\\n1\\n2\\n3\\n4\") == \"8\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\", \"Solution should return 8\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"\nassert solution(\"6\\n2 3 4\\n\") == \"0\\n\"\nassert solution(\"1\\n3 2\\n4\\n\") == \"0\\n\"\nassert solution(\"1\\n3 4 2\\n\") == \"0\\n\"\nassert solution(\"1\\n4 2 3\\n\") == \"0\\n\"\nassert solution(\"1\\n1 1 1\\n\") == \"1\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 93
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\", \"Solution not correct.\"\nassert solution(\"5\\n100\\n50\\n30\") == \"100\\n\", \"Solution not correct.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"500000\\n1000000\\n500000\\n\") == \"2\\n\"\nassert solution(\"500000\\n1000000\\n500000\\n1500000\\n\") == \"1\\n\"\nassert solution(\"500000\\n1000000\\n500000\\n500000\\n1000000\\n\") == \"4\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 159
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\n\nsolution(\"2\\n2\\n2\\n100\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"10\\n3\\n5\\n8\\n\") == \"4\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"10\\n2\\n5\\n10\\n\") == \"2\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 96
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n50\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n1\\n200\\n\") == \"2\\n\"\nassert solution(\"3\\n3\\n3\\n150\\n\") == \"3\\n\"\nassert solution(\"4\\n4\\n4\\n100\\n\") == \"4\\n\"\nassert solution(\"5\\n5\\n5\\n50\\n\") == \"5\\n\"\nassert solution(\"6\\n6\\n6\\n100\\n\") == \"6\\n\"\nassert solution(\"7\\n7\\n7\\n150\\n\") == \"7\\n\"\nassert solution(\"8\\n8\\n8\\n200\\n\") == \"8\\n\"\nassert solution(\"9\\n9\\n9\\n250\\n\") == \"9\\n\"\nassert solution(\"10\\n10\\n10\\n300\\n\") == \"10\\n\"\nassert solution(\"11\\n11\\n11\\n350\\n\") == \"11\\n\"\nassert solution(\"12\\n12\\n12\\n400\\n\") == \"12\\n\"\nassert solution(\"13\\n13\\n13\\n450\\n\") == \"13\\n\"\nassert solution(\"14\\n14\\n14\\n500\\n\") == \"14\\n\"\nassert solution(\"15\\n15\\n15\\n550\\n\") == \"15\\n\"\nassert solution(\"16\\n16\\n16\\n600\\n\") == \"16\\n\"\nassert solution(\"17\\n17\\n17\\n650\\n\") == \"17\\n\"\nassert solution(\"18\\n18\\n18\\n700\\n\") == \"18\\n\"\nassert solution(\"19\\n19\\n19\\n750\\n\") == \"19\\n\"\nassert solution(\"20\\n20\\n20\\n800\\n\") == \"20\\n\"\nassert solution(\"21\\n21\\n21\\n850\\n\") == \"21\\n\"\nassert solution(\"22\\n22\\n22\\n900\\n\") == \"22\\n\"\nassert solution(\"23\\n23\\n23\\n950\\n\") == \"23\\n\"\nassert solution(\"24\\n24\\n24\\n1000\\n\") == \"24\\n\"\nassert solution(\"25\\n25\\n25\\n1050\\n\") == \"25\\n\"\nassert solution(\"26\\n26\\n26\\n1100\\n\") == \"26\\n\"\nassert solution(\"27\\n27\\n27\\n1150\\n\") == \"27\\n\"\nassert solution(\"28\\n28\\n28\\n1200\\n\") == \"28\\n\"\nassert solution(\"29\\n29\\n29\\n1250\\n\") == \"29\\n\"\nassert solution(\"30\\n30\\n30\\n1300\\n\") == \"30\\n\"\nassert solution(\"31\\n31\\n31\\n1350\\n\") == \"31\\n\"\nassert solution(\"32\\n32\\n32\\n1400\\n\") == \"32\\n\"\nassert solution(\"33\\n33\\n33\\n1450\\n\") == \"33\\n\"\nassert solution(\"34\\n34\\n34\\n1500\\n\") == \"34\\n\"\nassert solution(\"35\\n35\\n35\\n1550\\n\") == \"35\\n\"\nassert solution(\"36\\n36\\n3",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"10000\\n10000\\n10000\") == \"1\"\nassert solution(\"10000\\n10000\\n10000\") == \"1\"\nassert solution(\"10000\\n10000\\n10000\") == \"1\"\nassert solution(\"10000\\n10000\\n10000\") == \"1\"\nassert solution(\"10000\\n10000\\n10000\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 105
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2\\n'\nassert solution('2\\n2\\n2\\n50\\n') == '0\\n'\nassert solution('2\\n2\\n2\\n1000\\n') == '0\\n'\nassert solution('1\\n1\\n1\\n100\\n') == '1\\n'\nassert solution('1\\n1\\n1\\n50\\n') == '1\\n'\nassert solution('1\\n1\\n1\\n1000\\n') == '1\\n'\n",
        "num_ids_2": 49,
        "num_ids_4": 100
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('4 2 5') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('6 2 4') == 'No'\nassert solution('1 10 3') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes', \"The condition is not satisfied.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes\\n'\nassert solution('5 3 2') == 'Yes\\n'\nassert solution('1 5 2') == 'Yes\\n'\nassert solution('2 1 3') == 'Yes\\n'\nassert solution('3 1 5') == 'Yes\\n'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\", \"Output: \" + solution(\"1 3 2\")\nassert solution(\"4 1 5\") == \"No\\n\", \"Output: \" + solution(\"4 1 5\")\nassert solution(\"-1 3 4\") == \"No\\n\", \"Output: \" + solution(\"-1 3 4\")\nassert solution(\"1 100 100\") == \"No\\n\", \"Output: \" + solution(\"1 100 100\")\nassert solution(\"1 1 101\") == \"No\\n\", \"Output: \" + solution(\"1 1 101\")\nassert solution(\"1 100 100\") == \"No\\n\", \"Output: \" + solution(\"1 100 100\")",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"5 3 10\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"10 3 10\") == \"No\"\nassert solution(\"1 1 5\") == \"No\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 4 2\") == \"No\"\nassert solution(\"5 3 2\") == \"No\"\nassert solution(\"3 4 2\") == \"Yes\"\nassert solution(\"3 5 2\") == \"No\"\nassert solution(\"1 3 4\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"\nassert solution(\"5 3 7\") == \"No\\n\"\nassert solution(\"2 3 4\") == \"Yes\\n\"\nassert solution(\"1 4 6\") == \"No\\n\"\nassert solution(\"1 2 3\") == \"No\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"3 1000\\n50\\n70\\n60\") == \"3\"\nassert solution(\"3 1000\\n120\\n50\\n70\") == \"9\"\nassert solution(\"3 1000\\n120\\n50\\n70\\n10\") == \"1\"",
        "num_ids_2": 57,
        "num_ids_4": 117
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9\\n\", \"Expected output 9, got {} instead.\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"4 200\\n50\\n150\\n70\\n20\\n\") == \"4\\n\"\nassert solution(\"5 500\\n300\\n600\\n1200\\n2000\\n\") == \"1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 109
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"100\\n100\\n100\\n100\\n\") == \"6\\n\"\nassert solution(\"5 100\\n10\\n20\\n30\\n40\\n50\\n\") == \"15\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 104
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9\\n'\nprint('All test cases pass')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\n\nsolution(\"3 1000\\n120\\n100\\n140\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"1 2000\\n50\\n300\\n200\\n500\") == \"16\"\nassert solution(\"1 1000\\n50\\n300\\n200\\n500\") == \"16\"\nassert solution(\"1 1000\\n50\\n300\\n200\\n500\\n10000\") == \"24\"\nassert solution(\"1 1000\\n50\\n300\\n200\\n500\\n10000\\n5000\") == \"32\"\nassert solution(\"2 1000\\n50\\n300\\n200\\n500\\n10000\\n5000\") == \"16\"",
        "num_ids_2": 60,
        "num_ids_4": 130
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\napple\\norange\\n\"\nassert solution(\"1\\napple\\n\") == \"1\\napple\\n\"\nassert solution(\"2\\napple\\norange\\n\") == \"2\\napple\\norange\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 75
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\n\") == \"1\\n\"\nassert solution(\"1\\napple\\nother\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\napple\\n\") == \"1\\n\"\nassert solution(\"1\\napple\\nother\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\napple\\nother\\n\") == \"3\\n\"\nassert solution(\"1\\napple\\nother\\napple\\nother\\n\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\noorange\\napple\") == \"2\\n\"\nassert solution(\"1\\napple\\n\\n\") == \"0\\n\"\nassert solution(\"2\\nbanana\\nbanana\") == \"1\\n\"\nassert solution(\"3\\napple\\nbanana\\nbanana\") == \"2\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case failed!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\napple\\noorange\\napple') == '2', \"The solution is not correct\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na\\no\\na\\n\") == \"2\\n\", \"Solution must return 2 for the given sample input\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\no\\napple\\n\") == \"2\"\nassert solution(\"1\\napple\\n\") == \"1\"\nassert solution(\"2\\napple\\norange\\n\") == \"2\"\nassert solution(\"3\\nbanana\\ncake\\n\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\napple\\norange\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\napple\\noctober\\n\") == \"2\\n\"\nassert solution(stdin=\"2\\nbanana\\nbanana\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\napple\\nbanana\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\napple\\norange\\n\") == \"2\\n\"\nassert solution(stdin=\"2\\napple\\nbanana\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\napple\\napple\\n\") == \"2\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 92
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 2', \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\nassert solution(\"3\\n1000 1200 1500\") == \"1 1\\n\"\nassert solution(\"2\\n3200 2800\") == \"1 1\\n\"\nassert solution(\"3\\n1000 1200 1500 1600\") == \"2 2\\n\"\nassert solution(\"3\\n1000 1200 1500 1600 1700\") == \"3 3\\n\"\nassert solution(\"4\\n1000 1200 1500 1600 1700 1800\") == \"4 4\\n\"\nassert solution(\"5\\n1000 1200 1500 1600 1700 1800 1900\") == \"5 5\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 125
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 2\"\nprint(\"Correct!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 3200\") == \"3 2\"\nassert solution(\"4\\n2100 2500 2700 2700 2800 3100\") == \"4 3\"\nassert solution(\"4\\n2100 2500 2700 2700 2800 3100 3100\") == \"5 3\"",
        "num_ids_2": 66,
        "num_ids_4": 157
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"5\\n3200 3200 3200 3200 3200\") == \"4 4\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2\\n\", \"The correct output should be '2 2'\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"oxo\") == \"900\"\nassert solution(stdin=\"o\") == \"900\"\nassert solution(stdin=\"oo\") == \"1800\"\nassert solution(stdin=\"oxxx\") == \"2700\"\nassert solution(stdin=\"x\") == \"2700\"\nassert solution(stdin=\"xx\") == \"3600\"\nassert solution(stdin=\"ox\") == \"3600\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oxo\") == \"900\" # Test Case 1\n\nassert solution(\"oxxx\") == \"1800\" # Test Case 2\n\nassert solution(\"xxxo\") == \"2100\" # Test Case 3\n\nassert solution(\"xxoo\") == \"2400\" # Test Case 4\n\nassert solution(\"ooox\") == \"2800\" # Test Case 5",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"1200\"\nassert solution(\"obo\") == \"600\"\nassert solution(\"oxxx\") == \"1500\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"900\"\nassert solution(\"oxb\") == \"900\"\nassert solution(\"oxs\") == \"900\"\nassert solution(\"xox\") == \"100\"\nassert solution(\"xox\") == \"100\"\nassert solution(\"xox\") == \"100\"\nassert solution(\"xox\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\n\nassert solution(\"xox\") == \"900\"\n\nassert solution(\"ooo\") == \"900\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\", \"The output of the code is incorrect. The expected output is H. However, it is actually\" + solution(\"H H\") + \".\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H H\\n\") == \"H\"\nassert solution(\"H D\\n\") == \"D\"\nassert solution(\"D H\\n\") == \"D\"\nassert solution(\"D D\\n\") == \"H\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\", \"Sample Input Error\"\nassert solution(\"H D\") == \"D\", \"Sample Input Error\"\nassert solution(\"D H\") == \"D\", \"Sample Input Error\"\nassert solution(\"D D\") == \"H\", \"Sample Input Error\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"H\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D H\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\", \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\", \"Test Case 1\"\nassert solution(\"H D\") == \"D\", \"Test Case 2\"\nassert solution(\"D H\") == \"D\", \"Test Case 3\"\nassert solution(\"D D\") == \"H\", \"Test Case 4\"\nassert solution(\"H H\") == \"H\", \"Test Case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Invalid solution\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nprint(\"This is the only valid solution.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Test case 1\"\nassert solution(\"1111\") == \"1+1+1+1=4\", \"Test case 2\"\nassert solution(\"0000\") == \"0+0+0+0=0\", \"Test case 3\"\nassert solution(\"1111111111111111111111111111111\") == \"11111111111111111111111111111111=111111111111111111111111111111111\", \"Test case 4\"\nassert solution(\"11111111111111111111111111111111\") == \"1+1+1+1=4\", \"Test case 5\"",
        "num_ids_2": 54,
        "num_ids_4": 192
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Your solution is incorrect!\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Test failed for input 1222\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution does not match.\\nExpected: {output}\\nGot: {solution(input())}\"\n\ninput_list = list(map(int, stdin.readline().split()))\nn = input_list[0]\nA = list(map(int, stdin.readline().split()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 3\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 3\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 4\\n') == '0\\n0\\n0\\n0\\n0\\n'\nassert solution('5\\n1 1 2 3\\n') == '0\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\n\nassert solution(\"1\\n2\\n3\") == \"0\\n0\\n1\"\n\nassert solution(\"5\\n2 3 4 5 6\") == \"2\\n2\\n0\\n0\\n0\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"0\\n0\\n1\\n2\\n3\\n4\\n5\"",
        "num_ids_2": 53,
        "num_ids_4": 126
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 1\\n1 1 2 2\\n1 1 3 3\\n1 1 4 4\\n1 1 5 5\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 1\\n1 1 2 2\\n1 1 3 3\\n1 1 4 4\\n1 1 5 5\\n1 2 3 4 5\") == \"1\\n1\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 1\\n1 1 2 2\\n1 1 3 3\\n1 1 4 4\\n1 1 5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4",
        "num_ids_2": 98,
        "num_ids_4": 1027
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(\"6\\n1 1 1 2 2 2\") == \"2\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"6\\n1 1 1 2 2 3\") == \"0\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"7\\n1 1 1 2 2 3 3\") == \"0\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"7\\n1 1 1 2 2 3 4\") == \"2\\n0\\n0\\n0\\n0\\n0\"\n\nfrom typing import List",
        "num_ids_2": 71,
        "num_ids_4": 149
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\"\nassert solution(\"10\\n\") == \"2\"\nassert solution(\"15\\n\") == \"3\"\nassert solution(\"100\\n\") == \"5\"\nassert solution(\"200\\n\") == \"10\"\nassert solution(\"500\\n\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('5') == '4'\nassert solution('6') == '3'\nassert solution('9') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\", \"The solution should return Yes for N=1118.\"\nassert solution(\"1119\") == \"Yes\", \"The solution should return Yes for N=1119.\"\nassert solution(\"1120\") == \"Yes\", \"The solution should return Yes for N=1120.\"\nassert solution(\"1121\") == \"Yes\", \"The solution should return Yes for N=1121.\"\nassert solution(\"1122\") == \"No\", \"The solution should return No for N=1122.\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1118') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"2334\") == \"No\"\nassert solution(\"101010\") == \"No\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"5555\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes', \"Solution should return 'Yes', not '{}'\".format(solution('1118'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes', \"Error: The function should return 'Yes' if the given integer is good, otherwise 'No'.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1118) == 'Yes', 'Please provide the correct input.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1128\") == \"Yes\"\nassert solution(\"1138\") == \"Yes\"\nassert solution(\"1148\") == \"Yes\"\nassert solution(\"1158\") == \"Yes\"\nassert solution(\"1168\") == \"Yes\"\nassert solution(\"1178\") == \"Yes\"\nassert solution(\"1188\") == \"Yes\"\nassert solution(\"1198\") == \"Yes\"\nassert solution(\"1208\") == \"Yes\"\nassert solution(\"1218\") == \"Yes\"\nassert solution(\"1228\") == \"Yes\"\nassert solution(\"1238\") == \"Yes\"\nassert solution(\"1248\") == \"Yes\"\nassert solution(\"1258\") == \"Yes\"\nassert solution(\"1268\") == \"Yes\"\nassert solution(\"1278\") == \"Yes\"\nassert solution(\"1288\") == \"Yes\"\nassert solution(\"1298\") == \"Yes\"\nassert solution(\"1308\") == \"Yes\"\nassert solution(\"1318\") == \"Yes\"\nassert solution(\"1328\") == \"Yes\"\nassert solution(\"1338\") == \"Yes\"\nassert solution(\"1348\") == \"Yes\"\nassert solution(\"1358\") == \"Yes\"\nassert solution(\"1368\") == \"Yes\"\nassert solution(\"1378\") == \"Yes\"\nassert solution(\"1388\") == \"Yes\"\nassert solution(\"1398\") == \"Yes\"\nassert solution(\"1408\") == \"Yes\"\nassert solution(\"1418\") == \"Yes\"\nassert solution(\"1428\") == \"Yes\"\nassert solution(\"1438\") == \"Yes\"\nassert solution(\"1448\") == \"Yes\"\nassert solution(\"1458\") == \"Yes\"\nassert solution(\"1468\") == \"Yes\"\nassert solution(\"1478\") == \"Yes\"\nassert solution(\"1488\") == \"Yes\"\nassert solution(\"1498\") == \"Yes\"\nassert solution(\"1508\") == \"Yes\"\nassert solution(\"1518\") == \"Yes\"\nassert solution(\"1528\") == \"Yes\"\nassert solution(\"1538\") == \"Yes\"\nassert solution(\"1548\") == \"Yes\"\nassert solution(\"1558\") == \"Yes\"\nassert solution(\"1568\") == \"Yes\"\nassert solution(\"1578\") == \"Yes\"\nassert solution(\"1588\") == \"Yes\"\nassert solution(\"1598\") == \"Yes\"\nassert solution(\"1608\") == \"Yes\"\nassert solution(\"1618\") == \"Yes\"\nassert solution(\"1628\") == \"Yes\"\nassert solution(\"1638\") == \"Yes\"\nassert solution(\"1648\") == \"Yes\"\nassert solution(\"1658\") == \"Yes\"\nassert solution(\"1668\") == \"Yes\"\nassert solution(\"1678\") == \"Yes\"\nassert solution(\"1688\") == \"Yes\"\nassert solution(\"1698\") == \"Yes\"\nassert solution(\"1708\") == \"Yes\"\nassert solution(\"1718\") == \"Yes\"\nassert solution(\"1728\") == \"Yes\"\nassert solution(\"1738\") == \"Yes\"\nassert solution(\"1748\") == \"Yes\"\nassert solution(\"1758\") == \"Yes\"\nassert solution(\"1768\") == \"Yes\"\nassert solution(\"1778\") == \"Yes\"\nassert solution(\"1788\") == \"Yes\"\nassert solution(\"1798\") == \"Yes\"\nassert solution(\"1808\") == \"Yes\"\nassert solution(\"1818\") == \"Yes\"\nassert solution(\"1828\") == \"Yes\"\nassert solution(\"1838\") == \"Yes\"\nassert solution(\"1848\") == \"Yes\"\nassert solution(\"1858\") == \"Yes\"\nassert solution(\"1868\") == \"Yes\"\nassert solution(\"1878\") == \"Yes\"\nassert solution(\"1888\") == \"Yes\"\nassert solution(\"1898\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\\n\", \"Test Case 1\"\nassert solution(\"1000\") == \"No\\n\", \"Test Case 2\"\nassert solution(\"9999\") == \"No\\n\", \"Test Case 3\"\nassert solution(\"10000\") == \"Yes\\n\", \"Test Case 4\"\nassert solution(\"1000000000\") == \"No\\n\", \"Test Case 5\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Solution is incorrect\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\"\nassert solution(\"3\\n3 6\\n6 4\\n1 4\\n\") == \"2\"\nassert solution(\"4\\n1 5\\n2 6\\n3 5\\n\") == \"1\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n\") == \"0\"\nassert solution(\"2\\n1 3\\n2 4\\n3 5\\n\") == \"1\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n\") == \"3\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\", \"The expected output is '3\\n', but it is '\" + solution() + \"'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution.input) == solution.output, f\"The output is incorrect. Please see the correctness of the solution.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"4\\n5\\n6\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 57
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1\\n5\\n1 5\\n2 4\\n3 6\") == \"3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A B\") == \"<\\n\"  # expected output: \"<\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \">\\n\"\nassert solution(\"A C\") == \"=\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('A B') == '<\\n', \"X is smaller\"\nassert solution('B C') == '>', \"Y is smaller\"\nassert solution('A B') == '=', \"They are equal\"",
        "num_ids_2": 31,
        "num_ids_4": 45
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A B') == '<', 'Output should be <'\nassert solution('C D') == '>', 'Output should be >'\nassert solution('A C') == '=', 'Output should be ='",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('A B') == '<\\n10 < 11.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '<'\nassert solution('C D') == '<'\nassert solution('D C') == '<'\nassert solution('E F') == '<'\nassert solution('F E') == '<'\nassert solution('G H') == '<'\nassert solution('H G') == '<'\nassert solution('I J') == '<'\nassert solution('J I') == '<'\nassert solution('K L') == '<'\nassert solution('L K') == '<'\nassert solution('M N') == '<'\nassert solution('N M') == '<'\nassert solution('O P') == '<'\nassert solution('P O') == '<'\nassert solution('Q R') == '<'\nassert solution('R Q') == '<'\nassert solution('S T') == '<'\nassert solution('T S') == '<'\nassert solution('U V') == '<'\nassert solution('V U') == '<'\nassert solution('W X') == '<'\nassert solution('X W') == '<'\nassert solution('Y Z') == '<'\nassert solution('Z Y') == '<'\nassert solution('A B') == '<'\nassert solution('B A') == '<'\nassert solution('C D') == '<'\nassert solution('D C') == '<'\nassert solution('E F') == '<'\nassert solution('F E') == '<'\nassert solution('G H') == '<'\nassert solution('H G') == '<'\nassert solution('I J') == '<'\nassert solution('J I') == '<'\nassert solution('K L') == '<'\nassert solution('L K') == '<'\nassert solution('M N') == '<'\nassert solution('N M') == '<'\nassert solution('O P') == '<'\nassert solution('P O') == '<'\nassert solution('Q R') == '<'\nassert solution('R Q') == '<'\nassert solution('S T') == '<'\nassert solution('T S') == '<'\nassert solution('U V') == '<'\nassert solution('V U') == '<'\nassert solution('W X') == '<'\nassert solution('X W') == '<'\nassert solution('Y Z') == '<'\nassert solution('Z Y') == '<'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \"<11\\n\"\nassert solution(\"E F\") == \"<14\\n\"\nassert solution(\"G H\") == \">\"\nassert solution(\"I J\") == \"=\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\"\nassert solution(\"Z A\") == \"<\\n15 < 10.\\n\"\nassert solution(\"G A\") == \"<\\n12 > 10.\\n\"\nassert solution(\"E C\") == \"<\\n14 > 12.\\n\"\nassert solution(\"C D\") == \"<\\n13 > 14.\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\", \"The solution is not correct.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#. \\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Input: {stdin}, Output: {output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The output is incorrect. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11211\\n1#2#1\\n11211\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\") == \"11211\"\nassert solution(\"1 2\") == \"11211\"\nassert solution(\"2 1\") == \"11211\"\nassert solution(\"3 4\") == \"11211\"",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 4\\n..##\\n.....\\n...##\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"5 5\\n..##\\n.....\\n...##\") == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 81,
        "num_ids_4": 122
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1\\n11211\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"1 2\\n....\\n..#..\\n...#\") == \"11\\n12\\n11\\n\"\nassert solution(\"2 3\\n....\\n..#..\\n...#\") == \"11\\n13\\n11\\n\"\nassert solution(\"3 5\\n.....\\n..#..\\n...#\") == \"11\\n12\\n11\\n\"\nassert solution(\"4 6\\n....\\n..#..\\n...#\") == \"11\\n13\\n14\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 146
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"3 5\\n123\\n#..\\n...\\n\") == \"21221\\n2#2#2\\n22221\\n\"\nassert solution(\"3 5\\n123\\n1#.\\n1..#\\n\") == \"21221\\n2#2#2\\n22221\\n\"\nassert solution(\"3 5\\n123\\n12#.\\n12..#\\n\") == \"21221\\n2#2#2\\n22221\\n\"\nassert solution(\"3 5\\n123\\n123.\\n123..#\\n\") == \"21221\\n2#2#2\\n22221\\n\"\nassert solution(\"3 5\\n123\\n1234\\n1234.\\n1234..\\n\") == \"21221\\n2#2#2\\n22221\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 184
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 2 10\") == \"3\"\nassert solution(\"20 15 10\") == \"15\"\nassert solution(\"20 10 5\") == \"10\"\nassert solution(\"20 5 0\") == \"5\"\n",
        "num_ids_2": 57,
        "num_ids_4": 92
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 240) == 3",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\", \"The output should be 3.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"1000000 1000000 1000000\") == \"500000\"",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\\n80 150 120 90\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\\n80 150 120 90\\n60 70 80 90\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\\n80 150 120 90\\n60 70 80 90\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\\n80 150 120 90\\n60 70 80 90\\n80 150 80 150\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n90 120 80 150\\n80 150 120 90\\n60 70 80 90\\n80 150 80 150\\n80 150 80 150\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 256
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(stdin=\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(stdin=\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 138
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, \"Test case failed. Expected output: {}, Actual output: {}\".format(expected_output, solution(input_str))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"10000 25000 30000 5 3\") == \"12600\"\nassert solution(\"2500000 5000000 7500000 10 4\") == \"2920000\"\nassert solution(\"10000 10000 10000 1 1\") == \"0\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 64,
        "num_ids_4": 137
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1800 2400 1900 4 3\") == \"11500\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\", \"Pizza At\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1000 1500 2000 2 2\") == \"6600\"\nassert solution(\"2000 2500 3000 3 2\") == \"8300\"\nassert solution(\"3000 3500 4000 4 2\") == \"10200\"\nassert solution(\"4000 4500 5000 5 2\") == \"12100\"\nassert solution(\"10000 15000 20000 6 3\") == \"21600\"",
        "num_ids_2": 60,
        "num_ids_4": 121
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\" # correct output\nassert solution(\"1000 500 600 4 3\") == \"5800\" # incorrect output",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4, \"The output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4', 'The output should be 4.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"1\\n\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"2\\n\") == \"2\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n\") == \"5\\n\", \"Test case 4 failed\"\nassert solution(\"10\\n\") == \"21\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 4, \"The output should be 4.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4\", \"The output should be 4.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 4, \"Output should be 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\", \"The solution should return the largest perfect power that is at most 10.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='10') == '9'\nassert solution(stdin='20') == '16'\nassert solution(stdin='1000') == '168'\nassert solution(stdin='1001') == '169'\nassert solution(stdin='1002') == '170'",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 9, \"Expected output: 9, Actual output: \" + solution(10)\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\\n\", \"Test Case 1 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 2 failed\"\n\nassert solution(input()) == \"12\\n\", \"Test Case 3 failed\"\n\nassert solution(input()) == \"15\\n\", \"Test Case 4 failed\"\n\nassert solution(input()) == \"21\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"10\") == \"9\"\nassert solution(stdin=\"20\") == \"10\"\nassert solution(stdin=\"30\") == \"10\"\nassert solution(stdin=\"40\") == \"10\"\nassert solution(stdin=\"50\") == \"10\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"9\", \"The correct output is 9, but got: \" + solution(10)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\", \"Your solution is incorrect. Please check the given constraints and sample input/output.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"4\\n10\\n8\\n8\\n6\\n12\\n14\\n16\\n\") == \"3\"\nassert solution(\"4\\n10\\n8\\n8\\n6\\n12\\n14\\n16\\n7\\n9\\n11\\n\") == \"3\"\nassert solution(\"4\\n10\\n8\\n8\\n6\\n12\\n14\\n16\\n7\\n9\\n11\\n13\\n\") == \"3\"",
        "num_ids_2": 62,
        "num_ids_4": 160
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3\\n', \"Test failed for input: 4, 10, 8, 8, 6\"\nassert solution('5\\n10\\n8\\n8\\n6\\n') == '5\\n', \"Test failed for input: 5, 10, 8, 8, 6\"\nassert solution('6\\n10\\n8\\n8\\n6\\n') == '6\\n', \"Test failed for input: 6, 10, 8, 8, 6\"\nassert solution('7\\n10\\n8\\n8\\n6\\n') == '7\\n', \"Test failed for input: 7, 10, 8, 8, 6\"\nassert solution('8\\n10\\n8\\n8\\n6\\n') == '8\\n', \"Test failed for input: 8, 10, 8, 8, 6\"\nassert solution('9\\n10\\n8\\n8\\n6\\n') == '9\\n', \"Test failed for input: 9, 10, 8, 8, 6\"\nassert solution('10\\n10\\n10\\n10\\n10\\n') == '10\\n', \"Test failed for input: 10, 10, 10, 10, 10\"",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"4\\n10\\n8\\n6\") == \"2\\n\"\nassert solution(\"4\\n10\\n8\") == \"2\\n\"\nassert solution(\"4\\n10\") == \"2\\n\"\nassert solution(\"4\") == \"2\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 82
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3\\n'\nassert solution(\"10\\n8\\n8\\n6\\n\") == '3\\n'\nassert solution(\"4\\n10\\n8\\n8\\n6\\n\") == '3\\n'",
        "num_ids_2": 36,
        "num_ids_4": 63
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == 5, \"Test Failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"Incorrect solution\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"Solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"ABCD\") == \"0\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"16\"\nassert solution(\"0123456789\") == \"1\"\nassert solution(\"1234567890\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 67
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"5\\n3 5 7 11\") == \"2\"\nassert solution(\"7\\n10 15 20 25\") == \"3\"\nassert solution(\"1\\n\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\"\nassert solution(\"5\\n2 4 6 8 10\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"4\\n4 8 12 16\") == \"2\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"2\\n10\") == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"5\\n2 4 6 8 10\") == \"3\"\nassert solution(\"7\\n1 3 5 7 9 11 13 15\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8 9\") == \"5\"\nassert solution(\"9\\n10 11 12 13 14 15 16 17 18 19\") == \"6\"\nassert solution(\"10\\n2 4 6 8 10 12 14 16 18 20\") == \"7\"",
        "num_ids_2": 41,
        "num_ids_4": 100
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n5 5 5 5\") == \"0\"\nassert solution(\"6\\n7 8 9 10 11\") == \"2\"\nassert solution(\"7\\n7 7 7 7\") == \"2\"\nassert solution(\"8\\n8 8 8 8\") == \"1\"\nassert solution(\"9\\n9 9 9 9\") == \"0\"\nassert solution(\"10\\n10 10 10 10\") == \"1\"\nassert solution(\"11\\n11 11 11 11\") == \"0\"\nassert solution(\"12\\n12 12 12 12\") == \"0\"\nassert solution(\"13\\n13 13 13 13\") == \"0\"\nassert solution(\"14\\n14 14 14 14\") == \"0\"\nassert solution(\"15\\n15 15 15 15\") == \"1\"\nassert solution(\"16\\n16 16 16 16\") == \"1\"\nassert solution(\"17\\n17 17 17 17\") == \"0\"\nassert solution(\"18\\n18 18 18 18\") == \"0\"\nassert solution(\"19\\n19 19 19 19\") == \"0\"\nassert solution(\"20\\n20 20 20 20\") == \"1\"\nassert solution(\"21\\n21 21 21 21\") == \"0\"\nassert solution(\"22\\n22 22 22 22\") == \"0\"\nassert solution(\"23\\n23 23 23 23\") == \"0\"\nassert solution(\"24\\n24 24 24 24\") == \"0\"\nassert solution(\"25\\n25 25 25 25\") == \"0\"\nassert solution(\"26\\n26 26 26 26\") == \"1\"\nassert solution(\"27\\n27 27 27 27\") == \"0\"\nassert solution(\"28\\n28 28 28 28\") == \"0\"\nassert solution(\"29\\n29 29 29 29\") == \"0\"\nassert solution(\"30\\n30 30 30 30\") == \"1\"\nassert solution(\"31\\n31 31 31 31\") == \"0\"\nassert solution(\"32\\n32 32 32 32\") == \"0\"\nassert solution(\"33\\n33 33 33 33\") == \"0\"\nassert solution(\"34\\n34 34 34 34\") == \"0\"\nassert solution(\"35\\n35 35 35 35\") == \"0\"\nassert solution(\"36\\n36 36 36 36\") == \"0\"\nassert solution(\"37\\n37 37 37 37\") == \"0\"\nassert solution(\"38\\n38 38 38 38\") == \"0\"\nassert solution(\"39\\n39 39 39 39\") == \"0\"\nassert solution(\"40\\n40 40 40 40\") == \"1\"\nassert solution(\"41\\n41 41 41 41\") == \"0\"\nassert solution(\"42\\n42 42 42 42\") == \"0\"\nassert solution(\"43\\n43 43 43 43\") == \"0\"\nassert solution(\"44\\n44 44 44 44\") == \"0\"\nassert solution(\"45\\n45 45 45 45\") == \"0\"\nassert solution(\"46\\n46 46 46 46\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"2\\n1 2 3\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\"\nassert solution(\"5\\n9 17 63\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"7\\n12 100 25\") == \"5\\n\"\nassert solution(\"8\\n100 100 100\") == \"6\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"12\"\nassert solution(3) == \"18\"\nassert solution(4) == \"24\"\nassert solution(5) == \"30\"\n\nfor _ in range(6):\n    N = int(input())\n    print(solution(N))",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'\nprint('All tests passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '6', \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"6\", \"The solution does not match the expected output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6', 'Test failed'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '6', \"The answer is 1+2+3=6.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '6\\n', \"The answer is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"\nassert solution(\"1\\n1 2\") == \"1\\n2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n0\\n\"\nassert solution(\"10\\n10 10 10 10 10\") == \"10\\n50\\n\"\nassert solution(\"3\\n1 2 3\") == \"0\\n3\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 97
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"3\\n2 3\\n\") == \"3\\n\", \"Test Case 2\"\nassert solution(\"1\\n5 4\\n\") == \"0\\n\", \"Test Case 3\"\nassert solution(\"5\\n10 1\\n\") == \"15\\n\", \"Test Case 4\"\nassert solution(\"5\\n10 10 10 10\\n\") == \"15\\n\", \"Test Case 5\"",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"  # sample input\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"  # sample input",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"\nprint(\"All test cases pass\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2\\n3 1') == '2\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 1') == '2\\n'\nassert solution('3\\n1 2') == '1\\n'\nassert solution('4\\n2 3 4') == '1\\n'\nassert solution('1\\n5') == '1\\n'\nassert solution('1\\n') == '1\\n'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2 2\"\nassert solution(input()) == \"2 2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n1 WA\\n1 AC\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n2 AC\") == \"2 2\"",
        "num_ids_2": 72,
        "num_ids_4": 110
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\"\"\") == '2 2'\n\nassert solution(\n\"\"\"\n1 1\n1 WA\n\"\"\") == '1 0'\n\nassert solution(\n\"\"\"\n2 1\n1 WA\n\"\"\") == '1 0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\"\nassert solution(\"3 2\\n4 1 5\\n\") == \"6\"\nassert solution(\"3 1\\n4 2 5\\n\") == \"5\"\nassert solution(\"3 1\\n4 3 5\\n\") == \"4\"\nassert solution(\"3 2\\n4 1 5\\n\") == \"6\"\nassert solution(\"3 1\\n4 2 5\\n\") == \"5\"\nassert solution(\"3 1\\n4 3 5\\n\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"1 1\\n1 1\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\", f\"Your solution for this problem should return '{5}', but it returned '{solution(input())}'.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == \"5\"\nassert solution(4, 1, 5) == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\", \"Test case failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\", \"Test case failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3 1\\n4 1 5\\n\") == \"5\"\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('2\\n10\\n1\\n') == '16\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"2\\n5\\n3 4\\n\") == \"16\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 2\\n3 4\\n\") == \"4\\n\"\nassert solution(\"2\\n5\\n5\\n\") == \"10\\n\"\nassert solution(\"3\\n10\\n1 2\\n3 4\\n5 6\\n\") == \"14\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 104
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\", \"The output should be 4.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n1 3\\n\") == \"16\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"3\\n5\\n3\\n\") == \"16\"\nassert solution(\"6\\n12\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n100\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 449
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\n', \"Incorrect output. Expected: 4, Actual: {}\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(600, 300, 220, 420) == 520\nprint(\"All tests passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"\nassert solution(\"1000\\n1000\\n1000\\n1000\") == \"1000\\n\"\nassert solution(\"500\\n500\\n500\\n500\") == \"500\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution
        "num_ids_2": 67,
        "num_ids_4": 119
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n3 5 5 0 2\") == \"4\\n\"\nassert solution(\"5\\n1 2 2 0 1\") == \"0\\n\"\nassert solution(\"5\\n3 3 3 0 1\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\\n\"\nassert solution(\"6\\n2 4 4 0 2\\n\") == \"0\\n\"\nassert solution(\"5\\n3 4 4 0 2\\n\") == \"3\\n\"\nassert solution(\"6\\n3 4 4 0 2\\n\") == \"0\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4\\n'\nassert solution('3\\n4 1 0 3 2') == '3\\n'\nassert solution('1\\n3 4 2 0 5') == '0\\n'\nassert solution('5\\n2 1 0 3 4') == '0\\n'\nassert solution('2\\n4 5 1 3 2') == '4\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n3 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\nassert solution(\"5\\n3 2 3 4 5\") == \"4\"\nassert solution(\"5\\n2 2 3 4 5\") == \"4\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"5\\n1 3 4 5 2\") == \"4\"\nassert solution(\"5\\n1 4 5 2 3\") == \"4\"\nassert solution(\"5\\n1 5 2 3 4\") == \"4\"\nassert solution(\"5\\n0 2 3 4 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 1\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"84\", \"The output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"50 2 7\") == \"103\"\nassert solution(\"25 5 9\") == \"27\"\nassert solution(\"10 10 20\") == \"180\"\nassert solution(\"200 10 30\") == \"600\"",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Input and Output do not match.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"\nassert solution(\"10 20 30\") == \"232\\n\"\nassert solution(\"1 10 100\") == \"20\\n\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000000\") == \"2100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 39,
        "num_ids_4": 1027
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 1 2\") == \"4\"\nassert solution(\"5 5 5\") == \"25\"\nassert solution(\"10 20 10\") == \"100\"\nassert solution(\"1000 1000 1000\") == \"10000000\"\n",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"84\\n\", \"Test failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Test 1 failed\"\nassert solution(\"10 10 10\") == \"10000\", \"Test 2 failed\"\nassert solution(\"1000000 1 10\") == \"32767\", \"Test 3 failed\"\nassert solution(\"1000000 9 1000000\") == \"32767\", \"Test 4 failed\"\nassert solution(\"1000000 1000000 1000000\") == \"10000000000\", \"Test 5 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 116
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\", \"Output is incorrect\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter N, A, and B: \")) == \"84\", \"The sum of the integers between 1 and N (inclusive), whose sum of digits written in base 10 is between A and B (inclusive) is 84.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"ABC100\", \"Test case 1 failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"ABC100\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"ABC100\", \"The N-th round of ABC is not ABC100.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"ABC100\"\nprint(\"Correct!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(100) == 'ABC100', \"Expected output: ABC100, but got {}\".format(solution(100))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ABC100\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'ABC100', \"The solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"1000\") == \"ABC200\"\nassert solution(\"10000\") == \"ABC300\"\nassert solution(\"100000\") == \"ABC400\"\nassert solution(\"1000000\") == \"ABC500\"\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='100\\n') == 'ABC100\\n'\nassert solution(stdin='101\\n') == 'ABC101\\n'\nassert solution(stdin='102\\n') == 'ABC102\\n'\nassert solution(stdin='103\\n') == 'ABC103\\n'\nassert solution(stdin='104\\n') == 'ABC104\\n'\nassert solution(stdin='105\\n') == 'ABC105\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Test case 1 failed\"\n\na, b = map(int, stdin.split())\n\nassert 1 <= a <= 12 and 1 <= b <= 31, \"Invalid input\"\nassert 1 <= a <= 12 and 1 <= b <= 12, \"Invalid input\"\nassert 1 <= a <= 12 and 1 <= b <= 31, \"Invalid input\"\nassert 2018 <= a <= 2019 and 1 <= b <= 31, \"Invalid input\"",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"The correct output is not as expected.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"12 5\") == \"12\"\nassert solution(\"12 1\") == \"12\"\nassert solution(\"12 31\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 5) == \"5\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\nassert solution(\"4 29\") == \"29\\n\"\nassert solution(\"1 29\") == \"29\\n\"\nassert solution(\"12 29\") == \"29\\n\"\nassert solution(\"1 1\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 5\") == \"5\\n\", \"Testcase 1 failed\"\nassert solution(stdin=\"2 5\") == \"5\\n\", \"Testcase 2 failed\"\nassert solution(stdin=\"1 31\") == \"31\\n\", \"Testcase 3 failed\"\nassert solution(stdin=\"4 20\") == \"20\\n\", \"Testcase 4 failed\"\nassert solution(stdin=\"1 12\") == \"31\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5') == 5\nassert solution('1 1') == 1\nassert solution('1 31') == 1\nassert solution('30 29') == 29\nassert solution('12 31') == 1",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5 5\\n\") == \"5\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\"\nprint(\"Press Button 1, then Button 3.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == -1, \"sample output error\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n3\n1\n2\n\"\"\") == \"\"\"2\"\"\"\n\nassert solution(\"\"\"3\n4\n1\n2\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"2\n2\n1\n2\n\"\"\") == \"\"\"2\"\"\"\n\nassert solution(\"\"\"3\n3\n1\n2\n\"\"\") == \"\"\"2\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"4\\n1\\n2\\n\") == \"-1\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"4\\n1\\n2\\n\") == \"-1\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == -1, \"The solution is impossible\"\nassert solution(input()) == 2, \"The solution is impossible\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\\na_9\\na_10\") == 2\nprint(\"All Tests Passed\")",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"-1\\n2\\n\"  # Test case 1\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"  # Test case 2\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"  # Test case 3\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"  # Test case 4\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"  # Test case 5",
        "num_ids_2": 61,
        "num_ids_4": 119
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"5\\n3\\n7\\n4\\n2\\n5\\n8\\n1\\n3\") == \"2\\n\", \"Test 2 failed\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"10\\n\", \"Test 3 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\\n\", \"Test 4 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1\\n\", \"Test 5 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\",
        "num_ids_2": 69,
        "num_ids_4": 146
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"3\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n\") == \"2\\n\"\nassert solution(\"6\\n\\n\\n\\n\\n\") == \"6\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"The solution should return the correct output.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Incorrect Output\" # expected output: 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\"",
        "num_ids_2": 45,
        "num_ids_4": 85
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"6 3\\n1 2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"7 2\\n2 3 4 5 6 7\\n\") == \"2\\n\"\nassert solution(\"8 2\\n1 1 1 1 1 1\\n\") == \"1\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5\\n') == '1\\n'\nassert solution('4 2\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 1 2 3 4\\n') == '1\\n'\nassert solution('4 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 4\\n1 1 2 3 4\\n') == '3\\n'\nassert solution('4 4\\n1 2 3 4 5\\n') == '4\\n'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 3\") == \"2\\n\"\nassert solution(\"5 2\\n1 1 2 2 2\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2\") == \"1\\n\"\nassert solution(\"5 2\\n1\") == \"1\\n\"\nassert solution(\"5 2\\n0\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n3 3 4 4 5\") == \"2\"\nassert solution(\"5 2\\n1 2 2 3 4\") == \"3\"\nassert solution(\"5 2\\n5 6 6 6 6\") == \"4\"\nassert solution(\"5 2\\n1 2 2 2 2\") == \"4\"\nassert solution(\"5 2\\n1 2 2 2 2\") == \"4\"\nassert solution(\"5 2\\n1 2 2 2 2\") == \"4\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n2 2 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 2 1 2 5\") == \"1\"\nassert solution(\"5 2\\n2 2 2 1 5\") == \"1\"\nassert solution(\"5 2\\n1 2 2 2 5\") == \"1\"\nassert solution(\"5 2\\n3 3 3 3 5\") == \"1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 3\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 2\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"1\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"2 3\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"1 2\\n1 1 2 2 5\\n\") == \"3\"\nassert solution(\"3 1\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"4 5\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 4\\n1 1 2 2 5\\n\") == \"3\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes\\n'\nassert solution('3\\n0 0\\n10 10\\n5 5') == 'No\\n'\nassert solution('2\\n3 1 2\\n6 1 1\\n9 0 0\\n1 1 0\\n1 2 1\\n2 2 2\\n4 4 4') == 'Yes\\n'\nassert solution('10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10') == 'No\\n'",
        "num_ids_2": 55,
        "num_ids_4": 202
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'2\\n3 1 2\\n6 1 1\\n') == 'Yes'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"4\\n1 1 1\\n2 2 2\\n\") == \"No\\n\"\nassert solution(\"3\\n1 1 1\\n1 1 1\\n\") == \"Yes\\n\"\nassert solution(\"3\\n1 1 2\\n1 1 1\\n\") == \"No\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"No\\n\"\nassert solution(\"1\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\") == \"Yes\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 110
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"No\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Input incorrect\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"1\\n5 2 3\\n7 2 2\") == \"Yes\"\nassert solution(\"1\\n1 1 1\") == \"No\"\nassert solution(\"2\\n3 1 2\\n6 1 1\") == \"No\"\n",
        "num_ids_2": 48,
        "num_ids_4": 89
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"5 7\") == \"7\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"100 100\") == \"100\"",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"2 2\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"20 10\") == \"20\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"2\" # Correct output\nassert solution(\"5 10\") == \"15\" # Correct output\nassert solution(\"0 10\") == \"10\" # Correct output\nassert solution(\"100 100\") == \"100\" # Correct output",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 6\") == \"7\"\nassert solution(\"10 12\") == \"13\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test 1 failed\"\nassert solution(\"5 7\") == \"8\", \"Test 2 failed\"\nassert solution(\"10 15\") == \"16\", \"Test 3 failed\"\nassert solution(\"100 100\") == \"100\", \"Test 4 failed\"\nassert solution(\"101 101\") == \"101\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\") == \"2\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '4'\nprint('All tests passed!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nprint(\"Correct solution\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4\\n'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 7\\na 3\\na 7\\na 4\\na 5\\na 6\\na 6\\na 7\\n4\\na 1\\na 2\\na 3\\na 4\\na 5\\na 6\\na 7\\n5\\na 4\\na 6\\na 6\\na 7\\n6\\na 5\\na 6\\na 7\\n7\\na 6\\na 7\\n') == '4\\n'\nprint('All test cases passed')\n",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"0\"\nassert solution(\"2 3\\n1 4\\n5 7\\n8 9\") == \"1\"",
        "num_ids_2": 76,
        "num_ids_4": 103
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\nprint(\"The number of the edges that are bridges among the M edges.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 7, 5) == 7, \"The output is not as expected.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\", \"The given output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '7', \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7', 'Input is invalid'\nassert solution('1 2 3') == '2', 'Input is invalid'\nassert solution('5 5 5') == '6', 'Input is invalid'\nassert solution('7 1 2') == '3', 'Input is invalid'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"2 4 5\") == \"4\"\nassert solution(\"1 5 6\") == \"5\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 2 2\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The output should be 7\"\nassert solution(\"1 2 3\") == \"2\", \"The output should be 2\"\nassert solution(\"5 6 5\") == \"6\", \"The output should be 6\"\nassert solution(\"5 5 5\") == \"5\", \"The output should be 5\"\nassert solution(\"5 100 5\") == \"100\", \"The output should be 100\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"10 15 30\") == \"30\"\nassert solution(\"10 20 10\") == \"20\"\nassert solution(\"10 20 15\") == \"25\"\nassert solution(\"10 20 20\") == \"10\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\", \"Test failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '110 10'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(stdin=\"5 100 10 20 500\") == \"5100 10\"\nassert solution(stdin=\"100 200 20 50 1000\") == \"50500 10\"",
        "num_ids_2": 64,
        "num_ids_4": 100
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\\n\", \"Test 1 failed\"\nassert solution(\"1 2 10 20 15 100\") == \"0 0\\n\", \"Test 2 failed\"\nassert solution(\"1 2 10 20 15 10\") == \"0 0\\n\", \"Test 3 failed\"\nassert solution(\"1 2 10 20 15 100 30\") == \"300 0\\n\", \"Test 4 failed\"\nassert solution(\"1 2 10 20 15 300 100\") == \"300 0\\n\", \"Test 5 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 73,
        "num_ids_4": 147
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    1 2 10 20 15 200\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 5 10 20 25 30\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45 50\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45 50 55\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45 50 55 60\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45 50 55 60 65\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 10 15 20 25 30 35 40 45 50 55 60 65 70\n    \"\"\"\n) == \"\"\"\n110 10\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"3 2 10 20 15 200\") == \"100 10\"\nassert solution(\"1 2 10 20 15 200 30\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200 50\") == \"110 10\"",
        "num_ids_2": 60,
        "num_ids_4": 126
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\", \"Test case 1 failed\"\n\nassert solution(\"1 5 10 15 10 20\") == \"150 15\", \"Test case 2 failed\"\n\nassert solution(\"1 10 10 10 10 10\") == \"200 0\", \"Test case 3 failed\"\n\nassert solution(\"1 3 5 10 15 20\") == \"300 15\", \"Test case 4 failed\"\n\nassert solution(\"1 10 5 10 15 20\") == \"300 15\", \"Test case 5 failed\"",
        "num_ids_2": 73,
        "num_ids_4": 144
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 0\") == \"110 0\"\nassert solution(\"1 2 10 20 15 300\") == \"220 0\"\nassert solution(\"1 2 10 20 15 301\") == \"220 1\"",
        "num_ids_2": 57,
        "num_ids_4": 115
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"The solution should return 'i18n' for the given input.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"Test case 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"The solution should return 'i18n' for the given input.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"hello world\") == \"hlw\"\nassert solution(\"AbcDefGHI\") == \"ABCDEFGHI\"",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\", \"Test failed.\"\nassert solution(\"top\") == \"NO\", \"Test failed.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\", \"Test case 1 failed\"\nassert solution(\"C_C\\nC_C\\n\") == \"NO\\n\", \"Test case 2 failed\"\nassert solution(\"C_C\\nC_C\\n\") == \"YES\\n\", \"Test case 3 failed\"\nassert solution(\"C_C\\nC_C\\n\") == \"YES\\n\", \"Test case 4 failed\"\nassert solution(\"C_C\\nC_C\\n\") == \"YES\\n\", \"Test case 5 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 108
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('pot\\ntop\\n') == 'YES'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\nleft\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\nleft\\nright\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\nleft\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\nleft\\nright\\n\") == \"NO\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 80
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 1\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 2\"\nassert solution(\"pot\\ntop\\npot\\n\") == \"YES\", \"Test failed for case 3\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 4\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 5\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 6\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 7\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 8\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 9\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 10\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 11\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 12\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 13\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 14\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 15\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 16\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 17\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 18\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 19\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 20\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 21\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 22\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 23\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 24\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 25\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 26\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 27\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 28\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 29\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 30\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 31\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 32\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 33\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 34\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 35\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 36\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 37\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 38\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 39\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 40\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 41\"\nassert solution(\"pot\\ntop\\n\") == \"NO\", \"Test failed for case 42\"\nassert solution(\"pot\\ntop\\n\") == \"YES\", \"Test failed for case 43\"\n",
        "num_ids_2": 46,
        "num_ids_4": 95
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n\nassert solution('abc') == 'YES'\nassert solution('def') == 'NO'\n\nassert solution('abcde') == 'YES'\nassert solution('fghij') == 'NO'\n\nassert solution('potatop') == 'YES'\nassert solution('toptop') == 'NO'\n\nassert solution('abcdefg') == 'YES'\nassert solution('ghijklm') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"square\\n\") == \"NO\\n\"\nassert solution(\"square\\nsquare\\n\") == \"YES\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aaaa\") == \"aa\"\nassert solution(\"abcde\") == \"ab\"\nassert solution(\"abcdef\") == \"ab\"\nassert solution(\"ababa\") == \"aa\"\nassert solution(\"xyz\") == \"x\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nprint('All tests passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\\n4\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba\\n4') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ababc\") == \"bab\"\nassert solution(\"aczz\") == \"an\"\nassert solution(\"defghij\") == \"gij\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba') == 'b'\nassert solution('abc') == ''\nassert solution('abcd') == ''\nassert solution('abcdef') == 'd'\nassert solution('abcdefgh') == 'a'\nassert solution('abcdbcdefgh') == 'b'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\", 4) == \"b\"\nassert solution(\"abc\", 3) == \"a\"\nassert solution(\"ababc\", 3) == \"aba\"\nassert solution(\"abcd\", 3) == \"abc\"\nassert solution(\"abcdefghij\", 4) == \"e\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba\\n4\\n') == 'b\\n'\n\nassert solution('aaabcde\\n2\\n') == 'bcd\\n'\n\nassert solution('abcde\\n3\\n') == 'ac\\n'\n\nassert solution('abcdef\\n1\\n') == 'abc\\n'\n\nassert solution('abcde\\n5\\n') == 'abcde\\n'",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 5\") == \"1\\n\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\") == \"9\\n\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\nassert solution(\"5 3 2\\n1 2 1\\n2 2 3\\n1 3 4\") == \"14\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\nprint(\"All tests passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"12\\n11\\n0\"\n\nassert solution(r\"\"\"\n3\n5 6 1\n1 10 1\n\"\"\") == \"10\\n9\\n0\"\n\nassert solution(r\"\"\"\n3\n4 5 1\n1 10 1\n\"\"\") == \"10\\n8\\n0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"\nassert solution(\"3\\n6 5 1\\n2 2 2\") == \"13\\n12\\n0\"\nassert solution(\"1\\n10 1\\n1 10 1\") == \"1\\n10\\n0\"\nassert solution(\"1\\n10 1\\n1 10 2\") == \"1\\n11\\n0\"\nassert solution(\"1\\n10 1\\n2 10 1\") == \"1\\n10\\n0\"\nassert solution(\"2\\n6 5 1\\n2 2 2\") == \"13\\n12\\n0\"",
        "num_ids_2": 65,
        "num_ids_4": 127
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nassert solution(\"4\\n5 10\\n1 1\\n2 2\\n3 3\\n\") == \"7\\n8\\n0\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"\nassert solution(\"4\\n10 1 2\\n10 5 3\") == \"10\\n0\\n2\"\nassert solution(\"5\\n20 2 3\\n10 30 1\") == \"10\\n0\\n3\"\nassert solution(\"1\\n100 100 100\") == \"100\\n100\\n100\"",
        "num_ids_2": 66,
        "num_ids_4": 135
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"12\\n11\\n0\"\nassert solution(11) == \"12\\n11\\n0\"\nassert solution(15) == \"23\\n22\\n0\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"1\\n1 1 1\") == \"0\\n\"\nassert solution(\"1\\n1 1 1\") == \"0\\n\"\nassert solution(\"5\\n1 1 1\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 1 1\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 95
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1\\n') == '12\\n11\\n0\\n'\nassert solution('5\\n5 3\\n0 2 1\\n') == '12\\n11\\n0\\n'\nassert solution('6\\n7 2\\n3 2 1\\n') == '18\\n17\\n0\\n'\nassert solution('7\\n8 3\\n2 2 1\\n') == '22\\n21\\n0\\n'\nassert solution('8\\n9 4\\n3 2 1\\n') == '28\\n27\\n0\\n'\nassert solution('9\\n10 5\\n4 3 1\\n') == '34\\n33\\n0\\n'\n",
        "num_ids_2": 71,
        "num_ids_4": 139
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nassert solution(\"4\\n2 3 1\\n2 2 1\\n\") == \"1\\n1\\n\"\nassert solution(\"5\\n3 2 1\\n3 3 1\\n\") == \"2\\n2\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nassert solution(\"5\\n1 2\\n1 1\\n\") == \"0\\n0\\n0\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output is {expected_output}, but got {solution(sample_input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"3 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"4 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"5 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\\n\\n\") == \"**.\\n**.\\n**.\\n\".lstrip() + \"**.\\n**.\\n\".rstrip()",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '.*\\n.*\\n.*\\n.*'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: '{output()}'\\nGot: '{solution(input())}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"\\n*.\\n*.\\n.*\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"3 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"4 4\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"5 5\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"6 6\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"7 7\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"8 8\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"9 9\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"10 10\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r'''\n    2 2\n*.\n.*\n''') == r'''\n*.\n*.\n.*\n.*\n'''\n\nassert solution(stdin=r'''\n    2 2\n.*\n.*\n''') == r'''\n.*\n.*\n.*\n.*\n'''\n\nassert solution(stdin=r'''\n    2 2\n.\n.\n''') == r'''\n.\n.\n.\n.\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n*.\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n2 6 2 4 5\") == \"NO\"\nassert solution(\"5\\n3 6 2 4 5\") == \"NO\"\nassert solution(\"5\\n3 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n2 6 2 4 5 6\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nprint(\"NO\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 1 4 5\\n\") == \"YES\\n\"\nassert solution(\"2 1 3 5 7\\n\") == \"NO\\n\"\nassert solution(\"3 1 2 4 5\\n\") == \"NO\\n\"\nassert solution(\"4 1 2 3 5\\n\") == \"YES\\n\"\nassert solution(\"5 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"6 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"7 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"8 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"9 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"10 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"11 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"12 1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"13 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"14 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"15 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"16 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"17 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"18 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"19 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"20 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"21 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"22 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"23 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"24 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"25 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"26 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"27 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"28 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"29 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"30 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"31 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"32 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"33 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"34 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"35 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"36 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"37 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"38 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"39 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"40 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"41 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"42 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"43 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"44 1 2 3 4\\n\") == \"YES\\n\"\nassert solution(\"45 1 2 3 4\\n\") == \"YES\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nprint('All elements are pairwise distinct.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {t+1} failed: \\nExpected: {output()}\\nActual: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"1\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n3\\n4\\n1\\n2\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"1\\n2\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 208,
        "num_ids_4": 416
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 205,
        "num_ids_4": 309
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"The solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n3\\n4\\n1\\n2'\nassert solution() == '2\\n3\\n4\\n1\\n2'\nassert solution() == '2\\n3\\n4\\n1\\n2'\nassert solution() == '2\\n3\\n4\\n1\\n2'\nassert solution() == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 2, \"Incorrect answer for test case 5.\"\nassert solution(8) == 1, \"Incorrect answer for test case 8.\"\nassert solution(8) == 2, \"Incorrect answer for test case 8.\"\nassert solution(3) == 1, \"Incorrect answer for test case 3.\"\nassert solution(6) == 2, \"Incorrect answer for test case 6.\"\nassert solution(6) == 3, \"Incorrect answer for test case 6.\"\nassert solution(3) == 1, \"Incorrect answer for test case 3.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 7, 3, 1, 5, 22, 5, 987, 13) == 3\nassert solution(4, 7, 3, 5, 2, 30, 10, 75, 80) == 1\nassert solution(5, 5, 5, 20, 20, 10, 50, 40, 20) == 5\nassert solution(5, 5, 5, 5, 5, 5, 20, 20, 10) == 7",
        "num_ids_2": 74,
        "num_ids_4": 149
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 3\nassert solution(1) == 1\nassert solution(22) == 5\nassert solution(987) == 77",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"\nassert solution(\"1\\n1 1\\n2\") == \"1\"\nassert solution(\"1\\n3 2\\n4\") == \"1\"\nassert solution(\"2\\n4 6\\n10\") == \"2\"\nassert solution(\"3\\n5 10\\n20\") == \"3\"\nassert solution(\"4\\n5 10\\n20\") == \"3\"\nassert solution(\"5\\n6 15\\n25\") == \"4\"",
        "num_ids_2": 62,
        "num_ids_4": 99
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3\\n1\\n5\\n77', 'Test case 1 failed'\n\nassert solution(input()) == '1\\n5\\n77', 'Test case 2 failed'\n\nassert solution(input()) == '5\\n77', 'Test case 3 failed'",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"The solution is incorrect. Expected: {expected}, Received: {solution(stdin=input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"3\\n1\\n5\\n77\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\"\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"123\"\nassert solution(stdin) == \"1234\"\nassert solution(stdin) == \"12345\"\nassert solution(stdin) == \"123456\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"\n) == \"\"\"\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 1 1 10 8 7 6 5 11 2 2 1 1 4 5 3 0 0 0 0 0 0 9 3\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"10 5 9 4 5 3 1 1 1 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ",
        "num_ids_2": 130,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 122,
        "num_ids_4": 196
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0\nassert solution() == 36\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1999999994\nassert solution() == 1999999994\nassert solution() == 2",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == 0, \"Incorrect solution for test case 1\"\nassert solution(\"3 2 5\\n3 2 6\") == 4, \"Incorrect solution for test case 2\"\nassert solution(\"3 2 3\\n2 4 5\\n1 1000000000 1000000000\") == 36, \"Incorrect solution for test case 3\"\nassert solution(\"3 3 3\\n1000000000 1000000000 1000000000\") == 9999999994, \"Incorrect solution for test case 4\"",
        "num_ids_2": 126,
        "num_ids_4": 248
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n4\\n10\\n20\\n30\\n5\\n5\\n5\\n2\\n4\\n3\\n1\\n1\\n1\\n3\\n2\\n5\\n3\\n2\\n6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'\n",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output', solution(stdin)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\nassert solution(\"3 2 5\\n3 2 6\\n\") == \"0\\n0\\n2\\n4\"\nassert solution(\"\") == \"0\\n0\\n0\\n0\"",
        "num_ids_2": 159,
        "num_ids_4": 176
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == 0\nassert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == 36\nassert solution(\"3\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == 0",
        "num_ids_2": 193,
        "num_ids_4": 393
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0\nassert solution() == 36\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1999999994\nassert solution() == 1999999994\nassert solution() == 2\nassert solution() == 4",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\n'",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for case {i+1}. Expected output: {output}, but got: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\\n\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES', \"Test case 1 failed\"\nassert solution() == 'NO', \"Test case 2 failed\"\nassert solution() == 'YES', \"Test case 3 failed\"\nassert solution() == 'NO', \"Test case 4 failed\"\nassert solution() == 'YES', \"Test case 5 failed\"\nassert solution() == 'NO', \"Test case 6 failed\"\nassert solution() == 'YES', \"Test case 7 failed\"\nassert solution() == 'NO', \"Test case 8 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([11, 14, 16, 12]) == 'YES'\nassert solution([2, 8]) == 'YES'\nassert solution([1, 1, 1, 1]) == 'YES'\nassert solution([1, 2, 5, 6]) == 'YES'\nassert solution([12, 13]) == 'YES'\nassert solution([1, 6, 3, 10, 5, 8]) == 'YES'\nassert solution([1, 12, 3, 10, 5, 8]) == 'YES'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([2, 6]) == 'NO'\nassert solution([4, 3]) == 'NO'\nassert solution([11, 7]) == 'NO'\nassert solution([1, 4]) == 'NO'\nassert solution([3, 12]) == 'NO'\nassert solution([1, 4, 3, 12]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 6, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 6, 3, 10, 5, 8]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 4, 3, 12]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([2, 8]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([2, 6]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([1, 1, 1, 1]) == 'NO'\nassert solution([11, 14, 16, 12]) == 'NO'\nassert solution([2, 8]) == 'NO'\nassert solution([1, 12, 3, 10, 5, 8]) == 'NO'\nassert solution([11, 14, 16, 12]) ==",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test {t+1} failed: expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\", \"Please provide the correct input\"\nassert solution(stdin) == \"NO\", \"Please provide the correct input\"\nassert solution(stdin) == \"YES\", \"Please provide the correct input\"\nassert solution(stdin) == \"YES\", \"Please provide the correct input\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"\nassert solution(\"6 5 3\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"12\"",
        "num_ids_2": 134,
        "num_ids_4": 206
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n22\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\") == \"22\\n\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\\n\"\n\nfor test in [\n    (\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\"),\n    (\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\"),\n]:\n    print(solution(test))",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution({input()})!= Output({output})\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"22\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"22\"\nassert solution2 == \"13\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"22\"\nassert solution(input()) == \"13\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"22\"\n\nsolution = lambda: 22\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n6 3\\n3 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n6 3\\n3 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 322,
        "num_ids_4": 322
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output), f\"Expected {output}, got {solution(str(input()))}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\", \"Error in solution\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"1\n3\n9\n13\n27\n6561\n19683\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n21",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'TODO'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"3\"\nassert solution(4) == \"4\"\nassert solution(5) == \"6\"\nassert solution(6) == \"10\"\nassert solution(7) == \"15\"\nassert solution(8) == \"16\"\nassert solution(9) == \"24\"\nassert solution(10) == \"25\"\nassert solution(11) == \"31\"\nassert solution(12) == \"35\"\nassert solution(13) == \"46\"\nassert solution(14) == \"49\"\nassert solution(15) == \"50\"\nassert solution(16) == \"65\"\nassert solution(17) == \"70\"\nassert solution(18) == \"77\"\nassert solution(19) == \"88\"\nassert solution(20) == \"93\"\nassert solution(21) == \"96\"\nassert solution(22) == \"100\"\nassert solution(23) == \"104\"\nassert solution(24) == \"111\"\nassert solution(25) == \"122\"\nassert solution(26) == \"127\"\nassert solution(27) == \"130\"\nassert solution(28) == \"139\"\nassert solution(29) == \"140\"\nassert solution(30) == \"149\"\nassert solution(31) == \"150\"\nassert solution(32) == \"159\"\nassert solution(33) == \"160\"\nassert solution(34) == \"170\"\nassert solution(35) == \"175\"\nassert solution(36) == \"176\"\nassert solution(37) == \"185\"\nassert solution(38) == \"190\"\nassert solution(39) == \"191\"\nassert solution(40) == \"200\"\nassert solution(41) == \"201\"\nassert solution(42) == \"210\"\nassert solution(43) == \"215\"\nassert solution(44) == \"216\"\nassert solution(45) == \"225\"\nassert solution(46) == \"230\"\nassert solution(47) == \"231\"\nassert solution(48) == \"240\"\nassert solution(49) == \"241\"\nassert solution(50) == \"250\"\nassert solution(51) == \"255\"\nassert solution(52) == \"256\"\nassert solution(53) == \"265\"\nassert solution(54) == \"270\"\nassert solution(55) == \"271\"\nassert solution(56) == \"280\"\nassert solution(57) == \"281\"\nassert solution(58) == \"290\"\nassert solution(59) == \"295\"\nassert solution(60) == \"300\"\nassert solution(61) == \"305\"\nassert solution(62) == \"310\"\nassert solution(63) == \"315\"\nassert solution(64) == \"320\"\nassert solution(65) == \"325\"\nassert solution(66) == \"330\"\nassert solution(67) == \"335\"\nassert solution(68) == \"340\"\nassert solution(69) == \"345\"\nassert solution(70) == \"350\"\nassert solution(71) == \"355\"\nassert solution(72) == \"360\"\nassert solution(73) == \"365\"\nassert solution(74) == \"370\"\nassert solution(75) == \"375\"\nassert solution(76) == \"380\"\nassert solution(77) == \"385\"\nassert solution(78) == \"390\"\nassert solution(79) == \"395\"\nassert solution(80) == \"400\"\nassert solution(81) == \"405\"\nassert solution(82) == \"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 275
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"\"\"\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case_count} failed\"\ntest_case_count += 1",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"2\\n1 2 3 4 5\") == \"2\"\nassert solution(\"3\\n2 3 1\") == \"3\"\nassert solution(\"1\\n6 1 2 3 4 5\") == \"4\"\nassert solution(\"4\\n1 2 3 4\\n3 4 1 2\") == \"1 1\"\nassert solution(\"5\\n5 1 2 4 3\") == \"1 1\"",
        "num_ids_2": 154,
        "num_ids_4": 270
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 1 1\n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '''1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '8\\n-1 2 6 4 0 3\\n7\\n5 -2 4 -1 2'\nassert solution() == '2\\n0 3 1'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3 \\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3 \\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\"\nassert solution(\"1 5\\n5 10\\n\") == \"6\\n4 -2 1 10 6\"",
        "num_ids_2": 67,
        "num_ids_4": 99
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    2 6\n    1 5\n\"\"\") == \"8\\n-1 2 6 4 0 3\"\n\nassert solution(\"\"\"\n    3 5\n    0 3 1\n\"\"\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''8\n-1 2 6 4 0 3\n\n7\n5 -2 4 -1 2'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3 '\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2'\n\nfrom typing import List",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3 \\n\\n3 5\\n0 3 1\\n7\\n5 -2 4 -1 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n8\n-1 2 6 4 0 3 \n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\\n7\\n5 -2 4 -1 2\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3') == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\\nRUUURRRRUU\\nNO\"\nassert solution(\"2\") == \"YES\\nRRRRUUU\"\nassert solution(\"4\") == \"YES\\nRUUURRRRUU\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"6\") == \"YES\\nRRRRUUU\"\nassert solution(\"1\") == \"YES\\nRRRRUUU\"",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5\n    1 3\n    1 2\n    3 3\n    5 5\n    4 3\n    2\n    1 0\n    0 1\n    1\n    4 3\n    \"\"\"\n) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"The solution is {solution(stdin=input())}, but it should be {output}.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 0\nassert solution(2) == 1\nassert solution(1) == 1\nassert solution(500) == 8\nassert solution(217871987498122) == 8\nassert solution(100000000000000001) == 8",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 1) == 8\nassert solution(1, 1) == 0\nassert solution(500, 4) == 500\nassert solution(217871987498122, 10) == 2128012501878\nassert solution(100000000000000001, 1) == 0",
        "num_ids_2": 24,
        "num_ids_4": 79
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\"\nfor test_case in range(int(input()), int(input())+1):\n    n, s = map(int, input().split())\n    expected_output = input()\n    assert solution(n, s) == expected_output, f\"Test case {test_case}: Expected: {expected_output}, Received: {solution(n, s)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1\\n2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\nassert solution('1\\n1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '0\\n500\\n2128012501878\\n899999999999999999'",
        "num_ids_2": 215,
        "num_ids_4": 215
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test Case {t+1} failed: {output}\\n\" for t, input, output in [\n    (1, \"2 1\", 8),\n    (2, \"1 1\", 0),\n    (3, \"500 4\", 500),\n    (4, \"217871987498122 10\", 2128012501878),\n    (5, \"100000000000000001 1\", 899999999999999999),\n]",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"The expected output is 2, but the actual output is {}\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1, 1, 0]) == \"2\"\nassert solution([0, 0, 1, 0, 1, 0, 1]) == \"2\"\nassert solution([1, 1, 0, 0, 1]) == \"2\"\nassert solution([0, 0, 0]) == \"0\"\nassert solution([1, 0, 0]) == \"2\"\nassert solution([0, 0, 0, 0, 1]) == \"4\"\nassert solution([1, 1, 0, 1, 1]) == \"1\"\nassert solution([0, 0, 0]) == \"0\"\nassert solution([0, 0, 0, 0, 0]) == \"0\"\nassert solution([1, 0, 0, 0, 1]) == \"2\"\nassert solution([1, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 1]) == \"1\"\nassert solution([0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([0, 0, 0, 0, 1, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 1, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) == \"1\"\nassert solution([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2\\n0\\n2\\n4\\n1\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2'\nassert solution('5\\n1 1 0 1 1\\n6\\n1 0 0 0 0 1\\n5\\n1 0 0') == '2'\nassert solution('5\\n0 0 1 0 1 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 0 1') == '2'\nassert solution('5\\n1 1 0 1 1\\n1 0 0 0 0 1\\n5\\n1 1 0 0 1') == '1'\nassert solution('5\\n1 1 0 1 1\\n1 1 0 0 1\\n5\\n1 1 0 1 1') == '2'\n\nprint('All test cases passed.')",
        "num_ids_2": 129,
        "num_ids_4": 232
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\"\nassert solution(\"5\\n1 1 0 1 1\") == \"2\"\nassert solution(\"6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\"\nassert solution(\"5\\n1 1 0 1 1\") == \"4\"\nassert solution(\"7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"1\"",
        "num_ids_2": 100,
        "num_ids_4": 158
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '4'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1') == '1'",
        "num_ids_2": 164,
        "num_ids_4": 328
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0, 0, 1, 0, 1]) == 2\nassert solution([1, 1, 0]) == 1\nassert solution([0, 0, 0]) == 2\nassert solution([1, 1, 0, 1, 1]) == 1\nassert solution([1, 1, 1, 1, 1]) == 2\nassert solution([1, 1, 1, 1, 1]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {t} failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['5']) == '1'\nassert solution(['1']) == '1'\nassert solution(['1', '1', '0', '0', '1']) == '1'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '1', '0', '0', '1']) == '2'\nassert solution(['0', '0', '1', '0', '1', '0', '1']) == '2'\nassert solution(['1', '",
        "num_ids_2": 20,
        "num_ids_4": 70
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == [\"cbcacab\", \"abcd\", \"baabab\"]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n7 3\\n4 4\\n6 2') == 'cbcacab'\nassert solution('3\\n4 3\\n5 2\\n7 2\\n8 1') == 'abcd'\nassert solution('3\\n3 2\\n4 1\\n5 1\\n6 1') == 'baabab'",
        "num_ids_2": 57,
        "num_ids_4": 88
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\") == \"cbcacab\"\nassert solution(\"4\\n6 2\") == \"abcd\"\nassert solution(\"2\\n10 3\") == \"bccab\"\nassert solution(\"3\\n10 3\") == \"bccab\"\nassert solution(\"1\\n1 1\") == \"a\"\nassert solution(\"1\\n1 2\") == \"b\"\nassert solution(\"1\\n1 3\") == \"c\"\nassert solution(\"1\\n1 4\") == \"d\"\nassert solution(\"1\\n2 1\") == \"e\"\nassert solution(\"1\\n2 2\") == \"f\"\nassert solution(\"1\\n2 3\") == \"g\"\nassert solution(\"1\\n2 4\") == \"h\"\nassert solution(\"1\\n3 1\") == \"i\"\nassert solution(\"1\\n3 2\") == \"j\"\nassert solution(\"1\\n3 3\") == \"k\"\nassert solution(\"1\\n3 4\") == \"l\"\nassert solution(\"1\\n4 1\") == \"m\"\nassert solution(\"1\\n4 2\") == \"n\"\nassert solution(\"1\\n4 3\") == \"o\"\nassert solution(\"1\\n4 4\") == \"p\"\nassert solution(\"1\\n5 1\") == \"q\"\nassert solution(\"1\\n5 2\") == \"r\"\nassert solution(\"1\\n5 3\") == \"s\"\nassert solution(\"1\\n5 4\") == \"t\"\nassert solution(\"1\\n6 1\") == \"u\"\nassert solution(\"1\\n6 2\") == \"v\"\nassert solution(\"1\\n6 3\") == \"w\"\nassert solution(\"1\\n6 4\") == \"x\"\nassert solution(\"1\\n7 1\") == \"y\"\nassert solution(\"1\\n7 2\") == \"z\"\nassert solution(\"1\\n7 3\") == \"a\"\nassert solution(\"1\\n7 4\") == \"b\"\nassert solution(\"1\\n8 1\") == \"c\"\nassert solution(\"1\\n8 2\") == \"d\"\nassert solution(\"1\\n8 3\") == \"e\"\nassert solution(\"1\\n8 4\") == \"f\"\nassert solution(\"1\\n9 1\") == \"g\"\nassert solution(\"1\\n9 2\") == \"h\"\nassert solution(\"1\\n9 3\") == \"i\"\nassert solution(\"1\\n9 4\") == \"j\"\nassert solution(\"1\\n10 1\") == \"k\"\nassert solution(\"1\\n10 2\") == \"l\"\nassert solution(\"1\\n10 3\") == \"m\"\nassert solution(\"1\\n10 4\") == \"n\"\nassert solution(\"1\\n11 1\") == \"o\"\nassert solution(\"1\\n11 2\") == \"p\"\nassert solution(\"1\\n11 3\") == \"q\"\nassert solution(\"1\\n11 4\") == \"r\"\nassert solution(\"1\\n12 1\") == \"s\"\nassert solution(\"1\\n12 2\") == \"t\"\nassert solution(\"1\\n12 3\") == \"u\"\nassert solution(\"1\\n12 4\") == \"v\"\nassert solution(\"1\\n13 1\") == \"w\"\nassert solution(\"1\\n13 2\") == \"x\"\nassert solution(\"1\\n13 3\") == \"y\"\nassert solution(\"1\\n13 4\") == \"z\"\nassert solution(\"1\\n14 1\") == \"aa\"\nassert solution(\"1\\n14 2\") == \"ab\"\nassert solution(\"1\\n14 3\") == \"ac\"\nassert solution(\"1\\n14 4\") == \"ad\"\nassert solution(\"1\\n15 1\") == \"ae\"\nassert solution(\"1\\n15 2\") == \"af\"\nassert solution(\"1\\n15 3\") == \"ag\"\nassert solution(\"1\\n15 4\") == \"ah\"\nassert solution(\"1\\n16 1\") == \"ai\"\nassert solution(\"1\\n16 2",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"cbcacab\"\nassert solution() == \"abcd\"\nassert solution() == \"baabab\"\nassert solution() == \"abc\"\nassert solution() == \"cbaaab\"",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\"3\\n7 3\\n4 4\\n6 2\\n5\\n2\\n\") == \"abcd\"\nassert solution(\"3\\n7 3\\n4 4\\n6 2\\n5\\n2\\n1\\n\") == \"baabab\"",
        "num_ids_2": 62,
        "num_ids_4": 99
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7, 3) == \"cbcacab\"\nassert solution(4, 4) == \"abcd\"\nassert solution(6, 2) == \"baabab\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'cbcacab'\nassert solution(stdin) == 'abcd'\nassert solution(stdin) == 'baabab'\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\\n4 4\\n6 2\") == \"cbcacab\"\nassert solution(\"4 4\\n7 3\\n6 2\") == \"abcd\"\nassert solution(\"7 3\\n4 4\\n6 2\") == \"baabab\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin), \"Test case should be the same as input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"1 1000\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 183,
        "num_ids_4": 183
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}\\nOutput: {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 372,
        "num_ids_4": 372
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but the actual output is {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n27\\n39\\n11\\n17\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n') == '6\\n27\\n39\\n11\\n17\\n'",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4') == '6\\n27\\n39\\n11\\n17'",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Solution\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please see the problem statement for more information.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"\n0 7 13 18 24 35 36 37 40 45 \n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45]\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == [0, 2, 4, 7, 8, 11, 13, 14, 16, 17]\nassert solution(\"10 100000\\n1 2 3 4 5 6 7 8 9 10\") == [0, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99]\n",
        "num_ids_2": 176,
        "num_ids_4": 336
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0, \"Test Case 1 failed\"\nassert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45], \"Test Case 2 failed\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == [0, 2, 4, 7, 8, 11, 13, 14, 16, 17], \"Test Case 3 failed\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == [0, 2, 4, 7, 8, 11, 13, 14, 16, 17], \"Test Case 4 failed\"\nassert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45], \"Test Case 5 failed\"",
        "num_ids_2": 117,
        "num_ids_4": 301
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution( \"\"\"\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n\"\"\") == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45]\n\nfrom typing import List",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1') == 'aaabb'\nassert solution('5 2') == 'aabab'\nassert solution('5 8') == 'aabba'\nassert solution('5 10') == 'abbaa'\nassert solution('3 1') == 'aaaab'\nassert solution('3 2') == 'aaaaa'\nassert solution('20 100') == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 1) == 'aaabb'\nassert solution(5, 2) == 'aabab'\nassert solution(5, 8) == 'baaba'\nassert solution(5, 10) == 'bbaaa'\nassert solution(3, 1) == 'abb'\nassert solution(3, 2) == 'bab'\nassert solution(20, 100) == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'aaabb\\n'\nassert solution(stdin) == 'aabab\\n'\nassert solution(stdin) == 'bbaaa\\n'\nassert solution(stdin) == 'abb\\n'\nassert solution(stdin) == 'bab\\n'\nassert solution(stdin) == 'aaaaabaaaaabaaaaaaaa\\n'\nassert solution(stdin) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"aaabb\"\nassert solution(1) == \"aaabb\"\nassert solution(2) == \"aabab\"\nassert solution(10) == \"aabab\"\nassert solution(101) == \"aabab\"\nassert solution(102) == \"aabab\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"abb\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aabab\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"baaba\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"bbaaa\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"abb\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"bab\"\nassert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'aaabb'\nassert solution(open('sample_input.txt', 'r')) == 'aabab'\nassert solution(open('sample_input.txt', 'r')) == 'baaba'\nassert solution(open('sample_input.txt', 'r')) == 'bbaaa'\nassert solution(open('sample_input.txt', 'r')) == 'abb'\nassert solution(open('sample_input.txt', 'r')) == 'bab'\nassert solution(open('sample_input.txt', 'r')) == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"aaabb\\n\"\nassert solution(input()) == \"aabab\\n\"\nassert solution(input()) == \"baaba\\n\"\nassert solution(input()) == \"bbaaa\\n\"\nassert solution(input()) == \"abb\\n\"\nassert solution(input()) == \"bab\\n\"\nassert solution(input()) == \"aaaaabaaaaabaaaaaaaa\\n\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, \"Testcase not passed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == \"6\\n1\\n5\\n10\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n1\\n5\\n10\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n1\\n5\\n10\", \"The output is not correct.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_input.txt').read()) == '6\\n1\\n5\\n10'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"inputs/001_test_cases.txt\").read()) == \"6\\n1\\n5\\n10\"\nassert solution(open(\"inputs/002_test_cases.txt\").read()) == \"1\\n5\"\nassert solution(open(\"inputs/003_test_cases.txt\").read()) == \"1\"\nassert solution(open(\"inputs/004_test_cases.txt\").read()) == \"5\\n10\"\nassert solution(open(\"inputs/005_test_cases.txt\").read()) == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 61,
        "num_ids_4": 113
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Solution: {solution}, Expected: {expected_solution}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"5\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"1\\n5\\n10\"\nassert solution(\"6\\n1\\n5\\n10\") == \"1\"\nassert solution(\"5\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"1\\n5\\n10\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 301,
        "num_ids_4": 435
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7\") == \"7\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 103
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\"\n) == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(\n    \"4 3\\n1\\n2\\n1\\n2\\n\"\n) == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(\n    \"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\"\n) == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(\n    \"4 3\\n1\\n2\\n1\\n2\\n\"\n) == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\n",
        "num_ids_2": 93,
        "num_ids_4": 186
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test cases failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n0\\n1\\n0\\n0\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"7 3\\n0\\n0\\n1\\n0\\n0\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 191
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution() == \"2 1\\n2 1\\n2 1\\n2 1\\n2 1\"\nassert solution() == \"1 1\"\nassert solution() == \"1 1\"\nassert solution() == \"1 1\"",
        "num_ids_2": 115,
        "num_ids_4": 135
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n'\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"1 49\n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 49 \\n 20 40 30 50 10 \\n 26 32 20 38 44 50 \\n 8 23 18 13 3 \\n 1 10 13 4 19 22 25 16 7\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n1 \n49\n20 40 30 50 10\n26 32 20 38 44 50\n8 23 18 13 3\n1 10 13 4 19 22 25 16 7\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"The code is not correct. Output: {output}, but the input is: {stdin}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n\") == \"1 2 3\", \"Your code is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 2 3', \"Your function must return the correct result\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\\n\", \"Test case 1\"\nassert solution(\"5 4 3 2 1\") == \"1 2 3 4 5\\n\", \"Test case 2\"\nassert solution(\"7 6 5 4 3 2 1\") == \"1 2 3 4 5 6 7\\n\", \"Test case 3\"\nassert solution(\"8 7 6 5 4 3 2 1 9\") == \"1 2 3 4 5 6 7 8 9\\n\", \"Test case 4\"\nassert solution(\"10 9 8 7 6 5 4 3 2 1\") == \"1 2 3 4 5 6 7 8 9 10\\n\", \"Test case 5\"",
        "num_ids_2": 62,
        "num_ids_4": 154
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 2 3\"\nassert solution(input()) == \"1 3 2\"\nassert solution(input()) == \"2 1 3\"\nassert solution(input()) == \"2 3 1\"\nassert solution(input()) == \"3 1 2\"\nassert solution(input()) == \"3 2 1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\", \"The output should be '1 2 3', but it's '\"+solution(\"3 3 1 2\")+\"'.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"5 1 2 3 4\") == \"1 2 3 4 5\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 2, 2, 3, 4) == 'YES'\nassert solution(3, 3, 3, 4) == 'YES'\nassert solution(4, 5, 5, 5) == 'YES'\nassert solution(1, 1, 1, 1) == 'YES'\nassert solution(4, 2, 2, 3, 4, 5, 5) == 'NO'",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: {solution(stdin)}!= {expected}\" for i, (stdin, expected) in enumerate(zip(input_data, output_data))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"NO\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\" for i, (input, output) in enumerate(TEST_CASES)",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES' or solution(input()) == 'NO', \"The solution is incorrect\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'YES'\nassert solution('1\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'NO'\nassert solution('1\\n3\\n2 2 8 8\\n4\\n3 3 3\\n5\\n2 2 8 8\\n4\\n5 5 5 5\\n1 1 1 1\\n2\\n4 3 2 1\\n1 2 3') == 'YES'\nassert solution('1\\n3\\n2 2 8 8\\n4\\n3 3 3\\n5\\n2 2 8 8\\n4\\n5 5 5 5\\n1 1 1 1\\n2\\n4 3 2 1\\n1 2 3\\n1\\n2\\n4 3 2 1\\n1 2 3') == 'NO'",
        "num_ids_2": 128,
        "num_ids_4": 318
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9 6 10 8 4 7 3 1 5 2 -1\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(123456) == '9 6 10 8 4 7 3 1 5 2 5 3 6 2 4 1 5 1 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12\"\nprint(\"All tests passed.\")",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n\") == \"-1\"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n10\\n\") == \"-1\"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n10\\n11\\n\") == \"3 1 4 2 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n10\\n11\\n12\\n\") == \"5 3 6 2 4 1 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"5 1 3 6 2 4 7 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"",
        "num_ids_2": 105,
        "num_ids_4": 185
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='6\\n10\\n2\\n4\\n6\\n7\\n13\\n') == '''9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12'''",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 9 6 10 8 4 7 3 1 5 2 \nassert solution(2) == 3 1 4 2 \nassert solution(6) == -1 \nassert solution(13) == 13 9 7 11 8 4 1 3 5 2 6 10 12",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n2\\n4\\n6\\n7\\n13\\n') == '9 6 10 8 4 7 3 1 5 2\\n-1\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n9 6 10 8 4 7 3 1 5 2 -1\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12\\n'\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"permutation.in\", \"r\").read()) == \"-1\"  # invalid permutation\nassert solution(open(\"permutation.in\", \"r\").read()) == \"3 1 4 2 5\"  # correct permutation\nassert solution(open(\"permutation.in\", \"r\").read()) == \"1 4 2 6 5 3 8 7 9 10 11\"  # correct permutation\nassert solution(open(\"permutation.in\", \"r\").read()) == \"5 3 6 2 4 1 7 9 10 8 11\"  # correct permutation\nassert solution(open(\"permutation.in\", \"r\").read()) == \"9 6 10 8 4 7 3 1 5 2\"  # correct permutation",
        "num_ids_2": 54,
        "num_ids_4": 144
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"1 2 3 4 5 6\\n10\\n2\\n4\\n6\\n7\\n13\\n\\n\\n\\n\") == \"-1\"\nassert solution(\"1 2 3 4 5\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"3 1 4 2 5 3 6 2 4 1 5 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12 \"\nassert solution(\"2 2 2 2 2\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"2 2 2 2 2\\n10\\n2\\n4\\n6\\n7\\n13\\n\\n\\n\\n\") == \"-1\"\nassert solution(\"1 2 3 4 5 6\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"3 1 4 2 5 3 6 2 4 1 5 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12 \"\nassert solution(\"2 2 2 2 2\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"",
        "num_ids_2": 109,
        "num_ids_4": 268
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test {test_case_number} failed: expected {output_data}, but got {solution(input_data)}\" for test_case_number, input_data, output_data in zip(range(1, 11), input_data_list, output_data_list)",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output\nfor i in range(test_cases):\n    test_case = list(map(int, input().split()))\n    n = test_case[0]\n    a = test_case[1:]\n    moves = solution(str(n) + \" \" + \" \".join(map(str, a)))\n    print(moves)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([\"3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\"]) == \"2\\n1\\n-1\\n0\"\nassert solution([\"3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\", \"3 2 6\"]) == \"2\\n1\\n-1\\n0\"\nassert solution([\"0\", \"0\", \"0\", \"0\"]) == \"0\"\nassert solution([\"0\", \"0\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"0\", \"0\", \"0\", \"0\"]) == \"0\"\nassert solution([\"0\", \"0\", \"0\", \"0\"]) == \"0\"\nassert solution([\"0\", \"0\", \"0\", \"0\"]) == \"0\"\nassert solution([\"0\", \"0\", \"0\", \"0\"]) == \"0\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1\", \"1\", \"1\", \"1\"]) == \"2\"\nassert solution([\"1",
        "num_ids_2": 129,
        "num_ids_4": 167
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n1\\n-1\\n0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Test failed\" # Correct solution\nprint(\"Test passed\") # Test passed",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [2, 2, 2, 2, 2, 1, 1, 0, 2]",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Test failed. Expected {expected}, got {solution}\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2, \"Wrong output. Please provide the expected output.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == solution",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == solution",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == solution_output, f\"Expected solution: {solution_output}, Received: {solution(solution_input)}\"\n\nsolution_input = \"\"\"\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\"\n\nsolution_output = \"\"\"\n2 2 2 2 2 1 1 0 2 \n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Testcase not passed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test {test_case_no} failed: Expected output {output}, got {solution(input)}\" for test_case_no, input, output in [\n    (1, 1, 0),\n    (2, 1, 1),\n    (3, 1, 2),\n    (4, 1, 3),\n    (5, 1, 4),\n    (6, 1, 5),\n    (7, 1, 6),\n    (8, 1, -1),\n    (9, 1, -1),\n    (10, 1, -1),\n    (11, 1, -1),\n    (12, 1, -1),\n    (13, 1, -1),\n    (14, 1, -1),\n    (15, 1, -1),\n    (16, 1, -1),\n    (17, 1, -1),\n    (18, 1, -1),\n    (19, 1, -1),\n    (20, 1, -1),\n    (21, 1, -1),\n    (22, 1, -1),\n    (23, 1, -1),\n    (24, 1, -1),\n    (25, 1, -1),\n    (26, 1, -1),\n    (27, 1, -1),\n    (28, 1, -1),\n    (29, 1, -1),\n    (30, 1, -1),\n    (31, 1, -1),\n    (32, 1, -1),\n    (33, 1, -1),\n    (34, 1, -1),\n    (35, 1, -1),\n    (36, 1, -1),\n    (37, 1, -1),\n    (38, 1, -1),\n    (39, 1, -1),\n    (40, 1, -1),\n    (41, 1, -1),\n    (42, 1, -1),\n    (43, 1, -1),\n    (44, 1, -1),\n    (45, 1, -1),\n    (46, 1, -1),\n    (47, 1, -1),\n    (48, 1, -1),\n    (49, 1, -1),\n    (50, 1, -1),\n    (51, 1, -1),\n    (52, 1, -1),\n    (53, 1, -1),\n    (54, 1, -1),\n    (55, 1, -1),\n    (56, 1, -1),\n    (57, 1, -1),\n    (58, 1, -1),\n    (59, 1, -1),\n    (60, 1, -1),\n    (61, 1, -1),\n    (62, 1, -1),\n    (63, 1, -1),\n    (64, 1, -1),\n    (65, 1, -1),\n    (66, 1, -1),\n    (67, 1, -1),\n    (68, 1, -1),\n    (69, 1, -1),\n    (70, 1, -1),\n    (71, 1, -1),\n    (72, 1, -1),\n    (73, 1, -1),\n    (74, 1, -1),\n    (75, 1, -1),\n    (76, 1, -1),\n    (77, 1, -1),\n    (78, 1, -1),\n    (79, 1, -1),\n    (80, 1, -1),\n    (81, 1, -1),\n    (82, 1, -1),\n    (83, 1, -1),\n    (84, 1, -1),\n    (85, 1, -1),\n    (86, 1, -1),\n    (87, 1, -1),\n    (88, 1, -1),\n    (89, 1, -1),\n    (90, 1, -1),\n    (",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"100\\n\") == \"-1\"\nassert solution(\"100\\n10\\n\") == \"-1\"",
        "num_ids_2": 149,
        "num_ids_4": 181
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(Input) == Output, f\"Input: {Input}, Output: {Output}\"\nfor _ in range(t):\n    n = int(stdin.readline())\n    result = solution(n)\n    print(result)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with output: {solution(input())}, expected output: {expected_output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '0'\nassert solution(3) == '2'\nassert solution(12) == '0'\nassert solution(12345) == '2'\nassert solution(15116544) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Testcase {i+1} does not match the expected output.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"-1\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\"\n",
        "num_ids_2": 112,
        "num_ids_4": 163
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BGGGG\") == \"RGR\"\nassert solution(\"RBRGR\") == \"BRGR\"\nassert solution(\"BBBRR\") == \"BRR\"",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output for example {input()}: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"BGGGG\") == \"1\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"BBBRR\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3') == '1\\n0\\n3'\nassert solution(stdin='5 2\\nBGGGG') == '1\\n0\\n3'\nassert solution(stdin='5 3\\nRBRGR') == '1\\n0\\n3'\nassert solution(stdin='5 5\\nBBBRR') == '1\\n0\\n3'",
        "num_ids_2": 42,
        "num_ids_4": 91
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BGGGG\") == \"0\"\nassert solution(\"RBRGR\") == \"3\"\nassert solution(\"BBBRR\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RBBBRR\") == \"R\"\nassert solution(\"RGRGBBG\") == \"BR\"\nassert solution(\"BRRRR\") == \"BRRRR\"\nassert solution(\"RGGG\") == \"RGGG\"\nassert solution(\"BGGGG\") == \"BGGGG\"\nassert solution(\"RRRR\") == \"RRRR\"\nassert solution(\"BRRRRR\") == \"BBBRR\"\nassert solution(\"RRRRRR\") == \"RRRRRR\"\nassert solution
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Please check the example and check the input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(7) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''3\n3'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\nprint(\"3\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(7) == 3\nassert solution(3) == 3\nassert solution(2) == 2\nassert solution(1) == 0\n\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = solution(a)\n    print(res)",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed.\"\nfor t in range(1, t+1):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n\n    result = solution(input())\n    print(result)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'\nassert solution(1) == '1'\nassert solution(10) == '1 2 3 4 5 6 7 8 9 10'",
        "num_ids_2": 49,
        "num_ids_4": 109
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([4, 5, 5, 1, 3, 2]) == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution([4, 1, 2, 3]) == \"1 2 3 4\"\nassert solution([1]) == \"1\"\nassert solution([1, 1]) == \"1\"\nassert solution([1, 4, 3, 2]) == \"1 2 3 4\"",
        "num_ids_2": 79,
        "num_ids_4": 102
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"1 5 2 4 3\n1 2 3 4 \n1 \n1 4 3 2\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected {output}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"3\\n1 2 3\\n1 3 4\\n2 4 5\") == \"1 3 2 4 5\"\nassert solution(\"1\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\") == \"1 2 3 4 5\"\nassert solution(\"1\\n2 3 4\\n3 4 5\\n4 5 6\") == \"1 2 3 4 5\"",
        "num_ids_2": 122,
        "num_ids_4": 212
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n1\\n1\\n1 4 3 2\\n1\\n4 3 2 1\\n5\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n1\\n1 4 3 2\\n1\\n4 3 2 1\\n1\") == \"1 2 3 4\"\nassert solution(\"1\\n5\\n2\\n4\\n3\\n4\") == \"1 5 2 4 3\"\nassert solution(\"2\\n1\\n1\\n4\\n3\\n4\") == \"1 2 3 4\"\nassert solution(\"1\\n5\\n1\\n4\\n3\\n4\") == \"1 5 2 4 3\"\nassert solution(\"2\\n1\\n1\\n4\\n3\\n4\") == \"1 2 3 4\"\nassert solution(\"1\\n5\\n1\\n4\\n3\\n4\") == \"1 5 2 4 3\"\nassert solution(\"2\\n1\\n1\\n4\\n3\\n4\") == \"1 2 3 4\"",
        "num_ids_2": 163,
        "num_ids_4": 255
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\", solution(stdin)\nassert solution(stdin) == \"YES\", solution(stdin)\nassert solution(stdin) == \"NO\", solution(stdin)\nassert solution(stdin) == \"YES\", solution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([5, 4, 1, 2, 3, 4, 3, 5, 1, 2, 3, 5]) == \"YES\"\nassert solution([5, 4, 1, 2, 3, 4, 3, 5, 1, 2, 3, 5]) == \"YES\"\nassert solution([5, 4, 1, 2, 3, 4, 3, 5, 1, 2, 3, 5]) == \"NO\"\nassert solution([5, 4, 1, 2, 3, 4, 3, 5, 1, 2, 3, 5]) == \"YES\"\nassert solution([5, 4, 1, 2, 3, 4, 3, 5, 1, 2, 3, 5]) == \"YES\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\YES\\NO\\YES\\YES\"",
        "num_ids_2": 148,
        "num_ids_4": 296
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5\n    4\n    1 2 3 4\n    3\n    1 3 2\n    5\n    1 2 3 5 4\n    1\n    1\n    5\n    3 2 1 5 4\n    '''\n) == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('3 2 1 5 4') == 'YES'\nassert solution('1') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r')) == 'NO'\nassert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r')) == 'YES'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5\\n18\\n10\\n6\\n75015', 'Please check the example test cases.'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 1\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 2\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 3\"",
        "num_ids_2": 142,
        "num_ids_4": 213
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n\") == \"5\\n18\\n10\\n6\\n75015\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 5\nassert solution(19) == 18\nassert solution(12) == 10\nassert solution(6) == 6\nassert solution(75015) == 75015\nassert solution(5) == 5\nassert solution(19) == 18\nassert solution(12) == 10\nassert solution(6) == 6\nassert solution(75015) == 75015",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 128,
        "num_ids_4": 256
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(open('input.txt', 'r').read()) == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"",
        "num_ids_2": 132,
        "num_ids_4": 198
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\n'\nassert solution(1000000000) == 'YES\\",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\nYES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\"\nassert solution(input()) == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\"",
        "num_ids_2": 250,
        "num_ids_4": 250
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120', 'Test case 1'\nassert solution(input()) == 'YES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120', 'Test case 2'\nassert solution(input()) == 'NO', 'Test case 3'\nassert solution(input()) == 'YES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120', 'Test case 4'\nassert solution(input()) == 'YES\\n2 2 2 2 2 2 2 2\\nNO\\nYES\\n3 3 3 3 3 3 3 3\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 3 3 3 3 3 3 3\\nNO\\nNO', 'Test case 5'",
        "num_ids_2": 300,
        "num_ids_4": 413
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"The solution is incorrect!\"\n\nn = int(input())\nk = int(input())\n\na = [0] * k\nfor i in range(k):\n    a[i] = int(input())\n\nresult = True\nfor i in range(k):\n    if a[i] % 2 == 0 and a[i] % 3 == 0:\n        continue\n    if a[i] % 2!= 0 and a[i] % 3!= 0:\n        result = False\n        break",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'",
        "num_ids_2": 212,
        "num_ids_4": 212
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 215,
        "num_ids_4": 215
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n1 1 1 1 1 1 1 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"4\\n55\\n150000000000000000\"\nassert solution(23) == \"51\\n150000000000000000\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"55\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 3, 4]) == \"4\\n55\\n150000000000000000\"\nassert solution([1, 10, 100]) == \"5\\n56\\n1700000000000000000\"\nassert solution([10000000000000000]) == \"0\\n0\\n0\"",
        "num_ids_2": 84,
        "num_ids_4": 116
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\") == \"4\\n55\\n150000000000000000\"\nassert solution(\"23 34 45\") == \"51\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"4\\n55\\n150000000000000000\"\nassert solution(\"1 10 100\\n1 3 4\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\") == \"4\\n56\\n150000000000000000\"",
        "num_ids_2": 226,
        "num_ids_4": 226
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Testcase failed. Output: {solution(input())}, Expected Output: {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"55\n150000000000000000\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\") == \"4\\n55\\n150000000000000000\"\nassert solution(\"23 34 45\") == \"51\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 3 4\n    1 10 100\n    10000000000000000 10000000000000000 10000000000000000\n    \"\"\"\n) == \"4\\n55\\n150000000000000000\\n51\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\ababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin=input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\ababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\"\nprint(\"All test cases passed\")",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nabba\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n') == '6\\n3\\n5\\n4\\n15\\n10\\n'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == output, f\"Input:\\n{stdin}\\n\\nOutput:\\n{output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\ababa\\n20\\n10\\eaaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"NO\"\nassert solution(\"5\\n7\\n18\\n3\\n14\\n1\\n5\\n4\\n1\\n2\\n3\\n4\\n5\\n6\\n2\\n1\\n2\\n8\\n4\\n10\\n2\") == \"YES\\n1 3 5\"\n\nfrom typing import List",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n1 3 5\\nNO\\nNO\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n\ninput_data = \"\"\"\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\"\n\nexpected = \"\"\"YES\n1 3 5\nNO\nNO\"\"\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution()) == \"YES\\n1 3 5\\nNO\\nNO\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Input: n = 00000010100101000001111010011100\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\", \"Input: n = 1111111111111111111111111111101\"",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"00000010100101000001111010011100\") == \"964176192\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(00000010100101000001111010011100) == 964176192\nassert solution(1111111111111111111111111111101) == 3221225471",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(00000010100101000001111010011100) == 964176192\nassert solution(11111111111111111111111111111101) == 3221225471",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\njohn.doe@example.com\\nalice.example.com@example.com\\npeter.example.com@example.com\") == [\"john.doe@example.com\", \"alice.example.com@example.com\", \"peter.example.com@example.com\"]\nassert solution(\"3\\njohn.doe@example.com\\nalice.example.com@example.com\\npeter.example.com@example.com\\n\") == []\nassert solution(\"1\\njohn.doe@example.com\\nalice.example.com@example.com\\npeter.example.com@example.com\\n\\n\") == [\"john.doe@example.com\", \"alice.example.com@example.com\", \"peter.example.com@example.com\"]",
        "num_ids_2": 113,
        "num_ids_4": 188
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == []  # case1\nassert solution(10) == [\n    'johndoe@example.com',\n    'janedoe@example.com',\n    'bobsmith@example.com',\n   'maryjohnson@example.com',\n    'alicejohnson@example.com',\n]  # case2\nassert solution(11) == [\n    'johndoe@example.com',\n    'janedoe@example.com',\n    'bobsmith@example.com',\n   'maryjohnson@example.com',\n    'alicejohnson@example.com',\n]  # case3\nassert solution(12) == [\n    'johndoe@example.com',\n    'janedoe@example.com',\n    'bobsmith@example.com',\n   'maryjohnson@example.com',\n    'alicejohnson@example.com',\n    'bobdoe@example.com',\n]  # case4\nassert solution(13) == [\n    'johndoe@example.com',\n    'janedoe@example.com',\n    'bobsmith@example.com',\n   'maryjohnson@example.com',\n    'alicejohnson@example.com',\n    'bobdoe@example.com',\n    'johndavis@example.com',\n]  # case5",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, f\"Solution should return '{expected_solution}', but it returns '{solution}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\njohn.doe\\njohn.doe@example.com\\njohn.doe@example2.com\\n\") == [\"john.doe@example.com\", \"john.doe@example2.com\"]\nassert solution(\"2\\nhans.doe@example.co.za\\nhans.doe@example2.co.za\\n\") == [\"hans.doe@example.co.za\", \"hans.doe@example2.co.za\"]\nassert solution(\"3\\njohn.doe\\njohn.doe@example.com\\njohn.doe@example2.com\\n\") == [\"john.doe@example.com\", \"john.doe@example2.com\"]\nassert solution(\"2\\nhans.doe@example.co.za\\nhans.doe@example2.co.za\\n\") == [\"hans.doe@example.co.za\", \"hans.doe@example2.co.za\"]\nassert solution(\"2\\njohn.doe\\njohn.doe@example.com\\njohn.doe@example2.com\\n\") == []",
        "num_ids_2": 109,
        "num_ids_4": 218
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n\ninput_data = [\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\",\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\",\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\",\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\",\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\",\n    \"1\\n1@mail.com\\n2@mail.net\\n3@mail.org\\n4@mail.edu\\n5@mail.com\\n6@mail.com\\n7@mail.com\\n8@mail.com\\n9@mail.com\"\n]\n\nexpected_output = [\n    \"1@mail.com\",\n    \"2@mail.net\",\n    \"3@mail.org\",\n    \"4@mail.edu\",\n    \"5@mail.com\"\n]\n\nfor input_string, expected in zip(input_data, expected_output):\n    assert solution(input_string) == expected, f\"Expected: {expected}, Received: {solution(input_string)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [] # Test Case 1\nassert solution(\"1\") == [\"1@example.com\"] # Test Case 2\nassert solution(\"2\") == [\"2@example.com\", \"1@example.com\"] # Test Case 3\nassert solution(\"3\") == [\"3@example.com\", \"2@example.com\", \"1@example.com\"] # Test Case 4\nassert solution(\"4\") == [\"4@example.com\", \"3@example.com\", \"2@example.com\", \"1@example.com\"] # Test Case 5",
        "num_ids_2": 30,
        "num_ids_4": 89
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(N = 3) == [\n    \"johndoe@example.com\",\n    \"jane_doe@example.com\",\n    \"doe_john@example.com\"\n]\n\nassert solution(N = 0) == []\n\nassert solution(N = 1) == []\n\nassert solution(N = 5) == [\n    \"example.com\",\n    \"johndoe@example.com\",\n    \"jane_doe@example.com\",\n    \"doe_john@example.com\",\n    \"example.com\"\n]\n\nassert solution(N = 2) == [\n    \"example.com\",\n    \"doe_john@example.com\"\n]",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3\njohn123@example.com\njohn456@example.com\njohn789@example.com\nmary123@example.com\nmary456@example.com\nmary789@example.com\n''') == ['john123@example.com', 'john456@example.com', 'john789@example.com']\n\nassert solution(\n'''\n2\njohn123@example.com\nmary123@example.com\n''') == ['john123@example.com']\n\nassert solution(\n'''\n0\n''') == []",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n\"john.doe@example.com\"\\n\"jane.doe@example.com\"\\n\"mary.doe@example.com\"\\n\"john.doe@example.com\"\\n\"jane.doe@example.com\"') == '[\"john.doe@example.com\",\"jane.doe@example.com\",\"mary.doe@example.com\"]'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4') == [4, 16, 64, 256, 1024]\nassert solution('10') == [1, 8, 27, 81, 320, 1280, 5120, 20480, 102400]",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == [1, 8, 27, 64, 125]\nprint(\"All tests passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == ['0', '1', '8', '27', '100']\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5') == ['27', '36', '45']\nassert solution('10') == ['5529', '6471', '7505', '8629', '9849']\nassert solution('15') == ['144181', '161001', '177730', '194391', '210971', '227461', '243851', '260141', '276331', '292421', '308411']",
        "num_ids_2": 57,
        "num_ids_4": 153
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == ['0', '1', '8', '27', '64']\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == [4, 3, 3]\n\n>>> solution(3)\n[4, 9, 16]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '343', \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == [1, 8, 27, 64, 109]\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [0, 1, 8, 27, 80]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == ['1', '8', '27', '64', '125']\nassert solution(input()) == ['1', '8', '27', '64', '125']\nassert solution(input()) == ['1', '8', '27', '64', '125']\nassert solution(input()) == ['1', '8', '27', '64', '125']\nassert solution(input()) == ['1', '8', '27', '64', '125']",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Please provide the input XML document correctly.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\", \"The XML document should not be empty\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><subroot><inner_subroot>Hello</inner_subroot></subroot></root>\") == \"3\", \"The maximum level of nesting should be 3\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><subroot><inner_subroot>Hello</inner_subroot><subsubroot><inner_subsubroot>World</inner_subsubroot></subsubroot></root>\") == \"5\", \"The maximum level of nesting should be 5\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><subroot><inner_subroot>Hello</inner_subroot><subsubroot><inner_subsubroot>World</inner_subsubroot><subsubsubroot><inner_subsubsubsubroot>Nested</inner_subsubsubsubroot></subsubsubroot></subsubroot></root>\") == \"6\", \"The maximum level of nesting should be 6\"",
        "num_ids_2": 76,
        "num_ids_4": 260
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0, \"The given XML document is not valid.\"\nassert solution(\"<?xml version='1.0'?>\\n<root/>\\n<root/>\\n<root/>\\n\") == 4, \"The maximum level of nesting in the XML document is not 4.\"\nassert solution(\"<?xml version='1.0'?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <greatgrandchild1>This is the root</greatgrandchild1>\\n    </grandchild1>\\n    <grandchild2>\\n      <greatgrandchild2>This is a nested element</greatgrandchild2>\\n    </grandchild2>\\n  </child1>\\n</root>\\n\") == 3, \"The maximum level of nesting in the XML document is not 3.\"\nassert solution(\"<?xml version='1.0'?>\\n<root>\\n  <child1>\\n    <grandchild1>\\n      <greatgrandchild1>This is the root</greatgrandchild1>\\n      <greatgrandchild2>This is a nested element</greatgrandchild2>\\n    </grandchild1>\\n    <grandchild2>\\n      <greatgrandchild3>This is another nested element</greatgrandchild3>\\n      <greatgrandchild4>This is yet another nested element</greatgrandchild4>\\n    </grandchild2>\\n  </child1>\\n</root>\\n\") == 4, \"The maximum level of nesting in the XML document is not 4.\"",
        "num_ids_2": 67,
        "num_ids_4": 346
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Test\") == \"2\", \"Test should have maximum level of nesting of 2.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><a><b><c><d><e><f><g></g></d></c></b></a></root>\") == \"3\", \"Test should have maximum level of nesting of 3.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b><c><d><e><f><g><h></h></g></d></c></b></a></root>\") == \"4\", \"Test should have maximum level of nesting of 4.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><a><b><c><d><e><f><g><h><i></i></h></g></d></c></b></a></root>\") == \"5\", \"Test should have maximum level of nesting of 5.\"",
        "num_ids_2": 86,
        "num_ids_4": 228
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n<root>\n    <child1>\n        <child2>\n            <child3>\n                <child4>\n                    <child5>\n                        <child6>\n                            <child7>\n                                <child8>\n                                    <child9>\n                                        <child10>\n                                            <child11>\n                                                <child12>\n                                                    <child13>\n                                                        <child14>\n                                                            <child15>\n                                                                <child16>\n                                                                    <child17>\n                                                                        <child18>\n                                                                            <child19>\n                                                                                <child20>\n                                                                                    <child21>\n                                                                                        <child22>\n                                                                                            <child23>\n                                                                                                <child24>\n                                                                                                    <child25>\n                                                                                                        <child26>\n                                                                                                            <child27>\n                                                                                                                <child28>\n                                                                                                                    <child29>\n                                                                                                                        <child30>\n                                                                                                                            <child31>\n                                                                                                                                <child32>\n                                                                                                                                    <child33>\n                                                                                                                                        <child34>\n                                                                                                                                            <child35>\n                                                                                                                                                <child36>\n                                                                                                                                                    <child37>\n                                                                                                                                                        <child38>\n                                                                                                                                                            <child39>\n                                                                                                                                                                <child40>\n                                                                                                                                                                    <child41>\n                                                                                                                                                                        <child42>\n                                                                                                                                                                            <child43>\n                                                                                                                                                                                <child44>\n                                                                                                                                                                                    <child45>\n                                                                                                                                                                                        <child46>\n                                                                                                                                                                                            <child47>\n                                                                                                                                                                                                <child48>\n                                                                                                                                                                                                    <child49>\n                                                                                                                                                                                                        <child50>\n                                                                                                                                                                                                            <child51>\n                                                                                                                                                                                                                <child52>\n                                                                                                                                                                                                                    <child53>\n                                                                                                                                                                                                                        <child54>\n                                                                                                                                                                                                                            <child55>\n                                                                                                                                                                                                                                <child56>\n                                                                                                                                                                                                                                    <child57>\n                                                                                                                                                                                                                                        <child58>\n                                                                                                                                                                                                                                            <child59>\n                                                                                                                                                                                                                                                <child60>\n                                                                                                                                                                                                                                                    <child61>\n                                                                                                                                                                                                                                                        <child62>\n                                                                                                                                                                                                                                                            <child63>\n                                                                                                                                                                                                                                                                <child64>\n                                                                                                                                                                                                                                                                    <child65>\n                                                                                                                                                                                                                                                                        <child66>\n                                                                                                                                                                                                                                                                            <child67>\n                                                                                                                                                                                                                                                                                <child68>\n                                                                                                                                                                                                                                                                                                                                                    <child69>\n                                                                                                                                                                                                                                                                                                                                                        <child70>\n                                                                                                                                                                                                                                                                                                                                                            <child71>\n                                                                                                                                                                                                                                                                                                                                                                <child72>\n                                                                                                                                                                                                                                                                                                                                                                    <child73>\n                                                                                                                                                                                                                                                                                                                                                                        <child74>\n                                                                                                                                                                                                                                                                                                                                                                            <child75>\n                                                                                                                                                                                                                                                                                                                                                                                <child76>\n                                                                                                                                                                                                                                                                                                                                                                                    <child77>\n                                                                                                                                                                                                                                                                                                                                                                                        <child78>\n                                                                                                                                                                                                                                                                                                                                                                                            <child79>\n                                                                                                                                                                                                                                                                                                                                                                                                <child80>\n                                                                                                                                                                                                                                                                                                                                                                                                    <child81>\n                                                                                                                                                                                                                                                                                                                                                                                                        <child82>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <child83>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <child84>\n
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Solution should return 5, but it returns {}\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n</root>\") == 3, \"Expected output: 3, but got: \" + str(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n</root>\"))\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n    <child3>\\n        <grandchild5/>\\n        <grandchild6/>\\n    </child3>\\n</root>\") == 5, \"Expected output: 5, but got: \" + str(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n    <child3>\\n        <grandchild5/>\\n        <grandchild6/>\\n    </child3>\\n</root>\"))\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n    <child3>\\n        <grandchild5/>\\n        <grandchild6/>\\n    </child3>\\n</root>\") == 3, \"Expected output: 3, but got: \" + str(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n</root>\"))\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n</root>\") == 2, \"Expected output: 2, but got: \" + str(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n</root>\"))\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n    </child2>\\n    <child3>\\n        <grandchild5/>\\n        <grandchild6/>\\n    </child3>\\n</root>\") == 0, \"Expected output: 0, but got: \" + str(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1/>\\n        <grandchild2/>\\n    </child1>\\n    <child2>\\n        <grandchild3/>\\n        <grandchild4/>\\n",
        "num_ids_2": 426,
        "num_ids_4": 824
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == 0\nassert solution(\"2\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n</root>\") == 3\nassert solution(\"3\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n<sub4>\\n</root>\") == 4\nassert solution(\"4\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n<sub4>\\n<sub5>\\n</root>\") == 5\nassert solution(\"5\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n<sub4>\\n<sub5>\\n<sub6>\\n</root>\") == 6",
        "num_ids_2": 43,
        "num_ids_4": 122
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n        </sub2>\\n    </sub1>\\n</root>\") == 3\nassert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n            <sub4/>\\n        </sub2>\\n    </sub1>\\n</root>\") == 4\nassert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n            <sub4/>\\n            <sub5/>\\n        </sub2>\\n    </sub1>\\n</root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n            <sub4/>\\n            <sub5/>\\n            <sub6/>\\n        </sub2>\\n    </sub1>\\n</root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n            <sub4/>\\n            <sub5/>\\n            <sub6/>\\n            <sub7/>\\n        </sub2>\\n    </sub1>\\n</root>\") == 6\n\nprint(solution(\"<?xml version='1.0' encoding='utf-8'?>\\n<root>\\n    <sub1>\\n        <sub2>\\n            <sub3/>\\n            <sub4/>\\n            <sub5/>\\n            <sub6/>\\n            <sub7/>\\n            <sub8/>\\n        </sub2>\\n    </sub1>\\n</root>\"))",
        "num_ids_2": 131,
        "num_ids_4": 290
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567890\") == \"NO\"\nassert solution(\"1234567891\") == \"YES\"\nassert solution(\"1234567892\") == \"YES\"\nassert solution(\"1234567893\") == \"YES\"\nassert solution(\"1234567894\") == \"YES\"\nassert solution(\"1234567895\") == \"YES\"\nassert solution(\"1234567896\") == \"YES\"\nassert solution(\"1234567897\") == \"YES\"\nassert solution(\"1234567898\") == \"YES\"\nassert solution(\"1234567899\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12345678901234567890\") == \"YES\"\nassert solution(\"123456789012345678901\") == \"YES\"\nassert solution(\"1234567890123456789012\") == \"YES\"\nassert solution(\"12345678901234567890123\") == \"NO\"\nassert solution(\"123456789012345678901234\") == \"YES\"\nassert solution(\"1234567890123456789012345\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 122
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"71234567\") == \"YES\" # Example 1\nassert solution(\"789101234\") == \"YES\" # Example 2\nassert solution(\"791012345\") == \"YES\" # Example 3\nassert solution(\"781012345\") == \"YES\" # Example 4\nassert solution(\"78101234\") == \"NO\" # Example 5",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123456\") == \"YES\"\nassert solution(\"12345\") == \"YES\"\nassert solution(\"123457\") == \"YES\"\nassert solution(\"123458\") == \"YES\"\nassert solution(\"123459\") == \"YES\"\nassert solution(\"1234567890\") == \"YES\"\nassert solution(\"123456789\") == \"NO\"\nassert solution(\"12345678901\") == \"NO\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"123456789012\") == \"NO\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'YES'\nassert solution('1234567890') == 'YES'\nassert solution('12345678901') == 'YES'\nassert solution('123456789012') == 'YES'\nassert solution('1234567890123') == 'YES'\nassert solution('12345678901234') == 'YES'\nassert solution('123456789012345') == 'YES'\nassert solution('1234567890123456') == 'YES'\nassert solution('12345678901234567') == 'YES'\nassert solution('123456789012345678') == 'YES'\nassert solution('1234567890123456789') == 'YES'\nassert solution('12345678901234567890') == 'YES'\nassert solution('123456789012345678901') == 'YES'\nassert solution('1234567890123456789012') == 'YES'\nassert solution('12345678901234567890123') == 'YES'\nassert solution('123456789012345678901234') == 'YES'\nassert solution('1234567890123456789012345') == 'YES'\nassert solution('12345678901234567890123456') == 'YES'\nassert solution('123456789012345678901234567') == 'YES'\nassert solution('1234567890123456789012345678') == 'YES'\nassert solution('12345678901234567890123456789') == 'YES'\nassert solution('123456789012345678901234567890') == 'YES'\nassert solution('1234567890123456789012345678901') == 'YES'\nassert solution('12345678901234567890123456789012') == 'YES'\nassert solution('123456789012345678901234567890123') == 'YES'\nassert solution('1234567890123456789012345678901234') == 'YES'\nassert solution('12345678901234567890123456789012345') == 'YES'\nassert solution('123456789012345678901234567890123456') == 'YES'\nassert solution('1234567890123456789012345678901234567') == 'YES'\nassert solution('12345678901234567890123456789012345678') == 'YES'\nassert solution('123456789012345678901234567890123456789') == 'YES'\nassert solution('",
        "num_ids_2": 37,
        "num_ids_4": 78
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n555-1234\\n000-0000\\n0000-0000\\n000-0000\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"3\\n123456789\\n000-0000\\n0000-0000\\n000-0000\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"2\\n12345678\\n000-0000\\n0000-0000\\n000-0000\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"4\\n1234567\\n000-0000\\n0000-0000\\n000-0000\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"1\\n123456\\n000-0000\\n0000-0000\\n000-0000\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"0\") == \"YES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 127,
        "num_ids_4": 252
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12345\") == \"YES\"\nassert solution(\"123456\") == \"NO\"\nassert solution(\"1234567\") == \"YES\"\nassert solution(\"12345678\") == \"NO\"\nassert solution(\"123456789\") == \"YES\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n123456789\n789012345\n987654321\n456789012\n\"\"\"\n) == \"YES\\nYES\\nYES\\nYES\\nNO\"\n\nassert solution(\n\"\"\"\n3\n123456789\n789012345\n987654321\n\"\"\"\n) == \"YES\\nYES\\nYES\\nNO\"\n\nassert solution(\n\"\"\"\n4\n123456789\n789012345\n987654321\n\"\"\"\n) == \"YES\\nYES\\nYES\\nYES\"\n\nassert solution(\n\"\"\"\n5\n123456789\n789012345\n987654321\n\"\"\"\n) == \"YES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n7654321\\n654321\\n78901234\\n987654321') == 'YES'\nassert solution('2\\n1234567\\n1234567\\n89101112') == 'NO'\nassert solution('3\\n12345678\\n12345678\\n54321012') == 'YES'\nassert solution('4\\n123456789\\n123456789\\n987654321') == 'YES'\nassert solution('5\\n1234567890\\n1234567890\\n9876543210') == 'YES'",
        "num_ids_2": 86,
        "num_ids_4": 169
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n5\\n7 8 9\") == \"7 8 9\\n6 5\"\nassert solution(\"4\\n1 2 3\\n4\\n6 7 8\") == \"6 7\"\nassert solution(\"4\\n1 2 3\\n5\\n6 7 8\") == \"6 7\"\nassert solution(\"3\\n1 2 3\\n4\\n5 6\") == \"4 5 6\\n1 2 3 4\"\nassert solution(\"1\\n\") == \"\"",
        "num_ids_2": 65,
        "num_ids_4": 132
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2\n5\n5\n7\n''') == '3\\n5\\n1\\n4\\n6\\n'\n\nassert solution('''\n1\n5\n2\n5\n8\n''') == '3\\n10\\n'\n\nassert solution('''\n1\n5\n1\n7\n13\n''') == '6\\n11\\n14\\n'\n\nassert solution('''\n5\n3\n5\n7\n''') == '5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n10\\n15\\n20\\n25\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('4\\n1\\n3\\n5\\n2\\n') == '1 2 3 4 5 4 3 2 1'\nassert solution('3\\n2\\n1\\n4\\n5\\n') == '1 2 3 4 5 2 1'\nassert solution('3\\n2\\n1\\n4\\n5\\n6\\n') == '1 2 3 4 5 6 1 2 3 4 5'\nassert solution('3\\n2\\n1\\n4\\n5\\n6\\n7\\n8\\n') == '1 2 3 4 5 6 7 8 1 2 3 4 5'\nassert solution('3\\n2\\n1\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '1 2 3 4 5 6 7 8 9 1 2 3 4 5'\nassert solution('2\\n1\\n\\n\\n') == '1'\nassert solution('4\\n1\\n3\\n5\\n2\\n6\\n7\\n8\\n9\\n') == '1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9'\n\nfrom typing import List\n",
        "num_ids_2": 46,
        "num_ids_4": 129
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    4 3 2\n    5\n    3\n    2\n    \"\"\"\n) == \"\"\"\n    3\n    2\n    \"\"\"\nassert solution(\n    \"\"\"\n    5\n    4 3 2\n    5\n    3\n    2\n    \"\"\"\n) == \"\"\"\n    3\n    2\n    \"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == []",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"5 4 3 2\") == ['5', '4', '3', '2']\nassert solution(r\"5 4 3 2 1 2 3 4 5\") == ['5', '4', '3', '2', '1', '2', '3', '4', '5']",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n4\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['9', '8']",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\\n1 2 3 4\\n2 3\\n5\\n\") == '1 3 5 7\\n3 5 7\\n5 7\\n'\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == '1 2 3 4 5\\n'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nID\\nMARKS\\nCLASS\\nNAME\") == \"25.0\"\nassert solution(\"2\\nID\\nMARKS\\nCLASS\\nNAME\") == \"28.0\"\nassert solution(\"3\\nID\\nMARKS\\nCLASS\\nNAME\") == \"31.0\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n3\nID NAME MARKS\n1 John Smith 90\n2 Jane Doe 85\n3 David Brown 78\n\"\"\") == \"105.00\"\n\nassert solution(r\"\"\"\n3\nID NAME MARKS\n1 John Smith 90\n2 Jane Doe 85\n3 David Brown 78\n\"\"\") == \"105.00\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nID,MARKS,CLASS,NAME\\n1,50,C,John\\n2,80,C,Alice\\n3,90,C,Bob\\n4,70,B,David\\n5,100,C,Eve\") == \"95.0\"\nassert solution(\"10\\nID,MARKS,CLASS,NAME\\n1,50,C,John\\n2,80,C,Alice\\n3,90,C,Bob\\n4,70,B,David\\n5,100,C,Eve\") == \"92.0\"\nassert solution(\"10\\nID,MARKS,CLASS,NAME\\n1,50,C,John\\n2,80,C,Alice\\n3,90,C,Bob\\n4,70,B,David\\n5,100,C,Eve\") == \"87.5\"\nassert solution(\"10\\nID,MARKS,CLASS,NAME\\n1,50,C,John\\n2,80,C,Alice\\n3,90,C,Bob\\n4,70,B,David\\n5,100,C,Eve\") == \"90.0\"\nassert solution(\"10\\nID,MARKS,CLASS,NAME\\n1,50,C,John\\n2,80,C,Alice\\n3,90,C,Bob\\n4,70,B,David\\n5,100,C,Eve\") == \"90.0\"",
        "num_ids_2": 152,
        "num_ids_4": 304
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(0) == '1.00'\nassert solution(1) == '1.00'\nassert solution(2) == '1.00'\nassert solution(3) == '1.00'\nassert solution(4) == '1.00'\nassert solution(5) == '1.00'\nassert solution(6) == '1.00'\nassert solution(7) == '1.00'\nassert solution(8) == '1.00'\nassert solution(9) == '1.00'\nassert solution(10) == '1.00'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"\nassert solution(\"5\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"\nassert solution(\"6\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"\nassert solution(\"7\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"\nassert solution(\"8\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"\nassert solution(\"9\\nID\\nMarks\\nName\\nClass\\n\") == \"3.5\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 11.0\n\n```python\nfrom collections import namedtuple",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    1\n    1,2,3,4,5\n    30,60,70,80,90\n    100,200,300,400,500\n    50,100,150,200,250\n    80,120,160,200,300\n    45,100,150,200,250\n    \"\"\"\n) == \"\"\"\n100.00\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    2,3,4\n    100,200,300\n    10,20,30\n    50,100,150\n    50,100,150\n    50,100,150\n    \"\"\"\n) == \"\"\"\n110.00\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11.0\", \"Code 01 failed\"\nassert solution() == \"Car(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\", \"Code 02 failed\"\n\nfrom collections import namedtuple",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\nID NAME MARKS CLASS\n1 Jane Doe 90 100 Y\n2 Bob Smith 70 80 F\n''') == '200.00'\n\nassert solution('''\n2\nNAME MARKS CLASS\nAlice 80 70 Male\nBob 90 80 Female\n''') == '60.00'\n\nassert solution('''\n4\nID NAME MARKS CLASS\n1 Jane Doe 90 100 Y\n2 Bob Smith 70 80 F\n3 David Johnson 95 75 Male\n4 Eric Lee 75 90 Female\n''') == '175.00'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Correct Output'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Weird\"\nassert solution(\"13\") == \"Not Weird\"\nassert solution(\"24\") == \"Not Weird\"\nassert solution(\"36\") == \"Not Weird\"\nassert solution(\"47\") == \"Weird\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Not Weird\"\nassert solution(\"17\") == \"Weird\"\nassert solution(\"22\") == \"Not Weird\"\nassert solution(\"25\") == \"Weird\"\nassert solution(\"50\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"Weird\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(17) == 'Weird'\nassert solution(21) == 'Not Weird'\nassert solution(23) == 'Weird'\nassert solution(31) == 'Not Weird'\nassert solution(50) == 'Weird'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Weird\"\nassert solution(\"7\") == \"Not Weird\"\nassert solution(\"25\") == \"Weird\"\nassert solution(\"49\") == \"Not Weird\"\nassert solution(\"20\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter a positive integer: \")) == \"Weird\"\nassert solution(input(\"Enter a positive integer: \")) == \"Not Weird\"\nassert solution(input(\"Enter a positive integer: \")) == \"Not Weird\"\nassert solution(input(\"Enter a positive integer: \")) == \"Weird\"\nassert solution(input(\"Enter a positive integer: \")) == \"Not Weird\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Not Weird\"\nassert solution(\"7\") == \"Not Weird\"\nassert solution(\"11\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"62\") == \"Weird\"\nassert solution(\"23\") == \"Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"Weird\", \"Test 1: Input 5 should print Weird\"\nassert solution(\"10\") == \"Not Weird\", \"Test 2: Input 10 should print Not Weird\"\nassert solution(\"25\") == \"Not Weird\", \"Test 3: Input 25 should print Not Weird\"\nassert solution(\"7\") == \"Weird\", \"Test 4: Input 7 should print Weird\"\nassert solution(\"20\") == \"Not Weird\", \"Test 5: Input 20 should print Not Weird\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\nassert solution(\"13\") == \"Not Weird\"\nassert solution(\"23\") == \"Weird\"\nassert solution(\"24\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"Not Weird\", \"Test case 1\"\nassert solution(\"19\") == \"Weird\", \"Test case 2\"\nassert solution(\"6\") == \"Weird\", \"Test case 3\"\nassert solution(\"22\") == \"Not Weird\", \"Test case 4\"\nassert solution(\"15\") == \"Weird\", \"Test case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <elem1 attr1='1' attr2='2' attr3='3' attr4='4' attr5='5' />\\n  <elem2 attr1='6' attr2='7' attr3='8' attr4='9' attr5='10' />\\n</root>\") == \"15\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <elem1 attr1='a' attr2='b' attr3='c' attr4='d' attr5='e' />\\n  <elem2 attr1='f' attr2='g' attr3='h' attr4='i' attr5='j' />\\n</root>\") == \"10\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <elem1 attr1='1' attr2='2' attr3='3' attr4='4' attr5='5' />\\n  <elem2 attr1='6' attr2='7' attr3='8' attr4='9' attr5='10' />\\n</root>\") == \"15\"\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <elem1 attr1='1' attr2='2' attr3='3' attr4='4' attr5='5' />\\n  <elem2 attr1='6' attr2='7' attr3='8' attr4='9' attr5='10' />\\n</root>\") == \"15\"",
        "num_ids_2": 191,
        "num_ids_4": 383
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='value1' attr2='value2' attr3='value3'/>\\n</root>\") == 13\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='value1' attr2='value2' attr3='value3'/>\\n<child attr4='value4' attr5='value5' attr6='value6'/>\\n</root>\") == 37\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='value1' attr2='value2' attr3='value3'/>\\n<child attr4='value4' attr5='value5' attr6='value6'/>\\n<child attr7='value7' attr8='value8' attr9='value9'/>\\n</root>\") == 79\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='value1' attr2='value2' attr3='value3'/>\\n<child attr4='value4' attr5='value5' attr6='value6'/>\\n<child attr7='value7' attr8='value8' attr9='value9'/>\\n<child attr10='value10' attr11='value11' attr12='value12'/>\\n</root>\") == 100\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='value1' attr2='value2' attr3='value3'/>\\n<child attr4='value4' attr5='value5' attr6='value6'/>\\n<child attr7='value7' attr8='value8' attr9='value9'/>\\n<child attr10='value10' attr11='value11' attr12='value12'/>\\n<child attr13='value13' attr14='value14' attr15='value15'/>\\n</root>\") == 140",
        "num_ids_2": 130,
        "num_ids_4": 355
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 35 # Correct solution\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n<root>\\n  <parent attr1='1' attr2='2'/>\\n  <child attr1='3' attr2='4'/>\\n</root>\") == 5\nassert solution(\"1\\n<root>\\n  <parent attr1='1' attr2='2'/>\\n  <child attr1='3' attr2='4'/>\\n  <grandchild attr1='5' attr2='6'/>\\n</root>\") == 12\nassert solution(\"1\\n<root>\\n  <parent attr1='1' attr2='2'/>\\n</root>\") == 4\nassert solution(\"1\\n<root>\\n</root>\") == 0",
        "num_ids_2": 111,
        "num_ids_4": 160
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('<?xml version=\"1.0\"?>\\n<book>\\n  <title>The Hobbit</title>\\n  <author>\\n    <name>J.R.R. Tolkien</name>\\n  </author>\\n  <publisher>Addison Wesley</publisher>\\n  <year>1937</year>\\n</book>') == 10, \"Solution should return the correct score for the given XML document.\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n  <element>\\n    <name>John</name>\\n  </element>\\n</root>') == 7\nassert solution('<root>\\n  <element>\\n    <name>John</name>\\n    <age>30</age>\\n  </element>\\n</root>') == 7\nassert solution('<root>\\n  <element>\\n    <name>John</name>\\n    <age>30</age>\\n    <email>john@example.com</email>\\n  </element>\\n</root>') == 14\nassert solution('<root>\\n  <element>\\n    <name>John</name>\\n    <age>30</age>\\n    <email>john@example.com</email>\\n    <phone>555-555-5555</phone>\\n  </element>\\n</root>') == 18",
        "num_ids_2": 50,
        "num_ids_4": 148
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\"?>\\n<bookstore>\\n\\t<book>\\n\\t\\t<title>XML Developer's Handbook</title>\\n\\t\\t<author>Paulo Coelho</author>\\n\\t</book>\\n\\t<book>\\n\\t\\t<title>XML Experts Handbook</title>\\n\\t\\t<author>Douglas Crockford</author>\\n\\t</book>\\n</bookstore>\") == 3, \"Invalid XML document\"\n\nprint(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n\\t<book>\\n\\t\\t<title>XML Developer's Handbook</title>\\n\\t\\t<author>Paulo Coelho</author>\\n\\t</book>\\n\\t<book>\\n\\t\\t<title>XML Experts Handbook</title>\\n\\t\\t<author>Douglas Crockford</author>\\n\\t</book>\\n</bookstore>\"))",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>The Catcher in the Rye</title>\\n    <author>J.D. Salinger</author>\\n    <price>42.99</price>\\n    <description>This is a book about Catcher in the Rye.</description>\\n</book>\") == 22, \"Test case 1\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>To Kill a Mockingbird</title>\\n    <author>L.A. Bauer</author>\\n    <price>35.99</price>\\n    <description>This is a book about To Kill a Mockingbird.</description>\\n    <genre>Fantasy</genre>\\n</book>\") == 16, \"Test case 2\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>Sword of Honour</title>\\n    <author>J.D. Salinger</author>\\n    <price>39.99</price>\\n    <description>This is a book about Sword of Honour.</description>\\n</book>\") == 11, \"Test case 3\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>The Lord of the Rings</title>\\n    <author>J.D. Salinger</author>\\n    <price>34.99</price>\\n    <description>This is a book about The Lord of the Rings.</description>\\n</book>\") == 10, \"Test case 4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>The Hunger Games</title>\\n    <author>J.D. Salinger</author>\\n    <price>36.99</price>\\n    <description>This is a book about The Hunger Games.</description>\\n</book>\") == 11, \"Test case 5\"",
        "num_ids_2": 210,
        "num_ids_4": 410
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\" attr4=\\\"value4\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 7\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 6\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 5\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 4\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 1\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n<sub_element attr3=\\\"value3\\\">\\n<child>content</child>\\n</sub_element>\\n</element>\\n</root>\") == 0",
        "num_ids_2": 156,
        "num_ids_4": 306
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>The Hobbit</title>\\n    <author>J.R.R. Tolkien</author>\\n    <price>29.99</price>\\n</book>\\n<book>\\n    <title>Harry Potter</title>\\n    <author>J.K. Rowling</author>\\n    <price>12.99</price>\\n</book>\") == 25\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>Jaws</title>\\n    <author>J.P. Lovejoy</author>\\n    <price>39.99</price>\\n</book>\\n<book>\\n    <title>Fellowship of the Ring</title>\\n    <author>J.K. Rowling</author>\\n    <price>12.99</price>\\n</book>\") == 46\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>To Kill a Mockingbird</title>\\n    <author>J.R.R. Tolkien</author>\\n    <price>29.99</price>\\n</book>\\n<book>\\n    <title>The Hobbit</title>\\n    <author>J.R.R. Tolkien</author>\\n    <price>29.99</price>\\n</book>\") == 50\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n    <title>The Catcher in the Rye</title>\\n    <author>J.R.R. Tolkien</author>\\n    <price>29.99</price>\\n</book>\\n<book>\\n    <title>The Hobbit</title>\\n    <author>J.R.R. Tolkien</author>\\n    <price>29.99</price>\\n</book>\") == 42",
        "num_ids_2": 240,
        "num_ids_4": 497
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 3 4') == '12.25', 'Test Case 1 Failed'\nassert solution('3 2 1 4') == '12.25', 'Test Case 2 Failed'\nassert solution('1 2 3 4') == '12.25', 'Test Case 3 Failed'\nassert solution('4 3 2 1') == '12.25', 'Test Case 4 Failed'\nassert solution('5 5 5 5') == '12.25', 'Test Case 5 Failed'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 10 15 20') == '57.29577951308232', 'The result should be 57.29577951308232, but it is {}.'.format(solution('5 10 15 20'))",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 5 8 3\\n6 7 4 9\\n12 11 13 2\\n4 9 1 10') == '45.00'\nassert solution('5 10 20 30\\n3 8 4 9\\n7 2 5 6\\n10 15 6 7') == '35.00'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 4 5') == '12.57'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4') == '27.18'\nassert solution('2 3 4 5') == '180.0'\nassert solution('1 2 3 4') == '180.0'\nassert solution('6 3 4 5') == '270.0'\nassert solution('2 5 4 3') == '270.0'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3.1 4.2 5.3 6.4\") == 30.0 # PHI = 30 degrees\nassert solution(\"1.0 2.0 3.0 4.0\") == 180.0 # PHI = 180 degrees\nassert solution(\"2.0 3.0 4.0 5.0\") == 270.0 # PHI = 270 degrees\nassert solution(\"1.0 2.0 3.0 4.0\") == 360.0 # PHI = 360 degrees",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Please enter four numbers as input.\"\nassert solution(\"1 2 3 4\") == \"Please enter four numbers as input.\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"Please enter four numbers as input.\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"Please enter four numbers as input.\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"Please enter four numbers as input.\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"Please enter four numbers as input.\"",
        "num_ids_2": 34,
        "num_ids_4": 99
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 0 0 0\\n0 1 0 0 0 0\\n0 0 1 0 0 0\\n0 0 0 1 0 0\\n0 0 0 0 1 0\\n0 0 0 0 0 1\") == \"35.0000\"\nassert solution(\"0 0 1 0 0 0\\n0 1 0 0 0 0\\n0 0 1 0 0 0\\n0 0 0 1 0 0\\n0 0 0 0 1 0\\n0 0 0 0 0 1\") == \"45.0000\"\nassert solution(\"0 0 0 1 0 0\\n0 0 1 0 0 0\\n0 0 0 1 0 0\\n0 0 0 0 1 0\\n0 0 0 0 0 1\\n0 0 0 0 0 1\") == \"45.0000\"\nassert solution(\"0 0 0 0 1 0\\n0 0 0 1 0 0\\n0 0 0 0 1 0\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n0 0 0 0 0 1\") == \"30.0000\"",
        "num_ids_2": 182,
        "num_ids_4": 364
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == 0.0, \"The output should be 0.0\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0\") == 180.0, \"The output should be 180.0\"\nassert solution(\"10 -5 7 3 -8 -12 14 2 9 13\") == 120.0, \"The output should be 120.0\"\nassert solution(\"1 2 3 4 5\") == \"Invalid input. Please enter the coordinates of a point separated by spaces.\"",
        "num_ids_2": 95,
        "num_ids_4": 173
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\neven\\nword\\nhello\\nworld\\n\") == \"2\"\nassert solution(\"1\\nodd\\nword\\nhello\\nworld\\n\") == \"1\"\nassert solution(\"2\\nword\\nhello\\nworld\\n\") == \"3\"\nassert solution(\"1\\nword\\nhello\\nworld\\n\") == \"3\"\nassert solution(\"1\\nword\\nhello\\nworld\\ny\\n\") == \"2\"\nassert solution(\"1\\nword\\nhello\\nworld\\ny\\n\") == \"2\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\napple\\norange\\nbanana\\ncherry\\ngrape') == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\napple\\nbanana\\nbanana\\nbanana\\n\") == \"2\"\nassert solution(\"3\\ncat\\nmouse\\nx\\n\") == \"1\"\nassert solution(\"2\\napple\\napple\\nbanana\\nbanana\\n\") == \"4\"",
        "num_ids_2": 47,
        "num_ids_4": 73
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\neven\\nsix\\nodd\\n') == '2\\n'\nassert solution('hello\\nworld\\npython\\nfizzbuzz\\n') == '2\\n'\nassert solution('the\\nquick\\nbrown\\nfox\\nyields\\ngrapes\\n') == '3\\n'\nassert solution('the\\nquick\\nbrown\\nfox\\nyields\\ngrapes\\napple\\n') == '2\\n'\nassert solution('') == ''",
        "num_ids_2": 48,
        "num_ids_4": 113
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 a 3 e 4 u 5 y\n    2 b c 5 d 6 y\n    3 a b d e f g h i\n    4 a b c d e f g h i\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    10\n    1 a 3 e 4 u 5 y\n    2 b c 5 d 6 y\n    3 a b d e f g h i\n    4 a b c d e f g h i\n    5 a b c d e f g h i\n    6 a b c d e f g h i\n    7 a b c d e f g h i\n    8 a b c d e f g h i\n    9 a b c d e f g h i\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    10\n    1 a 2 b c 3 e 4 f 5 g 6 h 7 i 8 j 9 k l m n o p q r s t u v w x y z\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    10\n    1 a 2 b c 3 e 4 f 5 g 6 h 7 i 8 j 9 k l m n o p q r s t u v w x y z\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    10\n    1 a 2 b c 3 e 4 f 5 g 6 h 7 i 8 j 9 k l m n o p q r s t u v w x y z\n    \"\"\"\n) == \"24\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\napple\\n2\\nbanana\\n3\\nbanana\\nbanana\\n4\\ncat\\n5\\nnine\\n6\\nzebra\\n7\\nyellow\\n8\\napple\\n9\\norange\\n10\\ngrape\\n') == 45\nprint(\"All test cases passed\")",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\napple\\norange\\nbanana\\nbanana\\ngrape\\nstrawberry\") == \"4\"\nassert solution(\"3\\ncat\\ndog\\ncat\\nrabbit\") == \"3\"\nassert solution(\"3\\nhello\\nworld\\npython\\npython\\nsqlite\\nsqlite\\n\") == \"6\"\nassert solution(\"5\\nhello\\nworld\\npython\\npython\\nsqlite\\nsqlite\\napple\\norange\\nbanana\\nbanana\\ngrape\\nstrawberry\") == \"12\"\n",
        "num_ids_2": 55,
        "num_ids_4": 141
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\napple\\nbanana\\nbanana\\ncat\\napple\\n\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'The score of the words is: 4', 'Debug the given function score_words'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n        5\n        1 2 3 4 5\n        1 2 3 4 5\n        1 2 3 4 5\n        1 2 3 4 5\n        1 2 3 4 5''') == '4'\nassert solution('''\n        6\n        1 2 3 4 5 6\n        1 2 3 4 5 6\n        1 2 3 4 5 6\n        1 2 3 4 5 6\n        1 2 3 4 5 6\n        1 2 3 4 5 6''') == '10'\nassert solution('''\n        7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7\n        1 2 3 4 5 6 7''') == '12'\nassert solution('''\n        8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8\n        1 2 3 4 5 6 7 8''') == '21'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"MCMXCII\") == False\nassert solution(\"MMMCMXCIV\") == True\nassert solution(\"MMMCMXCII\") == True\nassert solution(\"MCMXCIX\") == False",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"MCCXC\") == True, \"MCCXC should be valid\"\nassert solution(\"MCMLXXXIX\") == True, \"MCMLXXXIX should be valid\"\nassert solution(\"MMMCMXCIX\") == True, \"MMMCMXCIX should be valid\"\nassert solution(\"MMMCMXCIXIX\") == True, \"MMMCMXCIXIX should be valid\"\nassert solution(\"MMMCMXCIXIV\") == False, \"MMMCMXCIXIV should not be valid\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('II') == True\nassert solution('MMXIX') == True\nassert solution('L') == False\nassert solution('III') == False\nassert solution('IV') == False\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"MCMLXXXIX\") == True\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"VIII\") == True\nassert solution(\"M\") == False",
        "num_ids_2": 23,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"MMMCMXCIV\") == False\nassert solution(\"XXIX\") == True\nassert solution(\"MMM\") == False\nassert solution(\"MCMLXXXIV\") == False",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"MMCMXCIX\") == \"True\"\nassert solution(\"MCMXCIV\") == \"False\"\nassert solution(\"L\") == \"False\"\nassert solution(\"M\") == \"True\"\nassert solution(\"CM\") == \"False\"",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"I\") == True\nassert solution(\"VIII\") == True\nassert solution(\"IX\") == True\nassert solution(\"XIX\") == True\nassert solution(\"XXI\") == False",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"III\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"XL\") == True\nassert solution(\"XC\") == True\nassert solution(\"CD\") == True\nassert solution(\"CM\") == True\nassert solution(\"L\") == False\nassert solution(\"V\") == False\nassert solution(\"IX\") == False\nassert solution(\"X\") == False\nassert solution(\"I\") == False\nassert solution(\"XIV\") == False\nassert solution(\"MCMXCIX\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('I') == 'True'\nassert solution('VIII') == 'True'\nassert solution('MCMXCIV') == 'True'\nassert solution('XXXI') == 'True'\nassert solution('L') == 'False' # Invalid input",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"MMXX\") == True\nassert solution(\"MMMCMXCIV\") == True\nassert solution(\"LXXVIII\") == False\nassert solution(\"MCMLXXVIII\") == False\nassert solution(\"MM\") == False",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input_, output in zip(input_data, output_data):\n    assert solution(input_) == output, f\"Expected output {output} but got {solution(input_)} instead.\"\n\ninput_data = [\n    \"9\",\n    \"91\",\n    \"9123456789\",\n    \"+91 9 9123456789\",\n    \"91 0\",\n]\n\noutput_data = [\n    \"+91 9 9123456789\",\n    \"+91 0\",\n    \"+91 9 9123456789\",\n    \"+91 0\",\n    \"+91 9 9123456789\",\n]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"91 1234567890 3456789012\"\nprint(solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"91 xxxxx xxxxx\\n91 1234 5678\\n0 9876 5432\\n9012345678\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567890\\n+911234567890\\n+919876543210\\n09876543210\\n\") == \"9876543210 1234567890 +911234567890 +919876543210\"\nassert solution(\"1\\n+1234567890\\n+19876543210\\n09876543210\\n\") == \"+1234567890 19876543210 09876543210\"\nassert solution(\"1\\n+1234567890\\n+1234567890\\n09876543210\\n\") == \"1234567890 1234567890 09876543210\"\nassert solution(\"1\\n+1234567890\\n+1234567890\\n09876543210\\n\") == \"1234567890 1234567890 09876543210\"\nassert solution(\"1\\n+1234567890\\n+1234567890\\n09876543210\\n\") == \"1234567890 1234567890 09876543210\"",
        "num_ids_2": 195,
        "num_ids_4": 361
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n91234567890\\n98765432101\\n\") == \"+91 98765432101\\n+91 91234567890\\n+91 09876543210\"\nassert solution(\"2\\n55555555555\\n33333333333\\n\") == \"+91 33333333333\\n+91 55555555555\\n+91 03333333333\"\nassert solution(\"1\\n99999999999\\n88888888888\\n\") == \"+91 88888888888\\n+91 99999999999\\n+91 08888888888\"\nassert solution(\"0\\n11111111111\\n22222222222\\n\") == \"+91 22222222222\\n+91 11111111111\\n+91 02222222222\"",
        "num_ids_2": 170,
        "num_ids_4": 340
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('91 92 93 94 95') == '+91 92 93 94 95\\n'\nassert solution('91 92') == '+91 92\\n'\nassert solution('91 92 93') == '+91 92 93\\n'\nassert solution('91 92 93 94') == '+91 92 93 94\\n'\nassert solution('91 92 93 94 95') == '+91 92 93 94 95\\n'",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('91919191919') == '+91 9191 9191', 'Test 1'\nassert solution('09191919191') == '+91 9191 9191', 'Test 2'\nassert solution('91') == '+91 9191 9191', 'Test 3'\nassert solution('919191919191') == '+91 9191 9191', 'Test 4'\nassert solution('9191919191919191') == '+91 9191 9191', 'Test 5'",
        "num_ids_2": 72,
        "num_ids_4": 136
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"91 91 1234567890 091 0123456789\") == \"+91 1234567890 091 0123456789\", \"91 91 1234567890 091 0123456789\"\nassert solution(\"91 91 1234567890 91 0123456789\") == \"+91 1234567890 91 0123456789\", \"91 91 1234567890 91 0123456789\"\nassert solution(\"91 91 1234567890 1234567890 1234567890 1234567890\") == \"+91 1234567890 1234567890 1234567890 1234567890\", \"91 91 1234567890 1234567890 1234567890 1234567890\"\nassert solution(\"91 91 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 123456",
        "num_ids_2": 197,
        "num_ids_4": 1027
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12345678911234567891\") == \"+91 1234567891\", \"Invalid input\"\nassert solution(\"1234567890987654321\") == \"+91 9876543210\", \"Invalid input\"\nassert solution(\"12345678900000000000\") == \"+91 0000000000\", \"Invalid input\"\nassert solution(\"1234567890000000000\") == \"+91 0000000000\", \"Invalid input\"\nassert solution(\"12345678900000000000\") == \"+91 0000000000\", \"Invalid input\"\n",
        "num_ids_2": 89,
        "num_ids_4": 178
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"91234567890\") == \"+91 234 5678\", \"Solution should return +91 234 5678\"\nassert solution(\"0987654321\") == \"0987 6543 21\", \"Solution should return 0987 6543 21\"\nassert solution(\"123456789012\") == \"1234 5678 9012\", \"Solution should return 1234 5678 9012\"\nassert solution(\"01234567890\") == \"0123 4567 890\", \"Solution should return 0123 4567 890\"",
        "num_ids_2": 95,
        "num_ids_4": 200
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n\", \"The solution should return the correct output.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\na\\nalpha: 20 30 40\\nb\\nbeta: 30 50 70\\nquery_name: beta\\nThe query_name is beta. beta\\'s average score is (30+50+70)/3 = 50\\n') == '50.00'\nassert solution('2\\na\\nalpha: 20 30 40\\nb\\nbeta: 30 50 70\\nquery_name: gamma\\nThe query_name is gamma. gamma\\'s average score is (50+50+70)/3 = 75\\n') == '75.00'",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = \\'beta\\'\\n') == '50.00\\n'\nassert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = \\'foo\\'\\n') == 'N/A\\n'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name: beta\\n') == 'The average of the marks obtained by the particular student correct to 2 decimal places.\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"The given code stub {solution} is not the correct solution. Please check the problem statement and input/output format.\\nExpected output: {expected_output}\\nActual output: {solution(input_string)}\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = 'beta'\") == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nalpha\\n20\\nbeta\\n30\\n50\\n70\\n\") == \"50.00\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\nassert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\nassert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\nassert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\nassert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nJohn Doe 35 M\\nJane Smith 28 F\\nHenry Davids 30 M\\nMary George 27 F\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"2\\nAlice Johnson 22 M\\nBob Johnson 23 F\\nCharlie Johnson 25 M\\nDavid Johnson 27 F\\n\") == \"Ms. Bob Johnson\\nMr. Charlie Johnson\\n\"\nassert solution(\"3\\nMark Lee 19 M\\nTom Lee 22 F\\nKim Lee 25 M\\nSophie Lee 28 F\\n\") == \"Mr. Sophie Lee\\nMr. Kim Lee\\nMs. Tom Lee\\nMs. Mark Lee\\n\"\nassert solution(\"4\\nEric Lee 22 M\\nSophie Lee 24 F\\nDavid Lee 27 M\\nEva Lee 29 F\\n\") == \"Ms. David Lee\\nMs. Eric Lee\\nMs. Sophie Lee\\nMs. Eva Lee\\n\"\nassert solution(\"5\\nAlexander Johnson 21 M\\nDavid Johnson 23 F\\nSophie Johnson 26 M\\nMark Johnson 28 F\\n\") == \"Mr. Alexander Johnson\\nMr. David Johnson\\nMr. Sophie Johnson\\nMs. Mark Johnson\\n\"",
        "num_ids_2": 130,
        "num_ids_4": 276
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMary\\nJohn\\nJane\\nJohn\\n\") == \"Ms. Mary George\\nMr. Henry Davids\\n\"\nassert solution(\"4\\nJohn\\nMary\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"1\\nJohn\\n\") == \"John\\n\"\nassert solution(\"2\\nMary\\nJohn\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"3\\nMary\\nJohn\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n",
        "num_ids_2": 77,
        "num_ids_4": 129
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nJohn Doe 30 M\\nJane Smith 25 F\\nJackson Johnson 35 M\\n\") == \"Mr. John Doe\\nMs. Jane Smith\\n\"\nassert solution(\"3\\nAlice 22 F\\nBob 25 M\\nCharlie 33 F\\n\") == \"Mr. Bob\\nMs. Charlie\\nMs. Alice\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Input: {stdin}, Expected Output: {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nHarshith\\n25\\nM\\nJohn\\n27\\nF\\nSarah\\n30\\nM\\nLisa\\n16\\nF\\nAlice\\n25\\nM\\nEmily\\n18\\nM\\nVictoria\\n22\\nF\\nKate\\n15\\nM\\nMark\\n20\\nM\\nChristopher\\n24\\nF\\nDavid\\n21\\nM\\nWilliam\\n24\\nM\\nDavid\\n22\\nM\\nHenry\\n19\\nF\\nMary\\n20\\nF\\nGeorge\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n19\\nM\\nKate\\n20\\nF\\nEmily\\n21\\nM\\nWilliam\\n22\\nM\\nDavid\\n23\\nM\\nHenry\\n18\\nM\\nVictor\\n19\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nF\\nKate\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\nM\\nLisa\\n16\\nM\\nChristopher\\n20\\nF\\nEmily\\n21\\nM\\nWilliam\\n22\\nM\\nDavid\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nF\\nKate\\n23\\nM\\nWilliam\\n20\\nM\\nDavid\\n21\\nF\\nMary\\n22\\nM\\nHenry\\n23\\nM\\nDavid\\n18\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\nM\\nLisa\\n16\\nM\\nChristopher\\n20\\nM\\nDavid\\n21\\nM\\nHenry\\n22\\nM\\nDavid\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\nM\\nLisa\\n16\\nM\\nChristopher\\n20\\nM\\nDavid\\n21\\nM\\nHenry\\n22\\nM\\nDavid\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\nM\\nLisa\\n16\\nM\\nChristopher\\n20\\nM\\nDavid\\n21\\nM\\nHenry\\n22\\nM\\nDavid\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\nM\\nLisa\\n16\\nM\\nChristopher\\n20\\nM\\nDavid\\n21\\nM\\nHenry\\n22\\nM\\nDavid\\n17\\nM\\nLisa\\n18\\nM\\nMichael\\n18\\nM\\nEmily\\n21\\nM\\nChristopher\\n22\\nM\\nWilliam\\n23\\nM\\nDavid\\n20\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nHenry Davids 35 1\\nGeorge Martha 28 1\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"2\\nAlice 25 0\\nBob 20 1\\n\") == \"Alice\\nBob\\n\"\nassert solution(\"3\\nAlice 25 0\\nBob 20 1\\nEve 15 0\\n\") == \"Alice\\nBob\\nEve\\n\"\nassert solution(\"3\\nAlice 25 0\\nBob 20 1\\nEve 15 0\\n\") == \"Alice\\nBob\\nEve\\n\"\nassert solution(\"2\\nAlice 25 0\\nBob 20 1\\nEve 15 0\\n\") == \"Alice\\nBob\\nEve\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 177
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nJohn Doe 30 M\\nMary Smith 25 F\\nHenry Davids 28 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"2\\nAlice 22 F\\nBob 16 M\\nCharlie 19 M\\nDave 21 M\\n\") == \"Ms. Mary George\\nMs. Mary George\\nMr. Henry Davids\\nMr. Henry Davids\\n\"\nassert solution(\"3\\nJane Doe 30 M\\nFrank Smith 30 F\\nMary Smith 25 F\\nHenry Davids 28 M\\n\") == \"Ms. Mary George\\nMs. Mary George\\nMr. Henry Davids\\nMr. Henry Davids\\nMr. Henry Davids\\n\"\nassert solution(\"4\\nJane Doe 30 M\\nFrank Smith 30 F\\nMary Smith 25 F\\nHenry Davids 28 M\\n\") == \"Ms. Mary George\\nMs. Mary George\\nMr. Henry Davids\\nMr. Henry Davids\\nMr. Henry Davids\\n\"\nassert solution(\"5\\nJane Doe 30 M\\nFrank Smith 30 F\\nMary Smith 25 F\\nHenry Davids 28 M\\n\") == \"Ms. Mary George\\nMs. Mary George\\nMr. Henry Davids\\nMr. Henry Davids\\nMr. Henry Davids\\n\"",
        "num_ids_2": 132,
        "num_ids_4": 318
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Mr. Henry Davids\\nMs. Mary George\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nJohn Smith 35\\nJane Doe 30\\nAmy Johnson 25\\nSarah Lee 30\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"3\\nAlice Johnson 32\\nBob Johnson 35\\nCharlie Doe 35\") == \"Ms. John Smith\\nMr. John Doe\\nMs. George Washington\\nMr. David Wang\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nJohn Doe 25 F\\nJane Smith 22 M\\nMary Doe 24 M\\nAlice Johnson 21 F\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Print an array of the elements that do not sum to n = 3\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[1,0,0],[0,1,1],[1,0,1],[0,0,2],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\"\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"x = 1\ny = 1\nz = 2\nn = 3\"\"\") == '''[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'''\n\nassert solution(\"\"\"x = 1\ny = 1\nz = 2\nn = 5\"\"\") == '''[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 1, 2, 3, 4]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\nx = 1\ny = 1\nz = 2\nn = 3\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\n'''\n\nassert solution('''\nx = 3\ny = 4\nz = 5\nn = 6\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,2,0],[0,2,1],[0,2,2],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[2,0,0],[2,1,0],[2,2,0]]\n'''\n\nassert solution('''\nx = 3\ny = 5\nz = 7\nn = 8\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,2,0],[0,2,1],[0,2,2],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[2,0,0],[2,1,0],[2,2,0]]\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1 3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\nassert solution(\"1 2 1 3\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\nassert solution(\"1 2 3 4\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\nassert solution(\"1 2 3 5\\n\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"",
        "num_ids_2": 232,
        "num_ids_4": 473
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\\n\") == [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2], [1,0,0], [1,0,1], [1,0,2], [1,1,0], [1,1,1], [1,1,2]]\nprint(solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\\n\"))\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n",
        "num_ids_2": 230,
        "num_ids_4": 336
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2+3i\") == \"5.00+3.00i\", \"Test Case 1\"\nassert solution(\"2+3i+4-5i\") == \"8.00+10.00i\", \"Test Case 2\"\nassert solution(\"2+3i\") == \"5.00+3.00i\", \"Test Case 3\"\nassert solution(\"0+0i\") == \"0.00+0.00i\", \"Test Case 4\"\nassert solution(\"1+2i\") == \"3.00+4.00i\", \"Test Case 5\"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1.5+3i') == '2.5-0.5i'\nassert solution('1+0i') == '1+0i'\nassert solution('-2+3i') == '4+2i'\nassert solution('1.5-3i') == '-1.5+3i'\nassert solution('1+2i') == '3+1i'\n\nfrom math import modf\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+1i\") == \"2.00+3.00i\"\nassert solution(\"1.5-1.7i\") == \"0.25-0.60i\"\nassert solution(\"3*4i\") == \"3.00*4.00i\"\nassert solution(\"1/2i\") == \"0.50+0.75i\"\nassert solution(\"0i\") == \"0.00+0.00i\"\nassert solution(\"1+0i\") == \"1.00+0.00i\"\nassert solution(\"0-1i\") == \"-0.00+1.00i\"\nassert solution(\"-1-2i\") == \"2.00-1.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"\nassert solution(\"-1-3i\") == \"-1.00+3.00i\"\nassert solution(\"2-1i\") == \"0.00+2.00i\"\nassert solution(\"-2+3i\") == \"-1.00+3.00i\"\nassert solution(\"1/3i\") == \"0.3333333333333333+0.6666666666666667i\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"C+D\\nC-D\\nC*D\\nC/D\\nmod(C)\\nmod(D)\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3+4i\") == \"6.00+2.00i\"\nassert solution(\"5-2i\") == \"3.00-2.00i\"\nassert solution(\"2*3i\") == \"6.00*3.00i\"\nassert solution(\"3/2i\") == \"1.00/2.00i\"\nassert solution(\"10%2\") == \"0.00%2\"\nassert solution(\"3+5j\") == \"6.00+2.00j\"\nassert solution(\"10j\") == \"10.00j\"\nassert solution(\"1+1i\") == \"2.00+1.00i\"\nassert solution(\"0+0i\") == \"0.00+0.00i\"\nassert solution(\"1+0i\") == \"1.00+0.00i\"\nassert solution(\"0-0i\") == \"0.00-0.00i\"\nassert solution(\"0+1i\") == \"0.00+1.00i\"\nassert solution(\"0-1i\") == \"0.00-1.00i\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3i\") == \"5+3i\"\nassert solution(\"-5-3i\") == \"-5+3i\"\nassert solution(\"2*3i\") == \"6-9i\"\nassert solution(\"4/3i\") == \"2.6666666666666667i\"\nassert solution(\"5i\") == \"5+0i\"\nassert solution(\"0i\") == \"0.00+0i\"\nassert solution(\"1i+2i\") == \"1.00+2.00i\"\nassert solution(\"1i\") == \"1.00+0i\"\nassert solution(\"1i-2i\") == \"1.00-2.00i\"\nassert solution(\"-1i\") == \"1.00+0i\"\nassert solution(\"-1i+2i\") == \"1.00-2.00i\"\nassert solution(\"-1i+2i-3i\") == \"1.00-2.00+3.00i\"",
        "num_ids_2": 32,
        "num_ids_4": 79
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"C+D\\nC-D\\nC*D\\nC/D\\nmod(C)\\nmod(D)\"\n\nassert solution(input()) == \"0.00+0.00i\\n0.00+0.00i\\n0.00+0.00i\\n0.00+0.00i\\n0.00+0.00i\"\n\nassert solution(input()) == \"A+0.00i\\n0.00+0.00i\\nA+0.00i\\n0.00+0.00i\\n0.00+0.00i\"\n\nassert solution(input()) == \"B+0.00i\\n0.00+0.00i\\nB+0.00i\\n0.00+0.00i\\n0.00+0.00i\"\n\nassert solution(input()) == \"B+0.00i\\n0.00+0.00i\\nC+0.00i\\n0.00+0.00i\\n0.00+0.00i\"",
        "num_ids_2": 104,
        "num_ids_4": 224
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1+2i') == '1.00+2.00i'\nassert solution('1-2i') == '-1.00-2.00i'\nassert solution('1*2i') == '1.00*2.00i'\nassert solution('1/2i') == '0.50+0.50i'\nassert solution('100+50i') == '100.00+50.00i'\nassert solution('0+0i') == '0.00+0.00i'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"3+4i\\n3-4i\\n3*4i\\n3/4i\\n11\"\nassert solution(\"1 0\") == \"1+0i\\n1-0i\\n1*0i\\n1/0i\\n1+0.00i\"\nassert solution(\"0 1\") == \"0+1i\\n0-1i\\n0*1i\\n0/1i\\n0+1.00i\"\nassert solution(\"2 3\") == \"2+3i\\n2-3i\\n2*3i\\n2/3i\\n8\"\nassert solution(\"10 -5\") == \"10+5i\\n10-5i\\n10*5i\\n10/5i\\n6\"\nassert solution(\"5 2\") == \"5+2i\\n5-2i\\n5*2i\\n5/2i\\n1\"\nassert solution(\"3 -6\") == \"3+6i\\n3-6i\\n3*6i\\n3/6i\\n-3\"\nassert solution(\"0 4\") == \"0+4i\\n0-4i\\n0*4i\\n0/4i\\n-0.00i\"\nassert solution(\"5 0\") == \"5+0i\\n5-0i\\n5*0i\\n5/0i\\n5+0.00i\"\nassert solution(\"1 2\") == \"1+2i\\n1-2i\\n1*2i\\n1/2i\\n-0.00i\"\nassert solution(\"0 0\") == \"0+0i\\n0-0i\\n0*0i\\n0/0i\\n0+0.00i\"",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123 + 456i\") == \"226.56 + 130.48i\"\nassert solution(\"-123 + 456i\") == \"118.52 - 122.48i\"\nassert solution(\"123 * 456i\") == \"340.72 * -185.88i\"\nassert solution(\"123 / 456i\") == \"0.049662 + 113.228i\"\nassert solution(\"123 % 456i\") == \"0.0 + 113.228i\"",
        "num_ids_2": 64,
        "num_ids_4": 131
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('xyz') == 'xaybzc', \"The original password is xaybzc.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"xaybzc\", \"The original password is xaybzc. Extracting the characters at the odd-numbered positions results in xyz, and extracting the characters at the even-numbered positions results in abc.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\", \"The solution should return '00'.\"\nassert solution(\"23B0\") == \"000\", \"The solution should return '000'.\"\nassert solution(\"AB0B\") == \"00\", \"The solution should return '00'.\"\nassert solution(\"0123456789\") == \"0000000000\", \"The solution should return '0000000000'.\"\nassert solution(\"\") == \"\", \"The solution should return ''.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 119
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"01B0\") == \"00\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"00\", \"The output of solution should be '00'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('01B0') == '00', \"The solution should return '00'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct string should be 00\"\nassert solution(\"01A0\") == \"001\", \"The correct string should be 001\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"01B1\") == \"01\"\nassert solution(\"01B\") == \"00\"\nassert solution(\"01B01\") == \"010\"\nassert solution(\"01B011\") == \"011\"\nassert solution(\"01B01B\") == \"010\"\nassert solution(\"01B01BB\") == \"011\"\nassert solution(\"01B01BB0\") == \"010\"\nassert solution(\"01B01BB1\") == \"011\"\nassert solution(\"01B01BB10\") == \"0100\"\nassert solution(\"01B01BB11\") == \"0101\"\nassert solution(\"01B01BB110\") == \"01000\"\nassert solution(\"01B01BB111\") == \"01001\"\nassert solution(\"01B01BB1110\") == \"010000\"\nassert solution(\"01B01BB1111\") == \"010001\"\nassert solution(\"01B01BB11110\") == \"0100000\"\nassert solution(\"01B01BB11111\") == \"0100001\"\nassert solution(\"01B01BB111110\") == \"01000000\"\nassert solution(\"01B01BB111111\") == \"01000001\"\nassert solution(\"01B01BB1111110\") == \"010000000\"\nassert solution(\"01B01BB1111111\") == \"010000001\"\nassert solution(\"01B01BB11111110\") == \"0100000000\"\nassert solution(\"01B01BB11111111\") == \"0100000001\"\nassert solution(\"01B01BB111111110\") == \"01000000000\"\nassert solution(\"01B01BB111111111\") == \"01000000001\"\nassert solution(\"01B01BB1111111110\") == \"010000000000\"\nassert solution(\"01B01BB11111111111\") == \"010000000001\"\nassert solution(\"01B01BB111111111110\") == \"0100000000000\"\nassert solution(\"01B01BB111111111111\") == \"0100000000001\"\nassert solution(\"01B01BB1111111111110\") == \"01000000000000\"\nassert solution(\"01B01BB11111111111111\") == \"01000000000001\"\nassert solution(\"01B01BB111111111111110\") == \"010000000000000\"\nassert solution(\"01B01BB1111111111111111\") == \"010000000000001\"\nassert solution(\"01B01BB11111111111111110\") == \"0100000000000000\"\nassert solution(\"01B01BB111111111111111111\") == \"0100000000000001\"\nassert solution(\"01B01BB11111",
        "num_ids_2": 18,
        "num_ids_4": 46
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00', \"The function should return the string '00' as expected.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\", \"Test case 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"5\\n2 1 0 1 2\") == \"4\\n\"\nassert solution(\"5\\n2 0 1 1 2\") == \"4\\n\"\nassert solution(\"5\\n2 0 1 1 0\") == \"4\\n\"\nassert solution(\"5\\n2 0 1 1 0\") == \"4\\n\"\n\nassert solution(\"5\\n3 2 5 4 3\") == \"12\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"4\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8\") == \"4\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"10\\n5 2 6 4 7\") == \"20\"\nassert solution(\"10\\n5 1 5 6 8\") == \"5\"\nassert solution(\"10\\n5 2 5 5 7\") == \"10\"\nassert solution(\"10\\n5 2 5 6 6\") == \"12\"\nassert solution(\"10\\n5 1 5 6 5\") == \"12\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('3\\n1 2 3 4 5') == '3'\nassert solution('1\\n5 0 1 0 0') == '2'\nassert solution('5\\n2 1 5 4 3') == '4'\nassert solution('3\\n1 2 3 4 5') == '3'\nassert solution('1\\n5 0 1 0 0') == '2'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aca\\naccc\\nca') == 'A'\nassert solution('aabbc\\nabab\\nabbac\\nababac\\nabaaa\\nabababa\\nabababb') == 'A'\nassert solution('bcaa\\nbcbca\\ncbc') == 'B'\nassert solution('cabc\\nccc\\nccc') == 'C'\n",
        "num_ids_2": 49,
        "num_ids_4": 84
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"A\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"aca\\naccc\\nca\\n\") == \"A\\n\"\nassert solution(stdin=\"ab\\naccc\\nca\\n\") == \"B\\n\"\nassert solution(stdin=\"abc\\naccc\\nca\\n\") == \"C\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aca\\naccc\\nca') == 'A\\n'\nassert solution('aabcc\\nbbbb\\nbbbc') == 'B\\n'\nassert solution('abba\\nbccaa\\nbbbac') == 'C\\n'\nassert solution('aaa\\nbbbb\\nbbbb\\nbccc') == 'C\\n'",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"A\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"A\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"A\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"5 5 5\") == \"YES\"\nassert solution(\"5 5 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\") == \"YES\"\nassert solution(\"5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 7') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5 7') == 'YES', 'Input should be \"5 5 7\"'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"3 2 6\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 4\") == \"NO\"\nassert solution(\"1 1 10\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\", \"Output should be YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"11\\n\", \"The 5-th Lucas number is not 11.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"11\", \"The N-th Lucas number is not as expected.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"11\", \"Incorrect output for N=5.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\", \"The output is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"11\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == '11'\nprint('All test cases passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"11\\n\"\nassert solution(\"11\\n\") == \"11\\n\"\nassert solution(\"31\\n\") == \"11\\n\"\nassert solution(\"19\\n\") == \"21\\n\"\nassert solution(\"80\\n\") == \"35\\n\"\nassert solution(\"100\\n\") == \"55\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'5\\n') == '11\\n'\nassert solution(b'10\\n') == '13\\n'\nassert solution(b'1\\n') == '2\\n'\nassert solution(b'1000000\\n') == '1043269\\n'\nassert solution(b'0\\n') == '2\\n'\nassert solution(b'1000001\\n') == '2189765\\n'\nassert solution(b'1000000000000000000\\n') == '1113928491710616397104072586502254898255421623121606461467072958690140602689456724200345793542033544224832969913734846666179859915676398711867215837757455067380038918988605235219811576532528517591492787332823640842934763770496912591387809357178321877482925131173339255768840824416012119919246334037062198001196707449442783306041172763713081233823541089323181060927780794011871679495965728495338336440115220960980165876487549690689470599501097416876518867126871549533724054187064867187205917438379026862414912622035091319520843576400261387324942127968694900928020140234186047172693257302630767795429629979913237174179904458713344810628643882490930124601239466206558376823277547919635594177575051137504612996274575251326829454919493565087039475404672893752184790559542544356510134849140421609598970542637322018328701978513051971315873127481427659020216220974521101698201569732",
        "num_ids_2": 35,
        "num_ids_4": 79
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\", \"Your code is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '7\\n', \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\n4\\n2\\n') == '7\\n', \"Expected output: 7\\n, Actual output: {}\".format(solution(stdin='3\\n4\\n2\\n'))",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"The output should be 7.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Incorrect output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\", \"Your code is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\", \"Solution does not work.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\nassert solution(\"4\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"120\\n\"\nassert solution(\"2\\n1 2\\n3 4\\n\") == \"6\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"2\\n1 2\\n3\\n4\\n\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"5552\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 106
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '11'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\", \"Please provide a valid input.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\nassert solution(\"4\\n1 2 3\\n4 5 6\\n\") == \"25\\n\"\nassert solution(\"5\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"335\\n\"\n\nfor _ in range(5):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % (10**9+7)!= 0:\n        print(\"Error: Sum of A_i A_j must be modulo (10^9+7).\")\n        break\n    elif N < 2*10**5:\n        print(\"Error: N should be at most 2*10^5.\")\n        break\n    else:\n        ans = sum(A_i * A_j for A_i in A for A_j in A if 1 <= A_i < A_j < N)\n        print(ans % (10**9+7))",
        "num_ids_2": 51,
        "num_ids_4": 88
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 3 2\") == \"NO\"\nassert solution(\"1 3 2\") == \"NO\"\nassert solution(\"2 3 2\") == \"NO\"\nassert solution(\"4 1 2\") == \"YES\"\nassert solution(\"4 5 2\") == \"YES\"\nassert solution(\"4 9 2\") == \"YES\"\nassert solution(\"4 3 4\") == \"NO\"\nassert solution(\"4 1 1\") == \"YES\"\nassert solution(\"4 3 8\") == \"NO\"\nassert solution(\"4 3 1\") == \"YES\"\nassert solution(\"4 2 9\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 4 1\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"0 5 0\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 2 3\") == \"NO\"\nassert solution(\"8 6 5\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"4 3 5\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3 2') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11 1\\n\") == \"30\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\", \"The largest possible sum of the integers written on the blackboard after K operations is incorrect.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"30\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"30\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\", \"Test failed for sample input.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"\nassert solution(\"10 5 10\\n3\\n\") == \"45\\n\"\nassert solution(\"10 10 10\\n3\\n\") == \"50\\n\"\nassert solution(\"10 5 20\\n3\\n\") == \"65\\n\"\nassert solution(\"10 10 20\\n3\\n\") == \"70\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"40\"\nassert solution(\"5 3 11\\n3\") == \"50\"\nassert solution(\"5 3 11\\n4\") == \"60\"\nassert solution(\"5 3 11\\n5\") == \"70\"\nassert solution(\"5 3 11\\n6\") == \"80\"\nassert solution(\"5 3 11\\n7\") == \"90\"\nassert solution(\"5 3 11\\n8\") == \"100\"\nassert solution(\"5 3 11\\n9\") == \"110\"\nassert solution(\"5 3 11\\n10\") == \"120\"\nassert solution(\"5 3 11\\n11\") == \"130\"\nassert solution(\"5 3 11\\n12\") == \"140\"\nassert solution(\"5 3 11\\n13\") == \"150\"\nassert solution(\"5 3 11\\n14\") == \"160\"\nassert solution(\"5 3 11\\n15\") == \"170\"\nassert solution(\"5 3 11\\n16\") == \"180\"\nassert solution(\"5 3 11\\n17\") == \"190\"\nassert solution(\"5 3 11\\n18\") == \"200\"\nassert solution(\"5 3 11\\n19\") == \"210\"\nassert solution(\"5 3 11\\n20\") == \"220\"\nassert solution(\"5 3 11\\n21\") == \"230\"\nassert solution(\"5 3 11\\n22\") == \"240\"\nassert solution(\"5 3 11\\n23\") == \"250\"\nassert solution(\"5 3 11\\n24\") == \"260\"\nassert solution(\"5 3 11\\n25\") == \"270\"\nassert solution(\"5 3 11\\n26\") == \"280\"\nassert solution(\"5 3 11\\n27\") == \"290\"\nassert solution(\"5 3 11\\n28\") == \"300\"\nassert solution(\"5 3 11\\n29\") == \"310\"\nassert solution(\"5 3 11\\n30\") == \"320\"\nassert solution(\"5 3 11\\n31\") == \"330\"\nassert solution(\"5 3 11\\n32\") == \"340\"\nassert solution(\"5 3 11\\n33\") == \"350\"\nassert solution(\"5 3 11\\n34\") == \"360\"\nassert solution(\"5 3 11\\n35\") == \"370\"\nassert solution(\"5 3 11\\n36\") == \"380\"\nassert solution(\"5 3 11\\n37\") == \"390\"\nassert solution(\"5 3 11\\n38\") == \"400\"\nassert solution(\"5 3 11\\n39\") == \"410\"\nassert solution(\"5 3 11\\n40\") == \"420\"\nassert solution(\"5 3 11\\n41\") == \"430\"\nassert solution(\"5 3 11\\n42\") == \"440\"\nassert solution(\"5 3 11\\n43\") == \"450\"\nassert solution(\"5 3 11\\n44\") == \"460\"\nassert solution(\"5 3 11\\n45\") == \"470\"\nassert solution(\"5 3 11\\n46\") == \"480\"\nassert solution(\"5 3 11\\n47\") == \"490\"\nassert solution(\"5 3 11\\n48\") == \"500\"\nassert solution(\"5 3 11\\n49\") == \"510\"\nassert solution(\"5 3 11\\n50",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11 1\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3\") == \"30\"\nassert solution(\"5\") == \"30\"\nassert solution(\"5 3 11 10 11\") == \"30\"",
        "num_ids_2": 34,
        "num_ids_4": 58
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"\nassert solution(\"100 20 30\\n5\\n\") == \"150\\n\"\nassert solution(\"10 5 20\\n3\\n\") == \"120\\n\"\nassert solution(\"10 5 20\\n2\\n\") == \"110\\n\"\nassert solution(\"10 5 20\\n1\\n\") == \"100\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"The solution is incorrect. It should return 'Yes' when w is beautiful and 'No' otherwise.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('zyx') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"def\") == \"No\"\nassert solution(\"gfedcba\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abccba\") == \"No\"\nassert solution(\"aaaa\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"def\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abcde\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Expected output: Yes, Actual output: \" + solution(\"abaccaba\")\nassert solution(\"abc\") == \"No\", \"Expected output: No, Actual output: \" + solution(\"abc\")\nassert solution(\"abcd\") == \"No\", \"Expected output: No, Actual output: \" + solution(\"abcd\")\nassert solution(\"abcdabcd\") == \"No\", \"Expected output: No, Actual output: \" + solution(\"abcdabcd\")\nassert solution(\"hello\") == \"No\", \"Expected output: No, Actual output: \" + solution(\"hello\")\nassert solution(\"world\") == \"No\", \"Expected output: No, Actual output: \" + solution(\"world\")",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abcd') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abaccaba') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Test Case 1 failed\"\nassert solution(\"abc\") == \"No\", \"Test Case 2 failed\"\nassert solution(\"aaa\") == \"Yes\", \"Test Case 3 failed\"\nassert solution(\"def\") == \"No\", \"Test Case 4 failed\"\nassert solution(\"ab\") == \"No\", \"Test Case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3') == '3\\n'\nassert solution('3 4\\n1 1\\n2 2\\n3 3\\n4 4') == '3\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\nassert solution(\"3 5\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\nassert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\nassert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\n\nThe given input and output seem correct.",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\", \"Test failed. Solution did not work.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\\n\"\nassert solution(\"3 2\") == \"4\\n\"\nassert solution(\"4 2\") == \"6\\n\"\nassert solution(\"5 2\") == \"10\\n\"\nassert solution(\"6 2\") == \"12\\n\"\nassert solution(\"7 2\") == \"16\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"2\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"1 3\\n\") == \"1\"\nassert solution(\"1 1\\n\") == \"0\"\nassert solution(\"1 0\\n\") == \"0\"\nassert solution(\"1000 1000\\n\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"2\\n\"\nassert solution(stdin=\"5 1\\n\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"1000 5\") == \"25984\"\nassert solution(\"25 25\") == \"151451680\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 65
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"6 1\") == \"21\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\", \"The correct solution is 2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\", \"Test case 1 failed.\"\nassert solution(\"20 3\\n5 10 15 1 2\") == \"10\\n\", \"Test case 2 failed.\"\nassert solution(\"20 3\\n5 10 15 1 2\") == \"20\\n\", \"Test case 3 failed.\"\nassert solution(\"20 3\\n5 10 15 1 2\") == \"20\\n\", \"Test case 4 failed.\"\nassert solution(\"20 3\\n5 10 15 1 2\") == \"20\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 68,
        "num_ids_4": 140
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 3\\n5 10 15') == '10\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"3 1\\n5 10 15\") == \"5\"\nassert solution(\"5 3\\n5 10 15\") == \"5\"\nassert solution(\"6 3\\n5 10 15\") == \"15\"\nassert solution(\"1 1\\n1000000 1\") == \"1000000\"",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 3\\n5 10 15') == '10'\nassert solution('2 3\\n10 20 30') == '20'\nassert solution('5 10\\n15 20 30') == '20'\nassert solution('5 10\\n20 25 30') == '40'\nassert solution('5 10\\n15 20 35') == '35'\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"15 3\\n5 10 15\") == \"10\"\nassert solution(\"5 3\\n5 10 15\") == \"10\"\nassert solution(\"2 3\\n5 10 15\") == \"10\"\n",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"20 3\\n10 5\") == \"10\"\nassert solution(\"20 3\\n15 20\") == \"15\"\nassert solution(\"20 3\\n1 1 1\") == \"0\"\nassert solution(\"20 3\\n10 20\") == \"30\"\n",
        "num_ids_2": 43,
        "num_ids_4": 84
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Test case 1 failed\"\nassert solution(\"6 7 4 5\") == \"22\", \"Test case 2 failed\"\nassert solution(\"4 8 6 10\") == \"46\", \"Test case 3 failed\"\nassert solution(\"10 15 12 18\") == \"62\", \"Test case 4 failed\"\nassert solution(\"1000000 1000000 1000000 1000000\") == \"1000000\", \"Test case 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 101
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"1. Input and Output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"The first rectangle has an area of 3\u00d75=15, and the second rectangle has an area of 2\u00d77=14. Thus, the output should be 15, the larger area.\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nprint(\"All tests pass.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 2 7') == '15\\n', \"Incorrect output: {}\".format(solution('3 5 2 7'))\nassert solution('1 2 3 4') == '15\\n', \"Incorrect output: {}\".format(solution('1 2 3 4'))\nassert solution('1 1') == '15\\n', \"Incorrect output: {}\".format(solution('1 1'))\nassert solution('1 2') == '15\\n', \"Incorrect output: {}\".format(solution('1 2'))\nassert solution('1 2 1 2') == '15\\n', \"Incorrect output: {}\".format(solution('1 2 1 2'))",
        "num_ids_2": 72,
        "num_ids_4": 128
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '15\\n', \"Test case 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Your code is incorrect\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Incorrect output\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The area of the rectangle with the larger area should be 15.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nprint(\"Test case(s) passed successfully\")",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nA x 0\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nprint('All test cases pass.')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"3\\nTLE\\nTLE\\n\") == \"TLE x 2\"\nassert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"3\\nTLE\\nTLE\\n\") == \"TLE x 2\"\nassert solution(\"1\\nRE\\n\") == \"RE x 0\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\", \"Test Case 1 failed\"\nassert solution(\"22\") == \"0\", \"Test Case 2 failed\"\nassert solution(\"23\") == \"0\", \"Test Case 3 failed\"\nassert solution(\"24\") == \"0\", \"Test Case 4 failed\"\nassert solution(\"25\") == \"0\", \"Test Case 5 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"21\") == \"27\", \"Test failed\"\nassert solution(\"0\") == \"0\", \"Test failed\"\nassert solution(\"24\") == \"24\", \"Test failed\"\nassert solution(\"30\") == \"27\", \"Test failed\"\nassert solution(\"25\") == \"0\", \"Test failed\"\nassert solution(\"26\") == \"24\", \"Test failed\"\nassert solution(\"27\") == \"27\", \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(21) == \"27\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"M\")) == \"27\", \"Sample Output is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(21) == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the value of M: \")) == \"27\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='21') == '27', 'Testcase 1: Input 21 is not equal to expected output 27.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"2 10\") == \"error\"\nassert solution(\"10 3\") == \"error\"\nassert solution(\"10 10\") == \"error\"\nassert solution(\"10 0\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"1 2\") == \"error\"\nassert solution(\"0 0\") == \"error\"\nassert solution(\"10 2\") == \"error\"\nassert solution(\"100 200\") == \"error\"\nassert solution(\"10000 20000\") == \"90000\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"6 4\") == \"error\"\nassert solution(\"7 8\") == \"error\"\nassert solution(\"10 9\") == \"error\"\nassert solution(\"10 10\") == \"error\"\nassert solution(\"10 11\") == \"error\"\nassert solution(\"10 12\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3') == '9\\n' # correct output\nassert solution('7 8') == 'error\\n' # error output\nassert solution('10 10') == 'error\\n' # error output\nassert solution('11 12') == '11\\n' # correct output\nassert solution('13 14') == 'error\\n' # error output",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 3\") == \"error\"\nassert solution(\"11 3\") == \"error\"\nassert solution(\"6 10\") == \"error\"\nassert solution(\"6 -3\") == \"error\"\nassert solution(\"10 -3\") == \"error\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\", \"Your solution is incorrect. The output is incorrect.\"\nprint(\"Test Passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Expected Output: 7\\n, but got: \" + solution(\"4\\n2 3 7 9\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '7\\n', 'Solution is incorrect'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"6\\n2 3 7 9 10\") == \"14\\n\"\nassert solution(\"7\\n2 3 7 9\") == \"7\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"107\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\nassert solution(\"6\\n3 5 8 10 12\") == \"12\\n\"\nassert solution(\"7\\n2 3 4 5 6 7\") == \"1\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\\n\") == \"7\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 7 9') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"The travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes', \"Solution should return Yes for input 1 3.\"\nassert solution('5 7') == 'No', \"Solution should return No for input 5 7.\"\nassert solution('8 5') == 'Yes', \"Solution should return Yes for input 8 5.\"\nassert solution('9 10') == 'No', \"Solution should return No for input 9 10.\"\nassert solution('11 6') == 'Yes', \"Solution should return Yes for input 11 6.\"",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"Incorrect solution.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\"\nassert solution(\"2 3\") == \"No\\n\"\nassert solution(\"1 4\") == \"No\\n\"\nassert solution(\"1 1\") == \"Yes\\n\"\nassert solution(\"12 12\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"\nassert solution(\"5 5\\n\") == \"No\"\nassert solution(\"2 12\\n\") == \"Yes\"\nassert solution(\"3 12\\n\") == \"No\"\nassert solution(\"13 12\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"\nassert solution(\"5 6\\n\") == \"No\"\nassert solution(\"7 8\\n\") == \"No\"\nassert solution(\"1 12\\n\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('4 1') == 'No'\nassert solution('10 12') == 'Yes'\nassert solution('0 1') == 'No'\nassert solution('12 1') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 3\") == \"Yes\\n\"\nassert solution(stdin=\"4 12\") == \"No\\n\"\nassert solution(stdin=\"3 8\") == \"No\\n\"\nassert solution(stdin=\"2 7\") == \"Yes\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Odd\"\nassert solution(\"5 7\") == \"Odd\"\nassert solution(\"10 15\") == \"Even\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Even\\n\", \"Output should be Even\"\nassert solution(\"6 5\") == \"Odd\\n\", \"Output should be Odd\"\nassert solution(\"7 7\") == \"Even\\n\", \"Output should be Even\"",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Even'\nprint('Odd')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Even\", \"The product of 3 and 4 should be even.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 6\") == \"Odd\"\nassert solution(\"7 8\") == \"Odd\"\nassert solution(\"9 10\") == \"Even\"\nassert solution(\"11 12\") == \"Odd\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\\n\", \"Input is invalid\"\nassert solution(\"5 6\") == \"Odd\\n\", \"Input is invalid\"\nassert solution(\"0 1\") == \"Odd\\n\", \"Input is invalid\"\nassert solution(\"10000 10000\") == \"Odd\\n\", \"Input is invalid\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6\\n\") == \"2\\n\", \"1 6\"\nassert solution(\"2 4\\n\") == \"2\\n\", \"2 4\"\nassert solution(\"3 4\\n\") == \"4\\n\", \"3 4\"\nassert solution(\"5 6\\n\") == \"10\\n\", \"5 6\"\nassert solution(\"6 4\\n\") == \"8\\n\", \"6 4\"\nassert solution(\"7 8\\n\") == \"16\\n\", \"7 8\"\nassert solution(\"8 6\\n\") == \"24\\n\", \"8 6\"\nassert solution(\"9 12\\n\") == \"40\\n\", \"9 12\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 6\\n\") == \"2\\n\"\nassert solution(stdin=\"2 6\\n\") == \"2\\n\"\nassert solution(stdin=\"5 6\\n\") == \"4\\n\"\nassert solution(stdin=\"8 6\\n\") == \"8\\n\"\nassert solution(stdin=\"10 6\\n\") == \"12\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6\") == \"2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\", \"Incorrect output\"\nassert solution(\"1 7\") == \"3\", \"Incorrect output\"\nassert solution(\"2 4\") == \"1\", \"Incorrect output\"\nassert solution(\"3 8\") == \"2\", \"Incorrect output\"\nassert solution(\"4 5\") == \"3\", \"Incorrect output\"\nassert solution(\"5 7\") == \"4\", \"Incorrect output\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Invalid input\"\n\nN, M = map(int, stdin.split())",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"4 5\\n\") == \"4\\n\"\nassert solution(\"5 4\\n\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\", \"No input provided\"\nassert solution(\"1 6\") == \"2\", \"Invalid input\"\nassert solution(\"3 4\") == \"1\", \"Invalid input\"\nassert solution(\"1000000000\") == \"0\", \"Invalid input\"",
        "num_ids_2": 29,
        "num_ids_4": 68
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'\nassert solution(3, 2, 1, 4, 2, 1, 2, 3) == '6\\n9'",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"5\\n1 3\\n2 5\\n1 4\\n3 5\") == \"18\"\nassert solution(\"1\\n3 1\\n1 2\") == \"6\"\nassert solution(\"2\\n1 1\\n2 3\\n1 2\") == \"6\"",
        "num_ids_2": 64,
        "num_ids_4": 109
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"\nassert solution(\"1\\n1 2\\n1\\n1 2\\n1\\n\") == \"2\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n9\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 10\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 11\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 12\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 13\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 14\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 15\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 16\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 17\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 18\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 19\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 20\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 21\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 22\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 23\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 24\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 25\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 26\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 27\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 28\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 29\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 30\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 31\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 32\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 33\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 34\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 35\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 36\\n1 3 4 5 ",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 9\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 10\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 11\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 12\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 13\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 14\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 15\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 16\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 17\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 18\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 19\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 20\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 150
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 2\") == \"1000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 1\") == \"1000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 0\") == \"1000\"",
        "num_ids_2": 75,
        "num_ids_4": 155
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n0 2 4 6 8 10 12 14\") == \"1000\"\nassert solution(\"1000 8\\n1 3 5 7 9 11 13 15\") == \"2000\"\nassert solution(\"1000 8\\n0 0 0 0 0 0 0 0\") == \"1000\"\n",
        "num_ids_2": 73,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000', \"Invalid Output\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 5\\n1 2 3 4 5') == '1000'\nassert solution('1000 3\\n1 2 3') == '2000'\nassert solution('1000 2\\n1 2') == '2000'\nassert solution('1000 1\\n1 2') == '2000'",
        "num_ids_2": 64,
        "num_ids_4": 112
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 7\\n1 3 4 5 6 7 8 9\") == \"1500\"\nassert solution(\"1000 6\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 5\\n1 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"1000 4\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 3\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 2\\n1 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"1000 1\\n1 3 4 5 6 7 8 9\") == \"0\"",
        "num_ids_2": 70,
        "num_ids_4": 137
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\\nShe dislikes all digits except 0 and 2.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 4\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n1 5\\n1 6\") == \"3\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 4\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"4\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2 3 4\n    1 3\n    2 3\n    2 4\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 2 3 4\n    1 3\n    2 3\n    2 4\n    \"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 74,
        "num_ids_4": 112
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('5 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 5') == '2'\nassert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n2 5') == '1'",
        "num_ids_2": 77,
        "num_ids_4": 118
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\", \"Invalid output\"\n\nN = int(stdin.readline().strip())\nK = int(stdin.readline().strip())\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K, end=\" \")\n    else:\n        print(2 * K + 1, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 2, end=\" \")\n    else:\n        print(2 * K + 3, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 4, end=\" \")\n    else:\n        print(2 * K + 5, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 6, end=\" \")\n    else:\n        print(2 * K + 7, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 8, end=\" \")\n    else:\n        print(2 * K + 9, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 10, end=\" \")\n    else:\n        print(2 * K + 11, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 12, end=\" \")\n    else:\n        print(2 * K + 13, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 14, end=\" \")\n    else:\n        print(2 * K + 15, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 16, end=\" \")\n    else:\n        print(2 * K + 17, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 18, end=\" \")\n    else:\n        print(2 * K + 19, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 20, end=\" \")\n    else:\n        print(2 * K + 21, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 22, end=\" \")\n    else:\n        print(2 * K + 23, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 24, end=\" \")\n    else:\n        print(2 * K + 25, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 26, end=\" \")\n    else:\n        print(2 * K + 27, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 28, end=\" \")\n    else:\n        print(2 * K + 29, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 30, end=\" \")\n    else:\n        print(2 * K + 31, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 32, end=\" \")\n    else:\n        print(2 * K + 33, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2 * K + 34, end=\" \")\n    else:\n        print(2 * K + 35, end=\" \")\n\nprint()\n\nfor i in range(N):\n    if i % 2 == 0:\n        print(2",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\", \"Sample Input\"\nassert solution(\"2\\n5\\n\") == \"7\", \"Sample Input\"\nassert solution(\"2\\n10\\n\") == \"14\", \"Sample Input\"\nassert solution(\"3\\n3\\n\") == \"6\", \"Sample Input\"\nassert solution(\"4\\n1\\n\") == \"2\", \"Sample Input\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n3\\n') == '10\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\") == \"10\\n\", \"Invalid Output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\") == \"10\", \"Error in the solution\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"5\\n4\") == \"11\"\nassert solution(\"6\\n5\") == \"14\"\nassert solution(\"7\\n6\") == \"18\"\nassert solution(\"8\\n7\") == \"25\"\nassert solution(\"9\\n8\") == \"36\"\nassert solution(\"10\\n9\") == \"51\"\nassert solution(\"11\\n10\") == \"72\"\nassert solution(\"12\\n11\") == \"102\"\nassert solution(\"13\\n12\") == \"145\"\nassert solution(\"14\\n13\") == \"204\"\nassert solution(\"15\\n14\") == \"289\"\nassert solution(\"16\\n15\") == \"408\"\nassert solution(\"17\\n16\") == \"571\"\nassert solution(\"18\\n17\") == \"800\"\nassert solution(\"19\\n18\") == \"1101\"\nassert solution(\"20\\n19\") == \"1504\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n\", \"Test failed\"\nassert solution(input()) == \"10\\n\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\") == \"10\\n\", \"Test case 1\"\nassert solution(\"2\\n1\") == \"7\\n\", \"Test case 2\"\nassert solution(\"5\\n2\") == \"10\\n\", \"Test case 3\"\nassert solution(\"10\\n3\") == \"10\\n\", \"Test case 4\"\nassert solution(\"5\\n5\") == \"20\\n\", \"Test case 5\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1\", \"Test 1: Expected 1, got: \" + solution(1)\nassert solution(0) == \"0\", \"Test 2: Expected 0, got: \" + solution(0)\nassert solution(1.5) == \"0\", \"Test 3: Expected 0, got: \" + solution(1.5)\nassert solution(-1) == \"1\", \"Test 4: Expected 1, got: \" + solution(-1)\nassert solution(2) == \"0\", \"Test 5: Expected 0, got: \" + solution(2)",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1.5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(0) == 0\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == 0\nassert solution(8) == 1\nassert solution(9) == 0\nassert solution(10) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"15\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 0\nassert solution(9) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\", \"Output: \" + solution(\"125\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"176\", \"Test case 1 failed.\"\nassert solution(\"1+25\") == \"26\", \"Test case 2 failed.\"\nassert solution(\"12+5\") == \"17\", \"Test case 3 failed.\"\nassert solution(\"1+2+5\") == \"8\", \"Test case 4 failed.\"\nassert solution(\"1+1+5\") == \"10\", \"Test case 5 failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('125') == '176'\nprint('All test cases passed.')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"130\") == \"176\"\nassert solution(\"140\") == \"176\"\nassert solution(\"150\") == \"176\"\nassert solution(\"160\") == \"176\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\", \"The given formula is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\", \"Incorrect output\"\nassert solution(\"234\") == \"295\", \"Incorrect output\"\nassert solution(\"567\") == \"740\", \"Incorrect output\"\nassert solution(\"890\") == \"980\", \"Incorrect output\"\nassert solution(\"012\") == \"012\", \"Incorrect output\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n', \"Solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"4\\n\"\n\nassert solution(\"6\\n2 3 4 5 6\") == \"0\\n\"\n\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\", \"Test Case 1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\", \"Test Case 2\"\nassert solution(\"2\\n1\\n5\") == \"5\", \"Test Case 3\"",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20') == 15800\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"15800\", \"The correct output is not found.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\"\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"15800\\n\", \"Test case 1\"\nassert solution(\"30\") == \"20800\\n\", \"Test case 2\"\nassert solution(\"40\") == \"30000\\n\", \"Test case 3\"\nassert solution(\"50\") == \"40000\\n\", \"Test case 4\"\nassert solution(\"60\") == \"50000\\n\", \"Test case 5\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20\") == \"15800\"\nprint(\"Test passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 15800\nprint(\"Correct!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20') == '15800', \"The answer is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '15800', 'Your solution is incorrect.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"15800\", \"Test case 1 failed\"\nassert solution(\"10\") == \"50\", \"Test case 2 failed\"\nassert solution(\"5\") == \"30\", \"Test case 3 failed\"\nassert solution(\"4\") == \"1200\", \"Test case 4 failed\"\nassert solution(\"8\") == \"2600\", \"Test case 5 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20\") == \"15800\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The given code is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"Solution should return abc\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\", \"Test 1\"\nassert solution(\"at\\nto\\nrt\\n\") == \"attob\", \"Test 2\"\nassert solution(\"ct\\ncg\\nct\\n\") == \"ctcg\", \"Test 3\"\nassert solution(\"act\\nact\\nact\\n\") == \"acactac\", \"Test 4\"\nassert solution(\"at\\nto\\nrt\\n\") == \"attob\", \"Test 5\"",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ant\\nobe\\rec') == 'abc'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\" # sample input\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"2\", \"The expected output is '2' but it is 'None'.\"\nassert solution(\"111\") == \"1\", \"The expected output is '1' but it is 'None'.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\\n\", \"Test Failed\" # Test Failed\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '48000'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"48000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"48000\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"48000\", \"Test case 1 failed\"\n\nassert solution(input()) == \"60000\", \"Test case 2 failed\"\n\nassert solution(input()) == \"72000\", \"Test case 3 failed\"\n\nassert solution(input()) == \"84000\", \"Test case 4 failed\"\n\nassert solution(input()) == \"96000\", \"Test case 5 failed\"\n\nassert solution(input()) == \"108000\", \"Test case 6 failed\"\n\nassert solution(input()) == \"120000\", \"Test case 7 failed\"\n\nassert solution(input()) == \"132000\", \"Test case 8 failed\"\n\nassert solution(input()) == \"144000\", \"Test case 9 failed\"\n\nassert solution(input()) == \"156000\", \"Test case 10 failed\"\n\nassert solution(input()) == \"168000\", \"Test case 11 failed\"\n\nassert solution(input()) == \"180000\", \"Test case 12 failed\"\n\nassert solution(input()) == \"192000\", \"Test case 13 failed\"\n\nassert solution(input()) == \"204000\", \"Test case 14 failed\"\n\nassert solution(input()) == \"216000\", \"Test case 15 failed\"\n\nassert solution(input()) == \"228000\", \"Test case 16 failed\"\n\nassert solution(input()) == \"240000\", \"Test case 17 failed\"\n\nassert solution(input()) == \"252000\", \"Test case 18 failed\"\n\nassert solution(input()) == \"264000\", \"Test case 19 failed\"\n\nassert solution(input()) == \"276000\", \"Test case 20 failed\"\n\nassert solution(input()) == \"288000\", \"Test case 21 failed\"\n\nassert solution(input()) == \"300000\", \"Test case 22 failed\"\n\nassert solution(input()) == \"312000\", \"Test case 23 failed\"\n\nassert solution(input()) == \"324000\", \"Test case 24 failed\"\n\nassert solution(input()) == \"336000\", \"Test case 25 failed\"\n\nassert solution(input()) == \"348000\", \"Test case 26 failed\"\n\nassert solution(input()) == \"360000\", \"Test case 27 failed\"\n\nassert solution(input()) == \"372000\", \"Test case 28 failed\"\n\nassert solution(input()) == \"384000\", \"Test case 29 failed\"\n\nassert solution(input()) == \"396000\", \"Test case 30 failed\"\n\nassert solution(input()) == \"408000\", \"Test case 31 failed\"\n\nassert solution(input()) == \"420000\", \"Test case 32 failed\"\n\nassert solution(input()) == \"432000\", \"Test case 33 failed\"\n\nassert solution(input()) == \"444000\", \"Test case 34 failed\"\n\nassert solution(input()) == \"456000\", \"Test case 35 failed\"\n\nassert solution(input()) == \"468000\", \"Test case 36 failed\"\n\nassert solution(input()) == \"480000\", \"Test case 37 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n10000\") == \"48000\"\nassert solution(\"5\\n4\\n10000\\n10000\") == \"60000\"\nassert solution(\"5\\n1\\n10000\\n10000\") == \"10000\"\nassert solution(\"5\\n5\\n10000\\n10000\") == \"10000\"\nassert solution(\"5\\n2\\n10000\\n10000\") == \"18000\"",
        "num_ids_2": 61,
        "num_ids_4": 123
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '48000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 + 2') == '3'\nprint('All test cases passed')",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3', \"Evaluate the formula and print the result.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 + 2') == '3'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"The output should be 3\"\nassert solution(\"5 - 3\") == \"8\", \"The output should be 8\"\nassert solution(\"5 * 2\") == \"10\", \"The output should be 10\"\nassert solution(\"10 / 2\") == \"5\", \"The output should be 5\"",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC\", \"Smeke's current rating is less than 1200, thus the output should be ABC.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"ABC\\n\"\nassert solution(\"2000\") == \"ARC\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000\") == \"ABC\", \"Test case 1 failed\"\nassert solution(\"5000\") == \"ARC\", \"Test case 2 failed\"\nassert solution(\"1200\") == \"ABC\", \"Test case 3 failed\"\nassert solution(\"1600\") == \"ABC\", \"Test case 4 failed\"\nassert solution(\"2000\") == \"ARC\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1000) == \"ABC\"\nassert solution(2000) == \"ABC\"\nassert solution(1500) == \"ARC\"\nassert solution(1800) == \"ABC\"\nassert solution(3000) == \"ARC\"\nassert solution(3001) == \"ABC\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"5000\") == \"ARC\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\", \"Solution is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1 2 3\") == \"Invalid input\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"All Tests Passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\", \"Incorrect output\"\nassert solution(\"10000 8000 9000\") == \"21800\", \"Incorrect output\"\nassert solution(\"500 500 500\") == \"0\", \"Incorrect output\"\nassert solution(\"1000 2000 3000\") == \"100000\", \"Incorrect output\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\nassert solution(\"2 3\\nabc\\narc\") == expected_output\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 3\\nabc\\narc\\n\"\n) == \"\"\"#####\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\nabc\\narc\\n') == '''#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"#\\nabc\\narc#\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\na\\nb\\nc') == '''#####\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\nabc\\narc\\n') == '\\n#####\\n#abc#\\n#arc#\\n#####\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == '''#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"5\\nSDDD\") == \"2\"\nassert solution(\"5\\nAAA\") == \"3\"\nassert solution(\"5\\nIDDDDD\") == \"2\"\nassert solution(\"5\\nDDDDDDDD\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"3\\nDDDD\") == \"3\\n\"\nassert solution(\"2\\nIDID\") == \"3\\n\"\nassert solution(\"1\\nIDID\") == \"1\\n\"\nassert solution(\"5\\nIDDD\") == \"1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2', 'Test case 1 failed.'\nassert solution(input()) == '4', 'Test case 2 failed.'\nassert solution(input()) == '6', 'Test case 3 failed.'\nassert solution(input()) == '8', 'Test case 4 failed.'\nassert solution(input()) == '10', 'Test case 5 failed.'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"1\\nID\") == \"1\\n\"\nassert solution(\"3\\nAD\") == \"3\\n\"\nassert solution(\"2\\nABCD\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"10\\nABCDGH\") == \"3\\n\"\nassert solution(\"100\\nXYZ\") == \"10\\n\"\nassert solution(\"5\\nABCDGH\") == \"0\\n\"\nassert solution(\"10\\nGHIJKL\") == \"3\\n\"\nassert solution(\"100\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"4\\nID\") == \"2\"\nassert solution(\"7\\nIDDDDD\") == \"1\"\nassert solution(\"2\\nID\") == \"2\"\nassert solution(\"1\\nID\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4', \"Invalid input\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('10000 99999') == '0'\nassert solution('1000 9999') == '0'\nassert solution('1 9999') == '0'\nassert solution('1000 1000') == '1'\nassert solution('1000 9999') == '0'\n\nprint('All test cases passed!')",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"11011 11111\") == \"1\"\nassert solution(\"11211 11311\") == \"2\"\nassert solution(\"110000 99999\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"11009 11332\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n\ninput = input()\nA, B = map(int, input.split())\n\ncount = 0\nfor num in range(A, B+1):\n    if str(num) == str(num)[::-1]:\n        count += 1\n\nprint(count)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 1 4\") == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The number of different colors should be 3.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The output should be '3\\n', but got '{}'.\".format(solution(\"3 1 4\"))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 4 3\") == \"3\"\nassert solution(\"1 4 3\") == \"3\"\nassert solution(\"4 3 1\") == \"3\"\nassert solution(\"4 1 3\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Input: 3 1 4\\nExpected Output: 3\\nOutput: \" + solution(\"3 1 4\") + \"\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The number of different kinds of colors of the paint cans should be 3.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Incorrect Output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Test case 1\"\nassert solution(\"2 2 2\") == \"3\\n\", \"Test case 2\"\nassert solution(\"1 2 1\") == \"3\\n\", \"Test case 3\"\nassert solution(\"2 3 4\") == \"4\\n\", \"Test case 4\"\nassert solution(\"1 3 1\") == \"4\\n\", \"Test case 5\"\nassert solution(\"4 4 5\") == \"6\\n\", \"Test case 6\"\nassert solution(\"1 3 2\") == \"6\\n\", \"Test case 7\"\nassert solution(\"2 4 4\") == \"6\\n\", \"Test case 8\"\nassert solution(\"1 4 1\") == \"6\\n\", \"Test case 9\"\nassert solution(\"5 5 6\") == \"6\\n\", \"Test case 10\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"4 5 2\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"3 5 2\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"3 2 2\") == \"2\\n\", \"Test case 4 failed\"\nassert solution(\"3 3 4\") == \"4\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\\n\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\", \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 6\") == \"Invalid input\"\nassert solution(\"5 3\\n1 2 3 4 4\") == \"Invalid input\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"Invalid input\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12'\nassert solution('1 2 3\\n4 5 6') == '0'\nassert solution('5 4\\n1 2 3 4') == '0'\nassert solution('100 5\\n1 2 3 4 5 6 7 8 9 10') == '100'\nassert solution('100 5\\n1 2 3 4 5 6 7 8 9 10 11') == '0'",
        "num_ids_2": 45,
        "num_ids_4": 104
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 4 6 8 10\") == \"12\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 15\") == \"12\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 15\\n4 8 12 16 20\") == \"12\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 15\\n4 8 12 16 20\\n5 10 15 20 25\") == \"12\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 15\\n4 8 12 16 20\\n5 10 15 20 25\\n6 12 20 25 30\") == \"12\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 180
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"B\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"B\", \"Please provide the correct input format.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 7') == 'B\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 7\") == \"B\", \"Input: 5 2 7\\nOutput: B\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/01/01\") == \"2018/01/07\"\nassert solution(\"2018/12/31\") == \"2018/01/07\"\nassert solution(\"2018/01/32\") == \"2018/01/07\"\nassert solution(\"2018/01/29\") == \"2018/01/23\"\nassert solution(\"2018/01/30\") == \"2018/01/24\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/15\") == \"2018/01/15\"\nassert solution(\"2018/12/31\") == \"2018/12/31\"\nassert solution(\"2018/01/32\") == \"2018/01/32\"\nassert solution(\"2018/01/31\") == \"2018/01/31\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('12345') == '12345'\nassert solution('2018') == '2018/01/01'\nassert solution('2018/12/31') == '2018/12/31'\nassert solution('2019/01/01') == '2019/01/01'",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nprint(\"All tests passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\\n\"\nassert solution(\"4\\ncbaa\\ncbaa\\ncbaa\\ncbaa\") == \"aac\\n\"\nassert solution(\"1\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\n\") == \"\"\nassert solution(\"5\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\") == \"aac\\n\"\nassert solution(\"6\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa\\ncbaa",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\ncbaa\\ndaacca\\nacacac\") == \"aac\"\nassert solution(\"1\\nabc\\ndef\\nghi\\n\") == \"\"\nassert solution(\"5\\nabc\\ndef\\nghi\\njkln\\n\") == \"jkln\"\nassert solution(\"7\\nabc\\ndef\\nghi\\njkln\\nxz\\n\") == \"xz\"\nassert solution(\"6\\nabc\\ndef\\nghi\\njkln\\nxz\\nyz\\n\") == \"yz\"",
        "num_ids_2": 40,
        "num_ids_4": 92
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cbaa\\ndaac\\nacacac\") == \"aac\"\nassert solution(\"abcd\\nefg\") == \"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('2\\nxyz\\nbaaa\\nzzz') == 'aaa'\nassert solution('3\\nabcde\\nfghij\\nklmno') =='mno'\nassert solution('1\\nabc') == ''\nassert solution('') == ''",
        "num_ids_2": 42,
        "num_ids_4": 77
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"aac\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'aac', 'Your solution is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"1\\nabc\\n\") == \"\"\nassert solution(\"5\\nd1\\nd2\\nd3\\nd4\") == \"d4\"",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\\n24 30\\n\") == \"7\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n24 30\\n') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\", \"Your implementation is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n24 30') == '7\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"5 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '6', \"Solution should return 6 for n=3 and m=4\"\n\nassert solution(input()) == '6', \"Solution should return 6 for n=4 and m=4\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == 6, \"Test Failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4) == \"6\", \"The number of blocks in K-city should be 6.\"\nassert solution(2, 1) == \"0\", \"The number of blocks in K-city should be 0.\"\nassert solution(1, 1) == \"1\", \"The number of blocks in K-city should be 1.\"\nassert solution(1, 2) == \"2\", \"The number of blocks in K-city should be 2.\"\nassert solution(3, 3) == \"6\", \"The number of blocks in K-city should be 6.\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\", \"Output must be '6\\n'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\", \"Solution not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"6\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 2\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Possible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Possible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Possible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 1\") == \"Impossible\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 3\") == \"Impossible\"\nassert solution(\"4 1\") == \"Impossible\"\nassert solution(\"5 5\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 1\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"5 3\") == \"Impossible\"\nassert solution(\"7 4\") == \"Possible\"\nassert solution(\"2 5\") == \"Impossible\"\nassert solution(\"2 4\") == \"Possible\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"abc?\") == \"atcoder\"\nassert solution(\"abc??\") == \"atcoder\"\nassert solution(\"abdc\") == \"atcoder\"\nassert solution(\"abcdefg\") == \"atcoder\"\nassert solution(\"defgghij\") == \"atcoder\"\nassert solution(\"abcdde\") == \"atcoder\"\nassert solution(\"abcdefg\") == \"atcoder\"\nassert solution(\"abcdefg\") == \"atcoder\"\nassert solution(\"abcdefg\") == \"atcoder\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'atcoder'\nprint('UNRESTORABLE')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('abc') == 'UNRESTORABLE'\nassert solution('abcde') == 'UNRESTORABLE'\nassert solution('abcde?') == 'UNRESTORABLE'\nassert solution('?tcod?') == 'UNRESTORABLE'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"abc\") == \"UNRESTORABLE\"\nassert solution(\"ab?c\") == \"atcoder\"\nassert solution(\"at\") == \"atcoder\"\nassert solution(\"a\") == \"UNRESTORABLE\"\nassert solution(\"ab\") == \"atcoder\"\nassert solution(\"abcde\") == \"UNRESTORABLE\"\nassert solution(\"abcde?f\") == \"atcoder\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"UNRESTORABLE\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'atcoder'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder', 'E869120 found a chest which is likely to contain treasure, but the chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters. However, the chest is locked. Print the string S.'\n\nassert solution('coder') == 'UNRESTORABLE', 'The string S, which turns out to be the string S with some of its letters (possibly all or none) replaced with?, does not exist in the list of possible strings, so print UNRESTORABLE instead.'\n\nassert solution('?tc?????acde') == 'atcoder', 'The string S, which turns out to be the string S with some of its letters (possibly all or none) replaced with?, does not exist in the list of possible strings, so print UNRESTORABLE instead.'",
        "num_ids_2": 130,
        "num_ids_4": 191
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n123456') == 'UNRESTORABLE'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('?abcde') == 'UNRESTORABLE'\nassert solution('') == 'UNRESTORABLE'\nassert solution('?abcde????') == 'UNRESTORABLE'\nassert solution('?abcde?abcde????') == 'UNRESTORABLE'\nassert solution('?abcde??') == 'UNRESTORABLE'\nassert solution('?abcde?abcde??') == 'UNRESTORABLE'\nassert solution('?abcde??????') == 'UNRESTORABLE'\nassert solution('?abcde?abcde??????') == 'UNRESTORABLE'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('?aaaabbb') == 'UNRESTORABLE'\nassert solution('?ccddddeeee') == 'UNRESTORABLE'\nassert solution('?bbb') == 'UNRESTORABLE'",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder', 'Expected atcoder but got: {}'.format(solution('?tc????'))\nassert solution('coder') == 'atcoder', 'Expected atcoder but got: {}'.format(solution('coder'))\nassert solution('atcoder') == 'atcoder', 'Expected atcoder but got: {}'.format(solution('atcoder'))\nassert solution('abc?def') == 'UNRESTORABLE', 'Expected UNRESTORABLE but got: {}'.format(solution('abc?def'))\nassert solution('atcoderdef') == 'UNRESTORABLE', 'Expected UNRESTORABLE but got: {}'.format(solution('atcoderdef'))\nassert solution('abcabc') == 'UNRESTORABLE', 'Expected UNRESTORABLE but got: {}'.format(solution('abcabc'))",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2032\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2002\\n2017') == '2032'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2002\\n2017\") == \"2032\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2032\", \"Incorrect Output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"string\") == 4, \"Wrong solution for string\"\nassert solution(\"letter\") == 2, \"Wrong solution for letter\"\nassert solution(\"aaaaaa\") == 0, \"Wrong solution for aaaa\"\nassert solution(\"uncopyrightable\") == 13, \"Wrong solution for uncopyrightable\"\nassert solution(\"ambidextrously\") == 12, \"Wrong solution for ambidextrously\"\nassert solution(\"assesses\") == 1, \"Wrong solution for assesses\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected {} got {}\".format(output(), solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 4, \"Test 1 failed\"\nassert solution(\"letter\") == 2, \"Test 2 failed\"\nassert solution(\"aaaaaa\") == 0, \"Test 3 failed\"\nassert solution(\"uncopyrightable\") == 13, \"Test 4 failed\"\nassert solution(\"ambidextrously\") == 12, \"Test 5 failed\"\nassert solution(\"assesses\") == 1, \"Test 6 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"string\") == 4, \"Solution for Input 1 is incorrect\"\nassert solution(\"letter\") == 2, \"Solution for Input 2 is incorrect\"\nassert solution(\"aaaaaa\") == 0, \"Solution for Input 3 is incorrect\"\nassert solution(\"uncopyrightable\") == 13, \"Solution for Input 4 is incorrect\"\nassert solution(\"ambidextrously\") == 12, \"Solution for Input 5 is incorrect\"\nassert solution(\"assesses\") == 1, \"Solution for Input 6 is incorrect\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 4, \"Test 1: string\"\nassert solution(\"letter\") == 2, \"Test 2: letter\"\nassert solution(\"aaaaaa\") == 0, \"Test 3: empty string\"\nassert solution(\"uncopyrightable\") == 13, \"Test 4: uncopyrightable\"\nassert solution(\"ambidextrously\") == 12, \"Test 5: ambidextrously\"\nassert solution(\"assesses\") == 1, \"Test 6: assesses\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(f\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\n\nassert solution(f\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\n\nassert solution(f\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\n\nassert solution(f\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\n\nassert solution(f\"\"\"\n19931568 1000000 6\n\"\"\") == \"TLE\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} Failed: Expected {output}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'TLE'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution() == 'AC'\nassert solution",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(f\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\n\nassert solution(f\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\n\nassert solution(f\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\n\nassert solution(f\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\n\nassert solution(f\"\"\"\n19931568 1000000 6\n\"\"\") == \"TLE\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(100000000, 500, 3) == \"TLE\"\nassert solution(100000000, 50, 3) == \"AC\"\nassert solution(100000000, 10001, 5) == \"TLE\"\nassert solution(100000000, 10000, 5) == \"AC\"\nassert solution(19931568, 1000000, 6) == \"TLE\"",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'AC', \"Expected AC but got: \" + solution()\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor test_case in range(input()):\n    m, n, t = map(int, input().split())\n    output = \"TLE\"\n    if t == 3:\n        output = \"AC\" if n**4 <= m else \"TLE\"\n    elif t == 5:\n        output = \"AC\" if n**2 <= m else \"TLE\"\n    print(output)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE', \"The expected output for case 1 is: TLE\"\nassert solution('100000000 50 3') == 'AC', \"The expected output for case 2 is: AC\"\nassert solution('100000000 10001 5') == 'TLE', \"The expected output for case 3 is: TLE\"\nassert solution('100000000 10000 5') == 'AC', \"The expected output for case 4 is: AC\"\nassert solution('19931568 1000000 6') == 'TLE', \"The expected output for case 5 is: TLE\"\n",
        "num_ids_2": 72,
        "num_ids_4": 149
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n2\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 206,
        "num_ids_4": 409
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0'",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n5\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\\n2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4\\n\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n5\\n\"",
        "num_ids_2": 694,
        "num_ids_4": 694
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 0 0 2\n    4 16 8 2\n    2 64 32 4\n    1024 1024 64 0\n    0\n    \"\"\"\n) == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2 0 0 2\n    4 16 8 2\n    2 64 32 4\n    1024 1024 64 0\n    1\n    \"\"\"\n) == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2 0 0 2\n    4 16 8 2\n    2 64 32 4\n    1024 1024 64 0\n    2\n    \"\"\"\n) == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2 0 0 2\n    4 16 8 2\n    2 64 32 4\n    1024 1024 64 0\n    3\n    \"\"\"\n) == \"\"\"\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2 2 4 8\n    4 0 4 4\n    16 16 16 16\n    32 16 16 32\n    0\n    \"\"\"\n) == \"\"\"\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\n\nassert solution(input()) == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"\n\nassert solution(input()) == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\"\"\"\n\nassert solution(input()) == \"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\"\n\nassert solution(input()) == \"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\"\n\nassert solution(input()) == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\"\"\"\n\nassert solution(input()) == \"\"\"\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\", \"Test Case 1 Failed\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\", \"Test Case 2 Failed\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\", \"Test Case 3 Failed\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\", \"Test Case 4 Failed\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 213,
        "num_ids_4": 426
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H 2\\nO\") == \"0\\n\", \"H 2\\nO\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\\n\", \"C2H6 10\\nC3H8\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\\n\", \"CH3OH 1\\nCH4\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\\n\", \"C6H6OCH2O 10\\nHCN\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\\n\", \"C6H14 10\\nC5H10\"",
        "num_ids_2": 64,
        "num_ids_4": 138
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H 2\\nO\\n') == '0\\n'\nassert solution('C2H6 10\\nC3H8\\n') == '6\\n'\nassert solution('CH3OH 1\\nCH4\\n') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0\\n'\nassert solution('C6H14 10\\nC5H10\\n') == '12\\n'",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the input molecule:\\n\")) == \"0\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"6\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"12\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"0\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"0\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"1\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"0\"\nassert solution(input(\"Enter the input molecule:\\n\")) == \"6\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('inputs/test1.in').read()) == '0'\nassert solution(open('inputs/test2.in').read()) == '6'\nassert solution(open('inputs/test3.in').read()) == '1'\nassert solution(open('inputs/test4.in').read()) == '0'\nassert solution(open('inputs/test5.in').read()) == '12'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1:H 2\\nO\\nSample Output 1:0\\n\\nSample Input 2:C2H6 10\\nC3H8\\nSample Output 2:6\\n\\nSample Input 3:CH3OH 1\\nCH4\\nSample Output 3:1\\n\\nSample Input 4:C6H6OCH2O 10\\nHCN\\nSample Output 4:0\\n\\nSample Input 5:C6H14 10\\nC5H10\\nSample Output 5:12\\n\") == \"0\\n6\\n1\\n0\\n12\\n\"\n",
        "num_ids_2": 174,
        "num_ids_4": 174
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\nassert solution(open('input_2.txt', 'r')) == '6\\n'\nassert solution(open('input_3.txt', 'r')) == '1\\n'\nassert solution(open('input_4.txt', 'r')) == '0\\n'\nassert solution(open('input_5.txt', 'r')) == '12\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\"",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Test 1: ABC HAPPYBIRTHDAYCACEY\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Test 2: ABC TRAGICBIRTHDAYCACEY\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Test 3: ABC HAPPYBIRTHDAY\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Test 4: SECRET SOMECHORESARETOUGH\"",
        "num_ids_2": 74,
        "num_ids_4": 137
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"sample input 1 failed\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"sample input 2 failed\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"sample input 3 failed\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"sample input 4 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 'PASS', sample_input_1\nassert solution(sample_input_2) == 'FAIL', sample_input_2\nassert solution(sample_input_3) == 'FAIL', sample_input_3\nassert solution(sample_input_4) == 'PASS', sample_input_4",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Expected PASS but got: \" + solution(\"ABC HAPPYBIRTHDAYCACEY\")\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Expected FAIL but got: \" + solution(\"ABC TRAGICBIRTHDAYCACEY\")\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Expected FAIL but got: \" + solution(\"ABC HAPPYBIRTHDAY\")\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Expected PASS but got: \" + solution(\"SECRET SOMECHORESARETOUGH\")",
        "num_ids_2": 84,
        "num_ids_4": 156
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())[]\") == \"]\"\nassert solution(\"([])[]\") == \"]\"\nassert solution(\"({([])}())\") == \"] \"\nassert solution(\"([[]])\") == \"]\"\nassert solution(\"([{}])\") == \"]\"\nassert solution(\"[[]()]\") == \"]\"\nassert solution(\"[{}()()]\") == \"] \"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"((\") == (\")\", 0)\nassert solution(\"[]\") == ([], 0)\nassert solution(\"{ }\") == ({}, 0)",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8\n([] [] ]\n13\n(([] [[]] ())\n21\n[ { { () () () () } ]\n27\n[ { [[()]] (({})) } ] () {}\n''') == '] 7\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''8\n([] [] ]''') == ']'\nassert solution('''13\n(([] [[]] ())''') == 'ok so far'\nassert solution('''21\n[ { { () () () () } ]''') == ']'\nassert solution('''27\n[ { [[()]] (({})) } ] () {}''') == 'ok so far'",
        "num_ids_2": 11,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the length of the program: \")) == \"ok so far\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''8\n([] [] ]''') == ']'\nassert solution('''13\n(([] [[]] ())''') == 'ok so far'\nassert solution('''21\n[ { { () () () () } ]''') == ']'\nassert solution('''27\n[ { [[()]] (({})) } ] () {}''') == 'ok so far'",
        "num_ids_2": 11,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'8\\n([] [] ]\\n') == b']\\n7\\n', 'Sample Input 1')\nassert solution(b'13\\n(([] [[]] ())\\n') == b'ok so far\\n', 'Sample Input 2')\nassert solution(b'21\\n[ { { () () () () } ]\\n') == b']\\n20\\n', 'Sample Input 3')\nassert solution(b'27\\n[ { [[()]] (({})) } ] () {}\\n') == b'ok so far\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Sample Input 4')",
        "num_ids_2": 64,
        "num_ids_4": 155
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(8) == ']'\nassert solution(13) == 'ok so far'\nassert solution(21) == ']'\nassert solution(27) == 'ok so far'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(8) == (']', 7), \"Solution is incorrect\"\nassert solution(13) == ('ok so far',), \"Solution is incorrect\"\nassert solution(21) == (']', 20), \"Solution is incorrect\"\nassert solution(27) == ('ok so far',), \"Solution is incorrect\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Fair Game'\n\nassert solution(stdin) == 'Player 1 lost'\n\nassert solution(stdin) == 'Player 2 lost'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'Player 2 lost'\nassert solution(2) == 'Player 1 lost'\nassert solution(5) == 'Fair Game'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(Input()) == Output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"apple\\nextra\\napple\\nneat\\n\") == \"Player 1 lost\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 'Player 2 lost'\nassert solution(5) == 'Fair Game'\nassert solution(6) == 'Player 1 lost'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\near\\nextra\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\neat\") == \"Player 2 lost\"",
        "num_ids_2": 50,
        "num_ids_4": 69
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Fair Game\", \"Expected: Fair Game, Actual: {}\".format(solution(stdin))\nassert solution(stdin) == \"Player 1 lost\", \"Expected: Player 1 lost, Actual: {}\".format(solution(stdin))\nassert solution(stdin) == \"Player 2 lost\", \"Expected: Player 2 lost, Actual: {}\".format(solution(stdin))",
        "num_ids_2": 58,
        "num_ids_4": 88
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example.txt', 'r')) == 'Fair Game'\nassert solution(open('input.txt', 'r')) == 'Player 1 lost'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('shiritori_test_case.txt', 'r')) == 'Fair Game'\nassert solution(open('shiritori_test_case_2.txt', 'r')) == 'Player 1 lost'\nassert solution(open('shiritori_test_case_3.txt', 'r')) == 'Player 2 lost'",
        "num_ids_2": 55,
        "num_ids_4": 84
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Fair Game\", \"Test 1 failed\"\n\nassert solution(stdin) == \"Player 1 lost\", \"Test 2 failed\"\n\nassert solution(stdin) == \"Player 2 lost\", \"Test 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\\n*\") == \"100000\", \"Test 1\"\nassert solution(\"10000\\n+\") == \"10010\", \"Test 2\"\nassert solution(\"10\\n+\") == \"1010\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000\\n*\\n100') == '100000', \"The result of the operation is incorrect.\"\nassert solution('10000\\n+\\n10') == '10010', \"The result of the operation is incorrect.\"\nassert solution('10\\n+\\n1000') == '1010', \"The result of the operation is incorrect.\"",
        "num_ids_2": 67,
        "num_ids_4": 98
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\\n*\") == \"100000\", \"Input 1\"\nassert solution(\"10000\\n+\") == \"10010\", \"Input 2\"\nassert solution(\"10\\n+\") == \"1010\", \"Input 3\"",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\", \"The result should be 100000.\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\", \"The result should be 10010.\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\", \"The result should be 1010.\"",
        "num_ids_2": 78,
        "num_ids_4": 113
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"1000\", \"1000*1000+100\"),\n    (\"10000\", \"10000+10\"),\n    (\"10\", \"+10\"),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"100100\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"\") == \"\"\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\\n\", \"Test 1\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\\n\", \"Test 2\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\\n\", \"Test 3\"",
        "num_ids_2": 67,
        "num_ids_4": 98
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"100000\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"10010\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1010\"",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\", \"Output incorrect.\"\nassert solution(\"8 in\") == \"6\", \"Output incorrect.\"\nassert solution(\"52 out\") == \"8\", \"Output incorrect.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 out\") == \"3\\n\"\nassert solution(\"8 in\") == \"6\\n\"\nassert solution(\"52 out\") == \"8\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test {i+1} failed. Expected output: {expected_output}, but got: {solution(input())}\" for i, (input_, expected_output) in enumerate([(\"8 out\", 3), (\"8 in\", 6), (\"52 out\", 8), (\"52 in\", 8)]))",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"8 in\") == \"6\\n\", \"Sample Input 2\"\nassert solution(\"52 out\") == \"8\\n\", \"Sample Input 3\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 out\") == \"3\\n\"\nassert solution(\"8 in\") == \"6\\n\"\nassert solution(\"52 out\") == \"8\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 out\") == \"3\", \"Test Case 1\"\nassert solution(\"8 in\") == \"6\", \"Test Case 2\"\nassert solution(\"52 out\") == \"8\", \"Test Case 3\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Test 1 failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Test 2 failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Test 3 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n\") == \"yes\\n\"\nassert solution(\"2019\\n\") == \"no\\n\"\nassert solution(\"2020\\n\") == \"yes\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2018) == \"yes\", \"The correct solution is 'yes', but it returned '{}' instead.\".format(solution(2018))\nassert solution(2019) == \"no\", \"The correct solution is 'no', but it returned '{}' instead.\".format(solution(2019))\nassert solution(2020) == \"yes\", \"The correct solution is 'yes', but it returned '{}' instead.\".format(solution(2020))",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2018\\n\") == \"yes\"\nassert solution(stdin=\"2019\\n\") == \"no\"\nassert solution(stdin=\"2020\\n\") == \"yes\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}\\nExpected output: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"yes\", \"Test 1\"\nassert solution(10) == \"no\", \"Test 2\"\nassert solution(2018) == \"yes\", \"Test 3\"",
        "num_ids_2": 31,
        "num_ids_4": 49
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2018\\n2019\\n2020') == 'yes'\nassert solution('2019\\n2020\\n2021') == 'no'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"",
        "num_ids_2": 77,
        "num_ids_4": 120
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"  # correct output",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\\n\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\\n\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 121
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n4 0 0 0 4 0 0 0 0 4\\n4\") == \"64\\n\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\\n\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n4 0 0 0 4 0 0 0 0 4\\n4\") == \"1820000\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 187
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\\n\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\\n\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 115
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4 0 0 0 4 0 0 0 0 4\\n3\\n4 4 0 0 4 0 0 0 0 4\\n4\") == \"64\"\nassert solution(stdin=\"10 10 10 20 0 10 10 10 10 10\\n4\\n64\") == \"1820000\"\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == '64'\nassert solution(open('sample_input2.txt', 'r').read()) == '0'\nassert solution(open('sample_input3.txt', 'r').read()) == '1820000'",
        "num_ids_2": 45,
        "num_ids_4": 73
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 330\\n2 570\\n\"\nassert solution() == \"0 0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 330\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\\n\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\\n\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 570\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"The output {solution(input())} is not equal to the expected output {expected}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"2 330\n2 570\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input_1) == solution.output_1\nassert solution(solution.input_2) == solution.output_2\nassert solution(solution.input_3) == solution.output_3\n\nclass Solution:\n    def __init__(self):\n        self.input_1 = \"\"\"7 0\n30 270 995 996 997 998 999\"\"\"\n        self.output_1 = \"\"\"2 330\"\"\"\n\n        self.input_2 = \"\"\"7 1\n30 270 995 996 997 998 999\"\"\"\n        self.output_2 = \"\"\"2 570\"\"\"\n\n        self.input_3 = \"\"\"7 2\n30 270 995 996 997 998 999\"\"\"\n        self.output_3 = \"\"\"0 0\"\"\"\n\n    def solution(self, N: int, p: int, prob_list: List[int]) -> Tuple[int, int]:\n        num_accepted = 0\n        penalty_time = 0\n        for i in range(N):\n            if i == p:\n                num_accepted += 1\n                penalty_time += prob_list[i]\n            else:\n                penalty_time += prob_list[i]\n                num_accepted += 1\n                penalty_time += prob_list[i] - prob_list[i-1]\n        return num_accepted, penalty_time",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2 330' # This is the correct output\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == '2'\nassert solution(sample_input3) == '6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'aaaaaaaa') == 1\nassert solution(r'abbaabbaabba') == 2\nassert solution(r'abcdef') == 6",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt')) == '2\\n1 2\\n'\nassert solution(open('sample_input_2.txt')) == '1\\n1\\n'\nassert solution(open('sample_input_3.txt')) == '0\\n'",
        "num_ids_2": 46,
        "num_ids_4": 66
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == 2\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == 1\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\n\") == 0\n",
        "num_ids_2": 104,
        "num_ids_4": 143
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == \"2\\n1 2\\n\"\n\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == \"1\\n1\\n\"\n\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\n\") == \"0\\n\"",
        "num_ids_2": 118,
        "num_ids_4": 160
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\\n5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\n\\n\") == \"2\\n1 2\\n11 12 15 19 24 30\\n11 12 15 19 24 30\\n\"",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The solution for the problem {problem_num} has a wrong output. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5551212\") == 1\nassert solution(\"5519876\") == 0\nassert solution(\"5055555\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5551212) == 1, \"Expected output 1, got {}\".format(solution(5551212))\nassert solution(5519876) == 0, \"Expected output 0, got {}\".format(solution(5519876))\nassert solution(5055555) == 0, \"Expected output 0, got {}\".format(solution(5055555))",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5551212) == 1, \"Expected: 1\"\nassert solution(5519876) == 0, \"Expected: 0\"\nassert solution(5055555) == 0, \"Expected: 0\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5551212\") == \"1\", \"Expected: 1\"\nassert solution(\"5519876\") == \"0\", \"Expected: 0\"\nassert solution(\"5055555\") == \"0\", \"Expected: 0\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1, \"Sample Input 1\"\nassert solution(sample_input2) == sample_output2, \"Sample Input 2\"\nassert solution(sample_input3) == sample_output3, \"Sample Input 3\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32/1\") == \"0/1\", \"Test 1: 32/1\"\nassert solution(\"33/1\") == \"5/9\", \"Test 2: 33/1\"\nassert solution(\"-40/1\") == \"-40/1\", \"Test 3: -40/1\"",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"32/1\") == \"0/1\"\nassert solution(stdin=\"33/1\") == \"5/9\"\nassert solution(stdin=\"-40/1\") == \"-40/1\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(32/1) == \"0/1\"\nassert solution(33/1) == \"5/9\"\nassert solution(-40/1) == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(32/1) == \"0/1\", \"The solution should be 0/1.\"\nassert solution(33/1) == \"5/9\", \"The solution should be 5/9.\"\nassert solution(-40/1) == \"-40/1\", \"The solution should be -40/1.\"",
        "num_ids_2": 50,
        "num_ids_4": 77
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('32/1') == '0/1', 'Test 1 failed'\nassert solution('33/1') == '5/9', 'Test 2 failed'\nassert solution('-40/1') == '-40/1', 'Test 3 failed'\n\nprint(\"All tests passed\")",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(32/1) == 0/1\nassert solution(33/1) == 5/9\nassert solution(-40/1) == -40/1",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"32/1\") == \"0/1\"\nassert solution(stdin=\"33/1\") == \"5/9\"\nassert solution(stdin=\"-40/1\") == \"-40/1\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"Transposition\"\nassert solution(7) == \"Inversion\"\nassert solution(7) == \"Retrograde\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}, expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"Transposition\"\nassert solution(7) == \"Inversion\"\nassert solution(7) == \"Retrograde\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition\\n'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion\\n'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde\\ndef solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 58,
        "num_ids_4": 97
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' expected '{expected}'\"\nfor input_, expected in zip(test_cases, expected_output):\n    assert solution(input_) == expected, f\"Got '{solution(input_)}' expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition\\n'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion\\n'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde\\ndef solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 58,
        "num_ids_4": 97
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example_input_1.txt\", \"r\")) == \"Transposition\"\nassert solution(open(\"example_input_2.txt\", \"r\")) == \"Inversion\"\nassert solution(open(\"example_input_3.txt\", \"r\")) == \"Retrograde\"\n\nfrom typing import List",
        "num_ids_2": 45,
        "num_ids_4": 68
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde'",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nC E G\nD F# A\n\"\"\") == \"Transposition\"\n\nassert solution(\"\"\"\n7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Inversion\"\n\nassert solution(\"\"\"\n7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Retrograde\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"I love banana\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"First input should translate to 'Gah kove bababa'\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Second input should translate to 'Catacillar'\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Third input should translate to 'Cociccah gs the bestuh'\"",
        "num_ids_2": 68,
        "num_ids_4": 108
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', \"Expected 'Gah kove bababa', got '{}'\".format(solution('I love ba-na-na'))\nassert solution('Cat-a-pil-lar') == 'Catacillar', \"Expected 'Catacillar', got '{}'\".format(solution('Cat-a-pil-lar'))\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', \"Expected 'Cociccah gs the bestuh', got '{}'\".format(solution('Co-ding is the best'))",
        "num_ids_2": 90,
        "num_ids_4": 140
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\nfrom typing import List",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"First test case failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Second test case failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Third test case failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 6\nassert solution(2) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"16\"\nassert solution(3) == \"14\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 14",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 14",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"14\"\nassert solution(4) == \"16\"\nassert solution(5) == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin=input()) == solution(stdin",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    6\n    1\n    2\n    3\n    4\n    5\n    ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"3\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(3) == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\nSample Output 1: 3\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\nSample Output 2: 2\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\nSample Output 3: 4\" == \"4\")",
        "num_ids_2": 65,
        "num_ids_4": 96
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == 'Output not provided'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3\\n'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2\\n'\nassert solution('4 10\\n1 3 1 7\\n') == '4\\n'",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"possible\"\nassert solution(open(\"input2.txt\", \"r\")) == \"impossible\"\nassert solution(open(\"input3.txt\", \"r\")) == \"impossible\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"possible\"\nassert solution(sample_input_2) == \"impossible\"\nassert solution(sample_input_3) == \"impossible\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, but got {solution(input_data)}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\n\nassert solution(\n\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\n\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n\nassert solution('''\n1 2\n0 1 0\n1 0 1\n''') == 'impossible'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"possible\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\n",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case+1} failed. Expected output: {expected_output}, got: {solution(stdin)}\"\n\ntest_case = 1\nstdin = \"1 1\\n\"\nexpected_output = 1\nsolution(stdin)\ntest_case += 1\n\ntest_case = 2\nstdin = \"2 3\\n\"\nexpected_output = 1.875\nsolution(stdin)\ntest_case += 1\n\ntest_case = 3\nstdin = \"6 2\\n\"\nexpected_output = 4.25\nsolution(stdin)\ntest_case += 1",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"1\", \"Sample Output 1: The expected score for playing optimally when the die is played is 1.\"\nassert solution(sample_input_2) == \"1.875\", \"Sample Output 2: The expected score for playing optimally when the die is played is 1.875.\"\nassert solution(sample_input_3) == \"4.25\", \"Sample Output 3: The expected score for playing optimally when the die is played is 4.25.\"",
        "num_ids_2": 80,
        "num_ids_4": 122
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2') == '1.875'\nassert solution(stdin='1 1\\n2 3\\n6 2",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"The expected output is: {expected}, but the actual output is: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1.875\nassert solution(3) == 4.25",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"2 3\") == \"1.875\\n\"\nassert solution(\"6 2\") == \"4.25\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1', 'Please provide the correct input.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"Test case 1 failed\"\nassert solution(stdin) == \"1.875\", \"Test case 2 failed\"\nassert solution(stdin) == \"4.25\", \"Test case 3 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n2 3\\n6 2\") == \"1.875\"\nassert solution(\"1 1\\n2 2\\n4 3\") == \"2.5\"\nassert solution(\"3 3\\n4 1\\n1 4\") == \"0.5\"\nassert solution(\"2 3\\n1 4\\n4 3\") == \"1.5\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"1.0\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1.0\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 0\") == \"0 0\\n\"\nassert solution(\"4 2 7\") == \"1 4\\n\"\nassert solution(\"3 0 0\") == \"1 6\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 0\\n4 2 7\\n3 0 0\") == \"0 0\\n1 4\\n1 6\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_inputs/sample_1.txt\", \"r\").read()) == \"0 0\\n\"\nassert solution(open(\"test_inputs/sample_2.txt\", \"r\").read()) == \"1 4\\n\"\nassert solution(open(\"test_inputs/sample_3.txt\", \"r\").read()) == \"1 6\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 0, \"Solution 1 incorrect\"\nassert solution(2) == 0, \"Solution 2 incorrect\"\nassert solution(3) == 1, \"Solution 3 incorrect\"\nassert solution(4) == 4, \"Solution 4 incorrect\"\nassert solution(5) == 5, \"Solution 5 incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 0\") == \"0 0\\n\", \"Sample Input 1\"\nassert solution(\"4 2 7\") == \"1 4\\n\", \"Sample Input 2\"\nassert solution(\"3 0 0\") == \"1 6\\n\", \"Sample Input 3\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\\n\") == \"0 0\\n\"\nassert solution(\"4 2 7\\n\") == \"1 4\\n\"\nassert solution(\"3 0 0\\n\") == \"1 6\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input1, output1),\n    (input2, output2),\n    (input3, output3),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"The solution does not match the expected output: {solution(input())}!= {expected}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution is {solution(input())}, but expected {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 1\nassert solution(6) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"1 2 3\\n1 3 3\\n2 4 4\") == \"1 2\\n2 4\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"1 1\"\nassert solution(\"1 1 1\\n2 2 2\\n2 2 2\") == \"1 1\"\nassert solution(\"1 1 1\\n3 3 3\\n3 3 3\") == \"1 1\"",
        "num_ids_2": 109,
        "num_ids_4": 169
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'your code'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Actual output: '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\nassert solution(\"4\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"3 7\"",
        "num_ids_2": 145,
        "num_ids_4": 202
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n1\\n4\\n5\\n8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\\n\") == \"true\\n\"\nassert solution(\"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\\n\") == \"true\\n\"\nassert solution(\"Input: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\") == \"false\\n\"\nassert solution(\"Input: head = [1,2], pos = 1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\") == \"false\\n\"\nassert solution(\"Input: head = [1,2,3,4,5], pos = 2\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\") == \"false\\n\"\nassert solution(\"Input: head = [1,2,3,4,5], pos = 6\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\\n\") == \"true\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 200
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3,2,0,-4], 1) == \"true\"\nassert solution([1,2], 0) == \"true\"\nassert solution([1], -1) == \"false\"",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([], 0) == True",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([3,2,0,-4], 3) == False",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3,2,0,-4,null,1') == True\nassert solution('[1,2]') == True\nassert solution('[1]') == True\nassert solution('[]') == False\nassert solution('1,2') == False",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2,7,11,15') == '0,1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 7 11 15') == [0, 1]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(['2', '7', '11', '15']) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"[2, 7, 11, 15]\") == \"[0, 1]\"\nassert solution(\"[2, 3, 4, 5, 6, 7, 8, 9, 10]\") == \"[0, 1, 2, 3, 4]\"\nassert solution(\"[1, 2, 3, 4, 5, 6, 7, 8, 9]\") == \"[0, 1, 2, 3, 4, 5]\"\nassert solution(\"[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\") == \"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\"\nassert solution(\"[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
        "num_ids_2": 71,
        "num_ids_4": 214
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 7 11 15') == [0, 1]\nassert solution('3 2 4 5') == [1, 2]\nassert solution('1 5 2 3 4') == [2, 4]\nassert solution('1 5 2 3') == [2, 4]\nassert solution('1 5 2 1') == [2, 4]",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"[2, 7, 11, 15]\", 9) == [0, 1], \"The solution should return [0, 1].\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4') == '0\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0\"\nassert solution(4) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", \"Sample Output 1\"\n\nassert solution(stdin) == \"1\\n\", \"Sample Output 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(100) == 0\nassert solution(10) == 1\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)!= expected_output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output the number of intersections on a single line.\\n', 'Please, fill in the solution function.'\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output the number of intersections on a single line.\\n', \"Your code is missing the expected output.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2 2 1\\n3 7\\n4\") == \"4\"\nassert solution(\"1\\n3 7\\n3\") == \"impossible\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input '{stdin}' and expected output '{expected_output}'.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\nimpossible\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2 2 1\\n2\\n3 7\\n3') == 4\nassert solution('2\\n1 2 2 1\\n2\\n1 1\\n1') == 'impossible'\nassert solution('1\\n1 2 2 1\\n2\\n3 7\\n3\\n1 1\\n1 2 2 1') == 'impossible'",
        "num_ids_2": 60,
        "num_ids_4": 105
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == '4\\n'\nassert solution('''\n1\n3 7\n''') == 'impossible\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2 2 1\\n\") == 4\nassert solution(\"1\\n3 7\\n\") == \"impossible\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1\\n2\\n1 3 7\\n') == '4\\n'\nassert solution('2\\n1 3 7\\n2\\n1 2 1\\n2\\n1\\n') == 'impossible\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} should output {output}, but got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"180\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Your code is incorrect. Expected output: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = \"184 1\"\nsample_input2 = \"123450995 1\"\nexpected_output1 = \"180\"\nexpected_output2 = \"123451000\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match. Expected {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"184 1\\n123450995 1\\n\") == \"180\\n123451000\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0.000000', 'Please fix the code.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.000000\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3\\n') == '0.000000'\n\nassert solution('3\\n0 1\\n1 0\\n1 1\\n') == '0.000000'\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.000000\\n\", \"Test failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Expected {output}, but got {solution(input)}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\", \"Incorrect output\"\n\nfrom math import sqrt",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\", \"Output not as expected\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\\n\", \"Output not as expected\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 2\\n3 3\\n\") == \"0.000000\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.000000\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\\n\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\\n\") == \"1\\n2\\n6\\n8\\n\"\nassert solution(\"3\\n1\\n1 1\\n2 2\\n\") == \"1\\n2\\n\"\nassert solution(\"4\\n2\\n1 2 3\\n2 3 4\\n\") == \"1\\n2\\n\"\nassert solution(\"6\\n2\\n1 2 3 4 5\\n2 3 4\\n3 4 5 6\\n\") == \"1\\n2\\n\"\nassert solution(\"6\\n2\\n1 2 3 4 5\\n2 3 4\\n3 4 5 6\\n2 6 2\\n\") == \"1\\n2\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 183
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1', '2', '4', '6', '8']",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect output for sample input 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"1\", \"2\", \"4\", \"6\", \"8\"]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == ['2', '4', '6', '8']",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == 60, \"Expected 60, but got {}\".format(solution(\"3 4 5\"))\nassert solution(\"2 2 2\") == 8, \"Expected 8, but got {}\".format(solution(\"2 2 2\"))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"60\", \"Incorrect output for sample input 1\"\nassert solution() == \"8\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '60', 'The expected output is 60, but got:'+ str(solution(stdin)) + '.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '60'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\", \"Test case 1 failed.\"\nassert solution(\"2 2 2\") == \"8\\n\", \"Test case 2 failed.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_string=\"3 4 5\") == \"60\"\nassert solution(input_string=\"2 2 2\") == \"8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 2\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\") == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 2\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\") == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 2\\n\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\\n\") == \"2.5\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 2') == 1.6666666666666667\nassert solution('3\\n1 -1 4') == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, \"3 0 2\") == 1.6666666666666667\nassert solution(3, \"1 -1 4\") == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1.6666666666666667, \"Incorrect solution\"\nassert solution(3) == 1.6666666666666667, \"Incorrect solution\"\nassert solution(3) == 1.6666666666666667, \"Incorrect solution\"\nassert solution(3) == 1.6666666666666667, \"Incorrect solution\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6' # 6",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7, 3) == 6, \"The output is incorrect\"\nassert solution(15, 12) == 7, \"The output is incorrect\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() # Test case 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == \"Output the 7-th number to be crossed out.\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 7\nassert solution(5) == 11\nassert solution(6) == 13\nassert solution(7) == 17\nassert solution(8) == 19\nassert solution(9) == 23\nassert solution(10) == 29\nassert solution(11) == 31\nassert solution(12) == 37\nassert solution(13) == 41\nassert solution(14) == 43\nassert solution(15) == 47\nassert solution(16) == 53\nassert solution(17) == 59\nassert solution(18) == 61\nassert solution(19) == 67\nassert solution(20) == 71\nassert solution(21) == 73\nassert solution(22) == 79\nassert solution(23) == 83\nassert solution(24) == 89\nassert solution(25) == 97\nassert solution(26) == 101\nassert solution(27) == 103\nassert solution(28) == 107\nassert solution(29) == 109\nassert solution(30) == 113\nassert solution(31) == 127\nassert solution(32) == 131\nassert solution(33) == 137\nassert solution(34) == 139\nassert solution(35) == 149\nassert solution(36) == 151\nassert solution(37) == 157\nassert solution(38) == 163\nassert solution(39) == 167\nassert solution(40) == 173\nassert solution(41) == 179\nassert solution(42) == 181\nassert solution(43) == 191\nassert solution(44) == 193\nassert solution(45) == 197\nassert solution(46) == 199\nassert solution(47) == 211\nassert solution(48) == 223\nassert solution(49) == 227\nassert solution(50) == 229\nassert solution(51) == 233\nassert solution(52) == 239\nassert solution(53) == 241\nassert solution(54) == 251\nassert solution(55) == 257\nassert solution(56) == 263\nassert solution(57) == 269\nassert solution(58) == 271\nassert solution(59) == 277\nassert solution(60) == 281\nassert solution(61) == 283\nassert solution(62) == 293\nassert solution(63) == 307\nassert solution(64) == 311\nassert solution(65) == 313\nassert solution(66) == 317\nassert solution(67) == 331\nassert solution(68) == 337\nassert solution(69) == 347\nassert solution(70) == 349\nassert solution(71) == 353\nassert solution(72) == 359\nassert solution(73) == 367\nassert solution(74) == 373\nassert solution(75) == 379\nassert solution(76) == 383\nassert solution(77) == 389\nassert solution(78) == 397\nassert solution(79) == 401\nassert solution(80) == 409\nassert solution(81) == 419\nassert solution(82) == 421\nassert solution(83) == 431\nassert solution(84) == 433\nassert solution(85) == 439\nassert solution(86) == 443\nassert solution(87) == 449\nassert solution(88) == 457\nassert solution(89) == ",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n\") == \"6\"\nassert solution(\"15 12\\n\") == \"7\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Error: {input()}!= {output()}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Solution '{solution(stdin=input())}' does not match the expected output '{output}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123864 123865\\n198765 198769\\n\") == \"1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(123864) == \"1\"\nassert solution(198765) == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"123864 123865\") == \"1\"\nassert solution(stdin=\"198765 198769\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    input_1=[\n        \"123864 123865\",\n    ]\n) == \"1\\n\"\n\nassert solution(\n    input_2=[\n        \"198765 198769\",\n    ]\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Solution does not work\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"0.50000000\"\nassert solution(2) == \"0.66666667\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"0.5\"\nassert solution(2) == \"0.667\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0.66666667\nassert solution(2) == 0.50000000",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input(1)) == \"0.50000000\"\nassert solution(sample_input(2)) == \"0.66666667\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 0.5, \"Test 1\"\nassert solution(3) == 0.66666667, \"Test 2\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\") == \"0.66666667\"\nassert solution(\"1\\n1\") == \"0.50000000\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.50000000, \"The output should be 0.50000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0.66666667\", \"Incorrect output\"\nassert solution(10) == \"0.50000000\", \"Incorrect output\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10000000) == 0.50000000, \"Test 1 failed\"\nassert solution(20000000) == 0.66666667, \"Test 2 failed\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '0.50000000'\nassert solution(sample_input_2) == '0.66666667'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\" # Solution to problem is incorrect.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(180) == \"triple 20\", \"Expected 'triple 20' but got '{}'\".format(solution(180))\nassert solution(96) == \"triple 19\", \"Expected 'triple 19' but got '{}'\".format(solution(96))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(180) == \"triple 20\", \"Test 1 failed\"\nassert solution(96) == \"triple 19\", \"Test 2 failed\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\" # sample output 1\nassert solution() == \"impossible\" # sample output 2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(180) == \"triple 20\", \"Test 1 failed\"\nassert solution(96) == \"triple 19\", \"Test 2 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"  # example 1\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"  # example 2",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 7\\n5 2 2\\n\") == \"168\"\nassert solution(\"3 5 10\\n1 3 5\\n\") == \"45\"\nassert solution(\"7 3 1\\n2 6 3\\n\") == \"210\"\nassert solution(\"2 4 1\\n4 2 5\\n\") == \"60\"\nassert solution(\"10 8 6\\n8 4 2\\n\") == \"124\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 7\") == \"168\\n\"\nassert solution(\"5 2 2\") == \"36\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution returned {solution(input())}, expected {output}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution()) == \"168\"\nassert solution(solution(\"10 4 7\")) == \"168\"\nassert solution(solution(\"5 2 2\")) == \"36\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 10\") == 7\nassert solution(\"2\\n3 8\\n5 8\") == 1",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 10\\n\") == 7\nassert solution(\"2\\n3 8\\n5 8\\n\") == 1",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 10\") == \"7\\n\", \"Solution 1 failed\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\\n\", \"Solution 2 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 10\\nSample Input 1:\\n1\\n3 10\\nSample Output 1:\\n7\\n\") == \"7\\n\"\nassert solution(\"2\\n3 8\\n5 8\\nSample Input 2:\\n2\\n3 8\\n5 8\\nSample Output 2:\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 10\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 7, \"The code is not correct\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Perket\") == \"7\\n\", \"Perket should be 7\"\nassert solution(\"Sample Input 1\") == \"7\\n\", \"Sample Input 1 should be 7\"\nassert solution(\"Sample Input 2\") == \"1\\n\", \"Sample Input 2 should be 1\"",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\n\") == \" raise your right hand.Lower your right hand.Raise your left hand.\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\nSample Output 1:\\n smile.\\n\\nSample Input 2:\\n3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\nSample Output 2:\\n raise your right hand. raise your left hand.\\n') =='smile.\\n raise your right hand. raise your left hand.\\n'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\n\nfrom typing import List",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. Lower your right hand. raise your left hand.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(stdin=\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. Lower your right hand.\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nSimon says smile.\\n2\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" smile. raise your right hand. raise your left hand.\\n\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5, \"Output should be 5.\"\nassert solution(\"1 2 4 6 10 12 16 18\") == 0, \"Output should be 0.\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == 5, \"Expected output: 5, got: \" + solution('0 0 4 6 10 12 16 18')",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\", \"Expected output: 5\\nGot: \" + solution()\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5, \"Incorrect output\"\nassert solution(\"1 2 4 6 10 12 16 18\") == 0, \"Incorrect output\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\\n\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nA\\nA\\aG\\dT\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\aG\\dT\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(input_2) == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nA\\nA\\aG\\aT\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\aG\\aT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n0 1\\n1 2\\n2 3'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n0 1\\n1 2\\n2 3'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == expected1, f\"Expected: {expected1}\\nGot: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected: {expected2}\\nGot: {solution(input2)}\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n\nfrom collections import Counter",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"aaaa\") == \"a\"\nassert solution(r\"ab\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 0\nassert solution(open('input.txt', 'r').read()) == 0\nassert solution(\"aaaa\") == 0\nassert solution(\"ab\") == -1",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Incorrect output for sample 1\"\nassert solution(\"ab\") == -1, \"Incorrect output for sample 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_1\nassert solution(input_2) == expected_2\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!\\n'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input {input()} is not equal to output {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!\\n'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(sample_input_2) == \"Dr. Chaz needs 1 more piece of chicken!\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '''\n-2\n'''\n\nassert solution('''\n3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '''\n0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"-2\\n\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Your code is not correct. Expected output is: {expected_output}, but got: {solution}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '0\\n'\nassert solution(r'3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n') == '-2\\n'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"kala\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'kala'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Expected output: {}. Got: {}.\"\nassert solution(sample_input_2) == expected_output_2, \"Expected output: {}. Got: {}.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'kala'\nprint('All tests passed!')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"kala\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"kala\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"as\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'kala'\nassert solution(input()) == 'as'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n\nassert solution(stdin='''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WNMWMME\") == \"10\", \"Test case 1 failed\"\nassert solution(\"NSEW\") == \"4\", \"Test case 2 failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution for {input()} is incorrect, expected {output}, but got {solution(input())}.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Test Case 1 failed\"\nassert solution(\"NSEW\") == 4, \"Test Case 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"WNEENWEENEENE\") == \"10\", \"Your solution is incorrect.\"\nassert solution(stdin=\"NSEW\") == \"4\", \"Your solution is incorrect.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '10'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Incorrect output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Test case 1 failed\"\nassert solution(\"NSEW\") == 4, \"Test case 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10\nassert solution(\"NSEW\") == 4",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('WNEENWEENEENE') == 10, \"Test 1 failed\"\nassert solution('NSEW') == 4, \"Test 2 failed\"\n\nfrom typing import List\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"1 - 2 = 3 - 4\n1 / 2 = 3 / 4\n0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"0 0\") == \"0 + 0 = 0\"\nassert solution(\"-0 0\") == \"0 - 0 = 0\"\nassert solution(\"-0 -0\") == \"0 - 0 = 0\"\nassert solution(\"1 2 -3 4\") == \"1 + 2 - 3 + 4 = 1 - 6\"\nassert solution(\"1 2 3 4 5 6\") == \"1 * 2 * 3 * 4 * 5 * 6 = 180\"\nassert solution(\"1 0 3 4 5 6\") == \"1 - 3 + 5 = 2\"\nassert solution(\"1 2 0 3 4 5 6\") == \"1 - 2 * 4 = 3\"\nassert solution(\"1 2 3 4 0 5 6\") == \"1 - 2 * 4 + 6 = 7\"\nassert solution(\"1 2 3 4 5 0 6\") == \"1 - 2 * 4 + 6 = 7\"\nassert solution(\"1 2 3 4 5 6 0\") == \"1 - 2 * 4 + 6 = 7\"\nassert solution(\"1 2 3 4 5 6 7 0\") == \"1 - 2 * 4 + 6 + 7 = 10\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 - 2 * 4 + 6 + 7 + 8 = 13\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 = 16\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 = 19\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 = 22\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 + 12 = 25\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 = 28\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 = 31\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 = 34\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"1 - 2 * 4 + 6 + 7 + 8 + 9 + 10 + 11 + 12",
        "num_ids_2": 98,
        "num_ids_4": 134
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n', 'Sample Input 1'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n', 'Sample Input 2'\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test case failed\"\nfor _ in range(5):\n    a, b, c, d = map(int, input().split())\n    if a == 0 and b == 4 and c == 2 and d == 2:\n        print(f\"{a} {b} {c} {d} = {a} {b} {c} {d}\")\n    else:\n        print(\"problems ahead\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\\n0 4 2 2\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"0 4 2 2\\n0 4 2 2\\n\") == \"problems ahead\"\nassert solution(\"0 4 2 0\\n0 4 2 0\\n\") == \"problems ahead\"",
        "num_ids_2": 124,
        "num_ids_4": 152
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4\\n0 4 2 2\\n') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\n\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..\\n.A..def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANA\\n.M....\\n.A....\\n\"\n\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\nA..def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\", \"Test 1 Failed\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..TATA\\n.T..TATA\\n.A..def solution(stdin: str) -> str:\\npass\\n\", \"Test 2 Failed\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..TATA\\n.A..def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"C.P....\\n.I....\\n.D....\\n.Z....\\nB.N....\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..T.A.\\n.T..T.A.\\n.T..A.D.\\n.T..D.F.\\n.T..F.P.\\n.T..P.Z.\\n.T..Z.E.\\n.T..E.C.\\n.T..C.A.\\n.T..A.M.\\n.T..M.A.\\n.T..A.M.\\n.T..M.A.\\n.T..A.M.\\n\"\n",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n\nassert solution('MAMA TATA') == \"\"\"\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\n\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"365\", \"Test failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"10\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\\n\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\\n\") == \"365\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"365\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    10 14\n    13 17\n    25 26\n    ''') == '10\\n'\n\nassert solution('''\n    2\n    1 365\n    20 28\n    ''') == '365\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\\n\", \"Expected Output: 10\\nActual Output: \" + str(solution(stdin)) + \"\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 10, \"Solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10\\n'\nassert solution('2\\n1 365\\n20 28') == '365\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\", \"Test 1\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Test 2\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Test case failed for {input()}.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2 3\", \"Test Case 1\"\nassert solution(4) == \"2 3\", \"Test Case 2\"\nassert solution(5) == \"2 3\", \"Test Case 3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"0 1\", \"Sample Input 1\"\nassert solution(\"4\\n\") == \"2 3\", \"Sample Input 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1\\n') == '0 1\\n', \"Solution should return 0 1\"\nassert solution(stdin='4\\n') == '2 3\\n', \"Solution should return 2 3\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nGot output: {solution(stdin)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\", \"Sample Input 1\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Sample Input 2\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0 1'\nassert solution() == '2 3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case not passing!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected: {expected_output}, Got: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''\nB 100 49\nA 1 197\nA 49 100\n0.1965897693\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100 0.1965897693\\n'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == \"168\"\nassert solution(\"2\\n1\\n1\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"168\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 168, \"Incorrect result for sample input 1\"\n\nassert solution(2) == 1, \"Incorrect result for sample input 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == \"168\"\nassert solution(\"2\\n1\\n1\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0\\n') == 'CBADEF\\n'\nassert solution('3 3\\nABC\\nDEF\\n2\\n') == 'CDBEAF\\ndef solution(stdin: str) -> str: def solution(stdin: str) -> str: pass'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3, \"ABC\", 0) == \"CBADEF\", \"Test Case 1\"\nassert solution(3, 3, \"ABC\", 2) == \"CDBEAF\", \"Test Case 2\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\\n\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3, 3, \"ABC\", \"DEF\", 0]) == \"CBADEF\"\nassert solution([3, 3, \"ABC\", \"DEF\", 2]) == \"CDBEAF\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'defgabcdef'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, \"ABC\") == \"CBADEF\"\nassert solution(3, 3, \"DEF\") == \"CDBEAF\"\nassert solution(3, 3, \"DEF\", 2) == \"CDBEAF\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'CBADEF', 'Test Failed'\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"CBADEF\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'CBADEF'\nassert solution() == 'CDBEAF'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == 'CDBEAF'\nassert solution(open('test_input2.txt', 'r')) == 'CDBEAF'\nassert solution(open('test_input3.txt', 'r')) == 'CDBEAF'",
        "num_ids_2": 45,
        "num_ids_4": 68
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\"\n\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Your solution is incorrect. Expected output is: 5\\n, but got: \" + str(solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\"))",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\\n\", \"Test 2 failed\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"The numbered label of the player who had the box when it finally exploded should be 5.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\", \"Test case 1 failed.\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\", \"Test case 2 failed.\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '5'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\\n\", \"First example\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\\n\", \"Second example\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Test 2 failed\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output 2\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"6\\n\"\nassert solution(\"6 8\") == \"22\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6\\n'\nassert solution('6 8') == '22\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n6 8\\n\") == \"6\\n\"\n\nassert solution(\"6 8\\n4 3\\n\") == \"22\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3') == '6', \"Sample Input 1\"\nassert solution('6 8') == '22', \"Sample Input 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"22\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"TODO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 3\\n6 8\\n') == '22'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1\\n'\nassert solution('1 4\\n4 3 2 1') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"1 4\n4 3 2 1\n\"\"\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1\\n'\nassert solution('1 4\\n4 3 2 1') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"1\\n\"\nassert solution(input_2) == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\", \"Incorrect output 1\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\", \"Incorrect output 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"28\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"10\\n3\\n4\\n6\\n2\\n\") == \"28\"\nassert solution(stdin=\"10\\n3\\n10\\n2\\n12\\n\") == \"16\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output()",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\\n\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 28, \"The correct answer is 28\"\nassert solution(10) == 16, \"The correct answer is 16\"\nassert solution(10) == 16, \"The correct answer is 16\"\nassert solution(10) == 16, \"The correct answer is 16\"\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Testcase failed: expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2\\n') == '28', \"Test 1 failed\"\nassert solution('10\\n3\\n10\\n2\\n12\\n') == '16', \"Test 2 failed\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10\n    3\n    4\n    6\n    2\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    10\n    3\n    10\n    2\n    12\n    \"\"\"\n) == \"16\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test case 1 failed\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Expected hiss but got: {}\".format(solution(\"amiss\"))\nassert solution(\"octopuses\") == \"no hiss\", \"Expected no hiss but got: {}\".format(solution(\"octopuses\"))\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Input 1: amiss\"\nassert solution(\"octopuses\") == \"no hiss\", \"Input 2: octopuses\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"The correct output should be 3.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"Output should be 3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 5",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: 3, but got: {}\".format(solution(stdin))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(read_input()) == \"3\", \"Output: 3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4, 5]) == '3'\nassert solution([1, 2, 3, 4, 5, 1, 2]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == '5'\nassert solution([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]) == '5'",
        "num_ids_2": 50,
        "num_ids_4": 133
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == \"3\\n\"\nassert solution(open('sample_input2.txt', 'r')) == \"5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"c++\\nC++\\nc\\nc#\") == \"3\"\nassert solution(\"cryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\") == \"5\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == 21, 'Test case 1 failed'\nassert solution('CCC') == 9, 'Test case 2 failed'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Test case 1 failed\"\nassert solution(\"CCC\") == \"9\", \"Test case 2 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == 21, \"The expected output is not as expected\"\nassert solution(\"CCC\") == 9, \"The expected output is not as expected\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('TCGTTC') == 21, \"The answer should be 21\"\nassert solution('CCC') == 9, \"The answer should be 9\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}, expected output: {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"The output should be '21'.\"\nassert solution(\"CCC\") == \"9\", \"The output should be '9'.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n315\n45\n''') == '''\n90\n'''\n\nassert solution('''\n180\n270\n''') == '''\n90\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('315') == '90', \"Incorrect solution for sample input 1\"\nassert solution('180') == '90', \"Incorrect solution for sample input 2\"\n\nfrom math import radians, sin, cos, atan2",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\", \"jonas is not animating the needle correctly\"\nassert solution(\"180\\n270\\n\") == \"90\\n\", \"jonas is not animating the needle correctly\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(315) == 90\nassert solution(45) == 90\nassert solution(180) == 90\nassert solution(270) == -180\n\nfrom math import atan2",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"315\\n45\") == \"90\", \"Test 1 failed\"\nassert solution(\"180\\n270\") == \"90\", \"Test 2 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '90', \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == '90', \"Incorrect output for sample input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('315\\n45\\n') == '90', \"Incorrect output\"\nassert solution('180\\n270\\n') == '90', \"Incorrect output\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\\n\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\\n\") == \"1\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3', \"Output does not match the expected output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 3\nassert solution(open('sample_input.txt', 'r')) == 1",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99\\n') == 3\nassert solution('5\\n11\\n20\\n33\\n40\\n55\\n') == 1",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('WWBWBB') == 1, \"Test case 1\"\nassert solution('WWWWBBW') == 0, \"Test case 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('WWBWBB') == '1', 'Test Case 1'\nassert solution('WWWWBBW') == '0', 'Test Case 2'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor _ in range(1):\n    input_1, output_1 = 'WWBWBB', 1\n    input_2, output_2 = 'WWWWBBW', 0\n    input_3, output_3 = 'WBBBWW', 1\n    input_4, output_4 = 'WBBBWBW', 0\n    input_5, output_5 = 'WBWBBW', 0\n    input_6, output_6 = 'WBBBWBW', 1\n    input_7, output_7 = 'WBWBBW', 1\n    input_8, output_8 = 'WWWBBW', 0\n    input_9, output_9 = 'WWWBBB', 1\n    input_10, output_10 = 'WWWBBW', 1\n    input_11, output_11 = 'WBBWBB', 0\n    input_12, output_12 = 'WBBWWW', 0\n    input_13, output_13 = 'WBBWWW', 1\n    input_14, output_14 = 'WBBWWW', 1\n    input_15, output_15 = 'WBBWWW', 1\n    input_16, output_16 = 'WBBWWW', 1\n    input_17, output_17 = 'WBBWWW', 1\n    input_18, output_18 = 'WBBWWW', 1\n    input_19, output_19 = 'WBBWWW', 1\n    input_20, output_20 = 'WBBWWW', 1\n    input_21, output_21 = 'WBBWWW', 1\n    input_22, output_22 = 'WBBWWW', 1\n    input_23, output_23 = 'WBBWWW', 1\n    input_24, output_24 = 'WBBWWW', 1\n    input_25, output_25 = 'WBBWWW', 1\n    input_26, output_26 = 'WBBWWW', 1\n    input_27, output_27 = 'WBBWWW', 1\n    input_28, output_28 = 'WBBWWW', 1\n    input_29, output_29 = 'WBBWWW', 1\n    input_30, output_30 = 'WBBWWW', 1\n    input_31, output_31 = 'WBBWWW', 1\n    input_32, output_32 = 'WBBWWW', 1\n    input_33, output_33 = 'WBBWWW', 1\n    input_34, output_34 = 'WBBWWW', 1\n    input_35, output_35 = 'WBBWWW', 1\n    input_36, output_36 = 'WBBWWW', 1\n    input_37, output_37 = 'WBBWWW', 1\n    input_38, output_38 = 'WBBWWW', 1\n    input_39, output_39 = 'WBBWWW', 1\n    input_40, output_40 = 'WBBWWW', 1\n    input_41, output_41 = 'WBBWWW', 1\n    input_42, output_42 = 'WBBWWW', 1\n    input_43, output_43 = 'WBBWWW', 1\n    input_44, output_44 = 'WBBWWW', 1\n    input_45, output_45 = 'WBBWWW', 1\n    input_46, output_46 = 'WBBWWW', 1\n    input_47, output_47 = 'WBBWWW', 1\n    input_48, output_48 = 'WBBWWW', 1\n    input_49, output_49 = 'WBBWWW', 1\n    input_50, output_50 = 'WBBWWW', 1\n    input_51, output_51 = 'WBBWWW', 1\n    input_52, output_52 = 'WBBWWW', 1\n    input_53, output_53 = 'WBBWWW', 1\n    input_54, output_54 = 'WBBWWW', 1\n    input_55",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test 1 failed\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test 2 failed\"\nassert solution(\"WWWWWW\") == \"0\", \"Test 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WWBWBB\") == \"1\\n\"\nassert solution(\"WWWWBBW\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.299038105676658\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 3\") == 9, \"The solution is incorrect.\"\nassert solution(\"1 2 1 1\") == 1.299038105676658, \"The solution is incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 9",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\", \"Your solution should return 9.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Input {stdin} should give output {expected}, but got {solution(stdin=input())}.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.299038105676658\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 3 3 3\n\"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n1 2 1 1\n\"\"\"\n) == \"1.299038105676658\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 3\\n\") == 9\nassert solution(\"1 2 1 1\\n\") == 1.299038105676658\nassert solution(\"4 2 2 1\\n\") == 11.467901680675394",
        "num_ids_2": 50,
        "num_ids_4": 84
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\", \"Test 1 failed\"\nassert solution(\"rooobert\") == \"robert\", \"Test 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"robert\") == \"robert\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\", \"Test 1 failed\"\nassert solution(\"1000 900 7\") == \"Impossible\", \"Test 2 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1000, 9, 7) == \"108 4\", \"Peter is expecting a large shipment of fuel oil, but he has a small problem (doesn't everyone in these programming problems!).\"\nassert solution(1000, 900, 7) == \"Impossible\", \"Peter thinks he has solved this problem for his given bottle sizes, but he often spends hours wondering what would happen if his bottles had different volumes.\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4\\n', \"The solution is incorrect\"\nassert solution('1000 900 7') == 'Impossible\\n', \"The solution is incorrect\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1000 9 7\\n\") == \"108 4\\n\"\nassert solution(stdin=\"1000 900 7\\n\") == \"Impossible\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"1000 9 7\\n1000 900 7\\n\") == \"108 4\\n\"\nassert solution(input_str=\"1000 9 8\\n1000 900 7\\n\") == \"Impossible\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'\n\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\", \"Test 1 failed\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\", \"Test 2 failed\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 4\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0\\n'\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1\\n1\\n2\\n1\\n0\\n\\n2\\n0\\n\\n1\\n0\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1\\n1\\n2\\n1\\n0\\n\\n2\\n0\\n\\n1\\n0\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\n0\\\\n0\\\\n0\\\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\'4 4\\n#..#\\' == \\'1\\\\n1\\\\n2\\\\n1\\\\n0\\\\n\\')\\nassert solution(\\'4 4\\n....\\n....\\n....\\n....\\n....\\n\\' == \\'9\\\\n0\\\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n#..#\\n..X. \\n..X. \\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n9\\n0\\n0\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1953566\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\\n\"\nassert solution(\"2\\n212\\n1253\") == \"1953566\\n\"\nassert solution(\"2\\n1\\n2\") == \"1\\n\"\nassert solution(\"3\\n1\\n2\\n3\") == \"6\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\") == \"15\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n100000\") == \"1020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 63,
        "num_ids_4": 102
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()} expected output {expected_output}, got {solution(input())}.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == '1953566\\n', \"The given input is incorrect. Please provide the task as described above.\"\n\nsolution(str(input()))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\", \"Test 1\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\", \"Test 2\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n212\\n1253\") == 1953566\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == 102",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1953566\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1953566\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.000000 0.000000 0.000000\", \"Solution should return 0.000000 0.000000 0.000000\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\", \"Test 1 failed\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\", \"Test 2 failed\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"10 10 10\\n3 3 3\\n\")) == \"0.000000 0.000000 0.000000\\n\"\nassert solution(input(\"9 9 9\\n3 2 1\\n\")) == \"0.000000 3.000000 6.000000\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\", \"Mirko and Slavko bought a few liters of orange, apple and pineapple juice, but they did not plan to use the recipe they found on the Internet.\\nCorrect solution:\\n0.000000 0.000000 0.000000\"\n\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\", \"Mirko and Slavko bought a few liters of orange juice, but they did not plan to use the recipe they found on the Internet.\\nCorrect solution:\\n0.000000 3.000000 6.000000\"",
        "num_ids_2": 239,
        "num_ids_4": 239
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the string: \")) == \"b\", \"The given input is incorrect.\"\nprint(\"Sample Output 1: \", solution(\"a<bc<\"))\n\nsolution = lambda s: \"b\" if s.endswith(\"<\") else \"f\" + s.lower()\n\nassert solution(\"a<bc<\") == \"b\", \"The given input is incorrect.\"\nprint(\"Sample Output 2: \", solution(\"foss<<rritun\"))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"a<bc<\") == \"b\"\nassert solution(stdin=\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"Test case 1 failed\"\nassert solution('Mirko-Slavko') == 'MS', \"Test case 2 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\", \"Error in solution 1\"\nassert solution(\"Mirko-Slavko\") == \"MS\", \"Error in solution 2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', 'Knuth-Morris-Pratt'\nassert solution('Mirko-Slavko') == 'MS', 'Mirko-Slavko'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"Test 1 failed\"\nassert solution('Mirko-Slavko') == 'MS', \"Test 2 failed\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"Invalid output. Expected 'KMP', got '{}'\".format(solution('Knuth-Morris-Pratt'))\nassert solution('Mirko-Slavko') == 'MS', \"Invalid output. Expected 'MS', got '{}'\".format(solution('Mirko-Slavko'))",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 0\n''') == 'Estate or Copper'\nassert solution('''\n2 1 0\n''') == 'Province or Gold'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\", \"Sample Output 1\"\nassert solution(\"2 1 0\") == \"Province or Gold\", \"Sample Output 2\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(f\"0 1 0\") == \"Estate or Copper\\n\", \"Test case 1 failed\"\nassert solution(f\"2 1 0\") == \"Province or Gold\\n\", \"Test case 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 1 0') == 'Estate or Copper', \"Test Case 1 failed\"\nassert solution('2 1 0') == 'Province or Gold', \"Test Case 2 failed\"\nassert solution('1 3 0') == 'Estate or Copper', \"Test Case 3 failed\"\nassert solution('0 0 1') == 'Estate or Copper', \"Test Case 4 failed\"\nassert solution('2 0 1') == 'Estate or Copper', \"Test Case 5 failed\"\nassert solution('0 0 0') == 'Estate or Copper', \"Test Case 6 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Estate or Copper\", \"Test case 1 failed.\"\n\nassert solution(stdin) == \"Province or Gold\", \"Test case 2 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\") == \"Province or Gold\\n\"\nassert solution(\"0 2 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 2 0\") == \"Estate or Copper\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 0\\n2 1 0') == 'Estate or Copper\\n'\nassert solution('2 1 0\\n0 1 0') == 'Province or Gold\\n'\nassert solution('0 2 0\\n2 1 0') == 'Estate or Copper\\n'\nassert solution('2 1 0\\n0 2 0') == 'Estate or Copper\\n'",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 1 0') == 'Estate or Copper', 'Sample Input 1'\nassert solution('2 1 0') == 'Province or Gold', 'Sample Input 2'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_stream) == expected_output, f\"Test case failed. Expected output: {expected_output}, got {solution(input_stream)}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Input {stdin} does not match the output {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n70 50\") == \"90.00\"\nassert solution(\"10 3\\n80 90\") == \"75.7142857\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\n\nimport math",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 90.00, \"Your solution is incorrect. Please check the example outputs.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '90.00'\nassert solution(sample_input_2) == '75.7142857'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt')) == \"90.00\"\nassert solution(open('input2.txt')) == \"75.7142857\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"90.00\"\nassert solution(open(\"input2.txt\", \"r\")) == \"75.7142857\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\\n\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"4\\n2 3 5 7\"\nassert solution(2) == \"5\\n1 2 3 4 5\"\nassert solution(3) == \"5\\n1 2 3 4 5\"\nassert solution(4) == \"5\\n1 2 3 4 5\"\nassert solution(5) == \"5\\n1 2 3 4 5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output will be printed here\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Test case 1\"\nassert solution(\"0 30\") == \"23 45\", \"Test case 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Input and output do not match\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 10') == '9 25\\n'\nassert solution('0 30') == '23 45\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Test case 1 failed.\"\nassert solution(\"0 30\") == \"23 45\", \"Test case 2 failed.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.414214\"\nassert solution(input()) == \"1.000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.000000\") == \"1.414214\", \"Sample Input 1: 2.000000\"\nassert solution(\"1.000000\") == \"1.000000\", \"Sample Input 2: 1.000000\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2.000000') == '1.414214', \"Output 1 incorrect.\"\nassert solution('1.000000') == '1.000000', \"Output 2 incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, \"Test Failed\"\nfor i in range(10):\n    assert solution(stdin=input()) == output, \"Test Failed\"\n    output = input()\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.000000) == 1.414214\nassert solution(1.000000) == 1.0",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=2.0) == '1.414214'\nassert solution(stdin=1.0) == '1.0'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3:\\n2,1\\n\"\nassert solution(50) == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '3\\n2,1\\n'\nassert solution('50') == '50\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test failed. Expected: {}\\nGot:       {}\".format(output, solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n50\\n\") == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"\nassert solution(\"50\\n\") == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"50:2,1\\n2,2:2,1\\n2,2:2,2\\n3,2:3,2\\n5,4:5,4\\n5,5:5,5\\n6,5:6,5\\n10,10:10,10\\n13,12:13,12\\n17,16:17,16\\n25,25:25,25\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3:\\n2,1\"\nassert solution(50) == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == '3:2,1\\n'\nassert solution('50') == '50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"50\") == \"50\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3:\" + \"\\n\" + \"2,1\"\nassert solution(50) == \"50:\" + \"\\n\" + \"2,1\" + \"2,2\" + \"3,2\" + \"5,4\" + \"5,5\" + \"6,5\" + \"\\n\" + \"10,10\" + \"13,12\" + \"17,16\" + \"25,25\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"3:\\n2,1\\n\"\nassert solution(\"50\\n\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The first test case is incorrect.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The second test case is incorrect.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\", \"The third test case is incorrect.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN WITH THE PLAIN\") == \"no\", \"The fourth test case is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 109
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The function should return 'yes' if no word is repeated, and 'no' if one or more words repeat.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The function should return 'no' if no word is repeated, and 'yes' if one or more words repeat.\"\n\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\", \"The function should return 'yes' if no word is repeated, and 'no' if one or more words repeat.\"",
        "num_ids_2": 82,
        "num_ids_4": 127
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The solution should return 'yes' if no word is repeated\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The solution should return 'no' if one or more words repeat\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The solution should return 'yes' if no word is repeated.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The solution should return 'no' if one or more words repeat.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The solution should return 'yes' if no word is repeated.\"\n\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The solution should return 'no' if one or more words repeat.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\", \"The phrase 'THE RAIN IN SPAIN' should not repeat\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The phrase 'IN THE RAIN AND THE SNOW' should not repeat\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\", \"The phrase 'THE RAIN IN SPAIN IN THE PLAIN' should repeat\"\nassert solution(\"EVEN IF WE KNEW WE'D BE\") == \"yes\", \"The phrase 'EVEN IF WE KNEW WE'D BE' should repeat\"",
        "num_ids_2": 64,
        "num_ids_4": 140
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The given test case should return 'yes' for the phrase 'THE RAIN IN SPAIN'.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The given test case should return 'no' for the phrase 'IN THE RAIN AND THE SNOW'.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS', 'Incorrect Output'\nassert solution('RBLLLBRR') == 'CHCS', 'Incorrect Output'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS', 'Sample Input 1'\nassert solution('RBLLLBRR') == 'CHCS', 'Sample Input 2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Incorrect Output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS', \"The output is not as expected.\"\nassert solution('RBLLLBRR') == 'CHCS', \"The output is not as expected.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(sample_input2) == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution {solution(input())} does not match the expected output {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == [\"1\", \"Fizz\", \"Buzz\", \"Fizz\", \"5\", \"FizzBuzz\", \"7\"]\nassert solution(\"2 4 7\") == [\"1\", \"Fizz\", \"3\", \"FizzBuzz\", \"5\", \"Fizz\", \"7\"]\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but the function returned {solution(input())}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Output is incorrect. Got: {solution(input())}, Expected: {output()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test Case 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test Case 2\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution() == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(sample_input_2) == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution() == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_num} failed: {solution(stdin)}!= {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {case} failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: Input '{input()}'\\nOutput: {output()}\"\nprint(\"Test case passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n10 10\\n\") == \"2\\n7\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    10 2\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    10 10\n    \"\"\"\n) == 7",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"10 10\") == \"7\\n\", \"Test 2 failed\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\") == \"2\", \"Your solution is incorrect\"\nassert solution(\"10 10\") == \"7\", \"Your solution is incorrect\"\nassert solution(\"10 0\") == \"Invalid input\", \"Your solution is incorrect\"",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1: \\\"bok\\\" should output \\\"bok\\\"\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2: \\\"koaski\\\" should output \\\"kakosi\\\"\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(\"bok\"))))))) == \"bok\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test case 1 failed\"\nassert solution(\"koaski\") == \"kakosi\", \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\", \"Error: Solution 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Error: Solution 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1: The encrypted message is not 'bok'.\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2: The encrypted message is not 'kakosi'.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"8 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution({stdin})!= expected_output({expected_output})\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 2\\n8 2\", \"Sample Input 1\"\nassert solution(stdin) == \"3 2\\n8 3\", \"Sample Input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"8 2\"\nassert solution(3) == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"8 2\", \"Please provide the correct input\"\nassert solution(7) == \"8 3\", \"Please provide the correct input\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected: {}, Got: {}\".format(output(), solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8 2', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"def rain\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"aught ought aut acht\") == \"YES\"\nassert solution(\"difficult route\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\nYES\nNO\n'''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"YES\nYES\nYES\nYES\nNO\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"eet\") == \"YES\"\nassert solution(\"difficult\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\nassert solution(\"forever in doubt\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\", \"Incorrect output: 'HANGMAN' -> 'WIN'\"\nassert solution(\"BANANA\") == \"LOSE\", \"Incorrect output: 'BANANA' -> 'LOSE'\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', \"Test 1 failed\"\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', \"Test 2 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"HANGMAN\") == \"WIN\"\nassert solution(r\"BANANA\") == \"LOSE\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', 'Invalid output for \"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\"'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', 'Invalid output for \"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\"'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"DECREASING\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'DECREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING', \"Test case 1 failed\"\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER', \"Test case 2 failed\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"DECREASING\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"NEITHER\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"DECREASING\"\nassert solution(stdin) == \"DECREASING\"\nassert solution(stdin) == \"DECREASING\"\nassert solution(stdin) == \"DECREASING\"\nassert solution(stdin) == \"DECREASING\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"HOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER'",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\\n\", \"Test case 1 failed\"\nassert solution(stdin=\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\\n\", \"Test case 2 failed\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING', \"Test 1: Incorrect output\"\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER', \"Test 2: Incorrect output\"\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['JOE', 'BOB', 'ANDY', 'AL', 'ADAM']) == 'DECREASING'\nassert solution(['HOPE', 'ALI', 'BECKY', 'JULIE', 'MEGHAN', 'LAUREN', 'MORGAN', 'CARLI', 'MEGAN', 'ALEX', 'TOBIN']) == 'NEITHER'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"\n",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n    \"\"\"\n) == \"\"\"\nGeorge wins!\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    \"\"\"\n) == \"\"\"\nNina wins!\nJess wins!\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == ['George wins!', 'Nina wins!', 'Jess wins!']\nprint('All test cases pass!')",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed. Input: {stdin}, Output: {output}, Diff: {output!= stdin}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"John\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"Bob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"\nassert solution(\"John\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"No winner!\\n\"",
        "num_ids_2": 205,
        "num_ids_4": 303
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\n\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\\n4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\\n5 10 13\\nAlice\\nBob\\nCharlie\\nDavid\\nAlice 2\\nBob 2\\nCharlie 1\\nDavid 1\\nBob 2\\nCharlie 2\\nCharlie 1\\nBob 2\\nCharlie 3\\nBob 2\\nCharlie 2\\nDavid 2\\nCharlie 1\\nDavid 2\\nCharlie 3\\nCharlie 2\\nDavid 2\\nCharlie 3\\nCharlie 3\\nCharlie 2\\nDavid 2\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 2\\nCharlie 3\\nCharlie 3\\nCharlie 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\nCharlie 2\\nDavid 3\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.0\" # your code here",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2.0\"\nassert solution(sample_input2) == \"2.0\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\\n\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\", \"Test 1\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\", \"Test 2\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0\", \"Test 1\"\nassert solution(stdin) == \"2.0\", \"Test 2\"\nassert solution(stdin) == \"2.0\", \"Test 3\"\nassert solution(stdin) == \"2.0\", \"Test 4\"\nassert solution(stdin) == \"2.0\", \"Test 5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2.0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 0 0 2 7 6\") == \"2.0\", \"Sample Input 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"7 3 0 0 5 4\\n6 0 0 2 7 6\\n\") == \"2.0\\n\"\nassert solution(stdin=\"1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"1.0\\n\"\nassert solution(stdin=\"1 2 3 4 5 6\\n1 2 3 4 5 6\\n\") == \"0.5\\n\"\nassert solution(stdin=\"1 2 3 4 5 6\\n1 2 3 4 5 7\\n\") == \"1.0\\n\"\nassert solution(stdin=\"1 2 3 4 5 6\\n1 2 3 4 5 7\\n\") == \"1.5\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output(), \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(156) == 165, \"The correct answer for sample input 1 is 165\"\nassert solution(330) == 0, \"The correct answer for sample input 2 is 0\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Input: {stdin}, Expected Output: {expected_output}, Actual Output: {solution(stdin)}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor _ in range(test_cases):\n    X = int(input())\n    if solution(X) == \"0\":\n        break\n    else:\n        result = solution(X)\n        print(result)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected {expected_output}, got {solution(stdin=input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"4\\n\"\nassert solution(input2) == \"3\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\\n\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\\n\"\nassert solution(\"5 5\\n150000 100000 160000 100000 180000 190000 195000\\n199999 180000 170000 120000 190000 195000 198000\\n199999 180000 170000 120000 190000 195000 198000 199000\\n199999 180000 170000 120000 190000 195000 198000 199000 200000\") == \"6\\n\"",
        "num_ids_2": 151,
        "num_ids_4": 386
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4\\n'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3\\n'",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin2), \"Incorrect Output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"10\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Solution: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\"\nassert solution(stdin=\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\"\nassert solution(stdin=\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\"\nassert solution(stdin=\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, \"Test failed\"\nfor input_string, expected_output in [\n    (\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", 10),\n    (\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\", 1),\n]:\n    assert solution(input_string) == expected_output, f\"Test failed for input: {input_string}\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\", \"Test failed for sample input 1\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\\n\", \"Test failed for sample input 2\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\", \"Input 1 is invalid\"\nassert solution(\"2\") == \"0\", \"Input 2 is invalid\"\nassert solution(\"3\") == \"1\", \"Input 3 is invalid\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '6'\nassert solution('42') == '1'\nassert solution('420') == '1'\nassert solution('840') == '2'\nassert solution('252') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output {output} does not match the expected output {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"10\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"6\\n\"\nassert solution(\"42\") == \"1\\n\"\nassert solution(\"84\") == \"1\\n\"\nassert solution(\"252\") == \"1\\n\"\nassert solution(\"420\") == \"1\\n\"\nassert solution(\"840\") == \"1\\n\"\nassert solution(\"126\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\\n\", \"Solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='13 3') == 'yes\\n', \"Sample Input 1: Expected 'yes', got '{}'.\".format(solution(stdin='13 3'))\nassert solution(stdin='1 0') == 'yes\\n', \"Sample Input 2: Expected 'yes', got '{}'.\".format(solution(stdin='1 0'))",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\", \"Your solution is incorrect. Please implement the `solution` function to test the correctness of the solution.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\nprint(\"pass\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='13 3') == 'yes\\n'\nassert solution(stdin='1 0') == 'yes\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'no', 'Expected output \"no\", but got \"{}\".'.format(solution(3))\nassert solution(1) == 'yes', 'Expected output \"yes\", but got \"{}\".'.format(solution(1))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == ['12', '12', '11', '13'], 'The solution should return [\"12\", \"12\", \"11\", \"13\"].'\n\nassert solution('H02H10P11H02') == ['GRESKA'], 'The solution should return [\"GRESKA\"].'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\", \"Input 1 not correct.\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\", \"Input 2 not correct.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"P01K02H03H04\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"H02H10P11H02\"\n\nfrom typing import List",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Test 1 failed\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Test 2 failed\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Incorrect solution\"\n\nprint(\"Output:\", solution(\"H02H10P11H02\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected '{output()}' but got '{solution(input())}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got '{solution(input())}' expected '{expected}'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the dimensions of the picture: \")) == \"1\"\nassert solution(input(\"Enter the dimensions of the picture: \")) == \"2\"\nassert solution(input(\"Enter the dimensions of the picture: \")) == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 5, 3) == 1\nassert solution(7, 6, 4) == 2",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == \"1\"\nassert solution(input2) == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"The first hand is not of the expected rank\"\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"The second hand is not of the expected rank\"\nassert solution(\"4C 4D 4H 4D 4H\") == 4, \"The third hand is not of the expected rank\"",
        "num_ids_2": 61,
        "num_ids_4": 95
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Please, check the code and the input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\\n\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\\n\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"Solution does not work correctly.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AC AD AH AS KD') == 4\nassert solution('2C 4D 4H 2D 2H') == 3",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5\\n'  # Example 1\nassert solution(stdin) == '7\\n'  # Example 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"5\\n\"\nassert solution(sample_input_2) == \"7\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '5', \"Your solution is incorrect. Please check the example input and output provided.\"\nassert solution(sample_input2) == '7', \"Your solution is incorrect. Please check the example input and output provided.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"5\"\nassert solution(2) == \"5\"\nassert solution(3) == \"22\"\nassert solution(4) == \"55\"\nassert solution(5) == \"211\"\nassert solution(6) == \"1111\"\nassert solution(7) == \"1111111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"5\", \"Test 1 failed\"\nassert solution(sample_input2) == \"7\", \"Test 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5\\n', \"Solution 1 failed\"\nassert solution('5 1\\n0 0 0 0 0') == '7\\n', \"Solution 2 failed\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"5\"\nassert solution(sample_input2) == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$.\\\\//\\\\//[-]@()['$ ']['['[-]3 #|Z3(,)|_|3[]\\\\[][](`
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\"), \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$.",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[6 ']['0 |_|$.\\\\/\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[](`/, \\\\<3[]\\\\[[\\\\]]3']['[-]?\\\\/\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[](`/, |<3[]\\\\[\\\\[]\\\\[]3']['[-]? \"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\".replace(\" \", \"\")\nassert solution(\"What's the Frequency, Kenneth?\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\".replace(\" \", \"\")",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"[] 11 8310[ email\u00a0protected ] [ ] 6 \\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\\\[][]\\\\[]3']['[-]? \\n\"\nassert solution(\"Hello World!\\n\") == \"[-]3110 \\/\\/0|Z1|)! \\n\"\n\nimport re",
        "num_ids_2": 92,
        "num_ids_4": 120
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"All your base are belong to us.\"\n) == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \"\n\nassert solution(\n\"What's the Frequency, Kenneth?\"\n) == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"All your base are belong to us.\\nWhat's the Frequency, Kenneth?\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.def solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1: \\nAll your base are belong to us.\\nSample Output 1: @11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \\n\\nSample Input 2: \\nWhat's the Frequency, Kenneth?\\nSample Output 2: \\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \\n\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 210,
        "num_ids_4": 210
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[]\\\\[](`/, |<3[]\\\\[][]\\\\[]3']['[-]? \"\n\nfrom typing import List\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"Alice\"\nassert solution(5) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Alice\", \"Test case 1 failed\"\nassert solution(2) == \"Bob\", \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Alice\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input(1)) == \"Alice\"\nassert solution(sample_input(2)) == \"Bob\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Alice', 'Your solution is not correct.'\nassert solution(2) == 'Bob', 'Your solution is not correct.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"Alice\"\nassert solution(10) == \"Bob\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1), \"Sample Input 1: Alice\"\nassert solution(2), \"Sample Input 2: Bob\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"this sentence has $ letters\") == \"this sentence has thirtyone letters \"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Expected output: {}\\nGot output: {}\".format(expected_output_1, solution(sample_input_1))\nassert solution(sample_input_2) == expected_output_2, \"Expected output: {}\\nGot output: {}\".format(expected_output_2, solution(sample_input_2))",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"thirty is the number of letters here\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"this\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters \"\nassert solution(\"is\\the\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"is\") == \"thirty is the number of letters here\\n\"\nassert solution(\"here\") == \"thirty is the number of letters here\\n\"\nassert solution(\"number\") == \"thirty is the number of letters here\\n\"\nassert solution(\"letters\") == \"this sentence has thirtyone letters\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"this\\nsentence\\nhas\\n$letters\\n\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"$this\\n$sentence\\n$has\\n$letters\\n\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"this\\nsentence\\nhas\\n$letters\\n$\") == \"this sentence has thirtyone letters\\n",
        "num_ids_2": 66,
        "num_ids_4": 130
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nthis\\nsentence\\nhas\\n$letters') == 'this sentence has thirtyone letters '\nassert solution('7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere') == 'thirty is the number of letters here'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1\") == \"this sentence has thirtyone letters \"\nassert solution(\"Sample Input 2\") == \"thirty is the number of letters here\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    this\n    sentence\n    has\n    $\n    letters\n    \"\"\"\n) == \"this sentence has thirtyone letters \"\n\nassert solution(\n    \"\"\"\n    7\n    $\n    is\n    the\n    number\n    of\n    letters\n    here\n    \"\"\"\n) == \"thirty is the number of letters here\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5def\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Abcd') == 0, 'Expected 0, got {}'.format(solution('Abcd'))\nassert solution('EaEbFabG') == 5, 'Expected 5, got {}'.format(solution('EaEbFabG'))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Abcd') == 0, 'Test 1 failed'\nassert solution('EaEbFabG') == 5, 'Test 2 failed'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Abcd') == 0, 'Test 1: Abcd'\nassert solution('EaEbFabG') == 5, 'Test 2: EaEbFabG'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5def\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5def\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6\\n'\nassert solution('3 3') == 'Even 6\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6\\n', \"Test 1 Failed\"\nassert solution('3 3') == 'Even 6\\n', \"Test 2 Failed\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"Odd 6\", \"The output is not as expected\"\nassert solution(sample_input2) == \"Even 6\", \"The output is not as expected\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Test 1 failed\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Test 2 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Odd 6\\n', 'Incorrect Output'\nassert solution('3 3') == 'Even 6\\n', 'Incorrect Output'\nassert solution('') == 'Not a moose\\n', 'Incorrect Output'",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6\\n'\nassert solution('3 3') == 'Even 6\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"bull_moose.txt\", \"r\").read()) == \"Odd 6\"\nassert solution(open(\"odd_pointed_moose.txt\", \"r\").read()) == \"Odd 10\"\nassert solution(open(\"even_pointed_moose.txt\", \"r\").read()) == \"Even 12\"\nassert solution(open(\"moose.txt\", \"r\").read()) == \"Not a moose\"",
        "num_ids_2": 52,
        "num_ids_4": 103
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Test 1\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\ntomo\\nmono\\ndak\\n6666\\n') == '1\\n'\nassert solution(stdin='2\\nja\\nla\\n52\\n') == '2\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 1, \"Test case 1 failed\"\nassert solution(open(\"input2.txt\", \"r\").read()) == 2, \"Test case 2 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 1, \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tomo\") == 1\nassert solution(\"mono\") == 1\nassert solution(\"dak\") == 1",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\nassert solution(\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == \"1\\n\"\nassert solution(stdin=\"2\\nja\\nla\\n52\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n\"\nassert solution(open('input2.txt', 'r')) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of words in the dictionary: \")) == 1, \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 1, \"Expected 1, but got {} instead.\".format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666') == 1\nassert solution('2\\nja\\nla\\n52') == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\\n\"\n\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.A.#.D.#.O.*.G.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.A.#.D.#.O.*.G.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\\n\"\n\nassert solution(\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\\n\"\n\nassert solution(\"AG\") == \"..*..\\n.*.*.\\n*.A*\\n.*.*.\\n..*..\\n\"\n\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"..*..\\n.*.*.\\n*.ABC*\\n.*.*.\\n..*..\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 200
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\\"A\\\") == \\\"..#..\\\\n.#.#.\\\\n#.A.#\\\\n.#.#.\\\\n..#..\\\"\\n\\nassert solution(\\\"DOG\\\") == \\\"..#...#...*..\\\\n.#.#.#.#.*.*..\\\\n#.D.#.O.*.G.*\\\\n.#.#.#.#.*.*..\\\\n..#...#...*..\\\\ndef solution(stdin: str) -> str:\\n    pass\\\"\"",
        "num_ids_2": 197,
        "num_ids_4": 197
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\",\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\",",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\\n.A.#\\n.A.#\\n..#..\\n\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.D.#.O.*.G*\\n.D.#.O.*.G*\\n..#...#...*..\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\nA.#.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:pass\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Test case 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 3.141593, \"Test case 1: Expected 3.141593, but got {}.\"\nassert solution(21) == 1385.442360, \"Test case 2: Expected 1385.442360, but got {}.\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 3.141593\nassert solution(21) == 1385.442360",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"3.141593\\n2.000000\\n\"\nassert solution(21) == \"1385.442360\\n882.000000\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' got '{solution(input())}'\"\n\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"3.141593\\n2.000000\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"1385.442360\\n882.000000\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r) == output, f\"Test {test_case} failed. Expected output: {output}, got: {solution(r)}\"\n\ntest_cases = [\n    (1, 3.141593),\n    (21, 1385.442360),\n]\n\nfor r, output in test_cases:\n    assert solution(r) == output, f\"Test {test_case} failed. Expected output: {output}, got: {solution(r)}\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 3.141593, \"Expected 3.141593, got: {}\".format(solution(5))\nassert solution(10) == 3.141593, \"Expected 3.141593, got: {}\".format(solution(10))\nassert solution(20) == 2.0, \"Expected 2.0, got: {}\".format(solution(20))",
        "num_ids_2": 78,
        "num_ids_4": 108
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3.141593\", \"Sample Input 1\"\nassert solution(\"21\") == \"1385.442360\", \"Sample Input 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.141593\\n2.000000\"\nassert solution(input()) == \"1385.442360\\n882.000000\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 3.141593, \"Test Input 1\"\nassert solution(21) == 1385.442360, \"Test Input 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n\nimport sys\nsys.stdin = open('input.txt', 'r')\nsys.stdout = open('output.txt', 'w')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 -2 3') == 2\nassert solution('5\\n129 44 394 253 147') == 0",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 -2 3\\nSample Output 1:\\n2\\n\\nSample Input 2:\\n5\\n129 44 394 253 147\\nSample Output 2:\\n0\\n\") == 2, \"Test 1 Failed\"\nassert solution(\"5\\n129 44 394 253 147\\nSample Output 2:\\n0\\n\") == 0, \"Test 2 Failed\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output {expected_output}, but got {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == 2\nassert solution(\"5\\n129 44 394 253 147\\n\") == 0",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 -2 3\") == \"2\\n\"\nassert solution(\"5\\n129 44 394 253 147\") == \"0\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n1 -2 3\\n5\\n129 44 394 253 147\") == \"2\"\nassert solution(stdin=\"6\\n2 34 567 890 1234 5678\\n0\") == \"0\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\\n\", \"Test 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3\\n1 -2 3\\n5\\n129 44 394 253 147\\n') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Your solution is not correct\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution: {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"6\\n\", \"Incorrect output for the first example\"\nassert solution(sample_input_2) == \"8\\n\", \"Incorrect output for the second example\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n2 2 2\") == \"8\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\", \"Incorrect output for sample input 1\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\", \"Solution should return 6\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\", \"Solution should return 8\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == 6, \"Expected output 6, but got {}.\".format(solution(\"2 2 2\"))\nassert solution(\"4 1 2\") == 8, \"Expected output 8, but got {}.\".format(solution(\"4 1 2\"))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"\n\nfor i in range(int(stdin.readline())):\n    N = int(stdin.readline())\n    times = list(map(int, stdin.readline().split()))\n\n    assert times[0] <= times[-1], \"The first team's time should be smaller than the last team's time.\"\n    assert times.count(times[-1]) == N, \"Each team should have at most one algorithm lecture.\"\n\n    lectures = sum(times)\n\n    ante_lecture = sum(times[:3])\n    goran_lecture = sum(times[-3:])\n\n    if lectures >= 180:\n        print(ante_lecture + goran_lecture)\n    elif lectures >= 90:\n        print(ante_lecture + 45 + goran_lecture)\n    else:\n        print(ante_lecture + 40 + goran_lecture)",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"2\\n\", \"Sample Input 1\"\nassert solution(sample_input_2) == \"NOT POSSIBLE\\n\", \"Sample Input 2\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"NOT POSSIBLE\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Solution does not match expected output. \\nSample Input: {sample_input}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\" # expected output: \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\" # expected output: \"3\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 5\n    3 1 2 1 1\n    7 5\n    1 5 4 3 2 1 1\n''') == '''\n    3\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Function signature and/or input validation not met.\"\nassert solution(sample_input_2) == expected_output_2, \"Function signature and/or input validation not met.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\\n\") == \"4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Incorrect output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\", \"Test case 1 failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\", \"Test case 2 failed\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n10\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test failed, expected output: {output}, got: {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\\n15\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5\\n10'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n15\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\\n2\\n7\\n11\\nSample Output 1\\n4\\n\\nSample Input 2\\n5\\n2\\n5\\n9\\n10\\n17\\nSample Output 2\\nstill running\") == \"still running\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'Input\\n2\\n7\\n11\\n\\nInput\\n5\\n2\\n5\\n9\\n10\\n17\\n\\nOutput\\nstill running\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n') == '4\\n'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n5\\n9\\n10\\n17\") == \"still running\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed: Expected output: {}, Actual output: {}\".format(output(), solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"still running\", \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) =='still running'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"still running\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\") == \"4\", \"Testcase 1 failed\"\nassert solution(\"Sample Input 2\") == \"still running\", \"Testcase 2 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    6\n    6 1 3 2 2 3\n    '''\n) == '0.6\\n'\n\nassert solution(\n    '''\n    2\n    2 2\n    '''\n) == 'impossible\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6\n6 1 3 2 2 3\n\"\"\") == \"0.6\"\n\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\") == \"impossible\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n6 1 3 2 2 3') == 0.6\nassert solution('2\\n2 2') == 'impossible'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0.6\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"0.6\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0.6\"\nassert solution(4) == \"impossible\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"0.6\", \"Incorrect output for sample input 1.\"\nassert solution(sample_input2) == \"impossible\", \"Incorrect output for sample input 2.\"\n\nfrom typing import List",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\nassert solution(\"\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 62
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Gunnar\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Gunnar\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Gunnar\"\nassert solution(\"1 4 1 4\\n1 6 1 6\\n1 4 1 4\\n1 6 1 6\") == \"Gunnar\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 53,
        "num_ids_4": 97
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Tie\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\\n\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Emma\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma\\n'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\" for i, (input, output) in enumerate(zip(test_cases, expected_outputs))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"makes sense\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"makes sense\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"makes sense\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\", \"Test 1\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\", \"Test 2\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n8\\n1 2 3 mumble mumble 7 mumble 8\") == \"makes sense\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output two integer values d and v_{n+1}, separated by a space.\\n1 18\"\nassert solution(stdin) == \"Output two integer values d and v_{n+1}, separated by a space.\\n2 121\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2 121', \"Test case 1 incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 18\"\nassert solution(stdin) == \"2 121\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Expected output: {output}, Received: {solution(stdin=input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Test 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Test 2 failed\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Incorrect output for input 1\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Incorrect output for input 2\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output two integer values d and v_{n+1}, separated by a space.\\n1 18\", \"Test 1 failed\"\n\nassert solution(input()) == \"Output two integer values d and v_{n+1}, separated by a space.\\n2 121\", \"Test 2 failed\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 6 9 12 15\n''') == '1 18'\n\nassert solution('''\n4 9 25 49 81\n''') == '2 121'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 18\", \"Output 1 is not correct\"\nassert solution(stdin) == \"2 121\", \"Output 2 is not correct\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The output is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example_input) == \"CORRECT\", \"Your solution is incorrect!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\n\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"INCORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"INCORRECT\"",
        "num_ids_2": 80,
        "num_ids_4": 162
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == 'CORRECT'\n\nassert solution('''\n4\n2 3\n1 0\n0 2\n3 1\n''') == 'CORRECT'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"CORRECT\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\n\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"CORRECT\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin.read()) == \"CORRECT\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == 'CORRECT' # Correct Solution\n\nassert solution(r'4\\n2 3\\n1 0\\n0 2\\n3 1') == 'CORRECT' # Correct Solution\n\nassert solution(r'5\\n5 1\\n2 2\\n1 3\\n4 4\\n3 5') == 'CORRECT' # Correct Solution\n\nassert solution(r'5\\n0 1\\n2 2\\n1 3\\n4 4\\n3 5') == 'INCORRECT' # Incorrect Solution\n\nassert solution(r'5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5') == 'INCORRECT' # Incorrect Solution",
        "num_ids_2": 90,
        "num_ids_4": 172
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    8\n    1 5\n    6 2\n    3 1\n    5 0\n    4 6\n    0 3\n    2 7\n    7 4\n    \"\"\"\n) == \"CORRECT\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"1 1 1\", \"The solution is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 1 1\\n1 1 1\\n1 1 1\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1 2 3 1 11\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == \"1 1 1\"\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\n\nprint('All tests passed!')",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2 3 11\" # expected output\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test Case 1 Failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test Case 2 Failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1, \"Test 1: Invalid output\"\nassert solution(input_2) == output_2, \"Test 2: Invalid output\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1: Expected output not found.\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2: Expected output not found.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n') == '1 1 1'\nassert solution('0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output does not match expected output. Input: {input()}, Output: {output()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Expected Thursday, got: \" + solution(\"1 1\")\nassert solution(\"17 1\") == \"Saturday\", \"Expected Saturday, got: \" + solution(\"17 1\")",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect solution. Expected '{expected_output}', got '{solution(input())}'.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Sample Input 1 failed\"\nassert solution(\"17 1\") == \"Saturday\", \"Sample Input 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Thursday', \"Test case 1 failed\"\nassert solution('17 1') == 'Saturday', \"Test case 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case} failed. Expected output: '{expected_output}', Received output: '{solution(stdin)}'.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"4\\n40\\n\"\nassert solution(4) == \"4\\n40\\n\"\nassert solution(5) == \"129\\n480\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 51
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n100\\n4\\n\") == \"4\\n40\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\", \"Test 1\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\", \"Test 2\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100\\n4\") == \"4\\n40\"\nassert solution(\"100\\n500\\n12\") == \"129\\n480\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor i in range(3):\n    input()\n    output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40\\n'\nassert solution('100\\n500\\n12\\n') == '129\\n480\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4.0\\n3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"4.0\\n3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'Output: 4.0\\nOutput: 3\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0\\n3'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0\\n3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 2\nassert solution(\"30\") == 7\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == [1]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1') == '1\\n'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!\\n'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == [\"1\"]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\", \"Expected output: '1', got: {}\".format(solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\"))\n\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\", \"Expected output: 'HE GOT AWAY!', got: {}\".format(solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\"))",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == [\"1\"]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter five registration codes: \")) == \"1\", \"Enter five registration codes: N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\"\nassert solution(input(\"Enter five registration codes: \")) == \"1\", \"Enter five registration codes: N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\"\nassert solution(input(\"Enter five registration codes: \")) == \"HE GOT AWAY!\", \"Enter five registration codes: N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\"\nassert solution(input(\"Enter five registration codes: \")) == \"HE GOT AWAY!\", \"Enter five registration codes: N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\"\nassert solution(input(\"Enter five registration codes: \")) == \"\", \"Enter five registration codes: N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\nHE GOT AWAY!\"",
        "num_ids_2": 120,
        "num_ids_4": 248
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n') == ['1']\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == ['HE GOT AWAY!']",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8.0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8.0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '6.843530573929037'\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == 8.0\nassert solution(\"2\\n3 3 3\\n4 5 4\") == 6.843530573929037",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Solution: {solution(input_str)}, Expected Output: {expected_output}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\\n\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\\n\") == \"6.843530573929037\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"24\", \"Test case 1 failed\"\nassert solution(\"25\") == \"27\", \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '24\\n'\nassert solution(stdin) == '27\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '24\\n', 'Sample Output 1'\n\nassert solution(stdin) == '27\\n', 'Sample Output 2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"24\\n\"\nassert solution(stdin) == \"27\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(24) == 24, \"24 is not a harshad number\"\nassert solution(25) == 27, \"25 is not a harshad number\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(24) == 24, \"24 should be equal to 24\"\nassert solution(25) == 27, \"25 should be equal to 27\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == 24, \"Test case 1 failed\"\nassert solution(25) == 27, \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(24) == 24, \"Test 1 failed\"\nassert solution(25) == 27, \"Test 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"Output goes here\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect output: 7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect output: 188\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\", \"The solution should return 7, but it returns {}.\".format(solution(input()))\nassert solution(input()) == \"188\", \"The solution should return 188, but it returns {}.\".format(solution(input()))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter a sequence of alternating integers and plus symbols: \")) == 7, \"The correct output for the sample input 1 is 7.\"\n\nassert solution(input(\"Enter a sequence of alternating integers and plus symbols: \")) == 188, \"The correct output for the sample input 2 is 188.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\ninput() -> str\noutput -> str",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Your code is wrong\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Your code is wrong\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect output for sample input 1\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test case 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test case 2 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect output\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect output\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 5\\n5 -2 4\", \"Test case 1 failed\"\n\nassert solution() == \"5 -2 4\\n2 5\", \"Test case 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"2 5\\n\", \"Sample Input 1\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\\n\", \"Sample Input 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 5\", \"Error: Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1 5 2\\n2 2 -4 5\\n\") == \"2 5 -2 4\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5\\n5 -2 4\"\nassert solution(\"10 2 3 4 -1 6 7 8\") == \"10 15 24\"\nassert solution(\"3 1 -2 0.5 0.3 0.7 1.1\") == \"0.5 1.1\"",
        "num_ids_2": 64,
        "num_ids_4": 100
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == [\"2\", \"2\", \"2\", \"1\", \"1\"]",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1\\n'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1\\n') == '1 1 1 3 3 3 2 2 2\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Output '{solution(input())}' is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1\\n'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1\\n') == '1 1 1 3 3 3 2 2 2\\n'\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution(r'9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 2 2 1 1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"2 2 2 1 1\", \"Test case 1 failed.\"\nassert solution(sample_input2) == \"1 1 1 3 3 3 2 2 2\", \"Test case 2 failed.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='38 24\\n1 100\\n') == '875'\nassert solution(stdin='38 25\\n1 100\\n') == '875'\nassert solution(stdin='38 26\\n1 100\\n') == '876'\nassert solution(stdin='38 27\\n1 100\\n') == '876'\nassert solution(stdin='38 28\\n1 100\\n') == '876'\nassert solution(stdin='38 29\\n1 100\\n') == '877'\nassert solution(stdin='38 30\\n1 100\\n') == '877'\nassert solution(stdin='38 31\\n1 100\\n') == '877'\nassert solution(stdin='38 32\\n1 100\\n') == '877'\nassert solution(stdin='38 33\\n1 100\\n') == '878'\nassert solution(stdin='38 34\\n1 100\\n') == '878'\nassert solution(stdin='38 35\\n1 100\\n') == '878'\nassert solution(stdin='38 36\\n1 100\\n') == '878'\nassert solution(stdin='38 37\\n1 100\\n') == '878'\nassert solution(stdin='38 38\\n1 100\\n') == '879'\nassert solution(stdin='38 39\\n1 100\\n') == '879'\nassert solution(stdin='38 40\\n1 100\\n') == '879'\nassert solution(stdin='38 41\\n1 100\\n') == '879'\nassert solution(stdin='38 42\\n1 100\\n') == '879'\nassert solution(stdin='38 43\\n1 100\\n') == '879'\nassert solution(stdin='38 44\\n1 100\\n') == '880'\nassert solution(stdin='38 45\\n1 100\\n') == '880'\nassert solution(stdin='38 46\\n1 100\\n') == '880'\nassert solution(stdin='38 47\\n1 100\\n') == '880'\nassert solution(stdin='38 48\\n1 100\\n') == '880'\nassert solution(stdin='38 49\\n1 100\\n') == '880'\nassert solution(stdin='38 50\\n1 100\\n') == '881'\nassert solution(stdin='38 51\\n1 100\\n') == '881'\nassert solution(stdin='38 52\\n1 100\\n') == '881'\nassert solution(stdin='38 53\\n1 100\\n') == '881'\nassert solution(stdin='38 54\\n1 100\\n') == '881'\nassert solution(stdin='38 55\\n1 100\\n') == '881'\nassert solution(stdin='38 56\\n1 100\\n') == '881'\nassert solution(stdin='38 57\\n1 100\\n') == '881'\nassert solution(stdin='38 58\\n1 100\\n') == '881'\nassert solution(stdin='38 59\\n1 100\\n') == '882'\nassert solution(stdin='38 60\\n1 100\\n') == '882'\nassert solution(stdin='38 61\\n1 100\\n') == '882'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"38 24\") == \"875\", \"Incorrect output\"\nassert solution(\"1 100\") == \"100\", \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(38, 24) == 875\nassert solution(1, 100) == 100",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"38 24\") == 875, \"Incorrect output\"\nassert solution(\"1 100\") == 100, \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}\\nExpected: {expected}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 875, \"The expected output is not found.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '875'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '875'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\\n\", \"Input 1 failed\"\nassert solution(\"221 231\") == \"132\\n\", \"Input 2 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test 1 failed\"\nassert solution(\"221 231\") == \"132\", \"Test 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test Failed: solution({input()})!= expected_output\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\", \"Incorrect output for sample input 1\"\nassert solution(\"221 231\") == \"132\", \"Incorrect output for sample input 2\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"734 893\") == \"437\", \"Your solution is incorrect.\"\nassert solution(\"221 231\") == \"132\", \"Your solution is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\", \"Incorrect solution for sample input 1.\"\nassert solution(\"221 231\") == \"132\", \"Incorrect solution for sample input 2.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\nassert solution(\"\") == \"impossible\"",
        "num_ids_2": 28,
        "num_ids_4": 37
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"programming\"\nassert solution(sample_input_2) == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'programming', \"Solution is incorrect\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"programming\\n\", \"You have not implemented the solution correctly. Please see the problem statement for more details.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == \"^^\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAB\"",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 \\'X\\'').strip() == '.^'\nassert solution('3 12 \\'A\\'').strip() == 'BBABABABABAC'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 \\'X\\'\\nX^--\\n\\n.X--\\n--') == '.^--\\n'\nassert solution('3 12 \\'A\\'\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB') == 'BBABABABABAC\\nBBBABABABABA\\nBBABABABABAB'\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''\n.^\n--\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABABA'\nassert solution(\"BABABABABABA\") == 'BBABABABABAC'",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''\n.^\n--\n'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \"X^\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAC\"\n",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAC\"",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABABA'\nassert solution(\"X^\") == '.^'\n",
        "num_ids_2": 35,
        "num_ids_4": 46
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"2 4 4 14\") == [\"1 0 3\", \"1 1 2\", \"1 2 1\", \"1 3 0\", \"3 0 2\", \"3 1 1\", \"3 2 0\", \"5 0 1\", \"5 1 0\", \"7 0 0\"]\nassert solution(r\"100 80 60 240\") == [\"0 0 4\", \"0 3 0\", \"1 1 1\"]",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 0 4\\n0 3 0\\n1 1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution(\\\"2 4 4 14\\\")) # Output: 1 0 3\\nprint(solution(\\\"100 80 60 240\\\")) # Output: 0 0 4\\nprint(solution(\\\"2 4 4 1\\\")) # Output: impossible\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\", \"The output is not correct\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n\nfrom typing import List",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case not provided!\"\n\nimport itertools",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"good job\\n6\\n13\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n\") == \"1\\n3\\n6\\n12\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 114
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of recited numbers: \")) == \"Good job!\", \"The program should output 'Good job!'\"\nassert solution(input(\"Enter the number of recited numbers: \")) == \"1\\n2\\n3\\n4\\n5\\n\", \"The program should output '1\\n2\\n3\\n4\\n5\\n'\"\nassert solution(input(\"Enter the number of recited numbers: \")) == \"1\\n2\\n6\\n13\\n18\\n25\\n\", \"The program should output '1\\n2\\n6\\n13\\n18\\n25\\n'\"\nassert solution(input(\"Enter the number of recited numbers: \")) == \"42\\n\", \"The program should output '42\\n'\"\nassert solution(input(\"Enter the number of recited numbers: \")) == \"\", \"The program should output an empty string\"",
        "num_ids_2": 85,
        "num_ids_4": 185
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Good job!\", \"The solution is not correct!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n') == \"Good job!\\n1\\n3\\n6\\n12\\n\", \"Test Failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\", \"Test 1\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\", \"Test 2\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\", \"Test 3\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\", \"Test 4\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\", \"Test 5\"",
        "num_ids_2": 116,
        "num_ids_4": 234
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Good job!\", \"Your solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"good job\\n1\\n3\\n6\\n12\\n\", \"Test 1 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"good job\\n1\\n3\\n6\\n12\\n\", \"Test 2 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"good job\\n1\\n3\\n6\\n12\\n\", \"Test 3 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\", \"Test 4 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104",
        "num_ids_2": 134,
        "num_ids_4": 613
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n14\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"The solution should be the expected output.\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.8 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.7 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.6 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.5 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.4 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.3 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.2 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.1 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.8 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.7 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.6 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.5 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.4 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.3 ",
        "num_ids_2": 118,
        "num_ids_4": 238
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 8.9 40075000 272.1\\n\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\\n\", \"Test case 1 failed\"\n\nfrom math import log2, sqrt\n\nn = int(stdin.readline())\np = float(stdin.readline())\ns = int(stdin.readline())\nv = int(stdin.readline())",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n10\n8.9\n40075000\n272.1\n''') == '''\n157079.04857106\n15.598261092309\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input '{input()}' does not match expected output '{output}'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(2) == 4\nassert solution(3) == 4\nassert solution(4) == 9\nassert solution(5) == 16\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\\n\"\nassert solution(\"2\") == \"0\\n\"\nassert solution(\"3\") == \"0\\n\"\nassert solution(\"4\") == \"0\\n\"\nassert solution(\"5\") == \"0\\n\"\nassert solution(\"6\") == \"0\\n\"\nassert solution(\"7\") == \"0\\n\"\nassert solution(\"8\") == \"0\\n\"\nassert solution(\"9\") == \"0\\n\"\nassert solution(\"10\") == \"0\\n\"\nassert solution(\"11\") == \"0\\n\"\nassert solution(\"12\") == \"0\\n\"\nassert solution(\"13\") == \"0\\n\"\nassert solution(\"14\") == \"0\\n\"\nassert solution(\"15\") == \"0\\n\"\nassert solution(\"16\") == \"0\\n\"\nassert solution(\"17\") == \"0\\n\"\nassert solution(\"18\") == \"0\\n\"\nassert solution(\"19\") == \"0\\n\"\nassert solution(\"20\") == \"0\\n\"\nassert solution(\"21\") == \"0\\n\"\nassert solution(\"22\") == \"0\\n\"\nassert solution(\"23\") == \"0\\n\"\nassert solution(\"24\") == \"0\\n\"\nassert solution(\"25\") == \"0\\n\"\nassert solution(\"26\") == \"0\\n\"\nassert solution(\"27\") == \"0\\n\"\nassert solution(\"28\") == \"0\\n\"\nassert solution(\"29\") == \"0\\n\"\nassert solution(\"30\") == \"0\\n\"\nassert solution(\"31\") == \"0\\n\"\nassert solution(\"32\") == \"0\\n\"\nassert solution(\"33\") == \"0\\n\"\nassert solution(\"34\") == \"0\\n\"\nassert solution(\"35\") == \"0\\n\"\nassert solution(\"36\") == \"0\\n\"\nassert solution(\"37\") == \"0\\n\"\nassert solution(\"38\") == \"0\\n\"\nassert solution(\"39\") == \"0\\n\"\nassert solution(\"40\") == \"0\\n\"\nassert solution(\"41\") == \"0\\n\"\nassert solution(\"42\") == \"0\\n\"\nassert solution(\"43\") == \"0\\n\"\nassert solution(\"44\") == \"0\\n\"\nassert solution(\"45\") == \"0\\n\"\nassert solution(\"46\") == \"0\\n\"\nassert solution(\"47\") == \"0\\n\"\nassert solution(\"48\") == \"0\\n\"\nassert solution(\"49\") == \"0\\n\"\nassert solution(\"50\") == \"0\\n\"\nassert solution(\"51\") == \"0\\n\"\nassert solution(\"52\") == \"0\\n\"\nassert solution(\"53\") == \"0\\n\"\nassert solution(\"54\") == \"0\\n\"\nassert solution(\"55\") == \"0\\n\"\nassert solution(\"56\") == \"0\\n\"\nassert solution(\"57\") == \"0\\n\"\nassert solution(\"58\") == \"0\\n\"\nassert solution(\"59\") == \"0\\n\"\nassert solution(\"60\") == \"0\\n\"\nassert solution(\"61\") == \"0\\n\"\nassert solution(\"62\") == \"0\\n\"\nassert solution(\"63\") == \"0\\n\"\nassert solution(\"64\") == \"0\\n\"\nassert solution(\"65\") == \"0\\n\"\nassert solution(\"66\") == \"0\\n\"\nassert solution(\"67\") == \"0\\n\"\nassert solution(\"68\") == \"0\\n\"\nassert solution(\"69\") == \"0\\n\"\nassert solution(\"70\") == \"0\\n\"\nassert solution(\"71\") == \"0\\n\"\nassert solution(\"72\") == \"0\\n\"\nassert solution(\"73\") == \"0\\n\"\nassert solution(\"74\") == \"0\\n\"\nassert solution(\"75\") == \"0\\n\"\nassert solution(\"76\") == \"0\\n\"\nassert solution(\"77\") == \"0\\n\"\nassert solution(\"78\") == \"0\\n\"\nassert solution(\"79\") == \"0\\n\"\nassert solution(\"80\") == \"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0 # Virtually every book has at least one character.\nassert solution(2) == 0 # Virtually every play has at least one character.\nassert solution(3) == 1 # Virtually every movie has at least one character.\nassert solution(4) == 2 # Virtually every novel has at least one character.\nassert solution(5) == 4 # Virtually every game has at least one character.\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '0'\nassert solution(10) == '0'\nassert solution(15) == '1'\nassert solution(20) == '1'\nassert solution(25) == '2'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0, \"1 should return 0\"\nassert solution(2) == 4, \"2 should return 4\"\nassert solution(3) == 24, \"3 should return 24\"\nassert solution(4) == 168, \"4 should return 168\"\nassert solution(5) == 3520, \"5 should return 3520\"",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(2) == 4\nassert solution(3) == 12\nassert solution(4) == 20\nassert solution(5) == 28",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3, \"Solution should return 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"2\"\nassert solution(\"4\\nA\\B\\B\\B\") == \"3\"\nassert solution(\"4\\nA\\B\\A\\C\") == \"2\"\nassert solution(\"4\\B\\B\\B\\B\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3, \"The solution for the given example is incorrect\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == 3\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 3, \"The expected output is 3, but instead got {}\".format(solution(4))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 3, \"The solution is incorrect\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 3, \"Sample output does not match the expected output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"..xx..\", \"Expected result is..xx.., but got \" + solution(solution)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\\n\\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"\" + \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") + \"\\\")) # correct output\"",
        "num_ids_2": 656,
        "num_ids_4": 656
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nstdin = \\\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\\\"\\nprint(solution(stdin))  # Output:..xx..\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution('5 5 1 1\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n') == '..x..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x..xx..xx..xx..x",
        "num_ids_2": 1023,
        "num_ids_4": 1023
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x.\\n.x.') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\") == \"..xx..\\nxx..xx\\n..xx..\"\nassert solution(\"1 3\\nabc\\ndef\\nghi\\n\") == \"abc\\ndef\\nghi\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 1, 2) == \"..xx..\\nxx..xx\\n..xx..\", \"Test 1 failed\"\nassert solution(3, 3, 1, 2) == \"..xx..\\nxx..xx\\n..xx..\", \"Test 2 failed\"\nassert solution(3, 3, 1, 2) == \"..xx..\\nxx..xx\\n..xx..\", \"Test 3 failed\"\nassert solution(3, 3, 1, 2) == \"..xx..\\nxx..xx\\n..xx..\", \"Test 4 failed\"\nassert solution(3, 3, 1, 2) == \"..xx..\\nxx..xx\\n..xx..\", \"Test 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for the given solution: {solution(stdin=input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"F 60 13 20\\n\") == \"14 20\\n\"\nassert solution(\"B 60 13 20\\n\") == \"14 19\\n\"\nassert solution(\"B 60 12 20\\n\") == \"14 21\\n\"\nassert solution(\"F 60 15 20\\n\") == \"14 20\\n\"\nassert solution(\"F 60 16 20\\n\") == \"14 20\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'1\\nF 60 13 20\\n') == b'14 20'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"14 20\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\\n\"\nassert solution(\"B 120 60 13\") == \"0 20\\n\"\nassert solution(\"B 360 60 13\") == \"12 20\\n\"\nassert solution(\"F 120 60 13\") == \"14 20\\n\"\nassert solution(\"F 360 60 13\") == \"14 20\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '14 20\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"F 60 13 18\") == \"14 18\"\nassert solution(\"B 60 13 18\") == \"14 18\"\nassert solution(\"F 60 13 12\") == \"14 12\"\nassert solution(\"B 60 13 12\") == \"14 12\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"14 20\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nF 60 13 20\") == \"14 20\", \"Test case 1 failed\"\nassert solution(\"2\\nB 30 22 15\") == \"15 15\", \"Test case 2 failed\"\nassert solution(\"3\\nF 40 20 18\") == \"18 16\", \"Test case 3 failed\"\nassert solution(\"4\\nB 15 10 11\") == \"13 14\", \"Test case 4 failed\"\nassert solution(\"5\\nF 10 25 10\") == \"25 25\", \"Test case 5 failed\"",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '14 20\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"DEC 25\") == \"yup\"\nassert solution(\"NOV 15\") == \"yup\"\nassert solution(\"MAR 31\") == \"yup\"\nassert solution(\"SEP 29\") == \"yup\"\nassert solution(\"NOV 26\") == \"nope\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Expected 'yup', got {}\".format(solution(\"OCT 31\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup' # Your solution should pass the test",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\", \"Test case 1 failed\"\nassert solution(\"DEC 25\") == \"nope\\n\", \"Test case 2 failed\"\nassert solution(\"MAR 15\") == \"nope\\n\", \"Test case 3 failed\"\nassert solution(\"AUG 30\") == \"yup\\n\", \"Test case 4 failed\"\nassert solution(\"NOV 31\") == \"yup\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nHere's the code for the solution:\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Test failed\"\n\nHere's the corrected code:\n\n```python\nimport datetime",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nSolution:",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"OCT 31\") == \"yup\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#. \\n.#.#.#.# \\n#.honi#. \\n.#oker.# \\n#.nera#. \\n.#irak.# \\n#.#.#.#.\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#\\n#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Uncomment the following line to test the function\\n# assert solution('4 4",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution(\\\"4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\\\") == \\\"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\\"\\n\\n# Test case 2\\nassert solution(\\\"4 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\\\") == \\\"#.#.#.#\\n.#.#.#.#\\n#.1111#.\\n.#1111#.\\n#.2222#.\\n.#2222#.\\n#.#.#.#\\n.#.#.#.#\\\"\\n\\n# Test case 3\\nassert solution(\\\"4 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\\\") == \\\"#.#.#.#\\n.#.#.#.#\\n#.1111#.\\n.#1111#.\\n#.2222#.\\n.#2222#.\\n#.#.#.#\\n.#.#.#.#\\\"\\n\\n# Test case 4\\nassert solution(\\\"4 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\\\") == \\\"#.#.#.#\\n.#.#.#.#\\n#.1111#.\\n.#1111#.\\n#.2222#.\\n.#2222#.\\n#.#.#.#\\n.#.#.#.#\\\"\\n\\n# Test case 5\\nassert solution(\\\"4 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\\\") == \\\"#.#.#.#\\n.#.#.#.#\\n#.1111#.\\n.#1111#.\\n#.2222#.\\n.#2222#.\\n#.#.#.#\\n.#.#.#.#\\\"\\n\"",
        "num_ids_2": 594,
        "num_ids_4": 594
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 'abcdef'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\"",
        "num_ids_2": 148,
        "num_ids_4": 296
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    4 4\n    2 2 2 2\n    1 honi\n    2 oker\n    3 nera\n    4 irak\n\"\"\") == \"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == '#.#.#.#. #.#.#.#.honi. #.oker. #.nera. #.irak.#\\n.#.#.#.# #.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Solution not correct!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+",
        "num_ids_2": 226,
        "num_ids_4": 339
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||.p.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|.p:|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||.P.|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|.P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||.P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:||.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:  # Test Case\\n    return solution(stdin)\\n\\n# Test Case 1\\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||.p.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|.p:|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||.P.|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|.P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||.P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:||.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:  # Test Case 1\\n    return solution(stdin)\\n\\n# Test Case 2\\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:",
        "num_ids_2": 1037,
        "num_ids_4": 1037
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 500,
        "num_ids_4": 500
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'\n\nassert solution('White: Rh1,Qc1,Ke1,Qh1,Kb1,Qc1,Kf1,Qh1,Kc1,Qc1,Kg1,Rh1\\nBlack: Ng1,Rc1,Rd1,Qc1,Rd1,Qc1,Kg1,Ng1,Rc1,Rd1,Qc1,Kg1,Rc1,Qc1,Kg1,Qc1,Kg1\\n') == '+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'\n\nassert solution('White: Rh1,Qc1,Ke1,Qh1,Kb1,Qc1,Kf1,Qh1,Kc1,Qc1,Kg1,Rh1\\nBlack: Ng1,Rc1,Rd1,Qc1,Rd1,Qc1,Kg1,Ng1,Rc1,Rd1,Qc1,Kg1,Rc1,Qc1,Kg1,Qc1,Kg1\\n') == '+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'",
        "num_ids_2": 220,
        "num_ids_4": 329
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\", \"a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2,a3,b3,c3,d3,e3,f3,g3,h3,a4,b4,c4,d4,e4,f4,g4,h4,a5,b5,c5,d5,e5,f5,g5,h5,a6,b6,c6,d6,e6,f6,g6,h6,a7,b7,c7,d7,e7,f7,g7,h7,a8,b8,c8,d8,e8,f8,g8,h8,a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2,a3,b3,c3,d3,e3,f3,g3,h3,a4,b4,c4,d4,e4,f4,g4,h4,a5,b5,c5,d5,e5,f5,g5,h5,a6,b6,c6,d6,e6,f6,g6,h6,a7,b7,c7,d7,e7,f7,g7,h7,a8,b8,c8,d8,e8,f8,g8,h8,a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2,a3,b3,c3,d3,e3,f3,g3,h3,a4,b4,c4,d4,e4,f4,g4,h4,a5,b5,c5,d5,e5,f5,g5,h5,a6,b6,c6,d6,e6,f6,g6,h6,a7,b7,c7,d7,e7,f7,g7,h7,a8,b8,c8,d8,e8,f8,g8,h8,a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2,a3,b3,c3,d3,e3,f3,g3,h3,a4,b4,c4,d4,e4,f4,g4,h4,a5,b5,c5,d5",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n') == '+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Diablo is happy!\", \"Solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1.000000 4.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 20000.000000') == 'Need more materials!\\n'\nassert solution(stdin='10000.000001 20000.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 20000.000001') == 'Need more materials!\\n'\nassert solution(stdin='0.000000 0.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 0.000000') == 'Need more materials!\\n'\nassert solution(stdin='10000.000000 10000.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 10000.000001') == 'Need more materials!\\n'\nassert solution(stdin='0.000000 10000.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 10000.000001') == 'Need more materials!\\n'\nassert solution(stdin='10000.000000 0.000000') == 'Diablo is happy!\\n'\nassert solution(stdin='10000.000000 0.000001') == 'Need more materials!\\n'",
        "num_ids_2": 73,
        "num_ids_4": 154
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1.000000, 4.000000) == \"Diablo is happy!\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Diablo is happy!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Diablo is happy!\", \"Test case failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"5 10 20 2 10\") == \"1\\n\"\nassert solution(\"10 1 10 3 1\") == \"use the stairs\\n\"\nassert solution(\"5 10 20 2 10\") == \"use the stairs\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 96
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(f'10 1 10 2 1') == \"6\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\nassert solution(\"10 1 10 5 1\") == \"use the stairs\"\nassert solution(\"10 1 10 2 5\") == \"use the stairs\"\nassert solution(\"10 1 10 3 5\") == \"use the stairs\"\nassert solution(\"10 1 10 2 10\") == \"use the stairs\"\nassert solution(\"10 1 10 1 10\") == \"use the stairs\"\nassert solution(\"10 1 10 1 5\") == \"use the stairs\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 1 10 2 1') == '6\\n'\nassert solution('5 1 5 2 1') == '3\\n'\nassert solution('10 10 1 1 1') == 'use the stairs\\n'\nassert solution('10 10 1 1 0') == 'use the stairs\\n'\nassert solution('10 10 1 10 0') == 'use the stairs\\n'\nassert solution('10 10 10 1 1') == 'use the stairs\\n'\nassert solution('10 10 10 1 0') == 'use the stairs\\n'\nassert solution('10 10 10 10 0') == 'use the stairs\\n'",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 1 10 2 1') == '6'\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 1 10 2 1') == '6\\n'\nassert solution('10 2 10 2 1') == '5\\n'\nassert solution('1 1 10 2 1') == 'use the stairs\\n'\nassert solution('1 1 10 2 2') == 'use the stairs\\n'\nassert solution('1000001 1000001 1000001 1000001 1000001') == 'use the stairs\\n'\nassert solution('1 1 10 1000000 1') == '6\\n'\nassert solution('1 1 10 1000000 2') == '5\\n'\nassert solution('1 1 10 1000000 1000000') == 'use the stairs\\n'\nassert solution('1 1 10 1000000 1000000') == 'use the stairs\\n'",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"10 1 10 2 1\\n\") == 6\nassert solution(stdin=\"1000001 1 1000000 2 1\\n\") == 6\nassert solution(stdin=\"1000001 1 999999 2 1\\n\") == \"use the stairs\"\nassert solution(stdin=\"1000001 1 1000000 3 1\\n\") == 6\nassert solution(stdin=\"1000001 1 999999 3 1\\n\") == \"use the stairs\"",
        "num_ids_2": 56,
        "num_ids_4": 125
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'\nassert solution('3\\n500\\n120\\n75\\n600') == '130.0'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'\nassert solution('2\\n50\\n30\\n20') == '15.0\\n15.0'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == solution(sample_input_2), \"Test case 1 failed\"\nassert solution(sample_input_3) == solution(sample_input_4), \"Test case 2 failed\"\nassert solution(sample_input_5) == solution(sample_input_6), \"Test case 3 failed\"\nassert solution(sample_input_7) == solution(sample_input_8), \"Test case 4 failed\"\nassert solution(sample_input_9) == solution(sample_input_10), \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\"\nassert solution(\"3\\n500\\n120\\n75\") == \"89.06666666666666\"\nassert solution(\"3\\n500\\n120\\n75\") == \"88.98333333333333\"",
        "num_ids_2": 68,
        "num_ids_4": 108
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"89.06666666666666\", \"Your code is not correct.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"The function is not correct. Please check the solution.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n500\\n120\\n75\\n') == '128.8\\n89.06666666666666'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"2\\n2 5 1 25\") == \"1\"\nassert solution(\"3\\n1 2 3 4 5\") == \"0\"\nassert solution(\"4\\n1 1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 45 65 84 346\") == \"4\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"4\"\nassert solution(7) == \"10\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(int(input()))) == \"Output: 4\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output the total number of cleanup phases needed for Petra to keep the dirtiness strictly below 20 at all times.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 45 65 84 346\") == \"4\"\nassert solution(\"5 145 65 84 346\") == \"8\"\nassert solution(\"2 45 65 84 346\") == \"6\"\nassert solution(\"1 45 65 84 346\") == \"4\"\nassert solution(\"5 145 65 84 346\") == \"8\"\nassert solution(\"2 45 65 84 346\") == \"6\"",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Please write the code to test the correctness of solution\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == '1\\n'\nassert solution('5 6\\n##########\\n#P.G..G#\\n#..GGGG#') == '0\\n'\nassert solution('10 10\\n##########\\n#P.G..G#\\n#..GGGG#') == '1\\n'\nassert solution('8 10\\n##########\\n#P.G..G#\\n#..GGGG#') == '2\\n'\n",
        "num_ids_2": 68,
        "num_ids_4": 137
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('5 3\\n....P\\n..GT..\\n..TGG.\\n....P\\n....G') == '0'\nassert solution('10 10\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('10 10\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'",
        "num_ids_2": 64,
        "num_ids_4": 130
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check the solution.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 4\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\n#GTPG#\\n#..TGG#\\n#######\") == 1\nassert solution(\"7 4\\n#######\\",
        "num_ids_2": 59,
        "num_ids_4": 117
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\nassert solution(\"7 4\\n#######\\n#P.GTG#\\n#..#GG#\\n#######\") == \"0\"\nassert solution(\"7 4\\n#######\\n#P.GTG#\\n#..#G#G#\\n#######\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 95
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$",
        "num_ids_2": 565,
        "num_ids_4": 1023
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution {solution(sample_input)} is not correct, it should be {sample_output}.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    13 50\n    _____$$$_______$$$______$$$________$$$______$$$____\n    _____$$$_______$$$______$$$________$$$______$$$____\n    _____$_________$________$__________$________$_____\n    ___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n    ____$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n    ____$__$_$____$__$___$$____$___$__$__$___$$____$_\n    ____$_____$___$_____$___$_____$___$_____$___$_____$_\n    ____$_____$___$_____$___$_____$___$_____$___$_____$_\n    _____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n    _____$_$______$_$_____$_$_________$_$_____$_$_____\n    _____$___$____$___$____$___$______$___$____$___$___\n    _____$___$____$___$____$___$______$___$____$___$___\n    _____$____$_____$___$____$____$_____$___$____$__\n    _____$____$_____$___$____$____$_____$___$____$__\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$___$___$___$___$___$___$___$___$___$___$___\n    _____$",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 1 failed.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 2 failed.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 3 failed.\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n",
        "num_ids_2": 583,
        "num_ids_4": 1023
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5, \"Test failed\"\n\nprint(\"Test passed\")",
        "num_ids_2": 288,
        "num_ids_4": 288
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\"",
        "num_ids_2": 284,
        "num_ids_4": 284
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\nprint(\"Test passed.\")",
        "num_ids_2": 283,
        "num_ids_4": 283
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"The output is incorrect\"\n",
        "num_ids_2": 290,
        "num_ids_4": 290
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\" ordinary yay \") == \"ordinaryyay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him.\") == \"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him.\"\nassert solution(\"I'm feeling lucky today!\") == \"Ilm yttay tung tayd!\"\nassert solution(\"Hello, World!\") == \"Helloyldayo, Wrotday\"\nassert solution(\"My name is John.\") == \"Mizanay ozay niay.\"",
        "num_ids_2": 43,
        "num_ids_4": 141
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"ordinary pig latin\") == \"ordinaryyay\"\nassert solution(\"there is a mountain in the sky\") == \"there is a mountain in the skyay\"\nassert solution(\"can you speak pig latin\") == \"canay youyay eakspay igpay atinlay\"\nassert solution(\"hello world\") == \"hello worlday\"\nassert solution(\"goodbye world\") == \"goodbye worlday\"\nassert solution(\"a pig in the sky\") == \"ay pig in the skyay\"",
        "num_ids_2": 45,
        "num_ids_4": 98
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\") == \"ayay ebay ayay osay indkay otay oday ayay\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Incorrect output\"\nassert solution(\"ordinary can speak pig latin\") == \"odyay antccay eakspay igpay atinlay\", \"Incorrect output\"\nassert solution(\"definitely speaking pig latin\") == \"afyay antscay eakspay igpay atinlay\", \"Incorrect output\"\nassert solution(\"youyay eayay oayay atayay atayay\") == \"oyay atayay oayay atayay atayay\", \"Incorrect output\"\nassert solution(\"elbow grease\") == \"elbway serysway ferysway eway\", \"Incorrect output\"",
        "num_ids_2": 65,
        "num_ids_4": 139
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"odious\") == \"odysicay oday otay\"\nassert solution(\"the quick brown fox jumps over the lazy dog\") == \"qcktkn wrsbcay ovaay uyay jmpsry otay lzydgay\"\nassert solution(\"Hello world!\") == \"Hllwrd yay rld!\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 105
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\nq\\npan\\npancakes\\n3\\nnymble\\npan\\npea soup\\npunsch\") == \"nymble\"\nassert solution(\"1\\n2\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"1\\n2\\npotatoes\\nsalad\\n3\\nnymble\\npan\\npea soup\\npunsch\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'nymble'\nassert solution(open('input2.txt', 'r')) == 'definitely not anywhere is fine I guess'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\\ndef solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\nq\\npasta\\nsandwich\\n3\\nnymble\\npancakes\\npasta\\npancakes\\npea soup\\npea soup\\npancakes\\npasta\\npancakes\\npea soup\\n') == 'nymble'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"q\\npotatoes\\nsalad\\npancakes\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"q\\npotatoes\\nsalad\\npancakes\\n2\") == \"nymble\"\nassert solution(\"q\\npotatoes\\nsalad\\npancakes\\n1\") == \"nymble\"\nassert solution(\"q\\npotatoes\\nsalad\\npancakes\\n3\") == \"nymble\"\nassert solution(\"q\\npotatoes\\nsalad\\npancakes\\n4\") == \"nymble\"",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'nymble'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'nymble'\nassert solution(open('input_test.txt', 'r')) == 'Anywhere is fine I guess'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\nq\\npancakes\\npotatoes\\nsandwiches\\n\") == \"nymble\\n\"\nassert solution(\"3\\nnymble\\npancakes\\n\") == \"nymble\\n\"\nassert solution(\"2\\npancakes\\nsandwiches\\n\") == \"Anywhere is fine I guess\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 87
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Anywhere is fine I guess\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\nq\\npasta\\npancakes\\n3\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('3\\nnymble\\npancakes\\npea soup\\npunsch') == 'Anywhere is fine I guess'\nassert solution('4\\nnymble\\npancakes\\npea soup\\npunsch') == 'nymble'\nassert solution('5\\nnymble\\npancakes\\npea soup\\npunsch') == 'Anywhere is fine I guess'\nassert solution('6\\nnymble\\npancakes\\npea soup\\npunsch') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 76,
        "num_ids_4": 137
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 0 15') == '3\\n'\nassert solution('5 100 20') == '10\\n'\nassert solution('5 0 0') == '0\\n'\nassert solution('5 1000000 0') == '0\\n'\nassert solution('5 0 1000000') == '0\\n'",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"The given solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution and expected output do not match. Solution: {solution(input())}, Expected Output: {output()}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 0 15\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\", \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\", \"The output should be 3, but it is actually {}\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 0, 15) == 3, \"The worm needs to crawl up 3 times to reach the top of the pole.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"20 10\") == \"15\"\nassert solution(\"1000 30\") == \"30\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"-1000 1000\") == \"1000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\", \"Output is not as expected\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 15\") == \"19\", \"The answer is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\\n\", \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 15') == '19\\n', \"Test 1 failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 15\") == \"19\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 15\") == \"19\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 15\") == \"19\\n\", \"Expected '19', got '{}'\".format(solution(\"11 15\"))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 15\") == \"19\", \"Sample Output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('South West East') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('South West East') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The solution {output} is incorrect. Please check the code.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"East West South\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"West East North\") == \"No\", \"The output should be No\"\nassert solution(\"South East West\") == \"No\", \"The output should be No\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Testcase 1 should output 'Yes'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"South West East\") == \"Yes\" # Test Case 1",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"marywasnosyagain\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"marywasnosyagain\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"2 6\\nbedrock\\n1234567890\") == \"bedrock\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"marywasnosyagain\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"marywasnosyagain\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"again\") == \"marywasnosyagain\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Even'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Either'\nassert solution(4) == 'Either'\nassert solution(5) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Even'\nassert solution(4) == 'Even'\nassert solution(5) == 'Even'\nassert solution(6) == 'Even'\nassert solution(7) == 'Even'\nassert solution(8) == 'Even'\nassert solution(9) == 'Even'\nassert solution(10) == 'Even'\nassert solution(11) == 'Even'\nassert solution(12) == 'Even'\nassert solution(13) == 'Even'\nassert solution(14) == 'Even'\nassert solution(15) == 'Even'\nassert solution(16) == 'Even'\nassert solution(17) == 'Even'\nassert solution(18) == 'Even'\nassert solution(19) == 'Even'\nassert solution(20) == 'Even'\nassert solution(21) == 'Even'\nassert solution(22) == 'Even'\nassert solution(23) == 'Even'\nassert solution(24) == 'Even'\nassert solution(25) == 'Even'\nassert solution(26) == 'Even'\nassert solution(27) == 'Even'\nassert solution(28) == 'Even'\nassert solution(29) == 'Even'\nassert solution(30) == 'Even'\nassert solution(31) == 'Even'\nassert solution(32) == 'Even'\nassert solution(33) == 'Even'\nassert solution(34) == 'Even'\nassert solution(35) == 'Even'\nassert solution(36) == 'Even'\nassert solution(37) == 'Even'\nassert solution(38) == 'Even'\nassert solution(39) == 'Even'\nassert solution(40) == 'Even'\nassert solution(41) == 'Even'\nassert solution(42) == 'Even'\nassert solution(43) == 'Even'\nassert solution(44) == 'Even'\nassert solution(45) == 'Even'\nassert solution(46) == 'Even'\nassert solution(47) == 'Even'\nassert solution(48) == 'Even'\nassert solution(49) == 'Even'\nassert solution(50) == 'Even'\nassert solution(51) == 'Even'\nassert solution(52) == 'Even'\nassert solution(53) == 'Even'\nassert solution(54) == 'Even'\nassert solution(55) == 'Even'\nassert solution(56) == 'Even'\nassert solution(57) == 'Even'\nassert solution(58) == 'Even'\nassert solution(59) == 'Even'\nassert solution(60) == 'Even'\nassert solution(61) == 'Even'\nassert solution(62) == 'Even'\nassert solution(63) == 'Even'\nassert solution(64) == 'Even'\nassert solution(65) == 'Even'\nassert solution(66) == 'Even'\nassert solution(67) == 'Even'\nassert solution(68) == 'Even'\nassert solution(69) == 'Even'\nassert solution(70) == 'Even'\nassert solution(71) == 'Even'\nassert solution(72) == 'Even'\nassert solution(73) == 'Even'\nassert solution(74) == 'Even'\nassert solution(75) == 'Even'\nassert solution(76) == 'Even'\nassert solution(77) == 'Even'\nassert solution(78) == 'Even'\nassert solution(79) == 'Even'\nassert solution(80) == 'Even'\nassert solution(81) == 'Even'\nassert solution(82) == 'Even'\nassert solution(83) == 'Even'\nassert solution(84) == 'Even'\nassert solution(85) == 'Even'\nassert solution(86) == 'Even'\nassert solution(87) == 'Even'\nassert solution(88) == 'Even'\nassert solution(89) == 'Even'\nassert solution(90) == 'Even'\nassert solution(91) == 'Even'\nassert solution(92) == 'Even'\nassert solution(93) == 'Even'\nassert solution(94) == 'Even'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'\nassert solution(10) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Even'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"Either\", \"Test failed.\"\nassert solution(\"2\\n\") == \"Even\", \"Test failed.\"\nassert solution(\"101\\n\") == \"Either\", \"Test failed.\"\nassert solution(\"100\\n\") == \"Even\", \"Test failed.\"\nassert solution(\"102\\n\") == \"Odd\", \"Test failed.\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Even'\nassert solution(12) == 'Even'\nassert solution(123) == 'Even'\nassert solution(12345) == 'Even'\nassert solution(123456) == 'Even'\nassert solution(12345678) == 'Even'\nassert solution(123456789) == 'Even'\nassert solution(1234567890) == 'Even'\nassert solution(12345678901) == 'Even'\nassert solution(123456789012) == 'Even'\nassert solution(1234567890123) == 'Even'\nassert solution(12345678901234) == 'Even'\nassert solution(123456789012345) == 'Even'\nassert solution(1234567890123456) == 'Even'\nassert solution(12345678901234567) == 'Even'\nassert solution(123456789012345678) == 'Even'\nassert solution(1234567890123456789) == 'Even'\nassert solution(12345678901234567890) == 'Even'\nassert solution(123456789012345678901) == 'Even'\nassert solution(1234567890123456789012) == 'Even'\nassert solution(12345678901234567890123) == 'Even'\nassert solution(123456789012345678901234) == 'Even'\nassert solution(1234567890123456789012345) == 'Even'\nassert solution(12345678901234567890123456) == 'Even'\nassert solution(123456789012345678901234567) == 'Even'\nassert solution(1234567890123456789012345678) == 'Even'\nassert solution(12345678901234567890123456789) == 'Even'\nassert solution(123456789012345678901234567890) == 'Even'\nassert solution(1234567890123456789012345678901) == 'Even'\nassert solution(12345678901234567890123456789012) == 'Even'\nassert solution(123456789012345678901234567890123) == 'Even'\nassert solution(1234567890123456789012345678901234) == 'Even'\nassert solution(12345678901234567890123456789012345) == 'Even'\nassert solution(123456789012345678901234567890123456) == 'Even'\nassert solution(1234567890123456789012345678",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Either'\nassert solution(5) == 'Either'\nassert solution(10) == 'Either'\nassert solution(2) == 'Either'\nassert solution(4) == 'Even'\nassert solution(3) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Either', 'Test 1'\nassert solution(2) == 'Either', 'Test 2'\nassert solution(3) == 'Even', 'Test 3'\nassert solution(4) == 'Odd', 'Test 4'\nassert solution(5) == 'Either', 'Test 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Even', \"Test Case 1\"\nassert solution(2) == 'Odd', \"Test Case 2\"\nassert solution(3) == 'Even', \"Test Case 3\"\nassert solution(4) == 'Even', \"Test Case 4\"\nassert solution(5) == 'Odd', \"Test Case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'Either', \"Your code is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', but got: '{solution(input())}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n1\\n4\\n1\\n5\", \"Your solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"3\", \"Solution should return 3\"\nassert solution(314) == \"3\", \"Solution should return 3\"\nassert solution(1) == \"1\", \"Solution should return 1\"\nassert solution(5926) == \"4\", \"Solution should return 4\"\nassert solution(35897) == \"1\", \"Solution should return 1\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5\\n', 'Please provide the correct input'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [3, 1, 4, 1, 5]\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\tt f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"yes\\nno\\nno\\nyes\\nyes\", \"Incorrect output\"\nassert solution(stdin) == \"yes\\nno\\nno\\nyes\\nyes\", \"Incorrect output\"\nassert solution(stdin) == \"yes\\nno\\nno\\nyes\\nyes\", \"Incorrect output\"\nassert solution(stdin) == \"yes\\nno\\nno\\nyes\\nyes\", \"Incorrect output\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"10 2\\nb c\\nd e\") == \"no\", \"The solution is incorrect.\"\n\nassert solution(\"10 1\\nb c\\nd e\") == \"no\", \"The solution is incorrect.\"\n\nassert solution(\"10 2\\nb c\\nd e\") == \"yes\", \"The solution is incorrect.\"\n\nassert solution(\"10 2\\nb c\\nd e\") == \"yes\", \"The solution is incorrect.\"",
        "num_ids_2": 116,
        "num_ids_4": 166
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'yes', \"Expected 'yes', but got '{}'.\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 5\\nc t\\ni r\\nk p\\no c",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('5 6\\naa aa\\nbbb bb\\nccc cc') == 'no\\nno\\nyes\\nno\\n'\n\nassert solution('7 4\\ndh dg\\nef ef\\nfg fg') == 'yes\\nno\\nno\\nno\\n'",
        "num_ids_2": 117,
        "num_ids_4": 152
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\can the\\work people\\it of\\out the\\\") == \\\"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Error: Expected {expected_output}, but got {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1\\n1\\n\", \"Test case 1 failed\"\n\nassert solution(stdin=input()) == \"2\\n2\\n\", \"Test case 2 failed\"\n\nassert solution(stdin=input()) == \"3\\n3\\n\", \"Test case 3 failed\"\n\nassert solution(stdin=input()) == \"4\\n4\\n\", \"Test case 4 failed\"\n\nassert solution(stdin=input()) == \"5\\n5\\n\", \"Test case 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"2 1\\ncarrots?\\nhuffle-puff problems?\\n\\n\") == \"1\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"2 1\\ncarrots?\\n
        "num_ids_2": 80,
        "num_ids_4": 1027
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\nassert solution(\"2 3\\nhuffle-puff 1\\ncarrots?\\nbunnies\") == 3\nassert solution(\"2 1\\ncarrots?\\ndogs\") == 1\nassert solution(\"2 1\\ncarrots?\\nostriches\") == 1\nassert solution(\"2 1\\ncarrots?\\nvegas\") == 1\nassert solution(\"2 1\\ncarrots?\\nbitches\") == 1\nassert solution(\"2 1\\ncarrots?\\ncanucks\") == 1\n",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == 1\nassert solution(\"2 1\\nhuffle-puff\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n\") == 0\nassert solution(\"2 1\\nhuffle-puff\\npets\\n",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 1, \"Test failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"2 1\ncarrots?\nbunnies\"\"\"\n) == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+\\n|..|:::|.N.|:::|....|:::|.P.|:::|....|\\n|..|:::|.N.|:::|....|:::|.P.|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|....|:::|....|:::|....|:::|....|:::|....|:::|....|\\n|:::|....|:::|....|:::|....",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect!\"\n\nsample_input = \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\nsample_output = \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    white_pieces = ['K', 'Q', 'R', 'B', 'N', 'P']\n    black_pieces = ['k', 'q', 'r', 'b', 'n', 'p']\n    rows = []\n    for line in stdin.splitlines():\n        if line.startswith(\"+\"):\n            rows.append(line)\n        else:\n            row = \"\"\n            for char in line:\n                if char == \":\":\n                    rows[-1] += \",\" + row\n                    row = \"\"\n                    rows.append(char + row[1:])\n                elif char.isalpha() and char.isupper():\n                    row += char\n                elif char.isalpha() and char.islower():\n                    if char in white_pieces:\n                        row += char.upper()\n                    elif char in black_pieces:\n                        row += char.lower()\n                    else:\n                        raise ValueError(\"Invalid chess notation\")\n            rows[-1] += \",\" + row\n            rows.append(\"\")\n    for i, row in enumerate(rows):\n        for piece in row.split(\",\"):\n            rows[i] = piece\n    result = \"\"\n    for piece in rows[0].split(\",\"):\n        result += piece.strip() + \" \"\n    result += \"\\n\"\n    for i, row in enumerate(rows[1:]):\n        for piece in row.split(\",\"):\n            result += piece.strip() + \", \"\n    return result\n\"\"\"\n\nassert solution(sample_input) == sample_output, \"Your solution is incorrect!\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+\\n.r\\n.b.q\\n:q:k\\n.n\\n:p\\n.P.P\\n:p\\n.P\\nP\\n:P.P\\n.P\\n..P\\n..P\\nP.P\\n...P\\n...P\\nP.P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.P\\n...P\\n...P\\n.P.P\\nP.",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"White: \\nBlack: \\n\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: +,1,2,3,4,5,6,7,8,a,b,c,d,e,f,g,h\\nBlack: +,8,7,6,5,4,3,2,1,c,b,a,h,e,d,f\\n\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: +,1,2,3,4,5,6,7,8,a,b,c,d,e,f,g,h\\nBlack: +,8,7,6,5,4,3,2,1,c,b,a,h,e,d,f\\n\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: +,1,2,3,4,5,6,7,8,a,b,c,d,e,f,g,h\\nBlack: +,8,7,6,5,4,3,2,1,c,b,a,h,e,d,f\\n\"\nassert solution(\"...|:::|.n.|:::|...|:::|...|:p:|\") == \"White:...,1,2,3,4,5,6,7,8,p,n,p,p,p,p,p,p\\nBlack:...,8,7,6,5,4,3,2,1,p,p,p,p,p,p,p,p,p\\n\"\nassert solution(\"...|:::|...|:::|...|:::|...|\") == \"White:...,1,2,3,4,5,6,7,8,p,p,p,p,p,p,p,p,p\\nBlack:...,8,7,6,5,4,3,2,1,p,p,p,p,p,p,p,p,p\\n\"\nassert solution(\":P:|...|:::|...|:::|...|:::|...|\") == \"White: :P:,1,2,3,4,5,6,7,8,P,P,P,P,P,P,P,P,P,P\\nBlack: :P:,8,7,6,5,4,3,2,1,P,P,P,P,P,P,P,P,P,P\\n\"\nassert solution(\":.P:.|.P:.::|...|...|.P:|.P:.|...|\") == \"White:.P:.,.P:.::,...::,.P:.|.P:.::,...::|.P:.|.P:.::,...::|\\nBlack:.P:.,.P:.::,...::,.P:.|.P:.::,...::|.P:.|.P:.::,...::|\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 279
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"White:,Black: \"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 230,
        "num_ids_4": 230
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"..+..|.r.|..b.|..q:|.k.|..n.|..r.|..P.|..P.|..P.|..P.|..P.|..P.|..R:|..R:|..R:|..R:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..R:|..R:|..R:|..R:|..R:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|..P:|",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"Your wish is granted!\"\nassert solution(12) == \"Your wish is granted!\"\nassert solution(25) == \"Your wish is granted!\"\nassert solution(100) == \"Your wish is granted!\"\nassert solution(7) == \"Your wish is granted!\"\nassert solution(14) == \"Your wish is granted!\"\nassert solution(100) == \"Your wish is granted!\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Your wish is granted!\"\nprint(\"You will become a flying monkey!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3') == 'Your wish is granted!\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\n\", \"The solution is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(16) == 16, \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('16') == '16'  # Correct output\nprint('All tests passed!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '16', 'Sample Output: 16'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"16\", \"The length of the fence for the pasture is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(16) == 16, \"The output should be 16, but it is \" + str(solution(16))\nassert solution(1000000000) == 16, \"The output should be 16, but it is \" + str(solution(1000000000))\nassert solution(1000000000000) == 16, \"The output should be 16, but it is \" + str(solution(1000000000000))\nassert solution(10000000000000000000) == 16, \"The output should be 16, but it is \" + str(solution(10000000000000000000))\nassert solution(10000000000000000000000) == 16, \"The output should be 16, but it is \" + str(solution(10000000000000000000000000))",
        "num_ids_2": 82,
        "num_ids_4": 206
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(16) == \"16\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\\n\") == \"16\\n\", \"Test case 1 failed.\"\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"16\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\nassert solution(\"7 300\\n200 450 600 800 1000\") == \"4\\n\"\nassert solution(\"8 600\\n1200 1600 2000 2400 2800\") == \"4\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 115
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == 4\nprint(\"All tests passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\" # Expected Output: 4\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20\\n') == '4\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4\\n' # Expected output: 4",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 4",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 79\nassert solution(5) == 79\nassert solution(6) == 84\nassert solution(7) == 88\nassert solution(8) == 92",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica's javelin should have length 79.\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == 79\n\nassert solution('1\\n1') == 1\n\nassert solution('2\\n3\\n4\\n5') == 14\n\nassert solution('3\\n5\\n7\\n9\\n11') == 35\n\nassert solution('4\\n10\\n20\\n50\\n100') == 750",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one.\"\nassert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one.\"\nassert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one.\"\nassert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one.\"\nassert solution('4\\n21\\n34\\n18\\n9') == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one.\"",
        "num_ids_2": 102,
        "num_ids_4": 204
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"79\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"4\\n21\\n34\\n18\\n9\"\n) == \"79\\n\"\n\nassert solution(\n    \"5\\n10\\n15\\n20\\n25\"\n) == \"80\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 79, \"Expected output 79 but got: {}\".format(solution(3))\nprint(\"Test passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79, \"Test failed for expected output.\"\nprint(\"Test passed.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 79, \"The given solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"79\\n\", \"Please provide the correct input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'\nassert solution('10 20 5 10\\n2 3 4 5') == 'impossible'\nassert solution('5 3 3 2\\n2 1 1 1') == '2 3 0'\nassert solution('10 20 5 10\\n2 3 4 5') == 'impossible'\nassert solution('5 3 3 2\\n2 1 1 1') == '2 3 0'\nassert solution('10 20 5 10\\n2 3 4 5') == 'impossible'\nassert solution('5 3 3 2\\n2 1 1 1') == '2 3 0'\nassert solution('10 20 5 10\\n2 3 4 5') == 'impossible'\nassert solution('5 3 3 2\\n2 1 1 1') == '2 3 0'",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'impossible'  # Add additional test cases as needed\n\nfrom random import randint",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 1 5\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 0 4\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 0 5\") == \"impossible\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 113
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 3 0\"\nassert solution(input()) == \"2 2 2\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"1 3 1\"\nassert solution(input()) == \"2 2 1\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n1 2 3\") == \"impossible\"\nassert solution(\"5 3 3 4\\n2 3 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n2 3 3\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 3 2\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 3 1\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 3 0\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n1 2 3\") == \"impossible\"\nassert solution(\"5 3 3 4\\n2 3 4\") == \"impossible\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"impossible\"\nassert solution(input()) == \"2 3 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2 3 0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 4 4\\n0 1 4\") == \"impossible\"\nassert solution(\"5 3 4 4\\n0 1 5\") == \"2 3 0\"\nassert solution(\"5 3 4 4\\n0 1 4\\n0 1 5\") == \"impossible\"",
        "num_ids_2": 51,
        "num_ids_4": 109
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 0 0 0 0 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 1 0 1 1 6\") == \"1 0 0 0 0 2\"\nassert solution(\"0 1 1 1 1 5\") == \"0 0 0 0 0 2\"\nassert solution(\"0 1 0 1 1 6\") == \"1 0 0 0 0 2\"\nassert solution(\"0 1 1 1 1 5\") == \"0 0 0 0 0 2\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Example 1\"\n\nassert solution(\"0 1 2 2 2 8\") == \"2 0 0 0 0 1\", \"Example 2\"\n\nassert solution(\"0 1 2 2 2 3\") == \"1 0 0 0 0 1\", \"Example 3\"\n\nassert solution(\"0 1 2 2 2 9\") == \"2 0 0 0 0 1\", \"Example 4\"\n\nassert solution(\"0 1 2 2 2 4\") == \"1 0 0 0 0 1\", \"Example 5\"\n\nassert solution(\"0 1 2 2 2 5\") == \"2 0 0 0 0 1\", \"Example 6\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"2 2 3 3 4 4\") == \"0 0 0 0 0 0\"\nassert solution(\"0 1 2 3 4 5\") == \"1 2 0 0 0 0\"\nassert solution(\"1 1 1 1 1 1\") == \"1 1 0 0 0 0\"\nassert solution(\"5 5 5 5 5 5\") == \"0 0 0 0 0 0\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 1.3334, \"Expected 1.3334, got {}\".format(solution(stdin))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    123456 0.6666\n    qwerty 0.3334\n    \"\"\"\n) == \"1.3334\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '1.3334'  # expected output: 1.3334\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 62,
        "num_ids_4": 134
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1.3334'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 1.3334",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\n\nsolution(\"3 1\\n1 2 4\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3\\n10 20 15 25\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 73
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n1 2 4') == '1\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n1 2 4') == 1\nassert solution('3 2\\n1 2 3') == 1\nassert solution('3 2\\n1 3 3') == 1\nassert solution('3 2\\n1 1 1') == 1\nassert solution('3 1\\n2 2 3') == 1",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2 4\\n\") == \"1\"\nassert solution(\"5 3\\n3 2 4 6\\n\") == \"3\"\nassert solution(\"3 5\\n2 4 6 7\\n\") == \"3\"\nassert solution(\"3 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\"\nassert solution(\"2 3\\n1 2 4\\n\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 104
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n1 2 4') == '1'\nassert solution('2 4 6\\n7 8') == '2'\nassert solution('3 2 4 10 12') == '3'\nassert solution('1 5') == '1'",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == '''\nG:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n'''\nprint('All test cases pass')\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n\"\"\") == \"\"\"\nG:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: -------------------------------------\\nE:       *   *          *             *   *                   \\nD: ----*-------**-----*-------------*-------*---------------- \\nC: * *     *      * *     **    * *           *         ** ** \\nB: --------------------------**-----------------*-----*------ \\nA:                                                  *         \\ng: -----------------------------------------------*---------- \\nf:                                                            \\ne: ---------------------------------------------------------- \\nd:                                                            \\nc:                                                            \\nb:                                                            \\na: ---------------------------------------------------------- \\n\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''\nG:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:\\nF: -------------------------------------\\nE:       *   *          *             *   *                   *\\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *         \\ng: -----------------------------------------------*----------\\nF:                                                            \\nE: ----------------------------------------------------------\\nD:                                                            \\nC:                                                            \\nB:                                                            \\nA: ----------------------------------------------------------'",
        "num_ids_2": 157,
        "num_ids_4": 157
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution should return {sample_output}, but it returned {solution(sample_input)}.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(sample_input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                   \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *         \\ng: -----------------------------------------------*----------\\nf:                                                            \\ne: ----------------------------------------------------------\\nd:                                                            \\nc:                                                            \\nb:                                                            \\na: ----------------------------------------------------------\"\n",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"possible\", \"Your code is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'possible'\nassert solution(open('input.txt', 'r')) == 'definitely not possible'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"possible\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"11\\n1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"12\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"13\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"14\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"16\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"17\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"18\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"19\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"21\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"22\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"23\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"24\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"25\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"26\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1') == 'possible'\nassert solution('3\\n1 3 2') == 'possible'\nassert solution('3\\n2 2 2') == 'possible'\nassert solution('3\\n4 3 2') == 'possible'\nassert solution('3\\n2 4 2') == 'possible'\nassert solution('3\\n3 3 2') == 'possible'\nassert solution('3\\n2 3 2') == 'possible'\nassert solution('3\\n3 3 1') == 'definitely not possible'\nassert solution('3\\n2 3 1') == 'definitely not possible'\nassert solution('3\\n3 3 0') == 'definitely not possible'\nassert solution('3\\n2 3 0') == 'definitely not possible'\nassert solution('3\\n3 3 -1') == 'definitely not possible'\nassert solution('3\\n2 3 -1') == 'definitely not possible'\nassert solution('3\\n3 3 -2') == 'definitely not possible'\nassert solution('3\\n2 3 -2') == 'definitely not possible'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == 3\nassert solution('10') == 1\nassert solution('') == 0\n",
        "num_ids_2": 37,
        "num_ids_4": 44
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 3 2 1 2 2 1 1 3\") == 3, \"Kim's current obsession is to build towers from ordered sequences of Lego bricks.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\n\nprint('All tests passed!')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\nassert solution(\"2\\n2 1 1\") == 2\nassert solution(\"5\\n1 1 1 1 1\") == 1\nassert solution(\"1000000\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 47,
        "num_ids_4": 1027
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3, \"Expected Output: 3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\nprint(\"All test cases pass!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == 3\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nBOLT 9.88 8.92\\n\") == \"35.54\\nBOLT\\n\"\nassert solution(\"ASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\n\") == \"35.54\\nASHMEADE\\n\"\nassert solution(\"ASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\n\") == \"35.54\\nASHMEADE\\nASHMEADE\\nASHMEADE\\n\"\nassert solution(\"ASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\nASHMEADE 9.90 8.85\\n\") == \"35.54\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\nASHMEADE\\n",
        "num_ids_2": 112,
        "num_ids_4": 1026
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Test case {test_case} failed. Expected: {expected}, Received: {solution(stdin=input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"\n",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == '2\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3\\n1 2\\n2 4\\n5 6\\n') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3, 1, 2, 2, 4, 5, 6]) == 2\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == 2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == '2'\nprint(\"All test cases passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == 2\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\", \"Test case 1 failed.\"\nassert solution(\"heey\") == \"heey\", \"Test case 2 failed.\"\nassert solution(\"hello\") == \"heeeeeeey\", \"Test case 3 failed.\"\nassert solution(\"goodbye\") == \"heeeeeeeeeeeey\", \"Test case 4 failed.\"\nassert solution(\"nevermind\") == \"heeeeeeeeeeeeeeeeeeeeeeeey\", \"Test case 5 failed.\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hello\") == \"helo\"\nassert solution(\"goodbye\") == \"goodbye\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\" * 1000) == \"hehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehehe",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hello\") == \"heey\"\nassert solution(\"goodbye\") == \"heeeay\"\nassert solution(\"later\") == \"heeeay\"\nassert solution(\"howdy\") == \"heeeay\"\nassert solution(\"goodbye\") == \"heeeay\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\", \"The solution for the given input should be 'heey', not '{}'\".format(solution(\"hey\"))\nassert solution(\"hello\") == \"heehe\", \"The solution for the given input should be 'heehe', not '{}'\".format(solution(\"hello\"))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"helo\") == \"heelo\"\nassert solution(\"hello\") == \"hehello\"\nassert solution(\"goodbye\") == \"hegoodbye\"\nassert solution(\"goodnight\") == \"hegoodnight\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\", \"The solution should return heey\"\nassert solution(\"heeeeey\") == \"heeeeeeey\", \"The solution should return heeeeeeey\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"heey\"\nassert solution(\"h3y\") == \"heey\"\nassert solution(\"heeey\") == \"heeey\"\nassert solution(\"heeeeeeeeeey\") == \"heeeeeeeeeey\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heyy\") == \"heey\"\nassert solution(\"hello\") == \"heee\"\nassert solution(\"heeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 23,
        "num_ids_4": 1027
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"heey\"\nassert solution(\"heeey\") == \"heeeey\"\nassert solution(\"heeeey\") == \"heeeey\"\nassert solution(\"hello\") == \"heee\"\nassert solution(\"heee\") == \"heee\"\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hello world') == 'hello world'\nassert solution('12345678901234567890') == '12345678901234567890'\nassert solution('abcdefghijklmnopqrstuvwxyz' * 1001) == 'abcdefghijklmnopqrstuvwxyz' * 2\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 99
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'TODO'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"0 1 2 3\\n1 0 3 4\\n1 4 0 2\\n1 3 2 4\\n2 4 3 1\\n3 4 1 2\\n3 1 2 4\\n4 2 3 1\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"0 1 2 3\\n1 0 3 4\\n1 4 0 2\\n1 3 2 4\\n2 4 3 1\\n3 4 1 2\\n3 1 2 4\\n4 2 3 1\") == \"1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 150,
        "num_ids_4": 300
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Incorrect solution\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 2\\n1 3\\n1 4\", \"Your solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\"\n\nassert solution(\"\"\"\n5\n0 1 1 2 3\n1 0 2 3 4\n1 2 0 3 4\n2 3 3 0 4\n3 4 4 4 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n1 5\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n'\nassert solution('5 0 1 1\\n0 5 1 1\\n1 0 2 2\\n1 2 3 1\\n2 1 2 0\\n3 2 1 2\\n4 1 3 0') == '5 1\\n0 1\\n2 2\\n3 3\\n4 4\\n'\nassert solution('1 1 0 0\\n1 1 1 0\\n1 1 0 0\\n1 1 1 0') == '1 1\\n1 1\\n1 1\\n1 1\\n'\nassert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '1 1\\n1 1\\n1 1\\n1 1\\n'",
        "num_ids_2": 151,
        "num_ids_4": 275
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(2)) == \"1 2\\n1 3\\n1 4\"\nassert solution(str(3)) == \"1 3\\n1 4\\n2 3\"\nassert solution(str(4)) == \"1 4\\n2 3\\n3 4\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2\\n1 3\\n1 4\", \"The solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"The solution is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Your code is incorrect. It should return ABCD, but it returns {}.\".format(solution(\"EWPGAJRB\"))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"The solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"def\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == 2, \"Test case 1 failed\"\nassert solution(\"defg\") == 3, \"Test case 2 failed\"\nassert solution(\"hijklmn\") == 5, \"Test case 3 failed\"\nassert solution(\"nopqrst\") == 7, \"Test case 4 failed\"\nassert solution(\"uvwxyz\") == 1, \"Test case 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 0\nassert solution(\"hello\") == 2\nassert solution(\"world\") == 2\nassert solution(\"aaa\") == 2\nassert solution(\"aabbc\") == 2\nassert solution(\"abcddde\") == 2\nassert solution(\"abcd\") == 0\nassert solution(\"aaaaaa\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 3\nassert solution(\"hello\") == 5\nassert solution(\"per\") == 5",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == 2\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 5\nassert solution(\"ghi\") == 4\nassert solution(\"jkl\") == 2\nassert solution(\"mno\") == 2\nassert solution(\"pqrs\") == 1\nassert solution(\"tuv\") == 3\nassert solution(\"wxyz\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == 2, \"Output: Solution should be 2\"\nassert solution(\"def\") == 1, \"Output: Solution should be 1\"\nassert solution(\"hello\") == 1, \"Output: Solution should be 1\"\nassert solution(\"racecar\") == 2, \"Output: Solution should be 2\"\nassert solution(\"test\") == 3, \"Output: Solution should be 3\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"hello\") == 1\nassert solution(\"add\") == 2\nassert solution(\"Peragrams are fun\") == 6",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defg\") == 2\nassert solution(\"hello\") == 0\nassert solution(\"racecar\") == 5\nassert solution(\"hello world\") == 11\nassert solution(\"a\") == 1\nassert solution(\"abcd\") == 1\nassert solution(\"a b c\") == 3\nassert solution(\"abacad\") == 0",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"2\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\", \"The expected output is 'go', but it is 'no'.\"\n\nassert solution(\"aaa\\nh\") == \"go\", \"The expected output is 'go', but it is 'no'.\"\n\nassert solution(\"aaaaaah\") == \"go\", \"The expected output is 'go', but it is 'no'.\"",
        "num_ids_2": 57,
        "num_ids_4": 84
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaah\") == \"no\", \"The expected output is no.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaah') == 'no', \"The output should be 'no'.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"aaah\\nanaaaah\") == \"go\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaah\") == \"no\", \"Test case 1 failed\"\nassert solution(\"aaaaah\") == \"go\", \"Test case 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaah') == 'no', \"Solution should return 'no'\"\nassert solution('aaaaah') == 'go', \"Solution should return 'go'\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"aaah\\naaaaah\"\n) == \"no\", \"The correct output is 'no', but it is incorrect.\"\n\nassert solution(\n    \"aaah\\naaaaah\"\n) == \"no\", \"The correct output is 'no', but it is incorrect.\"\n\nassert solution(\n    \"aaah\\naaaaah\"\n) == \"no\", \"The correct output is 'no', but it is incorrect.\"\n\nassert solution(\n    \"aaah\\naaaaah\"\n) == \"no\", \"The correct output is 'no', but it is incorrect.\"\n\nassert solution(\n    \"aaah\\naaaaah\"\n) == \"no\", \"The correct output is 'no', but it is incorrect.\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A', \"The solution should return 'A', but it returned '{}'.\".format(solution('A2B1A2B2A1A2A2A2'))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Test failed\"\nassert solution(\"A1B1A1B1A1B1A1B1\") == \"A\", \"Test failed\"\nassert solution(\"B2B2A2B2A2B2A2B2\") == \"B\", \"Test failed\"\nassert solution(\"B1B2A2B2A2B2A2B2\") == \"B\", \"Test failed\"\nassert solution(\"B1B1A1B1A1B1A1B1\") == \"A\", \"Test failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A', \"Test case 1 failed.\"\nassert solution('B1A1B1A1B1A1A1A1') == 'B', \"Test case 2 failed.\"\nassert solution('A1B2A2B2A1A2A2A2') == 'A', \"Test case 3 failed.\"\nassert solution('B2A1B1A1B1A1A1A1') == 'B', \"Test case 4 failed.\"\nassert solution('B1A1A1B1A1A1A1A1') == 'B', \"Test case 5 failed.\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B3C3B3A3B3A3B3A1\") == \"B\"\nassert solution(\"A1B1C1A1B1A1B1C1\") == \"B\"\nassert solution(\"A1B2C2A1B2A1B2C2\") == \"A\"\nassert solution(\"B2A2B1A1C1A2B1A1\") == \"A\"\nassert solution(\"A2B3C3A3B3A3B3A1\") == \"A\"\nassert solution(\"B3A3B2A2B2A2B2A2\") == \"A\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B1B1B1B1B1B1B1B1\") == \"A\"\nassert solution(\"A1A2A3A1A1A2A1\") == \"A\"\nassert solution(\"A1A1A1A1A1A1A1A1\") == \"A\"\nassert solution(\"B2A2B2B2B2A2A2A2\") == \"A\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n\n```python\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == 21\nprint(\"All tests passed!\")",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21\\n'\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n6 6\\n6 5\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n') == '16\\n'\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n6 6\\n6 5\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n5 5\\n5 4\\n4 4\\n3 3\\n2 2\\n1 1\\n') == '24\\n'",
        "num_ids_2": 181,
        "num_ids_4": 319
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    6 5\n    1 6 20 4\n    5 3 2 4\n    1 2 2\n    2 3 8\n    2 4 3\n    3 6 10\n    3 5 15\n    '''\n) == \"21\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n7 8 6 5\") == \"62\\n\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n7 8 6 5\\n1 2 10 12\") == \"150\\n\"",
        "num_ids_2": 151,
        "num_ids_4": 243
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == 21\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n4 5 10\\n4 3 5\\n4 2 15\\n5 6 15\") == 13\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n4 5 10\\n4 3 5\\n4 2 15\\n5 6 15\\n6 7 20\\n6 8 25\\n6 9 25\\n6 10 20\\n6 11 15\\n6 12 20\\n6 13 15\\n6 14 15\\n6 15 10\") == 18",
        "num_ids_2": 167,
        "num_ids_4": 344
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 21",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Input does not match output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D def23w12d') == 'def23w12d'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2', 'The solution is incorrect.'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D defghijklmnopqrstuvwxyz') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\"\nassert solution(\"4\\n\") == \"Alice\\n2\"\nassert solution(\"8\\n\") == \"Bob\\n2\"\nassert solution(\"10\\n\") == \"Alice\\n4\"\nassert solution(\"12\\n\") == \"Bob\\n1\"\nassert solution(\"15\\n\") == \"Alice\\n5\"\nassert solution(\"18\\n\") == \"Bob\\n3\"\nassert solution(\"20\\n\") == \"Alice\\n6\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"Alice\"\nassert solution(\"3\\n\") == \"Bob\"\nassert solution(\"10\\n\") == \"Alice\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin=input())) == \"Alice\"\nassert solution(solution(stdin=input())) == \"Bob\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n\"\nassert solution(\"3\\n\") == \"Bob\\n\"\nassert solution(\"1\\n\") == \"Alice\\n\"\nassert solution(\"5\\n\") == \"Bob\\n\"\nassert solution(\"1\\n\") == \"Alice\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == 'Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n') == 'Alice\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('4\\n') == 'Bob\\n5\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5\\n') == 'Alice\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('6\\n') == 'Alice\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('7\\n') == 'Alice\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('8\\n') == 'Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('9\\n') == 'Bob\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('10\\n') == 'Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Alice\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"Alice\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'2\\n') == 'Alice\\n1\\n'\nassert solution(b'3\\n') == 'Alice\\n2\\n'\nassert solution(b'5\\n') == 'Bob\\n1\\n'\nassert solution(b'4\\n') == 'Bob\\n2\\n'\nassert solution(b'7\\n') == 'Alice\\n1\\n'\nassert solution(b'6\\n') == 'Bob\\n1\\n'\nassert solution(b'8\\n') == 'Alice\\n2\\n'\nassert solution(b'9\\n') == 'Bob\\n1\\n'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output and the solution are not the same.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == 'Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('10') == 'Bob\\n5\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('5') == 'Alice\\n2\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('15') == 'Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"Alice\"\nassert solution(3) == \"Alice\"\nassert solution(4) == \"Alice\"\nassert solution(5) == \"Alice\"\nassert solution(6) == \"Alice\"\nassert solution(7) == \"Alice\"\nassert solution(8) == \"Alice\"\nassert solution(9) == \"Alice\"\nassert solution(10) == \"Alice\"\nassert solution(11) == \"Bob\"\nassert solution(12) == \"Bob\"\nassert solution(13) == \"Bob\"\nassert solution(14) == \"Bob\"\nassert solution(15) == \"Bob\"\nassert solution(16) == \"Bob\"\nassert solution(17) == \"Bob\"\nassert solution(18) == \"Bob\"\nassert solution(19) == \"Bob\"\nassert solution(20) == \"Bob\"\nassert solution(21) == \"Bob\"\nassert solution(22) == \"Bob\"\nassert solution(23) == \"Bob\"\nassert solution(24) == \"Bob\"\nassert solution(25) == \"Bob\"\nassert solution(26) == \"Bob\"\nassert solution(27) == \"Bob\"\nassert solution(28) == \"Bob\"\nassert solution(29) == \"Bob\"\nassert solution(30) == \"Bob\"\nassert solution(31) == \"Bob\"\nassert solution(32) == \"Bob\"\nassert solution(33) == \"Bob\"\nassert solution(34) == \"Bob\"\nassert solution(35) == \"Bob\"\nassert solution(36) == \"Bob\"\nassert solution(37) == \"Bob\"\nassert solution(38) == \"Bob\"\nassert solution(39) == \"Bob\"\nassert solution(40) == \"Bob\"\nassert solution(41) == \"Bob\"\nassert solution(42) == \"Bob\"\nassert solution(43) == \"Bob\"\nassert solution(44) == \"Bob\"\nassert solution(45) == \"Bob\"\nassert solution(46) == \"Bob\"\nassert solution(47) == \"Bob\"\nassert solution(48) == \"Bob\"\nassert solution(49) == \"Bob\"\nassert solution(50) == \"Bob\"\nassert solution(51) == \"Bob\"\nassert solution(52) == \"Bob\"\nassert solution(53) == \"Bob\"\nassert solution(54) == \"Bob\"\nassert solution(55) == \"Bob\"\nassert solution(56) == \"Bob\"\nassert solution(57) == \"Bob\"\nassert solution(58) == \"Bob\"\nassert solution(59) == \"Bob\"\nassert solution(60) == \"Bob\"\nassert solution(61) == \"Bob\"\nassert solution(62) == \"Bob\"\nassert solution(63) == \"Bob\"\nassert solution(64) == \"Bob\"\nassert solution(65) == \"Bob\"\nassert solution(66) == \"Bob\"\nassert solution(67) == \"Bob\"\nassert solution(68) == \"Bob\"\nassert solution(69) == \"Bob\"\nassert solution(70) == \"Bob\"\nassert solution(71) == \"Bob\"\nassert solution(72) == \"Bob\"\nassert solution(73) == \"Bob\"\nassert solution(74) == \"Bob\"\nassert solution(75) == \"Bob\"\nassert solution(76) == \"Bob\"\nassert solution(77) == \"Bob\"\nassert solution(78) == \"Bob\"\nassert solution(79) == \"Bob\"\nassert solution(80) == \"Bob\"\nassert solution(81) == \"Bob\"\nassert solution(82) == \"Bob\"\nassert solution(83) == \"Bob\"\nassert solution(84) == \"Bob\"\nassert solution(85) == \"Bob\"\nassert solution(86) == \"Bob\"\nassert solution(87) == \"Bob\"\nassert solution(88) == \"Bob\"\nassert solution(89) == \"Bob\"\nassert solution(90) == \"Bob\"\nassert solution(91) == \"Bob\"\nassert solution(92) == \"Bob\"\nassert solution(93) == \"Bob\"\nassert solution(94) == \"Bob\"\nassert solution(95) == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\", \"Test case 1 failed\"\n\nassert solution(\"1 2 3\") == \"1+2=3\\n\", \"Test case 2 failed\"\n\nassert solution(\"5 5 5\") == \"5+5=10\\n\", \"Test case 3 failed\"\n\nassert solution(\"10 20 30\") == \"10+20=30\\n\", \"Test case 4 failed\"\n\nassert solution(\"1 1 1\") == \"1+1=2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 115
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Your solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"The given input is invalid\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\", \"The solution should be '5+3=8'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\"\nassert solution(\"6 5 4\") == \"6-5=4\\n\"\nassert solution(\"2 2 2\") == \"2*2=4\\n\"\nassert solution(\"10 7 2\") == \"10/7=3\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n\nassert solution(\"10 7 2\") == \"10-7=2\"\n\nassert solution(\"100 50 90\") == \"50+90=140\"\n\nassert solution(\"1 2 3\") == \"1+2=3\"\n\nassert solution(\"1 1 1\") == \"1-1=0\"",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"\nassert solution(\"4\\n1 2 1\") == \"NO\\n\"\nassert solution(\"5\\n2 2 1\") == \"YES\\n\"\nassert solution(\"6\\n1 1 1\") == \"NO\\n\"\nassert solution(\"7\\n3 1 1\") == \"NO\\n\"\nassert solution(\"8\\n2 1 1\") == \"YES\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n8\\n3 2 2 1 1 3 1 1\\nOutput\\nYES\\n') == 'YES\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"6\\n1 2 3 4\") == \"NO\"\n\nsolution(\"8\\n3 2 2 1 1 3 1 1\") # valid input\nsolution(\"6\\n1 2 3 4\") # valid input\nsolution(\"8\\n1 2 3 1 1 3 2 2\") # invalid input\nsolution(\"8\\n1 2 3 2 1 3 1 2\") # invalid input",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES', 'Incorrect output. Please check the examples and the code'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n8\n3 2 2 1 1 3 1 1\n\"\"\"\n) == \"YES\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\", \"Your solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'def solution(stdin: str) -> str:', \"The solution function is not correct.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') =='mummy'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) =='mummy'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\", \"The solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"ghost\"\nassert solution(\"mummy\") == \"mummy\"\nassert solution(\"witch\") == \"witch\"\nassert solution(\"demon\") == \"demon\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) =='mummy'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'def test():', 'Please implement the solution function.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"",
        "num_ids_2": 477,
        "num_ids_4": 477
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''', \"Your solution is incorrect\")\n\nassert solution('''\nArtist\nAlbum\nSong_Title\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''', \"Your solution is incorrect\")\n\nassert solution('''\nArtist\nAlbum\nSong_Title\nLength_seconds\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''', \"Your solution is incorrect\")\n\nassert solution('''\nArtist\nAlbum\nSong_Title\nLength_seconds\nArtist\nAlbum\nSong_Title\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''', \"Your solution is incorrect\")\n\nassert solution('''\nArtist\nAlbum\nSong_Title\nLength_seconds\nArtist\nAlbum\nSong_Title\nLength_seconds\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''', \"Your solution is incorrect\")",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Your code is incorrect. Please check the given code and make sure it meets the requirements.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\") == \\\n\"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\n\nassert solution(\"3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist\\nAlbum\\nSong_Title\\n\"\n\nassert solution(\"5\\nArtist\\nTchaikovsky Piano_Favorites\\nJames_Taylor Dad_Loves_His_Work\\nJames_Taylor Dad_Loves_His_Work\\nJames_Taylor Dad_Loves_His_Work\\nGeorge_Winston Summer Lullaby\\n\") == \\\n\"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"",
        "num_ids_2": 147,
        "num_ids_4": 235
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Tchaikovsky Piano_Favorites November 163\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\"\nassert solution(\"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\nassert solution(\"Tchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\nassert solution(\"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\nassert solution(\"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 1",
        "num_ids_2": 347,
        "num_ids_4": 815
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input') == 'Sample Output'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES', 'Your solution is incorrect.'\nassert solution('2 10 7\\n5 6 5 5 5 5 5') == 'NO', 'Your solution is incorrect.'\nassert solution('2 10 7\\n5 5 4 5 5 5 5') == 'NO', 'Your solution is incorrect.'\nassert solution('2 10 7\\n5 5 5 5 4 5 5') == 'NO', 'Your solution is incorrect.'\nassert solution('2 10 7\\n5 5 5 5 5 4 5') == 'YES', 'Your solution is incorrect.'",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {solution(stdin)}!= {expected}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    2 10 7\n    5 5 5 5 5 5 5\n    ''') == 'YES'\n\nassert solution(r'''\n    2 10 7\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    ''') == 'NO'\n\nassert solution(r'''\n    2 10 7\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    ''') == 'YES'\n\nassert solution(r'''\n    2 10 7\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    5 5 5 5 5 5 5\n    ''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"2 10 8\\n5 5 5 5 5 5 5\") == \"NO\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'YES', 'Incorrect output'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\\n\") == \"YES\\n\"\nassert solution(\"1 2 3\\n2 3 4\\n\") == \"NO\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"3 6 7\\n4 2 3 4\") == \"NO\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 4\") == \"NO\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"66.666667\\n50.000000\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"66.666667\\n50.000000\"\nassert solution(\"7\\nNYNN\\nNNYN\\nNYYN\\nNNYN\\nNYYN\\nNNNY\\nYYNY\\n\") == \"Not Effective\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Not Effective\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"66.666667\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Wrong output. Expected: {expected}, Got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"Not Effective\\n66.666667\\n50.000000\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\\n50.000000\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"50.000000\"\nprint(\"All tests passed!\")",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == [\"Bruno\", \"Adrian\", \"Goran\"]\nassert solution(stdin) == [\"Bruno\", \"Goran\", \"Adrian\"]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"Bruno\\n\"\nassert solution(5) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(6) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(7) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(8) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(9) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(10) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(11) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(12) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(13) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(14) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(15) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(16) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(17) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(18) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(19) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(20) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(21) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(22) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(23) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(24) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(25) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(26) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(27) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(28) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(29) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(30) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(31) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(32) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(33) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(34) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(35) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(36) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(37) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(38) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(39) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(40) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(41) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(42) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(43) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(44) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(45) == \"Bruno\\nAdrian\\nGoran\\n\"\nassert solution(46) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(47) == \"Goran\\nBruno\\nAdrian\\n\"\nassert solution(48) == \"Adrian\\nBruno\\nGoran\\n\"\nassert solution(49",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Bruno\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test Case {test_case} failed with output: {solution(input())} instead of expected output: {expected}\"\ntest_case += 1",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == solution(sample_output)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Received output: {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0, \"No test cases provided\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 543\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3 543\", \"Expected output is incorrect.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3 543\\n\", \"Your implementation is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '3 543'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3 543\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '3 543'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"\nprint(\"All tests passed!\")",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(\"Correct!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n3 3 3 3 3 3 3 3 3 3\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4",
        "num_ids_2": 444,
        "num_ids_4": 909
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Your solution is not correct. Expected {expected_output}, but got {solution(sample_input)}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test failed\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n4 1 3 4 3 5 2 5 4 3\\n4 4 3 2 5 3 5 2 3 5\\n5 5 4 2 3 3 5 2 5 3\\n1 3 3 1 5 3 2 3 4 3\\n5 3 4 1 2 4 3 1 4 2\\n3 2 1 2 5 4 2 5 4 2\\n5 3 4 2 2 1 4 1 3 4\\n4 4 2 1 3 4 3 1 4 5\\n\") == -1, \"Test failed\"",
        "num_ids_2": 626,
        "num_ids_4": 626
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\n",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Expected 5, got {}\".format(solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\"))",
        "num_ids_2": 453,
        "num_ids_4": 453
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test case 1\"\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n6 7 8 9 10 11 12 13 14\\n7 15 16 17 18 19 20 21 22\\n8 23 24 25 26 27 28 29 30\\n9 31 32 33 34 35 36 37 38\\n10 39 40 41 42 43 44 45 46\\n11 47 48 49 50 51 52 53 54\\n12 55 56 57 58 59 60 61 62\\n13 63 64 65 66 67 68 69 70\\n14 71 72 73 74 75 76 77 78\\n\") == -1, \"Test case 2\"",
        "num_ids_2": 707,
        "num_ids_4": 707
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test failed.\"",
        "num_ids_2": 229,
        "num_ids_4": 229
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n5\\n5\") == \"gunilla has a point\"\nassert solution(\"2\\n1\\n7\\n7\") == \"gunilla has a point\"\nassert solution(\"1\\n2\\n5\\n5\") == \"gunilla has a point\"\nassert solution(\"2\\n1\\n7\\n7\") == \"gunilla has a point\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('A watched pot never boils') == 'gunilla has a point'\nassert solution('Chef Edward has been cooking for ages, and empirically the saying seems to be true in his kitchen \u2013 he has yet to see a pot actually start boiling. His wife Gunilla is a bit suspicious of Edward\u2019s claim though. She knows how he often loses focus after a little while, and thinks that it is very likely Edward gets tired of watching after about the same period of time starting when he puts it on the stove.') == 'gunilla has a point'\nassert solution('2\\n1 7\\n5 5') == 'gunilla has a point'\nassert solution('3\\n10 10\\n1 1\\n2 5') == 'gunilla has a point'\nassert solution('5\\n1 100\\n1 1\\n5 5') == 'edward is right'\nassert solution('3\\n10 10\\n2 10\\n1 1') == 'gunilla has a point'\nassert solution('4\\n10 10\\n1 1\\n2 5\\n5 5') == 'edward is right'\nassert solution('4\\n10 10\\n1 1\\n2 5\\n5 5\\n10 20\\n10 10\\n1 1') == 'gunilla has a point'\nassert solution('3\\n10 10\\n1 1\\n2 5\\n5 5\\n10 10\\n10 20\\n1 1') == 'edward is right'",
        "num_ids_2": 135,
        "num_ids_4": 190
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 7\\n5 5\\n\") == \"gunilla has a point\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"\nprint(\"All test cases passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A watched pot never boils\") == \"gunilla has a point\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"gunilla has a point\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n2 4\\n5 5\") == \"edward is right\\n\"\nassert solution(\"2\\n1 7\\n4 3\") == \"definitely not\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 7\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"1 7\\n5 6\\n6 7\") == \"gunilla has a point\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == \"edward is right\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 115
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'gunilla has a point'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 176
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution for the problem is incorrect. The output is '{solution(input())}', while the expected output is '{output}'.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution() == '4'\nassert solution() == '4'\nassert solution() == '1'\nassert solution() == '2'\nassert solution() == '2'\nassert solution() == '4'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 352
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"\"\"4\n4\n4\n1\n2\n2\n4\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 352
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"day5_test.txt\", \"r\").read()) == \"2015\\n1982\\n2016\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2015\\n1982\\n2016\", \"Please implement the solution\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '''\n2015\n1982\n2016\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2015\\n1982\\n2016\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abbcccddddeeeee') == '10', \"Expected 10, got: \" + solution('abbcccddddeeeee')",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \\'__main__\\':\\n    solution(open(\\'input.txt\\', \\'r\\').read())\\n'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"abbcccddddeeeee\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n\"\"\"\n) == \"Engineering will save the world from inefficiency
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\nassert solution(b\"A man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man, a plan, a canal, Panama!\\nA man",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_text) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_text)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\n\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nThis is a duplicate word\\nThis is a duplicate word\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nThis is a duplicate word\\nThis is a..\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its humanity\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\"\nassert solution(\"This is a test string. This is another test string.\") == \"This is a test string.\\n...\\nThis is another test string.\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity'\nassert solution('This is a test\\nThis is a test') == 'This is a test\\nThis is a test'\nassert solution('There is only one life\\nThere is only one life') == 'There is only one life\\nThere is only one life'\nassert solution('Python is awesome\\nPython is awesome') == 'Python is awesome\\nPython is awesome'\nassert solution('This is the first sentence\\nThis is the second sentence') == 'This is the first sentence\\n
        "num_ids_2": 92,
        "num_ids_4": 148
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"The quick brown fox jumps over the lazy dog\"\nassert solution(\"The dog eats a salad\") == \"The dog eats a salad.\"\nassert solution(\"abc def ghi jkl mno pqr stu vwx yz\") == \"abc def ghi jkl mno pqr stu vwx yz\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20.\"\nassert solution(\"This is a sample input\") == \"This is a sample input\"",
        "num_ids_2": 92,
        "num_ids_4": 154
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\n\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"satisfactory\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"unsatisfactory\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"unsatisfactory\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') == 'unsatisfactory'\n\nprint(\"satisfactory\")",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'unsatisfactory'\nassert solution(input()) == 'unsatisfactory'\nassert solution(input()) =='satisfactory'\nassert solution(input()) =='satisfactory'\nassert solution(input()) =='satisfactory'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\", \"Please provide the correct input\"\n\nclass Solution:\n    def __init__(self):\n        self.variables = set()\n        self.clauses = set()\n\n    def check_assignment(self, clause):\n        satisfied = True\n        for literal in clause:\n            if literal < 0:\n                if literal not in self.variables:\n                    return False\n                satisfied &= (not self.variables[literal])\n            else:\n                if literal in self.variables:\n                    return False\n                satisfied &= (self.variables[literal])\n        return satisfied\n\n    def find_instance(self, clauses):\n        for clause in clauses:\n            if len(set(clause)) == 3 and len(set(clause))!= len(clause) and len(set(clause))!= 6:\n                self.clauses.add(clause)\n                if self.check_assignment(clause):\n                    return True\n                self.clauses.remove(clause)\n\n    def solve(self, m: int, n: int, clauses: List[List[int]]):\n        instances = []\n        for _ in range(m):\n            clauses = set(clauses[next(iter(clauses))])\n            if len(clauses) >= 8:\n                instances.append(clauses)\n\n        for clauses in instances:\n            self.find_instance(clauses)\n\n        satisfiable_instances = [instance for instance in instances if self.check_assignment(instance)]\n        if len(satisfiable_instances) == 0:\n            return \"unsatisfactory\"\n        elif len(satisfiable_instances) == 1:\n            return \"satisfactory\"\n        else:\n            return \"satisfactory\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"unsatisfactory\", \"Your solution should return 'unsatisfactory'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"unsatisfactory\", \"Your code is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n\") == \"unsatisfactory\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"satisfactory\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"1\\n1\") == \"none\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8\\n1 1 1 5 3 4 6 6') == '4'\nprint('All test cases passed.')",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"your_answer_here\", \"The solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('1\\n2 2 2 4') == 'none'\nassert solution('1\\n1 1 1 2') == '1'\nassert solution('10\\n1 2 2 3 2 3 2 4 5 5') == 'none'",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == output_string, f\"Expected '{output_string}', but got '{solution(input_string)}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4', \"The solution should return '4', but it returned '{}'.\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"08:00:00\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"16:00:00\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"08:00:00\\n\", \"The solution should be 08:00:00.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00 04:00:00\") == \"08:00:00\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00 04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '12:00:00'\nassert solution('00:00:00') == '00:00:00'\nassert solution('10:60:00') == '10:60:00'\nassert solution('24:00:00') == '24:00:00'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '12:00:00'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(31, 6) == \"4\"\nassert solution(28, 10) == \"3\"\nassert solution(50, 20) == \"2\"\nassert solution(27, 20) == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('31 6') == '4'\nassert solution('20 4') == '1'\nassert solution('10 3') == '4'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"31 6\") == \"4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('31 6') == 4, \"Incorrect output for sample input.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(31 6) == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"7 10\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"31 6\") == 4\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2.6666666666666665, \"The solution is incorrect for the given input.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2.6666666666666665\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2.6666666666666665\", \"The solution should be 2.6666666666666665, but it is currently {}\".format(solution(\"3\"))\nassert solution(\"2\") == \"2.718281828459045\", \"The solution should be 2.718281828459045, but it is currently {}\".format(solution(\"2\"))\nassert solution(\"10\") == \"2.718281828459045\", \"The solution should be 2.718281828459045, but it is currently {}\".format(solution(\"10\"))\nassert solution(\"0\") == \"2.718281828459045\", \"The solution should be 2.718281828459045, but it is currently {}\".format(solution(\"0\"))",
        "num_ids_2": 124,
        "num_ids_4": 248
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"The output is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2.6666666666666665\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2.6666666666666665', \"Test failed: should return 2.6666666666666665\"\nassert solution(5) == '2.749065749065749', \"Test failed: should return 2.749065749065749\"\nassert solution(10) == '2.6995008747716904', \"Test failed: should return 2.6995008747716904\"\nassert solution(10000) == '2.6995008747716904', \"Test failed: should return 2.6995008747716904\"",
        "num_ids_2": 104,
        "num_ids_4": 215
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 7\") == \"paul\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 7') == 'paul\\n'\nassert solution('2 5 0') == 'opponent\\n'\nassert solution('0 5 3') == 'definitelyPaul\\n'",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nassert solution(10, 10, 10) == \"opponent\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('1 1 1') == 'opponent'\nassert solution('10 0 0') == 'opponent'\nassert solution('2 2 2') == 'opponent'\nassert solution('1 1 1') == 'opponent'\nassert solution('1 1 0') == 'opponent'\nassert solution('1 1 2') == 'opponent'\nassert solution('1 1 2') == 'opponent'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 7') == 'paul'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 1 1\") == \"opponent\"\nassert solution(\"10 5 10\") == \"opponent\"",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3)<|im_sep|>",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 2, \"Solution should return 2.\"\nassert solution(2) == 3, \"Solution should return 3.\"\nassert solution(3) == 4, \"Solution should return 4.\"\nassert solution(4) == 4, \"Solution should return 4.\"\nassert solution(5) == 5, \"Solution should return 5.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 2\nassert solution(10) == 11",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"The output should be '2', but it is '{}'.\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\"\nassert solution(7) == \"4\"\nassert solution(10) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test Case {test_case_index + 1} failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'No'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('123') == 'Yes'\nassert solution('123a') == 'No'\nassert solution('c0deninja5') == 'No'\nassert solution('c0deninja51') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"No\", \"Your favourite social media website is changing their policy on login password validation: a slight error when logging in is now acceptable!\"\nassert solution(\"123a\") == \"No\", \"Your favourite social media website is changing their policy on login password validation: a slight error when logging in is now acceptable!\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"abcdef\") == \"No\"\nassert solution(\"ABCDEF\") == \"No\"\nassert solution(\"abcdefg\") == \"Yes\"\nassert solution(\"abcdefgh\") == \"Yes\"\nassert solution(\"ABCDEFGH\") == \"Yes\"\nassert solution(\"ABCDEFGHIJ\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"Yes\\n\"\nassert solution(\"123a\") == \"No\\n\"\nassert solution(\"c0deninja5\") == \"Yes\\n\"\nassert solution(\"c0deninja51\") == \"No\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test Case Failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test failed: The solution is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test case 1 failed\"\nassert solution(\"Zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test case 2 failed\"\nassert solution(\"zepelepenapaPapapripikapa\") == \"zelena paprika\", \"Test case 3 failed\"\nassert solution(\"zepelepenapa  papapripikapa\") == \"zelena paprika\", \"Test case 4 failed\"\nassert solution(\"zepelepenapa    papapripikapa\") == \"zelena paprika\", \"Test case 5 failed\"\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 126
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"zepelepenapa papapripikapa\")) == \"zelena paprika\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"The solution is incorrect.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected\nprint(\"All good\" if all_good else \"IMPOSSIBLE\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 2\") == \"-32\\nIMPOSSIBLE\"\nassert solution(\"10 5\") == \"-5\\nALL GOOD\"\nassert solution(\"0 100\") == \"-37.5\\nIMPOSSIBLE\"\nassert solution(\"50 30\") == \"-18.75\\nALL GOOD\"\nassert solution(\"100 10\") == \"-2.5\\nALL GOOD\"",
        "num_ids_2": 37,
        "num_ids_4": 82
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"-32 2\") == \"-32\"\nassert solution(\"100 100\") == \"ALL GOOD\"\nassert solution(\"-100 100\") == \"ALL GOOD\"\nassert solution(\"101 10\") == \"IMPOSSIBLE\"\nassert solution(\"-101 10\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"32 -1\") == \"IMPOSSIBLE\"\nassert solution(\"32 0\") == \"ALL GOOD\"\nassert solution(\"32 20\") == \"ALL GOOD\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(32, 2) == \"IMPOSSIBLE\"\nassert solution(2, 25) == \"ALL GOOD\"\nassert solution(2, 30) == \"IMPOSSIBLE\"\nassert solution(2, 0) == \"-32\"\nassert solution(32, 4) == \"IMPOSSIBLE\"\nassert solution(0, 0) == \"IMPOSSIBLE\"\nassert solution(0, -10) == \"IMPOSSIBLE\"\nassert solution(2, -3) == \"IMPOSSIBLE\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 2\") == \"-32\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 2\") == \"-32\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"2 3 4 5\") == \"one\"\nassert solution(\"3 3 3 3\") == \"none\"",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"2 2 3 3\\n2 2 3 3\") == \"none\"",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"both\"\nassert solution(stdin) == \"one\"\nassert solution(stdin) == \"none\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\nassert solution(\"3 1 2 1\") == \"none\\none\\none\"\nassert solution(\"5 5 5 5\") == \"none\\none\\none\"\nassert solution(\"1 3 4 3\") == \"none\\none\\none\"\nassert solution(\"4 4 4 4\") == \"none\\none\\none\"",
        "num_ids_2": 47,
        "num_ids_4": 87
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter A, B, C, D: \")) == \"both\"\nassert solution(input(\"Enter P, M, G: \")) == \"one\"\nassert solution(input(\"Enter P, M, G: \")) == \"none\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\nnone\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3\\n1 3 4') == 'both\\none\\none'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"5 5 3 3\\n1 3 4\") == \"none\"\nassert solution(\"10 10 3 3\\n1 3 4\") == \"one\"",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 2 3 3\n    1 3 4\n    \"\"\"\n) == \"both\\n\"\n\nassert solution(\n    \"\"\"\n    4 2 3 3\n    1 3 4\n    \"\"\"\n) == \"none\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 3 3\n    1 3 4\n    2 2 3 3\n    1 3 4\n    \"\"\"\n) == \"both\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 8\") == 10, \"Test case failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == 10, \"Test failed.\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 6 8\") == 10, \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == 10, \"The output is not correct\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 8\") == 10\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == 10, \"The output is not correct\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received output: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"533\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"533\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())} should be {expected}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"533\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\\n\"\nassert solution(\"10000 10000\") == \"10000\\n\"\nassert solution(\"0 360\") == \"1\\n\"\nassert solution(\"10000 8000\") == \"10000\\n\"\nassert solution(\"10000 0\") == \"0\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"10000 90\") == \"10000\"\nassert solution(\"2000 100\") == \"3000\"\nassert solution(\"500 89\") == \"500\"\nassert solution(\"500 70\") == \"533\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '39.0\\n30.0\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 9\n69 60\n100 60\n\"\"\") == \"\"\"\n39.0\n30.0\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\\n\") == \"39.0\\n30.0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"4.0\\n5.0\"\nassert solution(\"1 1\\n0 0\\n-1 0\\n\") == \"-2.0\\n0.0\"",
        "num_ids_2": 69,
        "num_ids_4": 101
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\\n\") == \"39.0\\n30.0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2 28\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\", \"Expected: 2 28, but got: \" + solution(\"5\\n23 27 31 28 30\")",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28\\n'\nprint('All test cases pass')",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28\\n', \"The given solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n23 27 31 28 30\\n') == '2 28\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution failed: {solution(stdin)}\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\nassert solution() == 3\nassert solution() == 2\nassert solution() == 3\nassert solution() == 2\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"3 5\\n2 2 1 2\") == \"2\\n\"\nassert solution(\"2 1\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 3\") == \"2\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"5 3\\n4 1 2 3\") == \"1\\n\"\nassert solution(\"5 4\\n3 1 4 1\") == \"2\\n\"\nassert solution(\"3 5\\n5 1 2 3\") == \"1\\n\"\nassert solution(\"4 7\\n6 1 5 1\\n4 2 7 1\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 1\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 1\\n2 3 4\\n5 6 7\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 1\\n2 3 4\\n5 6 7\\n8 9 10\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 1\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n\") == \"2\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 135
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'3 6\\n1 2 3\\n') == '2\\n'\nassert solution(b'4 5\\n2 3 4\\n') == '2\\n'\nassert solution(b'6 7\\n1 2 3\\n4 5 6\\n') == '2\\n'\n",
        "num_ids_2": 50,
        "num_ids_4": 82
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6\\n1 2 3\\n') == '2'\nassert solution('3 6\\n1 2 4\\n') == '1'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n1 2 3\") == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 1\") == \"0\\n\"\nassert solution(\"3 6\\n1 1 1\") == \"1\\n\"\nassert solution(\"3 6\\n1 1 2\") == \"1\\n\"\nassert solution(\"3 6\\n1 2 2\") == \"2\\n\"\nassert solution(\"3 6\\n1 1 3\") == \"2\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\nassert solution(\"1 1 1\\n2 2 2\\n\") == \"3\"\nassert solution(\"3 3 3\\n2 2 2\\n\") == \"2\"\nassert solution(\"3 3 3\\n1 2 2\\n\") == \"1\"\nassert solution(\"3 3 3\\n3 3 3\\n\") == \"1\"\nassert solution(\"3 3 3\\n3 2 2\\n\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 6\\n1 2 3') == '2\\n'\nassert solution('5 1\\n3 1 1 1') == '1\\n'\nassert solution('4 5\\n2 1 2 1\\n3 2 2 2') == '0\\n'\nassert solution('3 5\\n1 2 3 4 5') == '0\\n'",
        "num_ids_2": 44,
        "num_ids_4": 101
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\nassert solution(\"1\\nWMWMMWMW\") == \"1\"\nassert solution(\"1\\nWWWMWMWM\") == \"3\"\nassert solution(\"1\\nWWMWMWWM\") == \"5\"\nassert solution(\"1\\nWWMWMWWM\") == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\nMWWMWMMWM\") == \"9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution should return the expected output.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"9\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nWWMWMMWM\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\"\n\nfrom typing import List\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed. Output: {output}, Expected output: {output}\"\nfor t, input_ in enumerate(data):\n    assert solution(input_) == output, f\"Test case {t+1} failed. Output: {output}, Expected output: {output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3', 'Expected Output: 3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\", \"Please provide the correct input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3\\n'\nassert solution('1 2\\n3 undo 4') == '1\\n'\nassert solution('3 2\\n4 undo 5') == '2\\n'\nassert solution('3 2\\n2 undo 5') == '3\\n'\nassert solution('3 2\\n4 undo 2') == '3\\n'\nassert solution('3 2\\n0 undo 5') == '3\\n'\nassert solution('3 2\\n0 undo 2') == '3\\n'",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"4\\n\"\nassert solution(\"5 4\\n2 3 undo 2\") == \"1\\n\"\nassert solution(\"5 4\\n2 3 4 undo 2\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n3 2 1\\n') == '6 7'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6 7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"6 7\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\"\nassert solution(\"2 5\\n2 4 2 4 2\") == \"2 5\"\nassert solution(\"2 4\\n1 2 3 4 5\") == \"1 2 3\"\nassert solution(\"2 3\\n1 2 3\\n3 2 1\\n4 2 1\") == \"6 7\"",
        "num_ids_2": 53,
        "num_ids_4": 115
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7\\n'\nassert solution('4 2\\n1 2 3\\n2 1 2') == '8 5\\n'\nassert solution('3 2\\n1 2 3\\n2 1 2') == '7 5\\n'",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '6 7'\nprint('All tests passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"als mollen mollen mollen mollen mollen mollen\") == \"als mollen mollen mollen mollen mollen mollen\"\nassert solution(\"als when correct\") == \"correct\"\nassert solution(\"mollen moles correct\") == \"correct\"\nassert solution(\"mollen destroy correct\") == \"correct\"\nassert solution(\"mollen mills incorrect\") == \"incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 73
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"als mollen mollen mollen mollen mollen mollen\") == \"correct\\n64 correct\\n\"\nassert solution(\"mollen moles correct\") == \"correct\\n3 correct\\n\"\nassert solution(\"mollen destroy correct\") == \"correct\\n4 correct\\n\"\nassert solution(\"mollen mills incorrect\") == \"incorrect\\n2 incorrect\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 88
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('confused_dutchman.in', 'r')) == \"\"\"\n64 correct\n665 incorrect\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for sample input {input()}\\nExpected output: {expected_output}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution should be {expected_output}, but is {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    7\n    als mollen mollen mollen mollen mollen mollen\n    \"\"\"\n) == \"\"\"\n    64 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    7\n    als when correct\n    \"\"\"\n) == \"\"\"\n    6 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    7\n    als when incorrect\n    \"\"\"\n) == \"\"\"\n    6 incorrect\n    \"\"\"\nassert solution(\n    \"\"\"\n    7\n    als destroy correct\n    \"\"\"\n) == \"\"\"\n    6 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    7\n    als mills incorrect\n    \"\"\"\n) == \"\"\"\n    6 incorrect\n    \"\"\"\nassert solution(\n    \"\"\"\n    4\n    als when correct\n    \"\"\"\n) == \"\"\"\n    1 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    4\n    als moles correct\n    \"\"\"\n) == \"\"\"\n    2 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    4\n    als destroy correct\n    \"\"\"\n) == \"\"\"\n    2 correct\n    \"\"\"\nassert solution(\n    \"\"\"\n    4\n    als mills incorrect\n    \"\"\"\n) == \"\"\"\n    2 incorrect\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '64 correct'\nassert solution() == '665 incorrect'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nalslalsd\\naasc\\naltus\\naltius\\nasdl\\n\") == \"64 correct\"\nassert solution(\"4\\nals when correct\\nmollus correct\\nmollus incorrect\\nmollus mills\\n\") == \"665 incorrect\"\n\nfrom typing import List",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"als mollen mollen mollen mollen mollen mollen\") == \"correct\"\nassert solution(\"mollen mills incorrect\") == \"incorrect\"\nassert solution(\"mollen destroy correct\") == \"incorrect\"\nassert solution(\"def solution(stdin: str) -> str: pass\") == \"correct\"",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(dedent(\"\"\"\n    7\n    als mollen mollen mollen mollen mollen mollen\n    4\n    als when correct\n        mollen moles correct\n        mollen destroy correct\n        mollen mills incorrect\n    \"\"\")) == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"7\\n\"\n\nsample_input = \"\"\"\n4\n2 3 4 3\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '7\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution should return {expected}, but returned {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3 4 3') == '7\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 4 3') == '7\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\\n\"\nprint(\"All tests passed.\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 1\") == \"1\\n\"\nassert solution(\"3\\n1 1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 3\") == \"1\\n\"\nassert solution(\"2\\n2 3\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7\", \"Your solution is incorrect. Please see the example problem and the provided code for the correctness.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 4.0]\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''\n0.0 0.0\n2.0 2.0\n0.0 4.0\n'''\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n1000 2000\n''') == '''\n-500.0 0.0\n2500.0 2500.0\n500.0 2500.0\n500.0 500.0\n'''\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n500.001 500.001\n''') == '''\n-500.0 0.0\n2500.0 2500.0\n500.0 2500.0\n500.0 500.0\n'''\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n500.0 500.0\n1000 2000\n''') == '''\n-500.0 0.0\n2500.0 2500.0\n500.0 2500.0\n500.0 500.0\n'''\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n500.0001 500.0001\n1000 2000\n''') == '''\n-500.0 0.0\n2500.0 2500.0\n500.0 2500.0\n500.0 500.0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Your implementation is not correct\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n0.0 0.0\n2.0 2.0\n0.0 4.0\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution() == \"0.0 0.0\\n4.0 4.0\\n0.0 4.0\"\nassert solution() == \"0.0 0.0\\n2.0 2.0\\n2.0 2.0\"\nassert solution() == \"0.0 0.0\\n4.0 4.0\\n4.0 4.0\"\nassert solution() == \"0.0 0.0\\n2.0 2.0\\n4.0 4.0\"\nassert solution() == \"0.0 0.0\\n4.0 4.0\\n4.0 4.0\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10001\") == \"10001\"\nassert solution(\"50000\") == \"50000\"\nassert solution(\"100000\") == \"100000\"",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'\\n') == '1\\n'\nassert solution(b'5\\n') == '5\\n'\nassert solution(b'10000\\n') == '10000\\n'",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output does not match the expected output. \\nInput: {stdin}\\nExpected Output: {expected_output}\\nOutput: {solution(stdin)}\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == 4\nassert solution(\"5\") == 5",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == 4\nassert solution(\"5\") == 5",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output: 34\\n\") == \"34\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 1\\n12 16\\n') == '34'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\\n\") == \"34\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n12 16\\n') == '34\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:34\") == \"34\\n\"\nassert solution(\"5 3\\n3 2\\nSample Output:7\") == \"7\\n\"\nassert solution(\"1 1\\n5 3\\nSample Output:5\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 79
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"The output is {solution}, but it should be {expected_output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"34\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 1\\n\") == 3\nassert solution(\"5\\n1 2 3 1 4\\n\") == 4\nassert solution(\"6\\n1 2 3 1 4 5\\n\") == 4\nassert solution(\"7\\n1 2 3 1 4 5 6\\n\") == 4\nassert solution(\"8\\n1 2 3 1 4 5 6 7\\n\") == 4\nassert solution(\"9\\n1 2 3 1 4 5 6 7 8\\n\") == 4\nassert solution(\"10\\n1 2 3 1 4 5 6 7 8 9\\n\") == 4\nprint(\"All tests passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 1') == 3",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 1\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 1\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"10\\n\"\nassert solution(\"100\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"100\\n\"\nassert solution(\"1000\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"1000\\n\"\nassert solution(\"10000\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"10000\\n\"\nassert solution(\"100000\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"100000\\n\"\nassert solution(\"1000000\\n1 2 3 4 1 5 1 2 1 3 4 1\") == \"1000000\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 124
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nprint(\"All tests passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3 1') == 3\nassert solution('4\\n2 3 4 3') == 4\nassert solution('5\\n1 2 3 1 1') == 3\nassert solution('5\\n2 3 4 3 2') == 4",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 1\\n4\") == 3",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1.0) == 1088, \"Test failed\"\nassert solution(123456.789) == 1088, \"Test failed\"\nassert solution(1234567890.000) == 1088, \"Test failed\"\nassert solution(1000) == 1088, \"Test failed\"\nassert solution(5280) == 4854, \"Test failed\"\nassert solution(1000000000) == 1088, \"Test failed\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1.0') == '1088'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1.0) == 1088, \"Test 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1.0\") == 1088, \"Test failed: The output for the sample input 1.0 is incorrect.\"\nprint(\"Test passed.\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1.0') == '1088'\nprint(solution('1.0'))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1.0') == '1088'\nassert solution('123.456') == '1245'\nassert solution('1000.0') == '1088'\nassert solution('1000.123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456",
        "num_ids_2": 34,
        "num_ids_4": 1027
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.0\") == 1088, \"Incorrect result\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 1088, \"Incorrect output for input 1.0\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n', \"Your solution is incorrect.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n0 4\n0 50\n0 100\n0 0\n0 100\n''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\nassert solution('''\n1 5\n0 0\n0 0\n0 0\n''') == '50.000000000\\n50.000000000\\n50.000000000\\n50.000000000'\nassert solution('''\n2 4\n0 0\n0 0\n0 0\n''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 4\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 100 100\\n0 0 100 100 0 0 10",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"25.000000000\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"25.000000000\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"25.000000000\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"25.000000000\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"25.000000000\", \"Test case 5 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n0 4\n1 50 50 50\n1 100 50 50\n1 100 100 50\n1 50 150 50\n''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"0 4\nSample Output:\n25.000000000\n25.000000000\n25.000000000\n25.000000000\"\"\") == \"25.000000000\"\nassert solution(\"\"\"1 2 3 4\nSample Output:\n3.000000000\n6.000000000\n9.000000000\n12.000000000\"\"\") == \"3.000000000\"\nassert solution(\"\"\"5 10\nSample Output:\n50.000000000\n50.000000000\n50.000000000\n50.000000000\"\"\") == \"50.000000000\"\n",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 4\\n3 3 3 3\\n0 4 100 100 100\\n0 4 100 100 100\\n0 4 100 100 100\\n0 4 100 100 100\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"DA\", \"Your solution is incorrect.\"\nassert solution() == \"DA\", \"Your solution is incorrect.\"\nassert solution() == \"DA\", \"Your solution is incorrect.\"\nassert solution() == \"DA\", \"Your solution is incorrect.\"\nassert solution() == \"NE\", \"Your solution is incorrect.\"\nassert solution() == \"NE\", \"Your solution is incorrect.\"\nassert solution() == \"NE\", \"Your solution is incorrect.\"\nassert solution() == \"NE\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7') == 'DA\\nDA\\nDA\\nNE\\nNE'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"DA\"\nassert solution(4) == \"DA\"\nassert solution(5) == \"NE\"\nassert solution(6) == \"NE\"\nassert solution(7) == \"NE\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'DA'\nassert solution() == 'DA'\nassert solution() == 'DA'\nassert solution() == 'NE'\nassert solution() == 'NE'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input_, output in zip(sample_input, sample_output)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=stdin) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n7 42') == 6\nassert solution('1\\n1 1\\n3 2\\n4 2\\n5 2\\n6 2') == 6\nassert solution('1\\n1 1\\n10 5\\n15 5\\n20 5') == 6\nassert solution('2\\n1 1\\n1 5\\n1 10\\n1 15\\n1 20') == 6\nassert solution('1\\n1 1\\n1 10\\n1 15\\n1 20\\n1 25\\n1 30\\n1 35\\n1 40\\n1 45\\n1 50\\n1 55\\n1 60\\n1 65\\n1 70\\n1 75\\n1 80\\n1 85\\n1 90\\n1 95\\n1 100\\n1 105\\n1 110\\n1 115\\n1 120\\n1 125\\n1 130\\n1 135\\n1 140\\n1 145\\n1 150\\n1 155\\n1 160\\n1 165\\n1 170\\n1 175\\n1 180\\n1 185\\n1 190\\n1 195\\n1 200\\n1 205\\n1 210\\n1 215\\n1 220\\n1 225\\n1 230\\n1 235\\n1 240\\n1 245\\n1 250\\n1 255\\n1 260\\n1 265\\n1 270\\n1 275\\n1 280\\n1 285\\n1 290\\n1 295\\n1 300\\n1 305\\n1 310\\n1 315\\n1 320\\n1 325\\n1 330\\n1 335\\n1 340\\n1 345\\n1 350\\n1 355\\n1 360\\n1 365\\n1 370\\n1 375\\n1 380\\n1 385\\n1 390\\n1 395\\n1 400\\n1 405\\n1 410\\n1 415\\n1 420\\n1 425\\n1 430\\n1 435\\n1 440\\n1 445\\n1 450\\n1 455\\n1 460\\n1 465\\n1 470\\n1 475\\n1 480\\n1 485\\n1 490\\n1 495\\n1 500\\n1 505\\n1 510\\n1 515\\n1 520\\n1 525\\n1 530\\n1 535\\n1 540\\n1 545\\n1 550\\n1 555\\n1 560\\n1 565\\n1 570\\n1 575\\n1 580\\n1 585\\n1 590\\n1 595\\n1 600\\n1 605\\n1 610\\n1 615\\n1 620\\n1 625\\n1 630\\n1 635\\n1 640\\n1 645\\n1 650\\n1 655\\n",
        "num_ids_2": 54,
        "num_ids_4": 123
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n7 42\\n') == 6 # Correct Output",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution\n\nimport math",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {i} failed: Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('def solution(stdin: str) -> str:\\n    pass\\n\\n') == '6\\n'\nassert solution('def solution(stdin: str) -> str:\\n    pass\\n\\n') == '6\\n'\nassert solution('def solution(stdin: str) -> str:\\n    pass\\n\\n') == '6\\n'",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"correct\"\nassert solution(4) == \"def solution(stdin: str) -> str:\"\nassert solution(5) == \"pass\"",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"correct\", \"The solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"correct\"\nassert solution(sample_input_2) == \"def solution(stdin: str) -> str:\n        pass\"\nassert solution(sample_input_3) == \"def solution(stdin: str) -> str:\n        pass\"",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"correct\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == expected_output, f\"Solution returned unexpected output: {solution(solution_input)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\"\n) == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\") == \"Runoff!\"\nprint(\"All test cases passed!\")\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Runoff!'\n",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Marti Graham\") == \"Marti Graham\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Joseph Ivers\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Bruce Stanger\") == \"Runoff!\"\nassert solution(\"Barbara Skinner\") == \"Barbara Skinner\"\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n\"\"\"\n) == \"Connie Froggatt\\n\"\n\nassert solution(\n    \"\"\"\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef main(stdin: str):\\n    candidates = set()\\n    for line in stdin.splitlines():\\n        name, votes = line.strip().split()[:2]\\n        candidates.add(name)\\n    print(' '.join(candidates))\\n\\nif __name__ == '__main__':\\n    main(stdin=open('input.txt', 'r'))\\n\\n# Output:\\n# Penny Franklin\\n# Marti Graham\\n# Runoff!\\n# Connie Froggatt\\n# Joseph Ivers\\n# Runoff!\\n# Barbara Skinner\\n# Runoff!\\n",
        "num_ids_2": 247,
        "num_ids_4": 247
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"***\") == \"Runoff!\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == 2, \"The output is incorrect.\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Jabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == 2\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == 2, \"The output should be 2.\"\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('5\\nSlytherin-Schild\\nJabba-the-Hutt Huttese\\nLuke\\nGrakchawwaa') == '2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('4\\nMace-Windu\\nLuke\\nGrakchawwaa\\nR2D2') == '2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('6\\nRedemption\\nLuke\\nGrakchawwaa\\nR2D2\\nDarth Vader') == '1\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 168,
        "num_ids_4": 271
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution({input()})!= {output}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == 900\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code goes here\\n# The output will be assigned to the variable solution\\n# To test the solution, you can call it with the given input values\\n# Then, you can print the output\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n\") == \"900\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('1 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') =='stay home'\nassert solution('3 2000 1 3\\n1000\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('1 2000 1 3\\n1000\\n0 2 2\\n300\\n27 3 20') =='stay home'\nassert solution('3 1000 1 3\\n1000\\n0 2 2\\n300\\n27 3 20') =='stay home'",
        "num_ids_2": 94,
        "num_ids_4": 190
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"900\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nC D F D C D F F F C\") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C\\nC\\sharp B E G A E F\\n\") == \"C D# F\"\nassert solution(\"10\\nC D F D C D F F F C\\nC\\sharp B E G A E F\\nG\\flat A\") == \"none\"\nassert solution(\"10\\nC D F D C D F F F C\\nC\\sharp B E G A E F\\nG\\flat A\\nD\\sharp E F C D\\n\") == \"A\"\n\nfrom typing import List",
        "num_ids_2": 67,
        "num_ids_4": 158
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nC D F D C D F F F C') == 'A# C D# F'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"A# C D# F\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"A# C D#\"\nassert solution(7) == \"A# C D# F\"\nassert solution(10) == \"A# C D# F\"\nassert solution(20) == \"A# C D# F\"\nassert solution(30) == \"A# C D# F\"\nassert solution(40) == \"A# C D# F\"\nassert solution(45) == \"A# C D# F\"\nassert solution(50) == \"A# C D# F\"\nassert solution(55) == \"A# C D# F\"\nassert solution(60) == \"A# C D# F\"\nassert solution(65) == \"A# C D# F\"\nassert solution(70) == \"A# C D# F\"\nassert solution(75) == \"A# C D# F\"\nassert solution(80) == \"A# C D# F\"\nassert solution(85) == \"A# C D# F\"\nassert solution(90) == \"A# C D# F\"\nassert solution(95) == \"A# C D# F\"\nassert solution(100) == \"A# C D# F\"\nassert solution(105) == \"A# C D# F\"\nassert solution(110) == \"A# C D# F\"\nassert solution(115) == \"A# C D# F\"\nassert solution(120) == \"A# C D# F\"\nassert solution(125) == \"A# C D# F\"\nassert solution(130) == \"A# C D# F\"\nassert solution(135) == \"A# C D# F\"\nassert solution(140) == \"A# C D# F\"\nassert solution(145) == \"A# C D# F\"\nassert solution(150) == \"A# C D# F\"\nassert solution(155) == \"A# C D# F\"\nassert solution(160) == \"A# C D# F\"\nassert solution(165) == \"A# C D# F\"\nassert solution(170) == \"A# C D# F\"\nassert solution(175) == \"A# C D# F\"\nassert solution(180) == \"A# C D# F\"\nassert solution(185) == \"A# C D# F\"\nassert solution(190) == \"A# C D# F\"\nassert solution(195) == \"A# C D# F\"\nassert solution(200) == \"A# C D# F\"\nassert solution(205) == \"A# C D# F\"\nassert solution(210) == \"A# C D# F\"\nassert solution(215) == \"A# C D# F\"\nassert solution(220) == \"A# C D# F\"\nassert solution(225) == \"A# C D# F\"\nassert solution(230) == \"A# C D# F\"\nassert solution(235) == \"A# C D# F\"\nassert solution(240) == \"A# C D# F\"\nassert solution(245) == \"A# C D# F\"\nassert solution(250) == \"A# C D# F\"\nassert solution(255) == \"A# C D# F\"\nassert solution(260) == \"A# C D# F\"\nassert solution(265) == \"A# C D# F\"\nassert solution(270) == \"A# C D# F\"\nassert solution(275) == \"A# C D# F\"\nassert solution(280) == \"A# C D# F\"\nassert solution(285) == \"A# C D# F\"\nassert solution(290) == \"A# C D# F\"\nassert solution(295) == \"A# C D# F\"\nassert solution(300) == \"A# C D# F\"\nassert solution(305) == \"A# C D# F\"\nassert solution(310) == \"A# C D# F\"\nassert solution(315) == \"A# C D# F\"\nassert solution(320) == \"A",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 'A# C D# F\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nC D F D C D F F F C\") == \"A# C D# F\"\nassert solution(\"10\\nD E F G A C D D E F G\") == \"A# C# G# A# B\"\nassert solution(\"10\\nC D F D C D F F F C G D H\") == \"C D F D C D F F F C G D\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nD E F G A C D D E F G H A B\") == \"A# C# G# A# B\"\nassert solution(\"10\\nE G A C E F F G G F D E\") == \"B C# G D E E\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A B C D E F G A\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C D F D C D F D C\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F G G G F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A B C D E F G A C\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C D F D C D F D C E\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F G G G F G G G F G\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A B C D E F G A C\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C D F D C D F D C E F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F G G G F G G G F G\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A B C D E F G A C\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C D F D C D F D C E F F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F G G G F G G G F G\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nA D E F G A C D D E F G H A B C D E F G A C\") == \"A# C# G# A# B\"\nassert solution(\"10\\nB C D F E G F F G G F C D F D C D F D C E F F F\") == \"C D F D C D F F F C G D H\"\nassert solution(\"10\\nC D F D C D F F F C G D H E F G G G F G G G F G",
        "num_ids_2": 60,
        "num_ids_4": 137
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''10\nC D F D C D F F F C ''') == 'A# C D# F'\nassert solution('''5\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''10\nC D F D C D F F F C ''') == 'A# C D# F'\nassert solution('''5\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B# C# D# E# F# G# H# I# J# K#'\nassert solution('''1\nA B C D E F G H I J K ''') == 'A# B",
        "num_ids_2": 11,
        "num_ids_4": 22
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"A# C D# F\", \"Incorrect output.\"\nassert solution(1) == \"A\", \"Incorrect output.\"\nassert solution(3) == \"A C C C D\", \"Incorrect output.\"\nassert solution(6) == \"A# C# D\", \"Incorrect output.\"\nassert solution(7) == \"A# C# D# F\", \"Incorrect output.\"\nassert solution(8) == \"A# C# D# F G\", \"Incorrect output.\"\nassert solution(9) == \"A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(10) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(11) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(12) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(13) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(14) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(15) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(16) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(17) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(18) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(19) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(20) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(21) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(22) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(23) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(24) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(25) == \"A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G A# C# D# F G\", \"Incorrect output.\"\nassert solution(26) == \"A# C# D# F G A# C# D",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"h\u00e4llo world!\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00f6\u00e4\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00f6\u00e4\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00f6\u00e4\u00e4\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00f6\u00e4\u00e4\u00e4\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00f6\u00e4\u00e4\u00e4\u00e4\") == \"haer talar vi rikssvenska\"\n",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"\u00f6stg\u00f6tska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\") == \"dae ae ju traeligt va\"\nassert solution(\"de\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 45,
        "num_ids_4": 80
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('\u00f6stg\u00f6tska') == 'haer talar vi rikssvenska'\nassert solution('\u00e4\u00f6st\u00e4') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6ste') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6stett') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6stet') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligt') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligtta') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligta') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligtaa') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligtaat') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligtaar') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaer') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaarl') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaare') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaala') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalat') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalar') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaale') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalel') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalele') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalella') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalelle') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaalta') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltat') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalar') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltale') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalel') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalele') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalella') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalelle') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalta') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltat') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltalar') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltale') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalel') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalele') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalella') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalelle') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalta') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltat') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltalar') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltaltale') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00f6steligttaaltalel') == 'dae ae ju traeligt va'\nassert solution",
        "num_ids_2": 50,
        "num_ids_4": 92
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"Haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"definitely not in \u00f6stg\u00f6tska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 49,
        "num_ids_4": 540
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"dae ae ju traeligt va\"\nassert solution(\"dain ja haer daju i sjufte\") == \"haer talar vi rikssvenska\"\nassert solution(\"dain ja haer daju i sjufte \u00e9h jafn\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 47,
        "num_ids_4": 557
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {solution(input_data)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2', \"Test case 1 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10') == '12 10 3 8 4 2 10 5 25', \"Test case 2 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2') == '12 10 3 8 4 2 10 5 25 1 2', \"Test case 3 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2 2 4') == '12 10 3 8 4 2 10 5 25 1 2 2 4', \"Test case 4 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2 2 4 5 10') == '12 10 3 8 4 2 10 5 25 1 2 2 4 5 25', \"Test case 5 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2 2 4 5 10 1 2 4') == '12 10 3 8 4 2 10 5 25 1 2 2 4 5 25 1 4', \"Test case 6 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2 2 4 5 10 1 2 4 6 10') == '12 10 3 8 4 2 10 5 25 1 2 2 4 5 25 1 4 6 25', \"Test case 7 failed\"\n\nassert solution('12 8 2 4 10 3 25 14 5 10 1 3 2 2 4 5 10 1 2 4 6 10 1 2 5') == '12 10 3 8 4 2 10 5 25 1 2 2 4 5 25 1 4 6 25 1 5 25', \"Test case 8 failed\"",
        "num_ids_2": 107,
        "num_ids_4": 255
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Your implementation is incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12 10 3 8 4 2\\n\", \"Incorrect output. Please fix the code.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2', \"Test case 1 should output '12 10 3 8 4 2'.\"\n\nassert solution('12 8 2 4 10 3 25 14 15 7 16 2 12 11 9 13 5 10') == '12 10 3 8 4 2 16 7 9 5 11 13 15', \"Test case 2 should output '12 10 3 8 4 2 16 7 9 5 11 13 15'.\"\n\nassert solution('12 8 2 4 10 3 25 14 15 7 16 2 12 11 9 13 5 10 15 14 9 11') == '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14', \"Test case 3 should output '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14'.\"\n\nassert solution('12 8 2 4 10 3 25 14 15 7 16 2 12 11 9 13 5 10 15 14 9 11 25 13 6 17 10 18 19 15 20') == '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14 19 17 15 18 10 20 13', \"Test case 4 should output '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14 19 17 15 18 10 20 13'.\"\n\nassert solution('12 8 2 4 10 3 25 14 15 7 16 2 12 11 9 13 5 10 15 14 9 11 25 13 6 17 10 18 19 15 20 25 19 23 15 22 25 23') == '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14 19 17 15 18 10 20 13 22 23', \"Test case 5 should output '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14 19 17 15 18 10 20 13 22 23'.\"\n\nassert solution('12 8 2 4 10 3 25 14 15 7 16 2 12 11 9 13 5 10 15 14 9 11 25 13 6 17 10 18 19 15 20 25 19 23 15 22 25 23 15 24 25 24 25') == '12 10 3 8 4 2 16 7 9 5 11 13 15 11 14 19 17 15 18 10 20 13 22 23 24 25', \"Test case 6 should output '12 10 3 8 4 2 16 ",
        "num_ids_2": 188,
        "num_ids_4": 552
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 0 3\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 0 3\") == \"4\"\nassert solution(\"9 1 3\") == \"0\"\nassert solution(\"1000 0 3\") == \"4\"\nassert solution(\"9 1 10\") == \"0\"\nassert solution(\"1000 0 3\") == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 0 3\") == 4, \"Input error.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 0 3\") == \"4\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"9 0 3\") == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 0 3\\n\") == \"4\\n\", \"Expected output: 4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1010\") == \"12\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\", \"The binary to octal conversion should work.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\", \"Incorrect solution for the given input\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1010') == '12', 'Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal.'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko's algorithm is not correct\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\", \"Sample Output: 12\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1010\") == \"12\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\", \"Your solution is not correct. Please check the code and try again.\"\nprint(\"Your solution is correct!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\\n\"\nassert solution(\"1 3\\n..o\\no..\") == \"1\\n\"\nassert solution(\"5 5\\n..o\\no..\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} is incorrect. Expected output: {output}, got {solution(input())}\" for i, (input, output) in enumerate(zip(sample_input, sample_output))",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2', \"Test case 1 failed.\"\nassert solution(input()) == '4', \"Test case 2 failed.\"\nassert solution(input()) == '1', \"Test case 3 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input: {sample_input}, expected output: {sample_output}, got: {solution(sample_input)}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'\nassert solution('3 3\\n..o\\no..') == '0'\nassert solution('4 3\\n..o\\no..') == '4'\nassert solution('5 3\\n..o\\no..') == '12'\nassert solution('6 3\\n..o\\no..') == '20'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 2\nassert solution(5, 4) == 2\nassert solution(7, 6) == 2\nassert solution(1, 2) == 1\nassert solution(8, 1) == 1",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2', \"Test case 1 failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"4 2\\n1 2\\n2 1\\n3 3\\n4 2\") == \"LADICA\\nSMECE\\n\"\nassert solution(\"3 2\\n2 1\\n3 2\\n1 3\\n4 2\") == \"LADICA\\nSMECE\\n\"\nassert solution(\"4 3\\n2 1\\n3 3\\n4 2\\n5 4\") == \"SMECE\\nSMECE\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 184
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"100000 3\") == \"SMECE\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\nSMECE\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE', \"The solution should output 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"10 4\\n1 2\\n2 3\\n1 3\\n2 4\\n3 4\") == \"LADICA\\nLADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\n\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0\\n') == '1 2\\n'\nassert solution('3\\n1 2\\n') == '1 2 3\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('7\\n1 2 3 4 5 6\\n') == '1 2 3 4 5 6\\n'",
        "num_ids_2": 42,
        "num_ids_4": 112
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\\n\"\nassert solution(\"3\\n1 2\\n2 1\\n\") == \"2 1 3\\n\"\nassert solution(\"4\\n1 2 3\\n2 1 3\\n3 2 1\\n\") == \"3 2 1 4\\n\"\nassert solution(\"5\\n1 2 3 4\\n2 1 3 4\\n3 2 1 4\\n4 3 2 1\\n5 4 3 2\\n\") == \"4 3 2 1 5\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 155
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 2\\n'\nassert solution(input()) == '2 1\\n'\nassert solution(input()) == '3 1\\n'\nassert solution(input()) == '4 1\\n'\nassert solution(input()) == '5 1\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\\n\"\nassert solution(\"3\\n0\\n1\\n2\\n\") == \"2 3 1\\n\"\nassert solution(\"4\\n0\\n1\\n2\\n3\\n\") == \"2 3 1 4\\n\"\nassert solution(\"5\\n0\\n1\\n2\\n3\\n4\\n\") == \"2 3 1 4 5\\n\"\nassert solution(\"6\\n0\\n1\\n2\\n3\\n4\\n5\\n\") == \"2 3 1 4 5 6\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 115
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected '{expected_output}', got '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0\n    0\n    \"\"\"\n) == \"\"\"\n1\n2\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    3 1\n    0 0 0 0\n    \"\"\"\n) == \"\"\"\n0\n1\n2\n3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1 0\n    0 0 0 0\n    \"\"\"\n) == \"\"\"\n1\n2\n3\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\\n\", \"The output should be: 1 2\\n\"\nassert solution(\"3\\n1 0\\n2 1\\n\") == \"2 1 0\\n\", \"The output should be: 2 1 0\\n\"\nassert solution(\"4\\n1 1\\n1 0\\n2 2\\n\") == \"1 0 2 1\\n\", \"The output should be: 1 0 2 1\\n\"\nassert solution(\"5\\n2 1\\n2 0\\n1 2\\n2 3\\n\") == \"2 3 1 2\\n\", \"The output should be: 2 3 1 2\\n\"\nassert solution(\"6\\n3 2\\n2 1\\n3 0\\n3 1\\n\") == \"3 1 2 3\\n\", \"The output should be: 3 1 2 3\\n\"\nassert solution(\"7\\n4 3\\n3 2\\n2 1\\n3 0\\n3 1\\n\") == \"3 1 2 3\\n\", \"The output should be: 3 1 2 3\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 184
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, but got {solution(data)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 5 2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 5 2\\n0 3\") == \"1\"",
        "num_ids_2": 99,
        "num_ids_4": 157
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Expected output to be 1\"\nprint(\"All assertions passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n1 3\\n0 4\\n4 5') == '3'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '0'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', \"Your code is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n\"\"\") == \"1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'\nassert solution('5\\n1 3 4 5 6') == '4 3 5 6 1'\nassert solution('6\\n1 3 4 5 6 7') == '4 3 5 6 7 1'\nassert solution('7\\n1 3 4 5 6 7 8') == '4 3 5 6 7 8 1'\nassert solution('8\\n1 3 4 5 6 7 8 9') == '4 3 5 6 7 8 9 1'\nassert solution('9\\n1 3 4 5 6 7 8 9 10') == '4 3 5 6 7 8 9 10 1'\nassert solution('10\\n1 3 4 5 6 7 8 9 10 11') == '4 3 5 6 7 8 9 10 11 1'\nassert solution('11\\n1 3 4 5 6 7 8 9 10 11 12') == '4 3 5 6 7 8 9 10 11 12 1'\nassert solution('12\\n1 3 4 5 6 7 8 9 10 11 12 13') == '4 3 5 6 7 8 9 10 11 12 13 1'\nassert solution('13\\n1 3 4 5 6 7 8 9 10 11 12 13 14') == '4 3 5 6 7 8 9 10 11 12 13 14 1'\nassert solution('14\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15') == '4 3 5 6 7 8 9 10 11 12 13 14 15 1'\nassert solution('15\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '4 3 5 6 7 8 9 10 11 12 13 14 15 16 1'\nassert solution('16\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 1'\nassert solution('17\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 1'\nassert solution('18\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 1'\nassert solution('19\\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1'\nassert solution('20\\n1",
        "num_ids_2": 50,
        "num_ids_4": 120
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Iceland is famous for its geothermal activity, which supplies the country with much of its electricity and heating. It is also a source of pleasure, in the form of hot springs.\\nKalle is visiting one of Iceland\u2019s famous hot springs. It contains 5 pools of water, where the 1st one has temperature 1, the 2nd one has temperature 2, the 3rd one has temperature 3, the 4th one has temperature 4, and the 5th one has temperature 5. Although staying in one of the warmer pools for a long time sure is relaxing, Kalle is on a very tight schedule and just wants a quick dip in each of the pools. As you may know, the nicest thing about hot baths is the contrast between hot and cold. Therefore, to get the most out of his stay, Kalle wants to find an ordering of the pools so that the difference in temperature between subsequent pools is increasing. \\nGiven a sequence of pool temperatures t_1, t_2, \\dots, t_n, rearrange them into a new sequence t\u2019_1, t\u2019_2, \\dots, t\u2019_n such that for all 2 \\leq i \\leq n-1 it holds that |t\u2019_{i-1} - t\u2019_ i| <= |t\u2019_ i - t\u2019_{i+1}|. \") == [\"4 3 1\"]",
        "num_ids_2": 325,
        "num_ids_4": 325
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Input: {input_data}, Output: {output_data}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 3 1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 3 1\" # Test case 1\nassert solution() == \"1 3 4\" # Test case 2\nassert solution() == \"3 1 4\" # Test case 3\nassert solution() == \"2 3 1\" # Test case 4\nassert solution() == \"4 1 2\" # Test case 5\nassert solution() == \"impossible\" # Test case 6",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\\n\"\nassert solution(\"4\\n1 2 3 4 5\") == \"5 4 3 2 1\\n\"\nassert solution(\"5\\n1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8 9\") == \"9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 3",
        "num_ids_2": 54,
        "num_ids_4": 140
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'\nassert solution('10\\n1 -10 20') == 'impossible'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4 3 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 20 15\n3 10\n\"\"\") == \"18.4\"\n\nassert solution(\"\"\"\n10 10 10\n\"\"\") == \"30.0\"\n\nassert solution(\"\"\"\n10 20 30\n\"\"\") == \"29.0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '18.400', 'The given code is incorrect. Please provide the corrected code.'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 20 15\") == \"18.400\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"\"\n\nn, p, k = map(int, input().split())\nt = list(map(int, input().split()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == '18.400'\n\nassert solution('''\n2 30 10\n2 15\n2 15\n3 10\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 10\n''') == '20.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 20\n''') == '20.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 50\n''') == '25.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 100\n''') == '25.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 150\n''') == '25.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 200\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 250\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 300\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 350\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 400\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 450\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 500\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 550\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 600\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 650\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 700\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 750\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 800\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 850\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 900\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 950\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 1000\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 1050\n''') == '30.000'\n\nassert solution('''\n2 10 5\n2 15\n2 10\n3 1100\n''') == '30.00",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 18.400",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '18.400'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....') == '5'\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n3\\n....H\\n.....\\nS....\\n....H\\n.....') == '3'\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n1\\n....H\\n.....\\nH....\\n.....') == '1'\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n2\\n....H\\n.....\\nH....\\n.....\\n2\\n....H\\n.....\\nH....\\n.....') == '2'",
        "num_ids_2": 77,
        "num_ids_4": 184
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Expected: 5\\nGot: \" + str(solution(stdin=\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\"))",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == '5\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5, \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == \"5\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"The output is not as expected.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"6\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n\") == 5\nassert solution(\"7\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n\") == 5\nassert solution(\"8\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n....H\\n\") == 6\nassert solution(\"9\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n....H\\n....H\\n\") == 6\nassert solution(\"10\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....H\\n....",
        "num_ids_2": 61,
        "num_ids_4": 137
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5, \"Solution should return 5, but it returned {}\".format(solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n'))",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n\nsolution(\"5 2 3\\n2 4\\n1 3 5\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input {sample_input}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(10) == 1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"example_input.txt\", \"r\").read()) == 0",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1') == 0.000000000",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == 0.000000000\nassert solution(\"2 3\") == 0.000000000\nassert solution(\"1 4\") == 0.000000000\nassert solution(\"5 6\") == 0.000000000\nassert solution(\"8 7\") == 0.000000000",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.000000000\", \"Your solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.000000000\", \"Expected result: 0.000000000, but got: \" + solution(input())",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 0.000000000, \"Your code is not correct.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == 0.0\nassert solution(\"2 2\") == 0.0\nassert solution(\"3 3\") == 0.0\nassert solution(\"4 4\") == 100.0\nassert solution(\"5 5\") == 100.0",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"2 2\") == \"0.000000000\"\nassert solution(\"3 3\") == \"0.000000000\"\nassert solution(\"4 4\") == \"0.000000000\"\nassert solution(\"5 5\") == \"0.000000000\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Output: {output}\\nExpected Output: {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2\\n'\nassert solution(b'5\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '5\\n'",
        "num_ids_2": 221,
        "num_ids_4": 221
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nprint(\"Test Passed\")",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\\n\"\n\nsolution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\")",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1730\") == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"None\"\nassert solution(\"1730\") == \"1729\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1729\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1730\") == \"1729\"\nassert solution(\"241\") == \"240\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"400001\") == \"400000\"\nassert solution(\"400000\") == \"400000\"\nassert solution(\"400001\") == \"400000\"\nassert solution(\"400002\") == \"400001\"\nassert solution(\"400003\") == \"400002\"\nassert solution(\"400004\") == \"400003\"\nassert solution(\"400005\") == \"400004\"\nassert solution(\"400006\") == \"400005\"\nassert solution(\"400007\") == \"400006\"\nassert solution(\"400008\") == \"400007\"\nassert solution(\"400009\") == \"400008\"\nassert solution(\"400010\") == \"400009\"\nassert solution(\"400011\") == \"400010\"\nassert solution(\"400012\") == \"400011\"\nassert solution(\"400013\") == \"400012\"\nassert solution(\"400014\") == \"400013\"\nassert solution(\"400015\") == \"400014\"\nassert solution(\"400016\") == \"400015\"\nassert solution(\"400017\") == \"400016\"\nassert solution(\"400018\") == \"400017\"\nassert solution(\"400019\") == \"400018\"\nassert solution(\"400020\") == \"400019\"\nassert solution(\"400021\") == \"400020\"\nassert solution(\"400022\") == \"400021\"\nassert solution(\"400023\") == \"400022\"\nassert solution(\"400024\") == \"400023\"\nassert solution(\"400025\") == \"400024\"\nassert solution(\"400026\") == \"400025\"\nassert solution(\"400027\") == \"400026\"\nassert solution(\"400028\") == \"400027\"\nassert solution(\"400029\") == \"400028\"\nassert solution(\"400030\") == \"400029\"\nassert solution(\"400031\") == \"400030\"\nassert solution(\"400032\") == \"400031\"\nassert solution(\"400033\") == \"400032\"\nassert solution(\"400034\") == \"400033\"\nassert solution(\"400035\") == \"400034\"\nassert solution(\"400036\") == \"400035\"\nassert solution(\"400037\") == \"400036\"\nassert solution(\"400038\") == \"400037\"\nassert solution(\"400039\") == \"400038\"\nassert solution(\"400040\") == \"400039\"\nassert solution(\"400041\") == \"400040\"\nassert solution(\"400042\") == \"400041\"\nassert solution(\"400043\") == \"400042\"\nassert solution(\"400044\") == \"400043\"\nassert solution(\"400045\") == \"400044\"\nassert solution(\"400046\") == \"400045\"\nassert solution(\"400047\") == \"4000",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1729\\n\", \"Incorrect solution\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1729\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1729\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1729\", \"Expected '1729', but got '{}'.\".format(solution())\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1730\") == \"1729\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(65536) == 16, \"Your solution is not correct. Please see the provided code for the correct solution.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65536\") == \"16\\n\", \"Your implementation is incorrect.\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\", \"Invalid input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(65536) == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"65536\") == \"16\", \"Test 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65536\") == 16\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(65536) == \"16\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65536\") == \"16\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2\\n'\nprint('All test cases passed!')",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"5\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"6\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"7\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"8\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"9\\n....\\n....\\n....\\n...K\") == \"2\"\nassert solution(\"10\\n....\\n....\\n....\\n...K\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2'\nassert solution('6\\n....\\n....\\n....\\n....') == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'\nassert solution('1\\n....\\n....\\n....\\n...K') == '-1'",
        "num_ids_2": 62,
        "num_ids_4": 85
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4\n   ....\n   ....\n   ....\n   ...K\n    \"\"\"\n) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution('....\\n....\\n....\\n...K') == '2'\\n\\n# Test case 2\\nassert solution('....\\n....\\n....\\n...K\\n') == '-1'\\n\\n# Test case 3\\nassert solution('....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23\\n'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n\\n') == 'too late\\n'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '23', 'Test failed'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n100\\n50\\n\") == \"too late\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n10\") == \"too late\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n100\") == \"too late\"",
        "num_ids_2": 65,
        "num_ids_4": 99
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\\n\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n5\\n\") == \"too late\\n\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\\n\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n100\\n\") == \"too late\\n\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n5\\n\") == \"too late\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 146
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"100 5\n42\n3\n2\n99\n1\n\"\"\") == \"23\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"too late\"\nassert solution(input()) == \"23\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\\nhide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF', \"The solution should return the correct encrypted text.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test case 1 failed\"\nassert solution(\"hide the gold in the tree stump\") == \"QIFBJYDPATNXXPZKYH\", \"Test case 2 failed\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution should return 'BMNDZBXDKYBEJVDMUIXMMNUVIF'.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution should be 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed for sample input\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your solution is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test case 1 failed\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test case 2 failed\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF', \"The solution is incorrect\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (2.000, 1.000).\\n\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.50",
        "num_ids_2": 138,
        "num_ids_4": 276
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000\\n1.500 1.500\\n2.000 2.000\") == \"The gopher can escape through the hole at (2,2).\\n\"\nassert solution(\"2.000 2.000\\n2.000 2.000\\n1.000 1.000\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000\\n1.500 1.500\\n2.000 2.000\\n3.000 3.000\\n4.000 4.000\\n5.000 5.000\\n6.000 6.000\\n7.000 7.000\\n8.000 8.000\\n9.000 9.000\\n10.000 10.000\") == \"The gopher can escape through the hole at (10,2).\\nThe gopher can escape through the hole at (8,3).\\nThe gopher can escape through the hole at (7,4).\\nThe gopher can escape through the hole at (6,5).\\nThe gopher can escape through the hole at (5,6).\\nThe gopher can escape through the hole at (4,7).\\nThe gopher can escape through the hole at (3,8).\\nThe gopher can escape through the hole at (2,9).\\nThe gopher can escape through the hole at (1,10).\\nThe gopher can escape through the hole at (0,11).\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 480
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n0.000 0.000\") == \"The gopher can escape through the hole at (0.000, 0.000).\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n-10000 -10000\") == \"The gopher cannot escape.\"\n\nassert solution(\"1.000 1.000 2.000 2.000\\n10000 10000\") == \"The gopher can escape through the hole at (10000.000, 10000.000).\"",
        "num_ids_2": 117,
        "num_ids_4": 247
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.500 1.500') == 'The gopher can escape through the hole at (1.500, 1.500).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500') == 'The gopher can escape through the hole at (1.500, 1.500).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\\n1.500 ",
        "num_ids_2": 131,
        "num_ids_4": 1027
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.5, 1.5).\"\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 1.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 1.000\\n1.000 1.000\\n1.500 1.500\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\n",
        "num_ids_2": 117,
        "num_ids_4": 210
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.000\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.500\") == \"The gopher can escape through the hole at (1.000, 1.500).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000 2.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000 2.000 2.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000 2.000 2.000 2.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000 2.000 2.000 2.000 2.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 242
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).'\nassert solution('1.500 1.500') == 'The gopher cannot escape.'\nassert solution('2.500 1.500') == 'The gopher can escape through the hole at (2, 1).'\n\nprint(\"All test cases passed\")",
        "num_ids_2": 72,
        "num_ids_4": 107
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\n\nassert solution(\"2.000 2.000 3.000 3.000\\n1.000 2.000\") == \"The gopher can escape through the hole at (1,2). The gopher cannot escape. The gopher can escape through the hole at (2,2). The gopher can escape through the hole at (3,2). The gopher can escape through the hole at (1,3). The gopher can escape through the hole at (2,3). The gopher can escape through the hole at (3,3).\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4) == 'Y'\nassert solution(3, 3) == 'Y'\nassert solution(3, 3) == 'N'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"1 2\\n4 1\\n10\") == \"Y\"\nassert solution(\"1 1\\n1 1\\n0\") == \"Y\"\nassert solution(\"0 0\\n0 0\\n1000\") == \"N\"\nassert solution(\"1001 1001\\n1001 1001\\n1000\") == \"N\"",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"3 4\\n2 3\\n3\") == \"N\\n\"\nassert solution(\"2 1\\n4 3\\n5\") == \"Y\\n\"\nassert solution(\"2 3\\n5 1\\n4\") == \"N\\n\"\nassert solution(\"1 1\\n1 1\\n1\") == \"Y\\n\"\nassert solution(\"1 1\\n1 1\\n0\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\nN'\nassert solution('1 1\\n3 3\\n2') == 'N\\nN'\nassert solution('3 3\\n4 4\\n5') == 'N\\nN'\nassert solution('1 1\\n1 1\\n1') == 'Y\\nY'\nassert solution('3 3\\n2 3\\n1') == 'N\\nN'\nassert solution('1 1\\n1 2\\n1') == 'Y\\nY'\nassert solution('1 1\\n2 2\\n1') == 'Y\\nY'\nassert solution('1 1\\n2 1\\n1') == 'Y\\nY'\nassert solution('1 1\\n1 2\\n0') == 'N\\nN'\nassert solution('1 1\\n1 2\\n3') == 'N\\nN'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('4 2\\n1 2\\n3') == 'N'\nassert solution('1 1\\n1 1\\n1') == 'Y'\nassert solution('1 1\\n1 1\\n2') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Y\\n'\nassert solution(\"3 4\\n3 3\\n3\") == 'Y\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"3 4\\n3 3\\n1\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Y\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Actual: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"4 4\\n4 4\\n4\") == \"N\"\nassert solution(\"4 5\\n4 6\\n4\") == \"N\"\nassert solution(\"5 5\\n6 6\\n6\") == \"N\"\n\nfrom typing import List\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"\"\"...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\\n\\n# Test Case 2\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 3\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 4\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 5\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 6\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 7\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 8\\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str",
        "num_ids_2": 957,
        "num_ids_4": 957
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n....\\n.....\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....#\\n....",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str: \\n    pass'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n...\\n.......\\n.......\\n...#\\n..###.\\n\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    N, M = map(int, stdin.strip().split())\\n    grid = [['.' for _ in range(M)] for _ in range(N)]\\n    for i in range(N):\\n        for j in range(M):\\n            if S[i][j] == 'V':\\n                grid[i][j] = 'V'\\n    grid_state = 'V' * N\\n    for i in range(N):\\n        for j in range(M):\\n            if grid[i][j] == 'V':\\n                if grid[i-1][j] == 'V' or grid[i+1][j] == 'V' or grid[i][j-1] == 'V' or grid[i][j+1] == 'V':\\n                    grid[i][j] = grid_state[i] if i > 0 else grid_state[0]\\n    return ''.join(grid)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1025,
        "num_ids_4": 1025
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V. \\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..'))",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == []",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Expected output:\\n{}\\nGot output:\\n{}\\n\".format(expected_output, solution(input()))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"11\", \"The expected output is 11, but it is actually {}.\".format(solution(input()))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '11', 'Test case 1 failed'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"11\", \"Expected output: 11\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"11\", \"Output should be 11.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == 11",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == 9, \"The output should be 9\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9",
        "num_ids_2": 146,
        "num_ids_4": 292
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\npinkpinkPinK\\nPInkrose\\nlazerlemon\\n') == 9, \"The output is incorrect.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '9\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == 9, \"Output is incorrect\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 5 3\\nabc') == '1 3 5\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 3\\nabc') == '1 2 3\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 3\\nABC') == '1 2 3\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\\nABC\\n\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\npass\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"2 6 8\") == \"2 6 8\"\nassert solution(\"3 1 4\") == \"3 4 1\"\nassert solution(\"4 7 5\") == \"4 7 5\"\nassert solution(\"1 3 5\") == \"1 3 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution failed. Expected {output()}, but got {solution(input())}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 3 5'\nassert solution(input()) == '1 5 3'\nassert solution(input()) == '3 1 5'\nassert solution(input()) == '3 5 1'\nassert solution(input()) == '5 3 1'\nassert solution(input()) == '5 1 3'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5 3\\nABC\\n') == '1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 73.8, \"The output is incorrect.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    buy 1 15\n    split 3\n    sell 1 5\n    die 4\n    \"\"\"\n) == 8.0",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4') == '8.00000000'\n\nsolution(stdin)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''buy 1 15\nsplit 3\nsell 1 5\ndie 4''') == '8.00000000\\n'\n\nassert solution('''buy 1 5\nsell 2 8\nsplit 2\nmerge 2\nsell 1 2\nsplit 2\nsell 2 8\nsplit 2\nsell 1 2\nsplit 2\nsell 2 8\nsplit 2\nsell 1 2\nsplit 2\nsell 2 8\nsplit 2\nsell 1 2\nsplit 2\nsell 2 8\nsplit 2\ndie 5\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3\nsplit 2\ndie 4\nsell 1 3",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\ndie 4\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 2 15\\nbuy 1 10\\nbuy 1 15\\nbuy 1 10\\nbuy 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell 1 15\\nsell 1 10\\nsell ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\nprint(\"Test passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\") == 8.0, \"Expected 8.0, got {}\".format(solution(\"buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\"))",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4') == '8.00000000'\nprint('Test Passed')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"8\"\nassert solution(2) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(808) == 8, \"The output should be 8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(808) == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(808) == 8, \"Solution is incorrect for Sample Input 808.\"\nassert solution(2) == 2, \"Solution is incorrect for Sample Input 2.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(808) == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(808) == 8\nassert solution(2) == 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(808) == 8, \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"808\") == \"8\", \"The output should be 8\"\nassert solution(\"2\") == \"2\", \"The output should be 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0 # Test case 1\nassert solution(\"4 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == 2 # Test case 2\nassert solution(\"4 5\\nLCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 5 # Test case 3\nassert solution(\"4 5\\nLCCCC\\nWCCCC\\nCCCCC\\nCCCCC\") == 2 # Test case 4\nassert solution(\"4 5\\nLCCCC\\nCCCCW\\nCCCCC\\nCCCCC\") == 0 # Test case 5",
        "num_ids_2": 68,
        "num_ids_4": 132
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('4 5\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW') == 3\nassert solution('4 5\\nLLLLLL\\nCCCCC\\nCCCCC\\nCCCCC') == 1\n",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"L\") == 0\nassert solution(\"LWC\") == 0\nassert solution(\"LWCWS\") == 2\nassert solution(\"C\") == 0",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0', 'Test case 1 failed'\n\nassert solution(input()) == '1', 'Test case 2 failed'\n\nassert solution(input()) == '2', 'Test case 3 failed'\n\nassert solution(input()) == '3', 'Test case 4 failed'\n\nassert solution(input()) == '4', 'Test case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\", \"Test case 1 failed\"\nassert solution(input()) == \"0\", \"Test case 2 failed\"\nassert solution(input()) == \"0\", \"Test case 3 failed\"\nassert solution(input()) == \"0\", \"Test case 4 failed\"\nassert solution(input()) == \"0\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('4 5\\nLLL\\nWL\\nLL\\nWW') == 0\nassert solution('4 5\\nLL\\nWW\\nL\\nL') == 1\nassert solution('4 5\\nLL\\nWW\\nL\\nL') == 1",
        "num_ids_2": 51,
        "num_ids_4": 97
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"0\"\nassert solution(\"3 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 1, \"1\"\nassert solution(\"6 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 1, \"2\"\nassert solution(\"5 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 0, \"3\"\nassert solution(\"8 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 0, \"4\"",
        "num_ids_2": 66,
        "num_ids_4": 181
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('3 5\\nLWLW\\nWWCW\\nWWWC\\nWWCW') == 2\nassert solution('5 7\\nLLLLLLL\\nWWCWCWC\\nWWWCWCWC\\nWWWCWCWC') == 7",
        "num_ids_2": 57,
        "num_ids_4": 92
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Output 0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 5) == 0",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"60\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Sample Input:\\n# 2 S\\n# TH\\n# 9C\\n# KS\\n# QS\\n# JS\\n# TD\\n# AD\\n# JH\\n# Sample Output:\\n# 60\\ndef solution(stdin: str) -> str:\\n    pass\", \"The solution is not correct\"\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"60\", \"The solution is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\", \"Your solution is incorrect. Please check the output.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    2 S\n    TH\n    9C\n    KS\n    QS\n    JS\n    TD\n    AD\n    JH''') == '60\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH') == '60'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == 60, \"Your code is not correct.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '60'\nprint('All tests passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"60\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"60\", \"Please update the code and the test cases.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"this is very annoying\\nthiss iss veery annoying\\n\")) == \"se\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('10 3 0\\n0 0 1 1 2') == '3\\n'\nassert solution('5 5 0\\n0 0 1 1 2') == '4\\n'\nassert solution('10 5 0\\n0 0 1 1 2') == '4\\n'\nassert solution('5 3 1\\n0 0 1 1 2') == '1\\n'\nassert solution('10 3 1\\n0 0 1 1 2') == '1\\n'\nassert solution('5 5 1\\n0 0 1 1 2') == '2\\n'\nassert solution('10 5 1\\n0 0 1 1 2') == '2\\n'\nassert solution('5 3 10\\n0 0 1 1 2') == '1\\n'\nassert solution('10 3 10\\n0 0 1 1 2') == '1\\n'\nassert solution('5 5 10\\n0 0 1 1 2') == '2\\n'\nassert solution('10 5 10\\n0 0 1 1 2') == '2\\n'",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example_input) == example_output, f\"Expected {example_output}, got {solution(example_input)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"Your solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == 3\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 0 0 1 2\\n\") == \"1\"\nassert solution(\"5 3 0\\n0 1 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 1 1 0 2\\n\") == \"2\"\nassert solution(\"5 3 0\\n1 1 1 1 2\\n\") == \"4\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n100\\n2\\n3\\n\") == \"2\\n6\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n10\\n20\\n30\\n\") == \"6\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n1000000000\\n2\\n3\\n\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"3\\n10000000000000000\\n2\\n3\\n\") == \"18\\n\", \"Test case 5 failed\"",
        "num_ids_2": 71,
        "num_ids_4": 143
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n2\\n6\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Error: Your solution is incorrect.\"\nassert solution() == 2, \"Error: Your solution is incorrect.\"\nassert solution() == 6, \"Error: Your solution is incorrect.\"\nassert solution() == 10, \"Error: Your solution is incorrect.\"\nassert solution() == 18, \"Error: Your solution is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\", \"The factorial of 3! should be 6.\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\", \"The factorial of 1! should be 1.\"\nassert solution(\"2\\n3\\n4\\n5\\n\") == \"2\\n3\\n6\\n\", \"The factorial of 2! should be 2.\"\nassert solution(\"1000000000\\n\") == \"6\\n\", \"The factorial of 10^6 should be 6.\"\nassert solution(\"1000000001\\n\") == \"7\\n\", \"The factorial of 10^7 should be 7.\"\nassert solution(\"1000000002\\n\") == \"8\\n\", \"The factorial of 10^8 should be 8.\"\nassert solution(\"1000000003\\n\") == \"9\\n\", \"The factorial of 10^9 should be 9.\"\nassert solution(\"1000000004\\n\") == \"9\\n\", \"The factorial of 10^10 should be 9.\"\nassert solution(\"1000000005\\n\") == \"9\\n\", \"The factorial of 10^11 should be 9.\"\nassert solution(\"1000000006\\n\") == \"9\\n\", \"The factorial of 10^12 should be 9.\"\nassert solution(\"1000000007\\n\") == \"9\\n\", \"The factorial of 10^13 should be 9.\"\nassert solution(\"1000000008\\n\") == \"9\\n\", \"The factorial of 10^14 should be 9.\"\nassert solution(\"1000000009\\n\") == \"9\\n\", \"The factorial of 10^15 should be 9.\"\nassert solution(\"1000000010\\n\") == \"9\\n\", \"The factorial of 10^16 should be 9.\"\nassert solution(\"1000000011\\n\") == \"9\\n\", \"The factorial of 10^17 should be 9.\"\nassert solution(\"1000000012\\n\") == \"9\\n\", \"The factorial of 10^18 should be 9.\"\nassert solution(\"1000000013\\n\") == \"9\\n\", \"The factorial of 10^19 should be 9.\"\nassert solution(\"1000000014\\n\") == \"9\\n\", \"The factorial of 10^20 should be 9.\"\nassert solution(\"1000000015\\n\") == \"9\\n\", \"The factorial of 10^21 should be 9.\"\nassert solution(\"1000000016\\n\") == \"9\\n\", \"The factorial of 10^22 should be 9.\"\nassert solution(\"1000000017\\n\") == \"9\\n\", \"The factorial of 10^23 should be 9.\"\nassert solution(\"1000000018\\n\") == \"9\\n\", \"The factorial of 10^24 should be 9.\"\nassert solution(\"1000000019\\n\") == \"9\\n\", \"The factorial of 10^25 should be 9.\"\nassert solution(\"1000000020\\n\") == \"9\\n\", \"The factorial of 10^26 should be 9.\"\nassert solution(\"1000000021\\n\") == \"9\\n\", \"The factorial of 10^27 should be 9.\"\nassert solution(\"1000000022\\n\") == \"9\\n\", \"The factorial of 10^28 should be 9.\"\nassert solution(\"1000000",
        "num_ids_2": 81,
        "num_ids_4": 161
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n2\\n6'\nassert solution(open('input.txt', 'r').read()) == '1\\n2\\n6'\nassert solution(open('input.txt', 'r').read()) == '1\\n2\\n6'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n2\\n6\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed. Expected: {sample_output}, Actual: {solution(sample_input)}\"\n\nsample_input = \"\"\"3\n1\n2\n3\"\"\"\nsample_output = \"\"\"1\n2\n6\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\", \"Expected Output: 4 2\"\nassert solution(\"4\\n3 1 2 2\") == \"5 3\\n\", \"Expected Output: 5 3\"\nassert solution(\"5\\n3 1 2 2 3\") == \"6 4\\n\", \"Expected Output: 6 4\"\nassert solution(\"6\\n3 1 2 2 3 4\") == \"7 5\\n\", \"Expected Output: 7 5\"\nassert solution(\"7\\n3 1 2 2 3 4 5\") == \"8 6\\n\", \"Expected Output: 8 6\"\nassert solution(\"8\\n3 1 2 2 3 4 5 6\") == \"9 7\\n\", \"Expected Output: 9 7\"\nassert solution(\"9\\n3 1 2 2 3 4 5 6 7\") == \"10 8\\n\", \"Expected Output: 10 8\"\nassert solution(\"10\\n3 1 2 2 3 4 5 6 7 8\") == \"11 9\\n\", \"Expected Output: 11 9\"\nassert solution(\"11\\n3 1 2 2 3 4 5 6 7 8 9\") == \"12 10\\n\", \"Expected Output: 12 10\"\nassert solution(\"12\\n3 1 2 2 3 4 5 6 7 8 9 10\") == \"13 11\\n\", \"Expected Output: 13 11\"\nassert solution(\"13\\n3 1 2 2 3 4 5 6 7 8 9 10 11\") == \"14 12\\n\", \"Expected Output: 14 12\"\nassert solution(\"14\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12\") == \"15 13\\n\", \"Expected Output: 15 13\"\nassert solution(\"15\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13\") == \"16 14\\n\", \"Expected Output: 16 14\"\nassert solution(\"16\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"17 15\\n\", \"Expected Output: 17 15\"\nassert solution(\"17\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"18 16\\n\", \"Expected Output: 18 16\"\nassert solution(\"18\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"19 17\\n\", \"Expected Output: 19 17\"\nassert solution(\"19\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"20 18\\n\", \"Expected Output: 20 18\"\nassert solution(\"20\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"21 19\\n\", \"Expected Output: 21 19\"\nassert solution(\"21\\n3 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"22 20\\n\", \"Expected Output: 22 20\"",
        "num_ids_2": 62,
        "num_ids_4": 132
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"4 2\", \"The output should be 4 2.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '4 2\\n'\nprint('All tests passed.')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4 2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2', \"Test Case 1 Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Incorrect output.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5 2 1\\n\") == \"2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: \\n{stdin}\\n{output}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == 2, \"Invalid input\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\nassert solution(\"5 4 2\") == \"7\\n\"\nassert solution(\"10 5 3\") == \"15\\n\"\nassert solution(\"20 7 4\") == \"25\\n\"\nassert solution(\"30 11 5\") == \"35\\n\"\nassert solution(\"40 15 6\") == \"45\\n\"\nassert solution(\"50 19 7\") == \"55\\n\"\nassert solution(\"60 23 8\") == \"65\\n\"\nassert solution(\"70 27 9\") == \"75\\n\"\nassert solution(\"80 31 10\") == \"85\\n\"\nassert solution(\"90 35 11\") == \"95\\n\"\nassert solution(\"100 39 12\") == \"105\\n\"\nassert solution(\"110 43 13\") == \"115\\n\"\nassert solution(\"120 47 14\") == \"125\\n\"\nassert solution(\"130 51 15\") == \"135\\n\"\nassert solution(\"140 55 16\") == \"145\\n\"\nassert solution(\"150 59 17\") == \"155\\n\"\nassert solution(\"160 63 18\") == \"165\\n\"\nassert solution(\"170 67 19\") == \"175\\n\"\nassert solution(\"180 71 20\") == \"185\\n\"\nassert solution(\"190 75 21\") == \"195\\n\"\nassert solution(\"200 79 22\") == \"205\\n\"\nassert solution(\"210 83 23\") == \"215\\n\"\nassert solution(\"220 87 24\") == \"225\\n\"\nassert solution(\"230 91 25\") == \"235\\n\"\nassert solution(\"240 95 26\") == \"245\\n\"\nassert solution(\"250 99 27\") == \"255\\n\"\nassert solution(\"260 103 28\") == \"265\\n\"\nassert solution(\"270 107 29\") == \"275\\n\"\nassert solution(\"280 111 30\") == \"285\\n\"\nassert solution(\"290 115 31\") == \"295\\n\"\nassert solution(\"300 119 32\") == \"305\\n\"\nassert solution(\"310 123 33\") == \"315\\n\"\nassert solution(\"320 127 34\") == \"325\\n\"\nassert solution(\"330 131 35\") == \"335\\n\"\nassert solution(\"340 135 36\") == \"345\\n\"\nassert solution(\"350 139 37\") == \"355\\n\"\nassert solution(\"360 143 38\") == \"365\\n\"\nassert solution(\"370 147 39\") == \"375\\n\"\nassert solution(\"380 151 40\") == \"385\\n\"\nassert solution(\"390 155 41\") == \"395\\n\"\nassert solution(\"400 159 42\") == \"405\\n\"\nassert solution(\"410 163 43\") == \"415\\n\"\nassert solution(\"420 167 44\") == \"425\\n\"\nassert solution(\"430 171 45\") == \"435\\n\"\nassert solution(\"440 175 46\") == \"445\\n\"\nassert solution(\"450 179 47\") == \"455\\n\"\nassert solution(\"460 183 ",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 11\nassert solution(4) == 12\nassert solution(5) == 14\nassert solution(6) == 28",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\", \"Solution is not correct\"\nassert solution(\"4 4 2\") == \"4\\n\", \"Solution is not correct\"\nassert solution(\"3 6 3\") == \"11\\n\", \"Solution is not correct\"\nassert solution(\"5 5 3\") == \"3\\n\", \"Solution is not correct\"\n",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 36, \"The correct answer is 36.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 36, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"36\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 36, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 36, \"The solution should be 36.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 36, \"The sum of all the values in h(5) is incorrect.\"\nassert solution(7) == 288, \"The sum of all the values in h(7) is incorrect.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 36, \"The sum of all the values in h(5) is incorrect\"\nassert solution(7) == 288, \"The sum of all the values in h(7) is incorrect\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 36\nassert solution(7) == 288",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\") == \"impossible\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"1 2 2 1\") == \"1 2\"\nassert solution(\"3 4 4 1\") == \"1 2 3 4\"\nassert solution(\"3 3 4 1\") == \"2 3 4 1\"\nassert solution(\"3 2 2 1\") == \"1 2 3 4\"\nassert solution(\"3 1 2 1\") == \"1 2 3 4\"\nassert solution(\"3 3 3 1\") == \"1 2 3 4\"\nassert solution(\"2 3 1 1\") == \"1 2\"\nassert solution(\"2 1 2 1\") == \"1 2 3 4\"\nassert solution(\"3 1 1 1\") == \"1 2 3 4\"\nassert solution(\"4 4 4 1\") == \"1 2 3 4\"\nassert solution(\"1 2 3 1\") == \"1 2 3 4\"\nassert solution(\"2 2 3 1\") == \"1 2\"\nassert solution(\"4 3 1 1\") == \"1 2 3 4\"\nassert solution(\"1 4 2 1\") == \"1 2 3 4\"\nassert solution(\"4 2 1 1\") == \"1 2 3 4\"\nassert solution(\"4 1 1 1\") == \"1 2 3 4\"\nassert solution(\"3 3 4 2\") == \"2 3 4 1\"\nassert solution(\"3 3 3 2\") == \"1 2 3 4\"\nassert solution(\"2 2 3 2\") == \"2 3\"\nassert solution(\"2 1 2 2\") == \"2 3 4 1\"\nassert solution(\"1 2 1 2\") == \"2 3 4 1\"\nassert solution(\"3 3 1 2\") == \"2 3\"\nassert solution(\"4 2 1 2\") == \"2 3 4 1\"\nassert solution(\"1 2 4 2\") == \"2 3 4 1\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"3 2 1 2\") == \"2 3\"\nassert solution(\"3 1 1 2\") == \"2 3\"\nassert solution(\"1 2 3 1\") == \"1 2 3 4\"\nassert solution(\"4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"2 3 2 1\") == \"1 2\"\nassert solution(\"2 2 2 1\") == \"1 2 3 4\"\nassert solution(\"3 2 3 1\") == \"1 2 3 4\"\nassert solution(\"3 1 2 1\") == \"1 2 3 4\"\nassert solution(\"4 1 1 2\") == \"1 2 3 4\"\nassert solution(\"4 2 2 1\") == \"1 2 3 4\"\nassert solution(\"4 3 3 1\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"2 3 4 1\") == \"1 2 3 4\"\nassert solution(\"2 4 3 1\") == \"1 2 3 4\"\nassert solution(\"2 3 2 4\") == \"2 3 4 1\"\nassert solution(\"2 2 3 4\") == \"2 3 4 1\"\nassert solution(\"1 2 3 3\") == \"1 2 3 4\"\nassert solution(\"3 2 4 1\") == \"1 2 3 4\"\nassert solution(\"3 4 2 1\") == \"1 2 3 4\"\nassert solution(\"3 4 3 1\") == \"1 2 3 4\"\nassert solution(\"3 4 2 2\") == \"2 3 4 1\"\nassert solution(\"2 3 3 4\") == \"2 3 4 1\"\nassert solution(\"1 2 3",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 3 1\\n4 2 5 1\") == \"2 3 4 1 5\"\nassert solution(\"6\\n2 3 3 1\\n4 2 5 1\\n3 4 5 1\") == \"2 3 4 1 5 6\"\nassert solution(\"7\\n2 3 3 1\\n4 2 5 1\\n3 4 5 1\\n1 6 5 1\") == \"2 3 4 1 5 6 7\"\nassert solution(\"8\\n2 3 3 1\\n4 2 5 1\\n3 4 5 1\\n1 6 5 1\\n2 7 5 1\") == \"2 3 4 1 5 6 7 8\"\nassert solution(\"9\\n2 3 3 1\\n4 2 5 1\\n3 4 5 1\\n1 6 5 1\\n2 7 5 1\\n3 5 5 1\") == \"2 3 4 1 5 6 7 8 9\"\nassert solution(\"10\\n2 3 3 1\\n4 2 5 1\\n3 4 5 1\\n1 6 5 1\\n2 7 5 1\\n3 5 5 1\\n4 6 5 1\") == \"2 3 4 1 5 6 7 8 9 10\"",
        "num_ids_2": 61,
        "num_ids_4": 166
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"  # pass\nassert solution(\"5\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"6\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"7\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"8\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"9\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"10\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\\n10 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"11\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\\n10 1 2 3\\n11 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"12\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\\n10 1 2 3\\n11 1 2 3\\n12 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"13\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\\n10 1 2 3\\n11 1 2 3\\n12 1 2 3\\n13 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"14\\n2 3 3 1\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n6 1 2 3\\n7 1 2 3\\n8 1 2 3\\n9 1 2 3\\n10 1 2 3\\n11 1 2 3\\n12 1 2 3\\n13 1 2 3\\n14 1 2 3\") == \"2 3 4 1\"  # pass\nassert solution(\"15\\n2 3 3 1\\n3 1 2 3",
        "num_ids_2": 83,
        "num_ids_4": 220
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 3 4 1\\n\", \"Test case 1\"\nassert solution(stdin) == \"1 2 3 4\\n\", \"Test case 2\"\nassert solution(stdin) == \"impossible\\n\", \"Test case 3\"",
        "num_ids_2": 48,
        "num_ids_4": 67
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2 3 4 5 1\"\nassert solution(\"6\\n3 4 5 6 7\") == \"2 3 4 5 6 7 1\"\nassert solution(\"7\\n5 6 7 8 9\") == \"2 3 4 5 6 7 8 9 1\"\nassert solution(\"8\\n7 8 9 10 11\") == \"2 3 4 5 6 7 8 9 10 11 1\"\nassert solution(\"9\\n11 12 13 14 15\") == \"2 3 4 5 6 7 8 9 10 11 12 13 1\"\nassert solution(\"10\\n13 14 15 16 17\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 1\"\nassert solution(\"11\\n17 18 19 20 21\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 2\"\nassert solution(\"12\\n19 20 21 22 23\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 2\"\nassert solution(\"13\\n21 22 23 24 25\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 2\"\nassert solution(\"14\\n23 24 25 26 27\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 2\"\nassert solution(\"15\\n25 26 27 28 29\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 2\"\nassert solution(\"16\\n27 28 29 30 31\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 2\"\nassert solution(\"17\\n29 30 31 32 33\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 19 2\"\nassert solution(\"18\\n31 32 33 34 35\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 19 18 2\"\nassert solution(\"19\\n33 34 35 36 37\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 19 18 17 2\"\nassert solution(\"20\\n35 36 37 38 39\") == \"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 19 18 17 16 2\"\n",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 4 1 1\") == \"2 3 4 1\"\nassert solution(\"4\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n2 2 2 1\") == \"2 1 3 4\"\nassert solution(\"4\\n2 1 2 2\") == \"1 2 4 3\"\nassert solution(\"4\\n2 3 3 1\\n2 2 2 1\\n2 1 2 2\") == \"2 1 3 4\"",
        "num_ids_2": 50,
        "num_ids_4": 118
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('5 3\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('5 2\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('4 2\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('2 2\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('2 1\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('1 1\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('1 0\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 5) == '4' # Correct output: 4",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\n\") == \"4\"",
        "num_ids_2": 89,
        "num_ids_4": 171
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\", \"The correct output is not given.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"\nassert solution(\"5 1000\\n5 7\\n7 5\") == \"7 7\\n\"\nassert solution(\"5 1000\\n5 1000\\n7 5\") == \"7 7\\n\"\nassert solution(\"5 1000\\n5 7\\n7 1000\") == \"7 7\\n\"\nassert solution(\"5 1000\\n5 7\\n7 5\") == \"7 7\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7\\n', 'Test failed'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7 7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Your solution is incorrect!\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"The output is incorrect.\"\nassert solution(\"4 7\\n3 8\\n2 9\") == \"7 11\\n\", \"The output is incorrect.\"\nassert solution(\"10 10\\n50 50\") == \"50 50\\n\", \"The output is incorrect.\"\nassert solution(\"10 10\\n10 50\\n50 10\") == \"50 50\\n\", \"The output is incorrect.\"\nassert solution(\"5 5\\n5 5\\n5 5\") == \"5 5\\n\", \"The output is incorrect.\"\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\") == \"5 5\\n\", \"The output is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 138
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.016666667\"\nprint(\"OK\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 61\\n\") == 1.016666667\nassert solution(\"2\\n1 61\\n2 121\\n\") == 0.000000001\nassert solution(\"3\\n1 61\\n3 242\\n4 363\\n\") == 0.000000001\nassert solution(\"4\\n1 61\\n4 404\\n5 525\\n6 646\\n\") == 0.000000001\nassert solution(\"5\\n1 61\\n5 485\\n6 606\\n7 727\\n8 848\\n9 969\\n\") == 0.000000001\nassert solution(\"6\\n1 61\\n6 526\\n7 647\\n8 768\\n9 889\\n10 1010\\n11 1131\\n12 1252\\n13 1373\\n14 1494\\n15 1615\\n16 1736\\n17 1857\\n18 1978\\n19 2099\\n20 2220\\n21 2341\\n22 2462\\n23 2583\\n24 2704\\n25 2825\\n26 2946\\n27 3067\\n28 3188\\n29 3309\\n30 3430\\n31 3551\\n32 3672\\n33 3793\\n34 3914\\n35 4035\\n36 4156\\n37 4277\\n38 4398\\n39 4519\\n40 4640\\n41 4761\\n42 4882\\n43 5003\\n44 5124\\n45 5245\\n46 5366\\n47 5487\\n48 5608\\n49 5729\\n50 5850\\n51 5971\\n52 6092\\n53 6213\\n54 6334\\n55 6455\\n56 6576\\n57 6697\\n58 6818\\n59 6939\\n60 7060\\n61 7181\\n62 7302\\n63 7423\\n64 7544\\n65 7665\\n66 7786\\n67 7907\\n68 8028\\n69 8149\\n70 8270\\n71 8391\\n72 8512\\n73 8633\\n74 8754\\n75 8875\\n76 9006\\n77 9127\\n78 9248\\n79 9369\\n80 9490\\n81 9611\\n82 9732\\n83 9853\\n84 9974\\n85 10095\\n86 10216\\n87 10337\\n88 10458\\n89 10579\\n90 10700\\n91 10821\\n92 10942\\n93 11063\\n94 11184\\",
        "num_ids_2": 61,
        "num_ids_4": 150
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1.016666667\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1.016666667\\nmeasurement error\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\\n\") == \"1.016666667\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1 61') == '1.016666667'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1.016666667', \"Test Case Failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1.016666667, \"Solution does not pass\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.016666667\", \"Incorrect Output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1.016666667, \"Your solution is incorrect. The output should be 1.016666667\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'CALGARY'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"CPMCRYY\\nALBERTA\") == \"CALGARY\"\nassert solution(stdin=\"AAAAAAAAA\") == \"AAAAAAAAA\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\", \"Incorrect Output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"\n\nfrom collections import Counter",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\", \"Solution should return 'CALGARY', but got '{}'.\".format(solution(\"CPMCRYY\"))\nassert solution(\"ALBERTA\") == \"CALGARY\", \"Solution should return 'CALGARY', but got '{}'.\".format(solution(\"ALBERTA\"))",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == \"3\" # Test 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BC\") == \"2\"\nassert solution(\"CA\") == \"1\"\nassert solution(\"ABCD\") == \"3\"\nassert solution(\"XABC\") == \"1\"\nassert solution(\"ABCDABC\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == \"3\", \"The function should return '3' for the given example.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\", \"Expected result: 3\"\nassert solution(\"AC\") == \"2\", \"Expected result: 2\"\nassert solution(\"BC\") == \"1\", \"Expected result: 1\"\nassert solution(\"CB\") == \"2\", \"Expected result: 2\"\nassert solution(\"DC\") == \"3\", \"Expected result: 3\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == 3, \"Solution should return 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == 3, \"Incorrect output. The solution should return 3.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"3\" # Kornislav can enclose a rectangle with its walk\nassert solution(\"5 6 7 8\") == \"2\" # Kornislav can enclose a rectangle with its walk\nassert solution(\"9 10 11 12\") == \"5\" # Kornislav can enclose a rectangle with its walk\nassert solution(\"13 14 15 16\") == \"6\" # Kornislav can enclose a rectangle with its walk\nassert solution(\"17 18 19 20\") == \"9\" # Kornislav can enclose a rectangle with its walk\nassert solution(\"21 22 23 24\") == \"8\" # Kornislav can enclose a rectangle with its walk",
        "num_ids_2": 58,
        "num_ids_4": 123
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3\\n', \"Output should be 3\"\nassert solution('1 2 4 3') == '10\\n', \"Output should be 10\"\nassert solution('5 5 5 5') == '0\\n', \"Output should be 0\"\nassert solution('1 1 1 1') == '1\\n', \"Output should be 1\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"3\" # Test Case 1\nassert solution(\"5 6 7 8\") == \"12\" # Test Case 2\nassert solution(\"1 2 3 4 5\") == \"12\" # Test Case 3\nassert solution(\"2 1 100 100\") == \"400\" # Test Case 4\nassert solution(\"100 100 100 100\") == \"400\" # Test Case 5",
        "num_ids_2": 43,
        "num_ids_4": 94
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"3\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"3 2 1 4\") == \"6\"\nassert solution(\"1 2 1 4\") == \"6\"\nassert solution(\"1 2 3 1\") == \"12\"\nassert solution(\"1 2 1 2\") == \"12\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"The largest area the turtle can enclose with its walk is 3.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"103 27\") == 4, \"Your solution is not correct. It should return 4.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103 27\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(103 27) == 4, \"The minimum number of operations needed to transform 103 to 27 is 4.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} => {output}\"\nfor a, b in [(103, 27), (234, 567)]:\n    assert solution(f\"{a} {b}\") == f\"{min(operations)}\", f\"Test failed: {a} {b} => {min(operations)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103 27\") == \"4\", \"Test 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"103 27\") == 4, \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"120 30\") == \"5\"\nassert solution(\"200 200\") == \"0\"\nassert solution(\"400 500\") == \"2\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"20 10\") == \"3\"\nassert solution(\"5 5\") == \"0\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4' # your code goes here",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"103 27\") == 4, \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    }
]